

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 13 13:32:30 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   132                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1,group=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 1.45 (B)
   205                           ; Generated 30/01/2018 GMT
   206                           ; 
   207                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18LF67K40 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239                           	psect	idataBANK0
   240  01B31C                     __pidataBANK0:
   241                           	opt stack 0
   242                           
   243                           ;initializer for _dimming_period
   244  01B31C  7FEE               	dw	32750
   245                           
   246                           ;initializer for _TRIAC_Firing_Angle
   247                           ;main.c: 74: volatile double FVR_ADC_Result;
   248                           ;main.c: 75: volatile double AVSS_ADC_Result;
   249                           ;main.c: 76: volatile double ADC_Result_Scaling;
   250                           ;main.c: 77: volatile double POS3P3_ADC_Result;
   251                           ;main.c: 78: volatile double POS12_ADC_Result;
   252                           ;main.c: 79: volatile double Temp_ADC_Result;
   253                           ;main.c: 80: volatile double Temp_ADC_Offset = 612.085;
   254                           ;main.c: 81: double Vpk_const = 169.7056274847714;
   255                           ;main.c: 82: volatile double Vpk;
   256                           ;main.c: 83: volatile double Ipk;
   257                           ;main.c: 84: volatile double Imeas;
   258                           ;main.c: 85: double Irms_offset = -0.113;
   259  01B31E  F5C3               	dw	62915
   260  01B320  3FC8               	dw	16328
   261                           
   262                           	psect	idataBANK2
   263  01AF80                     __pidataBANK2:
   264                           	opt stack 0
   265                           
   266                           ;initializer for getCauseOfResetString@strings
   267  01AF80  72                 	db	low STR_179
   268  01AF81  FD                 	db	high STR_179
   269  01AF82  E2                 	db	low STR_180
   270  01AF83  FD                 	db	high STR_180
   271  01AF84  82                 	db	low STR_181
   272  01AF85  FD                 	db	high STR_181
   273  01AF86  A0                 	db	low STR_182
   274  01AF87  FC                 	db	high STR_182
   275  01AF88  13                 	db	low (STR_184+9)
   276  01AF89  F8                 	db	high (STR_184+9)
   277  01AF8A  0A                 	db	low STR_184
   278  01AF8B  F8                 	db	high STR_184
   279  01AF8C  56                 	db	low STR_185
   280  01AF8D  FB                 	db	high STR_185
   281  01AF8E  4D                 	db	low STR_186
   282  01AF8F  FC                 	db	high STR_186
   283  01AF90  37                 	db	low STR_187
   284  01AF91  FC                 	db	high STR_187
   285                           
   286                           ;initializer for getDeviceIDString@F17550
   287  01AF92  F8                 	db	low STR_176
   288  01AF93  FE                 	db	high STR_176
   289  01AF94  90                 	db	low STR_177
   290  01AF95  FE                 	db	high STR_177
   291  01AF96  6A                 	db	low STR_178
   292  01AF97  FF                 	db	high STR_178
   293                           
   294                           ;initializer for _Irms_offset
   295  01AF98  6C8B               	dw	27787
   296  01AF9A  BDE7               	dw	48615
   297                           
   298                           ;initializer for _Vpk_const
   299                           ;main.c: 74: volatile double FVR_ADC_Result;
   300                           ;main.c: 75: volatile double AVSS_ADC_Result;
   301                           ;main.c: 76: volatile double ADC_Result_Scaling;
   302                           ;main.c: 77: volatile double POS3P3_ADC_Result;
   303                           ;main.c: 78: volatile double POS12_ADC_Result;
   304                           ;main.c: 79: volatile double Temp_ADC_Result;
   305                           ;main.c: 80: volatile double Temp_ADC_Offset = 612.085;
   306  01AF9C  B4A4               	dw	46244
   307  01AF9E  4329               	dw	17193
   308                           
   309                           ;initializer for _Temp_ADC_Offset
   310                           ;main.c: 74: volatile double FVR_ADC_Result;
   311                           ;main.c: 75: volatile double AVSS_ADC_Result;
   312                           ;main.c: 76: volatile double ADC_Result_Scaling;
   313                           ;main.c: 77: volatile double POS3P3_ADC_Result;
   314                           ;main.c: 78: volatile double POS12_ADC_Result;
   315                           ;main.c: 79: volatile double Temp_ADC_Result;
   316  01AFA0  0571               	dw	1393
   317  01AFA2  4419               	dw	17433
   318                           
   319                           ;initializer for _next_channel
   320  01AFA4  3C                 	db	60
   321                           
   322                           	psect	mediumconst
   323  00CEA2                     __pmediumconst:
   324                           	opt stack 0
   325  00CEA2  00                 	db	0
   326  00CEA3                     __powers_:
   327                           	opt stack 0
   328  00CEA3  0000               	dw	0
   329  00CEA5  3F80               	dw	16256
   330  00CEA7  0000               	dw	0
   331  00CEA9  4120               	dw	16672
   332  00CEAB  0000               	dw	0
   333  00CEAD  42C8               	dw	17096
   334  00CEAF  0000               	dw	0
   335  00CEB1  447A               	dw	17530
   336  00CEB3  4000               	dw	16384
   337  00CEB5  461C               	dw	17948
   338  00CEB7  5000               	dw	20480
   339  00CEB9  47C3               	dw	18371
   340  00CEBB  2400               	dw	9216
   341  00CEBD  4974               	dw	18804
   342  00CEBF  9680               	dw	38528
   343  00CEC1  4B18               	dw	19224
   344  00CEC3  BC20               	dw	48160
   345  00CEC5  4CBE               	dw	19646
   346  00CEC7  6B28               	dw	27432
   347  00CEC9  4E6E               	dw	20078
   348  00CECB  02F9               	dw	761
   349  00CECD  5015               	dw	20501
   350  00CECF  78EC               	dw	30956
   351  00CED1  60AD               	dw	24749
   352  00CED3  F2CA               	dw	62154
   353  00CED5  7149               	dw	29001
   354  00CED7                     __end_of__powers_:
   355                           	opt stack 0
   356  00CED7                     __npowers_:
   357                           	opt stack 0
   358  00CED7  0000               	dw	0
   359  00CED9  3F80               	dw	16256
   360  00CEDB  CCCD               	dw	52429
   361  00CEDD  3DCC               	dw	15820
   362  00CEDF  D70A               	dw	55050
   363  00CEE1  3C23               	dw	15395
   364  00CEE3  126F               	dw	4719
   365  00CEE5  3A83               	dw	14979
   366  00CEE7  B717               	dw	46871
   367  00CEE9  38D1               	dw	14545
   368  00CEEB  C5AC               	dw	50604
   369  00CEED  3727               	dw	14119
   370  00CEEF  37BD               	dw	14269
   371  00CEF1  3586               	dw	13702
   372  00CEF3  BF95               	dw	49045
   373  00CEF5  33D6               	dw	13270
   374  00CEF7  CC77               	dw	52343
   375  00CEF9  322B               	dw	12843
   376  00CEFB  705F               	dw	28767
   377  00CEFD  3089               	dw	12425
   378  00CEFF  E6FF               	dw	59135
   379  00CF01  2EDB               	dw	11995
   380  00CF03  E508               	dw	58632
   381  00CF05  1E3C               	dw	7740
   382  00CF07  4260               	dw	16992
   383  00CF09  0DA2               	dw	3490
   384  00CF0B                     __end_of__npowers_:
   385                           	opt stack 0
   386  00CF0B                     _dpowers:
   387                           	opt stack 0
   388  00CF0B  0001               	dw	1
   389  00CF0D  0000               	dw	0
   390  00CF0F  000A               	dw	10
   391  00CF11  0000               	dw	0
   392  00CF13  0064               	dw	100
   393  00CF15  0000               	dw	0
   394  00CF17  03E8               	dw	1000
   395  00CF19  0000               	dw	0
   396  00CF1B  2710               	dw	10000
   397  00CF1D  0000               	dw	0
   398  00CF1F  86A0               	dw	34464
   399  00CF21  0001               	dw	1
   400  00CF23  4240               	dw	16960
   401  00CF25  000F               	dw	15
   402  00CF27  9680               	dw	38528
   403  00CF29  0098               	dw	152
   404  00CF2B  E100               	dw	57600
   405  00CF2D  05F5               	dw	1525
   406  00CF2F  CA00               	dw	51712
   407  00CF31  3B9A               	dw	15258
   408  00CF33                     __end_of_dpowers:
   409                           	opt stack 0
   410  00CF33                     _hexpowers:
   411                           	opt stack 0
   412  00CF33  0001               	dw	1
   413  00CF35  0000               	dw	0
   414  00CF37  0010               	dw	16
   415  00CF39  0000               	dw	0
   416  00CF3B  0100               	dw	256
   417  00CF3D  0000               	dw	0
   418  00CF3F  1000               	dw	4096
   419  00CF41  0000               	dw	0
   420  00CF43  0000               	dw	0
   421  00CF45  0001               	dw	1
   422  00CF47  0000               	dw	0
   423  00CF49  0010               	dw	16
   424  00CF4B  0000               	dw	0
   425  00CF4D  0100               	dw	256
   426  00CF4F  0000               	dw	0
   427  00CF51  1000               	dw	4096
   428  00CF53                     __end_of_hexpowers:
   429                           	opt stack 0
   430  00CF53                     _max_FVR_ADC_Result_address:
   431                           	opt stack 0
   432  00CF53  0014               	dw	20
   433  00CF55                     __end_of_max_FVR_ADC_Result_address:
   434                           	opt stack 0
   435  00CF55                     _max_Temp_ADC_Result_address:
   436                           	opt stack 0
   437  00CF55  0010               	dw	16
   438  00CF57                     __end_of_max_Temp_ADC_Result_address:
   439                           	opt stack 0
   440  00CF57                     _max_POS12_ADC_Result_address:
   441                           	opt stack 0
   442  00CF57  000C               	dw	12
   443  00CF59                     __end_of_max_POS12_ADC_Result_address:
   444                           	opt stack 0
   445  00CF59                     _max_POS3P3_ADC_Result_address:
   446                           	opt stack 0
   447  00CF59  0008               	dw	8
   448  00CF5B                     __end_of_max_POS3P3_ADC_Result_address:
   449                           	opt stack 0
   450  00CF5B                     _max_Power_address:
   451                           	opt stack 0
   452  00CF5B  0004               	dw	4
   453  00CF5D                     __end_of_max_Power_address:
   454                           	opt stack 0
   455  00CF5D                     _max_Irms_address:
   456                           	opt stack 0
   457  00CF5D  0000               	dw	0
   458  00CF5F                     __end_of_max_Irms_address:
   459                           	opt stack 0
   460  00CF5F                     _Total_Energy_address:
   461                           	opt stack 0
   462  00CF5F  0018               	dw	24
   463  00CF61                     __end_of_Total_Energy_address:
   464                           	opt stack 0
   465  00CF61                     _OledFont:
   466                           	opt stack 0
   467  00CF61  00                 	db	0
   468  00CF62  00                 	db	0
   469  00CF63  00                 	db	0
   470  00CF64  00                 	db	0
   471  00CF65  00                 	db	0
   472  00CF66  00                 	db	0
   473  00CF67  00                 	db	0
   474  00CF68  00                 	db	0
   475  00CF69  00                 	db	0
   476  00CF6A  00                 	db	0
   477  00CF6B  5F                 	db	95
   478  00CF6C  00                 	db	0
   479  00CF6D  00                 	db	0
   480  00CF6E  00                 	db	0
   481  00CF6F  00                 	db	0
   482  00CF70  00                 	db	0
   483  00CF71  00                 	db	0
   484  00CF72  00                 	db	0
   485  00CF73  07                 	db	7
   486  00CF74  00                 	db	0
   487  00CF75  07                 	db	7
   488  00CF76  00                 	db	0
   489  00CF77  00                 	db	0
   490  00CF78  00                 	db	0
   491  00CF79  00                 	db	0
   492  00CF7A  14                 	db	20
   493  00CF7B  7F                 	db	127
   494  00CF7C  14                 	db	20
   495  00CF7D  7F                 	db	127
   496  00CF7E  14                 	db	20
   497  00CF7F  00                 	db	0
   498  00CF80  00                 	db	0
   499  00CF81  00                 	db	0
   500  00CF82  24                 	db	36
   501  00CF83  2A                 	db	42
   502  00CF84  7F                 	db	127
   503  00CF85  2A                 	db	42
   504  00CF86  12                 	db	18
   505  00CF87  00                 	db	0
   506  00CF88  00                 	db	0
   507  00CF89  00                 	db	0
   508  00CF8A  23                 	db	35
   509  00CF8B  13                 	db	19
   510  00CF8C  08                 	db	8
   511  00CF8D  64                 	db	100
   512  00CF8E  62                 	db	98
   513  00CF8F  00                 	db	0
   514  00CF90  00                 	db	0
   515  00CF91  00                 	db	0
   516  00CF92  36                 	db	54
   517  00CF93  49                 	db	73
   518  00CF94  55                 	db	85
   519  00CF95  22                 	db	34
   520  00CF96  50                 	db	80
   521  00CF97  00                 	db	0
   522  00CF98  00                 	db	0
   523  00CF99  00                 	db	0
   524  00CF9A  00                 	db	0
   525  00CF9B  05                 	db	5
   526  00CF9C  03                 	db	3
   527  00CF9D  00                 	db	0
   528  00CF9E  00                 	db	0
   529  00CF9F  00                 	db	0
   530  00CFA0  00                 	db	0
   531  00CFA1  00                 	db	0
   532  00CFA2  1C                 	db	28
   533  00CFA3  22                 	db	34
   534  00CFA4  41                 	db	65
   535  00CFA5  00                 	db	0
   536  00CFA6  00                 	db	0
   537  00CFA7  00                 	db	0
   538  00CFA8  00                 	db	0
   539  00CFA9  00                 	db	0
   540  00CFAA  41                 	db	65
   541  00CFAB  22                 	db	34
   542  00CFAC  1C                 	db	28
   543  00CFAD  00                 	db	0
   544  00CFAE  00                 	db	0
   545  00CFAF  00                 	db	0
   546  00CFB0  00                 	db	0
   547  00CFB1  00                 	db	0
   548  00CFB2  08                 	db	8
   549  00CFB3  2A                 	db	42
   550  00CFB4  1C                 	db	28
   551  00CFB5  2A                 	db	42
   552  00CFB6  08                 	db	8
   553  00CFB7  00                 	db	0
   554  00CFB8  00                 	db	0
   555  00CFB9  00                 	db	0
   556  00CFBA  08                 	db	8
   557  00CFBB  08                 	db	8
   558  00CFBC  3E                 	db	62
   559  00CFBD  08                 	db	8
   560  00CFBE  08                 	db	8
   561  00CFBF  00                 	db	0
   562  00CFC0  00                 	db	0
   563  00CFC1  00                 	db	0
   564  00CFC2  A0                 	db	160
   565  00CFC3  60                 	db	96
   566  00CFC4  00                 	db	0
   567  00CFC5  00                 	db	0
   568  00CFC6  00                 	db	0
   569  00CFC7  00                 	db	0
   570  00CFC8  00                 	db	0
   571  00CFC9  00                 	db	0
   572  00CFCA  08                 	db	8
   573  00CFCB  08                 	db	8
   574  00CFCC  08                 	db	8
   575  00CFCD  08                 	db	8
   576  00CFCE  08                 	db	8
   577  00CFCF  00                 	db	0
   578  00CFD0  00                 	db	0
   579  00CFD1  00                 	db	0
   580  00CFD2  60                 	db	96
   581  00CFD3  60                 	db	96
   582  00CFD4  00                 	db	0
   583  00CFD5  00                 	db	0
   584  00CFD6  00                 	db	0
   585  00CFD7  00                 	db	0
   586  00CFD8  00                 	db	0
   587  00CFD9  00                 	db	0
   588  00CFDA  20                 	db	32
   589  00CFDB  10                 	db	16
   590  00CFDC  08                 	db	8
   591  00CFDD  04                 	db	4
   592  00CFDE  02                 	db	2
   593  00CFDF  00                 	db	0
   594  00CFE0  00                 	db	0
   595  00CFE1  00                 	db	0
   596  00CFE2  3E                 	db	62
   597  00CFE3  51                 	db	81
   598  00CFE4  49                 	db	73
   599  00CFE5  45                 	db	69
   600  00CFE6  3E                 	db	62
   601  00CFE7  00                 	db	0
   602  00CFE8  00                 	db	0
   603  00CFE9  00                 	db	0
   604  00CFEA  00                 	db	0
   605  00CFEB  42                 	db	66
   606  00CFEC  7F                 	db	127
   607  00CFED  40                 	db	64
   608  00CFEE  00                 	db	0
   609  00CFEF  00                 	db	0
   610  00CFF0  00                 	db	0
   611  00CFF1  00                 	db	0
   612  00CFF2  62                 	db	98
   613  00CFF3  51                 	db	81
   614  00CFF4  49                 	db	73
   615  00CFF5  49                 	db	73
   616  00CFF6  46                 	db	70
   617  00CFF7  00                 	db	0
   618  00CFF8  00                 	db	0
   619  00CFF9  00                 	db	0
   620  00CFFA  22                 	db	34
   621  00CFFB  41                 	db	65
   622  00CFFC  49                 	db	73
   623  00CFFD  49                 	db	73
   624  00CFFE  36                 	db	54
   625  00CFFF  00                 	db	0
   626  00D000  00                 	db	0
   627  00D001  00                 	db	0
   628  00D002  18                 	db	24
   629  00D003  14                 	db	20
   630  00D004  12                 	db	18
   631  00D005  7F                 	db	127
   632  00D006  10                 	db	16
   633  00D007  00                 	db	0
   634  00D008  00                 	db	0
   635  00D009  00                 	db	0
   636  00D00A  27                 	db	39
   637  00D00B  45                 	db	69
   638  00D00C  45                 	db	69
   639  00D00D  45                 	db	69
   640  00D00E  39                 	db	57
   641  00D00F  00                 	db	0
   642  00D010  00                 	db	0
   643  00D011  00                 	db	0
   644  00D012  3C                 	db	60
   645  00D013  4A                 	db	74
   646  00D014  49                 	db	73
   647  00D015  49                 	db	73
   648  00D016  30                 	db	48
   649  00D017  00                 	db	0
   650  00D018  00                 	db	0
   651  00D019  00                 	db	0
   652  00D01A  01                 	db	1
   653  00D01B  71                 	db	113
   654  00D01C  09                 	db	9
   655  00D01D  05                 	db	5
   656  00D01E  03                 	db	3
   657  00D01F  00                 	db	0
   658  00D020  00                 	db	0
   659  00D021  00                 	db	0
   660  00D022  36                 	db	54
   661  00D023  49                 	db	73
   662  00D024  49                 	db	73
   663  00D025  49                 	db	73
   664  00D026  36                 	db	54
   665  00D027  00                 	db	0
   666  00D028  00                 	db	0
   667  00D029  00                 	db	0
   668  00D02A  06                 	db	6
   669  00D02B  49                 	db	73
   670  00D02C  49                 	db	73
   671  00D02D  29                 	db	41
   672  00D02E  1E                 	db	30
   673  00D02F  00                 	db	0
   674  00D030  00                 	db	0
   675  00D031  00                 	db	0
   676  00D032  00                 	db	0
   677  00D033  36                 	db	54
   678  00D034  36                 	db	54
   679  00D035  00                 	db	0
   680  00D036  00                 	db	0
   681  00D037  00                 	db	0
   682  00D038  00                 	db	0
   683  00D039  00                 	db	0
   684  00D03A  00                 	db	0
   685  00D03B  AC                 	db	172
   686  00D03C  6C                 	db	108
   687  00D03D  00                 	db	0
   688  00D03E  00                 	db	0
   689  00D03F  00                 	db	0
   690  00D040  00                 	db	0
   691  00D041  00                 	db	0
   692  00D042  08                 	db	8
   693  00D043  14                 	db	20
   694  00D044  22                 	db	34
   695  00D045  41                 	db	65
   696  00D046  00                 	db	0
   697  00D047  00                 	db	0
   698  00D048  00                 	db	0
   699  00D049  00                 	db	0
   700  00D04A  14                 	db	20
   701  00D04B  14                 	db	20
   702  00D04C  14                 	db	20
   703  00D04D  14                 	db	20
   704  00D04E  14                 	db	20
   705  00D04F  00                 	db	0
   706  00D050  00                 	db	0
   707  00D051  00                 	db	0
   708  00D052  41                 	db	65
   709  00D053  22                 	db	34
   710  00D054  14                 	db	20
   711  00D055  08                 	db	8
   712  00D056  00                 	db	0
   713  00D057  00                 	db	0
   714  00D058  00                 	db	0
   715  00D059  00                 	db	0
   716  00D05A  02                 	db	2
   717  00D05B  01                 	db	1
   718  00D05C  51                 	db	81
   719  00D05D  09                 	db	9
   720  00D05E  06                 	db	6
   721  00D05F  00                 	db	0
   722  00D060  00                 	db	0
   723  00D061  00                 	db	0
   724  00D062  32                 	db	50
   725  00D063  49                 	db	73
   726  00D064  79                 	db	121
   727  00D065  41                 	db	65
   728  00D066  3E                 	db	62
   729  00D067  00                 	db	0
   730  00D068  00                 	db	0
   731  00D069  00                 	db	0
   732  00D06A  7E                 	db	126
   733  00D06B  09                 	db	9
   734  00D06C  09                 	db	9
   735  00D06D  09                 	db	9
   736  00D06E  7E                 	db	126
   737  00D06F  00                 	db	0
   738  00D070  00                 	db	0
   739  00D071  00                 	db	0
   740  00D072  7F                 	db	127
   741  00D073  49                 	db	73
   742  00D074  49                 	db	73
   743  00D075  49                 	db	73
   744  00D076  36                 	db	54
   745  00D077  00                 	db	0
   746  00D078  00                 	db	0
   747  00D079  00                 	db	0
   748  00D07A  3E                 	db	62
   749  00D07B  41                 	db	65
   750  00D07C  41                 	db	65
   751  00D07D  41                 	db	65
   752  00D07E  22                 	db	34
   753  00D07F  00                 	db	0
   754  00D080  00                 	db	0
   755  00D081  00                 	db	0
   756  00D082  7F                 	db	127
   757  00D083  41                 	db	65
   758  00D084  41                 	db	65
   759  00D085  22                 	db	34
   760  00D086  1C                 	db	28
   761  00D087  00                 	db	0
   762  00D088  00                 	db	0
   763  00D089  00                 	db	0
   764  00D08A  7F                 	db	127
   765  00D08B  49                 	db	73
   766  00D08C  49                 	db	73
   767  00D08D  49                 	db	73
   768  00D08E  41                 	db	65
   769  00D08F  00                 	db	0
   770  00D090  00                 	db	0
   771  00D091  00                 	db	0
   772  00D092  7F                 	db	127
   773  00D093  09                 	db	9
   774  00D094  09                 	db	9
   775  00D095  09                 	db	9
   776  00D096  01                 	db	1
   777  00D097  00                 	db	0
   778  00D098  00                 	db	0
   779  00D099  00                 	db	0
   780  00D09A  3E                 	db	62
   781  00D09B  41                 	db	65
   782  00D09C  41                 	db	65
   783  00D09D  51                 	db	81
   784  00D09E  72                 	db	114
   785  00D09F  00                 	db	0
   786  00D0A0  00                 	db	0
   787  00D0A1  00                 	db	0
   788  00D0A2  7F                 	db	127
   789  00D0A3  08                 	db	8
   790  00D0A4  08                 	db	8
   791  00D0A5  08                 	db	8
   792  00D0A6  7F                 	db	127
   793  00D0A7  00                 	db	0
   794  00D0A8  00                 	db	0
   795  00D0A9  00                 	db	0
   796  00D0AA  41                 	db	65
   797  00D0AB  7F                 	db	127
   798  00D0AC  41                 	db	65
   799  00D0AD  00                 	db	0
   800  00D0AE  00                 	db	0
   801  00D0AF  00                 	db	0
   802  00D0B0  00                 	db	0
   803  00D0B1  00                 	db	0
   804  00D0B2  20                 	db	32
   805  00D0B3  40                 	db	64
   806  00D0B4  41                 	db	65
   807  00D0B5  3F                 	db	63
   808  00D0B6  01                 	db	1
   809  00D0B7  00                 	db	0
   810  00D0B8  00                 	db	0
   811  00D0B9  00                 	db	0
   812  00D0BA  7F                 	db	127
   813  00D0BB  08                 	db	8
   814  00D0BC  14                 	db	20
   815  00D0BD  22                 	db	34
   816  00D0BE  41                 	db	65
   817  00D0BF  00                 	db	0
   818  00D0C0  00                 	db	0
   819  00D0C1  00                 	db	0
   820  00D0C2  7F                 	db	127
   821  00D0C3  40                 	db	64
   822  00D0C4  40                 	db	64
   823  00D0C5  40                 	db	64
   824  00D0C6  40                 	db	64
   825  00D0C7  00                 	db	0
   826  00D0C8  00                 	db	0
   827  00D0C9  00                 	db	0
   828  00D0CA  7F                 	db	127
   829  00D0CB  02                 	db	2
   830  00D0CC  0C                 	db	12
   831  00D0CD  02                 	db	2
   832  00D0CE  7F                 	db	127
   833  00D0CF  00                 	db	0
   834  00D0D0  00                 	db	0
   835  00D0D1  00                 	db	0
   836  00D0D2  7F                 	db	127
   837  00D0D3  04                 	db	4
   838  00D0D4  08                 	db	8
   839  00D0D5  10                 	db	16
   840  00D0D6  7F                 	db	127
   841  00D0D7  00                 	db	0
   842  00D0D8  00                 	db	0
   843  00D0D9  00                 	db	0
   844  00D0DA  3E                 	db	62
   845  00D0DB  41                 	db	65
   846  00D0DC  41                 	db	65
   847  00D0DD  41                 	db	65
   848  00D0DE  3E                 	db	62
   849  00D0DF  00                 	db	0
   850  00D0E0  00                 	db	0
   851  00D0E1  00                 	db	0
   852  00D0E2  7F                 	db	127
   853  00D0E3  09                 	db	9
   854  00D0E4  09                 	db	9
   855  00D0E5  09                 	db	9
   856  00D0E6  06                 	db	6
   857  00D0E7  00                 	db	0
   858  00D0E8  00                 	db	0
   859  00D0E9  00                 	db	0
   860  00D0EA  3E                 	db	62
   861  00D0EB  41                 	db	65
   862  00D0EC  51                 	db	81
   863  00D0ED  21                 	db	33
   864  00D0EE  5E                 	db	94
   865  00D0EF  00                 	db	0
   866  00D0F0  00                 	db	0
   867  00D0F1  00                 	db	0
   868  00D0F2  7F                 	db	127
   869  00D0F3  09                 	db	9
   870  00D0F4  19                 	db	25
   871  00D0F5  29                 	db	41
   872  00D0F6  46                 	db	70
   873  00D0F7  00                 	db	0
   874  00D0F8  00                 	db	0
   875  00D0F9  00                 	db	0
   876  00D0FA  26                 	db	38
   877  00D0FB  49                 	db	73
   878  00D0FC  49                 	db	73
   879  00D0FD  49                 	db	73
   880  00D0FE  46                 	db	70
   881  00D0FF  00                 	db	0
   882  00D100  00                 	db	0
   883  00D101  00                 	db	0
   884  00D102  01                 	db	1
   885  00D103  01                 	db	1
   886  00D104  7F                 	db	127
   887  00D105  01                 	db	1
   888  00D106  01                 	db	1
   889  00D107  00                 	db	0
   890  00D108  00                 	db	0
   891  00D109  00                 	db	0
   892  00D10A  3F                 	db	63
   893  00D10B  40                 	db	64
   894  00D10C  40                 	db	64
   895  00D10D  40                 	db	64
   896  00D10E  3F                 	db	63
   897  00D10F  00                 	db	0
   898  00D110  00                 	db	0
   899  00D111  00                 	db	0
   900  00D112  1F                 	db	31
   901  00D113  20                 	db	32
   902  00D114  40                 	db	64
   903  00D115  20                 	db	32
   904  00D116  1F                 	db	31
   905  00D117  00                 	db	0
   906  00D118  00                 	db	0
   907  00D119  00                 	db	0
   908  00D11A  3F                 	db	63
   909  00D11B  40                 	db	64
   910  00D11C  38                 	db	56
   911  00D11D  40                 	db	64
   912  00D11E  3F                 	db	63
   913  00D11F  00                 	db	0
   914  00D120  00                 	db	0
   915  00D121  00                 	db	0
   916  00D122  63                 	db	99
   917  00D123  14                 	db	20
   918  00D124  08                 	db	8
   919  00D125  14                 	db	20
   920  00D126  63                 	db	99
   921  00D127  00                 	db	0
   922  00D128  00                 	db	0
   923  00D129  00                 	db	0
   924  00D12A  03                 	db	3
   925  00D12B  04                 	db	4
   926  00D12C  78                 	db	120
   927  00D12D  04                 	db	4
   928  00D12E  03                 	db	3
   929  00D12F  00                 	db	0
   930  00D130  00                 	db	0
   931  00D131  00                 	db	0
   932  00D132  61                 	db	97
   933  00D133  51                 	db	81
   934  00D134  49                 	db	73
   935  00D135  45                 	db	69
   936  00D136  43                 	db	67
   937  00D137  00                 	db	0
   938  00D138  00                 	db	0
   939  00D139  00                 	db	0
   940  00D13A  7F                 	db	127
   941  00D13B  41                 	db	65
   942  00D13C  41                 	db	65
   943  00D13D  00                 	db	0
   944  00D13E  00                 	db	0
   945  00D13F  00                 	db	0
   946  00D140  00                 	db	0
   947  00D141  00                 	db	0
   948  00D142  02                 	db	2
   949  00D143  04                 	db	4
   950  00D144  08                 	db	8
   951  00D145  10                 	db	16
   952  00D146  20                 	db	32
   953  00D147  00                 	db	0
   954  00D148  00                 	db	0
   955  00D149  00                 	db	0
   956  00D14A  41                 	db	65
   957  00D14B  41                 	db	65
   958  00D14C  7F                 	db	127
   959  00D14D  00                 	db	0
   960  00D14E  00                 	db	0
   961  00D14F  00                 	db	0
   962  00D150  00                 	db	0
   963  00D151  00                 	db	0
   964  00D152  04                 	db	4
   965  00D153  02                 	db	2
   966  00D154  01                 	db	1
   967  00D155  02                 	db	2
   968  00D156  04                 	db	4
   969  00D157  00                 	db	0
   970  00D158  00                 	db	0
   971  00D159  00                 	db	0
   972  00D15A  80                 	db	128
   973  00D15B  80                 	db	128
   974  00D15C  80                 	db	128
   975  00D15D  80                 	db	128
   976  00D15E  80                 	db	128
   977  00D15F  00                 	db	0
   978  00D160  00                 	db	0
   979  00D161  00                 	db	0
   980  00D162  01                 	db	1
   981  00D163  02                 	db	2
   982  00D164  04                 	db	4
   983  00D165  00                 	db	0
   984  00D166  00                 	db	0
   985  00D167  00                 	db	0
   986  00D168  00                 	db	0
   987  00D169  00                 	db	0
   988  00D16A  20                 	db	32
   989  00D16B  54                 	db	84
   990  00D16C  54                 	db	84
   991  00D16D  54                 	db	84
   992  00D16E  78                 	db	120
   993  00D16F  00                 	db	0
   994  00D170  00                 	db	0
   995  00D171  00                 	db	0
   996  00D172  7F                 	db	127
   997  00D173  48                 	db	72
   998  00D174  44                 	db	68
   999  00D175  44                 	db	68
  1000  00D176  38                 	db	56
  1001  00D177  00                 	db	0
  1002  00D178  00                 	db	0
  1003  00D179  00                 	db	0
  1004  00D17A  38                 	db	56
  1005  00D17B  44                 	db	68
  1006  00D17C  44                 	db	68
  1007  00D17D  28                 	db	40
  1008  00D17E  00                 	db	0
  1009  00D17F  00                 	db	0
  1010  00D180  00                 	db	0
  1011  00D181  00                 	db	0
  1012  00D182  38                 	db	56
  1013  00D183  44                 	db	68
  1014  00D184  44                 	db	68
  1015  00D185  48                 	db	72
  1016  00D186  7F                 	db	127
  1017  00D187  00                 	db	0
  1018  00D188  00                 	db	0
  1019  00D189  00                 	db	0
  1020  00D18A  38                 	db	56
  1021  00D18B  54                 	db	84
  1022  00D18C  54                 	db	84
  1023  00D18D  54                 	db	84
  1024  00D18E  18                 	db	24
  1025  00D18F  00                 	db	0
  1026  00D190  00                 	db	0
  1027  00D191  00                 	db	0
  1028  00D192  08                 	db	8
  1029  00D193  7E                 	db	126
  1030  00D194  09                 	db	9
  1031  00D195  02                 	db	2
  1032  00D196  00                 	db	0
  1033  00D197  00                 	db	0
  1034  00D198  00                 	db	0
  1035  00D199  00                 	db	0
  1036  00D19A  18                 	db	24
  1037  00D19B  A4                 	db	164
  1038  00D19C  A4                 	db	164
  1039  00D19D  A4                 	db	164
  1040  00D19E  7C                 	db	124
  1041  00D19F  00                 	db	0
  1042  00D1A0  00                 	db	0
  1043  00D1A1  00                 	db	0
  1044  00D1A2  7F                 	db	127
  1045  00D1A3  08                 	db	8
  1046  00D1A4  04                 	db	4
  1047  00D1A5  04                 	db	4
  1048  00D1A6  78                 	db	120
  1049  00D1A7  00                 	db	0
  1050  00D1A8  00                 	db	0
  1051  00D1A9  00                 	db	0
  1052  00D1AA  00                 	db	0
  1053  00D1AB  7D                 	db	125
  1054  00D1AC  00                 	db	0
  1055  00D1AD  00                 	db	0
  1056  00D1AE  00                 	db	0
  1057  00D1AF  00                 	db	0
  1058  00D1B0  00                 	db	0
  1059  00D1B1  00                 	db	0
  1060  00D1B2  80                 	db	128
  1061  00D1B3  84                 	db	132
  1062  00D1B4  7D                 	db	125
  1063  00D1B5  00                 	db	0
  1064  00D1B6  00                 	db	0
  1065  00D1B7  00                 	db	0
  1066  00D1B8  00                 	db	0
  1067  00D1B9  00                 	db	0
  1068  00D1BA  7F                 	db	127
  1069  00D1BB  10                 	db	16
  1070  00D1BC  28                 	db	40
  1071  00D1BD  44                 	db	68
  1072  00D1BE  00                 	db	0
  1073  00D1BF  00                 	db	0
  1074  00D1C0  00                 	db	0
  1075  00D1C1  00                 	db	0
  1076  00D1C2  41                 	db	65
  1077  00D1C3  7F                 	db	127
  1078  00D1C4  40                 	db	64
  1079  00D1C5  00                 	db	0
  1080  00D1C6  00                 	db	0
  1081  00D1C7  00                 	db	0
  1082  00D1C8  00                 	db	0
  1083  00D1C9  00                 	db	0
  1084  00D1CA  7C                 	db	124
  1085  00D1CB  04                 	db	4
  1086  00D1CC  18                 	db	24
  1087  00D1CD  04                 	db	4
  1088  00D1CE  78                 	db	120
  1089  00D1CF  00                 	db	0
  1090  00D1D0  00                 	db	0
  1091  00D1D1  00                 	db	0
  1092  00D1D2  7C                 	db	124
  1093  00D1D3  08                 	db	8
  1094  00D1D4  04                 	db	4
  1095  00D1D5  7C                 	db	124
  1096  00D1D6  00                 	db	0
  1097  00D1D7  00                 	db	0
  1098  00D1D8  00                 	db	0
  1099  00D1D9  00                 	db	0
  1100  00D1DA  38                 	db	56
  1101  00D1DB  44                 	db	68
  1102  00D1DC  44                 	db	68
  1103  00D1DD  38                 	db	56
  1104  00D1DE  00                 	db	0
  1105  00D1DF  00                 	db	0
  1106  00D1E0  00                 	db	0
  1107  00D1E1  00                 	db	0
  1108  00D1E2  FC                 	db	252
  1109  00D1E3  24                 	db	36
  1110  00D1E4  24                 	db	36
  1111  00D1E5  18                 	db	24
  1112  00D1E6  00                 	db	0
  1113  00D1E7  00                 	db	0
  1114  00D1E8  00                 	db	0
  1115  00D1E9  00                 	db	0
  1116  00D1EA  18                 	db	24
  1117  00D1EB  24                 	db	36
  1118  00D1EC  24                 	db	36
  1119  00D1ED  FC                 	db	252
  1120  00D1EE  00                 	db	0
  1121  00D1EF  00                 	db	0
  1122  00D1F0  00                 	db	0
  1123  00D1F1  00                 	db	0
  1124  00D1F2  00                 	db	0
  1125  00D1F3  7C                 	db	124
  1126  00D1F4  08                 	db	8
  1127  00D1F5  04                 	db	4
  1128  00D1F6  00                 	db	0
  1129  00D1F7  00                 	db	0
  1130  00D1F8  00                 	db	0
  1131  00D1F9  00                 	db	0
  1132  00D1FA  48                 	db	72
  1133  00D1FB  54                 	db	84
  1134  00D1FC  54                 	db	84
  1135  00D1FD  24                 	db	36
  1136  00D1FE  00                 	db	0
  1137  00D1FF  00                 	db	0
  1138  00D200  00                 	db	0
  1139  00D201  00                 	db	0
  1140  00D202  04                 	db	4
  1141  00D203  7F                 	db	127
  1142  00D204  44                 	db	68
  1143  00D205  00                 	db	0
  1144  00D206  00                 	db	0
  1145  00D207  00                 	db	0
  1146  00D208  00                 	db	0
  1147  00D209  00                 	db	0
  1148  00D20A  3C                 	db	60
  1149  00D20B  40                 	db	64
  1150  00D20C  40                 	db	64
  1151  00D20D  7C                 	db	124
  1152  00D20E  00                 	db	0
  1153  00D20F  00                 	db	0
  1154  00D210  00                 	db	0
  1155  00D211  00                 	db	0
  1156  00D212  1C                 	db	28
  1157  00D213  20                 	db	32
  1158  00D214  40                 	db	64
  1159  00D215  20                 	db	32
  1160  00D216  1C                 	db	28
  1161  00D217  00                 	db	0
  1162  00D218  00                 	db	0
  1163  00D219  00                 	db	0
  1164  00D21A  3C                 	db	60
  1165  00D21B  40                 	db	64
  1166  00D21C  30                 	db	48
  1167  00D21D  40                 	db	64
  1168  00D21E  3C                 	db	60
  1169  00D21F  00                 	db	0
  1170  00D220  00                 	db	0
  1171  00D221  00                 	db	0
  1172  00D222  44                 	db	68
  1173  00D223  28                 	db	40
  1174  00D224  10                 	db	16
  1175  00D225  28                 	db	40
  1176  00D226  44                 	db	68
  1177  00D227  00                 	db	0
  1178  00D228  00                 	db	0
  1179  00D229  00                 	db	0
  1180  00D22A  1C                 	db	28
  1181  00D22B  A0                 	db	160
  1182  00D22C  A0                 	db	160
  1183  00D22D  7C                 	db	124
  1184  00D22E  00                 	db	0
  1185  00D22F  00                 	db	0
  1186  00D230  00                 	db	0
  1187  00D231  00                 	db	0
  1188  00D232  44                 	db	68
  1189  00D233  64                 	db	100
  1190  00D234  54                 	db	84
  1191  00D235  4C                 	db	76
  1192  00D236  44                 	db	68
  1193  00D237  00                 	db	0
  1194  00D238  00                 	db	0
  1195  00D239  00                 	db	0
  1196  00D23A  08                 	db	8
  1197  00D23B  36                 	db	54
  1198  00D23C  41                 	db	65
  1199  00D23D  00                 	db	0
  1200  00D23E  00                 	db	0
  1201  00D23F  00                 	db	0
  1202  00D240  00                 	db	0
  1203  00D241  00                 	db	0
  1204  00D242  00                 	db	0
  1205  00D243  7F                 	db	127
  1206  00D244  00                 	db	0
  1207  00D245  00                 	db	0
  1208  00D246  00                 	db	0
  1209  00D247  00                 	db	0
  1210  00D248  00                 	db	0
  1211  00D249  00                 	db	0
  1212  00D24A  41                 	db	65
  1213  00D24B  36                 	db	54
  1214  00D24C  08                 	db	8
  1215  00D24D  00                 	db	0
  1216  00D24E  00                 	db	0
  1217  00D24F  00                 	db	0
  1218  00D250  00                 	db	0
  1219  00D251  00                 	db	0
  1220  00D252  02                 	db	2
  1221  00D253  01                 	db	1
  1222  00D254  01                 	db	1
  1223  00D255  02                 	db	2
  1224  00D256  01                 	db	1
  1225  00D257  00                 	db	0
  1226  00D258  00                 	db	0
  1227  00D259  00                 	db	0
  1228  00D25A  02                 	db	2
  1229  00D25B  05                 	db	5
  1230  00D25C  05                 	db	5
  1231  00D25D  02                 	db	2
  1232  00D25E  00                 	db	0
  1233  00D25F  00                 	db	0
  1234  00D260  00                 	db	0
  1235  00D261                     __end_of_OledFont:
  1236                           	opt stack 0
  1237  00D261                     atan@coeff_a:
  1238                           	opt stack 0
  1239  00D261  3C06               	dw	15366
  1240  00D263  4204               	dw	16900
  1241  00D265  9F7D               	dw	40829
  1242  00D267  426A               	dw	17002
  1243  00D269  905C               	dw	36956
  1244  00D26B  4201               	dw	16897
  1245  00D26D  4D60               	dw	19808
  1246  00D26F  40BB               	dw	16571
  1247  00D271  EC51               	dw	60497
  1248  00D273  3E47               	dw	15943
  1249  00D275  8DDE               	dw	36318
  1250  00D277  BB1F               	dw	47903
  1251  00D279                     __end_ofatan@coeff_a:
  1252                           	opt stack 0
  1253  00D279                     sin@coeff_a:
  1254                           	opt stack 0
  1255  00D279  F3EC               	dw	62444
  1256  00D27B  484A               	dw	18506
  1257  00D27D  9535               	dw	38197
  1258  00D27F  C795               	dw	51093
  1259  00D281  C117               	dw	49431
  1260  00D283  45DC               	dw	17884
  1261  00D285  DBFD               	dw	56317
  1262  00D287  C36D               	dw	50029
  1263  00D289  B372               	dw	45938
  1264  00D28B  4033               	dw	16435
  1265  00D28D                     __end_ofsin@coeff_a:
  1266                           	opt stack 0
  1267  00D28D                     atan@coeff_b:
  1268                           	opt stack 0
  1269  00D28D  3C06               	dw	15366
  1270  00D28F  4204               	dw	16900
  1271  00D291  59C0               	dw	22976
  1272  00D293  428B               	dw	17035
  1273  00D295  0474               	dw	1140
  1274  00D297  4244               	dw	16964
  1275  00D299  9BF9               	dw	39929
  1276  00D29B  414F               	dw	16719
  1277  00D29D  0000               	dw	0
  1278  00D29F  3F80               	dw	16256
  1279  00D2A1                     __end_ofatan@coeff_b:
  1280                           	opt stack 0
  1281  00D2A1                     sin@coeff_b:
  1282                           	opt stack 0
  1283  00D2A1  342B               	dw	13355
  1284  00D2A3  4801               	dw	18433
  1285  00D2A5  9D7F               	dw	40319
  1286  00D2A7  45B0               	dw	17840
  1287  00D2A9  FFE7               	dw	65511
  1288  00D2AB  42D9               	dw	17113
  1289  00D2AD  0000               	dw	0
  1290  00D2AF  3F80               	dw	16256
  1291  00D2B1                     __end_ofsin@coeff_b:
  1292                           	opt stack 0
  1293  00D2B1                     STR_162:
  1294  00D2B1  4C                 	db	76	;'L'
  1295  00D2B2  69                 	db	105	;'i'
  1296  00D2B3  73                 	db	115	;'s'
  1297  00D2B4  74                 	db	116	;'t'
  1298  00D2B5  20                 	db	32
  1299  00D2B6  6F                 	db	111	;'o'
  1300  00D2B7  66                 	db	102	;'f'
  1301  00D2B8  20                 	db	32
  1302  00D2B9  61                 	db	97	;'a'
  1303  00D2BA  6C                 	db	108	;'l'
  1304  00D2BB  6C                 	db	108	;'l'
  1305  00D2BC  20                 	db	32
  1306  00D2BD  73                 	db	115	;'s'
  1307  00D2BE  75                 	db	117	;'u'
  1308  00D2BF  70                 	db	112	;'p'
  1309  00D2C0  70                 	db	112	;'p'
  1310  00D2C1  6F                 	db	111	;'o'
  1311  00D2C2  72                 	db	114	;'r'
  1312  00D2C3  74                 	db	116	;'t'
  1313  00D2C4  65                 	db	101	;'e'
  1314  00D2C5  64                 	db	100	;'d'
  1315  00D2C6  20                 	db	32
  1316  00D2C7  63                 	db	99	;'c'
  1317  00D2C8  6F                 	db	111	;'o'
  1318  00D2C9  6D                 	db	109	;'m'
  1319  00D2CA  6D                 	db	109	;'m'
  1320  00D2CB  61                 	db	97	;'a'
  1321  00D2CC  6E                 	db	110	;'n'
  1322  00D2CD  64                 	db	100	;'d'
  1323  00D2CE  73                 	db	115	;'s'
  1324  00D2CF  3A                 	db	58	;':'
  1325  00D2D0  0A                 	db	10
  1326  00D2D1  0D                 	db	13
  1327  00D2D2  44                 	db	68	;'D'
  1328  00D2D3  65                 	db	101	;'e'
  1329  00D2D4  76                 	db	118	;'v'
  1330  00D2D5  69                 	db	105	;'i'
  1331  00D2D6  63                 	db	99	;'c'
  1332  00D2D7  65                 	db	101	;'e'
  1333  00D2D8  20                 	db	32
  1334  00D2D9  43                 	db	67	;'C'
  1335  00D2DA  6F                 	db	111	;'o'
  1336  00D2DB  6E                 	db	110	;'n'
  1337  00D2DC  74                 	db	116	;'t'
  1338  00D2DD  72                 	db	114	;'r'
  1339  00D2DE  6F                 	db	111	;'o'
  1340  00D2DF  6C                 	db	108	;'l'
  1341  00D2E0  20                 	db	32
  1342  00D2E1  43                 	db	67	;'C'
  1343  00D2E2  6F                 	db	111	;'o'
  1344  00D2E3  6D                 	db	109	;'m'
  1345  00D2E4  6D                 	db	109	;'m'
  1346  00D2E5  61                 	db	97	;'a'
  1347  00D2E6  6E                 	db	110	;'n'
  1348  00D2E7  64                 	db	100	;'d'
  1349  00D2E8  73                 	db	115	;'s'
  1350  00D2E9  3A                 	db	58	;':'
  1351  00D2EA  20                 	db	32
  1352  00D2EB  43                 	db	67	;'C'
  1353  00D2EC  6F                 	db	111	;'o'
  1354  00D2ED  6D                 	db	109	;'m'
  1355  00D2EE  6D                 	db	109	;'m'
  1356  00D2EF  61                 	db	97	;'a'
  1357  00D2F0  6E                 	db	110	;'n'
  1358  00D2F1  64                 	db	100	;'d'
  1359  00D2F2  73                 	db	115	;'s'
  1360  00D2F3  20                 	db	32
  1361  00D2F4  74                 	db	116	;'t'
  1362  00D2F5  6F                 	db	111	;'o'
  1363  00D2F6  20                 	db	32
  1364  00D2F7  76                 	db	118	;'v'
  1365  00D2F8  69                 	db	105	;'i'
  1366  00D2F9  65                 	db	101	;'e'
  1367  00D2FA  77                 	db	119	;'w'
  1368  00D2FB  20                 	db	32
  1369  00D2FC  61                 	db	97	;'a'
  1370  00D2FD  6E                 	db	110	;'n'
  1371  00D2FE  64                 	db	100	;'d'
  1372  00D2FF  20                 	db	32
  1373  00D300  63                 	db	99	;'c'
  1374  00D301  6F                 	db	111	;'o'
  1375  00D302  6E                 	db	110	;'n'
  1376  00D303  74                 	db	116	;'t'
  1377  00D304  72                 	db	114	;'r'
  1378  00D305  6F                 	db	111	;'o'
  1379  00D306  6C                 	db	108	;'l'
  1380  00D307  20                 	db	32
  1381  00D308  6C                 	db	108	;'l'
  1382  00D309  6F                 	db	111	;'o'
  1383  00D30A  77                 	db	119	;'w'
  1384  00D30B  20                 	db	32
  1385  00D30C  6C                 	db	108	;'l'
  1386  00D30D  65                 	db	101	;'e'
  1387  00D30E  76                 	db	118	;'v'
  1388  00D30F  65                 	db	101	;'e'
  1389  00D310  6C                 	db	108	;'l'
  1390  00D311  20                 	db	32
  1391  00D312  73                 	db	115	;'s'
  1392  00D313  79                 	db	121	;'y'
  1393  00D314  73                 	db	115	;'s'
  1394  00D315  74                 	db	116	;'t'
  1395  00D316  65                 	db	101	;'e'
  1396  00D317  6D                 	db	109	;'m'
  1397  00D318  20                 	db	32
  1398  00D319  66                 	db	102	;'f'
  1399  00D31A  75                 	db	117	;'u'
  1400  00D31B  6E                 	db	110	;'n'
  1401  00D31C  63                 	db	99	;'c'
  1402  00D31D  74                 	db	116	;'t'
  1403  00D31E  69                 	db	105	;'i'
  1404  00D31F  6F                 	db	111	;'o'
  1405  00D320  6E                 	db	110	;'n'
  1406  00D321  61                 	db	97	;'a'
  1407  00D322  6C                 	db	108	;'l'
  1408  00D323  69                 	db	105	;'i'
  1409  00D324  74                 	db	116	;'t'
  1410  00D325  79                 	db	121	;'y'
  1411  00D326  0A                 	db	10
  1412  00D327  0D                 	db	13
  1413  00D328  20                 	db	32
  1414  00D329  20                 	db	32
  1415  00D32A  20                 	db	32
  1416  00D32B  52                 	db	82	;'R'
  1417  00D32C  65                 	db	101	;'e'
  1418  00D32D  73                 	db	115	;'s'
  1419  00D32E  65                 	db	101	;'e'
  1420  00D32F  74                 	db	116	;'t'
  1421  00D330  3A                 	db	58	;':'
  1422  00D331  20                 	db	32
  1423  00D332  43                 	db	67	;'C'
  1424  00D333  6C                 	db	108	;'l'
  1425  00D334  65                 	db	101	;'e'
  1426  00D335  61                 	db	97	;'a'
  1427  00D336  72                 	db	114	;'r'
  1428  00D337  73                 	db	115	;'s'
  1429  00D338  20                 	db	32
  1430  00D339  74                 	db	116	;'t'
  1431  00D33A  68                 	db	104	;'h'
  1432  00D33B  65                 	db	101	;'e'
  1433  00D33C  20                 	db	32
  1434  00D33D  74                 	db	116	;'t'
  1435  00D33E  65                 	db	101	;'e'
  1436  00D33F  72                 	db	114	;'r'
  1437  00D340  6D                 	db	109	;'m'
  1438  00D341  69                 	db	105	;'i'
  1439  00D342  6E                 	db	110	;'n'
  1440  00D343  61                 	db	97	;'a'
  1441  00D344  6C                 	db	108	;'l'
  1442  00D345  20                 	db	32
  1443  00D346  61                 	db	97	;'a'
  1444  00D347  6E                 	db	110	;'n'
  1445  00D348  64                 	db	100	;'d'
  1446  00D349  20                 	db	32
  1447  00D34A  72                 	db	114	;'r'
  1448  00D34B  65                 	db	101	;'e'
  1449  00D34C  73                 	db	115	;'s'
  1450  00D34D  65                 	db	101	;'e'
  1451  00D34E  74                 	db	116	;'t'
  1452  00D34F  73                 	db	115	;'s'
  1453  00D350  20                 	db	32
  1454  00D351  74                 	db	116	;'t'
  1455  00D352  68                 	db	104	;'h'
  1456  00D353  65                 	db	101	;'e'
  1457  00D354  20                 	db	32
  1458  00D355  6D                 	db	109	;'m'
  1459  00D356  69                 	db	105	;'i'
  1460  00D357  63                 	db	99	;'c'
  1461  00D358  72                 	db	114	;'r'
  1462  00D359  6F                 	db	111	;'o'
  1463  00D35A  63                 	db	99	;'c'
  1464  00D35B  6F                 	db	111	;'o'
  1465  00D35C  6E                 	db	110	;'n'
  1466  00D35D  74                 	db	116	;'t'
  1467  00D35E  72                 	db	114	;'r'
  1468  00D35F  6F                 	db	111	;'o'
  1469  00D360  6C                 	db	108	;'l'
  1470  00D361  6C                 	db	108	;'l'
  1471  00D362  65                 	db	101	;'e'
  1472  00D363  72                 	db	114	;'r'
  1473  00D364  0A                 	db	10
  1474  00D365  0D                 	db	13
  1475  00D366  20                 	db	32
  1476  00D367  20                 	db	32
  1477  00D368  20                 	db	32
  1478  00D369  43                 	db	67	;'C'
  1479  00D36A  6C                 	db	108	;'l'
  1480  00D36B  65                 	db	101	;'e'
  1481  00D36C  61                 	db	97	;'a'
  1482  00D36D  72                 	db	114	;'r'
  1483  00D36E  3A                 	db	58	;':'
  1484  00D36F  20                 	db	32
  1485  00D370  43                 	db	67	;'C'
  1486  00D371  6C                 	db	108	;'l'
  1487  00D372  65                 	db	101	;'e'
  1488  00D373  61                 	db	97	;'a'
  1489  00D374  72                 	db	114	;'r'
  1490  00D375  73                 	db	115	;'s'
  1491  00D376  20                 	db	32
  1492  00D377  74                 	db	116	;'t'
  1493  00D378  68                 	db	104	;'h'
  1494  00D379  65                 	db	101	;'e'
  1495  00D37A  20                 	db	32
  1496  00D37B  74                 	db	116	;'t'
  1497  00D37C  65                 	db	101	;'e'
  1498  00D37D  72                 	db	114	;'r'
  1499  00D37E  6D                 	db	109	;'m'
  1500  00D37F  69                 	db	105	;'i'
  1501  00D380  6E                 	db	110	;'n'
  1502  00D381  61                 	db	97	;'a'
  1503  00D382  6C                 	db	108	;'l'
  1504  00D383  20                 	db	32
  1505  00D384  62                 	db	98	;'b'
  1506  00D385  75                 	db	117	;'u'
  1507  00D386  74                 	db	116	;'t'
  1508  00D387  20                 	db	32
  1509  00D388  64                 	db	100	;'d'
  1510  00D389  6F                 	db	111	;'o'
  1511  00D38A  65                 	db	101	;'e'
  1512  00D38B  73                 	db	115	;'s'
  1513  00D38C  6E                 	db	110	;'n'
  1514  00D38D  27                 	db	39
  1515  00D38E  74                 	db	116	;'t'
  1516  00D38F  20                 	db	32
  1517  00D390  72                 	db	114	;'r'
  1518  00D391  65                 	db	101	;'e'
  1519  00D392  73                 	db	115	;'s'
  1520  00D393  65                 	db	101	;'e'
  1521  00D394  74                 	db	116	;'t'
  1522  00D395  20                 	db	32
  1523  00D396  74                 	db	116	;'t'
  1524  00D397  68                 	db	104	;'h'
  1525  00D398  65                 	db	101	;'e'
  1526  00D399  20                 	db	32
  1527  00D39A  6D                 	db	109	;'m'
  1528  00D39B  69                 	db	105	;'i'
  1529  00D39C  63                 	db	99	;'c'
  1530  00D39D  72                 	db	114	;'r'
  1531  00D39E  6F                 	db	111	;'o'
  1532  00D39F  0A                 	db	10
  1533  00D3A0  0D                 	db	13
  1534  00D3A1  20                 	db	32
  1535  00D3A2  20                 	db	32
  1536  00D3A3  20                 	db	32
  1537  00D3A4  43                 	db	67	;'C'
  1538  00D3A5  61                 	db	97	;'a'
  1539  00D3A6  75                 	db	117	;'u'
  1540  00D3A7  73                 	db	115	;'s'
  1541  00D3A8  65                 	db	101	;'e'
  1542  00D3A9  20                 	db	32
  1543  00D3AA  6F                 	db	111	;'o'
  1544  00D3AB  66                 	db	102	;'f'
  1545  00D3AC  20                 	db	32
  1546  00D3AD  52                 	db	82	;'R'
  1547  00D3AE  65                 	db	101	;'e'
  1548  00D3AF  73                 	db	115	;'s'
  1549  00D3B0  65                 	db	101	;'e'
  1550  00D3B1  74                 	db	116	;'t'
  1551  00D3B2  3F                 	db	63	;'?'
  1552  00D3B3  3A                 	db	58	;':'
  1553  00D3B4  20                 	db	32
  1554  00D3B5  52                 	db	82	;'R'
  1555  00D3B6  65                 	db	101	;'e'
  1556  00D3B7  74                 	db	116	;'t'
  1557  00D3B8  75                 	db	117	;'u'
  1558  00D3B9  72                 	db	114	;'r'
  1559  00D3BA  6E                 	db	110	;'n'
  1560  00D3BB  73                 	db	115	;'s'
  1561  00D3BC  20                 	db	32
  1562  00D3BD  74                 	db	116	;'t'
  1563  00D3BE  68                 	db	104	;'h'
  1564  00D3BF  65                 	db	101	;'e'
  1565  00D3C0  20                 	db	32
  1566  00D3C1  63                 	db	99	;'c'
  1567  00D3C2  61                 	db	97	;'a'
  1568  00D3C3  75                 	db	117	;'u'
  1569  00D3C4  73                 	db	115	;'s'
  1570  00D3C5  65                 	db	101	;'e'
  1571  00D3C6  20                 	db	32
  1572  00D3C7  6F                 	db	111	;'o'
  1573  00D3C8  66                 	db	102	;'f'
  1574  00D3C9  20                 	db	32
  1575  00D3CA  74                 	db	116	;'t'
  1576  00D3CB  68                 	db	104	;'h'
  1577  00D3CC  65                 	db	101	;'e'
  1578  00D3CD  20                 	db	32
  1579  00D3CE  6D                 	db	109	;'m'
  1580  00D3CF  6F                 	db	111	;'o'
  1581  00D3D0  73                 	db	115	;'s'
  1582  00D3D1  74                 	db	116	;'t'
  1583  00D3D2  20                 	db	32
  1584  00D3D3  72                 	db	114	;'r'
  1585  00D3D4  65                 	db	101	;'e'
  1586  00D3D5  63                 	db	99	;'c'
  1587  00D3D6  65                 	db	101	;'e'
  1588  00D3D7  6E                 	db	110	;'n'
  1589  00D3D8  74                 	db	116	;'t'
  1590  00D3D9  20                 	db	32
  1591  00D3DA  64                 	db	100	;'d'
  1592  00D3DB  65                 	db	101	;'e'
  1593  00D3DC  76                 	db	118	;'v'
  1594  00D3DD  69                 	db	105	;'i'
  1595  00D3DE  63                 	db	99	;'c'
  1596  00D3DF  65                 	db	101	;'e'
  1597  00D3E0  20                 	db	32
  1598  00D3E1  72                 	db	114	;'r'
  1599  00D3E2  65                 	db	101	;'e'
  1600  00D3E3  73                 	db	115	;'s'
  1601  00D3E4  65                 	db	101	;'e'
  1602  00D3E5  74                 	db	116	;'t'
  1603  00D3E6  0A                 	db	10
  1604  00D3E7  0D                 	db	13
  1605  00D3E8  20                 	db	32
  1606  00D3E9  20                 	db	32
  1607  00D3EA  20                 	db	32
  1608  00D3EB  2A                 	db	42
  1609  00D3EC  49                 	db	73	;'I'
  1610  00D3ED  44                 	db	68	;'D'
  1611  00D3EE  4E                 	db	78	;'N'
  1612  00D3EF  3F                 	db	63	;'?'
  1613  00D3F0  3A                 	db	58	;':'
  1614  00D3F1  20                 	db	32
  1615  00D3F2  52                 	db	82	;'R'
  1616  00D3F3  65                 	db	101	;'e'
  1617  00D3F4  74                 	db	116	;'t'
  1618  00D3F5  75                 	db	117	;'u'
  1619  00D3F6  72                 	db	114	;'r'
  1620  00D3F7  6E                 	db	110	;'n'
  1621  00D3F8  73                 	db	115	;'s'
  1622  00D3F9  20                 	db	32
  1623  00D3FA  64                 	db	100	;'d'
  1624  00D3FB  65                 	db	101	;'e'
  1625  00D3FC  76                 	db	118	;'v'
  1626  00D3FD  69                 	db	105	;'i'
  1627  00D3FE  63                 	db	99	;'c'
  1628  00D3FF  65                 	db	101	;'e'
  1629  00D400  20                 	db	32
  1630  00D401  69                 	db	105	;'i'
  1631  00D402  64                 	db	100	;'d'
  1632  00D403  65                 	db	101	;'e'
  1633  00D404  6E                 	db	110	;'n'
  1634  00D405  74                 	db	116	;'t'
  1635  00D406  69                 	db	105	;'i'
  1636  00D407  66                 	db	102	;'f'
  1637  00D408  69                 	db	105	;'i'
  1638  00D409  63                 	db	99	;'c'
  1639  00D40A  61                 	db	97	;'a'
  1640  00D40B  74                 	db	116	;'t'
  1641  00D40C  69                 	db	105	;'i'
  1642  00D40D  6F                 	db	111	;'o'
  1643  00D40E  6E                 	db	110	;'n'
  1644  00D40F  20                 	db	32
  1645  00D410  73                 	db	115	;'s'
  1646  00D411  74                 	db	116	;'t'
  1647  00D412  72                 	db	114	;'r'
  1648  00D413  69                 	db	105	;'i'
  1649  00D414  6E                 	db	110	;'n'
  1650  00D415  67                 	db	103	;'g'
  1651  00D416  0A                 	db	10
  1652  00D417  0D                 	db	13
  1653  00D418  20                 	db	32
  1654  00D419  20                 	db	32
  1655  00D41A  20                 	db	32
  1656  00D41B  44                 	db	68	;'D'
  1657  00D41C  65                 	db	101	;'e'
  1658  00D41D  76                 	db	118	;'v'
  1659  00D41E  69                 	db	105	;'i'
  1660  00D41F  63                 	db	99	;'c'
  1661  00D420  65                 	db	101	;'e'
  1662  00D421  20                 	db	32
  1663  00D422  4F                 	db	79	;'O'
  1664  00D423  6E                 	db	110	;'n'
  1665  00D424  20                 	db	32
  1666  00D425  54                 	db	84	;'T'
  1667  00D426  69                 	db	105	;'i'
  1668  00D427  6D                 	db	109	;'m'
  1669  00D428  65                 	db	101	;'e'
  1670  00D429  3F                 	db	63	;'?'
  1671  00D42A  3A                 	db	58	;':'
  1672  00D42B  20                 	db	32
  1673  00D42C  52                 	db	82	;'R'
  1674  00D42D  65                 	db	101	;'e'
  1675  00D42E  74                 	db	116	;'t'
  1676  00D42F  75                 	db	117	;'u'
  1677  00D430  72                 	db	114	;'r'
  1678  00D431  6E                 	db	110	;'n'
  1679  00D432  73                 	db	115	;'s'
  1680  00D433  20                 	db	32
  1681  00D434  64                 	db	100	;'d'
  1682  00D435  65                 	db	101	;'e'
  1683  00D436  76                 	db	118	;'v'
  1684  00D437  69                 	db	105	;'i'
  1685  00D438  63                 	db	99	;'c'
  1686  00D439  65                 	db	101	;'e'
  1687  00D43A  20                 	db	32
  1688  00D43B  6F                 	db	111	;'o'
  1689  00D43C  6E                 	db	110	;'n'
  1690  00D43D  20                 	db	32
  1691  00D43E  74                 	db	116	;'t'
  1692  00D43F  69                 	db	105	;'i'
  1693  00D440  6D                 	db	109	;'m'
  1694  00D441  65                 	db	101	;'e'
  1695  00D442  20                 	db	32
  1696  00D443  73                 	db	115	;'s'
  1697  00D444  69                 	db	105	;'i'
  1698  00D445  6E                 	db	110	;'n'
  1699  00D446  63                 	db	99	;'c'
  1700  00D447  65                 	db	101	;'e'
  1701  00D448  20                 	db	32
  1702  00D449  6C                 	db	108	;'l'
  1703  00D44A  61                 	db	97	;'a'
  1704  00D44B  73                 	db	115	;'s'
  1705  00D44C  74                 	db	116	;'t'
  1706  00D44D  20                 	db	32
  1707  00D44E  64                 	db	100	;'d'
  1708  00D44F  65                 	db	101	;'e'
  1709  00D450  76                 	db	118	;'v'
  1710  00D451  69                 	db	105	;'i'
  1711  00D452  63                 	db	99	;'c'
  1712  00D453  65                 	db	101	;'e'
  1713  00D454  20                 	db	32
  1714  00D455  72                 	db	114	;'r'
  1715  00D456  65                 	db	101	;'e'
  1716  00D457  73                 	db	115	;'s'
  1717  00D458  65                 	db	101	;'e'
  1718  00D459  74                 	db	116	;'t'
  1719  00D45A  0A                 	db	10
  1720  00D45B  0D                 	db	13
  1721  00D45C  20                 	db	32
  1722  00D45D  20                 	db	32
  1723  00D45E  20                 	db	32
  1724  00D45F  44                 	db	68	;'D'
  1725  00D460  65                 	db	101	;'e'
  1726  00D461  76                 	db	118	;'v'
  1727  00D462  69                 	db	105	;'i'
  1728  00D463  63                 	db	99	;'c'
  1729  00D464  65                 	db	101	;'e'
  1730  00D465  20                 	db	32
  1731  00D466  49                 	db	73	;'I'
  1732  00D467  44                 	db	68	;'D'
  1733  00D468  3F                 	db	63	;'?'
  1734  00D469  3A                 	db	58	;':'
  1735  00D46A  20                 	db	32
  1736  00D46B  52                 	db	82	;'R'
  1737  00D46C  65                 	db	101	;'e'
  1738  00D46D  74                 	db	116	;'t'
  1739  00D46E  75                 	db	117	;'u'
  1740  00D46F  72                 	db	114	;'r'
  1741  00D470  6E                 	db	110	;'n'
  1742  00D471  73                 	db	115	;'s'
  1743  00D472  20                 	db	32
  1744  00D473  64                 	db	100	;'d'
  1745  00D474  65                 	db	101	;'e'
  1746  00D475  76                 	db	118	;'v'
  1747  00D476  69                 	db	105	;'i'
  1748  00D477  63                 	db	99	;'c'
  1749  00D478  65                 	db	101	;'e'
  1750  00D479  20                 	db	32
  1751  00D47A  49                 	db	73	;'I'
  1752  00D47B  44                 	db	68	;'D'
  1753  00D47C  20                 	db	32
  1754  00D47D  61                 	db	97	;'a'
  1755  00D47E  73                 	db	115	;'s'
  1756  00D47F  20                 	db	32
  1757  00D480  70                 	db	112	;'p'
  1758  00D481  72                 	db	114	;'r'
  1759  00D482  65                 	db	101	;'e'
  1760  00D483  2D                 	db	45
  1761  00D484  70                 	db	112	;'p'
  1762  00D485  72                 	db	114	;'r'
  1763  00D486  6F                 	db	111	;'o'
  1764  00D487  67                 	db	103	;'g'
  1765  00D488  72                 	db	114	;'r'
  1766  00D489  61                 	db	97	;'a'
  1767  00D48A  6D                 	db	109	;'m'
  1768  00D48B  6D                 	db	109	;'m'
  1769  00D48C  65                 	db	101	;'e'
  1770  00D48D  64                 	db	100	;'d'
  1771  00D48E  20                 	db	32
  1772  00D48F  69                 	db	105	;'i'
  1773  00D490  6E                 	db	110	;'n'
  1774  00D491  20                 	db	32
  1775  00D492  66                 	db	102	;'f'
  1776  00D493  6C                 	db	108	;'l'
  1777  00D494  61                 	db	97	;'a'
  1778  00D495  73                 	db	115	;'s'
  1779  00D496  68                 	db	104	;'h'
  1780  00D497  20                 	db	32
  1781  00D498  6D                 	db	109	;'m'
  1782  00D499  65                 	db	101	;'e'
  1783  00D49A  6D                 	db	109	;'m'
  1784  00D49B  6F                 	db	111	;'o'
  1785  00D49C  72                 	db	114	;'r'
  1786  00D49D  79                 	db	121	;'y'
  1787  00D49E  0A                 	db	10
  1788  00D49F  0D                 	db	13
  1789  00D4A0  20                 	db	32
  1790  00D4A1  20                 	db	32
  1791  00D4A2  20                 	db	32
  1792  00D4A3  52                 	db	82	;'R'
  1793  00D4A4  65                 	db	101	;'e'
  1794  00D4A5  76                 	db	118	;'v'
  1795  00D4A6  69                 	db	105	;'i'
  1796  00D4A7  73                 	db	115	;'s'
  1797  00D4A8  69                 	db	105	;'i'
  1798  00D4A9  6F                 	db	111	;'o'
  1799  00D4AA  6E                 	db	110	;'n'
  1800  00D4AB  20                 	db	32
  1801  00D4AC  49                 	db	73	;'I'
  1802  00D4AD  44                 	db	68	;'D'
  1803  00D4AE  3F                 	db	63	;'?'
  1804  00D4AF  3A                 	db	58	;':'
  1805  00D4B0  20                 	db	32
  1806  00D4B1  52                 	db	82	;'R'
  1807  00D4B2  65                 	db	101	;'e'
  1808  00D4B3  74                 	db	116	;'t'
  1809  00D4B4  75                 	db	117	;'u'
  1810  00D4B5  72                 	db	114	;'r'
  1811  00D4B6  6E                 	db	110	;'n'
  1812  00D4B7  73                 	db	115	;'s'
  1813  00D4B8  20                 	db	32
  1814  00D4B9  64                 	db	100	;'d'
  1815  00D4BA  65                 	db	101	;'e'
  1816  00D4BB  76                 	db	118	;'v'
  1817  00D4BC  69                 	db	105	;'i'
  1818  00D4BD  63                 	db	99	;'c'
  1819  00D4BE  65                 	db	101	;'e'
  1820  00D4BF  20                 	db	32
  1821  00D4C0  73                 	db	115	;'s'
  1822  00D4C1  69                 	db	105	;'i'
  1823  00D4C2  6C                 	db	108	;'l'
  1824  00D4C3  69                 	db	105	;'i'
  1825  00D4C4  63                 	db	99	;'c'
  1826  00D4C5  6F                 	db	111	;'o'
  1827  00D4C6  6E                 	db	110	;'n'
  1828  00D4C7  20                 	db	32
  1829  00D4C8  72                 	db	114	;'r'
  1830  00D4C9  65                 	db	101	;'e'
  1831  00D4CA  76                 	db	118	;'v'
  1832  00D4CB  69                 	db	105	;'i'
  1833  00D4CC  73                 	db	115	;'s'
  1834  00D4CD  69                 	db	105	;'i'
  1835  00D4CE  6F                 	db	111	;'o'
  1836  00D4CF  6E                 	db	110	;'n'
  1837  00D4D0  20                 	db	32
  1838  00D4D1  49                 	db	73	;'I'
  1839  00D4D2  44                 	db	68	;'D'
  1840  00D4D3  20                 	db	32
  1841  00D4D4  61                 	db	97	;'a'
  1842  00D4D5  73                 	db	115	;'s'
  1843  00D4D6  20                 	db	32
  1844  00D4D7  70                 	db	112	;'p'
  1845  00D4D8  72                 	db	114	;'r'
  1846  00D4D9  65                 	db	101	;'e'
  1847  00D4DA  2D                 	db	45
  1848  00D4DB  70                 	db	112	;'p'
  1849  00D4DC  72                 	db	114	;'r'
  1850  00D4DD  6F                 	db	111	;'o'
  1851  00D4DE  67                 	db	103	;'g'
  1852  00D4DF  72                 	db	114	;'r'
  1853  00D4E0  61                 	db	97	;'a'
  1854  00D4E1  6D                 	db	109	;'m'
  1855  00D4E2  6D                 	db	109	;'m'
  1856  00D4E3  65                 	db	101	;'e'
  1857  00D4E4  64                 	db	100	;'d'
  1858  00D4E5  20                 	db	32
  1859  00D4E6  69                 	db	105	;'i'
  1860  00D4E7  6E                 	db	110	;'n'
  1861  00D4E8  20                 	db	32
  1862  00D4E9  66                 	db	102	;'f'
  1863  00D4EA  6C                 	db	108	;'l'
  1864  00D4EB  61                 	db	97	;'a'
  1865  00D4EC  73                 	db	115	;'s'
  1866  00D4ED  68                 	db	104	;'h'
  1867  00D4EE  20                 	db	32
  1868  00D4EF  6D                 	db	109	;'m'
  1869  00D4F0  65                 	db	101	;'e'
  1870  00D4F1  6D                 	db	109	;'m'
  1871  00D4F2  6F                 	db	111	;'o'
  1872  00D4F3  72                 	db	114	;'r'
  1873  00D4F4  79                 	db	121	;'y'
  1874  00D4F5  0A                 	db	10
  1875  00D4F6  0D                 	db	13
  1876  00D4F7  20                 	db	32
  1877  00D4F8  20                 	db	32
  1878  00D4F9  20                 	db	32
  1879  00D4FA  55                 	db	85	;'U'
  1880  00D4FB  73                 	db	115	;'s'
  1881  00D4FC  65                 	db	101	;'e'
  1882  00D4FD  72                 	db	114	;'r'
  1883  00D4FE  20                 	db	32
  1884  00D4FF  49                 	db	73	;'I'
  1885  00D500  44                 	db	68	;'D'
  1886  00D501  73                 	db	115	;'s'
  1887  00D502  3F                 	db	63	;'?'
  1888  00D503  3A                 	db	58	;':'
  1889  00D504  20                 	db	32
  1890  00D505  52                 	db	82	;'R'
  1891  00D506  65                 	db	101	;'e'
  1892  00D507  74                 	db	116	;'t'
  1893  00D508  75                 	db	117	;'u'
  1894  00D509  72                 	db	114	;'r'
  1895  00D50A  6E                 	db	110	;'n'
  1896  00D50B  73                 	db	115	;'s'
  1897  00D50C  20                 	db	32
  1898  00D50D  61                 	db	97	;'a'
  1899  00D50E  20                 	db	32
  1900  00D50F  6C                 	db	108	;'l'
  1901  00D510  69                 	db	105	;'i'
  1902  00D511  73                 	db	115	;'s'
  1903  00D512  74                 	db	116	;'t'
  1904  00D513  20                 	db	32
  1905  00D514  6F                 	db	111	;'o'
  1906  00D515  66                 	db	102	;'f'
  1907  00D516  20                 	db	32
  1908  00D517  75                 	db	117	;'u'
  1909  00D518  73                 	db	115	;'s'
  1910  00D519  65                 	db	101	;'e'
  1911  00D51A  72                 	db	114	;'r'
  1912  00D51B  20                 	db	32
  1913  00D51C  49                 	db	73	;'I'
  1914  00D51D  44                 	db	68	;'D'
  1915  00D51E  73                 	db	115	;'s'
  1916  00D51F  20                 	db	32
  1917  00D520  28                 	db	40
  1918  00D521  64                 	db	100	;'d'
  1919  00D522  69                 	db	105	;'i'
  1920  00D523  73                 	db	115	;'s'
  1921  00D524  70                 	db	112	;'p'
  1922  00D525  6C                 	db	108	;'l'
  1923  00D526  61                 	db	97	;'a'
  1924  00D527  79                 	db	121	;'y'
  1925  00D528  65                 	db	101	;'e'
  1926  00D529  64                 	db	100	;'d'
  1927  00D52A  20                 	db	32
  1928  00D52B  69                 	db	105	;'i'
  1929  00D52C  6E                 	db	110	;'n'
  1930  00D52D  20                 	db	32
  1931  00D52E  68                 	db	104	;'h'
  1932  00D52F  65                 	db	101	;'e'
  1933  00D530  78                 	db	120	;'x'
  1934  00D531  29                 	db	41
  1935  00D532  20                 	db	32
  1936  00D533  61                 	db	97	;'a'
  1937  00D534  73                 	db	115	;'s'
  1938  00D535  20                 	db	32
  1939  00D536  73                 	db	115	;'s'
  1940  00D537  74                 	db	116	;'t'
  1941  00D538  6F                 	db	111	;'o'
  1942  00D539  72                 	db	114	;'r'
  1943  00D53A  65                 	db	101	;'e'
  1944  00D53B  64                 	db	100	;'d'
  1945  00D53C  20                 	db	32
  1946  00D53D  69                 	db	105	;'i'
  1947  00D53E  6E                 	db	110	;'n'
  1948  00D53F  20                 	db	32
  1949  00D540  66                 	db	102	;'f'
  1950  00D541  6C                 	db	108	;'l'
  1951  00D542  61                 	db	97	;'a'
  1952  00D543  73                 	db	115	;'s'
  1953  00D544  68                 	db	104	;'h'
  1954  00D545  20                 	db	32
  1955  00D546  6D                 	db	109	;'m'
  1956  00D547  65                 	db	101	;'e'
  1957  00D548  6D                 	db	109	;'m'
  1958  00D549  6F                 	db	111	;'o'
  1959  00D54A  72                 	db	114	;'r'
  1960  00D54B  79                 	db	121	;'y'
  1961  00D54C  0A                 	db	10
  1962  00D54D  0D                 	db	13
  1963  00D54E  20                 	db	32
  1964  00D54F  20                 	db	32
  1965  00D550  20                 	db	32
  1966  00D551  41                 	db	65	;'A'
  1967  00D552  44                 	db	68	;'D'
  1968  00D553  43                 	db	67	;'C'
  1969  00D554  20                 	db	32
  1970  00D555  45                 	db	69	;'E'
  1971  00D556  72                 	db	114	;'r'
  1972  00D557  72                 	db	114	;'r'
  1973  00D558  6F                 	db	111	;'o'
  1974  00D559  72                 	db	114	;'r'
  1975  00D55A  73                 	db	115	;'s'
  1976  00D55B  3F                 	db	63	;'?'
  1977  00D55C  3A                 	db	58	;':'
  1978  00D55D  20                 	db	32
  1979  00D55E  52                 	db	82	;'R'
  1980  00D55F  65                 	db	101	;'e'
  1981  00D560  74                 	db	116	;'t'
  1982  00D561  75                 	db	117	;'u'
  1983  00D562  72                 	db	114	;'r'
  1984  00D563  6E                 	db	110	;'n'
  1985  00D564  73                 	db	115	;'s'
  1986  00D565  20                 	db	32
  1987  00D566  74                 	db	116	;'t'
  1988  00D567  68                 	db	104	;'h'
  1989  00D568  65                 	db	101	;'e'
  1990  00D569  20                 	db	32
  1991  00D56A  63                 	db	99	;'c'
  1992  00D56B  61                 	db	97	;'a'
  1993  00D56C  75                 	db	117	;'u'
  1994  00D56D  73                 	db	115	;'s'
  1995  00D56E  65                 	db	101	;'e'
  1996  00D56F  20                 	db	32
  1997  00D570  6F                 	db	111	;'o'
  1998  00D571  66                 	db	102	;'f'
  1999  00D572  20                 	db	32
  2000  00D573  61                 	db	97	;'a'
  2001  00D574  6E                 	db	110	;'n'
  2002  00D575  20                 	db	32
  2003  00D576  41                 	db	65	;'A'
  2004  00D577  44                 	db	68	;'D'
  2005  00D578  43                 	db	67	;'C'
  2006  00D579  20                 	db	32
  2007  00D57A  65                 	db	101	;'e'
  2008  00D57B  72                 	db	114	;'r'
  2009  00D57C  72                 	db	114	;'r'
  2010  00D57D  6F                 	db	111	;'o'
  2011  00D57E  72                 	db	114	;'r'
  2012  00D57F  20                 	db	32
  2013  00D580  69                 	db	105	;'i'
  2014  00D581  66                 	db	102	;'f'
  2015  00D582  20                 	db	32
  2016  00D583  61                 	db	97	;'a'
  2017  00D584  6E                 	db	110	;'n'
  2018  00D585  20                 	db	32
  2019  00D586  65                 	db	101	;'e'
  2020  00D587  72                 	db	114	;'r'
  2021  00D588  72                 	db	114	;'r'
  2022  00D589  6F                 	db	111	;'o'
  2023  00D58A  72                 	db	114	;'r'
  2024  00D58B  20                 	db	32
  2025  00D58C  6F                 	db	111	;'o'
  2026  00D58D  63                 	db	99	;'c'
  2027  00D58E  63                 	db	99	;'c'
  2028  00D58F  75                 	db	117	;'u'
  2029  00D590  72                 	db	114	;'r'
  2030  00D591  72                 	db	114	;'r'
  2031  00D592  65                 	db	101	;'e'
  2032  00D593  64                 	db	100	;'d'
  2033  00D594  0A                 	db	10
  2034  00D595  0D                 	db	13
  2035  00D596  20                 	db	32
  2036  00D597  20                 	db	32
  2037  00D598  20                 	db	32
  2038  00D599  43                 	db	67	;'C'
  2039  00D59A  6C                 	db	108	;'l'
  2040  00D59B  65                 	db	101	;'e'
  2041  00D59C  61                 	db	97	;'a'
  2042  00D59D  72                 	db	114	;'r'
  2043  00D59E  20                 	db	32
  2044  00D59F  41                 	db	65	;'A'
  2045  00D5A0  44                 	db	68	;'D'
  2046  00D5A1  43                 	db	67	;'C'
  2047  00D5A2  20                 	db	32
  2048  00D5A3  45                 	db	69	;'E'
  2049  00D5A4  72                 	db	114	;'r'
  2050  00D5A5  72                 	db	114	;'r'
  2051  00D5A6  6F                 	db	111	;'o'
  2052  00D5A7  72                 	db	114	;'r'
  2053  00D5A8  73                 	db	115	;'s'
  2054  00D5A9  3A                 	db	58	;':'
  2055  00D5AA  20                 	db	32
  2056  00D5AB  43                 	db	67	;'C'
  2057  00D5AC  6C                 	db	108	;'l'
  2058  00D5AD  65                 	db	101	;'e'
  2059  00D5AE  61                 	db	97	;'a'
  2060  00D5AF  72                 	db	114	;'r'
  2061  00D5B0  73                 	db	115	;'s'
  2062  00D5B1  20                 	db	32
  2063  00D5B2  74                 	db	116	;'t'
  2064  00D5B3  68                 	db	104	;'h'
  2065  00D5B4  65                 	db	101	;'e'
  2066  00D5B5  20                 	db	32
  2067  00D5B6  41                 	db	65	;'A'
  2068  00D5B7  44                 	db	68	;'D'
  2069  00D5B8  43                 	db	67	;'C'
  2070  00D5B9  20                 	db	32
  2071  00D5BA  65                 	db	101	;'e'
  2072  00D5BB  72                 	db	114	;'r'
  2073  00D5BC  72                 	db	114	;'r'
  2074  00D5BD  6F                 	db	111	;'o'
  2075  00D5BE  72                 	db	114	;'r'
  2076  00D5BF  20                 	db	32
  2077  00D5C0  61                 	db	97	;'a'
  2078  00D5C1  6E                 	db	110	;'n'
  2079  00D5C2  64                 	db	100	;'d'
  2080  00D5C3  20                 	db	32
  2081  00D5C4  72                 	db	114	;'r'
  2082  00D5C5  65                 	db	101	;'e'
  2083  00D5C6  73                 	db	115	;'s'
  2084  00D5C7  75                 	db	117	;'u'
  2085  00D5C8  6D                 	db	109	;'m'
  2086  00D5C9  65                 	db	101	;'e'
  2087  00D5CA  73                 	db	115	;'s'
  2088  00D5CB  20                 	db	32
  2089  00D5CC  41                 	db	65	;'A'
  2090  00D5CD  44                 	db	68	;'D'
  2091  00D5CE  43                 	db	67	;'C'
  2092  00D5CF  20                 	db	32
  2093  00D5D0  63                 	db	99	;'c'
  2094  00D5D1  6F                 	db	111	;'o'
  2095  00D5D2  6E                 	db	110	;'n'
  2096  00D5D3  76                 	db	118	;'v'
  2097  00D5D4  65                 	db	101	;'e'
  2098  00D5D5  72                 	db	114	;'r'
  2099  00D5D6  73                 	db	115	;'s'
  2100  00D5D7  69                 	db	105	;'i'
  2101  00D5D8  6F                 	db	111	;'o'
  2102  00D5D9  6E                 	db	110	;'n'
  2103  00D5DA  73                 	db	115	;'s'
  2104  00D5DB  0A                 	db	10
  2105  00D5DC  0D                 	db	13
  2106  00D5DD  20                 	db	32
  2107  00D5DE  20                 	db	32
  2108  00D5DF  20                 	db	32
  2109  00D5E0  43                 	db	67	;'C'
  2110  00D5E1  6F                 	db	111	;'o'
  2111  00D5E2  6D                 	db	109	;'m'
  2112  00D5E3  6D                 	db	109	;'m'
  2113  00D5E4  20                 	db	32
  2114  00D5E5  45                 	db	69	;'E'
  2115  00D5E6  72                 	db	114	;'r'
  2116  00D5E7  72                 	db	114	;'r'
  2117  00D5E8  6F                 	db	111	;'o'
  2118  00D5E9  72                 	db	114	;'r'
  2119  00D5EA  73                 	db	115	;'s'
  2120  00D5EB  3F                 	db	63	;'?'
  2121  00D5EC  3A                 	db	58	;':'
  2122  00D5ED  20                 	db	32
  2123  00D5EE  52                 	db	82	;'R'
  2124  00D5EF  65                 	db	101	;'e'
  2125  00D5F0  74                 	db	116	;'t'
  2126  00D5F1  75                 	db	117	;'u'
  2127  00D5F2  72                 	db	114	;'r'
  2128  00D5F3  6E                 	db	110	;'n'
  2129  00D5F4  73                 	db	115	;'s'
  2130  00D5F5  20                 	db	32
  2131  00D5F6  69                 	db	105	;'i'
  2132  00D5F7  66                 	db	102	;'f'
  2133  00D5F8  20                 	db	32
  2134  00D5F9  61                 	db	97	;'a'
  2135  00D5FA  20                 	db	32
  2136  00D5FB  63                 	db	99	;'c'
  2137  00D5FC  6F                 	db	111	;'o'
  2138  00D5FD  6D                 	db	109	;'m'
  2139  00D5FE  6D                 	db	109	;'m'
  2140  00D5FF  75                 	db	117	;'u'
  2141  00D600  6E                 	db	110	;'n'
  2142  00D601  69                 	db	105	;'i'
  2143  00D602  63                 	db	99	;'c'
  2144  00D603  61                 	db	97	;'a'
  2145  00D604  74                 	db	116	;'t'
  2146  00D605  69                 	db	105	;'i'
  2147  00D606  6F                 	db	111	;'o'
  2148  00D607  6E                 	db	110	;'n'
  2149  00D608  73                 	db	115	;'s'
  2150  00D609  20                 	db	32
  2151  00D60A  65                 	db	101	;'e'
  2152  00D60B  72                 	db	114	;'r'
  2153  00D60C  72                 	db	114	;'r'
  2154  00D60D  6F                 	db	111	;'o'
  2155  00D60E  72                 	db	114	;'r'
  2156  00D60F  20                 	db	32
  2157  00D610  68                 	db	104	;'h'
  2158  00D611  61                 	db	97	;'a'
  2159  00D612  73                 	db	115	;'s'
  2160  00D613  20                 	db	32
  2161  00D614  6F                 	db	111	;'o'
  2162  00D615  63                 	db	99	;'c'
  2163  00D616  63                 	db	99	;'c'
  2164  00D617  75                 	db	117	;'u'
  2165  00D618  72                 	db	114	;'r'
  2166  00D619  72                 	db	114	;'r'
  2167  00D61A  65                 	db	101	;'e'
  2168  00D61B  64                 	db	100	;'d'
  2169  00D61C  0A                 	db	10
  2170  00D61D  0D                 	db	13
  2171  00D61E  20                 	db	32
  2172  00D61F  20                 	db	32
  2173  00D620  20                 	db	32
  2174  00D621  43                 	db	67	;'C'
  2175  00D622  6C                 	db	108	;'l'
  2176  00D623  65                 	db	101	;'e'
  2177  00D624  61                 	db	97	;'a'
  2178  00D625  72                 	db	114	;'r'
  2179  00D626  20                 	db	32
  2180  00D627  43                 	db	67	;'C'
  2181  00D628  6F                 	db	111	;'o'
  2182  00D629  6D                 	db	109	;'m'
  2183  00D62A  6D                 	db	109	;'m'
  2184  00D62B  20                 	db	32
  2185  00D62C  45                 	db	69	;'E'
  2186  00D62D  72                 	db	114	;'r'
  2187  00D62E  72                 	db	114	;'r'
  2188  00D62F  6F                 	db	111	;'o'
  2189  00D630  72                 	db	114	;'r'
  2190  00D631  73                 	db	115	;'s'
  2191  00D632  3A                 	db	58	;':'
  2192  00D633  20                 	db	32
  2193  00D634  43                 	db	67	;'C'
  2194  00D635  6C                 	db	108	;'l'
  2195  00D636  65                 	db	101	;'e'
  2196  00D637  61                 	db	97	;'a'
  2197  00D638  72                 	db	114	;'r'
  2198  00D639  73                 	db	115	;'s'
  2199  00D63A  20                 	db	32
  2200  00D63B  74                 	db	116	;'t'
  2201  00D63C  68                 	db	104	;'h'
  2202  00D63D  65                 	db	101	;'e'
  2203  00D63E  20                 	db	32
  2204  00D63F  63                 	db	99	;'c'
  2205  00D640  6F                 	db	111	;'o'
  2206  00D641  6D                 	db	109	;'m'
  2207  00D642  6D                 	db	109	;'m'
  2208  00D643  75                 	db	117	;'u'
  2209  00D644  6E                 	db	110	;'n'
  2210  00D645  69                 	db	105	;'i'
  2211  00D646  63                 	db	99	;'c'
  2212  00D647  61                 	db	97	;'a'
  2213  00D648  74                 	db	116	;'t'
  2214  00D649  69                 	db	105	;'i'
  2215  00D64A  6F                 	db	111	;'o'
  2216  00D64B  6E                 	db	110	;'n'
  2217  00D64C  73                 	db	115	;'s'
  2218  00D64D  20                 	db	32
  2219  00D64E  65                 	db	101	;'e'
  2220  00D64F  72                 	db	114	;'r'
  2221  00D650  72                 	db	114	;'r'
  2222  00D651  6F                 	db	111	;'o'
  2223  00D652  72                 	db	114	;'r'
  2224  00D653  0A                 	db	10
  2225  00D654  0D                 	db	13
  2226  00D655  20                 	db	32
  2227  00D656  20                 	db	32
  2228  00D657  20                 	db	32
  2229  00D658  43                 	db	67	;'C'
  2230  00D659  6C                 	db	108	;'l'
  2231  00D65A  65                 	db	101	;'e'
  2232  00D65B  61                 	db	97	;'a'
  2233  00D65C  72                 	db	114	;'r'
  2234  00D65D  20                 	db	32
  2235  00D65E  4D                 	db	77	;'M'
  2236  00D65F  61                 	db	97	;'a'
  2237  00D660  78                 	db	120	;'x'
  2238  00D661  20                 	db	32
  2239  00D662  56                 	db	86	;'V'
  2240  00D663  61                 	db	97	;'a'
  2241  00D664  6C                 	db	108	;'l'
  2242  00D665  75                 	db	117	;'u'
  2243  00D666  65                 	db	101	;'e'
  2244  00D667  73                 	db	115	;'s'
  2245  00D668  3A                 	db	58	;':'
  2246  00D669  20                 	db	32
  2247  00D66A  45                 	db	69	;'E'
  2248  00D66B  72                 	db	114	;'r'
  2249  00D66C  61                 	db	97	;'a'
  2250  00D66D  73                 	db	115	;'s'
  2251  00D66E  65                 	db	101	;'e'
  2252  00D66F  73                 	db	115	;'s'
  2253  00D670  20                 	db	32
  2254  00D671  6D                 	db	109	;'m'
  2255  00D672  61                 	db	97	;'a'
  2256  00D673  78                 	db	120	;'x'
  2257  00D674  69                 	db	105	;'i'
  2258  00D675  6D                 	db	109	;'m'
  2259  00D676  75                 	db	117	;'u'
  2260  00D677  6D                 	db	109	;'m'
  2261  00D678  20                 	db	32
  2262  00D679  72                 	db	114	;'r'
  2263  00D67A  65                 	db	101	;'e'
  2264  00D67B  63                 	db	99	;'c'
  2265  00D67C  6F                 	db	111	;'o'
  2266  00D67D  72                 	db	114	;'r'
  2267  00D67E  64                 	db	100	;'d'
  2268  00D67F  65                 	db	101	;'e'
  2269  00D680  64                 	db	100	;'d'
  2270  00D681  20                 	db	32
  2271  00D682  76                 	db	118	;'v'
  2272  00D683  61                 	db	97	;'a'
  2273  00D684  6C                 	db	108	;'l'
  2274  00D685  75                 	db	117	;'u'
  2275  00D686  65                 	db	101	;'e'
  2276  00D687  73                 	db	115	;'s'
  2277  00D688  20                 	db	32
  2278  00D689  66                 	db	102	;'f'
  2279  00D68A  72                 	db	114	;'r'
  2280  00D68B  6F                 	db	111	;'o'
  2281  00D68C  6D                 	db	109	;'m'
  2282  00D68D  20                 	db	32
  2283  00D68E  45                 	db	69	;'E'
  2284  00D68F  45                 	db	69	;'E'
  2285  00D690  50                 	db	80	;'P'
  2286  00D691  52                 	db	82	;'R'
  2287  00D692  4F                 	db	79	;'O'
  2288  00D693  4D                 	db	77	;'M'
  2289  00D694  0A                 	db	10
  2290  00D695  0D                 	db	13
  2291  00D696  20                 	db	32
  2292  00D697  20                 	db	32
  2293  00D698  20                 	db	32
  2294  00D699  48                 	db	72	;'H'
  2295  00D69A  65                 	db	101	;'e'
  2296  00D69B  6C                 	db	108	;'l'
  2297  00D69C  70                 	db	112	;'p'
  2298  00D69D  3A                 	db	58	;':'
  2299  00D69E  20                 	db	32
  2300  00D69F  54                 	db	84	;'T'
  2301  00D6A0  68                 	db	104	;'h'
  2302  00D6A1  69                 	db	105	;'i'
  2303  00D6A2  73                 	db	115	;'s'
  2304  00D6A3  20                 	db	32
  2305  00D6A4  6D                 	db	109	;'m'
  2306  00D6A5  65                 	db	101	;'e'
  2307  00D6A6  73                 	db	115	;'s'
  2308  00D6A7  73                 	db	115	;'s'
  2309  00D6A8  61                 	db	97	;'a'
  2310  00D6A9  67                 	db	103	;'g'
  2311  00D6AA  65                 	db	101	;'e'
  2312  00D6AB  2C                 	db	44
  2313  00D6AC  20                 	db	32
  2314  00D6AD  6C                 	db	108	;'l'
  2315  00D6AE  69                 	db	105	;'i'
  2316  00D6AF  73                 	db	115	;'s'
  2317  00D6B0  74                 	db	116	;'t'
  2318  00D6B1  73                 	db	115	;'s'
  2319  00D6B2  20                 	db	32
  2320  00D6B3  73                 	db	115	;'s'
  2321  00D6B4  75                 	db	117	;'u'
  2322  00D6B5  70                 	db	112	;'p'
  2323  00D6B6  70                 	db	112	;'p'
  2324  00D6B7  6F                 	db	111	;'o'
  2325  00D6B8  72                 	db	114	;'r'
  2326  00D6B9  74                 	db	116	;'t'
  2327  00D6BA  65                 	db	101	;'e'
  2328  00D6BB  64                 	db	100	;'d'
  2329  00D6BC  20                 	db	32
  2330  00D6BD  63                 	db	99	;'c'
  2331  00D6BE  6F                 	db	111	;'o'
  2332  00D6BF  6D                 	db	109	;'m'
  2333  00D6C0  6D                 	db	109	;'m'
  2334  00D6C1  61                 	db	97	;'a'
  2335  00D6C2  6E                 	db	110	;'n'
  2336  00D6C3  64                 	db	100	;'d'
  2337  00D6C4  73                 	db	115	;'s'
  2338  00D6C5  0A                 	db	10
  2339  00D6C6  0D                 	db	13
  2340  00D6C7  0A                 	db	10
  2341  00D6C8  0D                 	db	13
  2342  00D6C9  44                 	db	68	;'D'
  2343  00D6CA  65                 	db	101	;'e'
  2344  00D6CB  76                 	db	118	;'v'
  2345  00D6CC  69                 	db	105	;'i'
  2346  00D6CD  63                 	db	99	;'c'
  2347  00D6CE  65                 	db	101	;'e'
  2348  00D6CF  20                 	db	32
  2349  00D6D0  4D                 	db	77	;'M'
  2350  00D6D1  65                 	db	101	;'e'
  2351  00D6D2  61                 	db	97	;'a'
  2352  00D6D3  73                 	db	115	;'s'
  2353  00D6D4  75                 	db	117	;'u'
  2354  00D6D5  72                 	db	114	;'r'
  2355  00D6D6  65                 	db	101	;'e'
  2356  00D6D7  6D                 	db	109	;'m'
  2357  00D6D8  65                 	db	101	;'e'
  2358  00D6D9  6E                 	db	110	;'n'
  2359  00D6DA  74                 	db	116	;'t'
  2360  00D6DB  20                 	db	32
  2361  00D6DC  43                 	db	67	;'C'
  2362  00D6DD  6F                 	db	111	;'o'
  2363  00D6DE  6D                 	db	109	;'m'
  2364  00D6DF  6D                 	db	109	;'m'
  2365  00D6E0  61                 	db	97	;'a'
  2366  00D6E1  6E                 	db	110	;'n'
  2367  00D6E2  64                 	db	100	;'d'
  2368  00D6E3  73                 	db	115	;'s'
  2369  00D6E4  3A                 	db	58	;':'
  2370  00D6E5  20                 	db	32
  2371  00D6E6  56                 	db	86	;'V'
  2372  00D6E7  69                 	db	105	;'i'
  2373  00D6E8  65                 	db	101	;'e'
  2374  00D6E9  77                 	db	119	;'w'
  2375  00D6EA  20                 	db	32
  2376  00D6EB  6C                 	db	108	;'l'
  2377  00D6EC  6F                 	db	111	;'o'
  2378  00D6ED  77                 	db	119	;'w'
  2379  00D6EE  20                 	db	32
  2380  00D6EF  6C                 	db	108	;'l'
  2381  00D6F0  65                 	db	101	;'e'
  2382  00D6F1  76                 	db	118	;'v'
  2383  00D6F2  65                 	db	101	;'e'
  2384  00D6F3  6C                 	db	108	;'l'
  2385  00D6F4  20                 	db	32
  2386  00D6F5  73                 	db	115	;'s'
  2387  00D6F6  79                 	db	121	;'y'
  2388  00D6F7  73                 	db	115	;'s'
  2389  00D6F8  74                 	db	116	;'t'
  2390  00D6F9  65                 	db	101	;'e'
  2391  00D6FA  6D                 	db	109	;'m'
  2392  00D6FB  20                 	db	32
  2393  00D6FC  6D                 	db	109	;'m'
  2394  00D6FD  65                 	db	101	;'e'
  2395  00D6FE  61                 	db	97	;'a'
  2396  00D6FF  73                 	db	115	;'s'
  2397  00D700  75                 	db	117	;'u'
  2398  00D701  72                 	db	114	;'r'
  2399  00D702  65                 	db	101	;'e'
  2400  00D703  6D                 	db	109	;'m'
  2401  00D704  65                 	db	101	;'e'
  2402  00D705  6E                 	db	110	;'n'
  2403  00D706  74                 	db	116	;'t'
  2404  00D707  73                 	db	115	;'s'
  2405  00D708  0A                 	db	10
  2406  00D709  0D                 	db	13
  2407  00D70A  20                 	db	32
  2408  00D70B  20                 	db	32
  2409  00D70C  20                 	db	32
  2410  00D70D  4D                 	db	77	;'M'
  2411  00D70E  65                 	db	101	;'e'
  2412  00D70F  61                 	db	97	;'a'
  2413  00D710  73                 	db	115	;'s'
  2414  00D711  75                 	db	117	;'u'
  2415  00D712  72                 	db	114	;'r'
  2416  00D713  65                 	db	101	;'e'
  2417  00D714  20                 	db	32
  2418  00D715  50                 	db	80	;'P'
  2419  00D716  4F                 	db	79	;'O'
  2420  00D717  53                 	db	83	;'S'
  2421  00D718  33                 	db	51	;'3'
  2422  00D719  50                 	db	80	;'P'
  2423  00D71A  33                 	db	51	;'3'
  2424  00D71B  3F                 	db	63	;'?'
  2425  00D71C  3A                 	db	58	;':'
  2426  00D71D  20                 	db	32
  2427  00D71E  52                 	db	82	;'R'
  2428  00D71F  65                 	db	101	;'e'
  2429  00D720  74                 	db	116	;'t'
  2430  00D721  75                 	db	117	;'u'
  2431  00D722  72                 	db	114	;'r'
  2432  00D723  6E                 	db	110	;'n'
  2433  00D724  73                 	db	115	;'s'
  2434  00D725  20                 	db	32
  2435  00D726  2B                 	db	43
  2436  00D727  33                 	db	51	;'3'
  2437  00D728  2E                 	db	46
  2438  00D729  33                 	db	51	;'3'
  2439  00D72A  56                 	db	86	;'V'
  2440  00D72B  20                 	db	32
  2441  00D72C  41                 	db	65	;'A'
  2442  00D72D  44                 	db	68	;'D'
  2443  00D72E  43                 	db	67	;'C'
  2444  00D72F  20                 	db	32
  2445  00D730  43                 	db	67	;'C'
  2446  00D731  6F                 	db	111	;'o'
  2447  00D732  6E                 	db	110	;'n'
  2448  00D733  76                 	db	118	;'v'
  2449  00D734  65                 	db	101	;'e'
  2450  00D735  72                 	db	114	;'r'
  2451  00D736  73                 	db	115	;'s'
  2452  00D737  69                 	db	105	;'i'
  2453  00D738  6F                 	db	111	;'o'
  2454  00D739  6E                 	db	110	;'n'
  2455  00D73A  20                 	db	32
  2456  00D73B  69                 	db	105	;'i'
  2457  00D73C  6E                 	db	110	;'n'
  2458  00D73D  20                 	db	32
  2459  00D73E  76                 	db	118	;'v'
  2460  00D73F  6F                 	db	111	;'o'
  2461  00D740  6C                 	db	108	;'l'
  2462  00D741  74                 	db	116	;'t'
  2463  00D742  73                 	db	115	;'s'
  2464  00D743  0A                 	db	10
  2465  00D744  0D                 	db	13
  2466  00D745  20                 	db	32
  2467  00D746  20                 	db	32
  2468  00D747  20                 	db	32
  2469  00D748  4D                 	db	77	;'M'
  2470  00D749  65                 	db	101	;'e'
  2471  00D74A  61                 	db	97	;'a'
  2472  00D74B  73                 	db	115	;'s'
  2473  00D74C  75                 	db	117	;'u'
  2474  00D74D  72                 	db	114	;'r'
  2475  00D74E  65                 	db	101	;'e'
  2476  00D74F  20                 	db	32
  2477  00D750  50                 	db	80	;'P'
  2478  00D751  4F                 	db	79	;'O'
  2479  00D752  53                 	db	83	;'S'
  2480  00D753  31                 	db	49	;'1'
  2481  00D754  32                 	db	50	;'2'
  2482  00D755  3F                 	db	63	;'?'
  2483  00D756  3A                 	db	58	;':'
  2484  00D757  20                 	db	32
  2485  00D758  52                 	db	82	;'R'
  2486  00D759  65                 	db	101	;'e'
  2487  00D75A  74                 	db	116	;'t'
  2488  00D75B  75                 	db	117	;'u'
  2489  00D75C  72                 	db	114	;'r'
  2490  00D75D  6E                 	db	110	;'n'
  2491  00D75E  73                 	db	115	;'s'
  2492  00D75F  20                 	db	32
  2493  00D760  2B                 	db	43
  2494  00D761  31                 	db	49	;'1'
  2495  00D762  32                 	db	50	;'2'
  2496  00D763  56                 	db	86	;'V'
  2497  00D764  20                 	db	32
  2498  00D765  41                 	db	65	;'A'
  2499  00D766  44                 	db	68	;'D'
  2500  00D767  43                 	db	67	;'C'
  2501  00D768  20                 	db	32
  2502  00D769  43                 	db	67	;'C'
  2503  00D76A  6F                 	db	111	;'o'
  2504  00D76B  6E                 	db	110	;'n'
  2505  00D76C  76                 	db	118	;'v'
  2506  00D76D  65                 	db	101	;'e'
  2507  00D76E  72                 	db	114	;'r'
  2508  00D76F  73                 	db	115	;'s'
  2509  00D770  69                 	db	105	;'i'
  2510  00D771  6F                 	db	111	;'o'
  2511  00D772  6E                 	db	110	;'n'
  2512  00D773  20                 	db	32
  2513  00D774  69                 	db	105	;'i'
  2514  00D775  6E                 	db	110	;'n'
  2515  00D776  20                 	db	32
  2516  00D777  76                 	db	118	;'v'
  2517  00D778  6F                 	db	111	;'o'
  2518  00D779  6C                 	db	108	;'l'
  2519  00D77A  74                 	db	116	;'t'
  2520  00D77B  73                 	db	115	;'s'
  2521  00D77C  0A                 	db	10
  2522  00D77D  0D                 	db	13
  2523  00D77E  20                 	db	32
  2524  00D77F  20                 	db	32
  2525  00D780  20                 	db	32
  2526  00D781  4D                 	db	77	;'M'
  2527  00D782  65                 	db	101	;'e'
  2528  00D783  61                 	db	97	;'a'
  2529  00D784  73                 	db	115	;'s'
  2530  00D785  75                 	db	117	;'u'
  2531  00D786  72                 	db	114	;'r'
  2532  00D787  65                 	db	101	;'e'
  2533  00D788  20                 	db	32
  2534  00D789  44                 	db	68	;'D'
  2535  00D78A  69                 	db	105	;'i'
  2536  00D78B  65                 	db	101	;'e'
  2537  00D78C  20                 	db	32
  2538  00D78D  54                 	db	84	;'T'
  2539  00D78E  65                 	db	101	;'e'
  2540  00D78F  6D                 	db	109	;'m'
  2541  00D790  70                 	db	112	;'p'
  2542  00D791  3F                 	db	63	;'?'
  2543  00D792  3A                 	db	58	;':'
  2544  00D793  20                 	db	32
  2545  00D794  52                 	db	82	;'R'
  2546  00D795  65                 	db	101	;'e'
  2547  00D796  74                 	db	116	;'t'
  2548  00D797  75                 	db	117	;'u'
  2549  00D798  72                 	db	114	;'r'
  2550  00D799  6E                 	db	110	;'n'
  2551  00D79A  73                 	db	115	;'s'
  2552  00D79B  20                 	db	32
  2553  00D79C  74                 	db	116	;'t'
  2554  00D79D  68                 	db	104	;'h'
  2555  00D79E  65                 	db	101	;'e'
  2556  00D79F  20                 	db	32
  2557  00D7A0  6D                 	db	109	;'m'
  2558  00D7A1  69                 	db	105	;'i'
  2559  00D7A2  63                 	db	99	;'c'
  2560  00D7A3  72                 	db	114	;'r'
  2561  00D7A4  6F                 	db	111	;'o'
  2562  00D7A5  63                 	db	99	;'c'
  2563  00D7A6  6F                 	db	111	;'o'
  2564  00D7A7  6E                 	db	110	;'n'
  2565  00D7A8  74                 	db	116	;'t'
  2566  00D7A9  72                 	db	114	;'r'
  2567  00D7AA  6F                 	db	111	;'o'
  2568  00D7AB  6C                 	db	108	;'l'
  2569  00D7AC  6C                 	db	108	;'l'
  2570  00D7AD  65                 	db	101	;'e'
  2571  00D7AE  72                 	db	114	;'r'
  2572  00D7AF  20                 	db	32
  2573  00D7B0  64                 	db	100	;'d'
  2574  00D7B1  69                 	db	105	;'i'
  2575  00D7B2  65                 	db	101	;'e'
  2576  00D7B3  20                 	db	32
  2577  00D7B4  74                 	db	116	;'t'
  2578  00D7B5  65                 	db	101	;'e'
  2579  00D7B6  6D                 	db	109	;'m'
  2580  00D7B7  70                 	db	112	;'p'
  2581  00D7B8  65                 	db	101	;'e'
  2582  00D7B9  72                 	db	114	;'r'
  2583  00D7BA  61                 	db	97	;'a'
  2584  00D7BB  74                 	db	116	;'t'
  2585  00D7BC  75                 	db	117	;'u'
  2586  00D7BD  72                 	db	114	;'r'
  2587  00D7BE  65                 	db	101	;'e'
  2588  00D7BF  20                 	db	32
  2589  00D7C0  69                 	db	105	;'i'
  2590  00D7C1  6E                 	db	110	;'n'
  2591  00D7C2  20                 	db	32
  2592  00D7C3  64                 	db	100	;'d'
  2593  00D7C4  65                 	db	101	;'e'
  2594  00D7C5  67                 	db	103	;'g'
  2595  00D7C6  72                 	db	114	;'r'
  2596  00D7C7  65                 	db	101	;'e'
  2597  00D7C8  65                 	db	101	;'e'
  2598  00D7C9  73                 	db	115	;'s'
  2599  00D7CA  20                 	db	32
  2600  00D7CB  43                 	db	67	;'C'
  2601  00D7CC  0A                 	db	10
  2602  00D7CD  0D                 	db	13
  2603  00D7CE  20                 	db	32
  2604  00D7CF  20                 	db	32
  2605  00D7D0  20                 	db	32
  2606  00D7D1  4D                 	db	77	;'M'
  2607  00D7D2  65                 	db	101	;'e'
  2608  00D7D3  61                 	db	97	;'a'
  2609  00D7D4  73                 	db	115	;'s'
  2610  00D7D5  75                 	db	117	;'u'
  2611  00D7D6  72                 	db	114	;'r'
  2612  00D7D7  65                 	db	101	;'e'
  2613  00D7D8  20                 	db	32
  2614  00D7D9  46                 	db	70	;'F'
  2615  00D7DA  56                 	db	86	;'V'
  2616  00D7DB  52                 	db	82	;'R'
  2617  00D7DC  3F                 	db	63	;'?'
  2618  00D7DD  3A                 	db	58	;':'
  2619  00D7DE  20                 	db	32
  2620  00D7DF  52                 	db	82	;'R'
  2621  00D7E0  65                 	db	101	;'e'
  2622  00D7E1  74                 	db	116	;'t'
  2623  00D7E2  75                 	db	117	;'u'
  2624  00D7E3  72                 	db	114	;'r'
  2625  00D7E4  6E                 	db	110	;'n'
  2626  00D7E5  73                 	db	115	;'s'
  2627  00D7E6  20                 	db	32
  2628  00D7E7  74                 	db	116	;'t'
  2629  00D7E8  68                 	db	104	;'h'
  2630  00D7E9  65                 	db	101	;'e'
  2631  00D7EA  20                 	db	32
  2632  00D7EB  69                 	db	105	;'i'
  2633  00D7EC  6E                 	db	110	;'n'
  2634  00D7ED  74                 	db	116	;'t'
  2635  00D7EE  65                 	db	101	;'e'
  2636  00D7EF  72                 	db	114	;'r'
  2637  00D7F0  6E                 	db	110	;'n'
  2638  00D7F1  61                 	db	97	;'a'
  2639  00D7F2  6C                 	db	108	;'l'
  2640  00D7F3  20                 	db	32
  2641  00D7F4  66                 	db	102	;'f'
  2642  00D7F5  69                 	db	105	;'i'
  2643  00D7F6  78                 	db	120	;'x'
  2644  00D7F7  65                 	db	101	;'e'
  2645  00D7F8  64                 	db	100	;'d'
  2646  00D7F9  20                 	db	32
  2647  00D7FA  76                 	db	118	;'v'
  2648  00D7FB  6F                 	db	111	;'o'
  2649  00D7FC  6C                 	db	108	;'l'
  2650  00D7FD  74                 	db	116	;'t'
  2651  00D7FE  61                 	db	97	;'a'
  2652  00D7FF  67                 	db	103	;'g'
  2653  00D800  65                 	db	101	;'e'
  2654  00D801  20                 	db	32
  2655  00D802  72                 	db	114	;'r'
  2656  00D803  65                 	db	101	;'e'
  2657  00D804  66                 	db	102	;'f'
  2658  00D805  65                 	db	101	;'e'
  2659  00D806  72                 	db	114	;'r'
  2660  00D807  65                 	db	101	;'e'
  2661  00D808  6E                 	db	110	;'n'
  2662  00D809  63                 	db	99	;'c'
  2663  00D80A  65                 	db	101	;'e'
  2664  00D80B  20                 	db	32
  2665  00D80C  62                 	db	98	;'b'
  2666  00D80D  75                 	db	117	;'u'
  2667  00D80E  66                 	db	102	;'f'
  2668  00D80F  66                 	db	102	;'f'
  2669  00D810  65                 	db	101	;'e'
  2670  00D811  72                 	db	114	;'r'
  2671  00D812  20                 	db	32
  2672  00D813  31                 	db	49	;'1'
  2673  00D814  20                 	db	32
  2674  00D815  6F                 	db	111	;'o'
  2675  00D816  75                 	db	117	;'u'
  2676  00D817  74                 	db	116	;'t'
  2677  00D818  70                 	db	112	;'p'
  2678  00D819  75                 	db	117	;'u'
  2679  00D81A  74                 	db	116	;'t'
  2680  00D81B  20                 	db	32
  2681  00D81C  69                 	db	105	;'i'
  2682  00D81D  6E                 	db	110	;'n'
  2683  00D81E  20                 	db	32
  2684  00D81F  76                 	db	118	;'v'
  2685  00D820  6F                 	db	111	;'o'
  2686  00D821  6C                 	db	108	;'l'
  2687  00D822  74                 	db	116	;'t'
  2688  00D823  73                 	db	115	;'s'
  2689  00D824  0A                 	db	10
  2690  00D825  0D                 	db	13
  2691  00D826  20                 	db	32
  2692  00D827  20                 	db	32
  2693  00D828  20                 	db	32
  2694  00D829  4D                 	db	77	;'M'
  2695  00D82A  65                 	db	101	;'e'
  2696  00D82B  61                 	db	97	;'a'
  2697  00D82C  73                 	db	115	;'s'
  2698  00D82D  75                 	db	117	;'u'
  2699  00D82E  72                 	db	114	;'r'
  2700  00D82F  65                 	db	101	;'e'
  2701  00D830  20                 	db	32
  2702  00D831  41                 	db	65	;'A'
  2703  00D832  56                 	db	86	;'V'
  2704  00D833  53                 	db	83	;'S'
  2705  00D834  53                 	db	83	;'S'
  2706  00D835  3F                 	db	63	;'?'
  2707  00D836  3A                 	db	58	;':'
  2708  00D837  20                 	db	32
  2709  00D838  52                 	db	82	;'R'
  2710  00D839  65                 	db	101	;'e'
  2711  00D83A  74                 	db	116	;'t'
  2712  00D83B  75                 	db	117	;'u'
  2713  00D83C  72                 	db	114	;'r'
  2714  00D83D  6E                 	db	110	;'n'
  2715  00D83E  73                 	db	115	;'s'
  2716  00D83F  20                 	db	32
  2717  00D840  74                 	db	116	;'t'
  2718  00D841  68                 	db	104	;'h'
  2719  00D842  65                 	db	101	;'e'
  2720  00D843  20                 	db	32
  2721  00D844  6D                 	db	109	;'m'
  2722  00D845  65                 	db	101	;'e'
  2723  00D846  61                 	db	97	;'a'
  2724  00D847  73                 	db	115	;'s'
  2725  00D848  75                 	db	117	;'u'
  2726  00D849  72                 	db	114	;'r'
  2727  00D84A  65                 	db	101	;'e'
  2728  00D84B  64                 	db	100	;'d'
  2729  00D84C  20                 	db	32
  2730  00D84D  76                 	db	118	;'v'
  2731  00D84E  61                 	db	97	;'a'
  2732  00D84F  6C                 	db	108	;'l'
  2733  00D850  75                 	db	117	;'u'
  2734  00D851  65                 	db	101	;'e'
  2735  00D852  20                 	db	32
  2736  00D853  6F                 	db	111	;'o'
  2737  00D854  66                 	db	102	;'f'
  2738  00D855  20                 	db	32
  2739  00D856  41                 	db	65	;'A'
  2740  00D857  6E                 	db	110	;'n'
  2741  00D858  61                 	db	97	;'a'
  2742  00D859  6C                 	db	108	;'l'
  2743  00D85A  6F                 	db	111	;'o'
  2744  00D85B  67                 	db	103	;'g'
  2745  00D85C  20                 	db	32
  2746  00D85D  56                 	db	86	;'V'
  2747  00D85E  53                 	db	83	;'S'
  2748  00D85F  53                 	db	83	;'S'
  2749  00D860  20                 	db	32
  2750  00D861  69                 	db	105	;'i'
  2751  00D862  6E                 	db	110	;'n'
  2752  00D863  20                 	db	32
  2753  00D864  76                 	db	118	;'v'
  2754  00D865  6F                 	db	111	;'o'
  2755  00D866  6C                 	db	108	;'l'
  2756  00D867  74                 	db	116	;'t'
  2757  00D868  73                 	db	115	;'s'
  2758  00D869  0A                 	db	10
  2759  00D86A  0D                 	db	13
  2760  00D86B  20                 	db	32
  2761  00D86C  20                 	db	32
  2762  00D86D  20                 	db	32
  2763  00D86E  4D                 	db	77	;'M'
  2764  00D86F  61                 	db	97	;'a'
  2765  00D870  78                 	db	120	;'x'
  2766  00D871  20                 	db	32
  2767  00D872  50                 	db	80	;'P'
  2768  00D873  4F                 	db	79	;'O'
  2769  00D874  53                 	db	83	;'S'
  2770  00D875  33                 	db	51	;'3'
  2771  00D876  50                 	db	80	;'P'
  2772  00D877  33                 	db	51	;'3'
  2773  00D878  20                 	db	32
  2774  00D879  56                 	db	86	;'V'
  2775  00D87A  6F                 	db	111	;'o'
  2776  00D87B  6C                 	db	108	;'l'
  2777  00D87C  74                 	db	116	;'t'
  2778  00D87D  61                 	db	97	;'a'
  2779  00D87E  67                 	db	103	;'g'
  2780  00D87F  65                 	db	101	;'e'
  2781  00D880  3F                 	db	63	;'?'
  2782  00D881  3A                 	db	58	;':'
  2783  00D882  20                 	db	32
  2784  00D883  52                 	db	82	;'R'
  2785  00D884  65                 	db	101	;'e'
  2786  00D885  74                 	db	116	;'t'
  2787  00D886  75                 	db	117	;'u'
  2788  00D887  72                 	db	114	;'r'
  2789  00D888  6E                 	db	110	;'n'
  2790  00D889  73                 	db	115	;'s'
  2791  00D88A  20                 	db	32
  2792  00D88B  74                 	db	116	;'t'
  2793  00D88C  68                 	db	104	;'h'
  2794  00D88D  65                 	db	101	;'e'
  2795  00D88E  20                 	db	32
  2796  00D88F  6D                 	db	109	;'m'
  2797  00D890  61                 	db	97	;'a'
  2798  00D891  78                 	db	120	;'x'
  2799  00D892  69                 	db	105	;'i'
  2800  00D893  6D                 	db	109	;'m'
  2801  00D894  75                 	db	117	;'u'
  2802  00D895  6D                 	db	109	;'m'
  2803  00D896  20                 	db	32
  2804  00D897  72                 	db	114	;'r'
  2805  00D898  65                 	db	101	;'e'
  2806  00D899  63                 	db	99	;'c'
  2807  00D89A  6F                 	db	111	;'o'
  2808  00D89B  72                 	db	114	;'r'
  2809  00D89C  64                 	db	100	;'d'
  2810  00D89D  65                 	db	101	;'e'
  2811  00D89E  64                 	db	100	;'d'
  2812  00D89F  20                 	db	32
  2813  00D8A0  2B                 	db	43
  2814  00D8A1  33                 	db	51	;'3'
  2815  00D8A2  2E                 	db	46
  2816  00D8A3  33                 	db	51	;'3'
  2817  00D8A4  56                 	db	86	;'V'
  2818  00D8A5  20                 	db	32
  2819  00D8A6  52                 	db	82	;'R'
  2820  00D8A7  61                 	db	97	;'a'
  2821  00D8A8  69                 	db	105	;'i'
  2822  00D8A9  6C                 	db	108	;'l'
  2823  00D8AA  20                 	db	32
  2824  00D8AB  56                 	db	86	;'V'
  2825  00D8AC  6F                 	db	111	;'o'
  2826  00D8AD  6C                 	db	108	;'l'
  2827  00D8AE  74                 	db	116	;'t'
  2828  00D8AF  61                 	db	97	;'a'
  2829  00D8B0  67                 	db	103	;'g'
  2830  00D8B1  65                 	db	101	;'e'
  2831  00D8B2  20                 	db	32
  2832  00D8B3  6D                 	db	109	;'m'
  2833  00D8B4  65                 	db	101	;'e'
  2834  00D8B5  61                 	db	97	;'a'
  2835  00D8B6  73                 	db	115	;'s'
  2836  00D8B7  75                 	db	117	;'u'
  2837  00D8B8  72                 	db	114	;'r'
  2838  00D8B9  65                 	db	101	;'e'
  2839  00D8BA  64                 	db	100	;'d'
  2840  00D8BB  0A                 	db	10
  2841  00D8BC  0D                 	db	13
  2842  00D8BD  20                 	db	32
  2843  00D8BE  20                 	db	32
  2844  00D8BF  20                 	db	32
  2845  00D8C0  4D                 	db	77	;'M'
  2846  00D8C1  61                 	db	97	;'a'
  2847  00D8C2  78                 	db	120	;'x'
  2848  00D8C3  20                 	db	32
  2849  00D8C4  50                 	db	80	;'P'
  2850  00D8C5  4F                 	db	79	;'O'
  2851  00D8C6  53                 	db	83	;'S'
  2852  00D8C7  31                 	db	49	;'1'
  2853  00D8C8  32                 	db	50	;'2'
  2854  00D8C9  20                 	db	32
  2855  00D8CA  56                 	db	86	;'V'
  2856  00D8CB  6F                 	db	111	;'o'
  2857  00D8CC  6C                 	db	108	;'l'
  2858  00D8CD  74                 	db	116	;'t'
  2859  00D8CE  61                 	db	97	;'a'
  2860  00D8CF  67                 	db	103	;'g'
  2861  00D8D0  65                 	db	101	;'e'
  2862  00D8D1  3F                 	db	63	;'?'
  2863  00D8D2  3A                 	db	58	;':'
  2864  00D8D3  20                 	db	32
  2865  00D8D4  52                 	db	82	;'R'
  2866  00D8D5  65                 	db	101	;'e'
  2867  00D8D6  74                 	db	116	;'t'
  2868  00D8D7  75                 	db	117	;'u'
  2869  00D8D8  72                 	db	114	;'r'
  2870  00D8D9  6E                 	db	110	;'n'
  2871  00D8DA  73                 	db	115	;'s'
  2872  00D8DB  20                 	db	32
  2873  00D8DC  74                 	db	116	;'t'
  2874  00D8DD  68                 	db	104	;'h'
  2875  00D8DE  65                 	db	101	;'e'
  2876  00D8DF  20                 	db	32
  2877  00D8E0  6D                 	db	109	;'m'
  2878  00D8E1  61                 	db	97	;'a'
  2879  00D8E2  78                 	db	120	;'x'
  2880  00D8E3  69                 	db	105	;'i'
  2881  00D8E4  6D                 	db	109	;'m'
  2882  00D8E5  75                 	db	117	;'u'
  2883  00D8E6  6D                 	db	109	;'m'
  2884  00D8E7  20                 	db	32
  2885  00D8E8  72                 	db	114	;'r'
  2886  00D8E9  65                 	db	101	;'e'
  2887  00D8EA  63                 	db	99	;'c'
  2888  00D8EB  6F                 	db	111	;'o'
  2889  00D8EC  72                 	db	114	;'r'
  2890  00D8ED  64                 	db	100	;'d'
  2891  00D8EE  65                 	db	101	;'e'
  2892  00D8EF  64                 	db	100	;'d'
  2893  00D8F0  20                 	db	32
  2894  00D8F1  2B                 	db	43
  2895  00D8F2  31                 	db	49	;'1'
  2896  00D8F3  32                 	db	50	;'2'
  2897  00D8F4  56                 	db	86	;'V'
  2898  00D8F5  20                 	db	32
  2899  00D8F6  52                 	db	82	;'R'
  2900  00D8F7  61                 	db	97	;'a'
  2901  00D8F8  69                 	db	105	;'i'
  2902  00D8F9  6C                 	db	108	;'l'
  2903  00D8FA  20                 	db	32
  2904  00D8FB  56                 	db	86	;'V'
  2905  00D8FC  6F                 	db	111	;'o'
  2906  00D8FD  6C                 	db	108	;'l'
  2907  00D8FE  74                 	db	116	;'t'
  2908  00D8FF  61                 	db	97	;'a'
  2909  00D900  67                 	db	103	;'g'
  2910  00D901  65                 	db	101	;'e'
  2911  00D902  20                 	db	32
  2912  00D903  6D                 	db	109	;'m'
  2913  00D904  65                 	db	101	;'e'
  2914  00D905  61                 	db	97	;'a'
  2915  00D906  73                 	db	115	;'s'
  2916  00D907  75                 	db	117	;'u'
  2917  00D908  72                 	db	114	;'r'
  2918  00D909  65                 	db	101	;'e'
  2919  00D90A  64                 	db	100	;'d'
  2920  00D90B  0A                 	db	10
  2921  00D90C  0D                 	db	13
  2922  00D90D  20                 	db	32
  2923  00D90E  20                 	db	32
  2924  00D90F  20                 	db	32
  2925  00D910  4D                 	db	77	;'M'
  2926  00D911  61                 	db	97	;'a'
  2927  00D912  78                 	db	120	;'x'
  2928  00D913  20                 	db	32
  2929  00D914  44                 	db	68	;'D'
  2930  00D915  69                 	db	105	;'i'
  2931  00D916  65                 	db	101	;'e'
  2932  00D917  20                 	db	32
  2933  00D918  54                 	db	84	;'T'
  2934  00D919  65                 	db	101	;'e'
  2935  00D91A  6D                 	db	109	;'m'
  2936  00D91B  70                 	db	112	;'p'
  2937  00D91C  3F                 	db	63	;'?'
  2938  00D91D  3A                 	db	58	;':'
  2939  00D91E  20                 	db	32
  2940  00D91F  52                 	db	82	;'R'
  2941  00D920  65                 	db	101	;'e'
  2942  00D921  74                 	db	116	;'t'
  2943  00D922  75                 	db	117	;'u'
  2944  00D923  72                 	db	114	;'r'
  2945  00D924  6E                 	db	110	;'n'
  2946  00D925  73                 	db	115	;'s'
  2947  00D926  20                 	db	32
  2948  00D927  74                 	db	116	;'t'
  2949  00D928  68                 	db	104	;'h'
  2950  00D929  65                 	db	101	;'e'
  2951  00D92A  20                 	db	32
  2952  00D92B  6D                 	db	109	;'m'
  2953  00D92C  61                 	db	97	;'a'
  2954  00D92D  78                 	db	120	;'x'
  2955  00D92E  69                 	db	105	;'i'
  2956  00D92F  6D                 	db	109	;'m'
  2957  00D930  75                 	db	117	;'u'
  2958  00D931  6D                 	db	109	;'m'
  2959  00D932  20                 	db	32
  2960  00D933  72                 	db	114	;'r'
  2961  00D934  65                 	db	101	;'e'
  2962  00D935  63                 	db	99	;'c'
  2963  00D936  6F                 	db	111	;'o'
  2964  00D937  72                 	db	114	;'r'
  2965  00D938  64                 	db	100	;'d'
  2966  00D939  65                 	db	101	;'e'
  2967  00D93A  64                 	db	100	;'d'
  2968  00D93B  20                 	db	32
  2969  00D93C  64                 	db	100	;'d'
  2970  00D93D  69                 	db	105	;'i'
  2971  00D93E  65                 	db	101	;'e'
  2972  00D93F  20                 	db	32
  2973  00D940  74                 	db	116	;'t'
  2974  00D941  65                 	db	101	;'e'
  2975  00D942  6D                 	db	109	;'m'
  2976  00D943  70                 	db	112	;'p'
  2977  00D944  65                 	db	101	;'e'
  2978  00D945  72                 	db	114	;'r'
  2979  00D946  61                 	db	97	;'a'
  2980  00D947  74                 	db	116	;'t'
  2981  00D948  75                 	db	117	;'u'
  2982  00D949  72                 	db	114	;'r'
  2983  00D94A  65                 	db	101	;'e'
  2984  00D94B  20                 	db	32
  2985  00D94C  6D                 	db	109	;'m'
  2986  00D94D  65                 	db	101	;'e'
  2987  00D94E  61                 	db	97	;'a'
  2988  00D94F  73                 	db	115	;'s'
  2989  00D950  75                 	db	117	;'u'
  2990  00D951  72                 	db	114	;'r'
  2991  00D952  65                 	db	101	;'e'
  2992  00D953  64                 	db	100	;'d'
  2993  00D954  0A                 	db	10
  2994  00D955  0D                 	db	13
  2995  00D956  20                 	db	32
  2996  00D957  20                 	db	32
  2997  00D958  20                 	db	32
  2998  00D959  4D                 	db	77	;'M'
  2999  00D95A  61                 	db	97	;'a'
  3000  00D95B  78                 	db	120	;'x'
  3001  00D95C  20                 	db	32
  3002  00D95D  46                 	db	70	;'F'
  3003  00D95E  56                 	db	86	;'V'
  3004  00D95F  52                 	db	82	;'R'
  3005  00D960  20                 	db	32
  3006  00D961  56                 	db	86	;'V'
  3007  00D962  6F                 	db	111	;'o'
  3008  00D963  6C                 	db	108	;'l'
  3009  00D964  74                 	db	116	;'t'
  3010  00D965  61                 	db	97	;'a'
  3011  00D966  67                 	db	103	;'g'
  3012  00D967  65                 	db	101	;'e'
  3013  00D968  3F                 	db	63	;'?'
  3014  00D969  3A                 	db	58	;':'
  3015  00D96A  20                 	db	32
  3016  00D96B  52                 	db	82	;'R'
  3017  00D96C  65                 	db	101	;'e'
  3018  00D96D  74                 	db	116	;'t'
  3019  00D96E  75                 	db	117	;'u'
  3020  00D96F  72                 	db	114	;'r'
  3021  00D970  6E                 	db	110	;'n'
  3022  00D971  73                 	db	115	;'s'
  3023  00D972  20                 	db	32
  3024  00D973  74                 	db	116	;'t'
  3025  00D974  68                 	db	104	;'h'
  3026  00D975  65                 	db	101	;'e'
  3027  00D976  20                 	db	32
  3028  00D977  6D                 	db	109	;'m'
  3029  00D978  61                 	db	97	;'a'
  3030  00D979  78                 	db	120	;'x'
  3031  00D97A  69                 	db	105	;'i'
  3032  00D97B  6D                 	db	109	;'m'
  3033  00D97C  75                 	db	117	;'u'
  3034  00D97D  6D                 	db	109	;'m'
  3035  00D97E  20                 	db	32
  3036  00D97F  72                 	db	114	;'r'
  3037  00D980  65                 	db	101	;'e'
  3038  00D981  63                 	db	99	;'c'
  3039  00D982  6F                 	db	111	;'o'
  3040  00D983  72                 	db	114	;'r'
  3041  00D984  64                 	db	100	;'d'
  3042  00D985  65                 	db	101	;'e'
  3043  00D986  64                 	db	100	;'d'
  3044  00D987  20                 	db	32
  3045  00D988  46                 	db	70	;'F'
  3046  00D989  56                 	db	86	;'V'
  3047  00D98A  52                 	db	82	;'R'
  3048  00D98B  20                 	db	32
  3049  00D98C  42                 	db	66	;'B'
  3050  00D98D  75                 	db	117	;'u'
  3051  00D98E  66                 	db	102	;'f'
  3052  00D98F  66                 	db	102	;'f'
  3053  00D990  65                 	db	101	;'e'
  3054  00D991  72                 	db	114	;'r'
  3055  00D992  20                 	db	32
  3056  00D993  31                 	db	49	;'1'
  3057  00D994  20                 	db	32
  3058  00D995  56                 	db	86	;'V'
  3059  00D996  6F                 	db	111	;'o'
  3060  00D997  6C                 	db	108	;'l'
  3061  00D998  74                 	db	116	;'t'
  3062  00D999  61                 	db	97	;'a'
  3063  00D99A  67                 	db	103	;'g'
  3064  00D99B  65                 	db	101	;'e'
  3065  00D99C  20                 	db	32
  3066  00D99D  6D                 	db	109	;'m'
  3067  00D99E  65                 	db	101	;'e'
  3068  00D99F  61                 	db	97	;'a'
  3069  00D9A0  73                 	db	115	;'s'
  3070  00D9A1  75                 	db	117	;'u'
  3071  00D9A2  72                 	db	114	;'r'
  3072  00D9A3  65                 	db	101	;'e'
  3073  00D9A4  64                 	db	100	;'d'
  3074  00D9A5  0A                 	db	10
  3075  00D9A6  0D                 	db	13
  3076  00D9A7  0A                 	db	10
  3077  00D9A8  0D                 	db	13
  3078  00D9A9  50                 	db	80	;'P'
  3079  00D9AA  72                 	db	114	;'r'
  3080  00D9AB  69                 	db	105	;'i'
  3081  00D9AC  6D                 	db	109	;'m'
  3082  00D9AD  61                 	db	97	;'a'
  3083  00D9AE  72                 	db	114	;'r'
  3084  00D9AF  79                 	db	121	;'y'
  3085  00D9B0  20                 	db	32
  3086  00D9B1  4D                 	db	77	;'M'
  3087  00D9B2  65                 	db	101	;'e'
  3088  00D9B3  61                 	db	97	;'a'
  3089  00D9B4  73                 	db	115	;'s'
  3090  00D9B5  75                 	db	117	;'u'
  3091  00D9B6  72                 	db	114	;'r'
  3092  00D9B7  65                 	db	101	;'e'
  3093  00D9B8  6D                 	db	109	;'m'
  3094  00D9B9  65                 	db	101	;'e'
  3095  00D9BA  6E                 	db	110	;'n'
  3096  00D9BB  74                 	db	116	;'t'
  3097  00D9BC  20                 	db	32
  3098  00D9BD  43                 	db	67	;'C'
  3099  00D9BE  6F                 	db	111	;'o'
  3100  00D9BF  6D                 	db	109	;'m'
  3101  00D9C0  6D                 	db	109	;'m'
  3102  00D9C1  61                 	db	97	;'a'
  3103  00D9C2  6E                 	db	110	;'n'
  3104  00D9C3  64                 	db	100	;'d'
  3105  00D9C4  73                 	db	115	;'s'
  3106  00D9C5  3A                 	db	58	;':'
  3107  00D9C6  20                 	db	32
  3108  00D9C7  56                 	db	86	;'V'
  3109  00D9C8  69                 	db	105	;'i'
  3110  00D9C9  65                 	db	101	;'e'
  3111  00D9CA  77                 	db	119	;'w'
  3112  00D9CB  20                 	db	32
  3113  00D9CC  68                 	db	104	;'h'
  3114  00D9CD  69                 	db	105	;'i'
  3115  00D9CE  67                 	db	103	;'g'
  3116  00D9CF  68                 	db	104	;'h'
  3117  00D9D0  20                 	db	32
  3118  00D9D1  6C                 	db	108	;'l'
  3119  00D9D2  65                 	db	101	;'e'
  3120  00D9D3  76                 	db	118	;'v'
  3121  00D9D4  65                 	db	101	;'e'
  3122  00D9D5  6C                 	db	108	;'l'
  3123  00D9D6  20                 	db	32
  3124  00D9D7  6F                 	db	111	;'o'
  3125  00D9D8  75                 	db	117	;'u'
  3126  00D9D9  74                 	db	116	;'t'
  3127  00D9DA  70                 	db	112	;'p'
  3128  00D9DB  75                 	db	117	;'u'
  3129  00D9DC  74                 	db	116	;'t'
  3130  00D9DD  20                 	db	32
  3131  00D9DE  6D                 	db	109	;'m'
  3132  00D9DF  65                 	db	101	;'e'
  3133  00D9E0  61                 	db	97	;'a'
  3134  00D9E1  73                 	db	115	;'s'
  3135  00D9E2  75                 	db	117	;'u'
  3136  00D9E3  72                 	db	114	;'r'
  3137  00D9E4  65                 	db	101	;'e'
  3138  00D9E5  6D                 	db	109	;'m'
  3139  00D9E6  65                 	db	101	;'e'
  3140  00D9E7  6E                 	db	110	;'n'
  3141  00D9E8  74                 	db	116	;'t'
  3142  00D9E9  73                 	db	115	;'s'
  3143  00D9EA  20                 	db	32
  3144  00D9EB  61                 	db	97	;'a'
  3145  00D9EC  6E                 	db	110	;'n'
  3146  00D9ED  64                 	db	100	;'d'
  3147  00D9EE  20                 	db	32
  3148  00D9EF  63                 	db	99	;'c'
  3149  00D9F0  61                 	db	97	;'a'
  3150  00D9F1  6C                 	db	108	;'l'
  3151  00D9F2  63                 	db	99	;'c'
  3152  00D9F3  75                 	db	117	;'u'
  3153  00D9F4  6C                 	db	108	;'l'
  3154  00D9F5  61                 	db	97	;'a'
  3155  00D9F6  74                 	db	116	;'t'
  3156  00D9F7  69                 	db	105	;'i'
  3157  00D9F8  6F                 	db	111	;'o'
  3158  00D9F9  6E                 	db	110	;'n'
  3159  00D9FA  73                 	db	115	;'s'
  3160  00D9FB  0A                 	db	10
  3161  00D9FC  0D                 	db	13
  3162  00D9FD  20                 	db	32
  3163  00D9FE  20                 	db	32
  3164  00D9FF  20                 	db	32
  3165  00DA00  4D                 	db	77	;'M'
  3166  00DA01  65                 	db	101	;'e'
  3167  00DA02  61                 	db	97	;'a'
  3168  00DA03  73                 	db	115	;'s'
  3169  00DA04  75                 	db	117	;'u'
  3170  00DA05  72                 	db	114	;'r'
  3171  00DA06  65                 	db	101	;'e'
  3172  00DA07  20                 	db	32
  3173  00DA08  44                 	db	68	;'D'
  3174  00DA09  65                 	db	101	;'e'
  3175  00DA0A  74                 	db	116	;'t'
  3176  00DA0B  65                 	db	101	;'e'
  3177  00DA0C  63                 	db	99	;'c'
  3178  00DA0D  74                 	db	116	;'t'
  3179  00DA0E  65                 	db	101	;'e'
  3180  00DA0F  64                 	db	100	;'d'
  3181  00DA10  20                 	db	32
  3182  00DA11  43                 	db	67	;'C'
  3183  00DA12  75                 	db	117	;'u'
  3184  00DA13  72                 	db	114	;'r'
  3185  00DA14  72                 	db	114	;'r'
  3186  00DA15  65                 	db	101	;'e'
  3187  00DA16  6E                 	db	110	;'n'
  3188  00DA17  74                 	db	116	;'t'
  3189  00DA18  3F                 	db	63	;'?'
  3190  00DA19  3A                 	db	58	;':'
  3191  00DA1A  20                 	db	32
  3192  00DA1B  52                 	db	82	;'R'
  3193  00DA1C  65                 	db	101	;'e'
  3194  00DA1D  74                 	db	116	;'t'
  3195  00DA1E  75                 	db	117	;'u'
  3196  00DA1F  72                 	db	114	;'r'
  3197  00DA20  6E                 	db	110	;'n'
  3198  00DA21  73                 	db	115	;'s'
  3199  00DA22  20                 	db	32
  3200  00DA23  6D                 	db	109	;'m'
  3201  00DA24  65                 	db	101	;'e'
  3202  00DA25  61                 	db	97	;'a'
  3203  00DA26  73                 	db	115	;'s'
  3204  00DA27  75                 	db	117	;'u'
  3205  00DA28  72                 	db	114	;'r'
  3206  00DA29  65                 	db	101	;'e'
  3207  00DA2A  64                 	db	100	;'d'
  3208  00DA2B  20                 	db	32
  3209  00DA2C  6F                 	db	111	;'o'
  3210  00DA2D  75                 	db	117	;'u'
  3211  00DA2E  74                 	db	116	;'t'
  3212  00DA2F  70                 	db	112	;'p'
  3213  00DA30  75                 	db	117	;'u'
  3214  00DA31  74                 	db	116	;'t'
  3215  00DA32  20                 	db	32
  3216  00DA33  63                 	db	99	;'c'
  3217  00DA34  75                 	db	117	;'u'
  3218  00DA35  72                 	db	114	;'r'
  3219  00DA36  72                 	db	114	;'r'
  3220  00DA37  65                 	db	101	;'e'
  3221  00DA38  6E                 	db	110	;'n'
  3222  00DA39  74                 	db	116	;'t'
  3223  00DA3A  20                 	db	32
  3224  00DA3B  69                 	db	105	;'i'
  3225  00DA3C  6E                 	db	110	;'n'
  3226  00DA3D  20                 	db	32
  3227  00DA3E  61                 	db	97	;'a'
  3228  00DA3F  6D                 	db	109	;'m'
  3229  00DA40  70                 	db	112	;'p'
  3230  00DA41  73                 	db	115	;'s'
  3231  00DA42  20                 	db	32
  3232  00DA43  61                 	db	97	;'a'
  3233  00DA44  73                 	db	115	;'s'
  3234  00DA45  20                 	db	32
  3235  00DA46  73                 	db	115	;'s'
  3236  00DA47  65                 	db	101	;'e'
  3237  00DA48  65                 	db	101	;'e'
  3238  00DA49  6E                 	db	110	;'n'
  3239  00DA4A  20                 	db	32
  3240  00DA4B  62                 	db	98	;'b'
  3241  00DA4C  79                 	db	121	;'y'
  3242  00DA4D  20                 	db	32
  3243  00DA4E  41                 	db	65	;'A'
  3244  00DA4F  44                 	db	68	;'D'
  3245  00DA50  43                 	db	67	;'C'
  3246  00DA51  0A                 	db	10
  3247  00DA52  0D                 	db	13
  3248  00DA53  20                 	db	32
  3249  00DA54  20                 	db	32
  3250  00DA55  20                 	db	32
  3251  00DA56  4D                 	db	77	;'M'
  3252  00DA57  65                 	db	101	;'e'
  3253  00DA58  61                 	db	97	;'a'
  3254  00DA59  73                 	db	115	;'s'
  3255  00DA5A  75                 	db	117	;'u'
  3256  00DA5B  72                 	db	114	;'r'
  3257  00DA5C  65                 	db	101	;'e'
  3258  00DA5D  20                 	db	32
  3259  00DA5E  52                 	db	82	;'R'
  3260  00DA5F  4D                 	db	77	;'M'
  3261  00DA60  53                 	db	83	;'S'
  3262  00DA61  20                 	db	32
  3263  00DA62  43                 	db	67	;'C'
  3264  00DA63  75                 	db	117	;'u'
  3265  00DA64  72                 	db	114	;'r'
  3266  00DA65  72                 	db	114	;'r'
  3267  00DA66  65                 	db	101	;'e'
  3268  00DA67  6E                 	db	110	;'n'
  3269  00DA68  74                 	db	116	;'t'
  3270  00DA69  3F                 	db	63	;'?'
  3271  00DA6A  3A                 	db	58	;':'
  3272  00DA6B  20                 	db	32
  3273  00DA6C  52                 	db	82	;'R'
  3274  00DA6D  65                 	db	101	;'e'
  3275  00DA6E  74                 	db	116	;'t'
  3276  00DA6F  75                 	db	117	;'u'
  3277  00DA70  72                 	db	114	;'r'
  3278  00DA71  6E                 	db	110	;'n'
  3279  00DA72  73                 	db	115	;'s'
  3280  00DA73  20                 	db	32
  3281  00DA74  74                 	db	116	;'t'
  3282  00DA75  68                 	db	104	;'h'
  3283  00DA76  65                 	db	101	;'e'
  3284  00DA77  20                 	db	32
  3285  00DA78  63                 	db	99	;'c'
  3286  00DA79  61                 	db	97	;'a'
  3287  00DA7A  6C                 	db	108	;'l'
  3288  00DA7B  63                 	db	99	;'c'
  3289  00DA7C  75                 	db	117	;'u'
  3290  00DA7D  6C                 	db	108	;'l'
  3291  00DA7E  61                 	db	97	;'a'
  3292  00DA7F  74                 	db	116	;'t'
  3293  00DA80  65                 	db	101	;'e'
  3294  00DA81  64                 	db	100	;'d'
  3295  00DA82  20                 	db	32
  3296  00DA83  52                 	db	82	;'R'
  3297  00DA84  4D                 	db	77	;'M'
  3298  00DA85  53                 	db	83	;'S'
  3299  00DA86  20                 	db	32
  3300  00DA87  6F                 	db	111	;'o'
  3301  00DA88  75                 	db	117	;'u'
  3302  00DA89  74                 	db	116	;'t'
  3303  00DA8A  70                 	db	112	;'p'
  3304  00DA8B  75                 	db	117	;'u'
  3305  00DA8C  74                 	db	116	;'t'
  3306  00DA8D  20                 	db	32
  3307  00DA8E  63                 	db	99	;'c'
  3308  00DA8F  75                 	db	117	;'u'
  3309  00DA90  72                 	db	114	;'r'
  3310  00DA91  72                 	db	114	;'r'
  3311  00DA92  65                 	db	101	;'e'
  3312  00DA93  6E                 	db	110	;'n'
  3313  00DA94  74                 	db	116	;'t'
  3314  00DA95  20                 	db	32
  3315  00DA96  66                 	db	102	;'f'
  3316  00DA97  72                 	db	114	;'r'
  3317  00DA98  6F                 	db	111	;'o'
  3318  00DA99  6D                 	db	109	;'m'
  3319  00DA9A  20                 	db	32
  3320  00DA9B  6D                 	db	109	;'m'
  3321  00DA9C  65                 	db	101	;'e'
  3322  00DA9D  61                 	db	97	;'a'
  3323  00DA9E  73                 	db	115	;'s'
  3324  00DA9F  75                 	db	117	;'u'
  3325  00DAA0  72                 	db	114	;'r'
  3326  00DAA1  65                 	db	101	;'e'
  3327  00DAA2  6D                 	db	109	;'m'
  3328  00DAA3  65                 	db	101	;'e'
  3329  00DAA4  6E                 	db	110	;'n'
  3330  00DAA5  74                 	db	116	;'t'
  3331  00DAA6  73                 	db	115	;'s'
  3332  00DAA7  20                 	db	32
  3333  00DAA8  61                 	db	97	;'a'
  3334  00DAA9  6E                 	db	110	;'n'
  3335  00DAAA  64                 	db	100	;'d'
  3336  00DAAB  20                 	db	32
  3337  00DAAC  54                 	db	84	;'T'
  3338  00DAAD  52                 	db	82	;'R'
  3339  00DAAE  49                 	db	73	;'I'
  3340  00DAAF  41                 	db	65	;'A'
  3341  00DAB0  43                 	db	67	;'C'
  3342  00DAB1  20                 	db	32
  3343  00DAB2  66                 	db	102	;'f'
  3344  00DAB3  69                 	db	105	;'i'
  3345  00DAB4  72                 	db	114	;'r'
  3346  00DAB5  69                 	db	105	;'i'
  3347  00DAB6  6E                 	db	110	;'n'
  3348  00DAB7  67                 	db	103	;'g'
  3349  00DAB8  20                 	db	32
  3350  00DAB9  61                 	db	97	;'a'
  3351  00DABA  6E                 	db	110	;'n'
  3352  00DABB  67                 	db	103	;'g'
  3353  00DABC  6C                 	db	108	;'l'
  3354  00DABD  65                 	db	101	;'e'
  3355  00DABE  0A                 	db	10
  3356  00DABF  0D                 	db	13
  3357  00DAC0  20                 	db	32
  3358  00DAC1  20                 	db	32
  3359  00DAC2  20                 	db	32
  3360  00DAC3  4D                 	db	77	;'M'
  3361  00DAC4  65                 	db	101	;'e'
  3362  00DAC5  61                 	db	97	;'a'
  3363  00DAC6  73                 	db	115	;'s'
  3364  00DAC7  75                 	db	117	;'u'
  3365  00DAC8  72                 	db	114	;'r'
  3366  00DAC9  65                 	db	101	;'e'
  3367  00DACA  20                 	db	32
  3368  00DACB  52                 	db	82	;'R'
  3369  00DACC  4D                 	db	77	;'M'
  3370  00DACD  53                 	db	83	;'S'
  3371  00DACE  20                 	db	32
  3372  00DACF  56                 	db	86	;'V'
  3373  00DAD0  6F                 	db	111	;'o'
  3374  00DAD1  6C                 	db	108	;'l'
  3375  00DAD2  74                 	db	116	;'t'
  3376  00DAD3  61                 	db	97	;'a'
  3377  00DAD4  67                 	db	103	;'g'
  3378  00DAD5  65                 	db	101	;'e'
  3379  00DAD6  3F                 	db	63	;'?'
  3380  00DAD7  3A                 	db	58	;':'
  3381  00DAD8  20                 	db	32
  3382  00DAD9  52                 	db	82	;'R'
  3383  00DADA  65                 	db	101	;'e'
  3384  00DADB  74                 	db	116	;'t'
  3385  00DADC  75                 	db	117	;'u'
  3386  00DADD  72                 	db	114	;'r'
  3387  00DADE  6E                 	db	110	;'n'
  3388  00DADF  73                 	db	115	;'s'
  3389  00DAE0  20                 	db	32
  3390  00DAE1  74                 	db	116	;'t'
  3391  00DAE2  68                 	db	104	;'h'
  3392  00DAE3  65                 	db	101	;'e'
  3393  00DAE4  20                 	db	32
  3394  00DAE5  63                 	db	99	;'c'
  3395  00DAE6  61                 	db	97	;'a'
  3396  00DAE7  6C                 	db	108	;'l'
  3397  00DAE8  63                 	db	99	;'c'
  3398  00DAE9  75                 	db	117	;'u'
  3399  00DAEA  6C                 	db	108	;'l'
  3400  00DAEB  61                 	db	97	;'a'
  3401  00DAEC  74                 	db	116	;'t'
  3402  00DAED  65                 	db	101	;'e'
  3403  00DAEE  64                 	db	100	;'d'
  3404  00DAEF  20                 	db	32
  3405  00DAF0  52                 	db	82	;'R'
  3406  00DAF1  4D                 	db	77	;'M'
  3407  00DAF2  53                 	db	83	;'S'
  3408  00DAF3  20                 	db	32
  3409  00DAF4  6F                 	db	111	;'o'
  3410  00DAF5  75                 	db	117	;'u'
  3411  00DAF6  74                 	db	116	;'t'
  3412  00DAF7  70                 	db	112	;'p'
  3413  00DAF8  75                 	db	117	;'u'
  3414  00DAF9  74                 	db	116	;'t'
  3415  00DAFA  20                 	db	32
  3416  00DAFB  76                 	db	118	;'v'
  3417  00DAFC  6F                 	db	111	;'o'
  3418  00DAFD  6C                 	db	108	;'l'
  3419  00DAFE  74                 	db	116	;'t'
  3420  00DAFF  61                 	db	97	;'a'
  3421  00DB00  67                 	db	103	;'g'
  3422  00DB01  65                 	db	101	;'e'
  3423  00DB02  20                 	db	32
  3424  00DB03  66                 	db	102	;'f'
  3425  00DB04  72                 	db	114	;'r'
  3426  00DB05  6F                 	db	111	;'o'
  3427  00DB06  6D                 	db	109	;'m'
  3428  00DB07  20                 	db	32
  3429  00DB08  54                 	db	84	;'T'
  3430  00DB09  52                 	db	82	;'R'
  3431  00DB0A  49                 	db	73	;'I'
  3432  00DB0B  41                 	db	65	;'A'
  3433  00DB0C  43                 	db	67	;'C'
  3434  00DB0D  20                 	db	32
  3435  00DB0E  66                 	db	102	;'f'
  3436  00DB0F  69                 	db	105	;'i'
  3437  00DB10  72                 	db	114	;'r'
  3438  00DB11  69                 	db	105	;'i'
  3439  00DB12  6E                 	db	110	;'n'
  3440  00DB13  67                 	db	103	;'g'
  3441  00DB14  20                 	db	32
  3442  00DB15  61                 	db	97	;'a'
  3443  00DB16  6E                 	db	110	;'n'
  3444  00DB17  67                 	db	103	;'g'
  3445  00DB18  6C                 	db	108	;'l'
  3446  00DB19  65                 	db	101	;'e'
  3447  00DB1A  0A                 	db	10
  3448  00DB1B  0D                 	db	13
  3449  00DB1C  20                 	db	32
  3450  00DB1D  20                 	db	32
  3451  00DB1E  20                 	db	32
  3452  00DB1F  4D                 	db	77	;'M'
  3453  00DB20  65                 	db	101	;'e'
  3454  00DB21  61                 	db	97	;'a'
  3455  00DB22  73                 	db	115	;'s'
  3456  00DB23  75                 	db	117	;'u'
  3457  00DB24  72                 	db	114	;'r'
  3458  00DB25  65                 	db	101	;'e'
  3459  00DB26  20                 	db	32
  3460  00DB27  50                 	db	80	;'P'
  3461  00DB28  6F                 	db	111	;'o'
  3462  00DB29  77                 	db	119	;'w'
  3463  00DB2A  65                 	db	101	;'e'
  3464  00DB2B  72                 	db	114	;'r'
  3465  00DB2C  3F                 	db	63	;'?'
  3466  00DB2D  3A                 	db	58	;':'
  3467  00DB2E  20                 	db	32
  3468  00DB2F  52                 	db	82	;'R'
  3469  00DB30  65                 	db	101	;'e'
  3470  00DB31  74                 	db	116	;'t'
  3471  00DB32  75                 	db	117	;'u'
  3472  00DB33  72                 	db	114	;'r'
  3473  00DB34  6E                 	db	110	;'n'
  3474  00DB35  73                 	db	115	;'s'
  3475  00DB36  20                 	db	32
  3476  00DB37  74                 	db	116	;'t'
  3477  00DB38  68                 	db	104	;'h'
  3478  00DB39  65                 	db	101	;'e'
  3479  00DB3A  20                 	db	32
  3480  00DB3B  63                 	db	99	;'c'
  3481  00DB3C  61                 	db	97	;'a'
  3482  00DB3D  6C                 	db	108	;'l'
  3483  00DB3E  63                 	db	99	;'c'
  3484  00DB3F  75                 	db	117	;'u'
  3485  00DB40  6C                 	db	108	;'l'
  3486  00DB41  61                 	db	97	;'a'
  3487  00DB42  74                 	db	116	;'t'
  3488  00DB43  65                 	db	101	;'e'
  3489  00DB44  64                 	db	100	;'d'
  3490  00DB45  20                 	db	32
  3491  00DB46  6F                 	db	111	;'o'
  3492  00DB47  75                 	db	117	;'u'
  3493  00DB48  74                 	db	116	;'t'
  3494  00DB49  70                 	db	112	;'p'
  3495  00DB4A  75                 	db	117	;'u'
  3496  00DB4B  74                 	db	116	;'t'
  3497  00DB4C  20                 	db	32
  3498  00DB4D  70                 	db	112	;'p'
  3499  00DB4E  6F                 	db	111	;'o'
  3500  00DB4F  77                 	db	119	;'w'
  3501  00DB50  65                 	db	101	;'e'
  3502  00DB51  72                 	db	114	;'r'
  3503  00DB52  20                 	db	32
  3504  00DB53  69                 	db	105	;'i'
  3505  00DB54  6E                 	db	110	;'n'
  3506  00DB55  20                 	db	32
  3507  00DB56  57                 	db	87	;'W'
  3508  00DB57  61                 	db	97	;'a'
  3509  00DB58  74                 	db	116	;'t'
  3510  00DB59  74                 	db	116	;'t'
  3511  00DB5A  73                 	db	115	;'s'
  3512  00DB5B  0A                 	db	10
  3513  00DB5C  0D                 	db	13
  3514  00DB5D  20                 	db	32
  3515  00DB5E  20                 	db	32
  3516  00DB5F  20                 	db	32
  3517  00DB60  4D                 	db	77	;'M'
  3518  00DB61  65                 	db	101	;'e'
  3519  00DB62  61                 	db	97	;'a'
  3520  00DB63  73                 	db	115	;'s'
  3521  00DB64  75                 	db	117	;'u'
  3522  00DB65  72                 	db	114	;'r'
  3523  00DB66  65                 	db	101	;'e'
  3524  00DB67  20                 	db	32
  3525  00DB68  45                 	db	69	;'E'
  3526  00DB69  6E                 	db	110	;'n'
  3527  00DB6A  65                 	db	101	;'e'
  3528  00DB6B  72                 	db	114	;'r'
  3529  00DB6C  67                 	db	103	;'g'
  3530  00DB6D  79                 	db	121	;'y'
  3531  00DB6E  3F                 	db	63	;'?'
  3532  00DB6F  3A                 	db	58	;':'
  3533  00DB70  20                 	db	32
  3534  00DB71  52                 	db	82	;'R'
  3535  00DB72  65                 	db	101	;'e'
  3536  00DB73  74                 	db	116	;'t'
  3537  00DB74  75                 	db	117	;'u'
  3538  00DB75  72                 	db	114	;'r'
  3539  00DB76  6E                 	db	110	;'n'
  3540  00DB77  73                 	db	115	;'s'
  3541  00DB78  20                 	db	32
  3542  00DB79  6D                 	db	109	;'m'
  3543  00DB7A  65                 	db	101	;'e'
  3544  00DB7B  61                 	db	97	;'a'
  3545  00DB7C  73                 	db	115	;'s'
  3546  00DB7D  75                 	db	117	;'u'
  3547  00DB7E  72                 	db	114	;'r'
  3548  00DB7F  65                 	db	101	;'e'
  3549  00DB80  64                 	db	100	;'d'
  3550  00DB81  20                 	db	32
  3551  00DB82  65                 	db	101	;'e'
  3552  00DB83  6E                 	db	110	;'n'
  3553  00DB84  65                 	db	101	;'e'
  3554  00DB85  72                 	db	114	;'r'
  3555  00DB86  67                 	db	103	;'g'
  3556  00DB87  79                 	db	121	;'y'
  3557  00DB88  20                 	db	32
  3558  00DB89  73                 	db	115	;'s'
  3559  00DB8A  69                 	db	105	;'i'
  3560  00DB8B  6E                 	db	110	;'n'
  3561  00DB8C  63                 	db	99	;'c'
  3562  00DB8D  65                 	db	101	;'e'
  3563  00DB8E  20                 	db	32
  3564  00DB8F  6D                 	db	109	;'m'
  3565  00DB90  65                 	db	101	;'e'
  3566  00DB91  61                 	db	97	;'a'
  3567  00DB92  73                 	db	115	;'s'
  3568  00DB93  75                 	db	117	;'u'
  3569  00DB94  72                 	db	114	;'r'
  3570  00DB95  65                 	db	101	;'e'
  3571  00DB96  6D                 	db	109	;'m'
  3572  00DB97  65                 	db	101	;'e'
  3573  00DB98  6E                 	db	110	;'n'
  3574  00DB99  74                 	db	116	;'t'
  3575  00DB9A  20                 	db	32
  3576  00DB9B  72                 	db	114	;'r'
  3577  00DB9C  65                 	db	101	;'e'
  3578  00DB9D  73                 	db	115	;'s'
  3579  00DB9E  65                 	db	101	;'e'
  3580  00DB9F  74                 	db	116	;'t'
  3581  00DBA0  20                 	db	32
  3582  00DBA1  69                 	db	105	;'i'
  3583  00DBA2  6E                 	db	110	;'n'
  3584  00DBA3  20                 	db	32
  3585  00DBA4  57                 	db	87	;'W'
  3586  00DBA5  61                 	db	97	;'a'
  3587  00DBA6  74                 	db	116	;'t'
  3588  00DBA7  74                 	db	116	;'t'
  3589  00DBA8  20                 	db	32
  3590  00DBA9  48                 	db	72	;'H'
  3591  00DBAA  6F                 	db	111	;'o'
  3592  00DBAB  75                 	db	117	;'u'
  3593  00DBAC  72                 	db	114	;'r'
  3594  00DBAD  73                 	db	115	;'s'
  3595  00DBAE  0A                 	db	10
  3596  00DBAF  0D                 	db	13
  3597  00DBB0  20                 	db	32
  3598  00DBB1  20                 	db	32
  3599  00DBB2  20                 	db	32
  3600  00DBB3  43                 	db	67	;'C'
  3601  00DBB4  6C                 	db	108	;'l'
  3602  00DBB5  65                 	db	101	;'e'
  3603  00DBB6  61                 	db	97	;'a'
  3604  00DBB7  72                 	db	114	;'r'
  3605  00DBB8  20                 	db	32
  3606  00DBB9  45                 	db	69	;'E'
  3607  00DBBA  6E                 	db	110	;'n'
  3608  00DBBB  65                 	db	101	;'e'
  3609  00DBBC  72                 	db	114	;'r'
  3610  00DBBD  67                 	db	103	;'g'
  3611  00DBBE  79                 	db	121	;'y'
  3612  00DBBF  3A                 	db	58	;':'
  3613  00DBC0  20                 	db	32
  3614  00DBC1  52                 	db	82	;'R'
  3615  00DBC2  65                 	db	101	;'e'
  3616  00DBC3  73                 	db	115	;'s'
  3617  00DBC4  65                 	db	101	;'e'
  3618  00DBC5  74                 	db	116	;'t'
  3619  00DBC6  73                 	db	115	;'s'
  3620  00DBC7  20                 	db	32
  3621  00DBC8  74                 	db	116	;'t'
  3622  00DBC9  68                 	db	104	;'h'
  3623  00DBCA  65                 	db	101	;'e'
  3624  00DBCB  20                 	db	32
  3625  00DBCC  6D                 	db	109	;'m'
  3626  00DBCD  65                 	db	101	;'e'
  3627  00DBCE  61                 	db	97	;'a'
  3628  00DBCF  73                 	db	115	;'s'
  3629  00DBD0  75                 	db	117	;'u'
  3630  00DBD1  72                 	db	114	;'r'
  3631  00DBD2  65                 	db	101	;'e'
  3632  00DBD3  64                 	db	100	;'d'
  3633  00DBD4  20                 	db	32
  3634  00DBD5  6F                 	db	111	;'o'
  3635  00DBD6  75                 	db	117	;'u'
  3636  00DBD7  74                 	db	116	;'t'
  3637  00DBD8  70                 	db	112	;'p'
  3638  00DBD9  75                 	db	117	;'u'
  3639  00DBDA  74                 	db	116	;'t'
  3640  00DBDB  20                 	db	32
  3641  00DBDC  65                 	db	101	;'e'
  3642  00DBDD  6E                 	db	110	;'n'
  3643  00DBDE  65                 	db	101	;'e'
  3644  00DBDF  72                 	db	114	;'r'
  3645  00DBE0  67                 	db	103	;'g'
  3646  00DBE1  79                 	db	121	;'y'
  3647  00DBE2  20                 	db	32
  3648  00DBE3  74                 	db	116	;'t'
  3649  00DBE4  6F                 	db	111	;'o'
  3650  00DBE5  20                 	db	32
  3651  00DBE6  7A                 	db	122	;'z'
  3652  00DBE7  65                 	db	101	;'e'
  3653  00DBE8  72                 	db	114	;'r'
  3654  00DBE9  6F                 	db	111	;'o'
  3655  00DBEA  0A                 	db	10
  3656  00DBEB  0D                 	db	13
  3657  00DBEC  20                 	db	32
  3658  00DBED  20                 	db	32
  3659  00DBEE  20                 	db	32
  3660  00DBEF  4C                 	db	76	;'L'
  3661  00DBF0  6F                 	db	111	;'o'
  3662  00DBF1  61                 	db	97	;'a'
  3663  00DBF2  64                 	db	100	;'d'
  3664  00DBF3  20                 	db	32
  3665  00DBF4  4F                 	db	79	;'O'
  3666  00DBF5  6E                 	db	110	;'n'
  3667  00DBF6  20                 	db	32
  3668  00DBF7  54                 	db	84	;'T'
  3669  00DBF8  69                 	db	105	;'i'
  3670  00DBF9  6D                 	db	109	;'m'
  3671  00DBFA  65                 	db	101	;'e'
  3672  00DBFB  3F                 	db	63	;'?'
  3673  00DBFC  3A                 	db	58	;':'
  3674  00DBFD  20                 	db	32
  3675  00DBFE  52                 	db	82	;'R'
  3676  00DBFF  65                 	db	101	;'e'
  3677  00DC00  74                 	db	116	;'t'
  3678  00DC01  75                 	db	117	;'u'
  3679  00DC02  72                 	db	114	;'r'
  3680  00DC03  6E                 	db	110	;'n'
  3681  00DC04  73                 	db	115	;'s'
  3682  00DC05  20                 	db	32
  3683  00DC06  6C                 	db	108	;'l'
  3684  00DC07  6F                 	db	111	;'o'
  3685  00DC08  61                 	db	97	;'a'
  3686  00DC09  64                 	db	100	;'d'
  3687  00DC0A  20                 	db	32
  3688  00DC0B  6F                 	db	111	;'o'
  3689  00DC0C  6E                 	db	110	;'n'
  3690  00DC0D  20                 	db	32
  3691  00DC0E  74                 	db	116	;'t'
  3692  00DC0F  69                 	db	105	;'i'
  3693  00DC10  6D                 	db	109	;'m'
  3694  00DC11  65                 	db	101	;'e'
  3695  00DC12  20                 	db	32
  3696  00DC13  73                 	db	115	;'s'
  3697  00DC14  69                 	db	105	;'i'
  3698  00DC15  6E                 	db	110	;'n'
  3699  00DC16  63                 	db	99	;'c'
  3700  00DC17  65                 	db	101	;'e'
  3701  00DC18  20                 	db	32
  3702  00DC19  6C                 	db	108	;'l'
  3703  00DC1A  61                 	db	97	;'a'
  3704  00DC1B  73                 	db	115	;'s'
  3705  00DC1C  74                 	db	116	;'t'
  3706  00DC1D  20                 	db	32
  3707  00DC1E  64                 	db	100	;'d'
  3708  00DC1F  65                 	db	101	;'e'
  3709  00DC20  76                 	db	118	;'v'
  3710  00DC21  69                 	db	105	;'i'
  3711  00DC22  63                 	db	99	;'c'
  3712  00DC23  65                 	db	101	;'e'
  3713  00DC24  20                 	db	32
  3714  00DC25  72                 	db	114	;'r'
  3715  00DC26  65                 	db	101	;'e'
  3716  00DC27  73                 	db	115	;'s'
  3717  00DC28  65                 	db	101	;'e'
  3718  00DC29  74                 	db	116	;'t'
  3719  00DC2A  20                 	db	32
  3720  00DC2B  69                 	db	105	;'i'
  3721  00DC2C  6E                 	db	110	;'n'
  3722  00DC2D  20                 	db	32
  3723  00DC2E  73                 	db	115	;'s'
  3724  00DC2F  65                 	db	101	;'e'
  3725  00DC30  63                 	db	99	;'c'
  3726  00DC31  6F                 	db	111	;'o'
  3727  00DC32  6E                 	db	110	;'n'
  3728  00DC33  64                 	db	100	;'d'
  3729  00DC34  73                 	db	115	;'s'
  3730  00DC35  0A                 	db	10
  3731  00DC36  0D                 	db	13
  3732  00DC37  20                 	db	32
  3733  00DC38  20                 	db	32
  3734  00DC39  20                 	db	32
  3735  00DC3A  4D                 	db	77	;'M'
  3736  00DC3B  61                 	db	97	;'a'
  3737  00DC3C  78                 	db	120	;'x'
  3738  00DC3D  20                 	db	32
  3739  00DC3E  52                 	db	82	;'R'
  3740  00DC3F  4D                 	db	77	;'M'
  3741  00DC40  53                 	db	83	;'S'
  3742  00DC41  20                 	db	32
  3743  00DC42  43                 	db	67	;'C'
  3744  00DC43  75                 	db	117	;'u'
  3745  00DC44  72                 	db	114	;'r'
  3746  00DC45  72                 	db	114	;'r'
  3747  00DC46  65                 	db	101	;'e'
  3748  00DC47  6E                 	db	110	;'n'
  3749  00DC48  74                 	db	116	;'t'
  3750  00DC49  3F                 	db	63	;'?'
  3751  00DC4A  3A                 	db	58	;':'
  3752  00DC4B  20                 	db	32
  3753  00DC4C  50                 	db	80	;'P'
  3754  00DC4D  72                 	db	114	;'r'
  3755  00DC4E  69                 	db	105	;'i'
  3756  00DC4F  6E                 	db	110	;'n'
  3757  00DC50  74                 	db	116	;'t'
  3758  00DC51  73                 	db	115	;'s'
  3759  00DC52  20                 	db	32
  3760  00DC53  74                 	db	116	;'t'
  3761  00DC54  68                 	db	104	;'h'
  3762  00DC55  65                 	db	101	;'e'
  3763  00DC56  20                 	db	32
  3764  00DC57  6D                 	db	109	;'m'
  3765  00DC58  61                 	db	97	;'a'
  3766  00DC59  78                 	db	120	;'x'
  3767  00DC5A  69                 	db	105	;'i'
  3768  00DC5B  6D                 	db	109	;'m'
  3769  00DC5C  75                 	db	117	;'u'
  3770  00DC5D  6D                 	db	109	;'m'
  3771  00DC5E  20                 	db	32
  3772  00DC5F  72                 	db	114	;'r'
  3773  00DC60  65                 	db	101	;'e'
  3774  00DC61  63                 	db	99	;'c'
  3775  00DC62  6F                 	db	111	;'o'
  3776  00DC63  72                 	db	114	;'r'
  3777  00DC64  64                 	db	100	;'d'
  3778  00DC65  65                 	db	101	;'e'
  3779  00DC66  64                 	db	100	;'d'
  3780  00DC67  20                 	db	32
  3781  00DC68  52                 	db	82	;'R'
  3782  00DC69  4D                 	db	77	;'M'
  3783  00DC6A  53                 	db	83	;'S'
  3784  00DC6B  20                 	db	32
  3785  00DC6C  6F                 	db	111	;'o'
  3786  00DC6D  75                 	db	117	;'u'
  3787  00DC6E  74                 	db	116	;'t'
  3788  00DC6F  70                 	db	112	;'p'
  3789  00DC70  75                 	db	117	;'u'
  3790  00DC71  74                 	db	116	;'t'
  3791  00DC72  20                 	db	32
  3792  00DC73  63                 	db	99	;'c'
  3793  00DC74  75                 	db	117	;'u'
  3794  00DC75  72                 	db	114	;'r'
  3795  00DC76  72                 	db	114	;'r'
  3796  00DC77  65                 	db	101	;'e'
  3797  00DC78  6E                 	db	110	;'n'
  3798  00DC79  74                 	db	116	;'t'
  3799  00DC7A  0A                 	db	10
  3800  00DC7B  0D                 	db	13
  3801  00DC7C  20                 	db	32
  3802  00DC7D  20                 	db	32
  3803  00DC7E  20                 	db	32
  3804  00DC7F  4D                 	db	77	;'M'
  3805  00DC80  61                 	db	97	;'a'
  3806  00DC81  78                 	db	120	;'x'
  3807  00DC82  20                 	db	32
  3808  00DC83  50                 	db	80	;'P'
  3809  00DC84  6F                 	db	111	;'o'
  3810  00DC85  77                 	db	119	;'w'
  3811  00DC86  65                 	db	101	;'e'
  3812  00DC87  72                 	db	114	;'r'
  3813  00DC88  3F                 	db	63	;'?'
  3814  00DC89  3A                 	db	58	;':'
  3815  00DC8A  20                 	db	32
  3816  00DC8B  50                 	db	80	;'P'
  3817  00DC8C  72                 	db	114	;'r'
  3818  00DC8D  69                 	db	105	;'i'
  3819  00DC8E  6E                 	db	110	;'n'
  3820  00DC8F  74                 	db	116	;'t'
  3821  00DC90  73                 	db	115	;'s'
  3822  00DC91  20                 	db	32
  3823  00DC92  74                 	db	116	;'t'
  3824  00DC93  68                 	db	104	;'h'
  3825  00DC94  65                 	db	101	;'e'
  3826  00DC95  20                 	db	32
  3827  00DC96  6D                 	db	109	;'m'
  3828  00DC97  61                 	db	97	;'a'
  3829  00DC98  78                 	db	120	;'x'
  3830  00DC99  69                 	db	105	;'i'
  3831  00DC9A  6D                 	db	109	;'m'
  3832  00DC9B  75                 	db	117	;'u'
  3833  00DC9C  6D                 	db	109	;'m'
  3834  00DC9D  20                 	db	32
  3835  00DC9E  72                 	db	114	;'r'
  3836  00DC9F  65                 	db	101	;'e'
  3837  00DCA0  63                 	db	99	;'c'
  3838  00DCA1  6F                 	db	111	;'o'
  3839  00DCA2  72                 	db	114	;'r'
  3840  00DCA3  64                 	db	100	;'d'
  3841  00DCA4  65                 	db	101	;'e'
  3842  00DCA5  64                 	db	100	;'d'
  3843  00DCA6  20                 	db	32
  3844  00DCA7  6F                 	db	111	;'o'
  3845  00DCA8  75                 	db	117	;'u'
  3846  00DCA9  74                 	db	116	;'t'
  3847  00DCAA  70                 	db	112	;'p'
  3848  00DCAB  75                 	db	117	;'u'
  3849  00DCAC  74                 	db	116	;'t'
  3850  00DCAD  20                 	db	32
  3851  00DCAE  70                 	db	112	;'p'
  3852  00DCAF  6F                 	db	111	;'o'
  3853  00DCB0  77                 	db	119	;'w'
  3854  00DCB1  65                 	db	101	;'e'
  3855  00DCB2  72                 	db	114	;'r'
  3856  00DCB3  0A                 	db	10
  3857  00DCB4  0D                 	db	13
  3858  00DCB5  0A                 	db	10
  3859  00DCB6  0D                 	db	13
  3860  00DCB7  4F                 	db	79	;'O'
  3861  00DCB8  75                 	db	117	;'u'
  3862  00DCB9  74                 	db	116	;'t'
  3863  00DCBA  70                 	db	112	;'p'
  3864  00DCBB  75                 	db	117	;'u'
  3865  00DCBC  74                 	db	116	;'t'
  3866  00DCBD  20                 	db	32
  3867  00DCBE  43                 	db	67	;'C'
  3868  00DCBF  6F                 	db	111	;'o'
  3869  00DCC0  6E                 	db	110	;'n'
  3870  00DCC1  74                 	db	116	;'t'
  3871  00DCC2  72                 	db	114	;'r'
  3872  00DCC3  6F                 	db	111	;'o'
  3873  00DCC4  6C                 	db	108	;'l'
  3874  00DCC5  20                 	db	32
  3875  00DCC6  43                 	db	67	;'C'
  3876  00DCC7  6F                 	db	111	;'o'
  3877  00DCC8  6D                 	db	109	;'m'
  3878  00DCC9  6D                 	db	109	;'m'
  3879  00DCCA  61                 	db	97	;'a'
  3880  00DCCB  6E                 	db	110	;'n'
  3881  00DCCC  64                 	db	100	;'d'
  3882  00DCCD  73                 	db	115	;'s'
  3883  00DCCE  3A                 	db	58	;':'
  3884  00DCCF  20                 	db	32
  3885  00DCD0  43                 	db	67	;'C'
  3886  00DCD1  6F                 	db	111	;'o'
  3887  00DCD2  6E                 	db	110	;'n'
  3888  00DCD3  74                 	db	116	;'t'
  3889  00DCD4  72                 	db	114	;'r'
  3890  00DCD5  6F                 	db	111	;'o'
  3891  00DCD6  6C                 	db	108	;'l'
  3892  00DCD7  20                 	db	32
  3893  00DCD8  74                 	db	116	;'t'
  3894  00DCD9  68                 	db	104	;'h'
  3895  00DCDA  65                 	db	101	;'e'
  3896  00DCDB  20                 	db	32
  3897  00DCDC  6F                 	db	111	;'o'
  3898  00DCDD  75                 	db	117	;'u'
  3899  00DCDE  74                 	db	116	;'t'
  3900  00DCDF  70                 	db	112	;'p'
  3901  00DCE0  75                 	db	117	;'u'
  3902  00DCE1  74                 	db	116	;'t'
  3903  00DCE2  20                 	db	32
  3904  00DCE3  73                 	db	115	;'s'
  3905  00DCE4  74                 	db	116	;'t'
  3906  00DCE5  61                 	db	97	;'a'
  3907  00DCE6  74                 	db	116	;'t'
  3908  00DCE7  65                 	db	101	;'e'
  3909  00DCE8  20                 	db	32
  3910  00DCE9  61                 	db	97	;'a'
  3911  00DCEA  6E                 	db	110	;'n'
  3912  00DCEB  64                 	db	100	;'d'
  3913  00DCEC  20                 	db	32
  3914  00DCED  64                 	db	100	;'d'
  3915  00DCEE  69                 	db	105	;'i'
  3916  00DCEF  6D                 	db	109	;'m'
  3917  00DCF0  6D                 	db	109	;'m'
  3918  00DCF1  69                 	db	105	;'i'
  3919  00DCF2  6E                 	db	110	;'n'
  3920  00DCF3  67                 	db	103	;'g'
  3921  00DCF4  20                 	db	32
  3922  00DCF5  66                 	db	102	;'f'
  3923  00DCF6  65                 	db	101	;'e'
  3924  00DCF7  61                 	db	97	;'a'
  3925  00DCF8  74                 	db	116	;'t'
  3926  00DCF9  75                 	db	117	;'u'
  3927  00DCFA  72                 	db	114	;'r'
  3928  00DCFB  65                 	db	101	;'e'
  3929  00DCFC  73                 	db	115	;'s'
  3930  00DCFD  0A                 	db	10
  3931  00DCFE  0D                 	db	13
  3932  00DCFF  20                 	db	32
  3933  00DD00  20                 	db	32
  3934  00DD01  20                 	db	32
  3935  00DD02  45                 	db	69	;'E'
  3936  00DD03  6E                 	db	110	;'n'
  3937  00DD04  61                 	db	97	;'a'
  3938  00DD05  62                 	db	98	;'b'
  3939  00DD06  6C                 	db	108	;'l'
  3940  00DD07  65                 	db	101	;'e'
  3941  00DD08  20                 	db	32
  3942  00DD09  44                 	db	68	;'D'
  3943  00DD0A  69                 	db	105	;'i'
  3944  00DD0B  6D                 	db	109	;'m'
  3945  00DD0C  6D                 	db	109	;'m'
  3946  00DD0D  69                 	db	105	;'i'
  3947  00DD0E  6E                 	db	110	;'n'
  3948  00DD0F  67                 	db	103	;'g'
  3949  00DD10  3A                 	db	58	;':'
  3950  00DD11  20                 	db	32
  3951  00DD12  45                 	db	69	;'E'
  3952  00DD13  6E                 	db	110	;'n'
  3953  00DD14  61                 	db	97	;'a'
  3954  00DD15  62                 	db	98	;'b'
  3955  00DD16  6C                 	db	108	;'l'
  3956  00DD17  65                 	db	101	;'e'
  3957  00DD18  20                 	db	32
  3958  00DD19  54                 	db	84	;'T'
  3959  00DD1A  52                 	db	82	;'R'
  3960  00DD1B  49                 	db	73	;'I'
  3961  00DD1C  41                 	db	65	;'A'
  3962  00DD1D  43                 	db	67	;'C'
  3963  00DD1E  20                 	db	32
  3964  00DD1F  6F                 	db	111	;'o'
  3965  00DD20  75                 	db	117	;'u'
  3966  00DD21  74                 	db	116	;'t'
  3967  00DD22  70                 	db	112	;'p'
  3968  00DD23  75                 	db	117	;'u'
  3969  00DD24  74                 	db	116	;'t'
  3970  00DD25  20                 	db	32
  3971  00DD26  64                 	db	100	;'d'
  3972  00DD27  69                 	db	105	;'i'
  3973  00DD28  6D                 	db	109	;'m'
  3974  00DD29  6D                 	db	109	;'m'
  3975  00DD2A  69                 	db	105	;'i'
  3976  00DD2B  6E                 	db	110	;'n'
  3977  00DD2C  67                 	db	103	;'g'
  3978  00DD2D  0A                 	db	10
  3979  00DD2E  0D                 	db	13
  3980  00DD2F  20                 	db	32
  3981  00DD30  20                 	db	32
  3982  00DD31  20                 	db	32
  3983  00DD32  44                 	db	68	;'D'
  3984  00DD33  69                 	db	105	;'i'
  3985  00DD34  73                 	db	115	;'s'
  3986  00DD35  61                 	db	97	;'a'
  3987  00DD36  62                 	db	98	;'b'
  3988  00DD37  6C                 	db	108	;'l'
  3989  00DD38  65                 	db	101	;'e'
  3990  00DD39  20                 	db	32
  3991  00DD3A  44                 	db	68	;'D'
  3992  00DD3B  69                 	db	105	;'i'
  3993  00DD3C  6D                 	db	109	;'m'
  3994  00DD3D  6D                 	db	109	;'m'
  3995  00DD3E  69                 	db	105	;'i'
  3996  00DD3F  6E                 	db	110	;'n'
  3997  00DD40  67                 	db	103	;'g'
  3998  00DD41  3A                 	db	58	;':'
  3999  00DD42  20                 	db	32
  4000  00DD43  44                 	db	68	;'D'
  4001  00DD44  69                 	db	105	;'i'
  4002  00DD45  73                 	db	115	;'s'
  4003  00DD46  61                 	db	97	;'a'
  4004  00DD47  62                 	db	98	;'b'
  4005  00DD48  6C                 	db	108	;'l'
  4006  00DD49  65                 	db	101	;'e'
  4007  00DD4A  20                 	db	32
  4008  00DD4B  54                 	db	84	;'T'
  4009  00DD4C  52                 	db	82	;'R'
  4010  00DD4D  49                 	db	73	;'I'
  4011  00DD4E  41                 	db	65	;'A'
  4012  00DD4F  43                 	db	67	;'C'
  4013  00DD50  20                 	db	32
  4014  00DD51  6F                 	db	111	;'o'
  4015  00DD52  75                 	db	117	;'u'
  4016  00DD53  74                 	db	116	;'t'
  4017  00DD54  70                 	db	112	;'p'
  4018  00DD55  75                 	db	117	;'u'
  4019  00DD56  74                 	db	116	;'t'
  4020  00DD57  20                 	db	32
  4021  00DD58  64                 	db	100	;'d'
  4022  00DD59  69                 	db	105	;'i'
  4023  00DD5A  6D                 	db	109	;'m'
  4024  00DD5B  6D                 	db	109	;'m'
  4025  00DD5C  69                 	db	105	;'i'
  4026  00DD5D  6E                 	db	110	;'n'
  4027  00DD5E  67                 	db	103	;'g'
  4028  00DD5F  0A                 	db	10
  4029  00DD60  0D                 	db	13
  4030  00DD61  20                 	db	32
  4031  00DD62  20                 	db	32
  4032  00DD63  20                 	db	32
  4033  00DD64  45                 	db	69	;'E'
  4034  00DD65  6E                 	db	110	;'n'
  4035  00DD66  61                 	db	97	;'a'
  4036  00DD67  62                 	db	98	;'b'
  4037  00DD68  6C                 	db	108	;'l'
  4038  00DD69  65                 	db	101	;'e'
  4039  00DD6A  20                 	db	32
  4040  00DD6B  4C                 	db	76	;'L'
  4041  00DD6C  6F                 	db	111	;'o'
  4042  00DD6D  61                 	db	97	;'a'
  4043  00DD6E  64                 	db	100	;'d'
  4044  00DD6F  3A                 	db	58	;':'
  4045  00DD70  20                 	db	32
  4046  00DD71  45                 	db	69	;'E'
  4047  00DD72  6E                 	db	110	;'n'
  4048  00DD73  61                 	db	97	;'a'
  4049  00DD74  62                 	db	98	;'b'
  4050  00DD75  6C                 	db	108	;'l'
  4051  00DD76  65                 	db	101	;'e'
  4052  00DD77  73                 	db	115	;'s'
  4053  00DD78  20                 	db	32
  4054  00DD79  74                 	db	116	;'t'
  4055  00DD7A  68                 	db	104	;'h'
  4056  00DD7B  65                 	db	101	;'e'
  4057  00DD7C  20                 	db	32
  4058  00DD7D  6F                 	db	111	;'o'
  4059  00DD7E  75                 	db	117	;'u'
  4060  00DD7F  74                 	db	116	;'t'
  4061  00DD80  70                 	db	112	;'p'
  4062  00DD81  75                 	db	117	;'u'
  4063  00DD82  74                 	db	116	;'t'
  4064  00DD83  20                 	db	32
  4065  00DD84  54                 	db	84	;'T'
  4066  00DD85  52                 	db	82	;'R'
  4067  00DD86  49                 	db	73	;'I'
  4068  00DD87  41                 	db	65	;'A'
  4069  00DD88  43                 	db	67	;'C'
  4070  00DD89  20                 	db	32
  4071  00DD8A  77                 	db	119	;'w'
  4072  00DD8B  69                 	db	105	;'i'
  4073  00DD8C  74                 	db	116	;'t'
  4074  00DD8D  68                 	db	104	;'h'
  4075  00DD8E  20                 	db	32
  4076  00DD8F  64                 	db	100	;'d'
  4077  00DD90  69                 	db	105	;'i'
  4078  00DD91  6D                 	db	109	;'m'
  4079  00DD92  6D                 	db	109	;'m'
  4080  00DD93  69                 	db	105	;'i'
  4081  00DD94  6E                 	db	110	;'n'
  4082  00DD95  67                 	db	103	;'g'
  4083  00DD96  20                 	db	32
  4084  00DD97  64                 	db	100	;'d'
  4085  00DD98  69                 	db	105	;'i'
  4086  00DD99  73                 	db	115	;'s'
  4087  00DD9A  61                 	db	97	;'a'
  4088  00DD9B  62                 	db	98	;'b'
  4089  00DD9C  6C                 	db	108	;'l'
  4090  00DD9D  65                 	db	101	;'e'
  4091  00DD9E  64                 	db	100	;'d'
  4092  00DD9F  0A                 	db	10
  4093  00DDA0  0D                 	db	13
  4094  00DDA1  20                 	db	32
  4095  00DDA2  20                 	db	32
  4096  00DDA3  20                 	db	32
  4097  00DDA4  44                 	db	68	;'D'
  4098  00DDA5  69                 	db	105	;'i'
  4099  00DDA6  73                 	db	115	;'s'
  4100  00DDA7  61                 	db	97	;'a'
  4101  00DDA8  62                 	db	98	;'b'
  4102  00DDA9  6C                 	db	108	;'l'
  4103  00DDAA  65                 	db	101	;'e'
  4104  00DDAB  20                 	db	32
  4105  00DDAC  4C                 	db	76	;'L'
  4106  00DDAD  6F                 	db	111	;'o'
  4107  00DDAE  61                 	db	97	;'a'
  4108  00DDAF  64                 	db	100	;'d'
  4109  00DDB0  3A                 	db	58	;':'
  4110  00DDB1  20                 	db	32
  4111  00DDB2  44                 	db	68	;'D'
  4112  00DDB3  69                 	db	105	;'i'
  4113  00DDB4  73                 	db	115	;'s'
  4114  00DDB5  61                 	db	97	;'a'
  4115  00DDB6  62                 	db	98	;'b'
  4116  00DDB7  6C                 	db	108	;'l'
  4117  00DDB8  65                 	db	101	;'e'
  4118  00DDB9  73                 	db	115	;'s'
  4119  00DDBA  20                 	db	32
  4120  00DDBB  74                 	db	116	;'t'
  4121  00DDBC  68                 	db	104	;'h'
  4122  00DDBD  65                 	db	101	;'e'
  4123  00DDBE  20                 	db	32
  4124  00DDBF  6F                 	db	111	;'o'
  4125  00DDC0  75                 	db	117	;'u'
  4126  00DDC1  74                 	db	116	;'t'
  4127  00DDC2  70                 	db	112	;'p'
  4128  00DDC3  75                 	db	117	;'u'
  4129  00DDC4  74                 	db	116	;'t'
  4130  00DDC5  20                 	db	32
  4131  00DDC6  54                 	db	84	;'T'
  4132  00DDC7  52                 	db	82	;'R'
  4133  00DDC8  49                 	db	73	;'I'
  4134  00DDC9  41                 	db	65	;'A'
  4135  00DDCA  43                 	db	67	;'C'
  4136  00DDCB  20                 	db	32
  4137  00DDCC  63                 	db	99	;'c'
  4138  00DDCD  6F                 	db	111	;'o'
  4139  00DDCE  6D                 	db	109	;'m'
  4140  00DDCF  70                 	db	112	;'p'
  4141  00DDD0  6C                 	db	108	;'l'
  4142  00DDD1  65                 	db	101	;'e'
  4143  00DDD2  74                 	db	116	;'t'
  4144  00DDD3  65                 	db	101	;'e'
  4145  00DDD4  6C                 	db	108	;'l'
  4146  00DDD5  79                 	db	121	;'y'
  4147  00DDD6  0A                 	db	10
  4148  00DDD7  0D                 	db	13
  4149  00DDD8  20                 	db	32
  4150  00DDD9  20                 	db	32
  4151  00DDDA  20                 	db	32
  4152  00DDDB  4C                 	db	76	;'L'
  4153  00DDDC  6F                 	db	111	;'o'
  4154  00DDDD  61                 	db	97	;'a'
  4155  00DDDE  64                 	db	100	;'d'
  4156  00DDDF  20                 	db	32
  4157  00DDE0  45                 	db	69	;'E'
  4158  00DDE1  6E                 	db	110	;'n'
  4159  00DDE2  61                 	db	97	;'a'
  4160  00DDE3  62                 	db	98	;'b'
  4161  00DDE4  6C                 	db	108	;'l'
  4162  00DDE5  65                 	db	101	;'e'
  4163  00DDE6  64                 	db	100	;'d'
  4164  00DDE7  3F                 	db	63	;'?'
  4165  00DDE8  3A                 	db	58	;':'
  4166  00DDE9  20                 	db	32
  4167  00DDEA  52                 	db	82	;'R'
  4168  00DDEB  65                 	db	101	;'e'
  4169  00DDEC  74                 	db	116	;'t'
  4170  00DDED  75                 	db	117	;'u'
  4171  00DDEE  72                 	db	114	;'r'
  4172  00DDEF  6E                 	db	110	;'n'
  4173  00DDF0  73                 	db	115	;'s'
  4174  00DDF1  20                 	db	32
  4175  00DDF2  69                 	db	105	;'i'
  4176  00DDF3  66                 	db	102	;'f'
  4177  00DDF4  20                 	db	32
  4178  00DDF5  74                 	db	116	;'t'
  4179  00DDF6  68                 	db	104	;'h'
  4180  00DDF7  65                 	db	101	;'e'
  4181  00DDF8  20                 	db	32
  4182  00DDF9  6F                 	db	111	;'o'
  4183  00DDFA  75                 	db	117	;'u'
  4184  00DDFB  74                 	db	116	;'t'
  4185  00DDFC  70                 	db	112	;'p'
  4186  00DDFD  75                 	db	117	;'u'
  4187  00DDFE  74                 	db	116	;'t'
  4188  00DDFF  20                 	db	32
  4189  00DE00  6C                 	db	108	;'l'
  4190  00DE01  6F                 	db	111	;'o'
  4191  00DE02  61                 	db	97	;'a'
  4192  00DE03  64                 	db	100	;'d'
  4193  00DE04  20                 	db	32
  4194  00DE05  69                 	db	105	;'i'
  4195  00DE06  73                 	db	115	;'s'
  4196  00DE07  20                 	db	32
  4197  00DE08  65                 	db	101	;'e'
  4198  00DE09  6E                 	db	110	;'n'
  4199  00DE0A  61                 	db	97	;'a'
  4200  00DE0B  62                 	db	98	;'b'
  4201  00DE0C  6C                 	db	108	;'l'
  4202  00DE0D  65                 	db	101	;'e'
  4203  00DE0E  64                 	db	100	;'d'
  4204  00DE0F  20                 	db	32
  4205  00DE10  6F                 	db	111	;'o'
  4206  00DE11  72                 	db	114	;'r'
  4207  00DE12  20                 	db	32
  4208  00DE13  64                 	db	100	;'d'
  4209  00DE14  69                 	db	105	;'i'
  4210  00DE15  73                 	db	115	;'s'
  4211  00DE16  61                 	db	97	;'a'
  4212  00DE17  62                 	db	98	;'b'
  4213  00DE18  6C                 	db	108	;'l'
  4214  00DE19  65                 	db	101	;'e'
  4215  00DE1A  64                 	db	100	;'d'
  4216  00DE1B  0A                 	db	10
  4217  00DE1C  0D                 	db	13
  4218  00DE1D  20                 	db	32
  4219  00DE1E  20                 	db	32
  4220  00DE1F  20                 	db	32
  4221  00DE20  44                 	db	68	;'D'
  4222  00DE21  69                 	db	105	;'i'
  4223  00DE22  6D                 	db	109	;'m'
  4224  00DE23  6D                 	db	109	;'m'
  4225  00DE24  69                 	db	105	;'i'
  4226  00DE25  6E                 	db	110	;'n'
  4227  00DE26  67                 	db	103	;'g'
  4228  00DE27  20                 	db	32
  4229  00DE28  45                 	db	69	;'E'
  4230  00DE29  6E                 	db	110	;'n'
  4231  00DE2A  61                 	db	97	;'a'
  4232  00DE2B  62                 	db	98	;'b'
  4233  00DE2C  6C                 	db	108	;'l'
  4234  00DE2D  65                 	db	101	;'e'
  4235  00DE2E  64                 	db	100	;'d'
  4236  00DE2F  3F                 	db	63	;'?'
  4237  00DE30  3A                 	db	58	;':'
  4238  00DE31  20                 	db	32
  4239  00DE32  52                 	db	82	;'R'
  4240  00DE33  65                 	db	101	;'e'
  4241  00DE34  74                 	db	116	;'t'
  4242  00DE35  75                 	db	117	;'u'
  4243  00DE36  72                 	db	114	;'r'
  4244  00DE37  6E                 	db	110	;'n'
  4245  00DE38  73                 	db	115	;'s'
  4246  00DE39  20                 	db	32
  4247  00DE3A  69                 	db	105	;'i'
  4248  00DE3B  66                 	db	102	;'f'
  4249  00DE3C  20                 	db	32
  4250  00DE3D  64                 	db	100	;'d'
  4251  00DE3E  69                 	db	105	;'i'
  4252  00DE3F  6D                 	db	109	;'m'
  4253  00DE40  6D                 	db	109	;'m'
  4254  00DE41  69                 	db	105	;'i'
  4255  00DE42  6E                 	db	110	;'n'
  4256  00DE43  67                 	db	103	;'g'
  4257  00DE44  20                 	db	32
  4258  00DE45  6F                 	db	111	;'o'
  4259  00DE46  66                 	db	102	;'f'
  4260  00DE47  20                 	db	32
  4261  00DE48  74                 	db	116	;'t'
  4262  00DE49  68                 	db	104	;'h'
  4263  00DE4A  65                 	db	101	;'e'
  4264  00DE4B  20                 	db	32
  4265  00DE4C  6F                 	db	111	;'o'
  4266  00DE4D  75                 	db	117	;'u'
  4267  00DE4E  74                 	db	116	;'t'
  4268  00DE4F  70                 	db	112	;'p'
  4269  00DE50  75                 	db	117	;'u'
  4270  00DE51  74                 	db	116	;'t'
  4271  00DE52  20                 	db	32
  4272  00DE53  6C                 	db	108	;'l'
  4273  00DE54  6F                 	db	111	;'o'
  4274  00DE55  61                 	db	97	;'a'
  4275  00DE56  64                 	db	100	;'d'
  4276  00DE57  20                 	db	32
  4277  00DE58  69                 	db	105	;'i'
  4278  00DE59  73                 	db	115	;'s'
  4279  00DE5A  20                 	db	32
  4280  00DE5B  65                 	db	101	;'e'
  4281  00DE5C  6E                 	db	110	;'n'
  4282  00DE5D  61                 	db	97	;'a'
  4283  00DE5E  62                 	db	98	;'b'
  4284  00DE5F  6C                 	db	108	;'l'
  4285  00DE60  65                 	db	101	;'e'
  4286  00DE61  64                 	db	100	;'d'
  4287  00DE62  20                 	db	32
  4288  00DE63  6F                 	db	111	;'o'
  4289  00DE64  72                 	db	114	;'r'
  4290  00DE65  20                 	db	32
  4291  00DE66  6E                 	db	110	;'n'
  4292  00DE67  6F                 	db	111	;'o'
  4293  00DE68  74                 	db	116	;'t'
  4294  00DE69  0A                 	db	10
  4295  00DE6A  0D                 	db	13
  4296  00DE6B  20                 	db	32
  4297  00DE6C  20                 	db	32
  4298  00DE6D  20                 	db	32
  4299  00DE6E  53                 	db	83	;'S'
  4300  00DE6F  65                 	db	101	;'e'
  4301  00DE70  74                 	db	116	;'t'
  4302  00DE71  20                 	db	32
  4303  00DE72  44                 	db	68	;'D'
  4304  00DE73  69                 	db	105	;'i'
  4305  00DE74  6D                 	db	109	;'m'
  4306  00DE75  6D                 	db	109	;'m'
  4307  00DE76  69                 	db	105	;'i'
  4308  00DE77  6E                 	db	110	;'n'
  4309  00DE78  67                 	db	103	;'g'
  4310  00DE79  20                 	db	32
  4311  00DE7A  50                 	db	80	;'P'
  4312  00DE7B  65                 	db	101	;'e'
  4313  00DE7C  72                 	db	114	;'r'
  4314  00DE7D  63                 	db	99	;'c'
  4315  00DE7E  65                 	db	101	;'e'
  4316  00DE7F  6E                 	db	110	;'n'
  4317  00DE80  74                 	db	116	;'t'
  4318  00DE81  61                 	db	97	;'a'
  4319  00DE82  67                 	db	103	;'g'
  4320  00DE83  65                 	db	101	;'e'
  4321  00DE84  3A                 	db	58	;':'
  4322  00DE85  20                 	db	32
  4323  00DE86  3C                 	db	60	;'<'
  4324  00DE87  78                 	db	120	;'x'
  4325  00DE88  3E                 	db	62	;'>'
  4326  00DE89  3A                 	db	58	;':'
  4327  00DE8A  20                 	db	32
  4328  00DE8B  53                 	db	83	;'S'
  4329  00DE8C  65                 	db	101	;'e'
  4330  00DE8D  74                 	db	116	;'t'
  4331  00DE8E  73                 	db	115	;'s'
  4332  00DE8F  20                 	db	32
  4333  00DE90  74                 	db	116	;'t'
  4334  00DE91  68                 	db	104	;'h'
  4335  00DE92  65                 	db	101	;'e'
  4336  00DE93  20                 	db	32
  4337  00DE94  6F                 	db	111	;'o'
  4338  00DE95  75                 	db	117	;'u'
  4339  00DE96  74                 	db	116	;'t'
  4340  00DE97  70                 	db	112	;'p'
  4341  00DE98  75                 	db	117	;'u'
  4342  00DE99  74                 	db	116	;'t'
  4343  00DE9A  20                 	db	32
  4344  00DE9B  64                 	db	100	;'d'
  4345  00DE9C  69                 	db	105	;'i'
  4346  00DE9D  6D                 	db	109	;'m'
  4347  00DE9E  6D                 	db	109	;'m'
  4348  00DE9F  69                 	db	105	;'i'
  4349  00DEA0  6E                 	db	110	;'n'
  4350  00DEA1  67                 	db	103	;'g'
  4351  00DEA2  20                 	db	32
  4352  00DEA3  70                 	db	112	;'p'
  4353  00DEA4  65                 	db	101	;'e'
  4354  00DEA5  72                 	db	114	;'r'
  4355  00DEA6  63                 	db	99	;'c'
  4356  00DEA7  65                 	db	101	;'e'
  4357  00DEA8  6E                 	db	110	;'n'
  4358  00DEA9  74                 	db	116	;'t'
  4359  00DEAA  61                 	db	97	;'a'
  4360  00DEAB  67                 	db	103	;'g'
  4361  00DEAC  65                 	db	101	;'e'
  4362  00DEAD  20                 	db	32
  4363  00DEAE  61                 	db	97	;'a'
  4364  00DEAF  73                 	db	115	;'s'
  4365  00DEB0  20                 	db	32
  4366  00DEB1  78                 	db	120	;'x'
  4367  00DEB2  20                 	db	32
  4368  00DEB3  70                 	db	112	;'p'
  4369  00DEB4  65                 	db	101	;'e'
  4370  00DEB5  72                 	db	114	;'r'
  4371  00DEB6  63                 	db	99	;'c'
  4372  00DEB7  65                 	db	101	;'e'
  4373  00DEB8  6E                 	db	110	;'n'
  4374  00DEB9  74                 	db	116	;'t'
  4375  00DEBA  0A                 	db	10
  4376  00DEBB  0D                 	db	13
  4377  00DEBC  0A                 	db	10
  4378  00DEBD  0D                 	db	13
  4379  00DEBE  00                 	db	0
  4380  00DEBF                     STR_154:
  4381  00DEBF  4C                 	db	76	;'L'
  4382  00DEC0  69                 	db	105	;'i'
  4383  00DEC1  73                 	db	115	;'s'
  4384  00DEC2  74                 	db	116	;'t'
  4385  00DEC3  20                 	db	32
  4386  00DEC4  6F                 	db	111	;'o'
  4387  00DEC5  66                 	db	102	;'f'
  4388  00DEC6  20                 	db	32
  4389  00DEC7  73                 	db	115	;'s'
  4390  00DEC8  75                 	db	117	;'u'
  4391  00DEC9  70                 	db	112	;'p'
  4392  00DECA  70                 	db	112	;'p'
  4393  00DECB  6F                 	db	111	;'o'
  4394  00DECC  72                 	db	114	;'r'
  4395  00DECD  74                 	db	116	;'t'
  4396  00DECE  65                 	db	101	;'e'
  4397  00DECF  64                 	db	100	;'d'
  4398  00DED0  20                 	db	32
  4399  00DED1  44                 	db	68	;'D'
  4400  00DED2  65                 	db	101	;'e'
  4401  00DED3  76                 	db	118	;'v'
  4402  00DED4  69                 	db	105	;'i'
  4403  00DED5  63                 	db	99	;'c'
  4404  00DED6  65                 	db	101	;'e'
  4405  00DED7  20                 	db	32
  4406  00DED8  43                 	db	67	;'C'
  4407  00DED9  6F                 	db	111	;'o'
  4408  00DEDA  6E                 	db	110	;'n'
  4409  00DEDB  74                 	db	116	;'t'
  4410  00DEDC  72                 	db	114	;'r'
  4411  00DEDD  6F                 	db	111	;'o'
  4412  00DEDE  6C                 	db	108	;'l'
  4413  00DEDF  20                 	db	32
  4414  00DEE0  43                 	db	67	;'C'
  4415  00DEE1  6F                 	db	111	;'o'
  4416  00DEE2  6D                 	db	109	;'m'
  4417  00DEE3  6D                 	db	109	;'m'
  4418  00DEE4  61                 	db	97	;'a'
  4419  00DEE5  6E                 	db	110	;'n'
  4420  00DEE6  64                 	db	100	;'d'
  4421  00DEE7  73                 	db	115	;'s'
  4422  00DEE8  3A                 	db	58	;':'
  4423  00DEE9  0A                 	db	10
  4424  00DEEA  0D                 	db	13
  4425  00DEEB  20                 	db	32
  4426  00DEEC  20                 	db	32
  4427  00DEED  20                 	db	32
  4428  00DEEE  52                 	db	82	;'R'
  4429  00DEEF  65                 	db	101	;'e'
  4430  00DEF0  73                 	db	115	;'s'
  4431  00DEF1  65                 	db	101	;'e'
  4432  00DEF2  74                 	db	116	;'t'
  4433  00DEF3  3A                 	db	58	;':'
  4434  00DEF4  20                 	db	32
  4435  00DEF5  43                 	db	67	;'C'
  4436  00DEF6  6C                 	db	108	;'l'
  4437  00DEF7  65                 	db	101	;'e'
  4438  00DEF8  61                 	db	97	;'a'
  4439  00DEF9  72                 	db	114	;'r'
  4440  00DEFA  73                 	db	115	;'s'
  4441  00DEFB  20                 	db	32
  4442  00DEFC  74                 	db	116	;'t'
  4443  00DEFD  68                 	db	104	;'h'
  4444  00DEFE  65                 	db	101	;'e'
  4445  00DEFF  20                 	db	32
  4446  00DF00  74                 	db	116	;'t'
  4447  00DF01  65                 	db	101	;'e'
  4448  00DF02  72                 	db	114	;'r'
  4449  00DF03  6D                 	db	109	;'m'
  4450  00DF04  69                 	db	105	;'i'
  4451  00DF05  6E                 	db	110	;'n'
  4452  00DF06  61                 	db	97	;'a'
  4453  00DF07  6C                 	db	108	;'l'
  4454  00DF08  20                 	db	32
  4455  00DF09  61                 	db	97	;'a'
  4456  00DF0A  6E                 	db	110	;'n'
  4457  00DF0B  64                 	db	100	;'d'
  4458  00DF0C  20                 	db	32
  4459  00DF0D  72                 	db	114	;'r'
  4460  00DF0E  65                 	db	101	;'e'
  4461  00DF0F  73                 	db	115	;'s'
  4462  00DF10  65                 	db	101	;'e'
  4463  00DF11  74                 	db	116	;'t'
  4464  00DF12  73                 	db	115	;'s'
  4465  00DF13  20                 	db	32
  4466  00DF14  74                 	db	116	;'t'
  4467  00DF15  68                 	db	104	;'h'
  4468  00DF16  65                 	db	101	;'e'
  4469  00DF17  20                 	db	32
  4470  00DF18  6D                 	db	109	;'m'
  4471  00DF19  69                 	db	105	;'i'
  4472  00DF1A  63                 	db	99	;'c'
  4473  00DF1B  72                 	db	114	;'r'
  4474  00DF1C  6F                 	db	111	;'o'
  4475  00DF1D  63                 	db	99	;'c'
  4476  00DF1E  6F                 	db	111	;'o'
  4477  00DF1F  6E                 	db	110	;'n'
  4478  00DF20  74                 	db	116	;'t'
  4479  00DF21  72                 	db	114	;'r'
  4480  00DF22  6F                 	db	111	;'o'
  4481  00DF23  6C                 	db	108	;'l'
  4482  00DF24  6C                 	db	108	;'l'
  4483  00DF25  65                 	db	101	;'e'
  4484  00DF26  72                 	db	114	;'r'
  4485  00DF27  0A                 	db	10
  4486  00DF28  0D                 	db	13
  4487  00DF29  20                 	db	32
  4488  00DF2A  20                 	db	32
  4489  00DF2B  20                 	db	32
  4490  00DF2C  43                 	db	67	;'C'
  4491  00DF2D  6C                 	db	108	;'l'
  4492  00DF2E  65                 	db	101	;'e'
  4493  00DF2F  61                 	db	97	;'a'
  4494  00DF30  72                 	db	114	;'r'
  4495  00DF31  3A                 	db	58	;':'
  4496  00DF32  20                 	db	32
  4497  00DF33  43                 	db	67	;'C'
  4498  00DF34  6C                 	db	108	;'l'
  4499  00DF35  65                 	db	101	;'e'
  4500  00DF36  61                 	db	97	;'a'
  4501  00DF37  72                 	db	114	;'r'
  4502  00DF38  73                 	db	115	;'s'
  4503  00DF39  20                 	db	32
  4504  00DF3A  74                 	db	116	;'t'
  4505  00DF3B  68                 	db	104	;'h'
  4506  00DF3C  65                 	db	101	;'e'
  4507  00DF3D  20                 	db	32
  4508  00DF3E  74                 	db	116	;'t'
  4509  00DF3F  65                 	db	101	;'e'
  4510  00DF40  72                 	db	114	;'r'
  4511  00DF41  6D                 	db	109	;'m'
  4512  00DF42  69                 	db	105	;'i'
  4513  00DF43  6E                 	db	110	;'n'
  4514  00DF44  61                 	db	97	;'a'
  4515  00DF45  6C                 	db	108	;'l'
  4516  00DF46  20                 	db	32
  4517  00DF47  62                 	db	98	;'b'
  4518  00DF48  75                 	db	117	;'u'
  4519  00DF49  74                 	db	116	;'t'
  4520  00DF4A  20                 	db	32
  4521  00DF4B  64                 	db	100	;'d'
  4522  00DF4C  6F                 	db	111	;'o'
  4523  00DF4D  65                 	db	101	;'e'
  4524  00DF4E  73                 	db	115	;'s'
  4525  00DF4F  6E                 	db	110	;'n'
  4526  00DF50  27                 	db	39
  4527  00DF51  74                 	db	116	;'t'
  4528  00DF52  20                 	db	32
  4529  00DF53  72                 	db	114	;'r'
  4530  00DF54  65                 	db	101	;'e'
  4531  00DF55  73                 	db	115	;'s'
  4532  00DF56  65                 	db	101	;'e'
  4533  00DF57  74                 	db	116	;'t'
  4534  00DF58  20                 	db	32
  4535  00DF59  74                 	db	116	;'t'
  4536  00DF5A  68                 	db	104	;'h'
  4537  00DF5B  65                 	db	101	;'e'
  4538  00DF5C  20                 	db	32
  4539  00DF5D  6D                 	db	109	;'m'
  4540  00DF5E  69                 	db	105	;'i'
  4541  00DF5F  63                 	db	99	;'c'
  4542  00DF60  72                 	db	114	;'r'
  4543  00DF61  6F                 	db	111	;'o'
  4544  00DF62  0A                 	db	10
  4545  00DF63  0D                 	db	13
  4546  00DF64  20                 	db	32
  4547  00DF65  20                 	db	32
  4548  00DF66  20                 	db	32
  4549  00DF67  43                 	db	67	;'C'
  4550  00DF68  61                 	db	97	;'a'
  4551  00DF69  75                 	db	117	;'u'
  4552  00DF6A  73                 	db	115	;'s'
  4553  00DF6B  65                 	db	101	;'e'
  4554  00DF6C  20                 	db	32
  4555  00DF6D  6F                 	db	111	;'o'
  4556  00DF6E  66                 	db	102	;'f'
  4557  00DF6F  20                 	db	32
  4558  00DF70  52                 	db	82	;'R'
  4559  00DF71  65                 	db	101	;'e'
  4560  00DF72  73                 	db	115	;'s'
  4561  00DF73  65                 	db	101	;'e'
  4562  00DF74  74                 	db	116	;'t'
  4563  00DF75  3F                 	db	63	;'?'
  4564  00DF76  3A                 	db	58	;':'
  4565  00DF77  20                 	db	32
  4566  00DF78  52                 	db	82	;'R'
  4567  00DF79  65                 	db	101	;'e'
  4568  00DF7A  74                 	db	116	;'t'
  4569  00DF7B  75                 	db	117	;'u'
  4570  00DF7C  72                 	db	114	;'r'
  4571  00DF7D  6E                 	db	110	;'n'
  4572  00DF7E  73                 	db	115	;'s'
  4573  00DF7F  20                 	db	32
  4574  00DF80  74                 	db	116	;'t'
  4575  00DF81  68                 	db	104	;'h'
  4576  00DF82  65                 	db	101	;'e'
  4577  00DF83  20                 	db	32
  4578  00DF84  63                 	db	99	;'c'
  4579  00DF85  61                 	db	97	;'a'
  4580  00DF86  75                 	db	117	;'u'
  4581  00DF87  73                 	db	115	;'s'
  4582  00DF88  65                 	db	101	;'e'
  4583  00DF89  20                 	db	32
  4584  00DF8A  6F                 	db	111	;'o'
  4585  00DF8B  66                 	db	102	;'f'
  4586  00DF8C  20                 	db	32
  4587  00DF8D  74                 	db	116	;'t'
  4588  00DF8E  68                 	db	104	;'h'
  4589  00DF8F  65                 	db	101	;'e'
  4590  00DF90  20                 	db	32
  4591  00DF91  6D                 	db	109	;'m'
  4592  00DF92  6F                 	db	111	;'o'
  4593  00DF93  73                 	db	115	;'s'
  4594  00DF94  74                 	db	116	;'t'
  4595  00DF95  20                 	db	32
  4596  00DF96  72                 	db	114	;'r'
  4597  00DF97  65                 	db	101	;'e'
  4598  00DF98  63                 	db	99	;'c'
  4599  00DF99  65                 	db	101	;'e'
  4600  00DF9A  6E                 	db	110	;'n'
  4601  00DF9B  74                 	db	116	;'t'
  4602  00DF9C  20                 	db	32
  4603  00DF9D  64                 	db	100	;'d'
  4604  00DF9E  65                 	db	101	;'e'
  4605  00DF9F  76                 	db	118	;'v'
  4606  00DFA0  69                 	db	105	;'i'
  4607  00DFA1  63                 	db	99	;'c'
  4608  00DFA2  65                 	db	101	;'e'
  4609  00DFA3  20                 	db	32
  4610  00DFA4  72                 	db	114	;'r'
  4611  00DFA5  65                 	db	101	;'e'
  4612  00DFA6  73                 	db	115	;'s'
  4613  00DFA7  65                 	db	101	;'e'
  4614  00DFA8  74                 	db	116	;'t'
  4615  00DFA9  0A                 	db	10
  4616  00DFAA  0D                 	db	13
  4617  00DFAB  20                 	db	32
  4618  00DFAC  20                 	db	32
  4619  00DFAD  20                 	db	32
  4620  00DFAE  2A                 	db	42
  4621  00DFAF  49                 	db	73	;'I'
  4622  00DFB0  44                 	db	68	;'D'
  4623  00DFB1  4E                 	db	78	;'N'
  4624  00DFB2  3F                 	db	63	;'?'
  4625  00DFB3  3A                 	db	58	;':'
  4626  00DFB4  20                 	db	32
  4627  00DFB5  52                 	db	82	;'R'
  4628  00DFB6  65                 	db	101	;'e'
  4629  00DFB7  74                 	db	116	;'t'
  4630  00DFB8  75                 	db	117	;'u'
  4631  00DFB9  72                 	db	114	;'r'
  4632  00DFBA  6E                 	db	110	;'n'
  4633  00DFBB  73                 	db	115	;'s'
  4634  00DFBC  20                 	db	32
  4635  00DFBD  64                 	db	100	;'d'
  4636  00DFBE  65                 	db	101	;'e'
  4637  00DFBF  76                 	db	118	;'v'
  4638  00DFC0  69                 	db	105	;'i'
  4639  00DFC1  63                 	db	99	;'c'
  4640  00DFC2  65                 	db	101	;'e'
  4641  00DFC3  20                 	db	32
  4642  00DFC4  69                 	db	105	;'i'
  4643  00DFC5  64                 	db	100	;'d'
  4644  00DFC6  65                 	db	101	;'e'
  4645  00DFC7  6E                 	db	110	;'n'
  4646  00DFC8  74                 	db	116	;'t'
  4647  00DFC9  69                 	db	105	;'i'
  4648  00DFCA  66                 	db	102	;'f'
  4649  00DFCB  69                 	db	105	;'i'
  4650  00DFCC  63                 	db	99	;'c'
  4651  00DFCD  61                 	db	97	;'a'
  4652  00DFCE  74                 	db	116	;'t'
  4653  00DFCF  69                 	db	105	;'i'
  4654  00DFD0  6F                 	db	111	;'o'
  4655  00DFD1  6E                 	db	110	;'n'
  4656  00DFD2  20                 	db	32
  4657  00DFD3  73                 	db	115	;'s'
  4658  00DFD4  74                 	db	116	;'t'
  4659  00DFD5  72                 	db	114	;'r'
  4660  00DFD6  69                 	db	105	;'i'
  4661  00DFD7  6E                 	db	110	;'n'
  4662  00DFD8  67                 	db	103	;'g'
  4663  00DFD9  0A                 	db	10
  4664  00DFDA  0D                 	db	13
  4665  00DFDB  20                 	db	32
  4666  00DFDC  20                 	db	32
  4667  00DFDD  20                 	db	32
  4668  00DFDE  44                 	db	68	;'D'
  4669  00DFDF  65                 	db	101	;'e'
  4670  00DFE0  76                 	db	118	;'v'
  4671  00DFE1  69                 	db	105	;'i'
  4672  00DFE2  63                 	db	99	;'c'
  4673  00DFE3  65                 	db	101	;'e'
  4674  00DFE4  20                 	db	32
  4675  00DFE5  4F                 	db	79	;'O'
  4676  00DFE6  6E                 	db	110	;'n'
  4677  00DFE7  20                 	db	32
  4678  00DFE8  54                 	db	84	;'T'
  4679  00DFE9  69                 	db	105	;'i'
  4680  00DFEA  6D                 	db	109	;'m'
  4681  00DFEB  65                 	db	101	;'e'
  4682  00DFEC  3F                 	db	63	;'?'
  4683  00DFED  3A                 	db	58	;':'
  4684  00DFEE  20                 	db	32
  4685  00DFEF  52                 	db	82	;'R'
  4686  00DFF0  65                 	db	101	;'e'
  4687  00DFF1  74                 	db	116	;'t'
  4688  00DFF2  75                 	db	117	;'u'
  4689  00DFF3  72                 	db	114	;'r'
  4690  00DFF4  6E                 	db	110	;'n'
  4691  00DFF5  73                 	db	115	;'s'
  4692  00DFF6  20                 	db	32
  4693  00DFF7  64                 	db	100	;'d'
  4694  00DFF8  65                 	db	101	;'e'
  4695  00DFF9  76                 	db	118	;'v'
  4696  00DFFA  69                 	db	105	;'i'
  4697  00DFFB  63                 	db	99	;'c'
  4698  00DFFC  65                 	db	101	;'e'
  4699  00DFFD  20                 	db	32
  4700  00DFFE  6F                 	db	111	;'o'
  4701  00DFFF  6E                 	db	110	;'n'
  4702  00E000  20                 	db	32
  4703  00E001  74                 	db	116	;'t'
  4704  00E002  69                 	db	105	;'i'
  4705  00E003  6D                 	db	109	;'m'
  4706  00E004  65                 	db	101	;'e'
  4707  00E005  20                 	db	32
  4708  00E006  73                 	db	115	;'s'
  4709  00E007  69                 	db	105	;'i'
  4710  00E008  6E                 	db	110	;'n'
  4711  00E009  63                 	db	99	;'c'
  4712  00E00A  65                 	db	101	;'e'
  4713  00E00B  20                 	db	32
  4714  00E00C  6C                 	db	108	;'l'
  4715  00E00D  61                 	db	97	;'a'
  4716  00E00E  73                 	db	115	;'s'
  4717  00E00F  74                 	db	116	;'t'
  4718  00E010  20                 	db	32
  4719  00E011  64                 	db	100	;'d'
  4720  00E012  65                 	db	101	;'e'
  4721  00E013  76                 	db	118	;'v'
  4722  00E014  69                 	db	105	;'i'
  4723  00E015  63                 	db	99	;'c'
  4724  00E016  65                 	db	101	;'e'
  4725  00E017  20                 	db	32
  4726  00E018  72                 	db	114	;'r'
  4727  00E019  65                 	db	101	;'e'
  4728  00E01A  73                 	db	115	;'s'
  4729  00E01B  65                 	db	101	;'e'
  4730  00E01C  74                 	db	116	;'t'
  4731  00E01D  0A                 	db	10
  4732  00E01E  0D                 	db	13
  4733  00E01F  20                 	db	32
  4734  00E020  20                 	db	32
  4735  00E021  20                 	db	32
  4736  00E022  44                 	db	68	;'D'
  4737  00E023  65                 	db	101	;'e'
  4738  00E024  76                 	db	118	;'v'
  4739  00E025  69                 	db	105	;'i'
  4740  00E026  63                 	db	99	;'c'
  4741  00E027  65                 	db	101	;'e'
  4742  00E028  20                 	db	32
  4743  00E029  49                 	db	73	;'I'
  4744  00E02A  44                 	db	68	;'D'
  4745  00E02B  3F                 	db	63	;'?'
  4746  00E02C  3A                 	db	58	;':'
  4747  00E02D  20                 	db	32
  4748  00E02E  52                 	db	82	;'R'
  4749  00E02F  65                 	db	101	;'e'
  4750  00E030  74                 	db	116	;'t'
  4751  00E031  75                 	db	117	;'u'
  4752  00E032  72                 	db	114	;'r'
  4753  00E033  6E                 	db	110	;'n'
  4754  00E034  73                 	db	115	;'s'
  4755  00E035  20                 	db	32
  4756  00E036  64                 	db	100	;'d'
  4757  00E037  65                 	db	101	;'e'
  4758  00E038  76                 	db	118	;'v'
  4759  00E039  69                 	db	105	;'i'
  4760  00E03A  63                 	db	99	;'c'
  4761  00E03B  65                 	db	101	;'e'
  4762  00E03C  20                 	db	32
  4763  00E03D  49                 	db	73	;'I'
  4764  00E03E  44                 	db	68	;'D'
  4765  00E03F  20                 	db	32
  4766  00E040  61                 	db	97	;'a'
  4767  00E041  73                 	db	115	;'s'
  4768  00E042  20                 	db	32
  4769  00E043  70                 	db	112	;'p'
  4770  00E044  72                 	db	114	;'r'
  4771  00E045  65                 	db	101	;'e'
  4772  00E046  2D                 	db	45
  4773  00E047  70                 	db	112	;'p'
  4774  00E048  72                 	db	114	;'r'
  4775  00E049  6F                 	db	111	;'o'
  4776  00E04A  67                 	db	103	;'g'
  4777  00E04B  72                 	db	114	;'r'
  4778  00E04C  61                 	db	97	;'a'
  4779  00E04D  6D                 	db	109	;'m'
  4780  00E04E  6D                 	db	109	;'m'
  4781  00E04F  65                 	db	101	;'e'
  4782  00E050  64                 	db	100	;'d'
  4783  00E051  20                 	db	32
  4784  00E052  69                 	db	105	;'i'
  4785  00E053  6E                 	db	110	;'n'
  4786  00E054  20                 	db	32
  4787  00E055  66                 	db	102	;'f'
  4788  00E056  6C                 	db	108	;'l'
  4789  00E057  61                 	db	97	;'a'
  4790  00E058  73                 	db	115	;'s'
  4791  00E059  68                 	db	104	;'h'
  4792  00E05A  20                 	db	32
  4793  00E05B  6D                 	db	109	;'m'
  4794  00E05C  65                 	db	101	;'e'
  4795  00E05D  6D                 	db	109	;'m'
  4796  00E05E  6F                 	db	111	;'o'
  4797  00E05F  72                 	db	114	;'r'
  4798  00E060  79                 	db	121	;'y'
  4799  00E061  0A                 	db	10
  4800  00E062  0D                 	db	13
  4801  00E063  20                 	db	32
  4802  00E064  20                 	db	32
  4803  00E065  20                 	db	32
  4804  00E066  52                 	db	82	;'R'
  4805  00E067  65                 	db	101	;'e'
  4806  00E068  76                 	db	118	;'v'
  4807  00E069  69                 	db	105	;'i'
  4808  00E06A  73                 	db	115	;'s'
  4809  00E06B  69                 	db	105	;'i'
  4810  00E06C  6F                 	db	111	;'o'
  4811  00E06D  6E                 	db	110	;'n'
  4812  00E06E  20                 	db	32
  4813  00E06F  49                 	db	73	;'I'
  4814  00E070  44                 	db	68	;'D'
  4815  00E071  3F                 	db	63	;'?'
  4816  00E072  3A                 	db	58	;':'
  4817  00E073  20                 	db	32
  4818  00E074  52                 	db	82	;'R'
  4819  00E075  65                 	db	101	;'e'
  4820  00E076  74                 	db	116	;'t'
  4821  00E077  75                 	db	117	;'u'
  4822  00E078  72                 	db	114	;'r'
  4823  00E079  6E                 	db	110	;'n'
  4824  00E07A  73                 	db	115	;'s'
  4825  00E07B  20                 	db	32
  4826  00E07C  64                 	db	100	;'d'
  4827  00E07D  65                 	db	101	;'e'
  4828  00E07E  76                 	db	118	;'v'
  4829  00E07F  69                 	db	105	;'i'
  4830  00E080  63                 	db	99	;'c'
  4831  00E081  65                 	db	101	;'e'
  4832  00E082  20                 	db	32
  4833  00E083  73                 	db	115	;'s'
  4834  00E084  69                 	db	105	;'i'
  4835  00E085  6C                 	db	108	;'l'
  4836  00E086  69                 	db	105	;'i'
  4837  00E087  63                 	db	99	;'c'
  4838  00E088  6F                 	db	111	;'o'
  4839  00E089  6E                 	db	110	;'n'
  4840  00E08A  20                 	db	32
  4841  00E08B  72                 	db	114	;'r'
  4842  00E08C  65                 	db	101	;'e'
  4843  00E08D  76                 	db	118	;'v'
  4844  00E08E  69                 	db	105	;'i'
  4845  00E08F  73                 	db	115	;'s'
  4846  00E090  69                 	db	105	;'i'
  4847  00E091  6F                 	db	111	;'o'
  4848  00E092  6E                 	db	110	;'n'
  4849  00E093  20                 	db	32
  4850  00E094  49                 	db	73	;'I'
  4851  00E095  44                 	db	68	;'D'
  4852  00E096  20                 	db	32
  4853  00E097  61                 	db	97	;'a'
  4854  00E098  73                 	db	115	;'s'
  4855  00E099  20                 	db	32
  4856  00E09A  70                 	db	112	;'p'
  4857  00E09B  72                 	db	114	;'r'
  4858  00E09C  65                 	db	101	;'e'
  4859  00E09D  2D                 	db	45
  4860  00E09E  70                 	db	112	;'p'
  4861  00E09F  72                 	db	114	;'r'
  4862  00E0A0  6F                 	db	111	;'o'
  4863  00E0A1  67                 	db	103	;'g'
  4864  00E0A2  72                 	db	114	;'r'
  4865  00E0A3  61                 	db	97	;'a'
  4866  00E0A4  6D                 	db	109	;'m'
  4867  00E0A5  6D                 	db	109	;'m'
  4868  00E0A6  65                 	db	101	;'e'
  4869  00E0A7  64                 	db	100	;'d'
  4870  00E0A8  20                 	db	32
  4871  00E0A9  69                 	db	105	;'i'
  4872  00E0AA  6E                 	db	110	;'n'
  4873  00E0AB  20                 	db	32
  4874  00E0AC  66                 	db	102	;'f'
  4875  00E0AD  6C                 	db	108	;'l'
  4876  00E0AE  61                 	db	97	;'a'
  4877  00E0AF  73                 	db	115	;'s'
  4878  00E0B0  68                 	db	104	;'h'
  4879  00E0B1  20                 	db	32
  4880  00E0B2  6D                 	db	109	;'m'
  4881  00E0B3  65                 	db	101	;'e'
  4882  00E0B4  6D                 	db	109	;'m'
  4883  00E0B5  6F                 	db	111	;'o'
  4884  00E0B6  72                 	db	114	;'r'
  4885  00E0B7  79                 	db	121	;'y'
  4886  00E0B8  0A                 	db	10
  4887  00E0B9  0D                 	db	13
  4888  00E0BA  20                 	db	32
  4889  00E0BB  20                 	db	32
  4890  00E0BC  20                 	db	32
  4891  00E0BD  55                 	db	85	;'U'
  4892  00E0BE  73                 	db	115	;'s'
  4893  00E0BF  65                 	db	101	;'e'
  4894  00E0C0  72                 	db	114	;'r'
  4895  00E0C1  20                 	db	32
  4896  00E0C2  49                 	db	73	;'I'
  4897  00E0C3  44                 	db	68	;'D'
  4898  00E0C4  73                 	db	115	;'s'
  4899  00E0C5  3F                 	db	63	;'?'
  4900  00E0C6  3A                 	db	58	;':'
  4901  00E0C7  20                 	db	32
  4902  00E0C8  52                 	db	82	;'R'
  4903  00E0C9  65                 	db	101	;'e'
  4904  00E0CA  74                 	db	116	;'t'
  4905  00E0CB  75                 	db	117	;'u'
  4906  00E0CC  72                 	db	114	;'r'
  4907  00E0CD  6E                 	db	110	;'n'
  4908  00E0CE  73                 	db	115	;'s'
  4909  00E0CF  20                 	db	32
  4910  00E0D0  61                 	db	97	;'a'
  4911  00E0D1  20                 	db	32
  4912  00E0D2  6C                 	db	108	;'l'
  4913  00E0D3  69                 	db	105	;'i'
  4914  00E0D4  73                 	db	115	;'s'
  4915  00E0D5  74                 	db	116	;'t'
  4916  00E0D6  20                 	db	32
  4917  00E0D7  6F                 	db	111	;'o'
  4918  00E0D8  66                 	db	102	;'f'
  4919  00E0D9  20                 	db	32
  4920  00E0DA  75                 	db	117	;'u'
  4921  00E0DB  73                 	db	115	;'s'
  4922  00E0DC  65                 	db	101	;'e'
  4923  00E0DD  72                 	db	114	;'r'
  4924  00E0DE  20                 	db	32
  4925  00E0DF  49                 	db	73	;'I'
  4926  00E0E0  44                 	db	68	;'D'
  4927  00E0E1  73                 	db	115	;'s'
  4928  00E0E2  20                 	db	32
  4929  00E0E3  28                 	db	40
  4930  00E0E4  64                 	db	100	;'d'
  4931  00E0E5  69                 	db	105	;'i'
  4932  00E0E6  73                 	db	115	;'s'
  4933  00E0E7  70                 	db	112	;'p'
  4934  00E0E8  6C                 	db	108	;'l'
  4935  00E0E9  61                 	db	97	;'a'
  4936  00E0EA  79                 	db	121	;'y'
  4937  00E0EB  65                 	db	101	;'e'
  4938  00E0EC  64                 	db	100	;'d'
  4939  00E0ED  20                 	db	32
  4940  00E0EE  69                 	db	105	;'i'
  4941  00E0EF  6E                 	db	110	;'n'
  4942  00E0F0  20                 	db	32
  4943  00E0F1  68                 	db	104	;'h'
  4944  00E0F2  65                 	db	101	;'e'
  4945  00E0F3  78                 	db	120	;'x'
  4946  00E0F4  29                 	db	41
  4947  00E0F5  20                 	db	32
  4948  00E0F6  61                 	db	97	;'a'
  4949  00E0F7  73                 	db	115	;'s'
  4950  00E0F8  20                 	db	32
  4951  00E0F9  73                 	db	115	;'s'
  4952  00E0FA  74                 	db	116	;'t'
  4953  00E0FB  6F                 	db	111	;'o'
  4954  00E0FC  72                 	db	114	;'r'
  4955  00E0FD  65                 	db	101	;'e'
  4956  00E0FE  64                 	db	100	;'d'
  4957  00E0FF  20                 	db	32
  4958  00E100  69                 	db	105	;'i'
  4959  00E101  6E                 	db	110	;'n'
  4960  00E102  20                 	db	32
  4961  00E103  66                 	db	102	;'f'
  4962  00E104  6C                 	db	108	;'l'
  4963  00E105  61                 	db	97	;'a'
  4964  00E106  73                 	db	115	;'s'
  4965  00E107  68                 	db	104	;'h'
  4966  00E108  20                 	db	32
  4967  00E109  6D                 	db	109	;'m'
  4968  00E10A  65                 	db	101	;'e'
  4969  00E10B  6D                 	db	109	;'m'
  4970  00E10C  6F                 	db	111	;'o'
  4971  00E10D  72                 	db	114	;'r'
  4972  00E10E  79                 	db	121	;'y'
  4973  00E10F  0A                 	db	10
  4974  00E110  0D                 	db	13
  4975  00E111  20                 	db	32
  4976  00E112  20                 	db	32
  4977  00E113  20                 	db	32
  4978  00E114  41                 	db	65	;'A'
  4979  00E115  44                 	db	68	;'D'
  4980  00E116  43                 	db	67	;'C'
  4981  00E117  20                 	db	32
  4982  00E118  45                 	db	69	;'E'
  4983  00E119  72                 	db	114	;'r'
  4984  00E11A  72                 	db	114	;'r'
  4985  00E11B  6F                 	db	111	;'o'
  4986  00E11C  72                 	db	114	;'r'
  4987  00E11D  73                 	db	115	;'s'
  4988  00E11E  3F                 	db	63	;'?'
  4989  00E11F  3A                 	db	58	;':'
  4990  00E120  20                 	db	32
  4991  00E121  52                 	db	82	;'R'
  4992  00E122  65                 	db	101	;'e'
  4993  00E123  74                 	db	116	;'t'
  4994  00E124  75                 	db	117	;'u'
  4995  00E125  72                 	db	114	;'r'
  4996  00E126  6E                 	db	110	;'n'
  4997  00E127  73                 	db	115	;'s'
  4998  00E128  20                 	db	32
  4999  00E129  74                 	db	116	;'t'
  5000  00E12A  68                 	db	104	;'h'
  5001  00E12B  65                 	db	101	;'e'
  5002  00E12C  20                 	db	32
  5003  00E12D  63                 	db	99	;'c'
  5004  00E12E  61                 	db	97	;'a'
  5005  00E12F  75                 	db	117	;'u'
  5006  00E130  73                 	db	115	;'s'
  5007  00E131  65                 	db	101	;'e'
  5008  00E132  20                 	db	32
  5009  00E133  6F                 	db	111	;'o'
  5010  00E134  66                 	db	102	;'f'
  5011  00E135  20                 	db	32
  5012  00E136  61                 	db	97	;'a'
  5013  00E137  6E                 	db	110	;'n'
  5014  00E138  20                 	db	32
  5015  00E139  41                 	db	65	;'A'
  5016  00E13A  44                 	db	68	;'D'
  5017  00E13B  43                 	db	67	;'C'
  5018  00E13C  20                 	db	32
  5019  00E13D  65                 	db	101	;'e'
  5020  00E13E  72                 	db	114	;'r'
  5021  00E13F  72                 	db	114	;'r'
  5022  00E140  6F                 	db	111	;'o'
  5023  00E141  72                 	db	114	;'r'
  5024  00E142  20                 	db	32
  5025  00E143  69                 	db	105	;'i'
  5026  00E144  66                 	db	102	;'f'
  5027  00E145  20                 	db	32
  5028  00E146  61                 	db	97	;'a'
  5029  00E147  6E                 	db	110	;'n'
  5030  00E148  20                 	db	32
  5031  00E149  65                 	db	101	;'e'
  5032  00E14A  72                 	db	114	;'r'
  5033  00E14B  72                 	db	114	;'r'
  5034  00E14C  6F                 	db	111	;'o'
  5035  00E14D  72                 	db	114	;'r'
  5036  00E14E  20                 	db	32
  5037  00E14F  6F                 	db	111	;'o'
  5038  00E150  63                 	db	99	;'c'
  5039  00E151  63                 	db	99	;'c'
  5040  00E152  75                 	db	117	;'u'
  5041  00E153  72                 	db	114	;'r'
  5042  00E154  72                 	db	114	;'r'
  5043  00E155  65                 	db	101	;'e'
  5044  00E156  64                 	db	100	;'d'
  5045  00E157  0A                 	db	10
  5046  00E158  0D                 	db	13
  5047  00E159  20                 	db	32
  5048  00E15A  20                 	db	32
  5049  00E15B  20                 	db	32
  5050  00E15C  43                 	db	67	;'C'
  5051  00E15D  6C                 	db	108	;'l'
  5052  00E15E  65                 	db	101	;'e'
  5053  00E15F  61                 	db	97	;'a'
  5054  00E160  72                 	db	114	;'r'
  5055  00E161  20                 	db	32
  5056  00E162  41                 	db	65	;'A'
  5057  00E163  44                 	db	68	;'D'
  5058  00E164  43                 	db	67	;'C'
  5059  00E165  20                 	db	32
  5060  00E166  45                 	db	69	;'E'
  5061  00E167  72                 	db	114	;'r'
  5062  00E168  72                 	db	114	;'r'
  5063  00E169  6F                 	db	111	;'o'
  5064  00E16A  72                 	db	114	;'r'
  5065  00E16B  73                 	db	115	;'s'
  5066  00E16C  3A                 	db	58	;':'
  5067  00E16D  20                 	db	32
  5068  00E16E  43                 	db	67	;'C'
  5069  00E16F  6C                 	db	108	;'l'
  5070  00E170  65                 	db	101	;'e'
  5071  00E171  61                 	db	97	;'a'
  5072  00E172  72                 	db	114	;'r'
  5073  00E173  73                 	db	115	;'s'
  5074  00E174  20                 	db	32
  5075  00E175  74                 	db	116	;'t'
  5076  00E176  68                 	db	104	;'h'
  5077  00E177  65                 	db	101	;'e'
  5078  00E178  20                 	db	32
  5079  00E179  41                 	db	65	;'A'
  5080  00E17A  44                 	db	68	;'D'
  5081  00E17B  43                 	db	67	;'C'
  5082  00E17C  20                 	db	32
  5083  00E17D  65                 	db	101	;'e'
  5084  00E17E  72                 	db	114	;'r'
  5085  00E17F  72                 	db	114	;'r'
  5086  00E180  6F                 	db	111	;'o'
  5087  00E181  72                 	db	114	;'r'
  5088  00E182  20                 	db	32
  5089  00E183  61                 	db	97	;'a'
  5090  00E184  6E                 	db	110	;'n'
  5091  00E185  64                 	db	100	;'d'
  5092  00E186  20                 	db	32
  5093  00E187  72                 	db	114	;'r'
  5094  00E188  65                 	db	101	;'e'
  5095  00E189  73                 	db	115	;'s'
  5096  00E18A  75                 	db	117	;'u'
  5097  00E18B  6D                 	db	109	;'m'
  5098  00E18C  65                 	db	101	;'e'
  5099  00E18D  73                 	db	115	;'s'
  5100  00E18E  20                 	db	32
  5101  00E18F  41                 	db	65	;'A'
  5102  00E190  44                 	db	68	;'D'
  5103  00E191  43                 	db	67	;'C'
  5104  00E192  20                 	db	32
  5105  00E193  63                 	db	99	;'c'
  5106  00E194  6F                 	db	111	;'o'
  5107  00E195  6E                 	db	110	;'n'
  5108  00E196  76                 	db	118	;'v'
  5109  00E197  65                 	db	101	;'e'
  5110  00E198  72                 	db	114	;'r'
  5111  00E199  73                 	db	115	;'s'
  5112  00E19A  69                 	db	105	;'i'
  5113  00E19B  6F                 	db	111	;'o'
  5114  00E19C  6E                 	db	110	;'n'
  5115  00E19D  73                 	db	115	;'s'
  5116  00E19E  0A                 	db	10
  5117  00E19F  0D                 	db	13
  5118  00E1A0  20                 	db	32
  5119  00E1A1  20                 	db	32
  5120  00E1A2  20                 	db	32
  5121  00E1A3  43                 	db	67	;'C'
  5122  00E1A4  6F                 	db	111	;'o'
  5123  00E1A5  6D                 	db	109	;'m'
  5124  00E1A6  6D                 	db	109	;'m'
  5125  00E1A7  20                 	db	32
  5126  00E1A8  45                 	db	69	;'E'
  5127  00E1A9  72                 	db	114	;'r'
  5128  00E1AA  72                 	db	114	;'r'
  5129  00E1AB  6F                 	db	111	;'o'
  5130  00E1AC  72                 	db	114	;'r'
  5131  00E1AD  73                 	db	115	;'s'
  5132  00E1AE  3F                 	db	63	;'?'
  5133  00E1AF  3A                 	db	58	;':'
  5134  00E1B0  20                 	db	32
  5135  00E1B1  52                 	db	82	;'R'
  5136  00E1B2  65                 	db	101	;'e'
  5137  00E1B3  74                 	db	116	;'t'
  5138  00E1B4  75                 	db	117	;'u'
  5139  00E1B5  72                 	db	114	;'r'
  5140  00E1B6  6E                 	db	110	;'n'
  5141  00E1B7  73                 	db	115	;'s'
  5142  00E1B8  20                 	db	32
  5143  00E1B9  69                 	db	105	;'i'
  5144  00E1BA  66                 	db	102	;'f'
  5145  00E1BB  20                 	db	32
  5146  00E1BC  61                 	db	97	;'a'
  5147  00E1BD  20                 	db	32
  5148  00E1BE  63                 	db	99	;'c'
  5149  00E1BF  6F                 	db	111	;'o'
  5150  00E1C0  6D                 	db	109	;'m'
  5151  00E1C1  6D                 	db	109	;'m'
  5152  00E1C2  75                 	db	117	;'u'
  5153  00E1C3  6E                 	db	110	;'n'
  5154  00E1C4  69                 	db	105	;'i'
  5155  00E1C5  63                 	db	99	;'c'
  5156  00E1C6  61                 	db	97	;'a'
  5157  00E1C7  74                 	db	116	;'t'
  5158  00E1C8  69                 	db	105	;'i'
  5159  00E1C9  6F                 	db	111	;'o'
  5160  00E1CA  6E                 	db	110	;'n'
  5161  00E1CB  73                 	db	115	;'s'
  5162  00E1CC  20                 	db	32
  5163  00E1CD  65                 	db	101	;'e'
  5164  00E1CE  72                 	db	114	;'r'
  5165  00E1CF  72                 	db	114	;'r'
  5166  00E1D0  6F                 	db	111	;'o'
  5167  00E1D1  72                 	db	114	;'r'
  5168  00E1D2  20                 	db	32
  5169  00E1D3  68                 	db	104	;'h'
  5170  00E1D4  61                 	db	97	;'a'
  5171  00E1D5  73                 	db	115	;'s'
  5172  00E1D6  20                 	db	32
  5173  00E1D7  6F                 	db	111	;'o'
  5174  00E1D8  63                 	db	99	;'c'
  5175  00E1D9  63                 	db	99	;'c'
  5176  00E1DA  75                 	db	117	;'u'
  5177  00E1DB  72                 	db	114	;'r'
  5178  00E1DC  72                 	db	114	;'r'
  5179  00E1DD  65                 	db	101	;'e'
  5180  00E1DE  64                 	db	100	;'d'
  5181  00E1DF  0A                 	db	10
  5182  00E1E0  0D                 	db	13
  5183  00E1E1  20                 	db	32
  5184  00E1E2  20                 	db	32
  5185  00E1E3  20                 	db	32
  5186  00E1E4  43                 	db	67	;'C'
  5187  00E1E5  6C                 	db	108	;'l'
  5188  00E1E6  65                 	db	101	;'e'
  5189  00E1E7  61                 	db	97	;'a'
  5190  00E1E8  72                 	db	114	;'r'
  5191  00E1E9  20                 	db	32
  5192  00E1EA  43                 	db	67	;'C'
  5193  00E1EB  6F                 	db	111	;'o'
  5194  00E1EC  6D                 	db	109	;'m'
  5195  00E1ED  6D                 	db	109	;'m'
  5196  00E1EE  20                 	db	32
  5197  00E1EF  45                 	db	69	;'E'
  5198  00E1F0  72                 	db	114	;'r'
  5199  00E1F1  72                 	db	114	;'r'
  5200  00E1F2  6F                 	db	111	;'o'
  5201  00E1F3  72                 	db	114	;'r'
  5202  00E1F4  73                 	db	115	;'s'
  5203  00E1F5  3A                 	db	58	;':'
  5204  00E1F6  20                 	db	32
  5205  00E1F7  43                 	db	67	;'C'
  5206  00E1F8  6C                 	db	108	;'l'
  5207  00E1F9  65                 	db	101	;'e'
  5208  00E1FA  61                 	db	97	;'a'
  5209  00E1FB  72                 	db	114	;'r'
  5210  00E1FC  73                 	db	115	;'s'
  5211  00E1FD  20                 	db	32
  5212  00E1FE  74                 	db	116	;'t'
  5213  00E1FF  68                 	db	104	;'h'
  5214  00E200  65                 	db	101	;'e'
  5215  00E201  20                 	db	32
  5216  00E202  63                 	db	99	;'c'
  5217  00E203  6F                 	db	111	;'o'
  5218  00E204  6D                 	db	109	;'m'
  5219  00E205  6D                 	db	109	;'m'
  5220  00E206  75                 	db	117	;'u'
  5221  00E207  6E                 	db	110	;'n'
  5222  00E208  69                 	db	105	;'i'
  5223  00E209  63                 	db	99	;'c'
  5224  00E20A  61                 	db	97	;'a'
  5225  00E20B  74                 	db	116	;'t'
  5226  00E20C  69                 	db	105	;'i'
  5227  00E20D  6F                 	db	111	;'o'
  5228  00E20E  6E                 	db	110	;'n'
  5229  00E20F  73                 	db	115	;'s'
  5230  00E210  20                 	db	32
  5231  00E211  65                 	db	101	;'e'
  5232  00E212  72                 	db	114	;'r'
  5233  00E213  72                 	db	114	;'r'
  5234  00E214  6F                 	db	111	;'o'
  5235  00E215  72                 	db	114	;'r'
  5236  00E216  0A                 	db	10
  5237  00E217  0D                 	db	13
  5238  00E218  20                 	db	32
  5239  00E219  20                 	db	32
  5240  00E21A  20                 	db	32
  5241  00E21B  43                 	db	67	;'C'
  5242  00E21C  6C                 	db	108	;'l'
  5243  00E21D  65                 	db	101	;'e'
  5244  00E21E  61                 	db	97	;'a'
  5245  00E21F  72                 	db	114	;'r'
  5246  00E220  20                 	db	32
  5247  00E221  4D                 	db	77	;'M'
  5248  00E222  61                 	db	97	;'a'
  5249  00E223  78                 	db	120	;'x'
  5250  00E224  20                 	db	32
  5251  00E225  56                 	db	86	;'V'
  5252  00E226  61                 	db	97	;'a'
  5253  00E227  6C                 	db	108	;'l'
  5254  00E228  75                 	db	117	;'u'
  5255  00E229  65                 	db	101	;'e'
  5256  00E22A  73                 	db	115	;'s'
  5257  00E22B  3A                 	db	58	;':'
  5258  00E22C  20                 	db	32
  5259  00E22D  45                 	db	69	;'E'
  5260  00E22E  72                 	db	114	;'r'
  5261  00E22F  61                 	db	97	;'a'
  5262  00E230  73                 	db	115	;'s'
  5263  00E231  65                 	db	101	;'e'
  5264  00E232  73                 	db	115	;'s'
  5265  00E233  20                 	db	32
  5266  00E234  6D                 	db	109	;'m'
  5267  00E235  61                 	db	97	;'a'
  5268  00E236  78                 	db	120	;'x'
  5269  00E237  69                 	db	105	;'i'
  5270  00E238  6D                 	db	109	;'m'
  5271  00E239  75                 	db	117	;'u'
  5272  00E23A  6D                 	db	109	;'m'
  5273  00E23B  20                 	db	32
  5274  00E23C  72                 	db	114	;'r'
  5275  00E23D  65                 	db	101	;'e'
  5276  00E23E  63                 	db	99	;'c'
  5277  00E23F  6F                 	db	111	;'o'
  5278  00E240  72                 	db	114	;'r'
  5279  00E241  64                 	db	100	;'d'
  5280  00E242  65                 	db	101	;'e'
  5281  00E243  64                 	db	100	;'d'
  5282  00E244  20                 	db	32
  5283  00E245  76                 	db	118	;'v'
  5284  00E246  61                 	db	97	;'a'
  5285  00E247  6C                 	db	108	;'l'
  5286  00E248  75                 	db	117	;'u'
  5287  00E249  65                 	db	101	;'e'
  5288  00E24A  73                 	db	115	;'s'
  5289  00E24B  20                 	db	32
  5290  00E24C  66                 	db	102	;'f'
  5291  00E24D  72                 	db	114	;'r'
  5292  00E24E  6F                 	db	111	;'o'
  5293  00E24F  6D                 	db	109	;'m'
  5294  00E250  20                 	db	32
  5295  00E251  45                 	db	69	;'E'
  5296  00E252  45                 	db	69	;'E'
  5297  00E253  50                 	db	80	;'P'
  5298  00E254  52                 	db	82	;'R'
  5299  00E255  4F                 	db	79	;'O'
  5300  00E256  4D                 	db	77	;'M'
  5301  00E257  0A                 	db	10
  5302  00E258  0D                 	db	13
  5303  00E259  20                 	db	32
  5304  00E25A  20                 	db	32
  5305  00E25B  20                 	db	32
  5306  00E25C  48                 	db	72	;'H'
  5307  00E25D  65                 	db	101	;'e'
  5308  00E25E  6C                 	db	108	;'l'
  5309  00E25F  70                 	db	112	;'p'
  5310  00E260  3A                 	db	58	;':'
  5311  00E261  20                 	db	32
  5312  00E262  54                 	db	84	;'T'
  5313  00E263  68                 	db	104	;'h'
  5314  00E264  69                 	db	105	;'i'
  5315  00E265  73                 	db	115	;'s'
  5316  00E266  20                 	db	32
  5317  00E267  6D                 	db	109	;'m'
  5318  00E268  65                 	db	101	;'e'
  5319  00E269  73                 	db	115	;'s'
  5320  00E26A  73                 	db	115	;'s'
  5321  00E26B  61                 	db	97	;'a'
  5322  00E26C  67                 	db	103	;'g'
  5323  00E26D  65                 	db	101	;'e'
  5324  00E26E  2C                 	db	44
  5325  00E26F  20                 	db	32
  5326  00E270  6C                 	db	108	;'l'
  5327  00E271  69                 	db	105	;'i'
  5328  00E272  73                 	db	115	;'s'
  5329  00E273  74                 	db	116	;'t'
  5330  00E274  73                 	db	115	;'s'
  5331  00E275  20                 	db	32
  5332  00E276  73                 	db	115	;'s'
  5333  00E277  75                 	db	117	;'u'
  5334  00E278  70                 	db	112	;'p'
  5335  00E279  70                 	db	112	;'p'
  5336  00E27A  6F                 	db	111	;'o'
  5337  00E27B  72                 	db	114	;'r'
  5338  00E27C  74                 	db	116	;'t'
  5339  00E27D  65                 	db	101	;'e'
  5340  00E27E  64                 	db	100	;'d'
  5341  00E27F  20                 	db	32
  5342  00E280  63                 	db	99	;'c'
  5343  00E281  6F                 	db	111	;'o'
  5344  00E282  6D                 	db	109	;'m'
  5345  00E283  6D                 	db	109	;'m'
  5346  00E284  61                 	db	97	;'a'
  5347  00E285  6E                 	db	110	;'n'
  5348  00E286  64                 	db	100	;'d'
  5349  00E287  73                 	db	115	;'s'
  5350  00E288  0A                 	db	10
  5351  00E289  0D                 	db	13
  5352  00E28A  0A                 	db	10
  5353  00E28B  0D                 	db	13
  5354  00E28C  00                 	db	0
  5355  00E28D                     STR_158:
  5356  00E28D  4C                 	db	76	;'L'
  5357  00E28E  69                 	db	105	;'i'
  5358  00E28F  73                 	db	115	;'s'
  5359  00E290  74                 	db	116	;'t'
  5360  00E291  20                 	db	32
  5361  00E292  6F                 	db	111	;'o'
  5362  00E293  66                 	db	102	;'f'
  5363  00E294  20                 	db	32
  5364  00E295  73                 	db	115	;'s'
  5365  00E296  75                 	db	117	;'u'
  5366  00E297  70                 	db	112	;'p'
  5367  00E298  70                 	db	112	;'p'
  5368  00E299  6F                 	db	111	;'o'
  5369  00E29A  72                 	db	114	;'r'
  5370  00E29B  74                 	db	116	;'t'
  5371  00E29C  65                 	db	101	;'e'
  5372  00E29D  64                 	db	100	;'d'
  5373  00E29E  20                 	db	32
  5374  00E29F  50                 	db	80	;'P'
  5375  00E2A0  72                 	db	114	;'r'
  5376  00E2A1  69                 	db	105	;'i'
  5377  00E2A2  6D                 	db	109	;'m'
  5378  00E2A3  61                 	db	97	;'a'
  5379  00E2A4  72                 	db	114	;'r'
  5380  00E2A5  79                 	db	121	;'y'
  5381  00E2A6  20                 	db	32
  5382  00E2A7  4D                 	db	77	;'M'
  5383  00E2A8  65                 	db	101	;'e'
  5384  00E2A9  61                 	db	97	;'a'
  5385  00E2AA  73                 	db	115	;'s'
  5386  00E2AB  75                 	db	117	;'u'
  5387  00E2AC  72                 	db	114	;'r'
  5388  00E2AD  65                 	db	101	;'e'
  5389  00E2AE  6D                 	db	109	;'m'
  5390  00E2AF  65                 	db	101	;'e'
  5391  00E2B0  6E                 	db	110	;'n'
  5392  00E2B1  74                 	db	116	;'t'
  5393  00E2B2  20                 	db	32
  5394  00E2B3  43                 	db	67	;'C'
  5395  00E2B4  6F                 	db	111	;'o'
  5396  00E2B5  6D                 	db	109	;'m'
  5397  00E2B6  6D                 	db	109	;'m'
  5398  00E2B7  61                 	db	97	;'a'
  5399  00E2B8  6E                 	db	110	;'n'
  5400  00E2B9  64                 	db	100	;'d'
  5401  00E2BA  73                 	db	115	;'s'
  5402  00E2BB  3A                 	db	58	;':'
  5403  00E2BC  0A                 	db	10
  5404  00E2BD  0D                 	db	13
  5405  00E2BE  20                 	db	32
  5406  00E2BF  20                 	db	32
  5407  00E2C0  20                 	db	32
  5408  00E2C1  4D                 	db	77	;'M'
  5409  00E2C2  65                 	db	101	;'e'
  5410  00E2C3  61                 	db	97	;'a'
  5411  00E2C4  73                 	db	115	;'s'
  5412  00E2C5  75                 	db	117	;'u'
  5413  00E2C6  72                 	db	114	;'r'
  5414  00E2C7  65                 	db	101	;'e'
  5415  00E2C8  20                 	db	32
  5416  00E2C9  44                 	db	68	;'D'
  5417  00E2CA  65                 	db	101	;'e'
  5418  00E2CB  74                 	db	116	;'t'
  5419  00E2CC  65                 	db	101	;'e'
  5420  00E2CD  63                 	db	99	;'c'
  5421  00E2CE  74                 	db	116	;'t'
  5422  00E2CF  65                 	db	101	;'e'
  5423  00E2D0  64                 	db	100	;'d'
  5424  00E2D1  20                 	db	32
  5425  00E2D2  43                 	db	67	;'C'
  5426  00E2D3  75                 	db	117	;'u'
  5427  00E2D4  72                 	db	114	;'r'
  5428  00E2D5  72                 	db	114	;'r'
  5429  00E2D6  65                 	db	101	;'e'
  5430  00E2D7  6E                 	db	110	;'n'
  5431  00E2D8  74                 	db	116	;'t'
  5432  00E2D9  3F                 	db	63	;'?'
  5433  00E2DA  3A                 	db	58	;':'
  5434  00E2DB  20                 	db	32
  5435  00E2DC  52                 	db	82	;'R'
  5436  00E2DD  65                 	db	101	;'e'
  5437  00E2DE  74                 	db	116	;'t'
  5438  00E2DF  75                 	db	117	;'u'
  5439  00E2E0  72                 	db	114	;'r'
  5440  00E2E1  6E                 	db	110	;'n'
  5441  00E2E2  73                 	db	115	;'s'
  5442  00E2E3  20                 	db	32
  5443  00E2E4  6D                 	db	109	;'m'
  5444  00E2E5  65                 	db	101	;'e'
  5445  00E2E6  61                 	db	97	;'a'
  5446  00E2E7  73                 	db	115	;'s'
  5447  00E2E8  75                 	db	117	;'u'
  5448  00E2E9  72                 	db	114	;'r'
  5449  00E2EA  65                 	db	101	;'e'
  5450  00E2EB  64                 	db	100	;'d'
  5451  00E2EC  20                 	db	32
  5452  00E2ED  6F                 	db	111	;'o'
  5453  00E2EE  75                 	db	117	;'u'
  5454  00E2EF  74                 	db	116	;'t'
  5455  00E2F0  70                 	db	112	;'p'
  5456  00E2F1  75                 	db	117	;'u'
  5457  00E2F2  74                 	db	116	;'t'
  5458  00E2F3  20                 	db	32
  5459  00E2F4  63                 	db	99	;'c'
  5460  00E2F5  75                 	db	117	;'u'
  5461  00E2F6  72                 	db	114	;'r'
  5462  00E2F7  72                 	db	114	;'r'
  5463  00E2F8  65                 	db	101	;'e'
  5464  00E2F9  6E                 	db	110	;'n'
  5465  00E2FA  74                 	db	116	;'t'
  5466  00E2FB  20                 	db	32
  5467  00E2FC  69                 	db	105	;'i'
  5468  00E2FD  6E                 	db	110	;'n'
  5469  00E2FE  20                 	db	32
  5470  00E2FF  61                 	db	97	;'a'
  5471  00E300  6D                 	db	109	;'m'
  5472  00E301  70                 	db	112	;'p'
  5473  00E302  73                 	db	115	;'s'
  5474  00E303  20                 	db	32
  5475  00E304  61                 	db	97	;'a'
  5476  00E305  73                 	db	115	;'s'
  5477  00E306  20                 	db	32
  5478  00E307  73                 	db	115	;'s'
  5479  00E308  65                 	db	101	;'e'
  5480  00E309  65                 	db	101	;'e'
  5481  00E30A  6E                 	db	110	;'n'
  5482  00E30B  20                 	db	32
  5483  00E30C  62                 	db	98	;'b'
  5484  00E30D  79                 	db	121	;'y'
  5485  00E30E  20                 	db	32
  5486  00E30F  41                 	db	65	;'A'
  5487  00E310  44                 	db	68	;'D'
  5488  00E311  43                 	db	67	;'C'
  5489  00E312  0A                 	db	10
  5490  00E313  0D                 	db	13
  5491  00E314  20                 	db	32
  5492  00E315  20                 	db	32
  5493  00E316  20                 	db	32
  5494  00E317  4D                 	db	77	;'M'
  5495  00E318  65                 	db	101	;'e'
  5496  00E319  61                 	db	97	;'a'
  5497  00E31A  73                 	db	115	;'s'
  5498  00E31B  75                 	db	117	;'u'
  5499  00E31C  72                 	db	114	;'r'
  5500  00E31D  65                 	db	101	;'e'
  5501  00E31E  20                 	db	32
  5502  00E31F  52                 	db	82	;'R'
  5503  00E320  4D                 	db	77	;'M'
  5504  00E321  53                 	db	83	;'S'
  5505  00E322  20                 	db	32
  5506  00E323  43                 	db	67	;'C'
  5507  00E324  75                 	db	117	;'u'
  5508  00E325  72                 	db	114	;'r'
  5509  00E326  72                 	db	114	;'r'
  5510  00E327  65                 	db	101	;'e'
  5511  00E328  6E                 	db	110	;'n'
  5512  00E329  74                 	db	116	;'t'
  5513  00E32A  3F                 	db	63	;'?'
  5514  00E32B  3A                 	db	58	;':'
  5515  00E32C  20                 	db	32
  5516  00E32D  52                 	db	82	;'R'
  5517  00E32E  65                 	db	101	;'e'
  5518  00E32F  74                 	db	116	;'t'
  5519  00E330  75                 	db	117	;'u'
  5520  00E331  72                 	db	114	;'r'
  5521  00E332  6E                 	db	110	;'n'
  5522  00E333  73                 	db	115	;'s'
  5523  00E334  20                 	db	32
  5524  00E335  74                 	db	116	;'t'
  5525  00E336  68                 	db	104	;'h'
  5526  00E337  65                 	db	101	;'e'
  5527  00E338  20                 	db	32
  5528  00E339  63                 	db	99	;'c'
  5529  00E33A  61                 	db	97	;'a'
  5530  00E33B  6C                 	db	108	;'l'
  5531  00E33C  63                 	db	99	;'c'
  5532  00E33D  75                 	db	117	;'u'
  5533  00E33E  6C                 	db	108	;'l'
  5534  00E33F  61                 	db	97	;'a'
  5535  00E340  74                 	db	116	;'t'
  5536  00E341  65                 	db	101	;'e'
  5537  00E342  64                 	db	100	;'d'
  5538  00E343  20                 	db	32
  5539  00E344  52                 	db	82	;'R'
  5540  00E345  4D                 	db	77	;'M'
  5541  00E346  53                 	db	83	;'S'
  5542  00E347  20                 	db	32
  5543  00E348  6F                 	db	111	;'o'
  5544  00E349  75                 	db	117	;'u'
  5545  00E34A  74                 	db	116	;'t'
  5546  00E34B  70                 	db	112	;'p'
  5547  00E34C  75                 	db	117	;'u'
  5548  00E34D  74                 	db	116	;'t'
  5549  00E34E  20                 	db	32
  5550  00E34F  63                 	db	99	;'c'
  5551  00E350  75                 	db	117	;'u'
  5552  00E351  72                 	db	114	;'r'
  5553  00E352  72                 	db	114	;'r'
  5554  00E353  65                 	db	101	;'e'
  5555  00E354  6E                 	db	110	;'n'
  5556  00E355  74                 	db	116	;'t'
  5557  00E356  20                 	db	32
  5558  00E357  66                 	db	102	;'f'
  5559  00E358  72                 	db	114	;'r'
  5560  00E359  6F                 	db	111	;'o'
  5561  00E35A  6D                 	db	109	;'m'
  5562  00E35B  20                 	db	32
  5563  00E35C  6D                 	db	109	;'m'
  5564  00E35D  65                 	db	101	;'e'
  5565  00E35E  61                 	db	97	;'a'
  5566  00E35F  73                 	db	115	;'s'
  5567  00E360  75                 	db	117	;'u'
  5568  00E361  72                 	db	114	;'r'
  5569  00E362  65                 	db	101	;'e'
  5570  00E363  6D                 	db	109	;'m'
  5571  00E364  65                 	db	101	;'e'
  5572  00E365  6E                 	db	110	;'n'
  5573  00E366  74                 	db	116	;'t'
  5574  00E367  73                 	db	115	;'s'
  5575  00E368  20                 	db	32
  5576  00E369  61                 	db	97	;'a'
  5577  00E36A  6E                 	db	110	;'n'
  5578  00E36B  64                 	db	100	;'d'
  5579  00E36C  20                 	db	32
  5580  00E36D  54                 	db	84	;'T'
  5581  00E36E  52                 	db	82	;'R'
  5582  00E36F  49                 	db	73	;'I'
  5583  00E370  41                 	db	65	;'A'
  5584  00E371  43                 	db	67	;'C'
  5585  00E372  20                 	db	32
  5586  00E373  66                 	db	102	;'f'
  5587  00E374  69                 	db	105	;'i'
  5588  00E375  72                 	db	114	;'r'
  5589  00E376  69                 	db	105	;'i'
  5590  00E377  6E                 	db	110	;'n'
  5591  00E378  67                 	db	103	;'g'
  5592  00E379  20                 	db	32
  5593  00E37A  61                 	db	97	;'a'
  5594  00E37B  6E                 	db	110	;'n'
  5595  00E37C  67                 	db	103	;'g'
  5596  00E37D  6C                 	db	108	;'l'
  5597  00E37E  65                 	db	101	;'e'
  5598  00E37F  0A                 	db	10
  5599  00E380  0D                 	db	13
  5600  00E381  20                 	db	32
  5601  00E382  20                 	db	32
  5602  00E383  20                 	db	32
  5603  00E384  4D                 	db	77	;'M'
  5604  00E385  65                 	db	101	;'e'
  5605  00E386  61                 	db	97	;'a'
  5606  00E387  73                 	db	115	;'s'
  5607  00E388  75                 	db	117	;'u'
  5608  00E389  72                 	db	114	;'r'
  5609  00E38A  65                 	db	101	;'e'
  5610  00E38B  20                 	db	32
  5611  00E38C  52                 	db	82	;'R'
  5612  00E38D  4D                 	db	77	;'M'
  5613  00E38E  53                 	db	83	;'S'
  5614  00E38F  20                 	db	32
  5615  00E390  56                 	db	86	;'V'
  5616  00E391  6F                 	db	111	;'o'
  5617  00E392  6C                 	db	108	;'l'
  5618  00E393  74                 	db	116	;'t'
  5619  00E394  61                 	db	97	;'a'
  5620  00E395  67                 	db	103	;'g'
  5621  00E396  65                 	db	101	;'e'
  5622  00E397  3F                 	db	63	;'?'
  5623  00E398  3A                 	db	58	;':'
  5624  00E399  20                 	db	32
  5625  00E39A  52                 	db	82	;'R'
  5626  00E39B  65                 	db	101	;'e'
  5627  00E39C  74                 	db	116	;'t'
  5628  00E39D  75                 	db	117	;'u'
  5629  00E39E  72                 	db	114	;'r'
  5630  00E39F  6E                 	db	110	;'n'
  5631  00E3A0  73                 	db	115	;'s'
  5632  00E3A1  20                 	db	32
  5633  00E3A2  74                 	db	116	;'t'
  5634  00E3A3  68                 	db	104	;'h'
  5635  00E3A4  65                 	db	101	;'e'
  5636  00E3A5  20                 	db	32
  5637  00E3A6  63                 	db	99	;'c'
  5638  00E3A7  61                 	db	97	;'a'
  5639  00E3A8  6C                 	db	108	;'l'
  5640  00E3A9  63                 	db	99	;'c'
  5641  00E3AA  75                 	db	117	;'u'
  5642  00E3AB  6C                 	db	108	;'l'
  5643  00E3AC  61                 	db	97	;'a'
  5644  00E3AD  74                 	db	116	;'t'
  5645  00E3AE  65                 	db	101	;'e'
  5646  00E3AF  64                 	db	100	;'d'
  5647  00E3B0  20                 	db	32
  5648  00E3B1  52                 	db	82	;'R'
  5649  00E3B2  4D                 	db	77	;'M'
  5650  00E3B3  53                 	db	83	;'S'
  5651  00E3B4  20                 	db	32
  5652  00E3B5  6F                 	db	111	;'o'
  5653  00E3B6  75                 	db	117	;'u'
  5654  00E3B7  74                 	db	116	;'t'
  5655  00E3B8  70                 	db	112	;'p'
  5656  00E3B9  75                 	db	117	;'u'
  5657  00E3BA  74                 	db	116	;'t'
  5658  00E3BB  20                 	db	32
  5659  00E3BC  76                 	db	118	;'v'
  5660  00E3BD  6F                 	db	111	;'o'
  5661  00E3BE  6C                 	db	108	;'l'
  5662  00E3BF  74                 	db	116	;'t'
  5663  00E3C0  61                 	db	97	;'a'
  5664  00E3C1  67                 	db	103	;'g'
  5665  00E3C2  65                 	db	101	;'e'
  5666  00E3C3  20                 	db	32
  5667  00E3C4  66                 	db	102	;'f'
  5668  00E3C5  72                 	db	114	;'r'
  5669  00E3C6  6F                 	db	111	;'o'
  5670  00E3C7  6D                 	db	109	;'m'
  5671  00E3C8  20                 	db	32
  5672  00E3C9  54                 	db	84	;'T'
  5673  00E3CA  52                 	db	82	;'R'
  5674  00E3CB  49                 	db	73	;'I'
  5675  00E3CC  41                 	db	65	;'A'
  5676  00E3CD  43                 	db	67	;'C'
  5677  00E3CE  20                 	db	32
  5678  00E3CF  66                 	db	102	;'f'
  5679  00E3D0  69                 	db	105	;'i'
  5680  00E3D1  72                 	db	114	;'r'
  5681  00E3D2  69                 	db	105	;'i'
  5682  00E3D3  6E                 	db	110	;'n'
  5683  00E3D4  67                 	db	103	;'g'
  5684  00E3D5  20                 	db	32
  5685  00E3D6  61                 	db	97	;'a'
  5686  00E3D7  6E                 	db	110	;'n'
  5687  00E3D8  67                 	db	103	;'g'
  5688  00E3D9  6C                 	db	108	;'l'
  5689  00E3DA  65                 	db	101	;'e'
  5690  00E3DB  0A                 	db	10
  5691  00E3DC  0D                 	db	13
  5692  00E3DD  20                 	db	32
  5693  00E3DE  20                 	db	32
  5694  00E3DF  20                 	db	32
  5695  00E3E0  4D                 	db	77	;'M'
  5696  00E3E1  65                 	db	101	;'e'
  5697  00E3E2  61                 	db	97	;'a'
  5698  00E3E3  73                 	db	115	;'s'
  5699  00E3E4  75                 	db	117	;'u'
  5700  00E3E5  72                 	db	114	;'r'
  5701  00E3E6  65                 	db	101	;'e'
  5702  00E3E7  20                 	db	32
  5703  00E3E8  50                 	db	80	;'P'
  5704  00E3E9  6F                 	db	111	;'o'
  5705  00E3EA  77                 	db	119	;'w'
  5706  00E3EB  65                 	db	101	;'e'
  5707  00E3EC  72                 	db	114	;'r'
  5708  00E3ED  3F                 	db	63	;'?'
  5709  00E3EE  3A                 	db	58	;':'
  5710  00E3EF  20                 	db	32
  5711  00E3F0  52                 	db	82	;'R'
  5712  00E3F1  65                 	db	101	;'e'
  5713  00E3F2  74                 	db	116	;'t'
  5714  00E3F3  75                 	db	117	;'u'
  5715  00E3F4  72                 	db	114	;'r'
  5716  00E3F5  6E                 	db	110	;'n'
  5717  00E3F6  73                 	db	115	;'s'
  5718  00E3F7  20                 	db	32
  5719  00E3F8  74                 	db	116	;'t'
  5720  00E3F9  68                 	db	104	;'h'
  5721  00E3FA  65                 	db	101	;'e'
  5722  00E3FB  20                 	db	32
  5723  00E3FC  63                 	db	99	;'c'
  5724  00E3FD  61                 	db	97	;'a'
  5725  00E3FE  6C                 	db	108	;'l'
  5726  00E3FF  63                 	db	99	;'c'
  5727  00E400  75                 	db	117	;'u'
  5728  00E401  6C                 	db	108	;'l'
  5729  00E402  61                 	db	97	;'a'
  5730  00E403  74                 	db	116	;'t'
  5731  00E404  65                 	db	101	;'e'
  5732  00E405  64                 	db	100	;'d'
  5733  00E406  20                 	db	32
  5734  00E407  6F                 	db	111	;'o'
  5735  00E408  75                 	db	117	;'u'
  5736  00E409  74                 	db	116	;'t'
  5737  00E40A  70                 	db	112	;'p'
  5738  00E40B  75                 	db	117	;'u'
  5739  00E40C  74                 	db	116	;'t'
  5740  00E40D  20                 	db	32
  5741  00E40E  70                 	db	112	;'p'
  5742  00E40F  6F                 	db	111	;'o'
  5743  00E410  77                 	db	119	;'w'
  5744  00E411  65                 	db	101	;'e'
  5745  00E412  72                 	db	114	;'r'
  5746  00E413  20                 	db	32
  5747  00E414  69                 	db	105	;'i'
  5748  00E415  6E                 	db	110	;'n'
  5749  00E416  20                 	db	32
  5750  00E417  57                 	db	87	;'W'
  5751  00E418  61                 	db	97	;'a'
  5752  00E419  74                 	db	116	;'t'
  5753  00E41A  74                 	db	116	;'t'
  5754  00E41B  73                 	db	115	;'s'
  5755  00E41C  0A                 	db	10
  5756  00E41D  0D                 	db	13
  5757  00E41E  20                 	db	32
  5758  00E41F  20                 	db	32
  5759  00E420  20                 	db	32
  5760  00E421  4D                 	db	77	;'M'
  5761  00E422  65                 	db	101	;'e'
  5762  00E423  61                 	db	97	;'a'
  5763  00E424  73                 	db	115	;'s'
  5764  00E425  75                 	db	117	;'u'
  5765  00E426  72                 	db	114	;'r'
  5766  00E427  65                 	db	101	;'e'
  5767  00E428  20                 	db	32
  5768  00E429  45                 	db	69	;'E'
  5769  00E42A  6E                 	db	110	;'n'
  5770  00E42B  65                 	db	101	;'e'
  5771  00E42C  72                 	db	114	;'r'
  5772  00E42D  67                 	db	103	;'g'
  5773  00E42E  79                 	db	121	;'y'
  5774  00E42F  3F                 	db	63	;'?'
  5775  00E430  3A                 	db	58	;':'
  5776  00E431  20                 	db	32
  5777  00E432  52                 	db	82	;'R'
  5778  00E433  65                 	db	101	;'e'
  5779  00E434  74                 	db	116	;'t'
  5780  00E435  75                 	db	117	;'u'
  5781  00E436  72                 	db	114	;'r'
  5782  00E437  6E                 	db	110	;'n'
  5783  00E438  73                 	db	115	;'s'
  5784  00E439  20                 	db	32
  5785  00E43A  6D                 	db	109	;'m'
  5786  00E43B  65                 	db	101	;'e'
  5787  00E43C  61                 	db	97	;'a'
  5788  00E43D  73                 	db	115	;'s'
  5789  00E43E  75                 	db	117	;'u'
  5790  00E43F  72                 	db	114	;'r'
  5791  00E440  65                 	db	101	;'e'
  5792  00E441  64                 	db	100	;'d'
  5793  00E442  20                 	db	32
  5794  00E443  65                 	db	101	;'e'
  5795  00E444  6E                 	db	110	;'n'
  5796  00E445  65                 	db	101	;'e'
  5797  00E446  72                 	db	114	;'r'
  5798  00E447  67                 	db	103	;'g'
  5799  00E448  79                 	db	121	;'y'
  5800  00E449  20                 	db	32
  5801  00E44A  73                 	db	115	;'s'
  5802  00E44B  69                 	db	105	;'i'
  5803  00E44C  6E                 	db	110	;'n'
  5804  00E44D  63                 	db	99	;'c'
  5805  00E44E  65                 	db	101	;'e'
  5806  00E44F  20                 	db	32
  5807  00E450  6D                 	db	109	;'m'
  5808  00E451  65                 	db	101	;'e'
  5809  00E452  61                 	db	97	;'a'
  5810  00E453  73                 	db	115	;'s'
  5811  00E454  75                 	db	117	;'u'
  5812  00E455  72                 	db	114	;'r'
  5813  00E456  65                 	db	101	;'e'
  5814  00E457  6D                 	db	109	;'m'
  5815  00E458  65                 	db	101	;'e'
  5816  00E459  6E                 	db	110	;'n'
  5817  00E45A  74                 	db	116	;'t'
  5818  00E45B  20                 	db	32
  5819  00E45C  72                 	db	114	;'r'
  5820  00E45D  65                 	db	101	;'e'
  5821  00E45E  73                 	db	115	;'s'
  5822  00E45F  65                 	db	101	;'e'
  5823  00E460  74                 	db	116	;'t'
  5824  00E461  20                 	db	32
  5825  00E462  69                 	db	105	;'i'
  5826  00E463  6E                 	db	110	;'n'
  5827  00E464  20                 	db	32
  5828  00E465  57                 	db	87	;'W'
  5829  00E466  61                 	db	97	;'a'
  5830  00E467  74                 	db	116	;'t'
  5831  00E468  74                 	db	116	;'t'
  5832  00E469  20                 	db	32
  5833  00E46A  48                 	db	72	;'H'
  5834  00E46B  6F                 	db	111	;'o'
  5835  00E46C  75                 	db	117	;'u'
  5836  00E46D  72                 	db	114	;'r'
  5837  00E46E  73                 	db	115	;'s'
  5838  00E46F  0A                 	db	10
  5839  00E470  0D                 	db	13
  5840  00E471  20                 	db	32
  5841  00E472  20                 	db	32
  5842  00E473  20                 	db	32
  5843  00E474  43                 	db	67	;'C'
  5844  00E475  6C                 	db	108	;'l'
  5845  00E476  65                 	db	101	;'e'
  5846  00E477  61                 	db	97	;'a'
  5847  00E478  72                 	db	114	;'r'
  5848  00E479  20                 	db	32
  5849  00E47A  45                 	db	69	;'E'
  5850  00E47B  6E                 	db	110	;'n'
  5851  00E47C  65                 	db	101	;'e'
  5852  00E47D  72                 	db	114	;'r'
  5853  00E47E  67                 	db	103	;'g'
  5854  00E47F  79                 	db	121	;'y'
  5855  00E480  3A                 	db	58	;':'
  5856  00E481  20                 	db	32
  5857  00E482  52                 	db	82	;'R'
  5858  00E483  65                 	db	101	;'e'
  5859  00E484  73                 	db	115	;'s'
  5860  00E485  65                 	db	101	;'e'
  5861  00E486  74                 	db	116	;'t'
  5862  00E487  73                 	db	115	;'s'
  5863  00E488  20                 	db	32
  5864  00E489  74                 	db	116	;'t'
  5865  00E48A  68                 	db	104	;'h'
  5866  00E48B  65                 	db	101	;'e'
  5867  00E48C  20                 	db	32
  5868  00E48D  6D                 	db	109	;'m'
  5869  00E48E  65                 	db	101	;'e'
  5870  00E48F  61                 	db	97	;'a'
  5871  00E490  73                 	db	115	;'s'
  5872  00E491  75                 	db	117	;'u'
  5873  00E492  72                 	db	114	;'r'
  5874  00E493  65                 	db	101	;'e'
  5875  00E494  64                 	db	100	;'d'
  5876  00E495  20                 	db	32
  5877  00E496  6F                 	db	111	;'o'
  5878  00E497  75                 	db	117	;'u'
  5879  00E498  74                 	db	116	;'t'
  5880  00E499  70                 	db	112	;'p'
  5881  00E49A  75                 	db	117	;'u'
  5882  00E49B  74                 	db	116	;'t'
  5883  00E49C  20                 	db	32
  5884  00E49D  65                 	db	101	;'e'
  5885  00E49E  6E                 	db	110	;'n'
  5886  00E49F  65                 	db	101	;'e'
  5887  00E4A0  72                 	db	114	;'r'
  5888  00E4A1  67                 	db	103	;'g'
  5889  00E4A2  79                 	db	121	;'y'
  5890  00E4A3  20                 	db	32
  5891  00E4A4  74                 	db	116	;'t'
  5892  00E4A5  6F                 	db	111	;'o'
  5893  00E4A6  20                 	db	32
  5894  00E4A7  7A                 	db	122	;'z'
  5895  00E4A8  65                 	db	101	;'e'
  5896  00E4A9  72                 	db	114	;'r'
  5897  00E4AA  6F                 	db	111	;'o'
  5898  00E4AB  0A                 	db	10
  5899  00E4AC  0D                 	db	13
  5900  00E4AD  20                 	db	32
  5901  00E4AE  20                 	db	32
  5902  00E4AF  20                 	db	32
  5903  00E4B0  4C                 	db	76	;'L'
  5904  00E4B1  6F                 	db	111	;'o'
  5905  00E4B2  61                 	db	97	;'a'
  5906  00E4B3  64                 	db	100	;'d'
  5907  00E4B4  20                 	db	32
  5908  00E4B5  4F                 	db	79	;'O'
  5909  00E4B6  6E                 	db	110	;'n'
  5910  00E4B7  20                 	db	32
  5911  00E4B8  54                 	db	84	;'T'
  5912  00E4B9  69                 	db	105	;'i'
  5913  00E4BA  6D                 	db	109	;'m'
  5914  00E4BB  65                 	db	101	;'e'
  5915  00E4BC  3F                 	db	63	;'?'
  5916  00E4BD  3A                 	db	58	;':'
  5917  00E4BE  20                 	db	32
  5918  00E4BF  52                 	db	82	;'R'
  5919  00E4C0  65                 	db	101	;'e'
  5920  00E4C1  74                 	db	116	;'t'
  5921  00E4C2  75                 	db	117	;'u'
  5922  00E4C3  72                 	db	114	;'r'
  5923  00E4C4  6E                 	db	110	;'n'
  5924  00E4C5  73                 	db	115	;'s'
  5925  00E4C6  20                 	db	32
  5926  00E4C7  6C                 	db	108	;'l'
  5927  00E4C8  6F                 	db	111	;'o'
  5928  00E4C9  61                 	db	97	;'a'
  5929  00E4CA  64                 	db	100	;'d'
  5930  00E4CB  20                 	db	32
  5931  00E4CC  6F                 	db	111	;'o'
  5932  00E4CD  6E                 	db	110	;'n'
  5933  00E4CE  20                 	db	32
  5934  00E4CF  74                 	db	116	;'t'
  5935  00E4D0  69                 	db	105	;'i'
  5936  00E4D1  6D                 	db	109	;'m'
  5937  00E4D2  65                 	db	101	;'e'
  5938  00E4D3  20                 	db	32
  5939  00E4D4  73                 	db	115	;'s'
  5940  00E4D5  69                 	db	105	;'i'
  5941  00E4D6  6E                 	db	110	;'n'
  5942  00E4D7  63                 	db	99	;'c'
  5943  00E4D8  65                 	db	101	;'e'
  5944  00E4D9  20                 	db	32
  5945  00E4DA  6C                 	db	108	;'l'
  5946  00E4DB  61                 	db	97	;'a'
  5947  00E4DC  73                 	db	115	;'s'
  5948  00E4DD  74                 	db	116	;'t'
  5949  00E4DE  20                 	db	32
  5950  00E4DF  64                 	db	100	;'d'
  5951  00E4E0  65                 	db	101	;'e'
  5952  00E4E1  76                 	db	118	;'v'
  5953  00E4E2  69                 	db	105	;'i'
  5954  00E4E3  63                 	db	99	;'c'
  5955  00E4E4  65                 	db	101	;'e'
  5956  00E4E5  20                 	db	32
  5957  00E4E6  72                 	db	114	;'r'
  5958  00E4E7  65                 	db	101	;'e'
  5959  00E4E8  73                 	db	115	;'s'
  5960  00E4E9  65                 	db	101	;'e'
  5961  00E4EA  74                 	db	116	;'t'
  5962  00E4EB  20                 	db	32
  5963  00E4EC  69                 	db	105	;'i'
  5964  00E4ED  6E                 	db	110	;'n'
  5965  00E4EE  20                 	db	32
  5966  00E4EF  73                 	db	115	;'s'
  5967  00E4F0  65                 	db	101	;'e'
  5968  00E4F1  63                 	db	99	;'c'
  5969  00E4F2  6F                 	db	111	;'o'
  5970  00E4F3  6E                 	db	110	;'n'
  5971  00E4F4  64                 	db	100	;'d'
  5972  00E4F5  73                 	db	115	;'s'
  5973  00E4F6  0A                 	db	10
  5974  00E4F7  0D                 	db	13
  5975  00E4F8  20                 	db	32
  5976  00E4F9  20                 	db	32
  5977  00E4FA  20                 	db	32
  5978  00E4FB  4D                 	db	77	;'M'
  5979  00E4FC  61                 	db	97	;'a'
  5980  00E4FD  78                 	db	120	;'x'
  5981  00E4FE  20                 	db	32
  5982  00E4FF  52                 	db	82	;'R'
  5983  00E500  4D                 	db	77	;'M'
  5984  00E501  53                 	db	83	;'S'
  5985  00E502  20                 	db	32
  5986  00E503  43                 	db	67	;'C'
  5987  00E504  75                 	db	117	;'u'
  5988  00E505  72                 	db	114	;'r'
  5989  00E506  72                 	db	114	;'r'
  5990  00E507  65                 	db	101	;'e'
  5991  00E508  6E                 	db	110	;'n'
  5992  00E509  74                 	db	116	;'t'
  5993  00E50A  3F                 	db	63	;'?'
  5994  00E50B  3A                 	db	58	;':'
  5995  00E50C  20                 	db	32
  5996  00E50D  50                 	db	80	;'P'
  5997  00E50E  72                 	db	114	;'r'
  5998  00E50F  69                 	db	105	;'i'
  5999  00E510  6E                 	db	110	;'n'
  6000  00E511  74                 	db	116	;'t'
  6001  00E512  73                 	db	115	;'s'
  6002  00E513  20                 	db	32
  6003  00E514  74                 	db	116	;'t'
  6004  00E515  68                 	db	104	;'h'
  6005  00E516  65                 	db	101	;'e'
  6006  00E517  20                 	db	32
  6007  00E518  6D                 	db	109	;'m'
  6008  00E519  61                 	db	97	;'a'
  6009  00E51A  78                 	db	120	;'x'
  6010  00E51B  69                 	db	105	;'i'
  6011  00E51C  6D                 	db	109	;'m'
  6012  00E51D  75                 	db	117	;'u'
  6013  00E51E  6D                 	db	109	;'m'
  6014  00E51F  20                 	db	32
  6015  00E520  72                 	db	114	;'r'
  6016  00E521  65                 	db	101	;'e'
  6017  00E522  63                 	db	99	;'c'
  6018  00E523  6F                 	db	111	;'o'
  6019  00E524  72                 	db	114	;'r'
  6020  00E525  64                 	db	100	;'d'
  6021  00E526  65                 	db	101	;'e'
  6022  00E527  64                 	db	100	;'d'
  6023  00E528  20                 	db	32
  6024  00E529  52                 	db	82	;'R'
  6025  00E52A  4D                 	db	77	;'M'
  6026  00E52B  53                 	db	83	;'S'
  6027  00E52C  20                 	db	32
  6028  00E52D  6F                 	db	111	;'o'
  6029  00E52E  75                 	db	117	;'u'
  6030  00E52F  74                 	db	116	;'t'
  6031  00E530  70                 	db	112	;'p'
  6032  00E531  75                 	db	117	;'u'
  6033  00E532  74                 	db	116	;'t'
  6034  00E533  20                 	db	32
  6035  00E534  63                 	db	99	;'c'
  6036  00E535  75                 	db	117	;'u'
  6037  00E536  72                 	db	114	;'r'
  6038  00E537  72                 	db	114	;'r'
  6039  00E538  65                 	db	101	;'e'
  6040  00E539  6E                 	db	110	;'n'
  6041  00E53A  74                 	db	116	;'t'
  6042  00E53B  0A                 	db	10
  6043  00E53C  0D                 	db	13
  6044  00E53D  20                 	db	32
  6045  00E53E  20                 	db	32
  6046  00E53F  20                 	db	32
  6047  00E540  4D                 	db	77	;'M'
  6048  00E541  61                 	db	97	;'a'
  6049  00E542  78                 	db	120	;'x'
  6050  00E543  20                 	db	32
  6051  00E544  50                 	db	80	;'P'
  6052  00E545  6F                 	db	111	;'o'
  6053  00E546  77                 	db	119	;'w'
  6054  00E547  65                 	db	101	;'e'
  6055  00E548  72                 	db	114	;'r'
  6056  00E549  3F                 	db	63	;'?'
  6057  00E54A  3A                 	db	58	;':'
  6058  00E54B  20                 	db	32
  6059  00E54C  50                 	db	80	;'P'
  6060  00E54D  72                 	db	114	;'r'
  6061  00E54E  69                 	db	105	;'i'
  6062  00E54F  6E                 	db	110	;'n'
  6063  00E550  74                 	db	116	;'t'
  6064  00E551  73                 	db	115	;'s'
  6065  00E552  20                 	db	32
  6066  00E553  74                 	db	116	;'t'
  6067  00E554  68                 	db	104	;'h'
  6068  00E555  65                 	db	101	;'e'
  6069  00E556  20                 	db	32
  6070  00E557  6D                 	db	109	;'m'
  6071  00E558  61                 	db	97	;'a'
  6072  00E559  78                 	db	120	;'x'
  6073  00E55A  69                 	db	105	;'i'
  6074  00E55B  6D                 	db	109	;'m'
  6075  00E55C  75                 	db	117	;'u'
  6076  00E55D  6D                 	db	109	;'m'
  6077  00E55E  20                 	db	32
  6078  00E55F  72                 	db	114	;'r'
  6079  00E560  65                 	db	101	;'e'
  6080  00E561  63                 	db	99	;'c'
  6081  00E562  6F                 	db	111	;'o'
  6082  00E563  72                 	db	114	;'r'
  6083  00E564  64                 	db	100	;'d'
  6084  00E565  65                 	db	101	;'e'
  6085  00E566  64                 	db	100	;'d'
  6086  00E567  20                 	db	32
  6087  00E568  6F                 	db	111	;'o'
  6088  00E569  75                 	db	117	;'u'
  6089  00E56A  74                 	db	116	;'t'
  6090  00E56B  70                 	db	112	;'p'
  6091  00E56C  75                 	db	117	;'u'
  6092  00E56D  74                 	db	116	;'t'
  6093  00E56E  20                 	db	32
  6094  00E56F  70                 	db	112	;'p'
  6095  00E570  6F                 	db	111	;'o'
  6096  00E571  77                 	db	119	;'w'
  6097  00E572  65                 	db	101	;'e'
  6098  00E573  72                 	db	114	;'r'
  6099  00E574  0A                 	db	10
  6100  00E575  0D                 	db	13
  6101  00E576  0A                 	db	10
  6102  00E577  0D                 	db	13
  6103  00E578  00                 	db	0
  6104  00E579                     STR_156:
  6105  00E579  4C                 	db	76	;'L'
  6106  00E57A  69                 	db	105	;'i'
  6107  00E57B  73                 	db	115	;'s'
  6108  00E57C  74                 	db	116	;'t'
  6109  00E57D  20                 	db	32
  6110  00E57E  6F                 	db	111	;'o'
  6111  00E57F  66                 	db	102	;'f'
  6112  00E580  20                 	db	32
  6113  00E581  73                 	db	115	;'s'
  6114  00E582  75                 	db	117	;'u'
  6115  00E583  70                 	db	112	;'p'
  6116  00E584  70                 	db	112	;'p'
  6117  00E585  6F                 	db	111	;'o'
  6118  00E586  72                 	db	114	;'r'
  6119  00E587  74                 	db	116	;'t'
  6120  00E588  65                 	db	101	;'e'
  6121  00E589  64                 	db	100	;'d'
  6122  00E58A  20                 	db	32
  6123  00E58B  44                 	db	68	;'D'
  6124  00E58C  65                 	db	101	;'e'
  6125  00E58D  76                 	db	118	;'v'
  6126  00E58E  69                 	db	105	;'i'
  6127  00E58F  63                 	db	99	;'c'
  6128  00E590  65                 	db	101	;'e'
  6129  00E591  20                 	db	32
  6130  00E592  4D                 	db	77	;'M'
  6131  00E593  65                 	db	101	;'e'
  6132  00E594  61                 	db	97	;'a'
  6133  00E595  73                 	db	115	;'s'
  6134  00E596  75                 	db	117	;'u'
  6135  00E597  72                 	db	114	;'r'
  6136  00E598  65                 	db	101	;'e'
  6137  00E599  6D                 	db	109	;'m'
  6138  00E59A  65                 	db	101	;'e'
  6139  00E59B  6E                 	db	110	;'n'
  6140  00E59C  74                 	db	116	;'t'
  6141  00E59D  20                 	db	32
  6142  00E59E  43                 	db	67	;'C'
  6143  00E59F  6F                 	db	111	;'o'
  6144  00E5A0  6D                 	db	109	;'m'
  6145  00E5A1  6D                 	db	109	;'m'
  6146  00E5A2  61                 	db	97	;'a'
  6147  00E5A3  6E                 	db	110	;'n'
  6148  00E5A4  64                 	db	100	;'d'
  6149  00E5A5  73                 	db	115	;'s'
  6150  00E5A6  3A                 	db	58	;':'
  6151  00E5A7  0A                 	db	10
  6152  00E5A8  0D                 	db	13
  6153  00E5A9  20                 	db	32
  6154  00E5AA  20                 	db	32
  6155  00E5AB  20                 	db	32
  6156  00E5AC  4D                 	db	77	;'M'
  6157  00E5AD  65                 	db	101	;'e'
  6158  00E5AE  61                 	db	97	;'a'
  6159  00E5AF  73                 	db	115	;'s'
  6160  00E5B0  75                 	db	117	;'u'
  6161  00E5B1  72                 	db	114	;'r'
  6162  00E5B2  65                 	db	101	;'e'
  6163  00E5B3  20                 	db	32
  6164  00E5B4  50                 	db	80	;'P'
  6165  00E5B5  4F                 	db	79	;'O'
  6166  00E5B6  53                 	db	83	;'S'
  6167  00E5B7  33                 	db	51	;'3'
  6168  00E5B8  50                 	db	80	;'P'
  6169  00E5B9  33                 	db	51	;'3'
  6170  00E5BA  3F                 	db	63	;'?'
  6171  00E5BB  3A                 	db	58	;':'
  6172  00E5BC  20                 	db	32
  6173  00E5BD  52                 	db	82	;'R'
  6174  00E5BE  65                 	db	101	;'e'
  6175  00E5BF  74                 	db	116	;'t'
  6176  00E5C0  75                 	db	117	;'u'
  6177  00E5C1  72                 	db	114	;'r'
  6178  00E5C2  6E                 	db	110	;'n'
  6179  00E5C3  73                 	db	115	;'s'
  6180  00E5C4  20                 	db	32
  6181  00E5C5  2B                 	db	43
  6182  00E5C6  33                 	db	51	;'3'
  6183  00E5C7  2E                 	db	46
  6184  00E5C8  33                 	db	51	;'3'
  6185  00E5C9  56                 	db	86	;'V'
  6186  00E5CA  20                 	db	32
  6187  00E5CB  41                 	db	65	;'A'
  6188  00E5CC  44                 	db	68	;'D'
  6189  00E5CD  43                 	db	67	;'C'
  6190  00E5CE  20                 	db	32
  6191  00E5CF  43                 	db	67	;'C'
  6192  00E5D0  6F                 	db	111	;'o'
  6193  00E5D1  6E                 	db	110	;'n'
  6194  00E5D2  76                 	db	118	;'v'
  6195  00E5D3  65                 	db	101	;'e'
  6196  00E5D4  72                 	db	114	;'r'
  6197  00E5D5  73                 	db	115	;'s'
  6198  00E5D6  69                 	db	105	;'i'
  6199  00E5D7  6F                 	db	111	;'o'
  6200  00E5D8  6E                 	db	110	;'n'
  6201  00E5D9  20                 	db	32
  6202  00E5DA  69                 	db	105	;'i'
  6203  00E5DB  6E                 	db	110	;'n'
  6204  00E5DC  20                 	db	32
  6205  00E5DD  76                 	db	118	;'v'
  6206  00E5DE  6F                 	db	111	;'o'
  6207  00E5DF  6C                 	db	108	;'l'
  6208  00E5E0  74                 	db	116	;'t'
  6209  00E5E1  73                 	db	115	;'s'
  6210  00E5E2  0A                 	db	10
  6211  00E5E3  0D                 	db	13
  6212  00E5E4  20                 	db	32
  6213  00E5E5  20                 	db	32
  6214  00E5E6  20                 	db	32
  6215  00E5E7  4D                 	db	77	;'M'
  6216  00E5E8  65                 	db	101	;'e'
  6217  00E5E9  61                 	db	97	;'a'
  6218  00E5EA  73                 	db	115	;'s'
  6219  00E5EB  75                 	db	117	;'u'
  6220  00E5EC  72                 	db	114	;'r'
  6221  00E5ED  65                 	db	101	;'e'
  6222  00E5EE  20                 	db	32
  6223  00E5EF  50                 	db	80	;'P'
  6224  00E5F0  4F                 	db	79	;'O'
  6225  00E5F1  53                 	db	83	;'S'
  6226  00E5F2  31                 	db	49	;'1'
  6227  00E5F3  32                 	db	50	;'2'
  6228  00E5F4  3F                 	db	63	;'?'
  6229  00E5F5  3A                 	db	58	;':'
  6230  00E5F6  20                 	db	32
  6231  00E5F7  52                 	db	82	;'R'
  6232  00E5F8  65                 	db	101	;'e'
  6233  00E5F9  74                 	db	116	;'t'
  6234  00E5FA  75                 	db	117	;'u'
  6235  00E5FB  72                 	db	114	;'r'
  6236  00E5FC  6E                 	db	110	;'n'
  6237  00E5FD  73                 	db	115	;'s'
  6238  00E5FE  20                 	db	32
  6239  00E5FF  2B                 	db	43
  6240  00E600  31                 	db	49	;'1'
  6241  00E601  32                 	db	50	;'2'
  6242  00E602  56                 	db	86	;'V'
  6243  00E603  20                 	db	32
  6244  00E604  41                 	db	65	;'A'
  6245  00E605  44                 	db	68	;'D'
  6246  00E606  43                 	db	67	;'C'
  6247  00E607  20                 	db	32
  6248  00E608  43                 	db	67	;'C'
  6249  00E609  6F                 	db	111	;'o'
  6250  00E60A  6E                 	db	110	;'n'
  6251  00E60B  76                 	db	118	;'v'
  6252  00E60C  65                 	db	101	;'e'
  6253  00E60D  72                 	db	114	;'r'
  6254  00E60E  73                 	db	115	;'s'
  6255  00E60F  69                 	db	105	;'i'
  6256  00E610  6F                 	db	111	;'o'
  6257  00E611  6E                 	db	110	;'n'
  6258  00E612  20                 	db	32
  6259  00E613  69                 	db	105	;'i'
  6260  00E614  6E                 	db	110	;'n'
  6261  00E615  20                 	db	32
  6262  00E616  76                 	db	118	;'v'
  6263  00E617  6F                 	db	111	;'o'
  6264  00E618  6C                 	db	108	;'l'
  6265  00E619  74                 	db	116	;'t'
  6266  00E61A  73                 	db	115	;'s'
  6267  00E61B  0A                 	db	10
  6268  00E61C  0D                 	db	13
  6269  00E61D  20                 	db	32
  6270  00E61E  20                 	db	32
  6271  00E61F  20                 	db	32
  6272  00E620  4D                 	db	77	;'M'
  6273  00E621  65                 	db	101	;'e'
  6274  00E622  61                 	db	97	;'a'
  6275  00E623  73                 	db	115	;'s'
  6276  00E624  75                 	db	117	;'u'
  6277  00E625  72                 	db	114	;'r'
  6278  00E626  65                 	db	101	;'e'
  6279  00E627  20                 	db	32
  6280  00E628  44                 	db	68	;'D'
  6281  00E629  69                 	db	105	;'i'
  6282  00E62A  65                 	db	101	;'e'
  6283  00E62B  20                 	db	32
  6284  00E62C  54                 	db	84	;'T'
  6285  00E62D  65                 	db	101	;'e'
  6286  00E62E  6D                 	db	109	;'m'
  6287  00E62F  70                 	db	112	;'p'
  6288  00E630  3F                 	db	63	;'?'
  6289  00E631  3A                 	db	58	;':'
  6290  00E632  20                 	db	32
  6291  00E633  52                 	db	82	;'R'
  6292  00E634  65                 	db	101	;'e'
  6293  00E635  74                 	db	116	;'t'
  6294  00E636  75                 	db	117	;'u'
  6295  00E637  72                 	db	114	;'r'
  6296  00E638  6E                 	db	110	;'n'
  6297  00E639  73                 	db	115	;'s'
  6298  00E63A  20                 	db	32
  6299  00E63B  74                 	db	116	;'t'
  6300  00E63C  68                 	db	104	;'h'
  6301  00E63D  65                 	db	101	;'e'
  6302  00E63E  20                 	db	32
  6303  00E63F  6D                 	db	109	;'m'
  6304  00E640  69                 	db	105	;'i'
  6305  00E641  63                 	db	99	;'c'
  6306  00E642  72                 	db	114	;'r'
  6307  00E643  6F                 	db	111	;'o'
  6308  00E644  63                 	db	99	;'c'
  6309  00E645  6F                 	db	111	;'o'
  6310  00E646  6E                 	db	110	;'n'
  6311  00E647  74                 	db	116	;'t'
  6312  00E648  72                 	db	114	;'r'
  6313  00E649  6F                 	db	111	;'o'
  6314  00E64A  6C                 	db	108	;'l'
  6315  00E64B  6C                 	db	108	;'l'
  6316  00E64C  65                 	db	101	;'e'
  6317  00E64D  72                 	db	114	;'r'
  6318  00E64E  20                 	db	32
  6319  00E64F  64                 	db	100	;'d'
  6320  00E650  69                 	db	105	;'i'
  6321  00E651  65                 	db	101	;'e'
  6322  00E652  20                 	db	32
  6323  00E653  74                 	db	116	;'t'
  6324  00E654  65                 	db	101	;'e'
  6325  00E655  6D                 	db	109	;'m'
  6326  00E656  70                 	db	112	;'p'
  6327  00E657  65                 	db	101	;'e'
  6328  00E658  72                 	db	114	;'r'
  6329  00E659  61                 	db	97	;'a'
  6330  00E65A  74                 	db	116	;'t'
  6331  00E65B  75                 	db	117	;'u'
  6332  00E65C  72                 	db	114	;'r'
  6333  00E65D  65                 	db	101	;'e'
  6334  00E65E  20                 	db	32
  6335  00E65F  69                 	db	105	;'i'
  6336  00E660  6E                 	db	110	;'n'
  6337  00E661  20                 	db	32
  6338  00E662  64                 	db	100	;'d'
  6339  00E663  65                 	db	101	;'e'
  6340  00E664  67                 	db	103	;'g'
  6341  00E665  72                 	db	114	;'r'
  6342  00E666  65                 	db	101	;'e'
  6343  00E667  65                 	db	101	;'e'
  6344  00E668  73                 	db	115	;'s'
  6345  00E669  20                 	db	32
  6346  00E66A  43                 	db	67	;'C'
  6347  00E66B  0A                 	db	10
  6348  00E66C  0D                 	db	13
  6349  00E66D  20                 	db	32
  6350  00E66E  20                 	db	32
  6351  00E66F  20                 	db	32
  6352  00E670  4D                 	db	77	;'M'
  6353  00E671  65                 	db	101	;'e'
  6354  00E672  61                 	db	97	;'a'
  6355  00E673  73                 	db	115	;'s'
  6356  00E674  75                 	db	117	;'u'
  6357  00E675  72                 	db	114	;'r'
  6358  00E676  65                 	db	101	;'e'
  6359  00E677  20                 	db	32
  6360  00E678  46                 	db	70	;'F'
  6361  00E679  56                 	db	86	;'V'
  6362  00E67A  52                 	db	82	;'R'
  6363  00E67B  3F                 	db	63	;'?'
  6364  00E67C  3A                 	db	58	;':'
  6365  00E67D  20                 	db	32
  6366  00E67E  52                 	db	82	;'R'
  6367  00E67F  65                 	db	101	;'e'
  6368  00E680  74                 	db	116	;'t'
  6369  00E681  75                 	db	117	;'u'
  6370  00E682  72                 	db	114	;'r'
  6371  00E683  6E                 	db	110	;'n'
  6372  00E684  73                 	db	115	;'s'
  6373  00E685  20                 	db	32
  6374  00E686  74                 	db	116	;'t'
  6375  00E687  68                 	db	104	;'h'
  6376  00E688  65                 	db	101	;'e'
  6377  00E689  20                 	db	32
  6378  00E68A  69                 	db	105	;'i'
  6379  00E68B  6E                 	db	110	;'n'
  6380  00E68C  74                 	db	116	;'t'
  6381  00E68D  65                 	db	101	;'e'
  6382  00E68E  72                 	db	114	;'r'
  6383  00E68F  6E                 	db	110	;'n'
  6384  00E690  61                 	db	97	;'a'
  6385  00E691  6C                 	db	108	;'l'
  6386  00E692  20                 	db	32
  6387  00E693  66                 	db	102	;'f'
  6388  00E694  69                 	db	105	;'i'
  6389  00E695  78                 	db	120	;'x'
  6390  00E696  65                 	db	101	;'e'
  6391  00E697  64                 	db	100	;'d'
  6392  00E698  20                 	db	32
  6393  00E699  76                 	db	118	;'v'
  6394  00E69A  6F                 	db	111	;'o'
  6395  00E69B  6C                 	db	108	;'l'
  6396  00E69C  74                 	db	116	;'t'
  6397  00E69D  61                 	db	97	;'a'
  6398  00E69E  67                 	db	103	;'g'
  6399  00E69F  65                 	db	101	;'e'
  6400  00E6A0  20                 	db	32
  6401  00E6A1  72                 	db	114	;'r'
  6402  00E6A2  65                 	db	101	;'e'
  6403  00E6A3  66                 	db	102	;'f'
  6404  00E6A4  65                 	db	101	;'e'
  6405  00E6A5  72                 	db	114	;'r'
  6406  00E6A6  65                 	db	101	;'e'
  6407  00E6A7  6E                 	db	110	;'n'
  6408  00E6A8  63                 	db	99	;'c'
  6409  00E6A9  65                 	db	101	;'e'
  6410  00E6AA  20                 	db	32
  6411  00E6AB  62                 	db	98	;'b'
  6412  00E6AC  75                 	db	117	;'u'
  6413  00E6AD  66                 	db	102	;'f'
  6414  00E6AE  66                 	db	102	;'f'
  6415  00E6AF  65                 	db	101	;'e'
  6416  00E6B0  72                 	db	114	;'r'
  6417  00E6B1  20                 	db	32
  6418  00E6B2  31                 	db	49	;'1'
  6419  00E6B3  20                 	db	32
  6420  00E6B4  6F                 	db	111	;'o'
  6421  00E6B5  75                 	db	117	;'u'
  6422  00E6B6  74                 	db	116	;'t'
  6423  00E6B7  70                 	db	112	;'p'
  6424  00E6B8  75                 	db	117	;'u'
  6425  00E6B9  74                 	db	116	;'t'
  6426  00E6BA  20                 	db	32
  6427  00E6BB  69                 	db	105	;'i'
  6428  00E6BC  6E                 	db	110	;'n'
  6429  00E6BD  20                 	db	32
  6430  00E6BE  76                 	db	118	;'v'
  6431  00E6BF  6F                 	db	111	;'o'
  6432  00E6C0  6C                 	db	108	;'l'
  6433  00E6C1  74                 	db	116	;'t'
  6434  00E6C2  73                 	db	115	;'s'
  6435  00E6C3  0A                 	db	10
  6436  00E6C4  0D                 	db	13
  6437  00E6C5  20                 	db	32
  6438  00E6C6  20                 	db	32
  6439  00E6C7  20                 	db	32
  6440  00E6C8  4D                 	db	77	;'M'
  6441  00E6C9  65                 	db	101	;'e'
  6442  00E6CA  61                 	db	97	;'a'
  6443  00E6CB  73                 	db	115	;'s'
  6444  00E6CC  75                 	db	117	;'u'
  6445  00E6CD  72                 	db	114	;'r'
  6446  00E6CE  65                 	db	101	;'e'
  6447  00E6CF  20                 	db	32
  6448  00E6D0  41                 	db	65	;'A'
  6449  00E6D1  56                 	db	86	;'V'
  6450  00E6D2  53                 	db	83	;'S'
  6451  00E6D3  53                 	db	83	;'S'
  6452  00E6D4  3F                 	db	63	;'?'
  6453  00E6D5  3A                 	db	58	;':'
  6454  00E6D6  20                 	db	32
  6455  00E6D7  52                 	db	82	;'R'
  6456  00E6D8  65                 	db	101	;'e'
  6457  00E6D9  74                 	db	116	;'t'
  6458  00E6DA  75                 	db	117	;'u'
  6459  00E6DB  72                 	db	114	;'r'
  6460  00E6DC  6E                 	db	110	;'n'
  6461  00E6DD  73                 	db	115	;'s'
  6462  00E6DE  20                 	db	32
  6463  00E6DF  74                 	db	116	;'t'
  6464  00E6E0  68                 	db	104	;'h'
  6465  00E6E1  65                 	db	101	;'e'
  6466  00E6E2  20                 	db	32
  6467  00E6E3  6D                 	db	109	;'m'
  6468  00E6E4  65                 	db	101	;'e'
  6469  00E6E5  61                 	db	97	;'a'
  6470  00E6E6  73                 	db	115	;'s'
  6471  00E6E7  75                 	db	117	;'u'
  6472  00E6E8  72                 	db	114	;'r'
  6473  00E6E9  65                 	db	101	;'e'
  6474  00E6EA  64                 	db	100	;'d'
  6475  00E6EB  20                 	db	32
  6476  00E6EC  76                 	db	118	;'v'
  6477  00E6ED  61                 	db	97	;'a'
  6478  00E6EE  6C                 	db	108	;'l'
  6479  00E6EF  75                 	db	117	;'u'
  6480  00E6F0  65                 	db	101	;'e'
  6481  00E6F1  20                 	db	32
  6482  00E6F2  6F                 	db	111	;'o'
  6483  00E6F3  66                 	db	102	;'f'
  6484  00E6F4  20                 	db	32
  6485  00E6F5  41                 	db	65	;'A'
  6486  00E6F6  6E                 	db	110	;'n'
  6487  00E6F7  61                 	db	97	;'a'
  6488  00E6F8  6C                 	db	108	;'l'
  6489  00E6F9  6F                 	db	111	;'o'
  6490  00E6FA  67                 	db	103	;'g'
  6491  00E6FB  20                 	db	32
  6492  00E6FC  56                 	db	86	;'V'
  6493  00E6FD  53                 	db	83	;'S'
  6494  00E6FE  53                 	db	83	;'S'
  6495  00E6FF  20                 	db	32
  6496  00E700  69                 	db	105	;'i'
  6497  00E701  6E                 	db	110	;'n'
  6498  00E702  20                 	db	32
  6499  00E703  76                 	db	118	;'v'
  6500  00E704  6F                 	db	111	;'o'
  6501  00E705  6C                 	db	108	;'l'
  6502  00E706  74                 	db	116	;'t'
  6503  00E707  73                 	db	115	;'s'
  6504  00E708  0A                 	db	10
  6505  00E709  0D                 	db	13
  6506  00E70A  20                 	db	32
  6507  00E70B  20                 	db	32
  6508  00E70C  20                 	db	32
  6509  00E70D  4D                 	db	77	;'M'
  6510  00E70E  61                 	db	97	;'a'
  6511  00E70F  78                 	db	120	;'x'
  6512  00E710  20                 	db	32
  6513  00E711  50                 	db	80	;'P'
  6514  00E712  4F                 	db	79	;'O'
  6515  00E713  53                 	db	83	;'S'
  6516  00E714  33                 	db	51	;'3'
  6517  00E715  50                 	db	80	;'P'
  6518  00E716  33                 	db	51	;'3'
  6519  00E717  20                 	db	32
  6520  00E718  56                 	db	86	;'V'
  6521  00E719  6F                 	db	111	;'o'
  6522  00E71A  6C                 	db	108	;'l'
  6523  00E71B  74                 	db	116	;'t'
  6524  00E71C  61                 	db	97	;'a'
  6525  00E71D  67                 	db	103	;'g'
  6526  00E71E  65                 	db	101	;'e'
  6527  00E71F  3F                 	db	63	;'?'
  6528  00E720  3A                 	db	58	;':'
  6529  00E721  20                 	db	32
  6530  00E722  52                 	db	82	;'R'
  6531  00E723  65                 	db	101	;'e'
  6532  00E724  74                 	db	116	;'t'
  6533  00E725  75                 	db	117	;'u'
  6534  00E726  72                 	db	114	;'r'
  6535  00E727  6E                 	db	110	;'n'
  6536  00E728  73                 	db	115	;'s'
  6537  00E729  20                 	db	32
  6538  00E72A  74                 	db	116	;'t'
  6539  00E72B  68                 	db	104	;'h'
  6540  00E72C  65                 	db	101	;'e'
  6541  00E72D  20                 	db	32
  6542  00E72E  6D                 	db	109	;'m'
  6543  00E72F  61                 	db	97	;'a'
  6544  00E730  78                 	db	120	;'x'
  6545  00E731  69                 	db	105	;'i'
  6546  00E732  6D                 	db	109	;'m'
  6547  00E733  75                 	db	117	;'u'
  6548  00E734  6D                 	db	109	;'m'
  6549  00E735  20                 	db	32
  6550  00E736  72                 	db	114	;'r'
  6551  00E737  65                 	db	101	;'e'
  6552  00E738  63                 	db	99	;'c'
  6553  00E739  6F                 	db	111	;'o'
  6554  00E73A  72                 	db	114	;'r'
  6555  00E73B  64                 	db	100	;'d'
  6556  00E73C  65                 	db	101	;'e'
  6557  00E73D  64                 	db	100	;'d'
  6558  00E73E  20                 	db	32
  6559  00E73F  2B                 	db	43
  6560  00E740  33                 	db	51	;'3'
  6561  00E741  2E                 	db	46
  6562  00E742  33                 	db	51	;'3'
  6563  00E743  56                 	db	86	;'V'
  6564  00E744  20                 	db	32
  6565  00E745  52                 	db	82	;'R'
  6566  00E746  61                 	db	97	;'a'
  6567  00E747  69                 	db	105	;'i'
  6568  00E748  6C                 	db	108	;'l'
  6569  00E749  20                 	db	32
  6570  00E74A  56                 	db	86	;'V'
  6571  00E74B  6F                 	db	111	;'o'
  6572  00E74C  6C                 	db	108	;'l'
  6573  00E74D  74                 	db	116	;'t'
  6574  00E74E  61                 	db	97	;'a'
  6575  00E74F  67                 	db	103	;'g'
  6576  00E750  65                 	db	101	;'e'
  6577  00E751  20                 	db	32
  6578  00E752  6D                 	db	109	;'m'
  6579  00E753  65                 	db	101	;'e'
  6580  00E754  61                 	db	97	;'a'
  6581  00E755  73                 	db	115	;'s'
  6582  00E756  75                 	db	117	;'u'
  6583  00E757  72                 	db	114	;'r'
  6584  00E758  65                 	db	101	;'e'
  6585  00E759  64                 	db	100	;'d'
  6586  00E75A  0A                 	db	10
  6587  00E75B  0D                 	db	13
  6588  00E75C  20                 	db	32
  6589  00E75D  20                 	db	32
  6590  00E75E  20                 	db	32
  6591  00E75F  4D                 	db	77	;'M'
  6592  00E760  61                 	db	97	;'a'
  6593  00E761  78                 	db	120	;'x'
  6594  00E762  20                 	db	32
  6595  00E763  50                 	db	80	;'P'
  6596  00E764  4F                 	db	79	;'O'
  6597  00E765  53                 	db	83	;'S'
  6598  00E766  31                 	db	49	;'1'
  6599  00E767  32                 	db	50	;'2'
  6600  00E768  20                 	db	32
  6601  00E769  56                 	db	86	;'V'
  6602  00E76A  6F                 	db	111	;'o'
  6603  00E76B  6C                 	db	108	;'l'
  6604  00E76C  74                 	db	116	;'t'
  6605  00E76D  61                 	db	97	;'a'
  6606  00E76E  67                 	db	103	;'g'
  6607  00E76F  65                 	db	101	;'e'
  6608  00E770  3F                 	db	63	;'?'
  6609  00E771  3A                 	db	58	;':'
  6610  00E772  20                 	db	32
  6611  00E773  52                 	db	82	;'R'
  6612  00E774  65                 	db	101	;'e'
  6613  00E775  74                 	db	116	;'t'
  6614  00E776  75                 	db	117	;'u'
  6615  00E777  72                 	db	114	;'r'
  6616  00E778  6E                 	db	110	;'n'
  6617  00E779  73                 	db	115	;'s'
  6618  00E77A  20                 	db	32
  6619  00E77B  74                 	db	116	;'t'
  6620  00E77C  68                 	db	104	;'h'
  6621  00E77D  65                 	db	101	;'e'
  6622  00E77E  20                 	db	32
  6623  00E77F  6D                 	db	109	;'m'
  6624  00E780  61                 	db	97	;'a'
  6625  00E781  78                 	db	120	;'x'
  6626  00E782  69                 	db	105	;'i'
  6627  00E783  6D                 	db	109	;'m'
  6628  00E784  75                 	db	117	;'u'
  6629  00E785  6D                 	db	109	;'m'
  6630  00E786  20                 	db	32
  6631  00E787  72                 	db	114	;'r'
  6632  00E788  65                 	db	101	;'e'
  6633  00E789  63                 	db	99	;'c'
  6634  00E78A  6F                 	db	111	;'o'
  6635  00E78B  72                 	db	114	;'r'
  6636  00E78C  64                 	db	100	;'d'
  6637  00E78D  65                 	db	101	;'e'
  6638  00E78E  64                 	db	100	;'d'
  6639  00E78F  20                 	db	32
  6640  00E790  2B                 	db	43
  6641  00E791  31                 	db	49	;'1'
  6642  00E792  32                 	db	50	;'2'
  6643  00E793  56                 	db	86	;'V'
  6644  00E794  20                 	db	32
  6645  00E795  52                 	db	82	;'R'
  6646  00E796  61                 	db	97	;'a'
  6647  00E797  69                 	db	105	;'i'
  6648  00E798  6C                 	db	108	;'l'
  6649  00E799  20                 	db	32
  6650  00E79A  56                 	db	86	;'V'
  6651  00E79B  6F                 	db	111	;'o'
  6652  00E79C  6C                 	db	108	;'l'
  6653  00E79D  74                 	db	116	;'t'
  6654  00E79E  61                 	db	97	;'a'
  6655  00E79F  67                 	db	103	;'g'
  6656  00E7A0  65                 	db	101	;'e'
  6657  00E7A1  20                 	db	32
  6658  00E7A2  6D                 	db	109	;'m'
  6659  00E7A3  65                 	db	101	;'e'
  6660  00E7A4  61                 	db	97	;'a'
  6661  00E7A5  73                 	db	115	;'s'
  6662  00E7A6  75                 	db	117	;'u'
  6663  00E7A7  72                 	db	114	;'r'
  6664  00E7A8  65                 	db	101	;'e'
  6665  00E7A9  64                 	db	100	;'d'
  6666  00E7AA  0A                 	db	10
  6667  00E7AB  0D                 	db	13
  6668  00E7AC  20                 	db	32
  6669  00E7AD  20                 	db	32
  6670  00E7AE  20                 	db	32
  6671  00E7AF  4D                 	db	77	;'M'
  6672  00E7B0  61                 	db	97	;'a'
  6673  00E7B1  78                 	db	120	;'x'
  6674  00E7B2  20                 	db	32
  6675  00E7B3  44                 	db	68	;'D'
  6676  00E7B4  69                 	db	105	;'i'
  6677  00E7B5  65                 	db	101	;'e'
  6678  00E7B6  20                 	db	32
  6679  00E7B7  54                 	db	84	;'T'
  6680  00E7B8  65                 	db	101	;'e'
  6681  00E7B9  6D                 	db	109	;'m'
  6682  00E7BA  70                 	db	112	;'p'
  6683  00E7BB  3F                 	db	63	;'?'
  6684  00E7BC  3A                 	db	58	;':'
  6685  00E7BD  20                 	db	32
  6686  00E7BE  52                 	db	82	;'R'
  6687  00E7BF  65                 	db	101	;'e'
  6688  00E7C0  74                 	db	116	;'t'
  6689  00E7C1  75                 	db	117	;'u'
  6690  00E7C2  72                 	db	114	;'r'
  6691  00E7C3  6E                 	db	110	;'n'
  6692  00E7C4  73                 	db	115	;'s'
  6693  00E7C5  20                 	db	32
  6694  00E7C6  74                 	db	116	;'t'
  6695  00E7C7  68                 	db	104	;'h'
  6696  00E7C8  65                 	db	101	;'e'
  6697  00E7C9  20                 	db	32
  6698  00E7CA  6D                 	db	109	;'m'
  6699  00E7CB  61                 	db	97	;'a'
  6700  00E7CC  78                 	db	120	;'x'
  6701  00E7CD  69                 	db	105	;'i'
  6702  00E7CE  6D                 	db	109	;'m'
  6703  00E7CF  75                 	db	117	;'u'
  6704  00E7D0  6D                 	db	109	;'m'
  6705  00E7D1  20                 	db	32
  6706  00E7D2  72                 	db	114	;'r'
  6707  00E7D3  65                 	db	101	;'e'
  6708  00E7D4  63                 	db	99	;'c'
  6709  00E7D5  6F                 	db	111	;'o'
  6710  00E7D6  72                 	db	114	;'r'
  6711  00E7D7  64                 	db	100	;'d'
  6712  00E7D8  65                 	db	101	;'e'
  6713  00E7D9  64                 	db	100	;'d'
  6714  00E7DA  20                 	db	32
  6715  00E7DB  64                 	db	100	;'d'
  6716  00E7DC  69                 	db	105	;'i'
  6717  00E7DD  65                 	db	101	;'e'
  6718  00E7DE  20                 	db	32
  6719  00E7DF  74                 	db	116	;'t'
  6720  00E7E0  65                 	db	101	;'e'
  6721  00E7E1  6D                 	db	109	;'m'
  6722  00E7E2  70                 	db	112	;'p'
  6723  00E7E3  65                 	db	101	;'e'
  6724  00E7E4  72                 	db	114	;'r'
  6725  00E7E5  61                 	db	97	;'a'
  6726  00E7E6  74                 	db	116	;'t'
  6727  00E7E7  75                 	db	117	;'u'
  6728  00E7E8  72                 	db	114	;'r'
  6729  00E7E9  65                 	db	101	;'e'
  6730  00E7EA  20                 	db	32
  6731  00E7EB  6D                 	db	109	;'m'
  6732  00E7EC  65                 	db	101	;'e'
  6733  00E7ED  61                 	db	97	;'a'
  6734  00E7EE  73                 	db	115	;'s'
  6735  00E7EF  75                 	db	117	;'u'
  6736  00E7F0  72                 	db	114	;'r'
  6737  00E7F1  65                 	db	101	;'e'
  6738  00E7F2  64                 	db	100	;'d'
  6739  00E7F3  0A                 	db	10
  6740  00E7F4  0D                 	db	13
  6741  00E7F5  20                 	db	32
  6742  00E7F6  20                 	db	32
  6743  00E7F7  20                 	db	32
  6744  00E7F8  4D                 	db	77	;'M'
  6745  00E7F9  61                 	db	97	;'a'
  6746  00E7FA  78                 	db	120	;'x'
  6747  00E7FB  20                 	db	32
  6748  00E7FC  46                 	db	70	;'F'
  6749  00E7FD  56                 	db	86	;'V'
  6750  00E7FE  52                 	db	82	;'R'
  6751  00E7FF  20                 	db	32
  6752  00E800  56                 	db	86	;'V'
  6753  00E801  6F                 	db	111	;'o'
  6754  00E802  6C                 	db	108	;'l'
  6755  00E803  74                 	db	116	;'t'
  6756  00E804  61                 	db	97	;'a'
  6757  00E805  67                 	db	103	;'g'
  6758  00E806  65                 	db	101	;'e'
  6759  00E807  3F                 	db	63	;'?'
  6760  00E808  3A                 	db	58	;':'
  6761  00E809  20                 	db	32
  6762  00E80A  52                 	db	82	;'R'
  6763  00E80B  65                 	db	101	;'e'
  6764  00E80C  74                 	db	116	;'t'
  6765  00E80D  75                 	db	117	;'u'
  6766  00E80E  72                 	db	114	;'r'
  6767  00E80F  6E                 	db	110	;'n'
  6768  00E810  73                 	db	115	;'s'
  6769  00E811  20                 	db	32
  6770  00E812  74                 	db	116	;'t'
  6771  00E813  68                 	db	104	;'h'
  6772  00E814  65                 	db	101	;'e'
  6773  00E815  20                 	db	32
  6774  00E816  6D                 	db	109	;'m'
  6775  00E817  61                 	db	97	;'a'
  6776  00E818  78                 	db	120	;'x'
  6777  00E819  69                 	db	105	;'i'
  6778  00E81A  6D                 	db	109	;'m'
  6779  00E81B  75                 	db	117	;'u'
  6780  00E81C  6D                 	db	109	;'m'
  6781  00E81D  20                 	db	32
  6782  00E81E  72                 	db	114	;'r'
  6783  00E81F  65                 	db	101	;'e'
  6784  00E820  63                 	db	99	;'c'
  6785  00E821  6F                 	db	111	;'o'
  6786  00E822  72                 	db	114	;'r'
  6787  00E823  64                 	db	100	;'d'
  6788  00E824  65                 	db	101	;'e'
  6789  00E825  64                 	db	100	;'d'
  6790  00E826  20                 	db	32
  6791  00E827  46                 	db	70	;'F'
  6792  00E828  56                 	db	86	;'V'
  6793  00E829  52                 	db	82	;'R'
  6794  00E82A  20                 	db	32
  6795  00E82B  42                 	db	66	;'B'
  6796  00E82C  75                 	db	117	;'u'
  6797  00E82D  66                 	db	102	;'f'
  6798  00E82E  66                 	db	102	;'f'
  6799  00E82F  65                 	db	101	;'e'
  6800  00E830  72                 	db	114	;'r'
  6801  00E831  20                 	db	32
  6802  00E832  31                 	db	49	;'1'
  6803  00E833  20                 	db	32
  6804  00E834  56                 	db	86	;'V'
  6805  00E835  6F                 	db	111	;'o'
  6806  00E836  6C                 	db	108	;'l'
  6807  00E837  74                 	db	116	;'t'
  6808  00E838  61                 	db	97	;'a'
  6809  00E839  67                 	db	103	;'g'
  6810  00E83A  65                 	db	101	;'e'
  6811  00E83B  20                 	db	32
  6812  00E83C  6D                 	db	109	;'m'
  6813  00E83D  65                 	db	101	;'e'
  6814  00E83E  61                 	db	97	;'a'
  6815  00E83F  73                 	db	115	;'s'
  6816  00E840  75                 	db	117	;'u'
  6817  00E841  72                 	db	114	;'r'
  6818  00E842  65                 	db	101	;'e'
  6819  00E843  64                 	db	100	;'d'
  6820  00E844  0A                 	db	10
  6821  00E845  0D                 	db	13
  6822  00E846  0A                 	db	10
  6823  00E847  0D                 	db	13
  6824  00E848  00                 	db	0
  6825  00E849                     STR_160:
  6826  00E849  4C                 	db	76	;'L'
  6827  00E84A  69                 	db	105	;'i'
  6828  00E84B  73                 	db	115	;'s'
  6829  00E84C  74                 	db	116	;'t'
  6830  00E84D  20                 	db	32
  6831  00E84E  6F                 	db	111	;'o'
  6832  00E84F  66                 	db	102	;'f'
  6833  00E850  20                 	db	32
  6834  00E851  73                 	db	115	;'s'
  6835  00E852  75                 	db	117	;'u'
  6836  00E853  70                 	db	112	;'p'
  6837  00E854  70                 	db	112	;'p'
  6838  00E855  6F                 	db	111	;'o'
  6839  00E856  72                 	db	114	;'r'
  6840  00E857  74                 	db	116	;'t'
  6841  00E858  65                 	db	101	;'e'
  6842  00E859  64                 	db	100	;'d'
  6843  00E85A  20                 	db	32
  6844  00E85B  4F                 	db	79	;'O'
  6845  00E85C  75                 	db	117	;'u'
  6846  00E85D  74                 	db	116	;'t'
  6847  00E85E  70                 	db	112	;'p'
  6848  00E85F  75                 	db	117	;'u'
  6849  00E860  74                 	db	116	;'t'
  6850  00E861  20                 	db	32
  6851  00E862  43                 	db	67	;'C'
  6852  00E863  6F                 	db	111	;'o'
  6853  00E864  6E                 	db	110	;'n'
  6854  00E865  74                 	db	116	;'t'
  6855  00E866  72                 	db	114	;'r'
  6856  00E867  6F                 	db	111	;'o'
  6857  00E868  6C                 	db	108	;'l'
  6858  00E869  20                 	db	32
  6859  00E86A  43                 	db	67	;'C'
  6860  00E86B  6F                 	db	111	;'o'
  6861  00E86C  6D                 	db	109	;'m'
  6862  00E86D  6D                 	db	109	;'m'
  6863  00E86E  61                 	db	97	;'a'
  6864  00E86F  6E                 	db	110	;'n'
  6865  00E870  64                 	db	100	;'d'
  6866  00E871  73                 	db	115	;'s'
  6867  00E872  3A                 	db	58	;':'
  6868  00E873  0A                 	db	10
  6869  00E874  0D                 	db	13
  6870  00E875  20                 	db	32
  6871  00E876  20                 	db	32
  6872  00E877  20                 	db	32
  6873  00E878  45                 	db	69	;'E'
  6874  00E879  6E                 	db	110	;'n'
  6875  00E87A  61                 	db	97	;'a'
  6876  00E87B  62                 	db	98	;'b'
  6877  00E87C  6C                 	db	108	;'l'
  6878  00E87D  65                 	db	101	;'e'
  6879  00E87E  20                 	db	32
  6880  00E87F  44                 	db	68	;'D'
  6881  00E880  69                 	db	105	;'i'
  6882  00E881  6D                 	db	109	;'m'
  6883  00E882  6D                 	db	109	;'m'
  6884  00E883  69                 	db	105	;'i'
  6885  00E884  6E                 	db	110	;'n'
  6886  00E885  67                 	db	103	;'g'
  6887  00E886  3A                 	db	58	;':'
  6888  00E887  20                 	db	32
  6889  00E888  45                 	db	69	;'E'
  6890  00E889  6E                 	db	110	;'n'
  6891  00E88A  61                 	db	97	;'a'
  6892  00E88B  62                 	db	98	;'b'
  6893  00E88C  6C                 	db	108	;'l'
  6894  00E88D  65                 	db	101	;'e'
  6895  00E88E  20                 	db	32
  6896  00E88F  54                 	db	84	;'T'
  6897  00E890  52                 	db	82	;'R'
  6898  00E891  49                 	db	73	;'I'
  6899  00E892  41                 	db	65	;'A'
  6900  00E893  43                 	db	67	;'C'
  6901  00E894  20                 	db	32
  6902  00E895  6F                 	db	111	;'o'
  6903  00E896  75                 	db	117	;'u'
  6904  00E897  74                 	db	116	;'t'
  6905  00E898  70                 	db	112	;'p'
  6906  00E899  75                 	db	117	;'u'
  6907  00E89A  74                 	db	116	;'t'
  6908  00E89B  20                 	db	32
  6909  00E89C  64                 	db	100	;'d'
  6910  00E89D  69                 	db	105	;'i'
  6911  00E89E  6D                 	db	109	;'m'
  6912  00E89F  6D                 	db	109	;'m'
  6913  00E8A0  69                 	db	105	;'i'
  6914  00E8A1  6E                 	db	110	;'n'
  6915  00E8A2  67                 	db	103	;'g'
  6916  00E8A3  0A                 	db	10
  6917  00E8A4  0D                 	db	13
  6918  00E8A5  20                 	db	32
  6919  00E8A6  20                 	db	32
  6920  00E8A7  20                 	db	32
  6921  00E8A8  44                 	db	68	;'D'
  6922  00E8A9  69                 	db	105	;'i'
  6923  00E8AA  73                 	db	115	;'s'
  6924  00E8AB  61                 	db	97	;'a'
  6925  00E8AC  62                 	db	98	;'b'
  6926  00E8AD  6C                 	db	108	;'l'
  6927  00E8AE  65                 	db	101	;'e'
  6928  00E8AF  20                 	db	32
  6929  00E8B0  44                 	db	68	;'D'
  6930  00E8B1  69                 	db	105	;'i'
  6931  00E8B2  6D                 	db	109	;'m'
  6932  00E8B3  6D                 	db	109	;'m'
  6933  00E8B4  69                 	db	105	;'i'
  6934  00E8B5  6E                 	db	110	;'n'
  6935  00E8B6  67                 	db	103	;'g'
  6936  00E8B7  3A                 	db	58	;':'
  6937  00E8B8  20                 	db	32
  6938  00E8B9  44                 	db	68	;'D'
  6939  00E8BA  69                 	db	105	;'i'
  6940  00E8BB  73                 	db	115	;'s'
  6941  00E8BC  61                 	db	97	;'a'
  6942  00E8BD  62                 	db	98	;'b'
  6943  00E8BE  6C                 	db	108	;'l'
  6944  00E8BF  65                 	db	101	;'e'
  6945  00E8C0  20                 	db	32
  6946  00E8C1  54                 	db	84	;'T'
  6947  00E8C2  52                 	db	82	;'R'
  6948  00E8C3  49                 	db	73	;'I'
  6949  00E8C4  41                 	db	65	;'A'
  6950  00E8C5  43                 	db	67	;'C'
  6951  00E8C6  20                 	db	32
  6952  00E8C7  6F                 	db	111	;'o'
  6953  00E8C8  75                 	db	117	;'u'
  6954  00E8C9  74                 	db	116	;'t'
  6955  00E8CA  70                 	db	112	;'p'
  6956  00E8CB  75                 	db	117	;'u'
  6957  00E8CC  74                 	db	116	;'t'
  6958  00E8CD  20                 	db	32
  6959  00E8CE  64                 	db	100	;'d'
  6960  00E8CF  69                 	db	105	;'i'
  6961  00E8D0  6D                 	db	109	;'m'
  6962  00E8D1  6D                 	db	109	;'m'
  6963  00E8D2  69                 	db	105	;'i'
  6964  00E8D3  6E                 	db	110	;'n'
  6965  00E8D4  67                 	db	103	;'g'
  6966  00E8D5  0A                 	db	10
  6967  00E8D6  0D                 	db	13
  6968  00E8D7  20                 	db	32
  6969  00E8D8  20                 	db	32
  6970  00E8D9  20                 	db	32
  6971  00E8DA  45                 	db	69	;'E'
  6972  00E8DB  6E                 	db	110	;'n'
  6973  00E8DC  61                 	db	97	;'a'
  6974  00E8DD  62                 	db	98	;'b'
  6975  00E8DE  6C                 	db	108	;'l'
  6976  00E8DF  65                 	db	101	;'e'
  6977  00E8E0  20                 	db	32
  6978  00E8E1  4C                 	db	76	;'L'
  6979  00E8E2  6F                 	db	111	;'o'
  6980  00E8E3  61                 	db	97	;'a'
  6981  00E8E4  64                 	db	100	;'d'
  6982  00E8E5  3A                 	db	58	;':'
  6983  00E8E6  20                 	db	32
  6984  00E8E7  45                 	db	69	;'E'
  6985  00E8E8  6E                 	db	110	;'n'
  6986  00E8E9  61                 	db	97	;'a'
  6987  00E8EA  62                 	db	98	;'b'
  6988  00E8EB  6C                 	db	108	;'l'
  6989  00E8EC  65                 	db	101	;'e'
  6990  00E8ED  73                 	db	115	;'s'
  6991  00E8EE  20                 	db	32
  6992  00E8EF  74                 	db	116	;'t'
  6993  00E8F0  68                 	db	104	;'h'
  6994  00E8F1  65                 	db	101	;'e'
  6995  00E8F2  20                 	db	32
  6996  00E8F3  6F                 	db	111	;'o'
  6997  00E8F4  75                 	db	117	;'u'
  6998  00E8F5  74                 	db	116	;'t'
  6999  00E8F6  70                 	db	112	;'p'
  7000  00E8F7  75                 	db	117	;'u'
  7001  00E8F8  74                 	db	116	;'t'
  7002  00E8F9  20                 	db	32
  7003  00E8FA  54                 	db	84	;'T'
  7004  00E8FB  52                 	db	82	;'R'
  7005  00E8FC  49                 	db	73	;'I'
  7006  00E8FD  41                 	db	65	;'A'
  7007  00E8FE  43                 	db	67	;'C'
  7008  00E8FF  20                 	db	32
  7009  00E900  77                 	db	119	;'w'
  7010  00E901  69                 	db	105	;'i'
  7011  00E902  74                 	db	116	;'t'
  7012  00E903  68                 	db	104	;'h'
  7013  00E904  20                 	db	32
  7014  00E905  64                 	db	100	;'d'
  7015  00E906  69                 	db	105	;'i'
  7016  00E907  6D                 	db	109	;'m'
  7017  00E908  6D                 	db	109	;'m'
  7018  00E909  69                 	db	105	;'i'
  7019  00E90A  6E                 	db	110	;'n'
  7020  00E90B  67                 	db	103	;'g'
  7021  00E90C  20                 	db	32
  7022  00E90D  64                 	db	100	;'d'
  7023  00E90E  69                 	db	105	;'i'
  7024  00E90F  73                 	db	115	;'s'
  7025  00E910  61                 	db	97	;'a'
  7026  00E911  62                 	db	98	;'b'
  7027  00E912  6C                 	db	108	;'l'
  7028  00E913  65                 	db	101	;'e'
  7029  00E914  64                 	db	100	;'d'
  7030  00E915  0A                 	db	10
  7031  00E916  0D                 	db	13
  7032  00E917  20                 	db	32
  7033  00E918  20                 	db	32
  7034  00E919  20                 	db	32
  7035  00E91A  44                 	db	68	;'D'
  7036  00E91B  69                 	db	105	;'i'
  7037  00E91C  73                 	db	115	;'s'
  7038  00E91D  61                 	db	97	;'a'
  7039  00E91E  62                 	db	98	;'b'
  7040  00E91F  6C                 	db	108	;'l'
  7041  00E920  65                 	db	101	;'e'
  7042  00E921  20                 	db	32
  7043  00E922  4C                 	db	76	;'L'
  7044  00E923  6F                 	db	111	;'o'
  7045  00E924  61                 	db	97	;'a'
  7046  00E925  64                 	db	100	;'d'
  7047  00E926  3A                 	db	58	;':'
  7048  00E927  20                 	db	32
  7049  00E928  44                 	db	68	;'D'
  7050  00E929  69                 	db	105	;'i'
  7051  00E92A  73                 	db	115	;'s'
  7052  00E92B  61                 	db	97	;'a'
  7053  00E92C  62                 	db	98	;'b'
  7054  00E92D  6C                 	db	108	;'l'
  7055  00E92E  65                 	db	101	;'e'
  7056  00E92F  73                 	db	115	;'s'
  7057  00E930  20                 	db	32
  7058  00E931  74                 	db	116	;'t'
  7059  00E932  68                 	db	104	;'h'
  7060  00E933  65                 	db	101	;'e'
  7061  00E934  20                 	db	32
  7062  00E935  6F                 	db	111	;'o'
  7063  00E936  75                 	db	117	;'u'
  7064  00E937  74                 	db	116	;'t'
  7065  00E938  70                 	db	112	;'p'
  7066  00E939  75                 	db	117	;'u'
  7067  00E93A  74                 	db	116	;'t'
  7068  00E93B  20                 	db	32
  7069  00E93C  54                 	db	84	;'T'
  7070  00E93D  52                 	db	82	;'R'
  7071  00E93E  49                 	db	73	;'I'
  7072  00E93F  41                 	db	65	;'A'
  7073  00E940  43                 	db	67	;'C'
  7074  00E941  20                 	db	32
  7075  00E942  63                 	db	99	;'c'
  7076  00E943  6F                 	db	111	;'o'
  7077  00E944  6D                 	db	109	;'m'
  7078  00E945  70                 	db	112	;'p'
  7079  00E946  6C                 	db	108	;'l'
  7080  00E947  65                 	db	101	;'e'
  7081  00E948  74                 	db	116	;'t'
  7082  00E949  65                 	db	101	;'e'
  7083  00E94A  6C                 	db	108	;'l'
  7084  00E94B  79                 	db	121	;'y'
  7085  00E94C  0A                 	db	10
  7086  00E94D  0D                 	db	13
  7087  00E94E  20                 	db	32
  7088  00E94F  20                 	db	32
  7089  00E950  20                 	db	32
  7090  00E951  4C                 	db	76	;'L'
  7091  00E952  6F                 	db	111	;'o'
  7092  00E953  61                 	db	97	;'a'
  7093  00E954  64                 	db	100	;'d'
  7094  00E955  20                 	db	32
  7095  00E956  45                 	db	69	;'E'
  7096  00E957  6E                 	db	110	;'n'
  7097  00E958  61                 	db	97	;'a'
  7098  00E959  62                 	db	98	;'b'
  7099  00E95A  6C                 	db	108	;'l'
  7100  00E95B  65                 	db	101	;'e'
  7101  00E95C  64                 	db	100	;'d'
  7102  00E95D  3F                 	db	63	;'?'
  7103  00E95E  3A                 	db	58	;':'
  7104  00E95F  20                 	db	32
  7105  00E960  52                 	db	82	;'R'
  7106  00E961  65                 	db	101	;'e'
  7107  00E962  74                 	db	116	;'t'
  7108  00E963  75                 	db	117	;'u'
  7109  00E964  72                 	db	114	;'r'
  7110  00E965  6E                 	db	110	;'n'
  7111  00E966  73                 	db	115	;'s'
  7112  00E967  20                 	db	32
  7113  00E968  69                 	db	105	;'i'
  7114  00E969  66                 	db	102	;'f'
  7115  00E96A  20                 	db	32
  7116  00E96B  74                 	db	116	;'t'
  7117  00E96C  68                 	db	104	;'h'
  7118  00E96D  65                 	db	101	;'e'
  7119  00E96E  20                 	db	32
  7120  00E96F  6F                 	db	111	;'o'
  7121  00E970  75                 	db	117	;'u'
  7122  00E971  74                 	db	116	;'t'
  7123  00E972  70                 	db	112	;'p'
  7124  00E973  75                 	db	117	;'u'
  7125  00E974  74                 	db	116	;'t'
  7126  00E975  20                 	db	32
  7127  00E976  6C                 	db	108	;'l'
  7128  00E977  6F                 	db	111	;'o'
  7129  00E978  61                 	db	97	;'a'
  7130  00E979  64                 	db	100	;'d'
  7131  00E97A  20                 	db	32
  7132  00E97B  69                 	db	105	;'i'
  7133  00E97C  73                 	db	115	;'s'
  7134  00E97D  20                 	db	32
  7135  00E97E  65                 	db	101	;'e'
  7136  00E97F  6E                 	db	110	;'n'
  7137  00E980  61                 	db	97	;'a'
  7138  00E981  62                 	db	98	;'b'
  7139  00E982  6C                 	db	108	;'l'
  7140  00E983  65                 	db	101	;'e'
  7141  00E984  64                 	db	100	;'d'
  7142  00E985  20                 	db	32
  7143  00E986  6F                 	db	111	;'o'
  7144  00E987  72                 	db	114	;'r'
  7145  00E988  20                 	db	32
  7146  00E989  64                 	db	100	;'d'
  7147  00E98A  69                 	db	105	;'i'
  7148  00E98B  73                 	db	115	;'s'
  7149  00E98C  61                 	db	97	;'a'
  7150  00E98D  62                 	db	98	;'b'
  7151  00E98E  6C                 	db	108	;'l'
  7152  00E98F  65                 	db	101	;'e'
  7153  00E990  64                 	db	100	;'d'
  7154  00E991  0A                 	db	10
  7155  00E992  0D                 	db	13
  7156  00E993  20                 	db	32
  7157  00E994  20                 	db	32
  7158  00E995  20                 	db	32
  7159  00E996  44                 	db	68	;'D'
  7160  00E997  69                 	db	105	;'i'
  7161  00E998  6D                 	db	109	;'m'
  7162  00E999  6D                 	db	109	;'m'
  7163  00E99A  69                 	db	105	;'i'
  7164  00E99B  6E                 	db	110	;'n'
  7165  00E99C  67                 	db	103	;'g'
  7166  00E99D  20                 	db	32
  7167  00E99E  45                 	db	69	;'E'
  7168  00E99F  6E                 	db	110	;'n'
  7169  00E9A0  61                 	db	97	;'a'
  7170  00E9A1  62                 	db	98	;'b'
  7171  00E9A2  6C                 	db	108	;'l'
  7172  00E9A3  65                 	db	101	;'e'
  7173  00E9A4  64                 	db	100	;'d'
  7174  00E9A5  3F                 	db	63	;'?'
  7175  00E9A6  3A                 	db	58	;':'
  7176  00E9A7  20                 	db	32
  7177  00E9A8  52                 	db	82	;'R'
  7178  00E9A9  65                 	db	101	;'e'
  7179  00E9AA  74                 	db	116	;'t'
  7180  00E9AB  75                 	db	117	;'u'
  7181  00E9AC  72                 	db	114	;'r'
  7182  00E9AD  6E                 	db	110	;'n'
  7183  00E9AE  73                 	db	115	;'s'
  7184  00E9AF  20                 	db	32
  7185  00E9B0  69                 	db	105	;'i'
  7186  00E9B1  66                 	db	102	;'f'
  7187  00E9B2  20                 	db	32
  7188  00E9B3  64                 	db	100	;'d'
  7189  00E9B4  69                 	db	105	;'i'
  7190  00E9B5  6D                 	db	109	;'m'
  7191  00E9B6  6D                 	db	109	;'m'
  7192  00E9B7  69                 	db	105	;'i'
  7193  00E9B8  6E                 	db	110	;'n'
  7194  00E9B9  67                 	db	103	;'g'
  7195  00E9BA  20                 	db	32
  7196  00E9BB  6F                 	db	111	;'o'
  7197  00E9BC  66                 	db	102	;'f'
  7198  00E9BD  20                 	db	32
  7199  00E9BE  74                 	db	116	;'t'
  7200  00E9BF  68                 	db	104	;'h'
  7201  00E9C0  65                 	db	101	;'e'
  7202  00E9C1  20                 	db	32
  7203  00E9C2  6F                 	db	111	;'o'
  7204  00E9C3  75                 	db	117	;'u'
  7205  00E9C4  74                 	db	116	;'t'
  7206  00E9C5  70                 	db	112	;'p'
  7207  00E9C6  75                 	db	117	;'u'
  7208  00E9C7  74                 	db	116	;'t'
  7209  00E9C8  20                 	db	32
  7210  00E9C9  6C                 	db	108	;'l'
  7211  00E9CA  6F                 	db	111	;'o'
  7212  00E9CB  61                 	db	97	;'a'
  7213  00E9CC  64                 	db	100	;'d'
  7214  00E9CD  20                 	db	32
  7215  00E9CE  69                 	db	105	;'i'
  7216  00E9CF  73                 	db	115	;'s'
  7217  00E9D0  20                 	db	32
  7218  00E9D1  65                 	db	101	;'e'
  7219  00E9D2  6E                 	db	110	;'n'
  7220  00E9D3  61                 	db	97	;'a'
  7221  00E9D4  62                 	db	98	;'b'
  7222  00E9D5  6C                 	db	108	;'l'
  7223  00E9D6  65                 	db	101	;'e'
  7224  00E9D7  64                 	db	100	;'d'
  7225  00E9D8  20                 	db	32
  7226  00E9D9  6F                 	db	111	;'o'
  7227  00E9DA  72                 	db	114	;'r'
  7228  00E9DB  20                 	db	32
  7229  00E9DC  6E                 	db	110	;'n'
  7230  00E9DD  6F                 	db	111	;'o'
  7231  00E9DE  74                 	db	116	;'t'
  7232  00E9DF  0A                 	db	10
  7233  00E9E0  0D                 	db	13
  7234  00E9E1  20                 	db	32
  7235  00E9E2  20                 	db	32
  7236  00E9E3  20                 	db	32
  7237  00E9E4  53                 	db	83	;'S'
  7238  00E9E5  65                 	db	101	;'e'
  7239  00E9E6  74                 	db	116	;'t'
  7240  00E9E7  20                 	db	32
  7241  00E9E8  44                 	db	68	;'D'
  7242  00E9E9  69                 	db	105	;'i'
  7243  00E9EA  6D                 	db	109	;'m'
  7244  00E9EB  6D                 	db	109	;'m'
  7245  00E9EC  69                 	db	105	;'i'
  7246  00E9ED  6E                 	db	110	;'n'
  7247  00E9EE  67                 	db	103	;'g'
  7248  00E9EF  20                 	db	32
  7249  00E9F0  50                 	db	80	;'P'
  7250  00E9F1  65                 	db	101	;'e'
  7251  00E9F2  72                 	db	114	;'r'
  7252  00E9F3  63                 	db	99	;'c'
  7253  00E9F4  65                 	db	101	;'e'
  7254  00E9F5  6E                 	db	110	;'n'
  7255  00E9F6  74                 	db	116	;'t'
  7256  00E9F7  61                 	db	97	;'a'
  7257  00E9F8  67                 	db	103	;'g'
  7258  00E9F9  65                 	db	101	;'e'
  7259  00E9FA  3A                 	db	58	;':'
  7260  00E9FB  20                 	db	32
  7261  00E9FC  3C                 	db	60	;'<'
  7262  00E9FD  78                 	db	120	;'x'
  7263  00E9FE  3E                 	db	62	;'>'
  7264  00E9FF  3A                 	db	58	;':'
  7265  00EA00  20                 	db	32
  7266  00EA01  53                 	db	83	;'S'
  7267  00EA02  65                 	db	101	;'e'
  7268  00EA03  74                 	db	116	;'t'
  7269  00EA04  73                 	db	115	;'s'
  7270  00EA05  20                 	db	32
  7271  00EA06  74                 	db	116	;'t'
  7272  00EA07  68                 	db	104	;'h'
  7273  00EA08  65                 	db	101	;'e'
  7274  00EA09  20                 	db	32
  7275  00EA0A  6F                 	db	111	;'o'
  7276  00EA0B  75                 	db	117	;'u'
  7277  00EA0C  74                 	db	116	;'t'
  7278  00EA0D  70                 	db	112	;'p'
  7279  00EA0E  75                 	db	117	;'u'
  7280  00EA0F  74                 	db	116	;'t'
  7281  00EA10  20                 	db	32
  7282  00EA11  64                 	db	100	;'d'
  7283  00EA12  69                 	db	105	;'i'
  7284  00EA13  6D                 	db	109	;'m'
  7285  00EA14  6D                 	db	109	;'m'
  7286  00EA15  69                 	db	105	;'i'
  7287  00EA16  6E                 	db	110	;'n'
  7288  00EA17  67                 	db	103	;'g'
  7289  00EA18  20                 	db	32
  7290  00EA19  70                 	db	112	;'p'
  7291  00EA1A  65                 	db	101	;'e'
  7292  00EA1B  72                 	db	114	;'r'
  7293  00EA1C  63                 	db	99	;'c'
  7294  00EA1D  65                 	db	101	;'e'
  7295  00EA1E  6E                 	db	110	;'n'
  7296  00EA1F  74                 	db	116	;'t'
  7297  00EA20  61                 	db	97	;'a'
  7298  00EA21  67                 	db	103	;'g'
  7299  00EA22  65                 	db	101	;'e'
  7300  00EA23  20                 	db	32
  7301  00EA24  61                 	db	97	;'a'
  7302  00EA25  73                 	db	115	;'s'
  7303  00EA26  20                 	db	32
  7304  00EA27  78                 	db	120	;'x'
  7305  00EA28  20                 	db	32
  7306  00EA29  70                 	db	112	;'p'
  7307  00EA2A  65                 	db	101	;'e'
  7308  00EA2B  72                 	db	114	;'r'
  7309  00EA2C  63                 	db	99	;'c'
  7310  00EA2D  65                 	db	101	;'e'
  7311  00EA2E  6E                 	db	110	;'n'
  7312  00EA2F  74                 	db	116	;'t'
  7313  00EA30  0A                 	db	10
  7314  00EA31  0D                 	db	13
  7315  00EA32  0A                 	db	10
  7316  00EA33  0D                 	db	13
  7317  00EA34  00                 	db	0
  7318  00EA35                     STR_164:
  7319  00EA35  50                 	db	80	;'P'
  7320  00EA36  6C                 	db	108	;'l'
  7321  00EA37  65                 	db	101	;'e'
  7322  00EA38  61                 	db	97	;'a'
  7323  00EA39  73                 	db	115	;'s'
  7324  00EA3A  65                 	db	101	;'e'
  7325  00EA3B  20                 	db	32
  7326  00EA3C  73                 	db	115	;'s'
  7327  00EA3D  70                 	db	112	;'p'
  7328  00EA3E  65                 	db	101	;'e'
  7329  00EA3F  63                 	db	99	;'c'
  7330  00EA40  69                 	db	105	;'i'
  7331  00EA41  66                 	db	102	;'f'
  7332  00EA42  79                 	db	121	;'y'
  7333  00EA43  20                 	db	32
  7334  00EA44  77                 	db	119	;'w'
  7335  00EA45  68                 	db	104	;'h'
  7336  00EA46  61                 	db	97	;'a'
  7337  00EA47  74                 	db	116	;'t'
  7338  00EA48  20                 	db	32
  7339  00EA49  74                 	db	116	;'t'
  7340  00EA4A  79                 	db	121	;'y'
  7341  00EA4B  70                 	db	112	;'p'
  7342  00EA4C  65                 	db	101	;'e'
  7343  00EA4D  20                 	db	32
  7344  00EA4E  6F                 	db	111	;'o'
  7345  00EA4F  66                 	db	102	;'f'
  7346  00EA50  20                 	db	32
  7347  00EA51  63                 	db	99	;'c'
  7348  00EA52  6F                 	db	111	;'o'
  7349  00EA53  6D                 	db	109	;'m'
  7350  00EA54  6D                 	db	109	;'m'
  7351  00EA55  61                 	db	97	;'a'
  7352  00EA56  6E                 	db	110	;'n'
  7353  00EA57  64                 	db	100	;'d'
  7354  00EA58  73                 	db	115	;'s'
  7355  00EA59  20                 	db	32
  7356  00EA5A  79                 	db	121	;'y'
  7357  00EA5B  6F                 	db	111	;'o'
  7358  00EA5C  75                 	db	117	;'u'
  7359  00EA5D  27                 	db	39
  7360  00EA5E  64                 	db	100	;'d'
  7361  00EA5F  20                 	db	32
  7362  00EA60  6C                 	db	108	;'l'
  7363  00EA61  69                 	db	105	;'i'
  7364  00EA62  6B                 	db	107	;'k'
  7365  00EA63  65                 	db	101	;'e'
  7366  00EA64  20                 	db	32
  7367  00EA65  68                 	db	104	;'h'
  7368  00EA66  65                 	db	101	;'e'
  7369  00EA67  6C                 	db	108	;'l'
  7370  00EA68  70                 	db	112	;'p'
  7371  00EA69  20                 	db	32
  7372  00EA6A  77                 	db	119	;'w'
  7373  00EA6B  69                 	db	105	;'i'
  7374  00EA6C  74                 	db	116	;'t'
  7375  00EA6D  68                 	db	104	;'h'
  7376  00EA6E  3A                 	db	58	;':'
  7377  00EA6F  0A                 	db	10
  7378  00EA70  0D                 	db	13
  7379  00EA71  54                 	db	84	;'T'
  7380  00EA72  72                 	db	114	;'r'
  7381  00EA73  79                 	db	121	;'y'
  7382  00EA74  20                 	db	32
  7383  00EA75  27                 	db	39
  7384  00EA76  48                 	db	72	;'H'
  7385  00EA77  65                 	db	101	;'e'
  7386  00EA78  6C                 	db	108	;'l'
  7387  00EA79  70                 	db	112	;'p'
  7388  00EA7A  20                 	db	32
  7389  00EA7B  3C                 	db	60	;'<'
  7390  00EA7C  63                 	db	99	;'c'
  7391  00EA7D  6F                 	db	111	;'o'
  7392  00EA7E  6D                 	db	109	;'m'
  7393  00EA7F  6D                 	db	109	;'m'
  7394  00EA80  61                 	db	97	;'a'
  7395  00EA81  6E                 	db	110	;'n'
  7396  00EA82  64                 	db	100	;'d'
  7397  00EA83  20                 	db	32
  7398  00EA84  73                 	db	115	;'s'
  7399  00EA85  65                 	db	101	;'e'
  7400  00EA86  74                 	db	116	;'t'
  7401  00EA87  3E                 	db	62	;'>'
  7402  00EA88  27                 	db	39
  7403  00EA89  0A                 	db	10
  7404  00EA8A  0D                 	db	13
  7405  00EA8B  0A                 	db	10
  7406  00EA8C  0D                 	db	13
  7407  00EA8D  53                 	db	83	;'S'
  7408  00EA8E  75                 	db	117	;'u'
  7409  00EA8F  70                 	db	112	;'p'
  7410  00EA90  70                 	db	112	;'p'
  7411  00EA91  6F                 	db	111	;'o'
  7412  00EA92  72                 	db	114	;'r'
  7413  00EA93  74                 	db	116	;'t'
  7414  00EA94  65                 	db	101	;'e'
  7415  00EA95  64                 	db	100	;'d'
  7416  00EA96  20                 	db	32
  7417  00EA97  43                 	db	67	;'C'
  7418  00EA98  6F                 	db	111	;'o'
  7419  00EA99  6D                 	db	109	;'m'
  7420  00EA9A  6D                 	db	109	;'m'
  7421  00EA9B  61                 	db	97	;'a'
  7422  00EA9C  6E                 	db	110	;'n'
  7423  00EA9D  64                 	db	100	;'d'
  7424  00EA9E  20                 	db	32
  7425  00EA9F  53                 	db	83	;'S'
  7426  00EAA0  65                 	db	101	;'e'
  7427  00EAA1  74                 	db	116	;'t'
  7428  00EAA2  73                 	db	115	;'s'
  7429  00EAA3  3A                 	db	58	;':'
  7430  00EAA4  0A                 	db	10
  7431  00EAA5  0D                 	db	13
  7432  00EAA6  20                 	db	32
  7433  00EAA7  20                 	db	32
  7434  00EAA8  20                 	db	32
  7435  00EAA9  44                 	db	68	;'D'
  7436  00EAAA  65                 	db	101	;'e'
  7437  00EAAB  76                 	db	118	;'v'
  7438  00EAAC  69                 	db	105	;'i'
  7439  00EAAD  63                 	db	99	;'c'
  7440  00EAAE  65                 	db	101	;'e'
  7441  00EAAF  20                 	db	32
  7442  00EAB0  43                 	db	67	;'C'
  7443  00EAB1  6F                 	db	111	;'o'
  7444  00EAB2  6E                 	db	110	;'n'
  7445  00EAB3  74                 	db	116	;'t'
  7446  00EAB4  72                 	db	114	;'r'
  7447  00EAB5  6F                 	db	111	;'o'
  7448  00EAB6  6C                 	db	108	;'l'
  7449  00EAB7  20                 	db	32
  7450  00EAB8  43                 	db	67	;'C'
  7451  00EAB9  6F                 	db	111	;'o'
  7452  00EABA  6D                 	db	109	;'m'
  7453  00EABB  6D                 	db	109	;'m'
  7454  00EABC  61                 	db	97	;'a'
  7455  00EABD  6E                 	db	110	;'n'
  7456  00EABE  64                 	db	100	;'d'
  7457  00EABF  73                 	db	115	;'s'
  7458  00EAC0  3A                 	db	58	;':'
  7459  00EAC1  20                 	db	32
  7460  00EAC2  43                 	db	67	;'C'
  7461  00EAC3  6F                 	db	111	;'o'
  7462  00EAC4  6D                 	db	109	;'m'
  7463  00EAC5  6D                 	db	109	;'m'
  7464  00EAC6  61                 	db	97	;'a'
  7465  00EAC7  6E                 	db	110	;'n'
  7466  00EAC8  64                 	db	100	;'d'
  7467  00EAC9  73                 	db	115	;'s'
  7468  00EACA  20                 	db	32
  7469  00EACB  74                 	db	116	;'t'
  7470  00EACC  6F                 	db	111	;'o'
  7471  00EACD  20                 	db	32
  7472  00EACE  76                 	db	118	;'v'
  7473  00EACF  69                 	db	105	;'i'
  7474  00EAD0  65                 	db	101	;'e'
  7475  00EAD1  77                 	db	119	;'w'
  7476  00EAD2  20                 	db	32
  7477  00EAD3  61                 	db	97	;'a'
  7478  00EAD4  6E                 	db	110	;'n'
  7479  00EAD5  64                 	db	100	;'d'
  7480  00EAD6  20                 	db	32
  7481  00EAD7  63                 	db	99	;'c'
  7482  00EAD8  6F                 	db	111	;'o'
  7483  00EAD9  6E                 	db	110	;'n'
  7484  00EADA  74                 	db	116	;'t'
  7485  00EADB  72                 	db	114	;'r'
  7486  00EADC  6F                 	db	111	;'o'
  7487  00EADD  6C                 	db	108	;'l'
  7488  00EADE  20                 	db	32
  7489  00EADF  6C                 	db	108	;'l'
  7490  00EAE0  6F                 	db	111	;'o'
  7491  00EAE1  77                 	db	119	;'w'
  7492  00EAE2  20                 	db	32
  7493  00EAE3  6C                 	db	108	;'l'
  7494  00EAE4  65                 	db	101	;'e'
  7495  00EAE5  76                 	db	118	;'v'
  7496  00EAE6  65                 	db	101	;'e'
  7497  00EAE7  6C                 	db	108	;'l'
  7498  00EAE8  20                 	db	32
  7499  00EAE9  73                 	db	115	;'s'
  7500  00EAEA  79                 	db	121	;'y'
  7501  00EAEB  73                 	db	115	;'s'
  7502  00EAEC  74                 	db	116	;'t'
  7503  00EAED  65                 	db	101	;'e'
  7504  00EAEE  6D                 	db	109	;'m'
  7505  00EAEF  20                 	db	32
  7506  00EAF0  66                 	db	102	;'f'
  7507  00EAF1  75                 	db	117	;'u'
  7508  00EAF2  6E                 	db	110	;'n'
  7509  00EAF3  63                 	db	99	;'c'
  7510  00EAF4  74                 	db	116	;'t'
  7511  00EAF5  69                 	db	105	;'i'
  7512  00EAF6  6F                 	db	111	;'o'
  7513  00EAF7  6E                 	db	110	;'n'
  7514  00EAF8  61                 	db	97	;'a'
  7515  00EAF9  6C                 	db	108	;'l'
  7516  00EAFA  69                 	db	105	;'i'
  7517  00EAFB  74                 	db	116	;'t'
  7518  00EAFC  79                 	db	121	;'y'
  7519  00EAFD  0A                 	db	10
  7520  00EAFE  0D                 	db	13
  7521  00EAFF  20                 	db	32
  7522  00EB00  20                 	db	32
  7523  00EB01  20                 	db	32
  7524  00EB02  44                 	db	68	;'D'
  7525  00EB03  65                 	db	101	;'e'
  7526  00EB04  76                 	db	118	;'v'
  7527  00EB05  69                 	db	105	;'i'
  7528  00EB06  63                 	db	99	;'c'
  7529  00EB07  65                 	db	101	;'e'
  7530  00EB08  20                 	db	32
  7531  00EB09  4D                 	db	77	;'M'
  7532  00EB0A  65                 	db	101	;'e'
  7533  00EB0B  61                 	db	97	;'a'
  7534  00EB0C  73                 	db	115	;'s'
  7535  00EB0D  75                 	db	117	;'u'
  7536  00EB0E  72                 	db	114	;'r'
  7537  00EB0F  65                 	db	101	;'e'
  7538  00EB10  6D                 	db	109	;'m'
  7539  00EB11  65                 	db	101	;'e'
  7540  00EB12  6E                 	db	110	;'n'
  7541  00EB13  74                 	db	116	;'t'
  7542  00EB14  20                 	db	32
  7543  00EB15  43                 	db	67	;'C'
  7544  00EB16  6F                 	db	111	;'o'
  7545  00EB17  6D                 	db	109	;'m'
  7546  00EB18  6D                 	db	109	;'m'
  7547  00EB19  61                 	db	97	;'a'
  7548  00EB1A  6E                 	db	110	;'n'
  7549  00EB1B  64                 	db	100	;'d'
  7550  00EB1C  73                 	db	115	;'s'
  7551  00EB1D  3A                 	db	58	;':'
  7552  00EB1E  20                 	db	32
  7553  00EB1F  56                 	db	86	;'V'
  7554  00EB20  69                 	db	105	;'i'
  7555  00EB21  65                 	db	101	;'e'
  7556  00EB22  77                 	db	119	;'w'
  7557  00EB23  20                 	db	32
  7558  00EB24  6C                 	db	108	;'l'
  7559  00EB25  6F                 	db	111	;'o'
  7560  00EB26  77                 	db	119	;'w'
  7561  00EB27  20                 	db	32
  7562  00EB28  6C                 	db	108	;'l'
  7563  00EB29  65                 	db	101	;'e'
  7564  00EB2A  76                 	db	118	;'v'
  7565  00EB2B  65                 	db	101	;'e'
  7566  00EB2C  6C                 	db	108	;'l'
  7567  00EB2D  20                 	db	32
  7568  00EB2E  73                 	db	115	;'s'
  7569  00EB2F  79                 	db	121	;'y'
  7570  00EB30  73                 	db	115	;'s'
  7571  00EB31  74                 	db	116	;'t'
  7572  00EB32  65                 	db	101	;'e'
  7573  00EB33  6D                 	db	109	;'m'
  7574  00EB34  20                 	db	32
  7575  00EB35  6D                 	db	109	;'m'
  7576  00EB36  65                 	db	101	;'e'
  7577  00EB37  61                 	db	97	;'a'
  7578  00EB38  73                 	db	115	;'s'
  7579  00EB39  75                 	db	117	;'u'
  7580  00EB3A  72                 	db	114	;'r'
  7581  00EB3B  65                 	db	101	;'e'
  7582  00EB3C  6D                 	db	109	;'m'
  7583  00EB3D  65                 	db	101	;'e'
  7584  00EB3E  6E                 	db	110	;'n'
  7585  00EB3F  74                 	db	116	;'t'
  7586  00EB40  73                 	db	115	;'s'
  7587  00EB41  0A                 	db	10
  7588  00EB42  0D                 	db	13
  7589  00EB43  20                 	db	32
  7590  00EB44  20                 	db	32
  7591  00EB45  20                 	db	32
  7592  00EB46  50                 	db	80	;'P'
  7593  00EB47  72                 	db	114	;'r'
  7594  00EB48  69                 	db	105	;'i'
  7595  00EB49  6D                 	db	109	;'m'
  7596  00EB4A  61                 	db	97	;'a'
  7597  00EB4B  72                 	db	114	;'r'
  7598  00EB4C  79                 	db	121	;'y'
  7599  00EB4D  20                 	db	32
  7600  00EB4E  4D                 	db	77	;'M'
  7601  00EB4F  65                 	db	101	;'e'
  7602  00EB50  61                 	db	97	;'a'
  7603  00EB51  73                 	db	115	;'s'
  7604  00EB52  75                 	db	117	;'u'
  7605  00EB53  72                 	db	114	;'r'
  7606  00EB54  65                 	db	101	;'e'
  7607  00EB55  6D                 	db	109	;'m'
  7608  00EB56  65                 	db	101	;'e'
  7609  00EB57  6E                 	db	110	;'n'
  7610  00EB58  74                 	db	116	;'t'
  7611  00EB59  20                 	db	32
  7612  00EB5A  43                 	db	67	;'C'
  7613  00EB5B  6F                 	db	111	;'o'
  7614  00EB5C  6D                 	db	109	;'m'
  7615  00EB5D  6D                 	db	109	;'m'
  7616  00EB5E  61                 	db	97	;'a'
  7617  00EB5F  6E                 	db	110	;'n'
  7618  00EB60  64                 	db	100	;'d'
  7619  00EB61  73                 	db	115	;'s'
  7620  00EB62  3A                 	db	58	;':'
  7621  00EB63  20                 	db	32
  7622  00EB64  56                 	db	86	;'V'
  7623  00EB65  69                 	db	105	;'i'
  7624  00EB66  65                 	db	101	;'e'
  7625  00EB67  77                 	db	119	;'w'
  7626  00EB68  20                 	db	32
  7627  00EB69  68                 	db	104	;'h'
  7628  00EB6A  69                 	db	105	;'i'
  7629  00EB6B  67                 	db	103	;'g'
  7630  00EB6C  68                 	db	104	;'h'
  7631  00EB6D  20                 	db	32
  7632  00EB6E  6C                 	db	108	;'l'
  7633  00EB6F  65                 	db	101	;'e'
  7634  00EB70  76                 	db	118	;'v'
  7635  00EB71  65                 	db	101	;'e'
  7636  00EB72  6C                 	db	108	;'l'
  7637  00EB73  20                 	db	32
  7638  00EB74  6F                 	db	111	;'o'
  7639  00EB75  75                 	db	117	;'u'
  7640  00EB76  74                 	db	116	;'t'
  7641  00EB77  70                 	db	112	;'p'
  7642  00EB78  75                 	db	117	;'u'
  7643  00EB79  74                 	db	116	;'t'
  7644  00EB7A  20                 	db	32
  7645  00EB7B  6D                 	db	109	;'m'
  7646  00EB7C  65                 	db	101	;'e'
  7647  00EB7D  61                 	db	97	;'a'
  7648  00EB7E  73                 	db	115	;'s'
  7649  00EB7F  75                 	db	117	;'u'
  7650  00EB80  72                 	db	114	;'r'
  7651  00EB81  65                 	db	101	;'e'
  7652  00EB82  6D                 	db	109	;'m'
  7653  00EB83  65                 	db	101	;'e'
  7654  00EB84  6E                 	db	110	;'n'
  7655  00EB85  74                 	db	116	;'t'
  7656  00EB86  73                 	db	115	;'s'
  7657  00EB87  20                 	db	32
  7658  00EB88  61                 	db	97	;'a'
  7659  00EB89  6E                 	db	110	;'n'
  7660  00EB8A  64                 	db	100	;'d'
  7661  00EB8B  20                 	db	32
  7662  00EB8C  63                 	db	99	;'c'
  7663  00EB8D  61                 	db	97	;'a'
  7664  00EB8E  6C                 	db	108	;'l'
  7665  00EB8F  63                 	db	99	;'c'
  7666  00EB90  75                 	db	117	;'u'
  7667  00EB91  6C                 	db	108	;'l'
  7668  00EB92  61                 	db	97	;'a'
  7669  00EB93  74                 	db	116	;'t'
  7670  00EB94  69                 	db	105	;'i'
  7671  00EB95  6F                 	db	111	;'o'
  7672  00EB96  6E                 	db	110	;'n'
  7673  00EB97  73                 	db	115	;'s'
  7674  00EB98  0A                 	db	10
  7675  00EB99  0D                 	db	13
  7676  00EB9A  20                 	db	32
  7677  00EB9B  20                 	db	32
  7678  00EB9C  20                 	db	32
  7679  00EB9D  4F                 	db	79	;'O'
  7680  00EB9E  75                 	db	117	;'u'
  7681  00EB9F  74                 	db	116	;'t'
  7682  00EBA0  70                 	db	112	;'p'
  7683  00EBA1  75                 	db	117	;'u'
  7684  00EBA2  74                 	db	116	;'t'
  7685  00EBA3  20                 	db	32
  7686  00EBA4  43                 	db	67	;'C'
  7687  00EBA5  6F                 	db	111	;'o'
  7688  00EBA6  6E                 	db	110	;'n'
  7689  00EBA7  74                 	db	116	;'t'
  7690  00EBA8  72                 	db	114	;'r'
  7691  00EBA9  6F                 	db	111	;'o'
  7692  00EBAA  6C                 	db	108	;'l'
  7693  00EBAB  20                 	db	32
  7694  00EBAC  43                 	db	67	;'C'
  7695  00EBAD  6F                 	db	111	;'o'
  7696  00EBAE  6D                 	db	109	;'m'
  7697  00EBAF  6D                 	db	109	;'m'
  7698  00EBB0  61                 	db	97	;'a'
  7699  00EBB1  6E                 	db	110	;'n'
  7700  00EBB2  64                 	db	100	;'d'
  7701  00EBB3  73                 	db	115	;'s'
  7702  00EBB4  3A                 	db	58	;':'
  7703  00EBB5  20                 	db	32
  7704  00EBB6  43                 	db	67	;'C'
  7705  00EBB7  6F                 	db	111	;'o'
  7706  00EBB8  6E                 	db	110	;'n'
  7707  00EBB9  74                 	db	116	;'t'
  7708  00EBBA  72                 	db	114	;'r'
  7709  00EBBB  6F                 	db	111	;'o'
  7710  00EBBC  6C                 	db	108	;'l'
  7711  00EBBD  20                 	db	32
  7712  00EBBE  74                 	db	116	;'t'
  7713  00EBBF  68                 	db	104	;'h'
  7714  00EBC0  65                 	db	101	;'e'
  7715  00EBC1  20                 	db	32
  7716  00EBC2  6F                 	db	111	;'o'
  7717  00EBC3  75                 	db	117	;'u'
  7718  00EBC4  74                 	db	116	;'t'
  7719  00EBC5  70                 	db	112	;'p'
  7720  00EBC6  75                 	db	117	;'u'
  7721  00EBC7  74                 	db	116	;'t'
  7722  00EBC8  20                 	db	32
  7723  00EBC9  73                 	db	115	;'s'
  7724  00EBCA  74                 	db	116	;'t'
  7725  00EBCB  61                 	db	97	;'a'
  7726  00EBCC  74                 	db	116	;'t'
  7727  00EBCD  65                 	db	101	;'e'
  7728  00EBCE  20                 	db	32
  7729  00EBCF  61                 	db	97	;'a'
  7730  00EBD0  6E                 	db	110	;'n'
  7731  00EBD1  64                 	db	100	;'d'
  7732  00EBD2  20                 	db	32
  7733  00EBD3  64                 	db	100	;'d'
  7734  00EBD4  69                 	db	105	;'i'
  7735  00EBD5  6D                 	db	109	;'m'
  7736  00EBD6  6D                 	db	109	;'m'
  7737  00EBD7  69                 	db	105	;'i'
  7738  00EBD8  6E                 	db	110	;'n'
  7739  00EBD9  67                 	db	103	;'g'
  7740  00EBDA  20                 	db	32
  7741  00EBDB  66                 	db	102	;'f'
  7742  00EBDC  65                 	db	101	;'e'
  7743  00EBDD  61                 	db	97	;'a'
  7744  00EBDE  74                 	db	116	;'t'
  7745  00EBDF  75                 	db	117	;'u'
  7746  00EBE0  72                 	db	114	;'r'
  7747  00EBE1  65                 	db	101	;'e'
  7748  00EBE2  73                 	db	115	;'s'
  7749  00EBE3  0A                 	db	10
  7750  00EBE4  0D                 	db	13
  7751  00EBE5  0A                 	db	10
  7752  00EBE6  0D                 	db	13
  7753  00EBE7  27                 	db	39
  7754  00EBE8  48                 	db	72	;'H'
  7755  00EBE9  65                 	db	101	;'e'
  7756  00EBEA  6C                 	db	108	;'l'
  7757  00EBEB  70                 	db	112	;'p'
  7758  00EBEC  20                 	db	32
  7759  00EBED  41                 	db	65	;'A'
  7760  00EBEE  6C                 	db	108	;'l'
  7761  00EBEF  6C                 	db	108	;'l'
  7762  00EBF0  27                 	db	39
  7763  00EBF1  20                 	db	32
  7764  00EBF2  77                 	db	119	;'w'
  7765  00EBF3  69                 	db	105	;'i'
  7766  00EBF4  6C                 	db	108	;'l'
  7767  00EBF5  6C                 	db	108	;'l'
  7768  00EBF6  20                 	db	32
  7769  00EBF7  6C                 	db	108	;'l'
  7770  00EBF8  69                 	db	105	;'i'
  7771  00EBF9  73                 	db	115	;'s'
  7772  00EBFA  74                 	db	116	;'t'
  7773  00EBFB  20                 	db	32
  7774  00EBFC  61                 	db	97	;'a'
  7775  00EBFD  6C                 	db	108	;'l'
  7776  00EBFE  6C                 	db	108	;'l'
  7777  00EBFF  20                 	db	32
  7778  00EC00  63                 	db	99	;'c'
  7779  00EC01  6F                 	db	111	;'o'
  7780  00EC02  6D                 	db	109	;'m'
  7781  00EC03  6D                 	db	109	;'m'
  7782  00EC04  61                 	db	97	;'a'
  7783  00EC05  6E                 	db	110	;'n'
  7784  00EC06  64                 	db	100	;'d'
  7785  00EC07  73                 	db	115	;'s'
  7786  00EC08  0A                 	db	10
  7787  00EC09  0D                 	db	13
  7788  00EC0A  00                 	db	0
  7789  00EC0B                     STR_171:
  7790  00EC0B  20                 	db	32
  7791  00EC0C  20                 	db	32
  7792  00EC0D  20                 	db	32
  7793  00EC0E  20                 	db	32
  7794  00EC0F  5F                 	db	95	;'_'
  7795  00EC10  20                 	db	32
  7796  00EC11  20                 	db	32
  7797  00EC12  20                 	db	32
  7798  00EC13  5F                 	db	95	;'_'
  7799  00EC14  5F                 	db	95	;'_'
  7800  00EC15  5F                 	db	95	;'_'
  7801  00EC16  20                 	db	32
  7802  00EC17  20                 	db	32
  7803  00EC18  20                 	db	32
  7804  00EC19  5F                 	db	95	;'_'
  7805  00EC1A  5F                 	db	95	;'_'
  7806  00EC1B  5F                 	db	95	;'_'
  7807  00EC1C  20                 	db	32
  7808  00EC1D  20                 	db	32
  7809  00EC1E  20                 	db	32
  7810  00EC1F  20                 	db	32
  7811  00EC20  20                 	db	32
  7812  00EC21  20                 	db	32
  7813  00EC22  20                 	db	32
  7814  00EC23  20                 	db	32
  7815  00EC24  20                 	db	32
  7816  00EC25  20                 	db	32
  7817  00EC26  20                 	db	32
  7818  00EC27  20                 	db	32
  7819  00EC28  20                 	db	32
  7820  00EC29  20                 	db	32
  7821  00EC2A  20                 	db	32
  7822  00EC2B  20                 	db	32
  7823  00EC2C  20                 	db	32
  7824  00EC2D  20                 	db	32
  7825  00EC2E  20                 	db	32
  7826  00EC2F  20                 	db	32
  7827  00EC30  20                 	db	32
  7828  00EC31  20                 	db	32
  7829  00EC32  5F                 	db	95	;'_'
  7830  00EC33  5F                 	db	95	;'_'
  7831  00EC34  20                 	db	32
  7832  00EC35  20                 	db	32
  7833  00EC36  5F                 	db	95	;'_'
  7834  00EC37  5F                 	db	95	;'_'
  7835  00EC38  20                 	db	32
  7836  00EC39  20                 	db	32
  7837  00EC3A  20                 	db	32
  7838  00EC3B  20                 	db	32
  7839  00EC3C  20                 	db	32
  7840  00EC3D  5F                 	db	95	;'_'
  7841  00EC3E  20                 	db	32
  7842  00EC3F  20                 	db	32
  7843  00EC40  20                 	db	32
  7844  00EC41  20                 	db	32
  7845  00EC42  20                 	db	32
  7846  00EC43  20                 	db	32
  7847  00EC44  20                 	db	32
  7848  00EC45  20                 	db	32
  7849  00EC46  20                 	db	32
  7850  00EC47  20                 	db	32
  7851  00EC48  20                 	db	32
  7852  00EC49  20                 	db	32
  7853  00EC4A  20                 	db	32
  7854  00EC4B  20                 	db	32
  7855  00EC4C  20                 	db	32
  7856  00EC4D  20                 	db	32
  7857  00EC4E  20                 	db	32
  7858  00EC4F  20                 	db	32
  7859  00EC50  20                 	db	32
  7860  00EC51  20                 	db	32
  7861  00EC52  20                 	db	32
  7862  00EC53  20                 	db	32
  7863  00EC54  20                 	db	32
  7864  00EC55  20                 	db	32
  7865  00EC56  20                 	db	32
  7866  00EC57  20                 	db	32
  7867  00EC58  5F                 	db	95	;'_'
  7868  00EC59  20                 	db	32
  7869  00EC5A  20                 	db	32
  7870  00EC5B  20                 	db	32
  7871  00EC5C  5F                 	db	95	;'_'
  7872  00EC5D  5F                 	db	95	;'_'
  7873  00EC5E  5F                 	db	95	;'_'
  7874  00EC5F  20                 	db	32
  7875  00EC60  20                 	db	32
  7876  00EC61  5F                 	db	95	;'_'
  7877  00EC62  20                 	db	32
  7878  00EC63  20                 	db	32
  7879  00EC64  20                 	db	32
  7880  00EC65  20                 	db	32
  7881  00EC66  20                 	db	32
  7882  00EC67  20                 	db	32
  7883  00EC68  0A                 	db	10
  7884  00EC69  0D                 	db	13
  7885  00EC6A  20                 	db	32
  7886  00EC6B  20                 	db	32
  7887  00EC6C  20                 	db	32
  7888  00EC6D  2F                 	db	47
  7889  00EC6E  5F                 	db	95	;'_'
  7890  00EC6F  5C                 	db	92	;'\'
  7891  00EC70  20                 	db	32
  7892  00EC71  2F                 	db	47
  7893  00EC72  20                 	db	32
  7894  00EC73  5F                 	db	95	;'_'
  7895  00EC74  5F                 	db	95	;'_'
  7896  00EC75  7C                 	db	124
  7897  00EC76  20                 	db	32
  7898  00EC77  7C                 	db	124
  7899  00EC78  20                 	db	32
  7900  00EC79  5F                 	db	95	;'_'
  7901  00EC7A  20                 	db	32
  7902  00EC7B  5C                 	db	92	;'\'
  7903  00EC7C  5F                 	db	95	;'_'
  7904  00EC7D  5F                 	db	95	;'_'
  7905  00EC7E  5F                 	db	95	;'_'
  7906  00EC7F  5F                 	db	95	;'_'
  7907  00EC80  5F                 	db	95	;'_'
  7908  00EC81  20                 	db	32
  7909  00EC82  5F                 	db	95	;'_'
  7910  00EC83  5F                 	db	95	;'_'
  7911  00EC84  20                 	db	32
  7912  00EC85  5F                 	db	95	;'_'
  7913  00EC86  5F                 	db	95	;'_'
  7914  00EC87  5F                 	db	95	;'_'
  7915  00EC88  5F                 	db	95	;'_'
  7916  00EC89  5F                 	db	95	;'_'
  7917  00EC8A  20                 	db	32
  7918  00EC8B  5F                 	db	95	;'_'
  7919  00EC8C  20                 	db	32
  7920  00EC8D  5F                 	db	95	;'_'
  7921  00EC8E  20                 	db	32
  7922  00EC8F  20                 	db	32
  7923  00EC90  7C                 	db	124
  7924  00EC91  20                 	db	32
  7925  00EC92  20                 	db	32
  7926  00EC93  5C                 	db	92	;'\'
  7927  00EC94  2F                 	db	47
  7928  00EC95  20                 	db	32
  7929  00EC96  20                 	db	32
  7930  00EC97  7C                 	db	124
  7931  00EC98  5F                 	db	95	;'_'
  7932  00EC99  5F                 	db	95	;'_'
  7933  00EC9A  5F                 	db	95	;'_'
  7934  00EC9B  7C                 	db	124
  7935  00EC9C  20                 	db	32
  7936  00EC9D  7C                 	db	124
  7937  00EC9E  5F                 	db	95	;'_'
  7938  00EC9F  20                 	db	32
  7939  00ECA0  5F                 	db	95	;'_'
  7940  00ECA1  5F                 	db	95	;'_'
  7941  00ECA2  5F                 	db	95	;'_'
  7942  00ECA3  20                 	db	32
  7943  00ECA4  5F                 	db	95	;'_'
  7944  00ECA5  20                 	db	32
  7945  00ECA6  5F                 	db	95	;'_'
  7946  00ECA7  20                 	db	32
  7947  00ECA8  20                 	db	32
  7948  00ECA9  20                 	db	32
  7949  00ECAA  5F                 	db	95	;'_'
  7950  00ECAB  5F                 	db	95	;'_'
  7951  00ECAC  20                 	db	32
  7952  00ECAD  5F                 	db	95	;'_'
  7953  00ECAE  20                 	db	32
  7954  00ECAF  5F                 	db	95	;'_'
  7955  00ECB0  20                 	db	32
  7956  00ECB1  5F                 	db	95	;'_'
  7957  00ECB2  20                 	db	32
  7958  00ECB3  20                 	db	32
  7959  00ECB4  5F                 	db	95	;'_'
  7960  00ECB5  5F                 	db	95	;'_'
  7961  00ECB6  7C                 	db	124
  7962  00ECB7  20                 	db	32
  7963  00ECB8  7C                 	db	124
  7964  00ECB9  20                 	db	32
  7965  00ECBA  7C                 	db	124
  7966  00ECBB  20                 	db	32
  7967  00ECBC  20                 	db	32
  7968  00ECBD  20                 	db	32
  7969  00ECBE  5C                 	db	92	;'\'
  7970  00ECBF  28                 	db	40
  7971  00ECC0  5F                 	db	95	;'_'
  7972  00ECC1  29                 	db	41
  7973  00ECC2  5F                 	db	95	;'_'
  7974  00ECC3  20                 	db	32
  7975  00ECC4  5F                 	db	95	;'_'
  7976  00ECC5  5F                 	db	95	;'_'
  7977  00ECC6  20                 	db	32
  7978  00ECC7  20                 	db	32
  7979  00ECC8  5F                 	db	95	;'_'
  7980  00ECC9  20                 	db	32
  7981  00ECCA  5F                 	db	95	;'_'
  7982  00ECCB  5F                 	db	95	;'_'
  7983  00ECCC  20                 	db	32
  7984  00ECCD  20                 	db	32
  7985  00ECCE  5F                 	db	95	;'_'
  7986  00ECCF  5F                 	db	95	;'_'
  7987  00ECD0  5F                 	db	95	;'_'
  7988  00ECD1  20                 	db	32
  7989  00ECD2  5F                 	db	95	;'_'
  7990  00ECD3  20                 	db	32
  7991  00ECD4  5F                 	db	95	;'_'
  7992  00ECD5  20                 	db	32
  7993  00ECD6  0A                 	db	10
  7994  00ECD7  0D                 	db	13
  7995  00ECD8  20                 	db	32
  7996  00ECD9  20                 	db	32
  7997  00ECDA  2F                 	db	47
  7998  00ECDB  20                 	db	32
  7999  00ECDC  5F                 	db	95	;'_'
  8000  00ECDD  20                 	db	32
  8001  00ECDE  5C                 	db	92	;'\'
  8002  00ECDF  20                 	db	32
  8003  00ECE0  28                 	db	40
  8004  00ECE1  5F                 	db	95	;'_'
  8005  00ECE2  5F                 	db	95	;'_'
  8006  00ECE3  20                 	db	32
  8007  00ECE4  20                 	db	32
  8008  00ECE5  7C                 	db	124
  8009  00ECE6  20                 	db	32
  8010  00ECE7  20                 	db	32
  8011  00ECE8  5F                 	db	95	;'_'
  8012  00ECE9  2F                 	db	47
  8013  00ECEA  20                 	db	32
  8014  00ECEB  5F                 	db	95	;'_'
  8015  00ECEC  20                 	db	32
  8016  00ECED  5C                 	db	92	;'\'
  8017  00ECEE  20                 	db	32
  8018  00ECEF  56                 	db	86	;'V'
  8019  00ECF0  20                 	db	32
  8020  00ECF1  20                 	db	32
  8021  00ECF2  56                 	db	86	;'V'
  8022  00ECF3  20                 	db	32
  8023  00ECF4  2F                 	db	47
  8024  00ECF5  20                 	db	32
  8025  00ECF6  2D                 	db	45
  8026  00ECF7  5F                 	db	95	;'_'
  8027  00ECF8  29                 	db	41
  8028  00ECF9  20                 	db	32
  8029  00ECFA  27                 	db	39
  8030  00ECFB  5F                 	db	95	;'_'
  8031  00ECFC  7C                 	db	124
  8032  00ECFD  20                 	db	32
  8033  00ECFE  7C                 	db	124
  8034  00ECFF  20                 	db	32
  8035  00ED00  7C                 	db	124
  8036  00ED01  5C                 	db	92	;'\'
  8037  00ED02  2F                 	db	47
  8038  00ED03  7C                 	db	124
  8039  00ED04  20                 	db	32
  8040  00ED05  2F                 	db	47
  8041  00ED06  20                 	db	32
  8042  00ED07  2D                 	db	45
  8043  00ED08  5F                 	db	95	;'_'
  8044  00ED09  29                 	db	41
  8045  00ED0A  20                 	db	32
  8046  00ED0B  20                 	db	32
  8047  00ED0C  5F                 	db	95	;'_'
  8048  00ED0D  2F                 	db	47
  8049  00ED0E  20                 	db	32
  8050  00ED0F  2D                 	db	45
  8051  00ED10  5F                 	db	95	;'_'
  8052  00ED11  29                 	db	41
  8053  00ED12  20                 	db	32
  8054  00ED13  27                 	db	39
  8055  00ED14  5F                 	db	95	;'_'
  8056  00ED15  7C                 	db	124
  8057  00ED16  20                 	db	32
  8058  00ED17  2F                 	db	47
  8059  00ED18  20                 	db	32
  8060  00ED19  5F                 	db	95	;'_'
  8061  00ED1A  60                 	db	96	;'`'
  8062  00ED1B  20                 	db	32
  8063  00ED1C  7C                 	db	124
  8064  00ED1D  20                 	db	32
  8065  00ED1E  27                 	db	39
  8066  00ED1F  20                 	db	32
  8067  00ED20  5C                 	db	92	;'\'
  8068  00ED21  2F                 	db	47
  8069  00ED22  20                 	db	32
  8070  00ED23  5F                 	db	95	;'_'
  8071  00ED24  60                 	db	96	;'`'
  8072  00ED25  20                 	db	32
  8073  00ED26  7C                 	db	124
  8074  00ED27  20                 	db	32
  8075  00ED28  7C                 	db	124
  8076  00ED29  20                 	db	32
  8077  00ED2A  7C                 	db	124
  8078  00ED2B  29                 	db	41
  8079  00ED2C  20                 	db	32
  8080  00ED2D  7C                 	db	124
  8081  00ED2E  20                 	db	32
  8082  00ED2F  7C                 	db	124
  8083  00ED30  20                 	db	32
  8084  00ED31  27                 	db	39
  8085  00ED32  20                 	db	32
  8086  00ED33  20                 	db	32
  8087  00ED34  5C                 	db	92	;'\'
  8088  00ED35  7C                 	db	124
  8089  00ED36  20                 	db	32
  8090  00ED37  27                 	db	39
  8091  00ED38  20                 	db	32
  8092  00ED39  20                 	db	32
  8093  00ED3A  5C                 	db	92	;'\'
  8094  00ED3B  2F                 	db	47
  8095  00ED3C  20                 	db	32
  8096  00ED3D  2D                 	db	45
  8097  00ED3E  5F                 	db	95	;'_'
  8098  00ED3F  29                 	db	41
  8099  00ED40  20                 	db	32
  8100  00ED41  27                 	db	39
  8101  00ED42  5F                 	db	95	;'_'
  8102  00ED43  7C                 	db	124
  8103  00ED44  0A                 	db	10
  8104  00ED45  0D                 	db	13
  8105  00ED46  20                 	db	32
  8106  00ED47  2F                 	db	47
  8107  00ED48  5F                 	db	95	;'_'
  8108  00ED49  2F                 	db	47
  8109  00ED4A  20                 	db	32
  8110  00ED4B  5C                 	db	92	;'\'
  8111  00ED4C  5F                 	db	95	;'_'
  8112  00ED4D  5C                 	db	92	;'\'
  8113  00ED4E  5F                 	db	95	;'_'
  8114  00ED4F  5F                 	db	95	;'_'
  8115  00ED50  5F                 	db	95	;'_'
  8116  00ED51  7C                 	db	124
  8117  00ED52  20                 	db	32
  8118  00ED53  7C                 	db	124
  8119  00ED54  5F                 	db	95	;'_'
  8120  00ED55  7C                 	db	124
  8121  00ED56  20                 	db	32
  8122  00ED57  5C                 	db	92	;'\'
  8123  00ED58  5F                 	db	95	;'_'
  8124  00ED59  5F                 	db	95	;'_'
  8125  00ED5A  5F                 	db	95	;'_'
  8126  00ED5B  2F                 	db	47
  8127  00ED5C  5C                 	db	92	;'\'
  8128  00ED5D  5F                 	db	95	;'_'
  8129  00ED5E  2F                 	db	47
  8130  00ED5F  5C                 	db	92	;'\'
  8131  00ED60  5F                 	db	95	;'_'
  8132  00ED61  2F                 	db	47
  8133  00ED62  5C                 	db	92	;'\'
  8134  00ED63  5F                 	db	95	;'_'
  8135  00ED64  5F                 	db	95	;'_'
  8136  00ED65  5F                 	db	95	;'_'
  8137  00ED66  7C                 	db	124
  8138  00ED67  5F                 	db	95	;'_'
  8139  00ED68  7C                 	db	124
  8140  00ED69  20                 	db	32
  8141  00ED6A  20                 	db	32
  8142  00ED6B  20                 	db	32
  8143  00ED6C  7C                 	db	124
  8144  00ED6D  5F                 	db	95	;'_'
  8145  00ED6E  7C                 	db	124
  8146  00ED6F  20                 	db	32
  8147  00ED70  20                 	db	32
  8148  00ED71  7C                 	db	124
  8149  00ED72  5F                 	db	95	;'_'
  8150  00ED73  5C                 	db	92	;'\'
  8151  00ED74  5F                 	db	95	;'_'
  8152  00ED75  5F                 	db	95	;'_'
  8153  00ED76  5F                 	db	95	;'_'
  8154  00ED77  7C                 	db	124
  8155  00ED78  5C                 	db	92	;'\'
  8156  00ED79  5F                 	db	95	;'_'
  8157  00ED7A  5F                 	db	95	;'_'
  8158  00ED7B  5C                 	db	92	;'\'
  8159  00ED7C  5F                 	db	95	;'_'
  8160  00ED7D  5F                 	db	95	;'_'
  8161  00ED7E  5F                 	db	95	;'_'
  8162  00ED7F  7C                 	db	124
  8163  00ED80  5F                 	db	95	;'_'
  8164  00ED81  7C                 	db	124
  8165  00ED82  20                 	db	32
  8166  00ED83  20                 	db	32
  8167  00ED84  20                 	db	32
  8168  00ED85  5C                 	db	92	;'\'
  8169  00ED86  5F                 	db	95	;'_'
  8170  00ED87  5F                 	db	95	;'_'
  8171  00ED88  2C                 	db	44
  8172  00ED89  5F                 	db	95	;'_'
  8173  00ED8A  7C                 	db	124
  8174  00ED8B  5F                 	db	95	;'_'
  8175  00ED8C  7C                 	db	124
  8176  00ED8D  7C                 	db	124
  8177  00ED8E  5F                 	db	95	;'_'
  8178  00ED8F  5C                 	db	92	;'\'
  8179  00ED90  5F                 	db	95	;'_'
  8180  00ED91  5F                 	db	95	;'_'
  8181  00ED92  2C                 	db	44
  8182  00ED93  5F                 	db	95	;'_'
  8183  00ED94  7C                 	db	124
  8184  00ED95  20                 	db	32
  8185  00ED96  7C                 	db	124
  8186  00ED97  5F                 	db	95	;'_'
  8187  00ED98  5F                 	db	95	;'_'
  8188  00ED99  5F                 	db	95	;'_'
  8189  00ED9A  2F                 	db	47
  8190  00ED9B  7C                 	db	124
  8191  00ED9C  5F                 	db	95	;'_'
  8192  00ED9D  7C                 	db	124
  8193  00ED9E  5F                 	db	95	;'_'
  8194  00ED9F  7C                 	db	124
  8195  00EDA0  5F                 	db	95	;'_'
  8196  00EDA1  7C                 	db	124
  8197  00EDA2  5F                 	db	95	;'_'
  8198  00EDA3  7C                 	db	124
  8199  00EDA4  5F                 	db	95	;'_'
  8200  00EDA5  7C                 	db	124
  8201  00EDA6  5F                 	db	95	;'_'
  8202  00EDA7  7C                 	db	124
  8203  00EDA8  5F                 	db	95	;'_'
  8204  00EDA9  5C                 	db	92	;'\'
  8205  00EDAA  5F                 	db	95	;'_'
  8206  00EDAB  5F                 	db	95	;'_'
  8207  00EDAC  5F                 	db	95	;'_'
  8208  00EDAD  7C                 	db	124
  8209  00EDAE  5F                 	db	95	;'_'
  8210  00EDAF  7C                 	db	124
  8211  00EDB0  20                 	db	32
  8212  00EDB1  20                 	db	32
  8213  00EDB2  0A                 	db	10
  8214  00EDB3  0D                 	db	13
  8215  00EDB4  00                 	db	0
  8216  00EDB5  20                 	db	32
  8217  00EDB6  20                 	db	32
  8218  00EDB7  20                 	db	32
  8219  00EDB8  20                 	db	32
  8220  00EDB9  42                 	db	66	;'B'
  8221  00EDBA  6F                 	db	111	;'o'
  8222  00EDBB  6F                 	db	111	;'o'
  8223  00EDBC  74                 	db	116	;'t'
  8224  00EDBD  20                 	db	32
  8225  00EDBE  63                 	db	99	;'c'
  8226  00EDBF  6F                 	db	111	;'o'
  8227  00EDC0  6D                 	db	109	;'m'
  8228  00EDC1  70                 	db	112	;'p'
  8229  00EDC2  6C                 	db	108	;'l'
  8230  00EDC3  65                 	db	101	;'e'
  8231  00EDC4  74                 	db	116	;'t'
  8232  00EDC5  65                 	db	101	;'e'
  8233  00EDC6  0A                 	db	10
  8234  00EDC7  0D                 	db	13
  8235  00EDC8  20                 	db	32
  8236  00EDC9  20                 	db	32
  8237  00EDCA  20                 	db	32
  8238  00EDCB  20                 	db	32
  8239  00EDCC  50                 	db	80	;'P'
  8240  00EDCD  49                 	db	73	;'I'
  8241  00EDCE  43                 	db	67	;'C'
  8242  00EDCF  31                 	db	49	;'1'
  8243  00EDD0  38                 	db	56	;'8'
  8244  00EDD1  46                 	db	70	;'F'
  8245  00EDD2  36                 	db	54	;'6'
  8246  00EDD3  37                 	db	55	;'7'
  8247  00EDD4  4B                 	db	75	;'K'
  8248  00EDD5  34                 	db	52	;'4'
  8249  00EDD6  30                 	db	48	;'0'
  8250  00EDD7  20                 	db	32
  8251  00EDD8  6D                 	db	109	;'m'
  8252  00EDD9  54                 	db	84	;'T'
  8253  00EDDA  6F                 	db	111	;'o'
  8254  00EDDB  75                 	db	117	;'u'
  8255  00EDDC  63                 	db	99	;'c'
  8256  00EDDD  68                 	db	104	;'h'
  8257  00EDDE  20                 	db	32
  8258  00EDDF  54                 	db	84	;'T'
  8259  00EDE0  65                 	db	101	;'e'
  8260  00EDE1  73                 	db	115	;'s'
  8261  00EDE2  74                 	db	116	;'t'
  8262  00EDE3  20                 	db	32
  8263  00EDE4  42                 	db	66	;'B'
  8264  00EDE5  6F                 	db	111	;'o'
  8265  00EDE6  61                 	db	97	;'a'
  8266  00EDE7  72                 	db	114	;'r'
  8267  00EDE8  64                 	db	100	;'d'
  8268  00EDE9  0A                 	db	10
  8269  00EDEA  0D                 	db	13
  8270  00EDEB  20                 	db	32
  8271  00EDEC  20                 	db	32
  8272  00EDED  20                 	db	32
  8273  00EDEE  20                 	db	32
  8274  00EDEF  45                 	db	69	;'E'
  8275  00EDF0  76                 	db	118	;'v'
  8276  00EDF1  61                 	db	97	;'a'
  8277  00EDF2  6C                 	db	108	;'l'
  8278  00EDF3  75                 	db	117	;'u'
  8279  00EDF4  61                 	db	97	;'a'
  8280  00EDF5  74                 	db	116	;'t'
  8281  00EDF6  65                 	db	101	;'e'
  8282  00EDF7  73                 	db	115	;'s'
  8283  00EDF8  20                 	db	32
  8284  00EDF9  74                 	db	116	;'t'
  8285  00EDFA  68                 	db	104	;'h'
  8286  00EDFB  65                 	db	101	;'e'
  8287  00EDFC  20                 	db	32
  8288  00EDFD  6D                 	db	109	;'m'
  8289  00EDFE  54                 	db	84	;'T'
  8290  00EDFF  6F                 	db	111	;'o'
  8291  00EE00  75                 	db	117	;'u'
  8292  00EE01  63                 	db	99	;'c'
  8293  00EE02  68                 	db	104	;'h'
  8294  00EE03  20                 	db	32
  8295  00EE04  63                 	db	99	;'c'
  8296  00EE05  61                 	db	97	;'a'
  8297  00EE06  70                 	db	112	;'p'
  8298  00EE07  61                 	db	97	;'a'
  8299  00EE08  63                 	db	99	;'c'
  8300  00EE09  69                 	db	105	;'i'
  8301  00EE0A  74                 	db	116	;'t'
  8302  00EE0B  69                 	db	105	;'i'
  8303  00EE0C  76                 	db	118	;'v'
  8304  00EE0D  65                 	db	101	;'e'
  8305  00EE0E  20                 	db	32
  8306  00EE0F  74                 	db	116	;'t'
  8307  00EE10  6F                 	db	111	;'o'
  8308  00EE11  75                 	db	117	;'u'
  8309  00EE12  63                 	db	99	;'c'
  8310  00EE13  68                 	db	104	;'h'
  8311  00EE14  20                 	db	32
  8312  00EE15  6C                 	db	108	;'l'
  8313  00EE16  69                 	db	105	;'i'
  8314  00EE17  62                 	db	98	;'b'
  8315  00EE18  72                 	db	114	;'r'
  8316  00EE19  61                 	db	97	;'a'
  8317  00EE1A  72                 	db	114	;'r'
  8318  00EE1B  79                 	db	121	;'y'
  8319  00EE1C  20                 	db	32
  8320  00EE1D  64                 	db	100	;'d'
  8321  00EE1E  69                 	db	105	;'i'
  8322  00EE1F  73                 	db	115	;'s'
  8323  00EE20  74                 	db	116	;'t'
  8324  00EE21  72                 	db	114	;'r'
  8325  00EE22  69                 	db	105	;'i'
  8326  00EE23  62                 	db	98	;'b'
  8327  00EE24  75                 	db	117	;'u'
  8328  00EE25  74                 	db	116	;'t'
  8329  00EE26  65                 	db	101	;'e'
  8330  00EE27  64                 	db	100	;'d'
  8331  00EE28  20                 	db	32
  8332  00EE29  62                 	db	98	;'b'
  8333  00EE2A  79                 	db	121	;'y'
  8334  00EE2B  20                 	db	32
  8335  00EE2C  4D                 	db	77	;'M'
  8336  00EE2D  69                 	db	105	;'i'
  8337  00EE2E  63                 	db	99	;'c'
  8338  00EE2F  72                 	db	114	;'r'
  8339  00EE30  6F                 	db	111	;'o'
  8340  00EE31  63                 	db	99	;'c'
  8341  00EE32  68                 	db	104	;'h'
  8342  00EE33  69                 	db	105	;'i'
  8343  00EE34  70                 	db	112	;'p'
  8344  00EE35  0A                 	db	10
  8345  00EE36  0D                 	db	13
  8346  00EE37  20                 	db	32
  8347  00EE38  20                 	db	32
  8348  00EE39  20                 	db	32
  8349  00EE3A  20                 	db	32
  8350  00EE3B  53                 	db	83	;'S'
  8351  00EE3C  65                 	db	101	;'e'
  8352  00EE3D  74                 	db	116	;'t'
  8353  00EE3E  73                 	db	115	;'s'
  8354  00EE3F  20                 	db	32
  8355  00EE40  74                 	db	116	;'t'
  8356  00EE41  68                 	db	104	;'h'
  8357  00EE42  65                 	db	101	;'e'
  8358  00EE43  20                 	db	32
  8359  00EE44  73                 	db	115	;'s'
  8360  00EE45  74                 	db	116	;'t'
  8361  00EE46  61                 	db	97	;'a'
  8362  00EE47  74                 	db	116	;'t'
  8363  00EE48  65                 	db	101	;'e'
  8364  00EE49  20                 	db	32
  8365  00EE4A  6F                 	db	111	;'o'
  8366  00EE4B  66                 	db	102	;'f'
  8367  00EE4C  20                 	db	32
  8368  00EE4D  66                 	db	102	;'f'
  8369  00EE4E  69                 	db	105	;'i'
  8370  00EE4F  76                 	db	118	;'v'
  8371  00EE50  65                 	db	101	;'e'
  8372  00EE51  20                 	db	32
  8373  00EE52  4C                 	db	76	;'L'
  8374  00EE53  45                 	db	69	;'E'
  8375  00EE54  44                 	db	68	;'D'
  8376  00EE55  73                 	db	115	;'s'
  8377  00EE56  20                 	db	32
  8378  00EE57  62                 	db	98	;'b'
  8379  00EE58  61                 	db	97	;'a'
  8380  00EE59  73                 	db	115	;'s'
  8381  00EE5A  65                 	db	101	;'e'
  8382  00EE5B  64                 	db	100	;'d'
  8383  00EE5C  20                 	db	32
  8384  00EE5D  6F                 	db	111	;'o'
  8385  00EE5E  6E                 	db	110	;'n'
  8386  00EE5F  20                 	db	32
  8387  00EE60  6D                 	db	109	;'m'
  8388  00EE61  54                 	db	84	;'T'
  8389  00EE62  6F                 	db	111	;'o'
  8390  00EE63  75                 	db	117	;'u'
  8391  00EE64  63                 	db	99	;'c'
  8392  00EE65  68                 	db	104	;'h'
  8393  00EE66  20                 	db	32
  8394  00EE67  63                 	db	99	;'c'
  8395  00EE68  61                 	db	97	;'a'
  8396  00EE69  70                 	db	112	;'p'
  8397  00EE6A  61                 	db	97	;'a'
  8398  00EE6B  63                 	db	99	;'c'
  8399  00EE6C  69                 	db	105	;'i'
  8400  00EE6D  74                 	db	116	;'t'
  8401  00EE6E  69                 	db	105	;'i'
  8402  00EE6F  76                 	db	118	;'v'
  8403  00EE70  65                 	db	101	;'e'
  8404  00EE71  20                 	db	32
  8405  00EE72  70                 	db	112	;'p'
  8406  00EE73  75                 	db	117	;'u'
  8407  00EE74  73                 	db	115	;'s'
  8408  00EE75  68                 	db	104	;'h'
  8409  00EE76  62                 	db	98	;'b'
  8410  00EE77  75                 	db	117	;'u'
  8411  00EE78  74                 	db	116	;'t'
  8412  00EE79  74                 	db	116	;'t'
  8413  00EE7A  6F                 	db	111	;'o'
  8414  00EE7B  6E                 	db	110	;'n'
  8415  00EE7C  73                 	db	115	;'s'
  8416  00EE7D  0A                 	db	10
  8417  00EE7E  0D                 	db	13
  8418  00EE7F  20                 	db	32
  8419  00EE80  20                 	db	32
  8420  00EE81  20                 	db	32
  8421  00EE82  20                 	db	32
  8422  00EE83  42                 	db	66	;'B'
  8423  00EE84  61                 	db	97	;'a'
  8424  00EE85  75                 	db	117	;'u'
  8425  00EE86  64                 	db	100	;'d'
  8426  00EE87  20                 	db	32
  8427  00EE88  72                 	db	114	;'r'
  8428  00EE89  61                 	db	97	;'a'
  8429  00EE8A  74                 	db	116	;'t'
  8430  00EE8B  65                 	db	101	;'e'
  8431  00EE8C  3A                 	db	58	;':'
  8432  00EE8D  20                 	db	32
  8433  00EE8E  31                 	db	49	;'1'
  8434  00EE8F  31                 	db	49	;'1'
  8435  00EE90  35                 	db	53	;'5'
  8436  00EE91  32                 	db	50	;'2'
  8437  00EE92  30                 	db	48	;'0'
  8438  00EE93  30                 	db	48	;'0'
  8439  00EE94  20                 	db	32
  8440  00EE95  62                 	db	98	;'b'
  8441  00EE96  70                 	db	112	;'p'
  8442  00EE97  73                 	db	115	;'s'
  8443  00EE98  0A                 	db	10
  8444  00EE99  0D                 	db	13
  8445  00EE9A  20                 	db	32
  8446  00EE9B  20                 	db	32
  8447  00EE9C  20                 	db	32
  8448  00EE9D  20                 	db	32
  8449  00EE9E  4E                 	db	78	;'N'
  8450  00EE9F  6F                 	db	111	;'o'
  8451  00EEA0  20                 	db	32
  8452  00EEA1  70                 	db	112	;'p'
  8453  00EEA2  61                 	db	97	;'a'
  8454  00EEA3  72                 	db	114	;'r'
  8455  00EEA4  69                 	db	105	;'i'
  8456  00EEA5  74                 	db	116	;'t'
  8457  00EEA6  79                 	db	121	;'y'
  8458  00EEA7  2C                 	db	44
  8459  00EEA8  20                 	db	32
  8460  00EEA9  38                 	db	56	;'8'
  8461  00EEAA  20                 	db	32
  8462  00EEAB  62                 	db	98	;'b'
  8463  00EEAC  69                 	db	105	;'i'
  8464  00EEAD  74                 	db	116	;'t'
  8465  00EEAE  73                 	db	115	;'s'
  8466  00EEAF  2C                 	db	44
  8467  00EEB0  20                 	db	32
  8468  00EEB1  6E                 	db	110	;'n'
  8469  00EEB2  6F                 	db	111	;'o'
  8470  00EEB3  20                 	db	32
  8471  00EEB4  66                 	db	102	;'f'
  8472  00EEB5  6C                 	db	108	;'l'
  8473  00EEB6  6F                 	db	111	;'o'
  8474  00EEB7  77                 	db	119	;'w'
  8475  00EEB8  20                 	db	32
  8476  00EEB9  63                 	db	99	;'c'
  8477  00EEBA  6F                 	db	111	;'o'
  8478  00EEBB  6E                 	db	110	;'n'
  8479  00EEBC  74                 	db	116	;'t'
  8480  00EEBD  72                 	db	114	;'r'
  8481  00EEBE  6F                 	db	111	;'o'
  8482  00EEBF  6C                 	db	108	;'l'
  8483  00EEC0  2C                 	db	44
  8484  00EEC1  20                 	db	32
  8485  00EEC2  31                 	db	49	;'1'
  8486  00EEC3  20                 	db	32
  8487  00EEC4  73                 	db	115	;'s'
  8488  00EEC5  74                 	db	116	;'t'
  8489  00EEC6  6F                 	db	111	;'o'
  8490  00EEC7  70                 	db	112	;'p'
  8491  00EEC8  20                 	db	32
  8492  00EEC9  62                 	db	98	;'b'
  8493  00EECA  69                 	db	105	;'i'
  8494  00EECB  74                 	db	116	;'t'
  8495  00EECC  0A                 	db	10
  8496  00EECD  0D                 	db	13
  8497  00EECE  20                 	db	32
  8498  00EECF  20                 	db	32
  8499  00EED0  20                 	db	32
  8500  00EED1  20                 	db	32
  8501  00EED2  43                 	db	67	;'C'
  8502  00EED3  6F                 	db	111	;'o'
  8503  00EED4  6D                 	db	109	;'m'
  8504  00EED5  6D                 	db	109	;'m'
  8505  00EED6  61                 	db	97	;'a'
  8506  00EED7  6E                 	db	110	;'n'
  8507  00EED8  64                 	db	100	;'d'
  8508  00EED9  73                 	db	115	;'s'
  8509  00EEDA  20                 	db	32
  8510  00EEDB  61                 	db	97	;'a'
  8511  00EEDC  72                 	db	114	;'r'
  8512  00EEDD  65                 	db	101	;'e'
  8513  00EEDE  20                 	db	32
  8514  00EEDF  63                 	db	99	;'c'
  8515  00EEE0  61                 	db	97	;'a'
  8516  00EEE1  73                 	db	115	;'s'
  8517  00EEE2  65                 	db	101	;'e'
  8518  00EEE3  20                 	db	32
  8519  00EEE4  73                 	db	115	;'s'
  8520  00EEE5  65                 	db	101	;'e'
  8521  00EEE6  6E                 	db	110	;'n'
  8522  00EEE7  73                 	db	115	;'s'
  8523  00EEE8  69                 	db	105	;'i'
  8524  00EEE9  74                 	db	116	;'t'
  8525  00EEEA  69                 	db	105	;'i'
  8526  00EEEB  76                 	db	118	;'v'
  8527  00EEEC  65                 	db	101	;'e'
  8528  00EEED  0A                 	db	10
  8529  00EEEE  0D                 	db	13
  8530  00EEEF  20                 	db	32
  8531  00EEF0  20                 	db	32
  8532  00EEF1  20                 	db	32
  8533  00EEF2  20                 	db	32
  8534  00EEF3  45                 	db	69	;'E'
  8535  00EEF4  6E                 	db	110	;'n'
  8536  00EEF5  74                 	db	116	;'t'
  8537  00EEF6  65                 	db	101	;'e'
  8538  00EEF7  72                 	db	114	;'r'
  8539  00EEF8  20                 	db	32
  8540  00EEF9  61                 	db	97	;'a'
  8541  00EEFA  20                 	db	32
  8542  00EEFB  63                 	db	99	;'c'
  8543  00EEFC  6F                 	db	111	;'o'
  8544  00EEFD  6D                 	db	109	;'m'
  8545  00EEFE  6D                 	db	109	;'m'
  8546  00EEFF  61                 	db	97	;'a'
  8547  00EF00  6E                 	db	110	;'n'
  8548  00EF01  64                 	db	100	;'d'
  8549  00EF02  2C                 	db	44
  8550  00EF03  20                 	db	32
  8551  00EF04  6F                 	db	111	;'o'
  8552  00EF05  72                 	db	114	;'r'
  8553  00EF06  20                 	db	32
  8554  00EF07  65                 	db	101	;'e'
  8555  00EF08  6E                 	db	110	;'n'
  8556  00EF09  74                 	db	116	;'t'
  8557  00EF0A  65                 	db	101	;'e'
  8558  00EF0B  72                 	db	114	;'r'
  8559  00EF0C  20                 	db	32
  8560  00EF0D  48                 	db	72	;'H'
  8561  00EF0E  65                 	db	101	;'e'
  8562  00EF0F  6C                 	db	108	;'l'
  8563  00EF10  70                 	db	112	;'p'
  8564  00EF11  20                 	db	32
  8565  00EF12  66                 	db	102	;'f'
  8566  00EF13  6F                 	db	111	;'o'
  8567  00EF14  72                 	db	114	;'r'
  8568  00EF15  20                 	db	32
  8569  00EF16  6C                 	db	108	;'l'
  8570  00EF17  69                 	db	105	;'i'
  8571  00EF18  73                 	db	115	;'s'
  8572  00EF19  74                 	db	116	;'t'
  8573  00EF1A  20                 	db	32
  8574  00EF1B  6F                 	db	111	;'o'
  8575  00EF1C  66                 	db	102	;'f'
  8576  00EF1D  20                 	db	32
  8577  00EF1E  63                 	db	99	;'c'
  8578  00EF1F  6F                 	db	111	;'o'
  8579  00EF20  6D                 	db	109	;'m'
  8580  00EF21  6D                 	db	109	;'m'
  8581  00EF22  61                 	db	97	;'a'
  8582  00EF23  6E                 	db	110	;'n'
  8583  00EF24  64                 	db	100	;'d'
  8584  00EF25  73                 	db	115	;'s'
  8585  00EF26  0A                 	db	10
  8586  00EF27  0D                 	db	13
  8587  00EF28  00                 	db	0
  8588  00EF29                     STR_109:
  8589  00EF29  57                 	db	87	;'W'
  8590  00EF2A  41                 	db	65	;'A'
  8591  00EF2B  52                 	db	82	;'R'
  8592  00EF2C  4E                 	db	78	;'N'
  8593  00EF2D  49                 	db	73	;'I'
  8594  00EF2E  4E                 	db	78	;'N'
  8595  00EF2F  47                 	db	71	;'G'
  8596  00EF30  3A                 	db	58	;':'
  8597  00EF31  20                 	db	32
  8598  00EF32  55                 	db	85	;'U'
  8599  00EF33  73                 	db	115	;'s'
  8600  00EF34  69                 	db	105	;'i'
  8601  00EF35  6E                 	db	110	;'n'
  8602  00EF36  67                 	db	103	;'g'
  8603  00EF37  20                 	db	32
  8604  00EF38  74                 	db	116	;'t'
  8605  00EF39  68                 	db	104	;'h'
  8606  00EF3A  65                 	db	101	;'e'
  8607  00EF3B  20                 	db	32
  8608  00EF3C  64                 	db	100	;'d'
  8609  00EF3D  69                 	db	105	;'i'
  8610  00EF3E  6D                 	db	109	;'m'
  8611  00EF3F  6D                 	db	109	;'m'
  8612  00EF40  69                 	db	105	;'i'
  8613  00EF41  6E                 	db	110	;'n'
  8614  00EF42  67                 	db	103	;'g'
  8615  00EF43  20                 	db	32
  8616  00EF44  66                 	db	102	;'f'
  8617  00EF45  65                 	db	101	;'e'
  8618  00EF46  61                 	db	97	;'a'
  8619  00EF47  74                 	db	116	;'t'
  8620  00EF48  75                 	db	117	;'u'
  8621  00EF49  72                 	db	114	;'r'
  8622  00EF4A  65                 	db	101	;'e'
  8623  00EF4B  20                 	db	32
  8624  00EF4C  77                 	db	119	;'w'
  8625  00EF4D  69                 	db	105	;'i'
  8626  00EF4E  74                 	db	116	;'t'
  8627  00EF4F  68                 	db	104	;'h'
  8628  00EF50  20                 	db	32
  8629  00EF51  6C                 	db	108	;'l'
  8630  00EF52  6F                 	db	111	;'o'
  8631  00EF53  61                 	db	97	;'a'
  8632  00EF54  64                 	db	100	;'d'
  8633  00EF55  20                 	db	32
  8634  00EF56  64                 	db	100	;'d'
  8635  00EF57  65                 	db	101	;'e'
  8636  00EF58  76                 	db	118	;'v'
  8637  00EF59  69                 	db	105	;'i'
  8638  00EF5A  63                 	db	99	;'c'
  8639  00EF5B  65                 	db	101	;'e'
  8640  00EF5C  73                 	db	115	;'s'
  8641  00EF5D  20                 	db	32
  8642  00EF5E  6F                 	db	111	;'o'
  8643  00EF5F  74                 	db	116	;'t'
  8644  00EF60  68                 	db	104	;'h'
  8645  00EF61  65                 	db	101	;'e'
  8646  00EF62  72                 	db	114	;'r'
  8647  00EF63  20                 	db	32
  8648  00EF64  74                 	db	116	;'t'
  8649  00EF65  68                 	db	104	;'h'
  8650  00EF66  61                 	db	97	;'a'
  8651  00EF67  6E                 	db	110	;'n'
  8652  00EF68  20                 	db	32
  8653  00EF69  61                 	db	97	;'a'
  8654  00EF6A  20                 	db	32
  8655  00EF6B  6C                 	db	108	;'l'
  8656  00EF6C  69                 	db	105	;'i'
  8657  00EF6D  67                 	db	103	;'g'
  8658  00EF6E  68                 	db	104	;'h'
  8659  00EF6F  74                 	db	116	;'t'
  8660  00EF70  20                 	db	32
  8661  00EF71  62                 	db	98	;'b'
  8662  00EF72  75                 	db	117	;'u'
  8663  00EF73  6C                 	db	108	;'l'
  8664  00EF74  62                 	db	98	;'b'
  8665  00EF75  20                 	db	32
  8666  00EF76  63                 	db	99	;'c'
  8667  00EF77  61                 	db	97	;'a'
  8668  00EF78  6E                 	db	110	;'n'
  8669  00EF79  20                 	db	32
  8670  00EF7A  72                 	db	114	;'r'
  8671  00EF7B  65                 	db	101	;'e'
  8672  00EF7C  73                 	db	115	;'s'
  8673  00EF7D  75                 	db	117	;'u'
  8674  00EF7E  6C                 	db	108	;'l'
  8675  00EF7F  74                 	db	116	;'t'
  8676  00EF80  20                 	db	32
  8677  00EF81  69                 	db	105	;'i'
  8678  00EF82  6E                 	db	110	;'n'
  8679  00EF83  20                 	db	32
  8680  00EF84  64                 	db	100	;'d'
  8681  00EF85  65                 	db	101	;'e'
  8682  00EF86  76                 	db	118	;'v'
  8683  00EF87  69                 	db	105	;'i'
  8684  00EF88  63                 	db	99	;'c'
  8685  00EF89  65                 	db	101	;'e'
  8686  00EF8A  20                 	db	32
  8687  00EF8B  64                 	db	100	;'d'
  8688  00EF8C  61                 	db	97	;'a'
  8689  00EF8D  6D                 	db	109	;'m'
  8690  00EF8E  61                 	db	97	;'a'
  8691  00EF8F  67                 	db	103	;'g'
  8692  00EF90  65                 	db	101	;'e'
  8693  00EF91  00                 	db	0
  8694  00EF92                     STR_110:
  8695  00EF92  4F                 	db	79	;'O'
  8696  00EF93  6E                 	db	110	;'n'
  8697  00EF94  6C                 	db	108	;'l'
  8698  00EF95  79                 	db	121	;'y'
  8699  00EF96  20                 	db	32
  8700  00EF97  65                 	db	101	;'e'
  8701  00EF98  6E                 	db	110	;'n'
  8702  00EF99  61                 	db	97	;'a'
  8703  00EF9A  62                 	db	98	;'b'
  8704  00EF9B  6C                 	db	108	;'l'
  8705  00EF9C  65                 	db	101	;'e'
  8706  00EF9D  20                 	db	32
  8707  00EF9E  64                 	db	100	;'d'
  8708  00EF9F  69                 	db	105	;'i'
  8709  00EFA0  6D                 	db	109	;'m'
  8710  00EFA1  6D                 	db	109	;'m'
  8711  00EFA2  69                 	db	105	;'i'
  8712  00EFA3  6E                 	db	110	;'n'
  8713  00EFA4  67                 	db	103	;'g'
  8714  00EFA5  20                 	db	32
  8715  00EFA6  69                 	db	105	;'i'
  8716  00EFA7  66                 	db	102	;'f'
  8717  00EFA8  20                 	db	32
  8718  00EFA9  79                 	db	121	;'y'
  8719  00EFAA  6F                 	db	111	;'o'
  8720  00EFAB  75                 	db	117	;'u'
  8721  00EFAC  20                 	db	32
  8722  00EFAD  61                 	db	97	;'a'
  8723  00EFAE  72                 	db	114	;'r'
  8724  00EFAF  65                 	db	101	;'e'
  8725  00EFB0  20                 	db	32
  8726  00EFB1  63                 	db	99	;'c'
  8727  00EFB2  6F                 	db	111	;'o'
  8728  00EFB3  6D                 	db	109	;'m'
  8729  00EFB4  70                 	db	112	;'p'
  8730  00EFB5  6C                 	db	108	;'l'
  8731  00EFB6  65                 	db	101	;'e'
  8732  00EFB7  74                 	db	116	;'t'
  8733  00EFB8  65                 	db	101	;'e'
  8734  00EFB9  6C                 	db	108	;'l'
  8735  00EFBA  79                 	db	121	;'y'
  8736  00EFBB  20                 	db	32
  8737  00EFBC  73                 	db	115	;'s'
  8738  00EFBD  75                 	db	117	;'u'
  8739  00EFBE  72                 	db	114	;'r'
  8740  00EFBF  65                 	db	101	;'e'
  8741  00EFC0  20                 	db	32
  8742  00EFC1  74                 	db	116	;'t'
  8743  00EFC2  68                 	db	104	;'h'
  8744  00EFC3  65                 	db	101	;'e'
  8745  00EFC4  20                 	db	32
  8746  00EFC5  6C                 	db	108	;'l'
  8747  00EFC6  6F                 	db	111	;'o'
  8748  00EFC7  61                 	db	97	;'a'
  8749  00EFC8  64                 	db	100	;'d'
  8750  00EFC9  20                 	db	32
  8751  00EFCA  69                 	db	105	;'i'
  8752  00EFCB  73                 	db	115	;'s'
  8753  00EFCC  20                 	db	32
  8754  00EFCD  63                 	db	99	;'c'
  8755  00EFCE  6F                 	db	111	;'o'
  8756  00EFCF  6D                 	db	109	;'m'
  8757  00EFD0  70                 	db	112	;'p'
  8758  00EFD1  61                 	db	97	;'a'
  8759  00EFD2  74                 	db	116	;'t'
  8760  00EFD3  69                 	db	105	;'i'
  8761  00EFD4  62                 	db	98	;'b'
  8762  00EFD5  6C                 	db	108	;'l'
  8763  00EFD6  65                 	db	101	;'e'
  8764  00EFD7  20                 	db	32
  8765  00EFD8  77                 	db	119	;'w'
  8766  00EFD9  69                 	db	105	;'i'
  8767  00EFDA  74                 	db	116	;'t'
  8768  00EFDB  68                 	db	104	;'h'
  8769  00EFDC  20                 	db	32
  8770  00EFDD  61                 	db	97	;'a'
  8771  00EFDE  20                 	db	32
  8772  00EFDF  73                 	db	115	;'s'
  8773  00EFE0  6F                 	db	111	;'o'
  8774  00EFE1  6C                 	db	108	;'l'
  8775  00EFE2  69                 	db	105	;'i'
  8776  00EFE3  64                 	db	100	;'d'
  8777  00EFE4  20                 	db	32
  8778  00EFE5  73                 	db	115	;'s'
  8779  00EFE6  74                 	db	116	;'t'
  8780  00EFE7  61                 	db	97	;'a'
  8781  00EFE8  74                 	db	116	;'t'
  8782  00EFE9  65                 	db	101	;'e'
  8783  00EFEA  20                 	db	32
  8784  00EFEB  64                 	db	100	;'d'
  8785  00EFEC  69                 	db	105	;'i'
  8786  00EFED  6D                 	db	109	;'m'
  8787  00EFEE  6D                 	db	109	;'m'
  8788  00EFEF  69                 	db	105	;'i'
  8789  00EFF0  6E                 	db	110	;'n'
  8790  00EFF1  67                 	db	103	;'g'
  8791  00EFF2  20                 	db	32
  8792  00EFF3  63                 	db	99	;'c'
  8793  00EFF4  69                 	db	105	;'i'
  8794  00EFF5  72                 	db	114	;'r'
  8795  00EFF6  63                 	db	99	;'c'
  8796  00EFF7  75                 	db	117	;'u'
  8797  00EFF8  69                 	db	105	;'i'
  8798  00EFF9  74                 	db	116	;'t'
  8799  00EFFA  00                 	db	0
  8800  00EFFB                     STR_130:
  8801  00EFFB  49                 	db	73	;'I'
  8802  00EFFC  66                 	db	102	;'f'
  8803  00EFFD  20                 	db	32
  8804  00EFFE  79                 	db	121	;'y'
  8805  00EFFF  6F                 	db	111	;'o'
  8806  00F000  75                 	db	117	;'u'
  8807  00F001  27                 	db	39
  8808  00F002  64                 	db	100	;'d'
  8809  00F003  20                 	db	32
  8810  00F004  6C                 	db	108	;'l'
  8811  00F005  69                 	db	105	;'i'
  8812  00F006  6B                 	db	107	;'k'
  8813  00F007  65                 	db	101	;'e'
  8814  00F008  20                 	db	32
  8815  00F009  74                 	db	116	;'t'
  8816  00F00A  6F                 	db	111	;'o'
  8817  00F00B  20                 	db	32
  8818  00F00C  63                 	db	99	;'c'
  8819  00F00D  6F                 	db	111	;'o'
  8820  00F00E  6D                 	db	109	;'m'
  8821  00F00F  70                 	db	112	;'p'
  8822  00F010  6C                 	db	108	;'l'
  8823  00F011  65                 	db	101	;'e'
  8824  00F012  74                 	db	116	;'t'
  8825  00F013  65                 	db	101	;'e'
  8826  00F014  6C                 	db	108	;'l'
  8827  00F015  79                 	db	121	;'y'
  8828  00F016  20                 	db	32
  8829  00F017  65                 	db	101	;'e'
  8830  00F018  6E                 	db	110	;'n'
  8831  00F019  61                 	db	97	;'a'
  8832  00F01A  62                 	db	98	;'b'
  8833  00F01B  6C                 	db	108	;'l'
  8834  00F01C  65                 	db	101	;'e'
  8835  00F01D  20                 	db	32
  8836  00F01E  6F                 	db	111	;'o'
  8837  00F01F  72                 	db	114	;'r'
  8838  00F020  20                 	db	32
  8839  00F021  64                 	db	100	;'d'
  8840  00F022  69                 	db	105	;'i'
  8841  00F023  73                 	db	115	;'s'
  8842  00F024  61                 	db	97	;'a'
  8843  00F025  62                 	db	98	;'b'
  8844  00F026  6C                 	db	108	;'l'
  8845  00F027  65                 	db	101	;'e'
  8846  00F028  20                 	db	32
  8847  00F029  74                 	db	116	;'t'
  8848  00F02A  68                 	db	104	;'h'
  8849  00F02B  65                 	db	101	;'e'
  8850  00F02C  20                 	db	32
  8851  00F02D  6C                 	db	108	;'l'
  8852  00F02E  6F                 	db	111	;'o'
  8853  00F02F  61                 	db	97	;'a'
  8854  00F030  64                 	db	100	;'d'
  8855  00F031  2C                 	db	44
  8856  00F032  20                 	db	32
  8857  00F033  64                 	db	100	;'d'
  8858  00F034  69                 	db	105	;'i'
  8859  00F035  73                 	db	115	;'s'
  8860  00F036  61                 	db	97	;'a'
  8861  00F037  62                 	db	98	;'b'
  8862  00F038  6C                 	db	108	;'l'
  8863  00F039  65                 	db	101	;'e'
  8864  00F03A  20                 	db	32
  8865  00F03B  64                 	db	100	;'d'
  8866  00F03C  69                 	db	105	;'i'
  8867  00F03D  6D                 	db	109	;'m'
  8868  00F03E  6D                 	db	109	;'m'
  8869  00F03F  69                 	db	105	;'i'
  8870  00F040  6E                 	db	110	;'n'
  8871  00F041  67                 	db	103	;'g'
  8872  00F042  20                 	db	32
  8873  00F043  61                 	db	97	;'a'
  8874  00F044  6E                 	db	110	;'n'
  8875  00F045  64                 	db	100	;'d'
  8876  00F046  20                 	db	32
  8877  00F047  75                 	db	117	;'u'
  8878  00F048  73                 	db	115	;'s'
  8879  00F049  65                 	db	101	;'e'
  8880  00F04A  20                 	db	32
  8881  00F04B  72                 	db	114	;'r'
  8882  00F04C  65                 	db	101	;'e'
  8883  00F04D  73                 	db	115	;'s'
  8884  00F04E  70                 	db	112	;'p'
  8885  00F04F  65                 	db	101	;'e'
  8886  00F050  63                 	db	99	;'c'
  8887  00F051  74                 	db	116	;'t'
  8888  00F052  69                 	db	105	;'i'
  8889  00F053  76                 	db	118	;'v'
  8890  00F054  65                 	db	101	;'e'
  8891  00F055  20                 	db	32
  8892  00F056  63                 	db	99	;'c'
  8893  00F057  6F                 	db	111	;'o'
  8894  00F058  6D                 	db	109	;'m'
  8895  00F059  6D                 	db	109	;'m'
  8896  00F05A  61                 	db	97	;'a'
  8897  00F05B  6E                 	db	110	;'n'
  8898  00F05C  64                 	db	100	;'d'
  8899  00F05D  73                 	db	115	;'s'
  8900  00F05E  0A                 	db	10
  8901  00F05F  0D                 	db	13
  8902  00F060  00                 	db	0
  8903  00F061                     STR_129:
  8904  00F061  45                 	db	69	;'E'
  8905  00F062  52                 	db	82	;'R'
  8906  00F063  52                 	db	82	;'R'
  8907  00F064  4F                 	db	79	;'O'
  8908  00F065  52                 	db	82	;'R'
  8909  00F066  3A                 	db	58	;':'
  8910  00F067  20                 	db	32
  8911  00F068  50                 	db	80	;'P'
  8912  00F069  6C                 	db	108	;'l'
  8913  00F06A  65                 	db	101	;'e'
  8914  00F06B  61                 	db	97	;'a'
  8915  00F06C  73                 	db	115	;'s'
  8916  00F06D  65                 	db	101	;'e'
  8917  00F06E  20                 	db	32
  8918  00F06F  73                 	db	115	;'s'
  8919  00F070  65                 	db	101	;'e'
  8920  00F071  74                 	db	116	;'t'
  8921  00F072  20                 	db	32
  8922  00F073  64                 	db	100	;'d'
  8923  00F074  69                 	db	105	;'i'
  8924  00F075  6D                 	db	109	;'m'
  8925  00F076  6D                 	db	109	;'m'
  8926  00F077  69                 	db	105	;'i'
  8927  00F078  6E                 	db	110	;'n'
  8928  00F079  67                 	db	103	;'g'
  8929  00F07A  20                 	db	32
  8930  00F07B  70                 	db	112	;'p'
  8931  00F07C  65                 	db	101	;'e'
  8932  00F07D  72                 	db	114	;'r'
  8933  00F07E  63                 	db	99	;'c'
  8934  00F07F  65                 	db	101	;'e'
  8935  00F080  6E                 	db	110	;'n'
  8936  00F081  74                 	db	116	;'t'
  8937  00F082  61                 	db	97	;'a'
  8938  00F083  67                 	db	103	;'g'
  8939  00F084  65                 	db	101	;'e'
  8940  00F085  20                 	db	32
  8941  00F086  74                 	db	116	;'t'
  8942  00F087  6F                 	db	111	;'o'
  8943  00F088  20                 	db	32
  8944  00F089  61                 	db	97	;'a'
  8945  00F08A  6E                 	db	110	;'n'
  8946  00F08B  20                 	db	32
  8947  00F08C  69                 	db	105	;'i'
  8948  00F08D  6E                 	db	110	;'n'
  8949  00F08E  74                 	db	116	;'t'
  8950  00F08F  65                 	db	101	;'e'
  8951  00F090  67                 	db	103	;'g'
  8952  00F091  65                 	db	101	;'e'
  8953  00F092  72                 	db	114	;'r'
  8954  00F093  20                 	db	32
  8955  00F094  67                 	db	103	;'g'
  8956  00F095  72                 	db	114	;'r'
  8957  00F096  65                 	db	101	;'e'
  8958  00F097  61                 	db	97	;'a'
  8959  00F098  74                 	db	116	;'t'
  8960  00F099  65                 	db	101	;'e'
  8961  00F09A  72                 	db	114	;'r'
  8962  00F09B  20                 	db	32
  8963  00F09C  74                 	db	116	;'t'
  8964  00F09D  68                 	db	104	;'h'
  8965  00F09E  61                 	db	97	;'a'
  8966  00F09F  6E                 	db	110	;'n'
  8967  00F0A0  20                 	db	32
  8968  00F0A1  30                 	db	48	;'0'
  8969  00F0A2  20                 	db	32
  8970  00F0A3  61                 	db	97	;'a'
  8971  00F0A4  6E                 	db	110	;'n'
  8972  00F0A5  64                 	db	100	;'d'
  8973  00F0A6  20                 	db	32
  8974  00F0A7  6C                 	db	108	;'l'
  8975  00F0A8  65                 	db	101	;'e'
  8976  00F0A9  73                 	db	115	;'s'
  8977  00F0AA  73                 	db	115	;'s'
  8978  00F0AB  20                 	db	32
  8979  00F0AC  74                 	db	116	;'t'
  8980  00F0AD  68                 	db	104	;'h'
  8981  00F0AE  61                 	db	97	;'a'
  8982  00F0AF  6E                 	db	110	;'n'
  8983  00F0B0  20                 	db	32
  8984  00F0B1  31                 	db	49	;'1'
  8985  00F0B2  30                 	db	48	;'0'
  8986  00F0B3  30                 	db	48	;'0'
  8987  00F0B4  0A                 	db	10
  8988  00F0B5  0D                 	db	13
  8989  00F0B6  00                 	db	0
  8990  00F0B7                     STR_58:
  8991  00F0B7  44                 	db	68	;'D'
  8992  00F0B8  65                 	db	101	;'e'
  8993  00F0B9  76                 	db	118	;'v'
  8994  00F0BA  69                 	db	105	;'i'
  8995  00F0BB  63                 	db	99	;'c'
  8996  00F0BC  65                 	db	101	;'e'
  8997  00F0BD  20                 	db	32
  8998  00F0BE  49                 	db	73	;'I'
  8999  00F0BF  44                 	db	68	;'D'
  9000  00F0C0  20                 	db	32
  9001  00F0C1  73                 	db	115	;'s'
  9002  00F0C2  74                 	db	116	;'t'
  9003  00F0C3  6F                 	db	111	;'o'
  9004  00F0C4  72                 	db	114	;'r'
  9005  00F0C5  65                 	db	101	;'e'
  9006  00F0C6  64                 	db	100	;'d'
  9007  00F0C7  20                 	db	32
  9008  00F0C8  69                 	db	105	;'i'
  9009  00F0C9  6E                 	db	110	;'n'
  9010  00F0CA  20                 	db	32
  9011  00F0CB  46                 	db	70	;'F'
  9012  00F0CC  6C                 	db	108	;'l'
  9013  00F0CD  61                 	db	97	;'a'
  9014  00F0CE  73                 	db	115	;'s'
  9015  00F0CF  68                 	db	104	;'h'
  9016  00F0D0  20                 	db	32
  9017  00F0D1  69                 	db	105	;'i'
  9018  00F0D2  73                 	db	115	;'s'
  9019  00F0D3  3A                 	db	58	;':'
  9020  00F0D4  20                 	db	32
  9021  00F0D5  30                 	db	48	;'0'
  9022  00F0D6  78                 	db	120	;'x'
  9023  00F0D7  25                 	db	37
  9024  00F0D8  58                 	db	88	;'X'
  9025  00F0D9  2E                 	db	46
  9026  00F0DA  20                 	db	32
  9027  00F0DB  54                 	db	84	;'T'
  9028  00F0DC  68                 	db	104	;'h'
  9029  00F0DD  69                 	db	105	;'i'
  9030  00F0DE  73                 	db	115	;'s'
  9031  00F0DF  20                 	db	32
  9032  00F0E0  63                 	db	99	;'c'
  9033  00F0E1  6F                 	db	111	;'o'
  9034  00F0E2  72                 	db	114	;'r'
  9035  00F0E3  72                 	db	114	;'r'
  9036  00F0E4  65                 	db	101	;'e'
  9037  00F0E5  73                 	db	115	;'s'
  9038  00F0E6  70                 	db	112	;'p'
  9039  00F0E7  6F                 	db	111	;'o'
  9040  00F0E8  6E                 	db	110	;'n'
  9041  00F0E9  64                 	db	100	;'d'
  9042  00F0EA  73                 	db	115	;'s'
  9043  00F0EB  20                 	db	32
  9044  00F0EC  74                 	db	116	;'t'
  9045  00F0ED  6F                 	db	111	;'o'
  9046  00F0EE  20                 	db	32
  9047  00F0EF  61                 	db	97	;'a'
  9048  00F0F0  20                 	db	32
  9049  00F0F1  64                 	db	100	;'d'
  9050  00F0F2  65                 	db	101	;'e'
  9051  00F0F3  76                 	db	118	;'v'
  9052  00F0F4  69                 	db	105	;'i'
  9053  00F0F5  63                 	db	99	;'c'
  9054  00F0F6  65                 	db	101	;'e'
  9055  00F0F7  20                 	db	32
  9056  00F0F8  70                 	db	112	;'p'
  9057  00F0F9  61                 	db	97	;'a'
  9058  00F0FA  72                 	db	114	;'r'
  9059  00F0FB  74                 	db	116	;'t'
  9060  00F0FC  20                 	db	32
  9061  00F0FD  6E                 	db	110	;'n'
  9062  00F0FE  75                 	db	117	;'u'
  9063  00F0FF  6D                 	db	109	;'m'
  9064  00F100  62                 	db	98	;'b'
  9065  00F101  65                 	db	101	;'e'
  9066  00F102  72                 	db	114	;'r'
  9067  00F103  20                 	db	32
  9068  00F104  6F                 	db	111	;'o'
  9069  00F105  66                 	db	102	;'f'
  9070  00F106  20                 	db	32
  9071  00F107  25                 	db	37
  9072  00F108  73                 	db	115	;'s'
  9073  00F109  0A                 	db	10
  9074  00F10A  0D                 	db	13
  9075  00F10B  00                 	db	0
  9076  00F10C                     STR_105:
  9077  00F10C  4D                 	db	77	;'M'
  9078  00F10D  65                 	db	101	;'e'
  9079  00F10E  61                 	db	97	;'a'
  9080  00F10F  73                 	db	115	;'s'
  9081  00F110  75                 	db	117	;'u'
  9082  00F111  72                 	db	114	;'r'
  9083  00F112  65                 	db	101	;'e'
  9084  00F113  64                 	db	100	;'d'
  9085  00F114  20                 	db	32
  9086  00F115  6F                 	db	111	;'o'
  9087  00F116  75                 	db	117	;'u'
  9088  00F117  74                 	db	116	;'t'
  9089  00F118  70                 	db	112	;'p'
  9090  00F119  75                 	db	117	;'u'
  9091  00F11A  74                 	db	116	;'t'
  9092  00F11B  20                 	db	32
  9093  00F11C  65                 	db	101	;'e'
  9094  00F11D  6E                 	db	110	;'n'
  9095  00F11E  65                 	db	101	;'e'
  9096  00F11F  72                 	db	114	;'r'
  9097  00F120  67                 	db	103	;'g'
  9098  00F121  79                 	db	121	;'y'
  9099  00F122  20                 	db	32
  9100  00F123  73                 	db	115	;'s'
  9101  00F124  69                 	db	105	;'i'
  9102  00F125  6E                 	db	110	;'n'
  9103  00F126  63                 	db	99	;'c'
  9104  00F127  65                 	db	101	;'e'
  9105  00F128  20                 	db	32
  9106  00F129  6C                 	db	108	;'l'
  9107  00F12A  61                 	db	97	;'a'
  9108  00F12B  73                 	db	115	;'s'
  9109  00F12C  74                 	db	116	;'t'
  9110  00F12D  20                 	db	32
  9111  00F12E  6D                 	db	109	;'m'
  9112  00F12F  65                 	db	101	;'e'
  9113  00F130  61                 	db	97	;'a'
  9114  00F131  73                 	db	115	;'s'
  9115  00F132  75                 	db	117	;'u'
  9116  00F133  72                 	db	114	;'r'
  9117  00F134  65                 	db	101	;'e'
  9118  00F135  6D                 	db	109	;'m'
  9119  00F136  65                 	db	101	;'e'
  9120  00F137  6E                 	db	110	;'n'
  9121  00F138  74                 	db	116	;'t'
  9122  00F139  20                 	db	32
  9123  00F13A  72                 	db	114	;'r'
  9124  00F13B  65                 	db	101	;'e'
  9125  00F13C  73                 	db	115	;'s'
  9126  00F13D  65                 	db	101	;'e'
  9127  00F13E  74                 	db	116	;'t'
  9128  00F13F  20                 	db	32
  9129  00F140  69                 	db	105	;'i'
  9130  00F141  73                 	db	115	;'s'
  9131  00F142  20                 	db	32
  9132  00F143  25                 	db	37
  9133  00F144  2E                 	db	46
  9134  00F145  33                 	db	51	;'3'
  9135  00F146  66                 	db	102	;'f'
  9136  00F147  20                 	db	32
  9137  00F148  57                 	db	87	;'W'
  9138  00F149  61                 	db	97	;'a'
  9139  00F14A  74                 	db	116	;'t'
  9140  00F14B  74                 	db	116	;'t'
  9141  00F14C  20                 	db	32
  9142  00F14D  48                 	db	72	;'H'
  9143  00F14E  6F                 	db	111	;'o'
  9144  00F14F  75                 	db	117	;'u'
  9145  00F150  72                 	db	114	;'r'
  9146  00F151  73                 	db	115	;'s'
  9147  00F152  0A                 	db	10
  9148  00F153  0D                 	db	13
  9149  00F154  00                 	db	0
  9150  00F155                     STR_134:
  9151  00F155  54                 	db	84	;'T'
  9152  00F156  68                 	db	104	;'h'
  9153  00F157  69                 	db	105	;'i'
  9154  00F158  73                 	db	115	;'s'
  9155  00F159  20                 	db	32
  9156  00F15A  63                 	db	99	;'c'
  9157  00F15B  6F                 	db	111	;'o'
  9158  00F15C  72                 	db	114	;'r'
  9159  00F15D  72                 	db	114	;'r'
  9160  00F15E  65                 	db	101	;'e'
  9161  00F15F  73                 	db	115	;'s'
  9162  00F160  70                 	db	112	;'p'
  9163  00F161  6F                 	db	111	;'o'
  9164  00F162  6E                 	db	110	;'n'
  9165  00F163  64                 	db	100	;'d'
  9166  00F164  73                 	db	115	;'s'
  9167  00F165  20                 	db	32
  9168  00F166  74                 	db	116	;'t'
  9169  00F167  6F                 	db	111	;'o'
  9170  00F168  20                 	db	32
  9171  00F169  61                 	db	97	;'a'
  9172  00F16A  20                 	db	32
  9173  00F16B  31                 	db	49	;'1'
  9174  00F16C  36                 	db	54	;'6'
  9175  00F16D  20                 	db	32
  9176  00F16E  62                 	db	98	;'b'
  9177  00F16F  69                 	db	105	;'i'
  9178  00F170  74                 	db	116	;'t'
  9179  00F171  20                 	db	32
  9180  00F172  74                 	db	116	;'t'
  9181  00F173  69                 	db	105	;'i'
  9182  00F174  6D                 	db	109	;'m'
  9183  00F175  65                 	db	101	;'e'
  9184  00F176  72                 	db	114	;'r'
  9185  00F177  20                 	db	32
  9186  00F178  70                 	db	112	;'p'
  9187  00F179  72                 	db	114	;'r'
  9188  00F17A  65                 	db	101	;'e'
  9189  00F17B  2D                 	db	45
  9190  00F17C  6C                 	db	108	;'l'
  9191  00F17D  6F                 	db	111	;'o'
  9192  00F17E  61                 	db	97	;'a'
  9193  00F17F  64                 	db	100	;'d'
  9194  00F180  20                 	db	32
  9195  00F181  76                 	db	118	;'v'
  9196  00F182  61                 	db	97	;'a'
  9197  00F183  6C                 	db	108	;'l'
  9198  00F184  75                 	db	117	;'u'
  9199  00F185  65                 	db	101	;'e'
  9200  00F186  20                 	db	32
  9201  00F187  6F                 	db	111	;'o'
  9202  00F188  66                 	db	102	;'f'
  9203  00F189  20                 	db	32
  9204  00F18A  30                 	db	48	;'0'
  9205  00F18B  78                 	db	120	;'x'
  9206  00F18C  25                 	db	37
  9207  00F18D  58                 	db	88	;'X'
  9208  00F18E  20                 	db	32
  9209  00F18F  28                 	db	40
  9210  00F190  25                 	db	37
  9211  00F191  75                 	db	117	;'u'
  9212  00F192  20                 	db	32
  9213  00F193  4C                 	db	76	;'L'
  9214  00F194  53                 	db	83	;'S'
  9215  00F195  42                 	db	66	;'B'
  9216  00F196  73                 	db	115	;'s'
  9217  00F197  29                 	db	41
  9218  00F198  20                 	db	32
  9219  00F199  0A                 	db	10
  9220  00F19A  0D                 	db	13
  9221  00F19B  00                 	db	0
  9222  00F19C                     STR_79:
  9223  00F19C  43                 	db	67	;'C'
  9224  00F19D  6F                 	db	111	;'o'
  9225  00F19E  6D                 	db	109	;'m'
  9226  00F19F  6D                 	db	109	;'m'
  9227  00F1A0  75                 	db	117	;'u'
  9228  00F1A1  6E                 	db	110	;'n'
  9229  00F1A2  69                 	db	105	;'i'
  9230  00F1A3  63                 	db	99	;'c'
  9231  00F1A4  61                 	db	97	;'a'
  9232  00F1A5  74                 	db	116	;'t'
  9233  00F1A6  69                 	db	105	;'i'
  9234  00F1A7  6F                 	db	111	;'o'
  9235  00F1A8  6E                 	db	110	;'n'
  9236  00F1A9  73                 	db	115	;'s'
  9237  00F1AA  20                 	db	32
  9238  00F1AB  65                 	db	101	;'e'
  9239  00F1AC  72                 	db	114	;'r'
  9240  00F1AD  72                 	db	114	;'r'
  9241  00F1AE  6F                 	db	111	;'o'
  9242  00F1AF  72                 	db	114	;'r'
  9243  00F1B0  28                 	db	40
  9244  00F1B1  73                 	db	115	;'s'
  9245  00F1B2  29                 	db	41
  9246  00F1B3  20                 	db	32
  9247  00F1B4  64                 	db	100	;'d'
  9248  00F1B5  65                 	db	101	;'e'
  9249  00F1B6  74                 	db	116	;'t'
  9250  00F1B7  65                 	db	101	;'e'
  9251  00F1B8  63                 	db	99	;'c'
  9252  00F1B9  74                 	db	116	;'t'
  9253  00F1BA  65                 	db	101	;'e'
  9254  00F1BB  64                 	db	100	;'d'
  9255  00F1BC  21                 	db	33
  9256  00F1BD  20                 	db	32
  9257  00F1BE  49                 	db	73	;'I'
  9258  00F1BF  6E                 	db	110	;'n'
  9259  00F1C0  74                 	db	116	;'t'
  9260  00F1C1  65                 	db	101	;'e'
  9261  00F1C2  72                 	db	114	;'r'
  9262  00F1C3  66                 	db	102	;'f'
  9263  00F1C4  61                 	db	97	;'a'
  9264  00F1C5  63                 	db	99	;'c'
  9265  00F1C6  65                 	db	101	;'e'
  9266  00F1C7  73                 	db	115	;'s'
  9267  00F1C8  20                 	db	32
  9268  00F1C9  63                 	db	99	;'c'
  9269  00F1CA  61                 	db	97	;'a'
  9270  00F1CB  75                 	db	117	;'u'
  9271  00F1CC  73                 	db	115	;'s'
  9272  00F1CD  69                 	db	105	;'i'
  9273  00F1CE  6E                 	db	110	;'n'
  9274  00F1CF  67                 	db	103	;'g'
  9275  00F1D0  20                 	db	32
  9276  00F1D1  65                 	db	101	;'e'
  9277  00F1D2  72                 	db	114	;'r'
  9278  00F1D3  72                 	db	114	;'r'
  9279  00F1D4  6F                 	db	111	;'o'
  9280  00F1D5  72                 	db	114	;'r'
  9281  00F1D6  28                 	db	40
  9282  00F1D7  73                 	db	115	;'s'
  9283  00F1D8  29                 	db	41
  9284  00F1D9  3A                 	db	58	;':'
  9285  00F1DA  0A                 	db	10
  9286  00F1DB  0D                 	db	13
  9287  00F1DC  00                 	db	0
  9288  00F1DD                     STR_62:
  9289  00F1DD  54                 	db	84	;'T'
  9290  00F1DE  68                 	db	104	;'h'
  9291  00F1DF  65                 	db	101	;'e'
  9292  00F1E0  20                 	db	32
  9293  00F1E1  66                 	db	102	;'f'
  9294  00F1E2  6F                 	db	111	;'o'
  9295  00F1E3  6C                 	db	108	;'l'
  9296  00F1E4  6C                 	db	108	;'l'
  9297  00F1E5  6F                 	db	111	;'o'
  9298  00F1E6  77                 	db	119	;'w'
  9299  00F1E7  69                 	db	105	;'i'
  9300  00F1E8  6E                 	db	110	;'n'
  9301  00F1E9  67                 	db	103	;'g'
  9302  00F1EA  20                 	db	32
  9303  00F1EB  55                 	db	85	;'U'
  9304  00F1EC  73                 	db	115	;'s'
  9305  00F1ED  65                 	db	101	;'e'
  9306  00F1EE  72                 	db	114	;'r'
  9307  00F1EF  20                 	db	32
  9308  00F1F0  49                 	db	73	;'I'
  9309  00F1F1  44                 	db	68	;'D'
  9310  00F1F2  73                 	db	115	;'s'
  9311  00F1F3  20                 	db	32
  9312  00F1F4  68                 	db	104	;'h'
  9313  00F1F5  61                 	db	97	;'a'
  9314  00F1F6  76                 	db	118	;'v'
  9315  00F1F7  65                 	db	101	;'e'
  9316  00F1F8  20                 	db	32
  9317  00F1F9  62                 	db	98	;'b'
  9318  00F1FA  65                 	db	101	;'e'
  9319  00F1FB  65                 	db	101	;'e'
  9320  00F1FC  6E                 	db	110	;'n'
  9321  00F1FD  20                 	db	32
  9322  00F1FE  72                 	db	114	;'r'
  9323  00F1FF  65                 	db	101	;'e'
  9324  00F200  74                 	db	116	;'t'
  9325  00F201  72                 	db	114	;'r'
  9326  00F202  69                 	db	105	;'i'
  9327  00F203  65                 	db	101	;'e'
  9328  00F204  76                 	db	118	;'v'
  9329  00F205  65                 	db	101	;'e'
  9330  00F206  64                 	db	100	;'d'
  9331  00F207  20                 	db	32
  9332  00F208  66                 	db	102	;'f'
  9333  00F209  72                 	db	114	;'r'
  9334  00F20A  6F                 	db	111	;'o'
  9335  00F20B  6D                 	db	109	;'m'
  9336  00F20C  20                 	db	32
  9337  00F20D  66                 	db	102	;'f'
  9338  00F20E  6C                 	db	108	;'l'
  9339  00F20F  61                 	db	97	;'a'
  9340  00F210  73                 	db	115	;'s'
  9341  00F211  68                 	db	104	;'h'
  9342  00F212  20                 	db	32
  9343  00F213  6D                 	db	109	;'m'
  9344  00F214  65                 	db	101	;'e'
  9345  00F215  6D                 	db	109	;'m'
  9346  00F216  6F                 	db	111	;'o'
  9347  00F217  72                 	db	114	;'r'
  9348  00F218  79                 	db	121	;'y'
  9349  00F219  3A                 	db	58	;':'
  9350  00F21A  0A                 	db	10
  9351  00F21B  0D                 	db	13
  9352  00F21C  00                 	db	0
  9353  00F21D                     STR_133:
  9354  00F21D  43                 	db	67	;'C'
  9355  00F21E  61                 	db	97	;'a'
  9356  00F21F  6C                 	db	108	;'l'
  9357  00F220  63                 	db	99	;'c'
  9358  00F221  75                 	db	117	;'u'
  9359  00F222  6C                 	db	108	;'l'
  9360  00F223  61                 	db	97	;'a'
  9361  00F224  74                 	db	116	;'t'
  9362  00F225  65                 	db	101	;'e'
  9363  00F226  64                 	db	100	;'d'
  9364  00F227  20                 	db	32
  9365  00F228  54                 	db	84	;'T'
  9366  00F229  52                 	db	82	;'R'
  9367  00F22A  49                 	db	73	;'I'
  9368  00F22B  41                 	db	65	;'A'
  9369  00F22C  43                 	db	67	;'C'
  9370  00F22D  20                 	db	32
  9371  00F22E  66                 	db	102	;'f'
  9372  00F22F  69                 	db	105	;'i'
  9373  00F230  72                 	db	114	;'r'
  9374  00F231  69                 	db	105	;'i'
  9375  00F232  6E                 	db	110	;'n'
  9376  00F233  67                 	db	103	;'g'
  9377  00F234  20                 	db	32
  9378  00F235  61                 	db	97	;'a'
  9379  00F236  6E                 	db	110	;'n'
  9380  00F237  67                 	db	103	;'g'
  9381  00F238  6C                 	db	108	;'l'
  9382  00F239  65                 	db	101	;'e'
  9383  00F23A  20                 	db	32
  9384  00F23B  69                 	db	105	;'i'
  9385  00F23C  73                 	db	115	;'s'
  9386  00F23D  20                 	db	32
  9387  00F23E  25                 	db	37
  9388  00F23F  2E                 	db	46
  9389  00F240  33                 	db	51	;'3'
  9390  00F241  66                 	db	102	;'f'
  9391  00F242  20                 	db	32
  9392  00F243  72                 	db	114	;'r'
  9393  00F244  61                 	db	97	;'a'
  9394  00F245  64                 	db	100	;'d'
  9395  00F246  69                 	db	105	;'i'
  9396  00F247  61                 	db	97	;'a'
  9397  00F248  6E                 	db	110	;'n'
  9398  00F249  73                 	db	115	;'s'
  9399  00F24A  20                 	db	32
  9400  00F24B  28                 	db	40
  9401  00F24C  25                 	db	37
  9402  00F24D  2E                 	db	46
  9403  00F24E  33                 	db	51	;'3'
  9404  00F24F  66                 	db	102	;'f'
  9405  00F250  20                 	db	32
  9406  00F251  64                 	db	100	;'d'
  9407  00F252  65                 	db	101	;'e'
  9408  00F253  67                 	db	103	;'g'
  9409  00F254  72                 	db	114	;'r'
  9410  00F255  65                 	db	101	;'e'
  9411  00F256  65                 	db	101	;'e'
  9412  00F257  73                 	db	115	;'s'
  9413  00F258  29                 	db	41
  9414  00F259  0A                 	db	10
  9415  00F25A  0D                 	db	13
  9416  00F25B  00                 	db	0
  9417  00F25C                     STR_166:
  9418  00F25C  53                 	db	83	;'S'
  9419  00F25D  79                 	db	121	;'y'
  9420  00F25E  73                 	db	115	;'s'
  9421  00F25F  74                 	db	116	;'t'
  9422  00F260  65                 	db	101	;'e'
  9423  00F261  6D                 	db	109	;'m'
  9424  00F262  20                 	db	32
  9425  00F263  70                 	db	112	;'p'
  9426  00F264  61                 	db	97	;'a'
  9427  00F265  72                 	db	114	;'r'
  9428  00F266  61                 	db	97	;'a'
  9429  00F267  6D                 	db	109	;'m'
  9430  00F268  65                 	db	101	;'e'
  9431  00F269  74                 	db	116	;'t'
  9432  00F26A  65                 	db	101	;'e'
  9433  00F26B  72                 	db	114	;'r'
  9434  00F26C  73                 	db	115	;'s'
  9435  00F26D  20                 	db	32
  9436  00F26E  61                 	db	97	;'a'
  9437  00F26F  6E                 	db	110	;'n'
  9438  00F270  64                 	db	100	;'d'
  9439  00F271  20                 	db	32
  9440  00F272  61                 	db	97	;'a'
  9441  00F273  66                 	db	102	;'f'
  9442  00F274  66                 	db	102	;'f'
  9443  00F275  69                 	db	105	;'i'
  9444  00F276  72                 	db	114	;'r'
  9445  00F277  6D                 	db	109	;'m'
  9446  00F278  61                 	db	97	;'a'
  9447  00F279  74                 	db	116	;'t'
  9448  00F27A  69                 	db	105	;'i'
  9449  00F27B  76                 	db	118	;'v'
  9450  00F27C  65                 	db	101	;'e'
  9451  00F27D  20                 	db	32
  9452  00F27E  72                 	db	114	;'r'
  9453  00F27F  65                 	db	101	;'e'
  9454  00F280  73                 	db	115	;'s'
  9455  00F281  70                 	db	112	;'p'
  9456  00F282  6F                 	db	111	;'o'
  9457  00F283  6E                 	db	110	;'n'
  9458  00F284  73                 	db	115	;'s'
  9459  00F285  65                 	db	101	;'e'
  9460  00F286  73                 	db	115	;'s'
  9461  00F287  20                 	db	32
  9462  00F288  61                 	db	97	;'a'
  9463  00F289  70                 	db	112	;'p'
  9464  00F28A  70                 	db	112	;'p'
  9465  00F28B  65                 	db	101	;'e'
  9466  00F28C  61                 	db	97	;'a'
  9467  00F28D  72                 	db	114	;'r'
  9468  00F28E  20                 	db	32
  9469  00F28F  69                 	db	105	;'i'
  9470  00F290  6E                 	db	110	;'n'
  9471  00F291  20                 	db	32
  9472  00F292  67                 	db	103	;'g'
  9473  00F293  72                 	db	114	;'r'
  9474  00F294  65                 	db	101	;'e'
  9475  00F295  65                 	db	101	;'e'
  9476  00F296  6E                 	db	110	;'n'
  9477  00F297  0A                 	db	10
  9478  00F298  0D                 	db	13
  9479  00F299  00                 	db	0
  9480  00F29A                     STR_82:
  9481  00F29A  43                 	db	67	;'C'
  9482  00F29B  61                 	db	97	;'a'
  9483  00F29C  6C                 	db	108	;'l'
  9484  00F29D  6C                 	db	108	;'l'
  9485  00F29E  20                 	db	32
  9486  00F29F  27                 	db	39
  9487  00F2A0  43                 	db	67	;'C'
  9488  00F2A1  6C                 	db	108	;'l'
  9489  00F2A2  65                 	db	101	;'e'
  9490  00F2A3  61                 	db	97	;'a'
  9491  00F2A4  72                 	db	114	;'r'
  9492  00F2A5  20                 	db	32
  9493  00F2A6  43                 	db	67	;'C'
  9494  00F2A7  4F                 	db	79	;'O'
  9495  00F2A8  4D                 	db	77	;'M'
  9496  00F2A9  4D                 	db	77	;'M'
  9497  00F2AA  20                 	db	32
  9498  00F2AB  45                 	db	69	;'E'
  9499  00F2AC  72                 	db	114	;'r'
  9500  00F2AD  72                 	db	114	;'r'
  9501  00F2AE  6F                 	db	111	;'o'
  9502  00F2AF  72                 	db	114	;'r'
  9503  00F2B0  73                 	db	115	;'s'
  9504  00F2B1  27                 	db	39
  9505  00F2B2  20                 	db	32
  9506  00F2B3  74                 	db	116	;'t'
  9507  00F2B4  6F                 	db	111	;'o'
  9508  00F2B5  20                 	db	32
  9509  00F2B6  63                 	db	99	;'c'
  9510  00F2B7  6C                 	db	108	;'l'
  9511  00F2B8  65                 	db	101	;'e'
  9512  00F2B9  61                 	db	97	;'a'
  9513  00F2BA  72                 	db	114	;'r'
  9514  00F2BB  20                 	db	32
  9515  00F2BC  63                 	db	99	;'c'
  9516  00F2BD  6F                 	db	111	;'o'
  9517  00F2BE  6D                 	db	109	;'m'
  9518  00F2BF  6D                 	db	109	;'m'
  9519  00F2C0  75                 	db	117	;'u'
  9520  00F2C1  6E                 	db	110	;'n'
  9521  00F2C2  69                 	db	105	;'i'
  9522  00F2C3  63                 	db	99	;'c'
  9523  00F2C4  61                 	db	97	;'a'
  9524  00F2C5  74                 	db	116	;'t'
  9525  00F2C6  69                 	db	105	;'i'
  9526  00F2C7  6F                 	db	111	;'o'
  9527  00F2C8  6E                 	db	110	;'n'
  9528  00F2C9  73                 	db	115	;'s'
  9529  00F2CA  20                 	db	32
  9530  00F2CB  65                 	db	101	;'e'
  9531  00F2CC  72                 	db	114	;'r'
  9532  00F2CD  72                 	db	114	;'r'
  9533  00F2CE  6F                 	db	111	;'o'
  9534  00F2CF  72                 	db	114	;'r'
  9535  00F2D0  28                 	db	40
  9536  00F2D1  73                 	db	115	;'s'
  9537  00F2D2  29                 	db	41
  9538  00F2D3  0A                 	db	10
  9539  00F2D4  0D                 	db	13
  9540  00F2D5  00                 	db	0
  9541  00F2D6                     STR_60:
  9542  00F2D6  44                 	db	68	;'D'
  9543  00F2D7  65                 	db	101	;'e'
  9544  00F2D8  76                 	db	118	;'v'
  9545  00F2D9  69                 	db	105	;'i'
  9546  00F2DA  63                 	db	99	;'c'
  9547  00F2DB  65                 	db	101	;'e'
  9548  00F2DC  20                 	db	32
  9549  00F2DD  73                 	db	115	;'s'
  9550  00F2DE  69                 	db	105	;'i'
  9551  00F2DF  6C                 	db	108	;'l'
  9552  00F2E0  69                 	db	105	;'i'
  9553  00F2E1  63                 	db	99	;'c'
  9554  00F2E2  6F                 	db	111	;'o'
  9555  00F2E3  6E                 	db	110	;'n'
  9556  00F2E4  20                 	db	32
  9557  00F2E5  72                 	db	114	;'r'
  9558  00F2E6  65                 	db	101	;'e'
  9559  00F2E7  76                 	db	118	;'v'
  9560  00F2E8  69                 	db	105	;'i'
  9561  00F2E9  73                 	db	115	;'s'
  9562  00F2EA  69                 	db	105	;'i'
  9563  00F2EB  6F                 	db	111	;'o'
  9564  00F2EC  6E                 	db	110	;'n'
  9565  00F2ED  20                 	db	32
  9566  00F2EE  49                 	db	73	;'I'
  9567  00F2EF  44                 	db	68	;'D'
  9568  00F2F0  20                 	db	32
  9569  00F2F1  61                 	db	97	;'a'
  9570  00F2F2  73                 	db	115	;'s'
  9571  00F2F3  20                 	db	32
  9572  00F2F4  73                 	db	115	;'s'
  9573  00F2F5  74                 	db	116	;'t'
  9574  00F2F6  6F                 	db	111	;'o'
  9575  00F2F7  72                 	db	114	;'r'
  9576  00F2F8  65                 	db	101	;'e'
  9577  00F2F9  64                 	db	100	;'d'
  9578  00F2FA  20                 	db	32
  9579  00F2FB  69                 	db	105	;'i'
  9580  00F2FC  6E                 	db	110	;'n'
  9581  00F2FD  20                 	db	32
  9582  00F2FE  46                 	db	70	;'F'
  9583  00F2FF  6C                 	db	108	;'l'
  9584  00F300  61                 	db	97	;'a'
  9585  00F301  73                 	db	115	;'s'
  9586  00F302  68                 	db	104	;'h'
  9587  00F303  20                 	db	32
  9588  00F304  69                 	db	105	;'i'
  9589  00F305  73                 	db	115	;'s'
  9590  00F306  3A                 	db	58	;':'
  9591  00F307  20                 	db	32
  9592  00F308  25                 	db	37
  9593  00F309  63                 	db	99	;'c'
  9594  00F30A  25                 	db	37
  9595  00F30B  30                 	db	48	;'0'
  9596  00F30C  33                 	db	51	;'3'
  9597  00F30D  64                 	db	100	;'d'
  9598  00F30E  0A                 	db	10
  9599  00F30F  0D                 	db	13
  9600  00F310  00                 	db	0
  9601  00F311                     STR_107:
  9602  00F311  4D                 	db	77	;'M'
  9603  00F312  65                 	db	101	;'e'
  9604  00F313  61                 	db	97	;'a'
  9605  00F314  73                 	db	115	;'s'
  9606  00F315  75                 	db	117	;'u'
  9607  00F316  72                 	db	114	;'r'
  9608  00F317  65                 	db	101	;'e'
  9609  00F318  64                 	db	100	;'d'
  9610  00F319  20                 	db	32
  9611  00F31A  6F                 	db	111	;'o'
  9612  00F31B  75                 	db	117	;'u'
  9613  00F31C  74                 	db	116	;'t'
  9614  00F31D  70                 	db	112	;'p'
  9615  00F31E  75                 	db	117	;'u'
  9616  00F31F  74                 	db	116	;'t'
  9617  00F320  20                 	db	32
  9618  00F321  65                 	db	101	;'e'
  9619  00F322  6E                 	db	110	;'n'
  9620  00F323  65                 	db	101	;'e'
  9621  00F324  72                 	db	114	;'r'
  9622  00F325  67                 	db	103	;'g'
  9623  00F326  79                 	db	121	;'y'
  9624  00F327  20                 	db	32
  9625  00F328  68                 	db	104	;'h'
  9626  00F329  61                 	db	97	;'a'
  9627  00F32A  73                 	db	115	;'s'
  9628  00F32B  20                 	db	32
  9629  00F32C  62                 	db	98	;'b'
  9630  00F32D  65                 	db	101	;'e'
  9631  00F32E  65                 	db	101	;'e'
  9632  00F32F  6E                 	db	110	;'n'
  9633  00F330  20                 	db	32
  9634  00F331  72                 	db	114	;'r'
  9635  00F332  65                 	db	101	;'e'
  9636  00F333  73                 	db	115	;'s'
  9637  00F334  65                 	db	101	;'e'
  9638  00F335  74                 	db	116	;'t'
  9639  00F336  20                 	db	32
  9640  00F337  74                 	db	116	;'t'
  9641  00F338  6F                 	db	111	;'o'
  9642  00F339  20                 	db	32
  9643  00F33A  7A                 	db	122	;'z'
  9644  00F33B  65                 	db	101	;'e'
  9645  00F33C  72                 	db	114	;'r'
  9646  00F33D  6F                 	db	111	;'o'
  9647  00F33E  20                 	db	32
  9648  00F33F  57                 	db	87	;'W'
  9649  00F340  61                 	db	97	;'a'
  9650  00F341  74                 	db	116	;'t'
  9651  00F342  74                 	db	116	;'t'
  9652  00F343  20                 	db	32
  9653  00F344  48                 	db	72	;'H'
  9654  00F345  6F                 	db	111	;'o'
  9655  00F346  75                 	db	117	;'u'
  9656  00F347  72                 	db	114	;'r'
  9657  00F348  73                 	db	115	;'s'
  9658  00F349  0A                 	db	10
  9659  00F34A  0D                 	db	13
  9660  00F34B  00                 	db	0
  9661  00F34C                     STR_136:
  9662  00F34C  44                 	db	68	;'D'
  9663  00F34D  65                 	db	101	;'e'
  9664  00F34E  76                 	db	118	;'v'
  9665  00F34F  69                 	db	105	;'i'
  9666  00F350  63                 	db	99	;'c'
  9667  00F351  65                 	db	101	;'e'
  9668  00F352  20                 	db	32
  9669  00F353  6F                 	db	111	;'o'
  9670  00F354  6E                 	db	110	;'n'
  9671  00F355  20                 	db	32
  9672  00F356  74                 	db	116	;'t'
  9673  00F357  69                 	db	105	;'i'
  9674  00F358  6D                 	db	109	;'m'
  9675  00F359  65                 	db	101	;'e'
  9676  00F35A  20                 	db	32
  9677  00F35B  73                 	db	115	;'s'
  9678  00F35C  69                 	db	105	;'i'
  9679  00F35D  6E                 	db	110	;'n'
  9680  00F35E  63                 	db	99	;'c'
  9681  00F35F  65                 	db	101	;'e'
  9682  00F360  20                 	db	32
  9683  00F361  6C                 	db	108	;'l'
  9684  00F362  61                 	db	97	;'a'
  9685  00F363  73                 	db	115	;'s'
  9686  00F364  74                 	db	116	;'t'
  9687  00F365  20                 	db	32
  9688  00F366  72                 	db	114	;'r'
  9689  00F367  65                 	db	101	;'e'
  9690  00F368  73                 	db	115	;'s'
  9691  00F369  65                 	db	101	;'e'
  9692  00F36A  74                 	db	116	;'t'
  9693  00F36B  20                 	db	32
  9694  00F36C  63                 	db	99	;'c'
  9695  00F36D  6F                 	db	111	;'o'
  9696  00F36E  6E                 	db	110	;'n'
  9697  00F36F  64                 	db	100	;'d'
  9698  00F370  69                 	db	105	;'i'
  9699  00F371  74                 	db	116	;'t'
  9700  00F372  69                 	db	105	;'i'
  9701  00F373  6F                 	db	111	;'o'
  9702  00F374  6E                 	db	110	;'n'
  9703  00F375  20                 	db	32
  9704  00F376  69                 	db	105	;'i'
  9705  00F377  73                 	db	115	;'s'
  9706  00F378  20                 	db	32
  9707  00F379  25                 	db	37
  9708  00F37A  64                 	db	100	;'d'
  9709  00F37B  20                 	db	32
  9710  00F37C  73                 	db	115	;'s'
  9711  00F37D  65                 	db	101	;'e'
  9712  00F37E  63                 	db	99	;'c'
  9713  00F37F  6F                 	db	111	;'o'
  9714  00F380  6E                 	db	110	;'n'
  9715  00F381  64                 	db	100	;'d'
  9716  00F382  73                 	db	115	;'s'
  9717  00F383  0A                 	db	10
  9718  00F384  0D                 	db	13
  9719  00F385  00                 	db	0
  9720  00F386                     STR_93:
  9721  00F386  46                 	db	70	;'F'
  9722  00F387  69                 	db	105	;'i'
  9723  00F388  78                 	db	120	;'x'
  9724  00F389  65                 	db	101	;'e'
  9725  00F38A  64                 	db	100	;'d'
  9726  00F38B  20                 	db	32
  9727  00F38C  56                 	db	86	;'V'
  9728  00F38D  6F                 	db	111	;'o'
  9729  00F38E  6C                 	db	108	;'l'
  9730  00F38F  74                 	db	116	;'t'
  9731  00F390  61                 	db	97	;'a'
  9732  00F391  67                 	db	103	;'g'
  9733  00F392  65                 	db	101	;'e'
  9734  00F393  20                 	db	32
  9735  00F394  52                 	db	82	;'R'
  9736  00F395  65                 	db	101	;'e'
  9737  00F396  66                 	db	102	;'f'
  9738  00F397  65                 	db	101	;'e'
  9739  00F398  72                 	db	114	;'r'
  9740  00F399  65                 	db	101	;'e'
  9741  00F39A  6E                 	db	110	;'n'
  9742  00F39B  63                 	db	99	;'c'
  9743  00F39C  65                 	db	101	;'e'
  9744  00F39D  20                 	db	32
  9745  00F39E  42                 	db	66	;'B'
  9746  00F39F  75                 	db	117	;'u'
  9747  00F3A0  66                 	db	102	;'f'
  9748  00F3A1  66                 	db	102	;'f'
  9749  00F3A2  65                 	db	101	;'e'
  9750  00F3A3  72                 	db	114	;'r'
  9751  00F3A4  20                 	db	32
  9752  00F3A5  31                 	db	49	;'1'
  9753  00F3A6  20                 	db	32
  9754  00F3A7  6D                 	db	109	;'m'
  9755  00F3A8  65                 	db	101	;'e'
  9756  00F3A9  61                 	db	97	;'a'
  9757  00F3AA  73                 	db	115	;'s'
  9758  00F3AB  75                 	db	117	;'u'
  9759  00F3AC  72                 	db	114	;'r'
  9760  00F3AD  65                 	db	101	;'e'
  9761  00F3AE  64                 	db	100	;'d'
  9762  00F3AF  20                 	db	32
  9763  00F3B0  61                 	db	97	;'a'
  9764  00F3B1  73                 	db	115	;'s'
  9765  00F3B2  20                 	db	32
  9766  00F3B3  25                 	db	37
  9767  00F3B4  2E                 	db	46
  9768  00F3B5  33                 	db	51	;'3'
  9769  00F3B6  66                 	db	102	;'f'
  9770  00F3B7  20                 	db	32
  9771  00F3B8  56                 	db	86	;'V'
  9772  00F3B9  6F                 	db	111	;'o'
  9773  00F3BA  6C                 	db	108	;'l'
  9774  00F3BB  74                 	db	116	;'t'
  9775  00F3BC  73                 	db	115	;'s'
  9776  00F3BD  0A                 	db	10
  9777  00F3BE  0D                 	db	13
  9778  00F3BF  00                 	db	0
  9779  00F3C0                     STR_103:
  9780  00F3C0  4F                 	db	79	;'O'
  9781  00F3C1  75                 	db	117	;'u'
  9782  00F3C2  74                 	db	116	;'t'
  9783  00F3C3  70                 	db	112	;'p'
  9784  00F3C4  75                 	db	117	;'u'
  9785  00F3C5  74                 	db	116	;'t'
  9786  00F3C6  20                 	db	32
  9787  00F3C7  70                 	db	112	;'p'
  9788  00F3C8  6F                 	db	111	;'o'
  9789  00F3C9  77                 	db	119	;'w'
  9790  00F3CA  65                 	db	101	;'e'
  9791  00F3CB  72                 	db	114	;'r'
  9792  00F3CC  20                 	db	32
  9793  00F3CD  63                 	db	99	;'c'
  9794  00F3CE  61                 	db	97	;'a'
  9795  00F3CF  6C                 	db	108	;'l'
  9796  00F3D0  63                 	db	99	;'c'
  9797  00F3D1  75                 	db	117	;'u'
  9798  00F3D2  6C                 	db	108	;'l'
  9799  00F3D3  61                 	db	97	;'a'
  9800  00F3D4  74                 	db	116	;'t'
  9801  00F3D5  65                 	db	101	;'e'
  9802  00F3D6  64                 	db	100	;'d'
  9803  00F3D7  20                 	db	32
  9804  00F3D8  61                 	db	97	;'a'
  9805  00F3D9  73                 	db	115	;'s'
  9806  00F3DA  20                 	db	32
  9807  00F3DB  25                 	db	37
  9808  00F3DC  2E                 	db	46
  9809  00F3DD  33                 	db	51	;'3'
  9810  00F3DE  66                 	db	102	;'f'
  9811  00F3DF  20                 	db	32
  9812  00F3E0  57                 	db	87	;'W'
  9813  00F3E1  61                 	db	97	;'a'
  9814  00F3E2  74                 	db	116	;'t'
  9815  00F3E3  74                 	db	116	;'t'
  9816  00F3E4  73                 	db	115	;'s'
  9817  00F3E5  20                 	db	32
  9818  00F3E6  66                 	db	102	;'f'
  9819  00F3E7  72                 	db	114	;'r'
  9820  00F3E8  6F                 	db	111	;'o'
  9821  00F3E9  6D                 	db	109	;'m'
  9822  00F3EA  20                 	db	32
  9823  00F3EB  52                 	db	82	;'R'
  9824  00F3EC  4D                 	db	77	;'M'
  9825  00F3ED  53                 	db	83	;'S'
  9826  00F3EE  20                 	db	32
  9827  00F3EF  76                 	db	118	;'v'
  9828  00F3F0  61                 	db	97	;'a'
  9829  00F3F1  6C                 	db	108	;'l'
  9830  00F3F2  75                 	db	117	;'u'
  9831  00F3F3  65                 	db	101	;'e'
  9832  00F3F4  73                 	db	115	;'s'
  9833  00F3F5  0A                 	db	10
  9834  00F3F6  0D                 	db	13
  9835  00F3F7  00                 	db	0
  9836  00F3F8                     STR_165:
  9837  00F3F8  48                 	db	72	;'H'
  9838  00F3F9  65                 	db	101	;'e'
  9839  00F3FA  6C                 	db	108	;'l'
  9840  00F3FB  70                 	db	112	;'p'
  9841  00F3FC  20                 	db	32
  9842  00F3FD  6D                 	db	109	;'m'
  9843  00F3FE  65                 	db	101	;'e'
  9844  00F3FF  73                 	db	115	;'s'
  9845  00F400  73                 	db	115	;'s'
  9846  00F401  61                 	db	97	;'a'
  9847  00F402  67                 	db	103	;'g'
  9848  00F403  65                 	db	101	;'e'
  9849  00F404  73                 	db	115	;'s'
  9850  00F405  20                 	db	32
  9851  00F406  61                 	db	97	;'a'
  9852  00F407  6E                 	db	110	;'n'
  9853  00F408  64                 	db	100	;'d'
  9854  00F409  20                 	db	32
  9855  00F40A  6E                 	db	110	;'n'
  9856  00F40B  65                 	db	101	;'e'
  9857  00F40C  75                 	db	117	;'u'
  9858  00F40D  74                 	db	116	;'t'
  9859  00F40E  72                 	db	114	;'r'
  9860  00F40F  61                 	db	97	;'a'
  9861  00F410  6C                 	db	108	;'l'
  9862  00F411  20                 	db	32
  9863  00F412  72                 	db	114	;'r'
  9864  00F413  65                 	db	101	;'e'
  9865  00F414  73                 	db	115	;'s'
  9866  00F415  70                 	db	112	;'p'
  9867  00F416  6F                 	db	111	;'o'
  9868  00F417  6E                 	db	110	;'n'
  9869  00F418  73                 	db	115	;'s'
  9870  00F419  65                 	db	101	;'e'
  9871  00F41A  73                 	db	115	;'s'
  9872  00F41B  20                 	db	32
  9873  00F41C  61                 	db	97	;'a'
  9874  00F41D  70                 	db	112	;'p'
  9875  00F41E  70                 	db	112	;'p'
  9876  00F41F  65                 	db	101	;'e'
  9877  00F420  61                 	db	97	;'a'
  9878  00F421  72                 	db	114	;'r'
  9879  00F422  20                 	db	32
  9880  00F423  69                 	db	105	;'i'
  9881  00F424  6E                 	db	110	;'n'
  9882  00F425  20                 	db	32
  9883  00F426  79                 	db	121	;'y'
  9884  00F427  65                 	db	101	;'e'
  9885  00F428  6C                 	db	108	;'l'
  9886  00F429  6C                 	db	108	;'l'
  9887  00F42A  6F                 	db	111	;'o'
  9888  00F42B  77                 	db	119	;'w'
  9889  00F42C  0A                 	db	10
  9890  00F42D  0D                 	db	13
  9891  00F42E  00                 	db	0
  9892  00F42F                     STR_152:
  9893  00F42F  4D                 	db	77	;'M'
  9894  00F430  61                 	db	97	;'a'
  9895  00F431  78                 	db	120	;'x'
  9896  00F432  69                 	db	105	;'i'
  9897  00F433  6D                 	db	109	;'m'
  9898  00F434  75                 	db	117	;'u'
  9899  00F435  6D                 	db	109	;'m'
  9900  00F436  20                 	db	32
  9901  00F437  72                 	db	114	;'r'
  9902  00F438  65                 	db	101	;'e'
  9903  00F439  63                 	db	99	;'c'
  9904  00F43A  6F                 	db	111	;'o'
  9905  00F43B  72                 	db	114	;'r'
  9906  00F43C  64                 	db	100	;'d'
  9907  00F43D  65                 	db	101	;'e'
  9908  00F43E  64                 	db	100	;'d'
  9909  00F43F  20                 	db	32
  9910  00F440  76                 	db	118	;'v'
  9911  00F441  61                 	db	97	;'a'
  9912  00F442  6C                 	db	108	;'l'
  9913  00F443  75                 	db	117	;'u'
  9914  00F444  65                 	db	101	;'e'
  9915  00F445  73                 	db	115	;'s'
  9916  00F446  20                 	db	32
  9917  00F447  65                 	db	101	;'e'
  9918  00F448  72                 	db	114	;'r'
  9919  00F449  61                 	db	97	;'a'
  9920  00F44A  73                 	db	115	;'s'
  9921  00F44B  65                 	db	101	;'e'
  9922  00F44C  64                 	db	100	;'d'
  9923  00F44D  20                 	db	32
  9924  00F44E  66                 	db	102	;'f'
  9925  00F44F  72                 	db	114	;'r'
  9926  00F450  6F                 	db	111	;'o'
  9927  00F451  6D                 	db	109	;'m'
  9928  00F452  20                 	db	32
  9929  00F453  53                 	db	83	;'S'
  9930  00F454  52                 	db	82	;'R'
  9931  00F455  41                 	db	65	;'A'
  9932  00F456  4D                 	db	77	;'M'
  9933  00F457  20                 	db	32
  9934  00F458  61                 	db	97	;'a'
  9935  00F459  6E                 	db	110	;'n'
  9936  00F45A  64                 	db	100	;'d'
  9937  00F45B  20                 	db	32
  9938  00F45C  45                 	db	69	;'E'
  9939  00F45D  45                 	db	69	;'E'
  9940  00F45E  50                 	db	80	;'P'
  9941  00F45F  52                 	db	82	;'R'
  9942  00F460  4F                 	db	79	;'O'
  9943  00F461  4D                 	db	77	;'M'
  9944  00F462  0A                 	db	10
  9945  00F463  0D                 	db	13
  9946  00F464  00                 	db	0
  9947  00F465                     STR_63:
  9948  00F465  20                 	db	32
  9949  00F466  20                 	db	32
  9950  00F467  20                 	db	32
  9951  00F468  20                 	db	32
  9952  00F469  55                 	db	85	;'U'
  9953  00F46A  73                 	db	115	;'s'
  9954  00F46B  65                 	db	101	;'e'
  9955  00F46C  72                 	db	114	;'r'
  9956  00F46D  20                 	db	32
  9957  00F46E  49                 	db	73	;'I'
  9958  00F46F  44                 	db	68	;'D'
  9959  00F470  20                 	db	32
  9960  00F471  57                 	db	87	;'W'
  9961  00F472  6F                 	db	111	;'o'
  9962  00F473  72                 	db	114	;'r'
  9963  00F474  64                 	db	100	;'d'
  9964  00F475  20                 	db	32
  9965  00F476  25                 	db	37
  9966  00F477  64                 	db	100	;'d'
  9967  00F478  20                 	db	32
  9968  00F479  28                 	db	40
  9969  00F47A  46                 	db	70	;'F'
  9970  00F47B  6C                 	db	108	;'l'
  9971  00F47C  61                 	db	97	;'a'
  9972  00F47D  73                 	db	115	;'s'
  9973  00F47E  68                 	db	104	;'h'
  9974  00F47F  20                 	db	32
  9975  00F480  61                 	db	97	;'a'
  9976  00F481  64                 	db	100	;'d'
  9977  00F482  64                 	db	100	;'d'
  9978  00F483  72                 	db	114	;'r'
  9979  00F484  65                 	db	101	;'e'
  9980  00F485  73                 	db	115	;'s'
  9981  00F486  73                 	db	115	;'s'
  9982  00F487  20                 	db	32
  9983  00F488  30                 	db	48	;'0'
  9984  00F489  78                 	db	120	;'x'
  9985  00F48A  32                 	db	50	;'2'
  9986  00F48B  30                 	db	48	;'0'
  9987  00F48C  30                 	db	48	;'0'
  9988  00F48D  30                 	db	48	;'0'
  9989  00F48E  30                 	db	48	;'0'
  9990  00F48F  25                 	db	37
  9991  00F490  58                 	db	88	;'X'
  9992  00F491  29                 	db	41
  9993  00F492  3A                 	db	58	;':'
  9994  00F493  20                 	db	32
  9995  00F494  30                 	db	48	;'0'
  9996  00F495  78                 	db	120	;'x'
  9997  00F496  25                 	db	37
  9998  00F497  58                 	db	88	;'X'
  9999  00F498  0A                 	db	10
 10000  00F499  0D                 	db	13
 10001  00F49A  00                 	db	0
 10002  00F49B                     STR_150:
 10003  00F49B  4D                 	db	77	;'M'
 10004  00F49C  61                 	db	97	;'a'
 10005  00F49D  78                 	db	120	;'x'
 10006  00F49E  69                 	db	105	;'i'
 10007  00F49F  6D                 	db	109	;'m'
 10008  00F4A0  75                 	db	117	;'u'
 10009  00F4A1  6D                 	db	109	;'m'
 10010  00F4A2  20                 	db	32
 10011  00F4A3  72                 	db	114	;'r'
 10012  00F4A4  65                 	db	101	;'e'
 10013  00F4A5  63                 	db	99	;'c'
 10014  00F4A6  6F                 	db	111	;'o'
 10015  00F4A7  72                 	db	114	;'r'
 10016  00F4A8  64                 	db	100	;'d'
 10017  00F4A9  65                 	db	101	;'e'
 10018  00F4AA  64                 	db	100	;'d'
 10019  00F4AB  20                 	db	32
 10020  00F4AC  46                 	db	70	;'F'
 10021  00F4AD  56                 	db	86	;'V'
 10022  00F4AE  52                 	db	82	;'R'
 10023  00F4AF  20                 	db	32
 10024  00F4B0  62                 	db	98	;'b'
 10025  00F4B1  75                 	db	117	;'u'
 10026  00F4B2  66                 	db	102	;'f'
 10027  00F4B3  66                 	db	102	;'f'
 10028  00F4B4  65                 	db	101	;'e'
 10029  00F4B5  72                 	db	114	;'r'
 10030  00F4B6  20                 	db	32
 10031  00F4B7  31                 	db	49	;'1'
 10032  00F4B8  20                 	db	32
 10033  00F4B9  76                 	db	118	;'v'
 10034  00F4BA  6F                 	db	111	;'o'
 10035  00F4BB  6C                 	db	108	;'l'
 10036  00F4BC  74                 	db	116	;'t'
 10037  00F4BD  61                 	db	97	;'a'
 10038  00F4BE  67                 	db	103	;'g'
 10039  00F4BF  65                 	db	101	;'e'
 10040  00F4C0  20                 	db	32
 10041  00F4C1  69                 	db	105	;'i'
 10042  00F4C2  73                 	db	115	;'s'
 10043  00F4C3  20                 	db	32
 10044  00F4C4  25                 	db	37
 10045  00F4C5  2E                 	db	46
 10046  00F4C6  33                 	db	51	;'3'
 10047  00F4C7  66                 	db	102	;'f'
 10048  00F4C8  20                 	db	32
 10049  00F4C9  56                 	db	86	;'V'
 10050  00F4CA  6F                 	db	111	;'o'
 10051  00F4CB  6C                 	db	108	;'l'
 10052  00F4CC  74                 	db	116	;'t'
 10053  00F4CD  73                 	db	115	;'s'
 10054  00F4CE  0A                 	db	10
 10055  00F4CF  0D                 	db	13
 10056  00F4D0  00                 	db	0
 10057  00F4D1                     STR_112:
 10058  00F4D1  49                 	db	73	;'I'
 10059  00F4D2  66                 	db	102	;'f'
 10060  00F4D3  20                 	db	32
 10061  00F4D4  79                 	db	121	;'y'
 10062  00F4D5  65                 	db	101	;'e'
 10063  00F4D6  73                 	db	115	;'s'
 10064  00F4D7  2C                 	db	44
 10065  00F4D8  20                 	db	32
 10066  00F4D9  72                 	db	114	;'r'
 10067  00F4DA  65                 	db	101	;'e'
 10068  00F4DB  70                 	db	112	;'p'
 10069  00F4DC  6C                 	db	108	;'l'
 10070  00F4DD  79                 	db	121	;'y'
 10071  00F4DE  20                 	db	32
 10072  00F4DF  27                 	db	39
 10073  00F4E0  45                 	db	69	;'E'
 10074  00F4E1  6E                 	db	110	;'n'
 10075  00F4E2  61                 	db	97	;'a'
 10076  00F4E3  62                 	db	98	;'b'
 10077  00F4E4  6C                 	db	108	;'l'
 10078  00F4E5  65                 	db	101	;'e'
 10079  00F4E6  20                 	db	32
 10080  00F4E7  44                 	db	68	;'D'
 10081  00F4E8  69                 	db	105	;'i'
 10082  00F4E9  6D                 	db	109	;'m'
 10083  00F4EA  6D                 	db	109	;'m'
 10084  00F4EB  69                 	db	105	;'i'
 10085  00F4EC  6E                 	db	110	;'n'
 10086  00F4ED  67                 	db	103	;'g'
 10087  00F4EE  20                 	db	32
 10088  00F4EF  59                 	db	89	;'Y'
 10089  00F4F0  27                 	db	39
 10090  00F4F1  20                 	db	32
 10091  00F4F2  6F                 	db	111	;'o'
 10092  00F4F3  6E                 	db	110	;'n'
 10093  00F4F4  20                 	db	32
 10094  00F4F5  74                 	db	116	;'t'
 10095  00F4F6  68                 	db	104	;'h'
 10096  00F4F7  65                 	db	101	;'e'
 10097  00F4F8  20                 	db	32
 10098  00F4F9  6E                 	db	110	;'n'
 10099  00F4FA  65                 	db	101	;'e'
 10100  00F4FB  78                 	db	120	;'x'
 10101  00F4FC  74                 	db	116	;'t'
 10102  00F4FD  20                 	db	32
 10103  00F4FE  6C                 	db	108	;'l'
 10104  00F4FF  69                 	db	105	;'i'
 10105  00F500  6E                 	db	110	;'n'
 10106  00F501  65                 	db	101	;'e'
 10107  00F502  3A                 	db	58	;':'
 10108  00F503  0A                 	db	10
 10109  00F504  0D                 	db	13
 10110  00F505  00                 	db	0
 10111  00F506                     STR_124:
 10112  00F506  4C                 	db	76	;'L'
 10113  00F507  6F                 	db	111	;'o'
 10114  00F508  61                 	db	97	;'a'
 10115  00F509  64                 	db	100	;'d'
 10116  00F50A  20                 	db	32
 10117  00F50B  69                 	db	105	;'i'
 10118  00F50C  73                 	db	115	;'s'
 10119  00F50D  20                 	db	32
 10120  00F50E  63                 	db	99	;'c'
 10121  00F50F  75                 	db	117	;'u'
 10122  00F510  72                 	db	114	;'r'
 10123  00F511  72                 	db	114	;'r'
 10124  00F512  65                 	db	101	;'e'
 10125  00F513  6E                 	db	110	;'n'
 10126  00F514  74                 	db	116	;'t'
 10127  00F515  6C                 	db	108	;'l'
 10128  00F516  79                 	db	121	;'y'
 10129  00F517  20                 	db	32
 10130  00F518  65                 	db	101	;'e'
 10131  00F519  6E                 	db	110	;'n'
 10132  00F51A  61                 	db	97	;'a'
 10133  00F51B  62                 	db	98	;'b'
 10134  00F51C  6C                 	db	108	;'l'
 10135  00F51D  65                 	db	101	;'e'
 10136  00F51E  64                 	db	100	;'d'
 10137  00F51F  2C                 	db	44
 10138  00F520  20                 	db	32
 10139  00F521  62                 	db	98	;'b'
 10140  00F522  75                 	db	117	;'u'
 10141  00F523  74                 	db	116	;'t'
 10142  00F524  20                 	db	32
 10143  00F525  64                 	db	100	;'d'
 10144  00F526  69                 	db	105	;'i'
 10145  00F527  6D                 	db	109	;'m'
 10146  00F528  6D                 	db	109	;'m'
 10147  00F529  69                 	db	105	;'i'
 10148  00F52A  6E                 	db	110	;'n'
 10149  00F52B  67                 	db	103	;'g'
 10150  00F52C  20                 	db	32
 10151  00F52D  69                 	db	105	;'i'
 10152  00F52E  73                 	db	115	;'s'
 10153  00F52F  20                 	db	32
 10154  00F530  64                 	db	100	;'d'
 10155  00F531  69                 	db	105	;'i'
 10156  00F532  73                 	db	115	;'s'
 10157  00F533  61                 	db	97	;'a'
 10158  00F534  62                 	db	98	;'b'
 10159  00F535  6C                 	db	108	;'l'
 10160  00F536  65                 	db	101	;'e'
 10161  00F537  64                 	db	100	;'d'
 10162  00F538  0A                 	db	10
 10163  00F539  0D                 	db	13
 10164  00F53A  00                 	db	0
 10165  00F53B                     STR_138:
 10166  00F53B  4C                 	db	76	;'L'
 10167  00F53C  6F                 	db	111	;'o'
 10168  00F53D  61                 	db	97	;'a'
 10169  00F53E  64                 	db	100	;'d'
 10170  00F53F  20                 	db	32
 10171  00F540  6F                 	db	111	;'o'
 10172  00F541  6E                 	db	110	;'n'
 10173  00F542  20                 	db	32
 10174  00F543  74                 	db	116	;'t'
 10175  00F544  69                 	db	105	;'i'
 10176  00F545  6D                 	db	109	;'m'
 10177  00F546  65                 	db	101	;'e'
 10178  00F547  20                 	db	32
 10179  00F548  73                 	db	115	;'s'
 10180  00F549  69                 	db	105	;'i'
 10181  00F54A  6E                 	db	110	;'n'
 10182  00F54B  63                 	db	99	;'c'
 10183  00F54C  65                 	db	101	;'e'
 10184  00F54D  20                 	db	32
 10185  00F54E  6C                 	db	108	;'l'
 10186  00F54F  61                 	db	97	;'a'
 10187  00F550  73                 	db	115	;'s'
 10188  00F551  74                 	db	116	;'t'
 10189  00F552  20                 	db	32
 10190  00F553  64                 	db	100	;'d'
 10191  00F554  65                 	db	101	;'e'
 10192  00F555  76                 	db	118	;'v'
 10193  00F556  69                 	db	105	;'i'
 10194  00F557  63                 	db	99	;'c'
 10195  00F558  65                 	db	101	;'e'
 10196  00F559  20                 	db	32
 10197  00F55A  72                 	db	114	;'r'
 10198  00F55B  65                 	db	101	;'e'
 10199  00F55C  73                 	db	115	;'s'
 10200  00F55D  65                 	db	101	;'e'
 10201  00F55E  74                 	db	116	;'t'
 10202  00F55F  20                 	db	32
 10203  00F560  69                 	db	105	;'i'
 10204  00F561  73                 	db	115	;'s'
 10205  00F562  20                 	db	32
 10206  00F563  25                 	db	37
 10207  00F564  64                 	db	100	;'d'
 10208  00F565  20                 	db	32
 10209  00F566  73                 	db	115	;'s'
 10210  00F567  65                 	db	101	;'e'
 10211  00F568  63                 	db	99	;'c'
 10212  00F569  6F                 	db	111	;'o'
 10213  00F56A  6E                 	db	110	;'n'
 10214  00F56B  64                 	db	100	;'d'
 10215  00F56C  73                 	db	115	;'s'
 10216  00F56D  0A                 	db	10
 10217  00F56E  0D                 	db	13
 10218  00F56F  00                 	db	0
 10219  00F570                     STR_111:
 10220  00F570  41                 	db	65	;'A'
 10221  00F571  72                 	db	114	;'r'
 10222  00F572  65                 	db	101	;'e'
 10223  00F573  20                 	db	32
 10224  00F574  79                 	db	121	;'y'
 10225  00F575  6F                 	db	111	;'o'
 10226  00F576  75                 	db	117	;'u'
 10227  00F577  20                 	db	32
 10228  00F578  73                 	db	115	;'s'
 10229  00F579  75                 	db	117	;'u'
 10230  00F57A  72                 	db	114	;'r'
 10231  00F57B  65                 	db	101	;'e'
 10232  00F57C  20                 	db	32
 10233  00F57D  79                 	db	121	;'y'
 10234  00F57E  6F                 	db	111	;'o'
 10235  00F57F  75                 	db	117	;'u'
 10236  00F580  27                 	db	39
 10237  00F581  64                 	db	100	;'d'
 10238  00F582  20                 	db	32
 10239  00F583  6C                 	db	108	;'l'
 10240  00F584  69                 	db	105	;'i'
 10241  00F585  6B                 	db	107	;'k'
 10242  00F586  65                 	db	101	;'e'
 10243  00F587  20                 	db	32
 10244  00F588  74                 	db	116	;'t'
 10245  00F589  6F                 	db	111	;'o'
 10246  00F58A  20                 	db	32
 10247  00F58B  65                 	db	101	;'e'
 10248  00F58C  6E                 	db	110	;'n'
 10249  00F58D  61                 	db	97	;'a'
 10250  00F58E  62                 	db	98	;'b'
 10251  00F58F  6C                 	db	108	;'l'
 10252  00F590  65                 	db	101	;'e'
 10253  00F591  20                 	db	32
 10254  00F592  6F                 	db	111	;'o'
 10255  00F593  75                 	db	117	;'u'
 10256  00F594  74                 	db	116	;'t'
 10257  00F595  70                 	db	112	;'p'
 10258  00F596  75                 	db	117	;'u'
 10259  00F597  74                 	db	116	;'t'
 10260  00F598  20                 	db	32
 10261  00F599  64                 	db	100	;'d'
 10262  00F59A  69                 	db	105	;'i'
 10263  00F59B  6D                 	db	109	;'m'
 10264  00F59C  6D                 	db	109	;'m'
 10265  00F59D  69                 	db	105	;'i'
 10266  00F59E  6E                 	db	110	;'n'
 10267  00F59F  67                 	db	103	;'g'
 10268  00F5A0  3F                 	db	63	;'?'
 10269  00F5A1  0A                 	db	10
 10270  00F5A2  0D                 	db	13
 10271  00F5A3  00                 	db	0
 10272  00F5A4                     STR_52:
 10273  00F5A4  54                 	db	84	;'T'
 10274  00F5A5  68                 	db	104	;'h'
 10275  00F5A6  65                 	db	101	;'e'
 10276  00F5A7  20                 	db	32
 10277  00F5A8  63                 	db	99	;'c'
 10278  00F5A9  61                 	db	97	;'a'
 10279  00F5AA  75                 	db	117	;'u'
 10280  00F5AB  73                 	db	115	;'s'
 10281  00F5AC  65                 	db	101	;'e'
 10282  00F5AD  20                 	db	32
 10283  00F5AE  6F                 	db	111	;'o'
 10284  00F5AF  66                 	db	102	;'f'
 10285  00F5B0  20                 	db	32
 10286  00F5B1  74                 	db	116	;'t'
 10287  00F5B2  68                 	db	104	;'h'
 10288  00F5B3  65                 	db	101	;'e'
 10289  00F5B4  20                 	db	32
 10290  00F5B5  6D                 	db	109	;'m'
 10291  00F5B6  6F                 	db	111	;'o'
 10292  00F5B7  73                 	db	115	;'s'
 10293  00F5B8  74                 	db	116	;'t'
 10294  00F5B9  20                 	db	32
 10295  00F5BA  72                 	db	114	;'r'
 10296  00F5BB  65                 	db	101	;'e'
 10297  00F5BC  63                 	db	99	;'c'
 10298  00F5BD  65                 	db	101	;'e'
 10299  00F5BE  6E                 	db	110	;'n'
 10300  00F5BF  74                 	db	116	;'t'
 10301  00F5C0  20                 	db	32
 10302  00F5C1  64                 	db	100	;'d'
 10303  00F5C2  65                 	db	101	;'e'
 10304  00F5C3  76                 	db	118	;'v'
 10305  00F5C4  69                 	db	105	;'i'
 10306  00F5C5  63                 	db	99	;'c'
 10307  00F5C6  65                 	db	101	;'e'
 10308  00F5C7  20                 	db	32
 10309  00F5C8  72                 	db	114	;'r'
 10310  00F5C9  65                 	db	101	;'e'
 10311  00F5CA  73                 	db	115	;'s'
 10312  00F5CB  65                 	db	101	;'e'
 10313  00F5CC  74                 	db	116	;'t'
 10314  00F5CD  20                 	db	32
 10315  00F5CE  77                 	db	119	;'w'
 10316  00F5CF  61                 	db	97	;'a'
 10317  00F5D0  73                 	db	115	;'s'
 10318  00F5D1  3A                 	db	58	;':'
 10319  00F5D2  20                 	db	32
 10320  00F5D3  25                 	db	37
 10321  00F5D4  73                 	db	115	;'s'
 10322  00F5D5  0A                 	db	10
 10323  00F5D6  0D                 	db	13
 10324  00F5D7  00                 	db	0
 10325  00F5D8                     STR_144:
 10326  00F5D8  4D                 	db	77	;'M'
 10327  00F5D9  61                 	db	97	;'a'
 10328  00F5DA  78                 	db	120	;'x'
 10329  00F5DB  69                 	db	105	;'i'
 10330  00F5DC  6D                 	db	109	;'m'
 10331  00F5DD  75                 	db	117	;'u'
 10332  00F5DE  6D                 	db	109	;'m'
 10333  00F5DF  20                 	db	32
 10334  00F5E0  72                 	db	114	;'r'
 10335  00F5E1  65                 	db	101	;'e'
 10336  00F5E2  63                 	db	99	;'c'
 10337  00F5E3  6F                 	db	111	;'o'
 10338  00F5E4  72                 	db	114	;'r'
 10339  00F5E5  64                 	db	100	;'d'
 10340  00F5E6  65                 	db	101	;'e'
 10341  00F5E7  64                 	db	100	;'d'
 10342  00F5E8  20                 	db	32
 10343  00F5E9  2B                 	db	43
 10344  00F5EA  33                 	db	51	;'3'
 10345  00F5EB  2E                 	db	46
 10346  00F5EC  33                 	db	51	;'3'
 10347  00F5ED  56                 	db	86	;'V'
 10348  00F5EE  20                 	db	32
 10349  00F5EF  72                 	db	114	;'r'
 10350  00F5F0  61                 	db	97	;'a'
 10351  00F5F1  69                 	db	105	;'i'
 10352  00F5F2  6C                 	db	108	;'l'
 10353  00F5F3  20                 	db	32
 10354  00F5F4  76                 	db	118	;'v'
 10355  00F5F5  6F                 	db	111	;'o'
 10356  00F5F6  6C                 	db	108	;'l'
 10357  00F5F7  74                 	db	116	;'t'
 10358  00F5F8  61                 	db	97	;'a'
 10359  00F5F9  67                 	db	103	;'g'
 10360  00F5FA  65                 	db	101	;'e'
 10361  00F5FB  20                 	db	32
 10362  00F5FC  69                 	db	105	;'i'
 10363  00F5FD  73                 	db	115	;'s'
 10364  00F5FE  20                 	db	32
 10365  00F5FF  25                 	db	37
 10366  00F600  2E                 	db	46
 10367  00F601  33                 	db	51	;'3'
 10368  00F602  66                 	db	102	;'f'
 10369  00F603  20                 	db	32
 10370  00F604  56                 	db	86	;'V'
 10371  00F605  6F                 	db	111	;'o'
 10372  00F606  6C                 	db	108	;'l'
 10373  00F607  74                 	db	116	;'t'
 10374  00F608  73                 	db	115	;'s'
 10375  00F609  0A                 	db	10
 10376  00F60A  0D                 	db	13
 10377  00F60B  00                 	db	0
 10378  00F60C                     STR_140:
 10379  00F60C  4D                 	db	77	;'M'
 10380  00F60D  61                 	db	97	;'a'
 10381  00F60E  78                 	db	120	;'x'
 10382  00F60F  69                 	db	105	;'i'
 10383  00F610  6D                 	db	109	;'m'
 10384  00F611  75                 	db	117	;'u'
 10385  00F612  6D                 	db	109	;'m'
 10386  00F613  20                 	db	32
 10387  00F614  72                 	db	114	;'r'
 10388  00F615  65                 	db	101	;'e'
 10389  00F616  63                 	db	99	;'c'
 10390  00F617  6F                 	db	111	;'o'
 10391  00F618  72                 	db	114	;'r'
 10392  00F619  64                 	db	100	;'d'
 10393  00F61A  65                 	db	101	;'e'
 10394  00F61B  64                 	db	100	;'d'
 10395  00F61C  20                 	db	32
 10396  00F61D  52                 	db	82	;'R'
 10397  00F61E  4D                 	db	77	;'M'
 10398  00F61F  53                 	db	83	;'S'
 10399  00F620  20                 	db	32
 10400  00F621  6F                 	db	111	;'o'
 10401  00F622  75                 	db	117	;'u'
 10402  00F623  74                 	db	116	;'t'
 10403  00F624  70                 	db	112	;'p'
 10404  00F625  75                 	db	117	;'u'
 10405  00F626  74                 	db	116	;'t'
 10406  00F627  20                 	db	32
 10407  00F628  63                 	db	99	;'c'
 10408  00F629  75                 	db	117	;'u'
 10409  00F62A  72                 	db	114	;'r'
 10410  00F62B  72                 	db	114	;'r'
 10411  00F62C  65                 	db	101	;'e'
 10412  00F62D  6E                 	db	110	;'n'
 10413  00F62E  74                 	db	116	;'t'
 10414  00F62F  20                 	db	32
 10415  00F630  69                 	db	105	;'i'
 10416  00F631  73                 	db	115	;'s'
 10417  00F632  20                 	db	32
 10418  00F633  25                 	db	37
 10419  00F634  2E                 	db	46
 10420  00F635  33                 	db	51	;'3'
 10421  00F636  66                 	db	102	;'f'
 10422  00F637  20                 	db	32
 10423  00F638  41                 	db	65	;'A'
 10424  00F639  72                 	db	114	;'r'
 10425  00F63A  6D                 	db	109	;'m'
 10426  00F63B  73                 	db	115	;'s'
 10427  00F63C  0A                 	db	10
 10428  00F63D  0D                 	db	13
 10429  00F63E  00                 	db	0
 10430  00F63F                     STR_146:
 10431  00F63F  4D                 	db	77	;'M'
 10432  00F640  61                 	db	97	;'a'
 10433  00F641  78                 	db	120	;'x'
 10434  00F642  69                 	db	105	;'i'
 10435  00F643  6D                 	db	109	;'m'
 10436  00F644  75                 	db	117	;'u'
 10437  00F645  6D                 	db	109	;'m'
 10438  00F646  20                 	db	32
 10439  00F647  72                 	db	114	;'r'
 10440  00F648  65                 	db	101	;'e'
 10441  00F649  63                 	db	99	;'c'
 10442  00F64A  6F                 	db	111	;'o'
 10443  00F64B  72                 	db	114	;'r'
 10444  00F64C  64                 	db	100	;'d'
 10445  00F64D  65                 	db	101	;'e'
 10446  00F64E  64                 	db	100	;'d'
 10447  00F64F  20                 	db	32
 10448  00F650  2B                 	db	43
 10449  00F651  31                 	db	49	;'1'
 10450  00F652  32                 	db	50	;'2'
 10451  00F653  56                 	db	86	;'V'
 10452  00F654  20                 	db	32
 10453  00F655  72                 	db	114	;'r'
 10454  00F656  61                 	db	97	;'a'
 10455  00F657  69                 	db	105	;'i'
 10456  00F658  6C                 	db	108	;'l'
 10457  00F659  20                 	db	32
 10458  00F65A  76                 	db	118	;'v'
 10459  00F65B  6F                 	db	111	;'o'
 10460  00F65C  6C                 	db	108	;'l'
 10461  00F65D  74                 	db	116	;'t'
 10462  00F65E  61                 	db	97	;'a'
 10463  00F65F  67                 	db	103	;'g'
 10464  00F660  65                 	db	101	;'e'
 10465  00F661  20                 	db	32
 10466  00F662  69                 	db	105	;'i'
 10467  00F663  73                 	db	115	;'s'
 10468  00F664  20                 	db	32
 10469  00F665  25                 	db	37
 10470  00F666  2E                 	db	46
 10471  00F667  33                 	db	51	;'3'
 10472  00F668  66                 	db	102	;'f'
 10473  00F669  20                 	db	32
 10474  00F66A  56                 	db	86	;'V'
 10475  00F66B  6F                 	db	111	;'o'
 10476  00F66C  6C                 	db	108	;'l'
 10477  00F66D  74                 	db	116	;'t'
 10478  00F66E  73                 	db	115	;'s'
 10479  00F66F  0A                 	db	10
 10480  00F670  0D                 	db	13
 10481  00F671  00                 	db	0
 10482  00F672                     STR_74:
 10483  00F672  43                 	db	67	;'C'
 10484  00F673  61                 	db	97	;'a'
 10485  00F674  6C                 	db	108	;'l'
 10486  00F675  6C                 	db	108	;'l'
 10487  00F676  20                 	db	32
 10488  00F677  27                 	db	39
 10489  00F678  43                 	db	67	;'C'
 10490  00F679  6C                 	db	108	;'l'
 10491  00F67A  65                 	db	101	;'e'
 10492  00F67B  61                 	db	97	;'a'
 10493  00F67C  72                 	db	114	;'r'
 10494  00F67D  20                 	db	32
 10495  00F67E  41                 	db	65	;'A'
 10496  00F67F  44                 	db	68	;'D'
 10497  00F680  43                 	db	67	;'C'
 10498  00F681  20                 	db	32
 10499  00F682  45                 	db	69	;'E'
 10500  00F683  72                 	db	114	;'r'
 10501  00F684  72                 	db	114	;'r'
 10502  00F685  6F                 	db	111	;'o'
 10503  00F686  72                 	db	114	;'r'
 10504  00F687  73                 	db	115	;'s'
 10505  00F688  27                 	db	39
 10506  00F689  20                 	db	32
 10507  00F68A  74                 	db	116	;'t'
 10508  00F68B  6F                 	db	111	;'o'
 10509  00F68C  20                 	db	32
 10510  00F68D  63                 	db	99	;'c'
 10511  00F68E  6C                 	db	108	;'l'
 10512  00F68F  65                 	db	101	;'e'
 10513  00F690  61                 	db	97	;'a'
 10514  00F691  72                 	db	114	;'r'
 10515  00F692  20                 	db	32
 10516  00F693  41                 	db	65	;'A'
 10517  00F694  44                 	db	68	;'D'
 10518  00F695  43                 	db	67	;'C'
 10519  00F696  20                 	db	32
 10520  00F697  65                 	db	101	;'e'
 10521  00F698  72                 	db	114	;'r'
 10522  00F699  72                 	db	114	;'r'
 10523  00F69A  6F                 	db	111	;'o'
 10524  00F69B  72                 	db	114	;'r'
 10525  00F69C  28                 	db	40
 10526  00F69D  73                 	db	115	;'s'
 10527  00F69E  29                 	db	41
 10528  00F69F  0A                 	db	10
 10529  00F6A0  0D                 	db	13
 10530  00F6A1  00                 	db	0
 10531  00F6A2                     STR_56:
 10532  00F6A2  4D                 	db	77	;'M'
 10533  00F6A3  61                 	db	97	;'a'
 10534  00F6A4  72                 	db	114	;'r'
 10535  00F6A5  71                 	db	113	;'q'
 10536  00F6A6  75                 	db	117	;'u'
 10537  00F6A7  65                 	db	101	;'e'
 10538  00F6A8  74                 	db	116	;'t'
 10539  00F6A9  74                 	db	116	;'t'
 10540  00F6AA  65                 	db	101	;'e'
 10541  00F6AB  20                 	db	32
 10542  00F6AC  55                 	db	85	;'U'
 10543  00F6AD  6E                 	db	110	;'n'
 10544  00F6AE  69                 	db	105	;'i'
 10545  00F6AF  76                 	db	118	;'v'
 10546  00F6B0  65                 	db	101	;'e'
 10547  00F6B1  72                 	db	114	;'r'
 10548  00F6B2  73                 	db	115	;'s'
 10549  00F6B3  69                 	db	105	;'i'
 10550  00F6B4  74                 	db	116	;'t'
 10551  00F6B5  79                 	db	121	;'y'
 10552  00F6B6  20                 	db	32
 10553  00F6B7  45                 	db	69	;'E'
 10554  00F6B8  4C                 	db	76	;'L'
 10555  00F6B9  45                 	db	69	;'E'
 10556  00F6BA  4E                 	db	78	;'N'
 10557  00F6BB  20                 	db	32
 10558  00F6BC  33                 	db	51	;'3'
 10559  00F6BD  30                 	db	48	;'0'
 10560  00F6BE  33                 	db	51	;'3'
 10561  00F6BF  35                 	db	53	;'5'
 10562  00F6C0  20                 	db	32
 10563  00F6C1  46                 	db	70	;'F'
 10564  00F6C2  69                 	db	105	;'i'
 10565  00F6C3  6E                 	db	110	;'n'
 10566  00F6C4  61                 	db	97	;'a'
 10567  00F6C5  6C                 	db	108	;'l'
 10568  00F6C6  20                 	db	32
 10569  00F6C7  50                 	db	80	;'P'
 10570  00F6C8  72                 	db	114	;'r'
 10571  00F6C9  6F                 	db	111	;'o'
 10572  00F6CA  6A                 	db	106	;'j'
 10573  00F6CB  65                 	db	101	;'e'
 10574  00F6CC  63                 	db	99	;'c'
 10575  00F6CD  74                 	db	116	;'t'
 10576  00F6CE  0A                 	db	10
 10577  00F6CF  0D                 	db	13
 10578  00F6D0  00                 	db	0
 10579  00F6D1                     STR_66:
 10580  00F6D1  54                 	db	84	;'T'
 10581  00F6D2  68                 	db	104	;'h'
 10582  00F6D3  65                 	db	101	;'e'
 10583  00F6D4  20                 	db	32
 10584  00F6D5  66                 	db	102	;'f'
 10585  00F6D6  6F                 	db	111	;'o'
 10586  00F6D7  6C                 	db	108	;'l'
 10587  00F6D8  6C                 	db	108	;'l'
 10588  00F6D9  6F                 	db	111	;'o'
 10589  00F6DA  77                 	db	119	;'w'
 10590  00F6DB  69                 	db	105	;'i'
 10591  00F6DC  6E                 	db	110	;'n'
 10592  00F6DD  67                 	db	103	;'g'
 10593  00F6DE  20                 	db	32
 10594  00F6DF  63                 	db	99	;'c'
 10595  00F6E0  68                 	db	104	;'h'
 10596  00F6E1  61                 	db	97	;'a'
 10597  00F6E2  6E                 	db	110	;'n'
 10598  00F6E3  6E                 	db	110	;'n'
 10599  00F6E4  65                 	db	101	;'e'
 10600  00F6E5  6C                 	db	108	;'l'
 10601  00F6E6  73                 	db	115	;'s'
 10602  00F6E7  20                 	db	32
 10603  00F6E8  63                 	db	99	;'c'
 10604  00F6E9  61                 	db	97	;'a'
 10605  00F6EA  75                 	db	117	;'u'
 10606  00F6EB  73                 	db	115	;'s'
 10607  00F6EC  65                 	db	101	;'e'
 10608  00F6ED  64                 	db	100	;'d'
 10609  00F6EE  20                 	db	32
 10610  00F6EF  61                 	db	97	;'a'
 10611  00F6F0  6E                 	db	110	;'n'
 10612  00F6F1  20                 	db	32
 10613  00F6F2  41                 	db	65	;'A'
 10614  00F6F3  44                 	db	68	;'D'
 10615  00F6F4  43                 	db	67	;'C'
 10616  00F6F5  20                 	db	32
 10617  00F6F6  65                 	db	101	;'e'
 10618  00F6F7  72                 	db	114	;'r'
 10619  00F6F8  72                 	db	114	;'r'
 10620  00F6F9  6F                 	db	111	;'o'
 10621  00F6FA  72                 	db	114	;'r'
 10622  00F6FB  3A                 	db	58	;':'
 10623  00F6FC  0A                 	db	10
 10624  00F6FD  0D                 	db	13
 10625  00F6FE  00                 	db	0
 10626  00F6FF                     STR_168:
 10627  00F6FF  45                 	db	69	;'E'
 10628  00F700  72                 	db	114	;'r'
 10629  00F701  72                 	db	114	;'r'
 10630  00F702  6F                 	db	111	;'o'
 10631  00F703  72                 	db	114	;'r'
 10632  00F704  73                 	db	115	;'s'
 10633  00F705  20                 	db	32
 10634  00F706  61                 	db	97	;'a'
 10635  00F707  6E                 	db	110	;'n'
 10636  00F708  64                 	db	100	;'d'
 10637  00F709  20                 	db	32
 10638  00F70A  6E                 	db	110	;'n'
 10639  00F70B  65                 	db	101	;'e'
 10640  00F70C  67                 	db	103	;'g'
 10641  00F70D  61                 	db	97	;'a'
 10642  00F70E  74                 	db	116	;'t'
 10643  00F70F  69                 	db	105	;'i'
 10644  00F710  76                 	db	118	;'v'
 10645  00F711  65                 	db	101	;'e'
 10646  00F712  20                 	db	32
 10647  00F713  72                 	db	114	;'r'
 10648  00F714  65                 	db	101	;'e'
 10649  00F715  73                 	db	115	;'s'
 10650  00F716  70                 	db	112	;'p'
 10651  00F717  6F                 	db	111	;'o'
 10652  00F718  6E                 	db	110	;'n'
 10653  00F719  73                 	db	115	;'s'
 10654  00F71A  65                 	db	101	;'e'
 10655  00F71B  73                 	db	115	;'s'
 10656  00F71C  20                 	db	32
 10657  00F71D  61                 	db	97	;'a'
 10658  00F71E  70                 	db	112	;'p'
 10659  00F71F  70                 	db	112	;'p'
 10660  00F720  65                 	db	101	;'e'
 10661  00F721  61                 	db	97	;'a'
 10662  00F722  72                 	db	114	;'r'
 10663  00F723  20                 	db	32
 10664  00F724  69                 	db	105	;'i'
 10665  00F725  6E                 	db	110	;'n'
 10666  00F726  20                 	db	32
 10667  00F727  72                 	db	114	;'r'
 10668  00F728  65                 	db	101	;'e'
 10669  00F729  64                 	db	100	;'d'
 10670  00F72A  0A                 	db	10
 10671  00F72B  0D                 	db	13
 10672  00F72C  00                 	db	0
 10673  00F72D                     STR_131:
 10674  00F72D  45                 	db	69	;'E'
 10675  00F72E  6E                 	db	110	;'n'
 10676  00F72F  74                 	db	116	;'t'
 10677  00F730  65                 	db	101	;'e'
 10678  00F731  72                 	db	114	;'r'
 10679  00F732  20                 	db	32
 10680  00F733  27                 	db	39
 10681  00F734  48                 	db	72	;'H'
 10682  00F735  65                 	db	101	;'e'
 10683  00F736  6C                 	db	108	;'l'
 10684  00F737  70                 	db	112	;'p'
 10685  00F738  27                 	db	39
 10686  00F739  20                 	db	32
 10687  00F73A  66                 	db	102	;'f'
 10688  00F73B  6F                 	db	111	;'o'
 10689  00F73C  72                 	db	114	;'r'
 10690  00F73D  20                 	db	32
 10691  00F73E  6C                 	db	108	;'l'
 10692  00F73F  69                 	db	105	;'i'
 10693  00F740  73                 	db	115	;'s'
 10694  00F741  74                 	db	116	;'t'
 10695  00F742  20                 	db	32
 10696  00F743  6F                 	db	111	;'o'
 10697  00F744  66                 	db	102	;'f'
 10698  00F745  20                 	db	32
 10699  00F746  61                 	db	97	;'a'
 10700  00F747  76                 	db	118	;'v'
 10701  00F748  61                 	db	97	;'a'
 10702  00F749  69                 	db	105	;'i'
 10703  00F74A  6C                 	db	108	;'l'
 10704  00F74B  61                 	db	97	;'a'
 10705  00F74C  62                 	db	98	;'b'
 10706  00F74D  6C                 	db	108	;'l'
 10707  00F74E  65                 	db	101	;'e'
 10708  00F74F  20                 	db	32
 10709  00F750  63                 	db	99	;'c'
 10710  00F751  6F                 	db	111	;'o'
 10711  00F752  6D                 	db	109	;'m'
 10712  00F753  6D                 	db	109	;'m'
 10713  00F754  61                 	db	97	;'a'
 10714  00F755  6E                 	db	110	;'n'
 10715  00F756  64                 	db	100	;'d'
 10716  00F757  73                 	db	115	;'s'
 10717  00F758  0A                 	db	10
 10718  00F759  0D                 	db	13
 10719  00F75A  00                 	db	0
 10720  00F75B                     STR_142:
 10721  00F75B  4D                 	db	77	;'M'
 10722  00F75C  61                 	db	97	;'a'
 10723  00F75D  78                 	db	120	;'x'
 10724  00F75E  69                 	db	105	;'i'
 10725  00F75F  6D                 	db	109	;'m'
 10726  00F760  75                 	db	117	;'u'
 10727  00F761  6D                 	db	109	;'m'
 10728  00F762  20                 	db	32
 10729  00F763  72                 	db	114	;'r'
 10730  00F764  65                 	db	101	;'e'
 10731  00F765  63                 	db	99	;'c'
 10732  00F766  6F                 	db	111	;'o'
 10733  00F767  72                 	db	114	;'r'
 10734  00F768  64                 	db	100	;'d'
 10735  00F769  65                 	db	101	;'e'
 10736  00F76A  64                 	db	100	;'d'
 10737  00F76B  20                 	db	32
 10738  00F76C  6F                 	db	111	;'o'
 10739  00F76D  75                 	db	117	;'u'
 10740  00F76E  74                 	db	116	;'t'
 10741  00F76F  70                 	db	112	;'p'
 10742  00F770  75                 	db	117	;'u'
 10743  00F771  74                 	db	116	;'t'
 10744  00F772  20                 	db	32
 10745  00F773  70                 	db	112	;'p'
 10746  00F774  6F                 	db	111	;'o'
 10747  00F775  77                 	db	119	;'w'
 10748  00F776  65                 	db	101	;'e'
 10749  00F777  72                 	db	114	;'r'
 10750  00F778  20                 	db	32
 10751  00F779  69                 	db	105	;'i'
 10752  00F77A  73                 	db	115	;'s'
 10753  00F77B  20                 	db	32
 10754  00F77C  25                 	db	37
 10755  00F77D  2E                 	db	46
 10756  00F77E  33                 	db	51	;'3'
 10757  00F77F  66                 	db	102	;'f'
 10758  00F780  20                 	db	32
 10759  00F781  57                 	db	87	;'W'
 10760  00F782  61                 	db	97	;'a'
 10761  00F783  74                 	db	116	;'t'
 10762  00F784  74                 	db	116	;'t'
 10763  00F785  73                 	db	115	;'s'
 10764  00F786  0A                 	db	10
 10765  00F787  0D                 	db	13
 10766  00F788  00                 	db	0
 10767  00F789                     STR_148:
 10768  00F789  4D                 	db	77	;'M'
 10769  00F78A  61                 	db	97	;'a'
 10770  00F78B  78                 	db	120	;'x'
 10771  00F78C  69                 	db	105	;'i'
 10772  00F78D  6D                 	db	109	;'m'
 10773  00F78E  75                 	db	117	;'u'
 10774  00F78F  6D                 	db	109	;'m'
 10775  00F790  20                 	db	32
 10776  00F791  72                 	db	114	;'r'
 10777  00F792  65                 	db	101	;'e'
 10778  00F793  63                 	db	99	;'c'
 10779  00F794  6F                 	db	111	;'o'
 10780  00F795  72                 	db	114	;'r'
 10781  00F796  64                 	db	100	;'d'
 10782  00F797  65                 	db	101	;'e'
 10783  00F798  64                 	db	100	;'d'
 10784  00F799  20                 	db	32
 10785  00F79A  64                 	db	100	;'d'
 10786  00F79B  69                 	db	105	;'i'
 10787  00F79C  65                 	db	101	;'e'
 10788  00F79D  20                 	db	32
 10789  00F79E  74                 	db	116	;'t'
 10790  00F79F  65                 	db	101	;'e'
 10791  00F7A0  6D                 	db	109	;'m'
 10792  00F7A1  70                 	db	112	;'p'
 10793  00F7A2  65                 	db	101	;'e'
 10794  00F7A3  72                 	db	114	;'r'
 10795  00F7A4  61                 	db	97	;'a'
 10796  00F7A5  74                 	db	116	;'t'
 10797  00F7A6  75                 	db	117	;'u'
 10798  00F7A7  72                 	db	114	;'r'
 10799  00F7A8  65                 	db	101	;'e'
 10800  00F7A9  20                 	db	32
 10801  00F7AA  69                 	db	105	;'i'
 10802  00F7AB  73                 	db	115	;'s'
 10803  00F7AC  20                 	db	32
 10804  00F7AD  25                 	db	37
 10805  00F7AE  2E                 	db	46
 10806  00F7AF  33                 	db	51	;'3'
 10807  00F7B0  66                 	db	102	;'f'
 10808  00F7B1  20                 	db	32
 10809  00F7B2  43                 	db	67	;'C'
 10810  00F7B3  0A                 	db	10
 10811  00F7B4  0D                 	db	13
 10812  00F7B5  00                 	db	0
 10813  00F7B6                     STR_118:
 10814  00F7B6  4C                 	db	76	;'L'
 10815  00F7B7  6F                 	db	111	;'o'
 10816  00F7B8  61                 	db	97	;'a'
 10817  00F7B9  64                 	db	100	;'d'
 10818  00F7BA  20                 	db	32
 10819  00F7BB  68                 	db	104	;'h'
 10820  00F7BC  61                 	db	97	;'a'
 10821  00F7BD  73                 	db	115	;'s'
 10822  00F7BE  20                 	db	32
 10823  00F7BF  62                 	db	98	;'b'
 10824  00F7C0  65                 	db	101	;'e'
 10825  00F7C1  65                 	db	101	;'e'
 10826  00F7C2  6E                 	db	110	;'n'
 10827  00F7C3  20                 	db	32
 10828  00F7C4  65                 	db	101	;'e'
 10829  00F7C5  6E                 	db	110	;'n'
 10830  00F7C6  61                 	db	97	;'a'
 10831  00F7C7  62                 	db	98	;'b'
 10832  00F7C8  6C                 	db	108	;'l'
 10833  00F7C9  65                 	db	101	;'e'
 10834  00F7CA  64                 	db	100	;'d'
 10835  00F7CB  2C                 	db	44
 10836  00F7CC  20                 	db	32
 10837  00F7CD  64                 	db	100	;'d'
 10838  00F7CE  69                 	db	105	;'i'
 10839  00F7CF  6D                 	db	109	;'m'
 10840  00F7D0  6D                 	db	109	;'m'
 10841  00F7D1  69                 	db	105	;'i'
 10842  00F7D2  6E                 	db	110	;'n'
 10843  00F7D3  67                 	db	103	;'g'
 10844  00F7D4  20                 	db	32
 10845  00F7D5  64                 	db	100	;'d'
 10846  00F7D6  69                 	db	105	;'i'
 10847  00F7D7  73                 	db	115	;'s'
 10848  00F7D8  61                 	db	97	;'a'
 10849  00F7D9  62                 	db	98	;'b'
 10850  00F7DA  6C                 	db	108	;'l'
 10851  00F7DB  65                 	db	101	;'e'
 10852  00F7DC  64                 	db	100	;'d'
 10853  00F7DD  0A                 	db	10
 10854  00F7DE  0D                 	db	13
 10855  00F7DF  00                 	db	0
 10856  00F7E0                     STR_125:
 10857  00F7E0  4C                 	db	76	;'L'
 10858  00F7E1  6F                 	db	111	;'o'
 10859  00F7E2  61                 	db	97	;'a'
 10860  00F7E3  64                 	db	100	;'d'
 10861  00F7E4  20                 	db	32
 10862  00F7E5  61                 	db	97	;'a'
 10863  00F7E6  6E                 	db	110	;'n'
 10864  00F7E7  64                 	db	100	;'d'
 10865  00F7E8  20                 	db	32
 10866  00F7E9  64                 	db	100	;'d'
 10867  00F7EA  69                 	db	105	;'i'
 10868  00F7EB  6D                 	db	109	;'m'
 10869  00F7EC  6D                 	db	109	;'m'
 10870  00F7ED  69                 	db	105	;'i'
 10871  00F7EE  6E                 	db	110	;'n'
 10872  00F7EF  67                 	db	103	;'g'
 10873  00F7F0  20                 	db	32
 10874  00F7F1  61                 	db	97	;'a'
 10875  00F7F2  72                 	db	114	;'r'
 10876  00F7F3  65                 	db	101	;'e'
 10877  00F7F4  20                 	db	32
 10878  00F7F5  63                 	db	99	;'c'
 10879  00F7F6  75                 	db	117	;'u'
 10880  00F7F7  72                 	db	114	;'r'
 10881  00F7F8  72                 	db	114	;'r'
 10882  00F7F9  65                 	db	101	;'e'
 10883  00F7FA  6E                 	db	110	;'n'
 10884  00F7FB  74                 	db	116	;'t'
 10885  00F7FC  6C                 	db	108	;'l'
 10886  00F7FD  79                 	db	121	;'y'
 10887  00F7FE  20                 	db	32
 10888  00F7FF  64                 	db	100	;'d'
 10889  00F800  69                 	db	105	;'i'
 10890  00F801  73                 	db	115	;'s'
 10891  00F802  61                 	db	97	;'a'
 10892  00F803  62                 	db	98	;'b'
 10893  00F804  6C                 	db	108	;'l'
 10894  00F805  65                 	db	101	;'e'
 10895  00F806  64                 	db	100	;'d'
 10896  00F807  0A                 	db	10
 10897  00F808  0D                 	db	13
 10898  00F809  00                 	db	0
 10899  00F80A                     STR_184:
 10900  00F80A  57                 	db	87	;'W'
 10901  00F80B  69                 	db	105	;'i'
 10902  00F80C  6E                 	db	110	;'n'
 10903  00F80D  64                 	db	100	;'d'
 10904  00F80E  6F                 	db	111	;'o'
 10905  00F80F  77                 	db	119	;'w'
 10906  00F810  65                 	db	101	;'e'
 10907  00F811  64                 	db	100	;'d'
 10908  00F812  20                 	db	32
 10909  00F813  57                 	db	87	;'W'
 10910  00F814  61                 	db	97	;'a'
 10911  00F815  74                 	db	116	;'t'
 10912  00F816  63                 	db	99	;'c'
 10913  00F817  68                 	db	104	;'h'
 10914  00F818  20                 	db	32
 10915  00F819  44                 	db	68	;'D'
 10916  00F81A  6F                 	db	111	;'o'
 10917  00F81B  67                 	db	103	;'g'
 10918  00F81C  20                 	db	32
 10919  00F81D  54                 	db	84	;'T'
 10920  00F81E  69                 	db	105	;'i'
 10921  00F81F  6D                 	db	109	;'m'
 10922  00F820  65                 	db	101	;'e'
 10923  00F821  72                 	db	114	;'r'
 10924  00F822  20                 	db	32
 10925  00F823  56                 	db	86	;'V'
 10926  00F824  69                 	db	105	;'i'
 10927  00F825  6F                 	db	111	;'o'
 10928  00F826  6C                 	db	108	;'l'
 10929  00F827  61                 	db	97	;'a'
 10930  00F828  74                 	db	116	;'t'
 10931  00F829  69                 	db	105	;'i'
 10932  00F82A  6F                 	db	111	;'o'
 10933  00F82B  6E                 	db	110	;'n'
 10934  00F82C  20                 	db	32
 10935  00F82D  52                 	db	82	;'R'
 10936  00F82E  65                 	db	101	;'e'
 10937  00F82F  73                 	db	115	;'s'
 10938  00F830  65                 	db	101	;'e'
 10939  00F831  74                 	db	116	;'t'
 10940  00F832  00                 	db	0
 10941  00F833                     STR_116:
 10942  00F833  54                 	db	84	;'T'
 10943  00F834  52                 	db	82	;'R'
 10944  00F835  49                 	db	73	;'I'
 10945  00F836  41                 	db	65	;'A'
 10946  00F837  43                 	db	67	;'C'
 10947  00F838  20                 	db	32
 10948  00F839  6F                 	db	111	;'o'
 10949  00F83A  75                 	db	117	;'u'
 10950  00F83B  74                 	db	116	;'t'
 10951  00F83C  70                 	db	112	;'p'
 10952  00F83D  75                 	db	117	;'u'
 10953  00F83E  74                 	db	116	;'t'
 10954  00F83F  20                 	db	32
 10955  00F840  64                 	db	100	;'d'
 10956  00F841  69                 	db	105	;'i'
 10957  00F842  6D                 	db	109	;'m'
 10958  00F843  6D                 	db	109	;'m'
 10959  00F844  69                 	db	105	;'i'
 10960  00F845  6E                 	db	110	;'n'
 10961  00F846  67                 	db	103	;'g'
 10962  00F847  20                 	db	32
 10963  00F848  68                 	db	104	;'h'
 10964  00F849  61                 	db	97	;'a'
 10965  00F84A  73                 	db	115	;'s'
 10966  00F84B  20                 	db	32
 10967  00F84C  62                 	db	98	;'b'
 10968  00F84D  65                 	db	101	;'e'
 10969  00F84E  65                 	db	101	;'e'
 10970  00F84F  6E                 	db	110	;'n'
 10971  00F850  20                 	db	32
 10972  00F851  64                 	db	100	;'d'
 10973  00F852  69                 	db	105	;'i'
 10974  00F853  73                 	db	115	;'s'
 10975  00F854  61                 	db	97	;'a'
 10976  00F855  62                 	db	98	;'b'
 10977  00F856  6C                 	db	108	;'l'
 10978  00F857  65                 	db	101	;'e'
 10979  00F858  64                 	db	100	;'d'
 10980  00F859  0A                 	db	10
 10981  00F85A  0D                 	db	13
 10982  00F85B  00                 	db	0
 10983  00F85C                     STR_167:
 10984  00F85C  4D                 	db	77	;'M'
 10985  00F85D  65                 	db	101	;'e'
 10986  00F85E  61                 	db	97	;'a'
 10987  00F85F  73                 	db	115	;'s'
 10988  00F860  75                 	db	117	;'u'
 10989  00F861  72                 	db	114	;'r'
 10990  00F862  65                 	db	101	;'e'
 10991  00F863  6D                 	db	109	;'m'
 10992  00F864  65                 	db	101	;'e'
 10993  00F865  6E                 	db	110	;'n'
 10994  00F866  74                 	db	116	;'t'
 10995  00F867  20                 	db	32
 10996  00F868  72                 	db	114	;'r'
 10997  00F869  65                 	db	101	;'e'
 10998  00F86A  73                 	db	115	;'s'
 10999  00F86B  70                 	db	112	;'p'
 11000  00F86C  6F                 	db	111	;'o'
 11001  00F86D  6E                 	db	110	;'n'
 11002  00F86E  73                 	db	115	;'s'
 11003  00F86F  65                 	db	101	;'e'
 11004  00F870  73                 	db	115	;'s'
 11005  00F871  20                 	db	32
 11006  00F872  61                 	db	97	;'a'
 11007  00F873  70                 	db	112	;'p'
 11008  00F874  70                 	db	112	;'p'
 11009  00F875  65                 	db	101	;'e'
 11010  00F876  61                 	db	97	;'a'
 11011  00F877  72                 	db	114	;'r'
 11012  00F878  20                 	db	32
 11013  00F879  69                 	db	105	;'i'
 11014  00F87A  6E                 	db	110	;'n'
 11015  00F87B  20                 	db	32
 11016  00F87C  63                 	db	99	;'c'
 11017  00F87D  79                 	db	121	;'y'
 11018  00F87E  61                 	db	97	;'a'
 11019  00F87F  6E                 	db	110	;'n'
 11020  00F880  0A                 	db	10
 11021  00F881  0D                 	db	13
 11022  00F882  00                 	db	0
 11023  00F883                     STR_83:
 11024  00F883  4E                 	db	78	;'N'
 11025  00F884  6F                 	db	111	;'o'
 11026  00F885  20                 	db	32
 11027  00F886  63                 	db	99	;'c'
 11028  00F887  6F                 	db	111	;'o'
 11029  00F888  6D                 	db	109	;'m'
 11030  00F889  6D                 	db	109	;'m'
 11031  00F88A  75                 	db	117	;'u'
 11032  00F88B  6E                 	db	110	;'n'
 11033  00F88C  69                 	db	105	;'i'
 11034  00F88D  63                 	db	99	;'c'
 11035  00F88E  61                 	db	97	;'a'
 11036  00F88F  74                 	db	116	;'t'
 11037  00F890  69                 	db	105	;'i'
 11038  00F891  6F                 	db	111	;'o'
 11039  00F892  6E                 	db	110	;'n'
 11040  00F893  73                 	db	115	;'s'
 11041  00F894  20                 	db	32
 11042  00F895  65                 	db	101	;'e'
 11043  00F896  72                 	db	114	;'r'
 11044  00F897  72                 	db	114	;'r'
 11045  00F898  6F                 	db	111	;'o'
 11046  00F899  72                 	db	114	;'r'
 11047  00F89A  28                 	db	40
 11048  00F89B  73                 	db	115	;'s'
 11049  00F89C  29                 	db	41
 11050  00F89D  20                 	db	32
 11051  00F89E  64                 	db	100	;'d'
 11052  00F89F  65                 	db	101	;'e'
 11053  00F8A0  74                 	db	116	;'t'
 11054  00F8A1  65                 	db	101	;'e'
 11055  00F8A2  63                 	db	99	;'c'
 11056  00F8A3  74                 	db	116	;'t'
 11057  00F8A4  65                 	db	101	;'e'
 11058  00F8A5  64                 	db	100	;'d'
 11059  00F8A6  0A                 	db	10
 11060  00F8A7  0D                 	db	13
 11061  00F8A8  00                 	db	0
 11062  00F8A9                     STR_95:
 11063  00F8A9  41                 	db	65	;'A'
 11064  00F8AA  56                 	db	86	;'V'
 11065  00F8AB  53                 	db	83	;'S'
 11066  00F8AC  53                 	db	83	;'S'
 11067  00F8AD  20                 	db	32
 11068  00F8AE  6D                 	db	109	;'m'
 11069  00F8AF  65                 	db	101	;'e'
 11070  00F8B0  61                 	db	97	;'a'
 11071  00F8B1  73                 	db	115	;'s'
 11072  00F8B2  75                 	db	117	;'u'
 11073  00F8B3  72                 	db	114	;'r'
 11074  00F8B4  65                 	db	101	;'e'
 11075  00F8B5  64                 	db	100	;'d'
 11076  00F8B6  20                 	db	32
 11077  00F8B7  61                 	db	97	;'a'
 11078  00F8B8  73                 	db	115	;'s'
 11079  00F8B9  20                 	db	32
 11080  00F8BA  25                 	db	37
 11081  00F8BB  2E                 	db	46
 11082  00F8BC  33                 	db	51	;'3'
 11083  00F8BD  66                 	db	102	;'f'
 11084  00F8BE  20                 	db	32
 11085  00F8BF  56                 	db	86	;'V'
 11086  00F8C0  6F                 	db	111	;'o'
 11087  00F8C1  6C                 	db	108	;'l'
 11088  00F8C2  74                 	db	116	;'t'
 11089  00F8C3  73                 	db	115	;'s'
 11090  00F8C4  20                 	db	32
 11091  00F8C5  62                 	db	98	;'b'
 11092  00F8C6  79                 	db	121	;'y'
 11093  00F8C7  20                 	db	32
 11094  00F8C8  41                 	db	65	;'A'
 11095  00F8C9  44                 	db	68	;'D'
 11096  00F8CA  43                 	db	67	;'C'
 11097  00F8CB  0A                 	db	10
 11098  00F8CC  0D                 	db	13
 11099  00F8CD  00                 	db	0
 11100  00F8CE                     STR_87:
 11101  00F8CE  2B                 	db	43
 11102  00F8CF  33                 	db	51	;'3'
 11103  00F8D0  2E                 	db	46
 11104  00F8D1  33                 	db	51	;'3'
 11105  00F8D2  56                 	db	86	;'V'
 11106  00F8D3  20                 	db	32
 11107  00F8D4  72                 	db	114	;'r'
 11108  00F8D5  61                 	db	97	;'a'
 11109  00F8D6  69                 	db	105	;'i'
 11110  00F8D7  6C                 	db	108	;'l'
 11111  00F8D8  20                 	db	32
 11112  00F8D9  6D                 	db	109	;'m'
 11113  00F8DA  65                 	db	101	;'e'
 11114  00F8DB  61                 	db	97	;'a'
 11115  00F8DC  73                 	db	115	;'s'
 11116  00F8DD  75                 	db	117	;'u'
 11117  00F8DE  72                 	db	114	;'r'
 11118  00F8DF  65                 	db	101	;'e'
 11119  00F8E0  64                 	db	100	;'d'
 11120  00F8E1  20                 	db	32
 11121  00F8E2  61                 	db	97	;'a'
 11122  00F8E3  73                 	db	115	;'s'
 11123  00F8E4  20                 	db	32
 11124  00F8E5  2B                 	db	43
 11125  00F8E6  25                 	db	37
 11126  00F8E7  2E                 	db	46
 11127  00F8E8  33                 	db	51	;'3'
 11128  00F8E9  66                 	db	102	;'f'
 11129  00F8EA  20                 	db	32
 11130  00F8EB  56                 	db	86	;'V'
 11131  00F8EC  6F                 	db	111	;'o'
 11132  00F8ED  6C                 	db	108	;'l'
 11133  00F8EE  74                 	db	116	;'t'
 11134  00F8EF  73                 	db	115	;'s'
 11135  00F8F0  0A                 	db	10
 11136  00F8F1  0D                 	db	13
 11137  00F8F2  00                 	db	0
 11138  00F8F3                     STR_132:
 11139  00F8F3  44                 	db	68	;'D'
 11140  00F8F4  69                 	db	105	;'i'
 11141  00F8F5  6D                 	db	109	;'m'
 11142  00F8F6  6D                 	db	109	;'m'
 11143  00F8F7  69                 	db	105	;'i'
 11144  00F8F8  6E                 	db	110	;'n'
 11145  00F8F9  67                 	db	103	;'g'
 11146  00F8FA  20                 	db	32
 11147  00F8FB  68                 	db	104	;'h'
 11148  00F8FC  61                 	db	97	;'a'
 11149  00F8FD  73                 	db	115	;'s'
 11150  00F8FE  20                 	db	32
 11151  00F8FF  62                 	db	98	;'b'
 11152  00F900  65                 	db	101	;'e'
 11153  00F901  65                 	db	101	;'e'
 11154  00F902  6E                 	db	110	;'n'
 11155  00F903  20                 	db	32
 11156  00F904  73                 	db	115	;'s'
 11157  00F905  65                 	db	101	;'e'
 11158  00F906  74                 	db	116	;'t'
 11159  00F907  20                 	db	32
 11160  00F908  74                 	db	116	;'t'
 11161  00F909  6F                 	db	111	;'o'
 11162  00F90A  20                 	db	32
 11163  00F90B  25                 	db	37
 11164  00F90C  64                 	db	100	;'d'
 11165  00F90D  20                 	db	32
 11166  00F90E  70                 	db	112	;'p'
 11167  00F90F  65                 	db	101	;'e'
 11168  00F910  72                 	db	114	;'r'
 11169  00F911  63                 	db	99	;'c'
 11170  00F912  65                 	db	101	;'e'
 11171  00F913  6E                 	db	110	;'n'
 11172  00F914  74                 	db	116	;'t'
 11173  00F915  0A                 	db	10
 11174  00F916  0D                 	db	13
 11175  00F917  00                 	db	0
 11176  00F918                     STR_91:
 11177  00F918  44                 	db	68	;'D'
 11178  00F919  69                 	db	105	;'i'
 11179  00F91A  65                 	db	101	;'e'
 11180  00F91B  20                 	db	32
 11181  00F91C  54                 	db	84	;'T'
 11182  00F91D  65                 	db	101	;'e'
 11183  00F91E  6D                 	db	109	;'m'
 11184  00F91F  70                 	db	112	;'p'
 11185  00F920  65                 	db	101	;'e'
 11186  00F921  72                 	db	114	;'r'
 11187  00F922  61                 	db	97	;'a'
 11188  00F923  74                 	db	116	;'t'
 11189  00F924  75                 	db	117	;'u'
 11190  00F925  72                 	db	114	;'r'
 11191  00F926  65                 	db	101	;'e'
 11192  00F927  20                 	db	32
 11193  00F928  6D                 	db	109	;'m'
 11194  00F929  65                 	db	101	;'e'
 11195  00F92A  61                 	db	97	;'a'
 11196  00F92B  73                 	db	115	;'s'
 11197  00F92C  75                 	db	117	;'u'
 11198  00F92D  72                 	db	114	;'r'
 11199  00F92E  65                 	db	101	;'e'
 11200  00F92F  64                 	db	100	;'d'
 11201  00F930  20                 	db	32
 11202  00F931  61                 	db	97	;'a'
 11203  00F932  73                 	db	115	;'s'
 11204  00F933  20                 	db	32
 11205  00F934  25                 	db	37
 11206  00F935  2E                 	db	46
 11207  00F936  33                 	db	51	;'3'
 11208  00F937  66                 	db	102	;'f'
 11209  00F938  43                 	db	67	;'C'
 11210  00F939  0A                 	db	10
 11211  00F93A  0D                 	db	13
 11212  00F93B  00                 	db	0
 11213  00F93C                     STR_89:
 11214  00F93C  2B                 	db	43
 11215  00F93D  31                 	db	49	;'1'
 11216  00F93E  32                 	db	50	;'2'
 11217  00F93F  56                 	db	86	;'V'
 11218  00F940  20                 	db	32
 11219  00F941  72                 	db	114	;'r'
 11220  00F942  61                 	db	97	;'a'
 11221  00F943  69                 	db	105	;'i'
 11222  00F944  6C                 	db	108	;'l'
 11223  00F945  20                 	db	32
 11224  00F946  6D                 	db	109	;'m'
 11225  00F947  65                 	db	101	;'e'
 11226  00F948  61                 	db	97	;'a'
 11227  00F949  73                 	db	115	;'s'
 11228  00F94A  75                 	db	117	;'u'
 11229  00F94B  72                 	db	114	;'r'
 11230  00F94C  65                 	db	101	;'e'
 11231  00F94D  64                 	db	100	;'d'
 11232  00F94E  20                 	db	32
 11233  00F94F  61                 	db	97	;'a'
 11234  00F950  73                 	db	115	;'s'
 11235  00F951  20                 	db	32
 11236  00F952  2B                 	db	43
 11237  00F953  25                 	db	37
 11238  00F954  2E                 	db	46
 11239  00F955  33                 	db	51	;'3'
 11240  00F956  66                 	db	102	;'f'
 11241  00F957  20                 	db	32
 11242  00F958  56                 	db	86	;'V'
 11243  00F959  6F                 	db	111	;'o'
 11244  00F95A  6C                 	db	108	;'l'
 11245  00F95B  74                 	db	116	;'t'
 11246  00F95C  73                 	db	115	;'s'
 11247  00F95D  0A                 	db	10
 11248  00F95E  0D                 	db	13
 11249  00F95F  00                 	db	0
 11250  00F960                     STR_114:
 11251  00F960  4F                 	db	79	;'O'
 11252  00F961  75                 	db	117	;'u'
 11253  00F962  74                 	db	116	;'t'
 11254  00F963  70                 	db	112	;'p'
 11255  00F964  75                 	db	117	;'u'
 11256  00F965  74                 	db	116	;'t'
 11257  00F966  20                 	db	32
 11258  00F967  64                 	db	100	;'d'
 11259  00F968  69                 	db	105	;'i'
 11260  00F969  6D                 	db	109	;'m'
 11261  00F96A  6D                 	db	109	;'m'
 11262  00F96B  69                 	db	105	;'i'
 11263  00F96C  6E                 	db	110	;'n'
 11264  00F96D  67                 	db	103	;'g'
 11265  00F96E  20                 	db	32
 11266  00F96F  68                 	db	104	;'h'
 11267  00F970  61                 	db	97	;'a'
 11268  00F971  73                 	db	115	;'s'
 11269  00F972  20                 	db	32
 11270  00F973  62                 	db	98	;'b'
 11271  00F974  65                 	db	101	;'e'
 11272  00F975  65                 	db	101	;'e'
 11273  00F976  6E                 	db	110	;'n'
 11274  00F977  20                 	db	32
 11275  00F978  65                 	db	101	;'e'
 11276  00F979  6E                 	db	110	;'n'
 11277  00F97A  61                 	db	97	;'a'
 11278  00F97B  62                 	db	98	;'b'
 11279  00F97C  6C                 	db	108	;'l'
 11280  00F97D  65                 	db	101	;'e'
 11281  00F97E  64                 	db	100	;'d'
 11282  00F97F  0A                 	db	10
 11283  00F980  0D                 	db	13
 11284  00F981  00                 	db	0
 11285  00F982                     STR_85:
 11286  00F982  43                 	db	67	;'C'
 11287  00F983  6F                 	db	111	;'o'
 11288  00F984  6D                 	db	109	;'m'
 11289  00F985  6D                 	db	109	;'m'
 11290  00F986  75                 	db	117	;'u'
 11291  00F987  6E                 	db	110	;'n'
 11292  00F988  69                 	db	105	;'i'
 11293  00F989  63                 	db	99	;'c'
 11294  00F98A  61                 	db	97	;'a'
 11295  00F98B  74                 	db	116	;'t'
 11296  00F98C  69                 	db	105	;'i'
 11297  00F98D  6F                 	db	111	;'o'
 11298  00F98E  6E                 	db	110	;'n'
 11299  00F98F  73                 	db	115	;'s'
 11300  00F990  20                 	db	32
 11301  00F991  65                 	db	101	;'e'
 11302  00F992  72                 	db	114	;'r'
 11303  00F993  72                 	db	114	;'r'
 11304  00F994  6F                 	db	111	;'o'
 11305  00F995  72                 	db	114	;'r'
 11306  00F996  28                 	db	40
 11307  00F997  73                 	db	115	;'s'
 11308  00F998  29                 	db	41
 11309  00F999  20                 	db	32
 11310  00F99A  63                 	db	99	;'c'
 11311  00F99B  6C                 	db	108	;'l'
 11312  00F99C  65                 	db	101	;'e'
 11313  00F99D  61                 	db	97	;'a'
 11314  00F99E  72                 	db	114	;'r'
 11315  00F99F  65                 	db	101	;'e'
 11316  00F9A0  64                 	db	100	;'d'
 11317  00F9A1  0A                 	db	10
 11318  00F9A2  0D                 	db	13
 11319  00F9A3  00                 	db	0
 11320  00F9A4                     STR_99:
 11321  00F9A4  52                 	db	82	;'R'
 11322  00F9A5  4D                 	db	77	;'M'
 11323  00F9A6  53                 	db	83	;'S'
 11324  00F9A7  20                 	db	32
 11325  00F9A8  4F                 	db	79	;'O'
 11326  00F9A9  75                 	db	117	;'u'
 11327  00F9AA  74                 	db	116	;'t'
 11328  00F9AB  70                 	db	112	;'p'
 11329  00F9AC  75                 	db	117	;'u'
 11330  00F9AD  74                 	db	116	;'t'
 11331  00F9AE  20                 	db	32
 11332  00F9AF  43                 	db	67	;'C'
 11333  00F9B0  75                 	db	117	;'u'
 11334  00F9B1  72                 	db	114	;'r'
 11335  00F9B2  72                 	db	114	;'r'
 11336  00F9B3  65                 	db	101	;'e'
 11337  00F9B4  6E                 	db	110	;'n'
 11338  00F9B5  74                 	db	116	;'t'
 11339  00F9B6  20                 	db	32
 11340  00F9B7  69                 	db	105	;'i'
 11341  00F9B8  73                 	db	115	;'s'
 11342  00F9B9  20                 	db	32
 11343  00F9BA  25                 	db	37
 11344  00F9BB  2E                 	db	46
 11345  00F9BC  33                 	db	51	;'3'
 11346  00F9BD  66                 	db	102	;'f'
 11347  00F9BE  20                 	db	32
 11348  00F9BF  41                 	db	65	;'A'
 11349  00F9C0  72                 	db	114	;'r'
 11350  00F9C1  6D                 	db	109	;'m'
 11351  00F9C2  73                 	db	115	;'s'
 11352  00F9C3  0A                 	db	10
 11353  00F9C4  0D                 	db	13
 11354  00F9C5  00                 	db	0
 11355  00F9C6                     STR_101:
 11356  00F9C6  52                 	db	82	;'R'
 11357  00F9C7  4D                 	db	77	;'M'
 11358  00F9C8  53                 	db	83	;'S'
 11359  00F9C9  20                 	db	32
 11360  00F9CA  4F                 	db	79	;'O'
 11361  00F9CB  75                 	db	117	;'u'
 11362  00F9CC  74                 	db	116	;'t'
 11363  00F9CD  70                 	db	112	;'p'
 11364  00F9CE  75                 	db	117	;'u'
 11365  00F9CF  74                 	db	116	;'t'
 11366  00F9D0  20                 	db	32
 11367  00F9D1  56                 	db	86	;'V'
 11368  00F9D2  6F                 	db	111	;'o'
 11369  00F9D3  6C                 	db	108	;'l'
 11370  00F9D4  74                 	db	116	;'t'
 11371  00F9D5  61                 	db	97	;'a'
 11372  00F9D6  67                 	db	103	;'g'
 11373  00F9D7  65                 	db	101	;'e'
 11374  00F9D8  20                 	db	32
 11375  00F9D9  69                 	db	105	;'i'
 11376  00F9DA  73                 	db	115	;'s'
 11377  00F9DB  20                 	db	32
 11378  00F9DC  25                 	db	37
 11379  00F9DD  2E                 	db	46
 11380  00F9DE  33                 	db	51	;'3'
 11381  00F9DF  66                 	db	102	;'f'
 11382  00F9E0  20                 	db	32
 11383  00F9E1  56                 	db	86	;'V'
 11384  00F9E2  72                 	db	114	;'r'
 11385  00F9E3  6D                 	db	109	;'m'
 11386  00F9E4  73                 	db	115	;'s'
 11387  00F9E5  0A                 	db	10
 11388  00F9E6  0D                 	db	13
 11389  00F9E7  00                 	db	0
 11390  00F9E8                     STR_157:
 11391  00F9E8  48                 	db	72	;'H'
 11392  00F9E9  65                 	db	101	;'e'
 11393  00F9EA  6C                 	db	108	;'l'
 11394  00F9EB  70                 	db	112	;'p'
 11395  00F9EC  20                 	db	32
 11396  00F9ED  50                 	db	80	;'P'
 11397  00F9EE  72                 	db	114	;'r'
 11398  00F9EF  69                 	db	105	;'i'
 11399  00F9F0  6D                 	db	109	;'m'
 11400  00F9F1  61                 	db	97	;'a'
 11401  00F9F2  72                 	db	114	;'r'
 11402  00F9F3  79                 	db	121	;'y'
 11403  00F9F4  20                 	db	32
 11404  00F9F5  4D                 	db	77	;'M'
 11405  00F9F6  65                 	db	101	;'e'
 11406  00F9F7  61                 	db	97	;'a'
 11407  00F9F8  73                 	db	115	;'s'
 11408  00F9F9  75                 	db	117	;'u'
 11409  00F9FA  72                 	db	114	;'r'
 11410  00F9FB  65                 	db	101	;'e'
 11411  00F9FC  6D                 	db	109	;'m'
 11412  00F9FD  65                 	db	101	;'e'
 11413  00F9FE  6E                 	db	110	;'n'
 11414  00F9FF  74                 	db	116	;'t'
 11415  00FA00  20                 	db	32
 11416  00FA01  43                 	db	67	;'C'
 11417  00FA02  6F                 	db	111	;'o'
 11418  00FA03  6D                 	db	109	;'m'
 11419  00FA04  6D                 	db	109	;'m'
 11420  00FA05  61                 	db	97	;'a'
 11421  00FA06  6E                 	db	110	;'n'
 11422  00FA07  64                 	db	100	;'d'
 11423  00FA08  73                 	db	115	;'s'
 11424  00FA09  00                 	db	0
 11425  00FA0A                     STR_155:
 11426  00FA0A  48                 	db	72	;'H'
 11427  00FA0B  65                 	db	101	;'e'
 11428  00FA0C  6C                 	db	108	;'l'
 11429  00FA0D  70                 	db	112	;'p'
 11430  00FA0E  20                 	db	32
 11431  00FA0F  44                 	db	68	;'D'
 11432  00FA10  65                 	db	101	;'e'
 11433  00FA11  76                 	db	118	;'v'
 11434  00FA12  69                 	db	105	;'i'
 11435  00FA13  63                 	db	99	;'c'
 11436  00FA14  65                 	db	101	;'e'
 11437  00FA15  20                 	db	32
 11438  00FA16  4D                 	db	77	;'M'
 11439  00FA17  65                 	db	101	;'e'
 11440  00FA18  61                 	db	97	;'a'
 11441  00FA19  73                 	db	115	;'s'
 11442  00FA1A  75                 	db	117	;'u'
 11443  00FA1B  72                 	db	114	;'r'
 11444  00FA1C  65                 	db	101	;'e'
 11445  00FA1D  6D                 	db	109	;'m'
 11446  00FA1E  65                 	db	101	;'e'
 11447  00FA1F  6E                 	db	110	;'n'
 11448  00FA20  74                 	db	116	;'t'
 11449  00FA21  20                 	db	32
 11450  00FA22  43                 	db	67	;'C'
 11451  00FA23  6F                 	db	111	;'o'
 11452  00FA24  6D                 	db	109	;'m'
 11453  00FA25  6D                 	db	109	;'m'
 11454  00FA26  61                 	db	97	;'a'
 11455  00FA27  6E                 	db	110	;'n'
 11456  00FA28  64                 	db	100	;'d'
 11457  00FA29  73                 	db	115	;'s'
 11458  00FA2A  00                 	db	0
 11459  00FA2B                     STR_81:
 11460  00FA2B  20                 	db	32
 11461  00FA2C  20                 	db	32
 11462  00FA2D  20                 	db	32
 11463  00FA2E  20                 	db	32
 11464  00FA2F  55                 	db	85	;'U'
 11465  00FA30  53                 	db	83	;'S'
 11466  00FA31  42                 	db	66	;'B'
 11467  00FA32  20                 	db	32
 11468  00FA33  55                 	db	85	;'U'
 11469  00FA34  41                 	db	65	;'A'
 11470  00FA35  52                 	db	82	;'R'
 11471  00FA36  54                 	db	84	;'T'
 11472  00FA37  20                 	db	32
 11473  00FA38  28                 	db	40
 11474  00FA39  74                 	db	116	;'t'
 11475  00FA3A  68                 	db	104	;'h'
 11476  00FA3B  69                 	db	105	;'i'
 11477  00FA3C  73                 	db	115	;'s'
 11478  00FA3D  20                 	db	32
 11479  00FA3E  69                 	db	105	;'i'
 11480  00FA3F  6E                 	db	110	;'n'
 11481  00FA40  74                 	db	116	;'t'
 11482  00FA41  65                 	db	101	;'e'
 11483  00FA42  72                 	db	114	;'r'
 11484  00FA43  66                 	db	102	;'f'
 11485  00FA44  61                 	db	97	;'a'
 11486  00FA45  63                 	db	99	;'c'
 11487  00FA46  65                 	db	101	;'e'
 11488  00FA47  29                 	db	41
 11489  00FA48  0A                 	db	10
 11490  00FA49  0D                 	db	13
 11491  00FA4A  00                 	db	0
 11492  00FA4B                     STR_97:
 11493  00FA4B  4D                 	db	77	;'M'
 11494  00FA4C  65                 	db	101	;'e'
 11495  00FA4D  61                 	db	97	;'a'
 11496  00FA4E  73                 	db	115	;'s'
 11497  00FA4F  75                 	db	117	;'u'
 11498  00FA50  72                 	db	114	;'r'
 11499  00FA51  65                 	db	101	;'e'
 11500  00FA52  64                 	db	100	;'d'
 11501  00FA53  20                 	db	32
 11502  00FA54  43                 	db	67	;'C'
 11503  00FA55  75                 	db	117	;'u'
 11504  00FA56  72                 	db	114	;'r'
 11505  00FA57  72                 	db	114	;'r'
 11506  00FA58  65                 	db	101	;'e'
 11507  00FA59  6E                 	db	110	;'n'
 11508  00FA5A  74                 	db	116	;'t'
 11509  00FA5B  20                 	db	32
 11510  00FA5C  69                 	db	105	;'i'
 11511  00FA5D  73                 	db	115	;'s'
 11512  00FA5E  20                 	db	32
 11513  00FA5F  25                 	db	37
 11514  00FA60  2E                 	db	46
 11515  00FA61  33                 	db	51	;'3'
 11516  00FA62  66                 	db	102	;'f'
 11517  00FA63  20                 	db	32
 11518  00FA64  41                 	db	65	;'A'
 11519  00FA65  6D                 	db	109	;'m'
 11520  00FA66  70                 	db	112	;'p'
 11521  00FA67  73                 	db	115	;'s'
 11522  00FA68  0A                 	db	10
 11523  00FA69  0D                 	db	13
 11524  00FA6A  00                 	db	0
 11525  00FA6B                     STR_123:
 11526  00FA6B  44                 	db	68	;'D'
 11527  00FA6C  69                 	db	105	;'i'
 11528  00FA6D  6D                 	db	109	;'m'
 11529  00FA6E  6D                 	db	109	;'m'
 11530  00FA6F  69                 	db	105	;'i'
 11531  00FA70  6E                 	db	110	;'n'
 11532  00FA71  67                 	db	103	;'g'
 11533  00FA72  20                 	db	32
 11534  00FA73  69                 	db	105	;'i'
 11535  00FA74  73                 	db	115	;'s'
 11536  00FA75  20                 	db	32
 11537  00FA76  63                 	db	99	;'c'
 11538  00FA77  75                 	db	117	;'u'
 11539  00FA78  72                 	db	114	;'r'
 11540  00FA79  72                 	db	114	;'r'
 11541  00FA7A  65                 	db	101	;'e'
 11542  00FA7B  6E                 	db	110	;'n'
 11543  00FA7C  74                 	db	116	;'t'
 11544  00FA7D  6C                 	db	108	;'l'
 11545  00FA7E  79                 	db	121	;'y'
 11546  00FA7F  20                 	db	32
 11547  00FA80  65                 	db	101	;'e'
 11548  00FA81  6E                 	db	110	;'n'
 11549  00FA82  61                 	db	97	;'a'
 11550  00FA83  62                 	db	98	;'b'
 11551  00FA84  6C                 	db	108	;'l'
 11552  00FA85  65                 	db	101	;'e'
 11553  00FA86  64                 	db	100	;'d'
 11554  00FA87  0A                 	db	10
 11555  00FA88  0D                 	db	13
 11556  00FA89  00                 	db	0
 11557  00FA8A                     STR_174:
 11558  00FA8A  44                 	db	68	;'D'
 11559  00FA8B  72                 	db	114	;'r'
 11560  00FA8C  65                 	db	101	;'e'
 11561  00FA8D  77                 	db	119	;'w'
 11562  00FA8E  20                 	db	32
 11563  00FA8F  4D                 	db	77	;'M'
 11564  00FA90  61                 	db	97	;'a'
 11565  00FA91  61                 	db	97	;'a'
 11566  00FA92  74                 	db	116	;'t'
 11567  00FA93  6D                 	db	109	;'m'
 11568  00FA94  61                 	db	97	;'a'
 11569  00FA95  6E                 	db	110	;'n'
 11570  00FA96  20                 	db	32
 11571  00FA97  61                 	db	97	;'a'
 11572  00FA98  6E                 	db	110	;'n'
 11573  00FA99  64                 	db	100	;'d'
 11574  00FA9A  20                 	db	32
 11575  00FA9B  47                 	db	71	;'G'
 11576  00FA9C  61                 	db	97	;'a'
 11577  00FA9D  62                 	db	98	;'b'
 11578  00FA9E  65                 	db	101	;'e'
 11579  00FA9F  20                 	db	32
 11580  00FAA0  54                 	db	84	;'T'
 11581  00FAA1  68                 	db	104	;'h'
 11582  00FAA2  61                 	db	97	;'a'
 11583  00FAA3  6C                 	db	108	;'l'
 11584  00FAA4  6A                 	db	106	;'j'
 11585  00FAA5  69                 	db	105	;'i'
 11586  00FAA6  0A                 	db	10
 11587  00FAA7  0D                 	db	13
 11588  00FAA8  00                 	db	0
 11589  00FAA9                     STR_169:
 11590  00FAA9  55                 	db	85	;'U'
 11591  00FAAA  73                 	db	115	;'s'
 11592  00FAAB  65                 	db	101	;'e'
 11593  00FAAC  72                 	db	114	;'r'
 11594  00FAAD  20                 	db	32
 11595  00FAAE  69                 	db	105	;'i'
 11596  00FAAF  6E                 	db	110	;'n'
 11597  00FAB0  70                 	db	112	;'p'
 11598  00FAB1  75                 	db	117	;'u'
 11599  00FAB2  74                 	db	116	;'t'
 11600  00FAB3  20                 	db	32
 11601  00FAB4  61                 	db	97	;'a'
 11602  00FAB5  70                 	db	112	;'p'
 11603  00FAB6  70                 	db	112	;'p'
 11604  00FAB7  65                 	db	101	;'e'
 11605  00FAB8  61                 	db	97	;'a'
 11606  00FAB9  72                 	db	114	;'r'
 11607  00FABA  73                 	db	115	;'s'
 11608  00FABB  20                 	db	32
 11609  00FABC  69                 	db	105	;'i'
 11610  00FABD  6E                 	db	110	;'n'
 11611  00FABE  20                 	db	32
 11612  00FABF  77                 	db	119	;'w'
 11613  00FAC0  68                 	db	104	;'h'
 11614  00FAC1  69                 	db	105	;'i'
 11615  00FAC2  74                 	db	116	;'t'
 11616  00FAC3  65                 	db	101	;'e'
 11617  00FAC4  0A                 	db	10
 11618  00FAC5  0D                 	db	13
 11619  00FAC6  00                 	db	0
 11620  00FAC7                     STR_121:
 11621  00FAC7  4C                 	db	76	;'L'
 11622  00FAC8  6F                 	db	111	;'o'
 11623  00FAC9  61                 	db	97	;'a'
 11624  00FACA  64                 	db	100	;'d'
 11625  00FACB  20                 	db	32
 11626  00FACC  69                 	db	105	;'i'
 11627  00FACD  73                 	db	115	;'s'
 11628  00FACE  20                 	db	32
 11629  00FACF  63                 	db	99	;'c'
 11630  00FAD0  75                 	db	117	;'u'
 11631  00FAD1  72                 	db	114	;'r'
 11632  00FAD2  72                 	db	114	;'r'
 11633  00FAD3  65                 	db	101	;'e'
 11634  00FAD4  6E                 	db	110	;'n'
 11635  00FAD5  74                 	db	116	;'t'
 11636  00FAD6  6C                 	db	108	;'l'
 11637  00FAD7  79                 	db	121	;'y'
 11638  00FAD8  20                 	db	32
 11639  00FAD9  64                 	db	100	;'d'
 11640  00FADA  69                 	db	105	;'i'
 11641  00FADB  73                 	db	115	;'s'
 11642  00FADC  61                 	db	97	;'a'
 11643  00FADD  62                 	db	98	;'b'
 11644  00FADE  6C                 	db	108	;'l'
 11645  00FADF  65                 	db	101	;'e'
 11646  00FAE0  64                 	db	100	;'d'
 11647  00FAE1  0A                 	db	10
 11648  00FAE2  0D                 	db	13
 11649  00FAE3  00                 	db	0
 11650  00FAE4                     STR_153:
 11651  00FAE4  48                 	db	72	;'H'
 11652  00FAE5  65                 	db	101	;'e'
 11653  00FAE6  6C                 	db	108	;'l'
 11654  00FAE7  70                 	db	112	;'p'
 11655  00FAE8  20                 	db	32
 11656  00FAE9  44                 	db	68	;'D'
 11657  00FAEA  65                 	db	101	;'e'
 11658  00FAEB  76                 	db	118	;'v'
 11659  00FAEC  69                 	db	105	;'i'
 11660  00FAED  63                 	db	99	;'c'
 11661  00FAEE  65                 	db	101	;'e'
 11662  00FAEF  20                 	db	32
 11663  00FAF0  43                 	db	67	;'C'
 11664  00FAF1  6F                 	db	111	;'o'
 11665  00FAF2  6E                 	db	110	;'n'
 11666  00FAF3  74                 	db	116	;'t'
 11667  00FAF4  72                 	db	114	;'r'
 11668  00FAF5  6F                 	db	111	;'o'
 11669  00FAF6  6C                 	db	108	;'l'
 11670  00FAF7  20                 	db	32
 11671  00FAF8  43                 	db	67	;'C'
 11672  00FAF9  6F                 	db	111	;'o'
 11673  00FAFA  6D                 	db	109	;'m'
 11674  00FAFB  6D                 	db	109	;'m'
 11675  00FAFC  61                 	db	97	;'a'
 11676  00FAFD  6E                 	db	110	;'n'
 11677  00FAFE  64                 	db	100	;'d'
 11678  00FAFF  73                 	db	115	;'s'
 11679  00FB00  00                 	db	0
 11680  00FB01                     STR_159:
 11681  00FB01  48                 	db	72	;'H'
 11682  00FB02  65                 	db	101	;'e'
 11683  00FB03  6C                 	db	108	;'l'
 11684  00FB04  70                 	db	112	;'p'
 11685  00FB05  20                 	db	32
 11686  00FB06  4F                 	db	79	;'O'
 11687  00FB07  75                 	db	117	;'u'
 11688  00FB08  74                 	db	116	;'t'
 11689  00FB09  70                 	db	112	;'p'
 11690  00FB0A  75                 	db	117	;'u'
 11691  00FB0B  74                 	db	116	;'t'
 11692  00FB0C  20                 	db	32
 11693  00FB0D  43                 	db	67	;'C'
 11694  00FB0E  6F                 	db	111	;'o'
 11695  00FB0F  6E                 	db	110	;'n'
 11696  00FB10  74                 	db	116	;'t'
 11697  00FB11  72                 	db	114	;'r'
 11698  00FB12  6F                 	db	111	;'o'
 11699  00FB13  6C                 	db	108	;'l'
 11700  00FB14  20                 	db	32
 11701  00FB15  43                 	db	67	;'C'
 11702  00FB16  6F                 	db	111	;'o'
 11703  00FB17  6D                 	db	109	;'m'
 11704  00FB18  6D                 	db	109	;'m'
 11705  00FB19  61                 	db	97	;'a'
 11706  00FB1A  6E                 	db	110	;'n'
 11707  00FB1B  64                 	db	100	;'d'
 11708  00FB1C  73                 	db	115	;'s'
 11709  00FB1D  00                 	db	0
 11710  00FB1E                     STR_172:
 11711  00FB1E  4D                 	db	77	;'M'
 11712  00FB1F  61                 	db	97	;'a'
 11713  00FB20  72                 	db	114	;'r'
 11714  00FB21  71                 	db	113	;'q'
 11715  00FB22  75                 	db	117	;'u'
 11716  00FB23  65                 	db	101	;'e'
 11717  00FB24  74                 	db	116	;'t'
 11718  00FB25  74                 	db	116	;'t'
 11719  00FB26  65                 	db	101	;'e'
 11720  00FB27  20                 	db	32
 11721  00FB28  55                 	db	85	;'U'
 11722  00FB29  6E                 	db	110	;'n'
 11723  00FB2A  69                 	db	105	;'i'
 11724  00FB2B  76                 	db	118	;'v'
 11725  00FB2C  65                 	db	101	;'e'
 11726  00FB2D  72                 	db	114	;'r'
 11727  00FB2E  73                 	db	115	;'s'
 11728  00FB2F  69                 	db	105	;'i'
 11729  00FB30  74                 	db	116	;'t'
 11730  00FB31  79                 	db	121	;'y'
 11731  00FB32  20                 	db	32
 11732  00FB33  45                 	db	69	;'E'
 11733  00FB34  45                 	db	69	;'E'
 11734  00FB35  43                 	db	67	;'C'
 11735  00FB36  45                 	db	69	;'E'
 11736  00FB37  0A                 	db	10
 11737  00FB38  0D                 	db	13
 11738  00FB39  00                 	db	0
 11739  00FB3A                     STR_120:
 11740  00FB3A  4C                 	db	76	;'L'
 11741  00FB3B  6F                 	db	111	;'o'
 11742  00FB3C  61                 	db	97	;'a'
 11743  00FB3D  64                 	db	100	;'d'
 11744  00FB3E  20                 	db	32
 11745  00FB3F  69                 	db	105	;'i'
 11746  00FB40  73                 	db	115	;'s'
 11747  00FB41  20                 	db	32
 11748  00FB42  63                 	db	99	;'c'
 11749  00FB43  75                 	db	117	;'u'
 11750  00FB44  72                 	db	114	;'r'
 11751  00FB45  72                 	db	114	;'r'
 11752  00FB46  65                 	db	101	;'e'
 11753  00FB47  6E                 	db	110	;'n'
 11754  00FB48  74                 	db	116	;'t'
 11755  00FB49  6C                 	db	108	;'l'
 11756  00FB4A  79                 	db	121	;'y'
 11757  00FB4B  20                 	db	32
 11758  00FB4C  65                 	db	101	;'e'
 11759  00FB4D  6E                 	db	110	;'n'
 11760  00FB4E  61                 	db	97	;'a'
 11761  00FB4F  62                 	db	98	;'b'
 11762  00FB50  6C                 	db	108	;'l'
 11763  00FB51  65                 	db	101	;'e'
 11764  00FB52  64                 	db	100	;'d'
 11765  00FB53  0A                 	db	10
 11766  00FB54  0D                 	db	13
 11767  00FB55  00                 	db	0
 11768  00FB56                     STR_185:
 11769  00FB56  52                 	db	82	;'R'
 11770  00FB57  45                 	db	69	;'E'
 11771  00FB58  53                 	db	83	;'S'
 11772  00FB59  45                 	db	69	;'E'
 11773  00FB5A  54                 	db	84	;'T'
 11774  00FB5B  20                 	db	32
 11775  00FB5C  49                 	db	73	;'I'
 11776  00FB5D  6E                 	db	110	;'n'
 11777  00FB5E  73                 	db	115	;'s'
 11778  00FB5F  74                 	db	116	;'t'
 11779  00FB60  72                 	db	114	;'r'
 11780  00FB61  75                 	db	117	;'u'
 11781  00FB62  63                 	db	99	;'c'
 11782  00FB63  74                 	db	116	;'t'
 11783  00FB64  69                 	db	105	;'i'
 11784  00FB65  6F                 	db	111	;'o'
 11785  00FB66  6E                 	db	110	;'n'
 11786  00FB67  20                 	db	32
 11787  00FB68  45                 	db	69	;'E'
 11788  00FB69  78                 	db	120	;'x'
 11789  00FB6A  65                 	db	101	;'e'
 11790  00FB6B  63                 	db	99	;'c'
 11791  00FB6C  75                 	db	117	;'u'
 11792  00FB6D  74                 	db	116	;'t'
 11793  00FB6E  65                 	db	101	;'e'
 11794  00FB6F  64                 	db	100	;'d'
 11795  00FB70  00                 	db	0
 11796  00FB71                     STR_75:
 11797  00FB71  4E                 	db	78	;'N'
 11798  00FB72  6F                 	db	111	;'o'
 11799  00FB73  20                 	db	32
 11800  00FB74  41                 	db	65	;'A'
 11801  00FB75  44                 	db	68	;'D'
 11802  00FB76  43                 	db	67	;'C'
 11803  00FB77  20                 	db	32
 11804  00FB78  65                 	db	101	;'e'
 11805  00FB79  72                 	db	114	;'r'
 11806  00FB7A  72                 	db	114	;'r'
 11807  00FB7B  6F                 	db	111	;'o'
 11808  00FB7C  72                 	db	114	;'r'
 11809  00FB7D  28                 	db	40
 11810  00FB7E  73                 	db	115	;'s'
 11811  00FB7F  29                 	db	41
 11812  00FB80  20                 	db	32
 11813  00FB81  64                 	db	100	;'d'
 11814  00FB82  65                 	db	101	;'e'
 11815  00FB83  74                 	db	116	;'t'
 11816  00FB84  65                 	db	101	;'e'
 11817  00FB85  63                 	db	99	;'c'
 11818  00FB86  74                 	db	116	;'t'
 11819  00FB87  65                 	db	101	;'e'
 11820  00FB88  64                 	db	100	;'d'
 11821  00FB89  0A                 	db	10
 11822  00FB8A  0D                 	db	13
 11823  00FB8B  00                 	db	0
 11824  00FB8C                     STR_96:
 11825  00FB8C  4D                 	db	77	;'M'
 11826  00FB8D  65                 	db	101	;'e'
 11827  00FB8E  61                 	db	97	;'a'
 11828  00FB8F  73                 	db	115	;'s'
 11829  00FB90  75                 	db	117	;'u'
 11830  00FB91  72                 	db	114	;'r'
 11831  00FB92  65                 	db	101	;'e'
 11832  00FB93  20                 	db	32
 11833  00FB94  44                 	db	68	;'D'
 11834  00FB95  65                 	db	101	;'e'
 11835  00FB96  74                 	db	116	;'t'
 11836  00FB97  65                 	db	101	;'e'
 11837  00FB98  63                 	db	99	;'c'
 11838  00FB99  74                 	db	116	;'t'
 11839  00FB9A  65                 	db	101	;'e'
 11840  00FB9B  64                 	db	100	;'d'
 11841  00FB9C  20                 	db	32
 11842  00FB9D  43                 	db	67	;'C'
 11843  00FB9E  75                 	db	117	;'u'
 11844  00FB9F  72                 	db	114	;'r'
 11845  00FBA0  72                 	db	114	;'r'
 11846  00FBA1  65                 	db	101	;'e'
 11847  00FBA2  6E                 	db	110	;'n'
 11848  00FBA3  74                 	db	116	;'t'
 11849  00FBA4  3F                 	db	63	;'?'
 11850  00FBA5  00                 	db	0
 11851  00FBA6                     STR_65:
 11852  00FBA6  41                 	db	65	;'A'
 11853  00FBA7  44                 	db	68	;'D'
 11854  00FBA8  43                 	db	67	;'C'
 11855  00FBA9  20                 	db	32
 11856  00FBAA  65                 	db	101	;'e'
 11857  00FBAB  72                 	db	114	;'r'
 11858  00FBAC  72                 	db	114	;'r'
 11859  00FBAD  6F                 	db	111	;'o'
 11860  00FBAE  72                 	db	114	;'r'
 11861  00FBAF  28                 	db	40
 11862  00FBB0  73                 	db	115	;'s'
 11863  00FBB1  29                 	db	41
 11864  00FBB2  20                 	db	32
 11865  00FBB3  64                 	db	100	;'d'
 11866  00FBB4  65                 	db	101	;'e'
 11867  00FBB5  74                 	db	116	;'t'
 11868  00FBB6  65                 	db	101	;'e'
 11869  00FBB7  63                 	db	99	;'c'
 11870  00FBB8  74                 	db	116	;'t'
 11871  00FBB9  65                 	db	101	;'e'
 11872  00FBBA  64                 	db	100	;'d'
 11873  00FBBB  21                 	db	33
 11874  00FBBC  0A                 	db	10
 11875  00FBBD  0D                 	db	13
 11876  00FBBE  00                 	db	0
 11877  00FBBF                     STR_127:
 11878  00FBBF  4C                 	db	76	;'L'
 11879  00FBC0  6F                 	db	111	;'o'
 11880  00FBC1  61                 	db	97	;'a'
 11881  00FBC2  64                 	db	100	;'d'
 11882  00FBC3  20                 	db	32
 11883  00FBC4  68                 	db	104	;'h'
 11884  00FBC5  61                 	db	97	;'a'
 11885  00FBC6  73                 	db	115	;'s'
 11886  00FBC7  20                 	db	32
 11887  00FBC8  62                 	db	98	;'b'
 11888  00FBC9  65                 	db	101	;'e'
 11889  00FBCA  65                 	db	101	;'e'
 11890  00FBCB  6E                 	db	110	;'n'
 11891  00FBCC  20                 	db	32
 11892  00FBCD  64                 	db	100	;'d'
 11893  00FBCE  69                 	db	105	;'i'
 11894  00FBCF  73                 	db	115	;'s'
 11895  00FBD0  61                 	db	97	;'a'
 11896  00FBD1  62                 	db	98	;'b'
 11897  00FBD2  6C                 	db	108	;'l'
 11898  00FBD3  65                 	db	101	;'e'
 11899  00FBD4  64                 	db	100	;'d'
 11900  00FBD5  0A                 	db	10
 11901  00FBD6  0D                 	db	13
 11902  00FBD7  00                 	db	0
 11903  00FBD8                     STR_128:
 11904  00FBD8  53                 	db	83	;'S'
 11905  00FBD9  65                 	db	101	;'e'
 11906  00FBDA  74                 	db	116	;'t'
 11907  00FBDB  20                 	db	32
 11908  00FBDC  44                 	db	68	;'D'
 11909  00FBDD  69                 	db	105	;'i'
 11910  00FBDE  6D                 	db	109	;'m'
 11911  00FBDF  6D                 	db	109	;'m'
 11912  00FBE0  69                 	db	105	;'i'
 11913  00FBE1  6E                 	db	110	;'n'
 11914  00FBE2  67                 	db	103	;'g'
 11915  00FBE3  20                 	db	32
 11916  00FBE4  50                 	db	80	;'P'
 11917  00FBE5  65                 	db	101	;'e'
 11918  00FBE6  72                 	db	114	;'r'
 11919  00FBE7  63                 	db	99	;'c'
 11920  00FBE8  65                 	db	101	;'e'
 11921  00FBE9  6E                 	db	110	;'n'
 11922  00FBEA  74                 	db	116	;'t'
 11923  00FBEB  61                 	db	97	;'a'
 11924  00FBEC  67                 	db	103	;'g'
 11925  00FBED  65                 	db	101	;'e'
 11926  00FBEE  3A                 	db	58	;':'
 11927  00FBEF  20                 	db	32
 11928  00FBF0  00                 	db	0
 11929  00FBF1                     STR_67:
 11930  00FBF1  20                 	db	32
 11931  00FBF2  20                 	db	32
 11932  00FBF3  20                 	db	32
 11933  00FBF4  20                 	db	32
 11934  00FBF5  47                 	db	71	;'G'
 11935  00FBF6  65                 	db	101	;'e'
 11936  00FBF7  6E                 	db	110	;'n'
 11937  00FBF8  65                 	db	101	;'e'
 11938  00FBF9  72                 	db	114	;'r'
 11939  00FBFA  61                 	db	97	;'a'
 11940  00FBFB  6C                 	db	108	;'l'
 11941  00FBFC  20                 	db	32
 11942  00FBFD  41                 	db	65	;'A'
 11943  00FBFE  44                 	db	68	;'D'
 11944  00FBFF  43                 	db	67	;'C'
 11945  00FC00  20                 	db	32
 11946  00FC01  65                 	db	101	;'e'
 11947  00FC02  72                 	db	114	;'r'
 11948  00FC03  72                 	db	114	;'r'
 11949  00FC04  6F                 	db	111	;'o'
 11950  00FC05  72                 	db	114	;'r'
 11951  00FC06  0A                 	db	10
 11952  00FC07  0D                 	db	13
 11953  00FC08  00                 	db	0
 11954  00FC09                     STR_80:
 11955  00FC09  20                 	db	32
 11956  00FC0A  20                 	db	32
 11957  00FC0B  20                 	db	32
 11958  00FC0C  20                 	db	32
 11959  00FC0D  4F                 	db	79	;'O'
 11960  00FC0E  4C                 	db	76	;'L'
 11961  00FC0F  45                 	db	69	;'E'
 11962  00FC10  44                 	db	68	;'D'
 11963  00FC11  20                 	db	32
 11964  00FC12  44                 	db	68	;'D'
 11965  00FC13  69                 	db	105	;'i'
 11966  00FC14  73                 	db	115	;'s'
 11967  00FC15  70                 	db	112	;'p'
 11968  00FC16  6C                 	db	108	;'l'
 11969  00FC17  61                 	db	97	;'a'
 11970  00FC18  79                 	db	121	;'y'
 11971  00FC19  20                 	db	32
 11972  00FC1A  49                 	db	73	;'I'
 11973  00FC1B  32                 	db	50	;'2'
 11974  00FC1C  43                 	db	67	;'C'
 11975  00FC1D  0A                 	db	10
 11976  00FC1E  0D                 	db	13
 11977  00FC1F  00                 	db	0
 11978  00FC20                     STR_77:
 11979  00FC20  41                 	db	65	;'A'
 11980  00FC21  44                 	db	68	;'D'
 11981  00FC22  43                 	db	67	;'C'
 11982  00FC23  20                 	db	32
 11983  00FC24  45                 	db	69	;'E'
 11984  00FC25  72                 	db	114	;'r'
 11985  00FC26  72                 	db	114	;'r'
 11986  00FC27  6F                 	db	111	;'o'
 11987  00FC28  72                 	db	114	;'r'
 11988  00FC29  28                 	db	40
 11989  00FC2A  73                 	db	115	;'s'
 11990  00FC2B  29                 	db	41
 11991  00FC2C  20                 	db	32
 11992  00FC2D  63                 	db	99	;'c'
 11993  00FC2E  6C                 	db	108	;'l'
 11994  00FC2F  65                 	db	101	;'e'
 11995  00FC30  61                 	db	97	;'a'
 11996  00FC31  72                 	db	114	;'r'
 11997  00FC32  65                 	db	101	;'e'
 11998  00FC33  64                 	db	100	;'d'
 11999  00FC34  0A                 	db	10
 12000  00FC35  0D                 	db	13
 12001  00FC36  00                 	db	0
 12002  00FC37                     STR_187:
 12003  00FC37  53                 	db	83	;'S'
 12004  00FC38  74                 	db	116	;'t'
 12005  00FC39  61                 	db	97	;'a'
 12006  00FC3A  63                 	db	99	;'c'
 12007  00FC3B  6B                 	db	107	;'k'
 12008  00FC3C  20                 	db	32
 12009  00FC3D  55                 	db	85	;'U'
 12010  00FC3E  6E                 	db	110	;'n'
 12011  00FC3F  64                 	db	100	;'d'
 12012  00FC40  65                 	db	101	;'e'
 12013  00FC41  72                 	db	114	;'r'
 12014  00FC42  66                 	db	102	;'f'
 12015  00FC43  6C                 	db	108	;'l'
 12016  00FC44  6F                 	db	111	;'o'
 12017  00FC45  77                 	db	119	;'w'
 12018  00FC46  20                 	db	32
 12019  00FC47  52                 	db	82	;'R'
 12020  00FC48  65                 	db	101	;'e'
 12021  00FC49  73                 	db	115	;'s'
 12022  00FC4A  65                 	db	101	;'e'
 12023  00FC4B  74                 	db	116	;'t'
 12024  00FC4C  00                 	db	0
 12025  00FC4D                     STR_186:
 12026  00FC4D  53                 	db	83	;'S'
 12027  00FC4E  74                 	db	116	;'t'
 12028  00FC4F  61                 	db	97	;'a'
 12029  00FC50  63                 	db	99	;'c'
 12030  00FC51  6B                 	db	107	;'k'
 12031  00FC52  20                 	db	32
 12032  00FC53  4F                 	db	79	;'O'
 12033  00FC54  76                 	db	118	;'v'
 12034  00FC55  65                 	db	101	;'e'
 12035  00FC56  72                 	db	114	;'r'
 12036  00FC57  66                 	db	102	;'f'
 12037  00FC58  6C                 	db	108	;'l'
 12038  00FC59  6F                 	db	111	;'o'
 12039  00FC5A  77                 	db	119	;'w'
 12040  00FC5B  20                 	db	32
 12041  00FC5C  52                 	db	82	;'R'
 12042  00FC5D  65                 	db	101	;'e'
 12043  00FC5E  73                 	db	115	;'s'
 12044  00FC5F  65                 	db	101	;'e'
 12045  00FC60  74                 	db	116	;'t'
 12046  00FC61  00                 	db	0
 12047  00FC62                     STR_100:
 12048  00FC62  4D                 	db	77	;'M'
 12049  00FC63  65                 	db	101	;'e'
 12050  00FC64  61                 	db	97	;'a'
 12051  00FC65  73                 	db	115	;'s'
 12052  00FC66  75                 	db	117	;'u'
 12053  00FC67  72                 	db	114	;'r'
 12054  00FC68  65                 	db	101	;'e'
 12055  00FC69  20                 	db	32
 12056  00FC6A  52                 	db	82	;'R'
 12057  00FC6B  4D                 	db	77	;'M'
 12058  00FC6C  53                 	db	83	;'S'
 12059  00FC6D  20                 	db	32
 12060  00FC6E  56                 	db	86	;'V'
 12061  00FC6F  6F                 	db	111	;'o'
 12062  00FC70  6C                 	db	108	;'l'
 12063  00FC71  74                 	db	116	;'t'
 12064  00FC72  61                 	db	97	;'a'
 12065  00FC73  67                 	db	103	;'g'
 12066  00FC74  65                 	db	101	;'e'
 12067  00FC75  3F                 	db	63	;'?'
 12068  00FC76  00                 	db	0
 12069  00FC77                     STR_98:
 12070  00FC77  4D                 	db	77	;'M'
 12071  00FC78  65                 	db	101	;'e'
 12072  00FC79  61                 	db	97	;'a'
 12073  00FC7A  73                 	db	115	;'s'
 12074  00FC7B  75                 	db	117	;'u'
 12075  00FC7C  72                 	db	114	;'r'
 12076  00FC7D  65                 	db	101	;'e'
 12077  00FC7E  20                 	db	32
 12078  00FC7F  52                 	db	82	;'R'
 12079  00FC80  4D                 	db	77	;'M'
 12080  00FC81  53                 	db	83	;'S'
 12081  00FC82  20                 	db	32
 12082  00FC83  43                 	db	67	;'C'
 12083  00FC84  75                 	db	117	;'u'
 12084  00FC85  72                 	db	114	;'r'
 12085  00FC86  72                 	db	114	;'r'
 12086  00FC87  65                 	db	101	;'e'
 12087  00FC88  6E                 	db	110	;'n'
 12088  00FC89  74                 	db	116	;'t'
 12089  00FC8A  3F                 	db	63	;'?'
 12090  00FC8B  00                 	db	0
 12091  00FC8C                     STR_143:
 12092  00FC8C  4D                 	db	77	;'M'
 12093  00FC8D  61                 	db	97	;'a'
 12094  00FC8E  78                 	db	120	;'x'
 12095  00FC8F  20                 	db	32
 12096  00FC90  50                 	db	80	;'P'
 12097  00FC91  4F                 	db	79	;'O'
 12098  00FC92  53                 	db	83	;'S'
 12099  00FC93  33                 	db	51	;'3'
 12100  00FC94  50                 	db	80	;'P'
 12101  00FC95  33                 	db	51	;'3'
 12102  00FC96  20                 	db	32
 12103  00FC97  56                 	db	86	;'V'
 12104  00FC98  6F                 	db	111	;'o'
 12105  00FC99  6C                 	db	108	;'l'
 12106  00FC9A  74                 	db	116	;'t'
 12107  00FC9B  61                 	db	97	;'a'
 12108  00FC9C  67                 	db	103	;'g'
 12109  00FC9D  65                 	db	101	;'e'
 12110  00FC9E  3F                 	db	63	;'?'
 12111  00FC9F  00                 	db	0
 12112  00FCA0                     STR_182:
 12113  00FCA0  4D                 	db	77	;'M'
 12114  00FCA1  61                 	db	97	;'a'
 12115  00FCA2  73                 	db	115	;'s'
 12116  00FCA3  74                 	db	116	;'t'
 12117  00FCA4  65                 	db	101	;'e'
 12118  00FCA5  72                 	db	114	;'r'
 12119  00FCA6  20                 	db	32
 12120  00FCA7  43                 	db	67	;'C'
 12121  00FCA8  6C                 	db	108	;'l'
 12122  00FCA9  65                 	db	101	;'e'
 12123  00FCAA  61                 	db	97	;'a'
 12124  00FCAB  72                 	db	114	;'r'
 12125  00FCAC  20                 	db	32
 12126  00FCAD  52                 	db	82	;'R'
 12127  00FCAE  65                 	db	101	;'e'
 12128  00FCAF  73                 	db	115	;'s'
 12129  00FCB0  65                 	db	101	;'e'
 12130  00FCB1  74                 	db	116	;'t'
 12131  00FCB2  00                 	db	0
 12132  00FCB3                     STR_145:
 12133  00FCB3  4D                 	db	77	;'M'
 12134  00FCB4  61                 	db	97	;'a'
 12135  00FCB5  78                 	db	120	;'x'
 12136  00FCB6  20                 	db	32
 12137  00FCB7  50                 	db	80	;'P'
 12138  00FCB8  4F                 	db	79	;'O'
 12139  00FCB9  53                 	db	83	;'S'
 12140  00FCBA  31                 	db	49	;'1'
 12141  00FCBB  32                 	db	50	;'2'
 12142  00FCBC  20                 	db	32
 12143  00FCBD  56                 	db	86	;'V'
 12144  00FCBE  6F                 	db	111	;'o'
 12145  00FCBF  6C                 	db	108	;'l'
 12146  00FCC0  74                 	db	116	;'t'
 12147  00FCC1  61                 	db	97	;'a'
 12148  00FCC2  67                 	db	103	;'g'
 12149  00FCC3  65                 	db	101	;'e'
 12150  00FCC4  3F                 	db	63	;'?'
 12151  00FCC5  00                 	db	0
 12152  00FCC6                     STR_90:
 12153  00FCC6  4D                 	db	77	;'M'
 12154  00FCC7  65                 	db	101	;'e'
 12155  00FCC8  61                 	db	97	;'a'
 12156  00FCC9  73                 	db	115	;'s'
 12157  00FCCA  75                 	db	117	;'u'
 12158  00FCCB  72                 	db	114	;'r'
 12159  00FCCC  65                 	db	101	;'e'
 12160  00FCCD  20                 	db	32
 12161  00FCCE  44                 	db	68	;'D'
 12162  00FCCF  69                 	db	105	;'i'
 12163  00FCD0  65                 	db	101	;'e'
 12164  00FCD1  20                 	db	32
 12165  00FCD2  54                 	db	84	;'T'
 12166  00FCD3  65                 	db	101	;'e'
 12167  00FCD4  6D                 	db	109	;'m'
 12168  00FCD5  70                 	db	112	;'p'
 12169  00FCD6  3F                 	db	63	;'?'
 12170  00FCD7  00                 	db	0
 12171  00FCD8                     STR_84:
 12172  00FCD8  43                 	db	67	;'C'
 12173  00FCD9  6C                 	db	108	;'l'
 12174  00FCDA  65                 	db	101	;'e'
 12175  00FCDB  61                 	db	97	;'a'
 12176  00FCDC  72                 	db	114	;'r'
 12177  00FCDD  20                 	db	32
 12178  00FCDE  43                 	db	67	;'C'
 12179  00FCDF  6F                 	db	111	;'o'
 12180  00FCE0  6D                 	db	109	;'m'
 12181  00FCE1  6D                 	db	109	;'m'
 12182  00FCE2  20                 	db	32
 12183  00FCE3  45                 	db	69	;'E'
 12184  00FCE4  72                 	db	114	;'r'
 12185  00FCE5  72                 	db	114	;'r'
 12186  00FCE6  6F                 	db	111	;'o'
 12187  00FCE7  72                 	db	114	;'r'
 12188  00FCE8  73                 	db	115	;'s'
 12189  00FCE9  00                 	db	0
 12190  00FCEA                     STR_192:
 12191  00FCEA  30                 	db	48	;'0'
 12192  00FCEB  31                 	db	49	;'1'
 12193  00FCEC  32                 	db	50	;'2'
 12194  00FCED  33                 	db	51	;'3'
 12195  00FCEE  34                 	db	52	;'4'
 12196  00FCEF  35                 	db	53	;'5'
 12197  00FCF0  36                 	db	54	;'6'
 12198  00FCF1  37                 	db	55	;'7'
 12199  00FCF2  38                 	db	56	;'8'
 12200  00FCF3  39                 	db	57	;'9'
 12201  00FCF4  41                 	db	65	;'A'
 12202  00FCF5  42                 	db	66	;'B'
 12203  00FCF6  43                 	db	67	;'C'
 12204  00FCF7  44                 	db	68	;'D'
 12205  00FCF8  45                 	db	69	;'E'
 12206  00FCF9  46                 	db	70	;'F'
 12207  00FCFA  00                 	db	0
 12208  00FCFB                     STR_55:
 12209  00FCFB  41                 	db	65	;'A'
 12210  00FCFC  43                 	db	67	;'C'
 12211  00FCFD  20                 	db	32
 12212  00FCFE  50                 	db	80	;'P'
 12213  00FCFF  6F                 	db	111	;'o'
 12214  00FD00  77                 	db	119	;'w'
 12215  00FD01  65                 	db	101	;'e'
 12216  00FD02  72                 	db	114	;'r'
 12217  00FD03  20                 	db	32
 12218  00FD04  4D                 	db	77	;'M'
 12219  00FD05  65                 	db	101	;'e'
 12220  00FD06  74                 	db	116	;'t'
 12221  00FD07  65                 	db	101	;'e'
 12222  00FD08  72                 	db	114	;'r'
 12223  00FD09  0A                 	db	10
 12224  00FD0A  0D                 	db	13
 12225  00FD0B  00                 	db	0
 12226  00FD0C                     STR_122:
 12227  00FD0C  44                 	db	68	;'D'
 12228  00FD0D  69                 	db	105	;'i'
 12229  00FD0E  6D                 	db	109	;'m'
 12230  00FD0F  6D                 	db	109	;'m'
 12231  00FD10  69                 	db	105	;'i'
 12232  00FD11  6E                 	db	110	;'n'
 12233  00FD12  67                 	db	103	;'g'
 12234  00FD13  20                 	db	32
 12235  00FD14  45                 	db	69	;'E'
 12236  00FD15  6E                 	db	110	;'n'
 12237  00FD16  61                 	db	97	;'a'
 12238  00FD17  62                 	db	98	;'b'
 12239  00FD18  6C                 	db	108	;'l'
 12240  00FD19  65                 	db	101	;'e'
 12241  00FD1A  64                 	db	100	;'d'
 12242  00FD1B  3F                 	db	63	;'?'
 12243  00FD1C  00                 	db	0
 12244  00FD1D                     STR_149:
 12245  00FD1D  4D                 	db	77	;'M'
 12246  00FD1E  61                 	db	97	;'a'
 12247  00FD1F  78                 	db	120	;'x'
 12248  00FD20  20                 	db	32
 12249  00FD21  46                 	db	70	;'F'
 12250  00FD22  56                 	db	86	;'V'
 12251  00FD23  52                 	db	82	;'R'
 12252  00FD24  20                 	db	32
 12253  00FD25  56                 	db	86	;'V'
 12254  00FD26  6F                 	db	111	;'o'
 12255  00FD27  6C                 	db	108	;'l'
 12256  00FD28  74                 	db	116	;'t'
 12257  00FD29  61                 	db	97	;'a'
 12258  00FD2A  67                 	db	103	;'g'
 12259  00FD2B  65                 	db	101	;'e'
 12260  00FD2C  3F                 	db	63	;'?'
 12261  00FD2D  00                 	db	0
 12262  00FD2E                     STR_139:
 12263  00FD2E  4D                 	db	77	;'M'
 12264  00FD2F  61                 	db	97	;'a'
 12265  00FD30  78                 	db	120	;'x'
 12266  00FD31  20                 	db	32
 12267  00FD32  52                 	db	82	;'R'
 12268  00FD33  4D                 	db	77	;'M'
 12269  00FD34  53                 	db	83	;'S'
 12270  00FD35  20                 	db	32
 12271  00FD36  43                 	db	67	;'C'
 12272  00FD37  75                 	db	117	;'u'
 12273  00FD38  72                 	db	114	;'r'
 12274  00FD39  72                 	db	114	;'r'
 12275  00FD3A  65                 	db	101	;'e'
 12276  00FD3B  6E                 	db	110	;'n'
 12277  00FD3C  74                 	db	116	;'t'
 12278  00FD3D  3F                 	db	63	;'?'
 12279  00FD3E  00                 	db	0
 12280  00FD3F                     STR_113:
 12281  00FD3F  45                 	db	69	;'E'
 12282  00FD40  6E                 	db	110	;'n'
 12283  00FD41  61                 	db	97	;'a'
 12284  00FD42  62                 	db	98	;'b'
 12285  00FD43  6C                 	db	108	;'l'
 12286  00FD44  65                 	db	101	;'e'
 12287  00FD45  20                 	db	32
 12288  00FD46  44                 	db	68	;'D'
 12289  00FD47  69                 	db	105	;'i'
 12290  00FD48  6D                 	db	109	;'m'
 12291  00FD49  6D                 	db	109	;'m'
 12292  00FD4A  69                 	db	105	;'i'
 12293  00FD4B  6E                 	db	110	;'n'
 12294  00FD4C  67                 	db	103	;'g'
 12295  00FD4D  20                 	db	32
 12296  00FD4E  59                 	db	89	;'Y'
 12297  00FD4F  00                 	db	0
 12298  00FD50                     STR_151:
 12299  00FD50  43                 	db	67	;'C'
 12300  00FD51  6C                 	db	108	;'l'
 12301  00FD52  65                 	db	101	;'e'
 12302  00FD53  61                 	db	97	;'a'
 12303  00FD54  72                 	db	114	;'r'
 12304  00FD55  20                 	db	32
 12305  00FD56  4D                 	db	77	;'M'
 12306  00FD57  61                 	db	97	;'a'
 12307  00FD58  78                 	db	120	;'x'
 12308  00FD59  20                 	db	32
 12309  00FD5A  56                 	db	86	;'V'
 12310  00FD5B  61                 	db	97	;'a'
 12311  00FD5C  6C                 	db	108	;'l'
 12312  00FD5D  75                 	db	117	;'u'
 12313  00FD5E  65                 	db	101	;'e'
 12314  00FD5F  73                 	db	115	;'s'
 12315  00FD60  00                 	db	0
 12316  00FD61                     STR_76:
 12317  00FD61  43                 	db	67	;'C'
 12318  00FD62  6C                 	db	108	;'l'
 12319  00FD63  65                 	db	101	;'e'
 12320  00FD64  61                 	db	97	;'a'
 12321  00FD65  72                 	db	114	;'r'
 12322  00FD66  20                 	db	32
 12323  00FD67  41                 	db	65	;'A'
 12324  00FD68  44                 	db	68	;'D'
 12325  00FD69  43                 	db	67	;'C'
 12326  00FD6A  20                 	db	32
 12327  00FD6B  45                 	db	69	;'E'
 12328  00FD6C  72                 	db	114	;'r'
 12329  00FD6D  72                 	db	114	;'r'
 12330  00FD6E  6F                 	db	111	;'o'
 12331  00FD6F  72                 	db	114	;'r'
 12332  00FD70  73                 	db	115	;'s'
 12333  00FD71  00                 	db	0
 12334  00FD72                     STR_179:
 12335  00FD72  55                 	db	85	;'U'
 12336  00FD73  6E                 	db	110	;'n'
 12337  00FD74  64                 	db	100	;'d'
 12338  00FD75  65                 	db	101	;'e'
 12339  00FD76  66                 	db	102	;'f'
 12340  00FD77  69                 	db	105	;'i'
 12341  00FD78  6E                 	db	110	;'n'
 12342  00FD79  65                 	db	101	;'e'
 12343  00FD7A  64                 	db	100	;'d'
 12344  00FD7B  20                 	db	32
 12345  00FD7C  52                 	db	82	;'R'
 12346  00FD7D  65                 	db	101	;'e'
 12347  00FD7E  73                 	db	115	;'s'
 12348  00FD7F  65                 	db	101	;'e'
 12349  00FD80  74                 	db	116	;'t'
 12350  00FD81  00                 	db	0
 12351  00FD82                     STR_181:
 12352  00FD82  42                 	db	66	;'B'
 12353  00FD83  72                 	db	114	;'r'
 12354  00FD84  6F                 	db	111	;'o'
 12355  00FD85  77                 	db	119	;'w'
 12356  00FD86  6E                 	db	110	;'n'
 12357  00FD87  20                 	db	32
 12358  00FD88  4F                 	db	79	;'O'
 12359  00FD89  75                 	db	117	;'u'
 12360  00FD8A  74                 	db	116	;'t'
 12361  00FD8B  20                 	db	32
 12362  00FD8C  52                 	db	82	;'R'
 12363  00FD8D  65                 	db	101	;'e'
 12364  00FD8E  73                 	db	115	;'s'
 12365  00FD8F  65                 	db	101	;'e'
 12366  00FD90  74                 	db	116	;'t'
 12367  00FD91  00                 	db	0
 12368  00FD92                     STR_86:
 12369  00FD92  4D                 	db	77	;'M'
 12370  00FD93  65                 	db	101	;'e'
 12371  00FD94  61                 	db	97	;'a'
 12372  00FD95  73                 	db	115	;'s'
 12373  00FD96  75                 	db	117	;'u'
 12374  00FD97  72                 	db	114	;'r'
 12375  00FD98  65                 	db	101	;'e'
 12376  00FD99  20                 	db	32
 12377  00FD9A  50                 	db	80	;'P'
 12378  00FD9B  4F                 	db	79	;'O'
 12379  00FD9C  53                 	db	83	;'S'
 12380  00FD9D  33                 	db	51	;'3'
 12381  00FD9E  50                 	db	80	;'P'
 12382  00FD9F  33                 	db	51	;'3'
 12383  00FDA0  3F                 	db	63	;'?'
 12384  00FDA1  00                 	db	0
 12385  00FDA2                     STR_135:
 12386  00FDA2  44                 	db	68	;'D'
 12387  00FDA3  65                 	db	101	;'e'
 12388  00FDA4  76                 	db	118	;'v'
 12389  00FDA5  69                 	db	105	;'i'
 12390  00FDA6  63                 	db	99	;'c'
 12391  00FDA7  65                 	db	101	;'e'
 12392  00FDA8  20                 	db	32
 12393  00FDA9  4F                 	db	79	;'O'
 12394  00FDAA  6E                 	db	110	;'n'
 12395  00FDAB  20                 	db	32
 12396  00FDAC  54                 	db	84	;'T'
 12397  00FDAD  69                 	db	105	;'i'
 12398  00FDAE  6D                 	db	109	;'m'
 12399  00FDAF  65                 	db	101	;'e'
 12400  00FDB0  3F                 	db	63	;'?'
 12401  00FDB1  00                 	db	0
 12402  00FDB2                     STR_51:
 12403  00FDB2  43                 	db	67	;'C'
 12404  00FDB3  61                 	db	97	;'a'
 12405  00FDB4  75                 	db	117	;'u'
 12406  00FDB5  73                 	db	115	;'s'
 12407  00FDB6  65                 	db	101	;'e'
 12408  00FDB7  20                 	db	32
 12409  00FDB8  6F                 	db	111	;'o'
 12410  00FDB9  66                 	db	102	;'f'
 12411  00FDBA  20                 	db	32
 12412  00FDBB  52                 	db	82	;'R'
 12413  00FDBC  65                 	db	101	;'e'
 12414  00FDBD  73                 	db	115	;'s'
 12415  00FDBE  65                 	db	101	;'e'
 12416  00FDBF  74                 	db	116	;'t'
 12417  00FDC0  3F                 	db	63	;'?'
 12418  00FDC1  00                 	db	0
 12419  00FDC2                     STR_104:
 12420  00FDC2  4D                 	db	77	;'M'
 12421  00FDC3  65                 	db	101	;'e'
 12422  00FDC4  61                 	db	97	;'a'
 12423  00FDC5  73                 	db	115	;'s'
 12424  00FDC6  75                 	db	117	;'u'
 12425  00FDC7  72                 	db	114	;'r'
 12426  00FDC8  65                 	db	101	;'e'
 12427  00FDC9  20                 	db	32
 12428  00FDCA  45                 	db	69	;'E'
 12429  00FDCB  6E                 	db	110	;'n'
 12430  00FDCC  65                 	db	101	;'e'
 12431  00FDCD  72                 	db	114	;'r'
 12432  00FDCE  67                 	db	103	;'g'
 12433  00FDCF  79                 	db	121	;'y'
 12434  00FDD0  3F                 	db	63	;'?'
 12435  00FDD1  00                 	db	0
 12436  00FDD2                     STR_115:
 12437  00FDD2  44                 	db	68	;'D'
 12438  00FDD3  69                 	db	105	;'i'
 12439  00FDD4  73                 	db	115	;'s'
 12440  00FDD5  61                 	db	97	;'a'
 12441  00FDD6  62                 	db	98	;'b'
 12442  00FDD7  6C                 	db	108	;'l'
 12443  00FDD8  65                 	db	101	;'e'
 12444  00FDD9  20                 	db	32
 12445  00FDDA  44                 	db	68	;'D'
 12446  00FDDB  69                 	db	105	;'i'
 12447  00FDDC  6D                 	db	109	;'m'
 12448  00FDDD  6D                 	db	109	;'m'
 12449  00FDDE  69                 	db	105	;'i'
 12450  00FDDF  6E                 	db	110	;'n'
 12451  00FDE0  67                 	db	103	;'g'
 12452  00FDE1  00                 	db	0
 12453  00FDE2                     STR_180:
 12454  00FDE2  50                 	db	80	;'P'
 12455  00FDE3  6F                 	db	111	;'o'
 12456  00FDE4  77                 	db	119	;'w'
 12457  00FDE5  65                 	db	101	;'e'
 12458  00FDE6  72                 	db	114	;'r'
 12459  00FDE7  20                 	db	32
 12460  00FDE8  4F                 	db	79	;'O'
 12461  00FDE9  6E                 	db	110	;'n'
 12462  00FDEA  20                 	db	32
 12463  00FDEB  52                 	db	82	;'R'
 12464  00FDEC  65                 	db	101	;'e'
 12465  00FDED  73                 	db	115	;'s'
 12466  00FDEE  65                 	db	101	;'e'
 12467  00FDEF  74                 	db	116	;'t'
 12468  00FDF0  00                 	db	0
 12469  00FDF1                     STR_73:
 12470  00FDF1  20                 	db	32
 12471  00FDF2  20                 	db	32
 12472  00FDF3  20                 	db	32
 12473  00FDF4  20                 	db	32
 12474  00FDF5  44                 	db	68	;'D'
 12475  00FDF6  69                 	db	105	;'i'
 12476  00FDF7  65                 	db	101	;'e'
 12477  00FDF8  20                 	db	32
 12478  00FDF9  54                 	db	84	;'T'
 12479  00FDFA  65                 	db	101	;'e'
 12480  00FDFB  6D                 	db	109	;'m'
 12481  00FDFC  70                 	db	112	;'p'
 12482  00FDFD  0A                 	db	10
 12483  00FDFE  0D                 	db	13
 12484  00FDFF  00                 	db	0
 12485  00FE00                     STR_88:
 12486  00FE00  4D                 	db	77	;'M'
 12487  00FE01  65                 	db	101	;'e'
 12488  00FE02  61                 	db	97	;'a'
 12489  00FE03  73                 	db	115	;'s'
 12490  00FE04  75                 	db	117	;'u'
 12491  00FE05  72                 	db	114	;'r'
 12492  00FE06  65                 	db	101	;'e'
 12493  00FE07  20                 	db	32
 12494  00FE08  50                 	db	80	;'P'
 12495  00FE09  4F                 	db	79	;'O'
 12496  00FE0A  53                 	db	83	;'S'
 12497  00FE0B  31                 	db	49	;'1'
 12498  00FE0C  32                 	db	50	;'2'
 12499  00FE0D  3F                 	db	63	;'?'
 12500  00FE0E  00                 	db	0
 12501  00FE0F                     STR_102:
 12502  00FE0F  4D                 	db	77	;'M'
 12503  00FE10  65                 	db	101	;'e'
 12504  00FE11  61                 	db	97	;'a'
 12505  00FE12  73                 	db	115	;'s'
 12506  00FE13  75                 	db	117	;'u'
 12507  00FE14  72                 	db	114	;'r'
 12508  00FE15  65                 	db	101	;'e'
 12509  00FE16  20                 	db	32
 12510  00FE17  50                 	db	80	;'P'
 12511  00FE18  6F                 	db	111	;'o'
 12512  00FE19  77                 	db	119	;'w'
 12513  00FE1A  65                 	db	101	;'e'
 12514  00FE1B  72                 	db	114	;'r'
 12515  00FE1C  3F                 	db	63	;'?'
 12516  00FE1D  00                 	db	0
 12517  00FE1E                     STR_108:
 12518  00FE1E  45                 	db	69	;'E'
 12519  00FE1F  6E                 	db	110	;'n'
 12520  00FE20  61                 	db	97	;'a'
 12521  00FE21  62                 	db	98	;'b'
 12522  00FE22  6C                 	db	108	;'l'
 12523  00FE23  65                 	db	101	;'e'
 12524  00FE24  20                 	db	32
 12525  00FE25  44                 	db	68	;'D'
 12526  00FE26  69                 	db	105	;'i'
 12527  00FE27  6D                 	db	109	;'m'
 12528  00FE28  6D                 	db	109	;'m'
 12529  00FE29  69                 	db	105	;'i'
 12530  00FE2A  6E                 	db	110	;'n'
 12531  00FE2B  67                 	db	103	;'g'
 12532  00FE2C  00                 	db	0
 12533  00FE2D                     STR_2:
 12534  00FE2D  41                 	db	65	;'A'
 12535  00FE2E  43                 	db	67	;'C'
 12536  00FE2F  20                 	db	32
 12537  00FE30  50                 	db	80	;'P'
 12538  00FE31  6F                 	db	111	;'o'
 12539  00FE32  77                 	db	119	;'w'
 12540  00FE33  65                 	db	101	;'e'
 12541  00FE34  72                 	db	114	;'r'
 12542  00FE35  20                 	db	32
 12543  00FE36  4D                 	db	77	;'M'
 12544  00FE37  65                 	db	101	;'e'
 12545  00FE38  74                 	db	116	;'t'
 12546  00FE39  65                 	db	101	;'e'
 12547  00FE3A  72                 	db	114	;'r'
 12548  00FE3B  00                 	db	0
 12549  00FE3C                     STR_94:
 12550  00FE3C  4D                 	db	77	;'M'
 12551  00FE3D  65                 	db	101	;'e'
 12552  00FE3E  61                 	db	97	;'a'
 12553  00FE3F  73                 	db	115	;'s'
 12554  00FE40  75                 	db	117	;'u'
 12555  00FE41  72                 	db	114	;'r'
 12556  00FE42  65                 	db	101	;'e'
 12557  00FE43  20                 	db	32
 12558  00FE44  41                 	db	65	;'A'
 12559  00FE45  56                 	db	86	;'V'
 12560  00FE46  53                 	db	83	;'S'
 12561  00FE47  53                 	db	83	;'S'
 12562  00FE48  3F                 	db	63	;'?'
 12563  00FE49  00                 	db	0
 12564  00FE4A                     STR_119:
 12565  00FE4A  4C                 	db	76	;'L'
 12566  00FE4B  6F                 	db	111	;'o'
 12567  00FE4C  61                 	db	97	;'a'
 12568  00FE4D  64                 	db	100	;'d'
 12569  00FE4E  20                 	db	32
 12570  00FE4F  45                 	db	69	;'E'
 12571  00FE50  6E                 	db	110	;'n'
 12572  00FE51  61                 	db	97	;'a'
 12573  00FE52  62                 	db	98	;'b'
 12574  00FE53  6C                 	db	108	;'l'
 12575  00FE54  65                 	db	101	;'e'
 12576  00FE55  64                 	db	100	;'d'
 12577  00FE56  3F                 	db	63	;'?'
 12578  00FE57  00                 	db	0
 12579  00FE58                     STR_137:
 12580  00FE58  4C                 	db	76	;'L'
 12581  00FE59  6F                 	db	111	;'o'
 12582  00FE5A  61                 	db	97	;'a'
 12583  00FE5B  64                 	db	100	;'d'
 12584  00FE5C  20                 	db	32
 12585  00FE5D  4F                 	db	79	;'O'
 12586  00FE5E  6E                 	db	110	;'n'
 12587  00FE5F  20                 	db	32
 12588  00FE60  54                 	db	84	;'T'
 12589  00FE61  69                 	db	105	;'i'
 12590  00FE62  6D                 	db	109	;'m'
 12591  00FE63  65                 	db	101	;'e'
 12592  00FE64  3F                 	db	63	;'?'
 12593  00FE65  00                 	db	0
 12594  00FE66                     STR_147:
 12595  00FE66  4D                 	db	77	;'M'
 12596  00FE67  61                 	db	97	;'a'
 12597  00FE68  78                 	db	120	;'x'
 12598  00FE69  20                 	db	32
 12599  00FE6A  44                 	db	68	;'D'
 12600  00FE6B  69                 	db	105	;'i'
 12601  00FE6C  65                 	db	101	;'e'
 12602  00FE6D  20                 	db	32
 12603  00FE6E  54                 	db	84	;'T'
 12604  00FE6F  65                 	db	101	;'e'
 12605  00FE70  6D                 	db	109	;'m'
 12606  00FE71  70                 	db	112	;'p'
 12607  00FE72  3F                 	db	63	;'?'
 12608  00FE73  00                 	db	0
 12609  00FE74                     STR_5:
 12610  00FE74  42                 	db	66	;'B'
 12611  00FE75  6F                 	db	111	;'o'
 12612  00FE76  6F                 	db	111	;'o'
 12613  00FE77  74                 	db	116	;'t'
 12614  00FE78  20                 	db	32
 12615  00FE79  43                 	db	67	;'C'
 12616  00FE7A  6F                 	db	111	;'o'
 12617  00FE7B  6D                 	db	109	;'m'
 12618  00FE7C  70                 	db	112	;'p'
 12619  00FE7D  6C                 	db	108	;'l'
 12620  00FE7E  65                 	db	101	;'e'
 12621  00FE7F  74                 	db	116	;'t'
 12622  00FE80  65                 	db	101	;'e'
 12623  00FE81  00                 	db	0
 12624  00FE82                     STR_4:
 12625  00FE82  46                 	db	70	;'F'
 12626  00FE83  69                 	db	105	;'i'
 12627  00FE84  6E                 	db	110	;'n'
 12628  00FE85  61                 	db	97	;'a'
 12629  00FE86  6C                 	db	108	;'l'
 12630  00FE87  20                 	db	32
 12631  00FE88  50                 	db	80	;'P'
 12632  00FE89  72                 	db	114	;'r'
 12633  00FE8A  6F                 	db	111	;'o'
 12634  00FE8B  6A                 	db	106	;'j'
 12635  00FE8C  65                 	db	101	;'e'
 12636  00FE8D  63                 	db	99	;'c'
 12637  00FE8E  74                 	db	116	;'t'
 12638  00FE8F  00                 	db	0
 12639  00FE90                     STR_177:
 12640  00FE90  50                 	db	80	;'P'
 12641  00FE91  49                 	db	73	;'I'
 12642  00FE92  43                 	db	67	;'C'
 12643  00FE93  31                 	db	49	;'1'
 12644  00FE94  38                 	db	56	;'8'
 12645  00FE95  4C                 	db	76	;'L'
 12646  00FE96  46                 	db	70	;'F'
 12647  00FE97  36                 	db	54	;'6'
 12648  00FE98  37                 	db	55	;'7'
 12649  00FE99  4B                 	db	75	;'K'
 12650  00FE9A  34                 	db	52	;'4'
 12651  00FE9B  30                 	db	48	;'0'
 12652  00FE9C  00                 	db	0
 12653  00FE9D                     STR_72:
 12654  00FE9D  20                 	db	32
 12655  00FE9E  20                 	db	32
 12656  00FE9F  20                 	db	32
 12657  00FEA0  20                 	db	32
 12658  00FEA1  50                 	db	80	;'P'
 12659  00FEA2  4F                 	db	79	;'O'
 12660  00FEA3  53                 	db	83	;'S'
 12661  00FEA4  33                 	db	51	;'3'
 12662  00FEA5  50                 	db	80	;'P'
 12663  00FEA6  33                 	db	51	;'3'
 12664  00FEA7  0A                 	db	10
 12665  00FEA8  0D                 	db	13
 12666  00FEA9  00                 	db	0
 12667  00FEAA                     STR_175:
 12668  00FEAA  50                 	db	80	;'P'
 12669  00FEAB  53                 	db	83	;'S'
 12670  00FEAC  4F                 	db	79	;'O'
 12671  00FEAD  43                 	db	67	;'C'
 12672  00FEAE  73                 	db	115	;'s'
 12673  00FEAF  20                 	db	32
 12674  00FEB0  53                 	db	83	;'S'
 12675  00FEB1  55                 	db	85	;'U'
 12676  00FEB2  43                 	db	67	;'C'
 12677  00FEB3  4B                 	db	75	;'K'
 12678  00FEB4  0A                 	db	10
 12679  00FEB5  0D                 	db	13
 12680  00FEB6  00                 	db	0
 12681  00FEB7                     STR_59:
 12682  00FEB7  52                 	db	82	;'R'
 12683  00FEB8  65                 	db	101	;'e'
 12684  00FEB9  76                 	db	118	;'v'
 12685  00FEBA  69                 	db	105	;'i'
 12686  00FEBB  73                 	db	115	;'s'
 12687  00FEBC  69                 	db	105	;'i'
 12688  00FEBD  6F                 	db	111	;'o'
 12689  00FEBE  6E                 	db	110	;'n'
 12690  00FEBF  20                 	db	32
 12691  00FEC0  49                 	db	73	;'I'
 12692  00FEC1  44                 	db	68	;'D'
 12693  00FEC2  3F                 	db	63	;'?'
 12694  00FEC3  00                 	db	0
 12695  00FEC4                     STR_92:
 12696  00FEC4  4D                 	db	77	;'M'
 12697  00FEC5  65                 	db	101	;'e'
 12698  00FEC6  61                 	db	97	;'a'
 12699  00FEC7  73                 	db	115	;'s'
 12700  00FEC8  75                 	db	117	;'u'
 12701  00FEC9  72                 	db	114	;'r'
 12702  00FECA  65                 	db	101	;'e'
 12703  00FECB  20                 	db	32
 12704  00FECC  46                 	db	70	;'F'
 12705  00FECD  56                 	db	86	;'V'
 12706  00FECE  52                 	db	82	;'R'
 12707  00FECF  3F                 	db	63	;'?'
 12708  00FED0  00                 	db	0
 12709  00FED1                     STR_78:
 12710  00FED1  43                 	db	67	;'C'
 12711  00FED2  6F                 	db	111	;'o'
 12712  00FED3  6D                 	db	109	;'m'
 12713  00FED4  6D                 	db	109	;'m'
 12714  00FED5  20                 	db	32
 12715  00FED6  45                 	db	69	;'E'
 12716  00FED7  72                 	db	114	;'r'
 12717  00FED8  72                 	db	114	;'r'
 12718  00FED9  6F                 	db	111	;'o'
 12719  00FEDA  72                 	db	114	;'r'
 12720  00FEDB  73                 	db	115	;'s'
 12721  00FEDC  3F                 	db	63	;'?'
 12722  00FEDD  00                 	db	0
 12723  00FEDE                     STR_126:
 12724  00FEDE  44                 	db	68	;'D'
 12725  00FEDF  69                 	db	105	;'i'
 12726  00FEE0  73                 	db	115	;'s'
 12727  00FEE1  61                 	db	97	;'a'
 12728  00FEE2  62                 	db	98	;'b'
 12729  00FEE3  6C                 	db	108	;'l'
 12730  00FEE4  65                 	db	101	;'e'
 12731  00FEE5  20                 	db	32
 12732  00FEE6  4C                 	db	76	;'L'
 12733  00FEE7  6F                 	db	111	;'o'
 12734  00FEE8  61                 	db	97	;'a'
 12735  00FEE9  64                 	db	100	;'d'
 12736  00FEEA  00                 	db	0
 12737  00FEEB                     STR_106:
 12738  00FEEB  43                 	db	67	;'C'
 12739  00FEEC  6C                 	db	108	;'l'
 12740  00FEED  65                 	db	101	;'e'
 12741  00FEEE  61                 	db	97	;'a'
 12742  00FEEF  72                 	db	114	;'r'
 12743  00FEF0  20                 	db	32
 12744  00FEF1  45                 	db	69	;'E'
 12745  00FEF2  6E                 	db	110	;'n'
 12746  00FEF3  65                 	db	101	;'e'
 12747  00FEF4  72                 	db	114	;'r'
 12748  00FEF5  67                 	db	103	;'g'
 12749  00FEF6  79                 	db	121	;'y'
 12750  00FEF7  00                 	db	0
 12751  00FEF8                     STR_176:
 12752  00FEF8  50                 	db	80	;'P'
 12753  00FEF9  49                 	db	73	;'I'
 12754  00FEFA  43                 	db	67	;'C'
 12755  00FEFB  31                 	db	49	;'1'
 12756  00FEFC  38                 	db	56	;'8'
 12757  00FEFD  46                 	db	70	;'F'
 12758  00FEFE  36                 	db	54	;'6'
 12759  00FEFF  37                 	db	55	;'7'
 12760  00FF00  4B                 	db	75	;'K'
 12761  00FF01  34                 	db	52	;'4'
 12762  00FF02  30                 	db	48	;'0'
 12763  00FF03  00                 	db	0
 12764  00FF04                     STR_71:
 12765  00FF04  20                 	db	32
 12766  00FF05  20                 	db	32
 12767  00FF06  20                 	db	32
 12768  00FF07  20                 	db	32
 12769  00FF08  50                 	db	80	;'P'
 12770  00FF09  4F                 	db	79	;'O'
 12771  00FF0A  53                 	db	83	;'S'
 12772  00FF0B  31                 	db	49	;'1'
 12773  00FF0C  32                 	db	50	;'2'
 12774  00FF0D  0A                 	db	10
 12775  00FF0E  0D                 	db	13
 12776  00FF0F  00                 	db	0
 12777  00FF10                     STR_64:
 12778  00FF10  41                 	db	65	;'A'
 12779  00FF11  44                 	db	68	;'D'
 12780  00FF12  43                 	db	67	;'C'
 12781  00FF13  20                 	db	32
 12782  00FF14  45                 	db	69	;'E'
 12783  00FF15  72                 	db	114	;'r'
 12784  00FF16  72                 	db	114	;'r'
 12785  00FF17  6F                 	db	111	;'o'
 12786  00FF18  72                 	db	114	;'r'
 12787  00FF19  73                 	db	115	;'s'
 12788  00FF1A  3F                 	db	63	;'?'
 12789  00FF1B  00                 	db	0
 12790  00FF1C                     STR_117:
 12791  00FF1C  45                 	db	69	;'E'
 12792  00FF1D  6E                 	db	110	;'n'
 12793  00FF1E  61                 	db	97	;'a'
 12794  00FF1F  62                 	db	98	;'b'
 12795  00FF20  6C                 	db	108	;'l'
 12796  00FF21  65                 	db	101	;'e'
 12797  00FF22  20                 	db	32
 12798  00FF23  4C                 	db	76	;'L'
 12799  00FF24  6F                 	db	111	;'o'
 12800  00FF25  61                 	db	97	;'a'
 12801  00FF26  64                 	db	100	;'d'
 12802  00FF27  00                 	db	0
 12803  00FF28  25                 	db	37
 12804  00FF29  6C                 	db	108	;'l'
 12805  00FF2A  75                 	db	117	;'u'
 12806  00FF2B  2E                 	db	46
 12807  00FF2C  25                 	db	37
 12808  00FF2D  36                 	db	54	;'6'
 12809  00FF2E  2E                 	db	46
 12810  00FF2F  36                 	db	54	;'6'
 12811  00FF30  6C                 	db	108	;'l'
 12812  00FF31  75                 	db	117	;'u'
 12813  00FF32  00                 	db	0
 12814  00FF33                     STR_70:
 12815  00FF33  20                 	db	32
 12816  00FF34  20                 	db	32
 12817  00FF35  20                 	db	32
 12818  00FF36  20                 	db	32
 12819  00FF37  49                 	db	73	;'I'
 12820  00FF38  53                 	db	83	;'S'
 12821  00FF39  4E                 	db	78	;'N'
 12822  00FF3A  53                 	db	83	;'S'
 12823  00FF3B  0A                 	db	10
 12824  00FF3C  0D                 	db	13
 12825  00FF3D  00                 	db	0
 12826  00FF3E                     STR_68:
 12827  00FF3E  20                 	db	32
 12828  00FF3F  20                 	db	32
 12829  00FF40  20                 	db	32
 12830  00FF41  20                 	db	32
 12831  00FF42  41                 	db	65	;'A'
 12832  00FF43  56                 	db	86	;'V'
 12833  00FF44  53                 	db	83	;'S'
 12834  00FF45  53                 	db	83	;'S'
 12835  00FF46  0A                 	db	10
 12836  00FF47  0D                 	db	13
 12837  00FF48  00                 	db	0
 12838  00FF49                     STR_57:
 12839  00FF49  44                 	db	68	;'D'
 12840  00FF4A  65                 	db	101	;'e'
 12841  00FF4B  76                 	db	118	;'v'
 12842  00FF4C  69                 	db	105	;'i'
 12843  00FF4D  63                 	db	99	;'c'
 12844  00FF4E  65                 	db	101	;'e'
 12845  00FF4F  20                 	db	32
 12846  00FF50  49                 	db	73	;'I'
 12847  00FF51  44                 	db	68	;'D'
 12848  00FF52  3F                 	db	63	;'?'
 12849  00FF53  00                 	db	0
 12850  00FF54                     STR_141:
 12851  00FF54  4D                 	db	77	;'M'
 12852  00FF55  61                 	db	97	;'a'
 12853  00FF56  78                 	db	120	;'x'
 12854  00FF57  20                 	db	32
 12855  00FF58  50                 	db	80	;'P'
 12856  00FF59  6F                 	db	111	;'o'
 12857  00FF5A  77                 	db	119	;'w'
 12858  00FF5B  65                 	db	101	;'e'
 12859  00FF5C  72                 	db	114	;'r'
 12860  00FF5D  3F                 	db	63	;'?'
 12861  00FF5E  00                 	db	0
 12862  00FF5F                     STR_170:
 12863  00FF5F  45                 	db	69	;'E'
 12864  00FF60  61                 	db	97	;'a'
 12865  00FF61  73                 	db	115	;'s'
 12866  00FF62  74                 	db	116	;'t'
 12867  00FF63  65                 	db	101	;'e'
 12868  00FF64  72                 	db	114	;'r'
 12869  00FF65  20                 	db	32
 12870  00FF66  45                 	db	69	;'E'
 12871  00FF67  67                 	db	103	;'g'
 12872  00FF68  67                 	db	103	;'g'
 12873  00FF69  00                 	db	0
 12874  00FF6A                     STR_178:
 12875  00FF6A  55                 	db	85	;'U'
 12876  00FF6B  6E                 	db	110	;'n'
 12877  00FF6C  64                 	db	100	;'d'
 12878  00FF6D  65                 	db	101	;'e'
 12879  00FF6E  66                 	db	102	;'f'
 12880  00FF6F  69                 	db	105	;'i'
 12881  00FF70  6E                 	db	110	;'n'
 12882  00FF71  65                 	db	101	;'e'
 12883  00FF72  64                 	db	100	;'d'
 12884  00FF73  00                 	db	0
 12885  00FF74                     STR_69:
 12886  00FF74  20                 	db	32
 12887  00FF75  20                 	db	32
 12888  00FF76  20                 	db	32
 12889  00FF77  20                 	db	32
 12890  00FF78  46                 	db	70	;'F'
 12891  00FF79  56                 	db	86	;'V'
 12892  00FF7A  52                 	db	82	;'R'
 12893  00FF7B  0A                 	db	10
 12894  00FF7C  0D                 	db	13
 12895  00FF7D  00                 	db	0
 12896  00FF7E                     STR_61:
 12897  00FF7E  55                 	db	85	;'U'
 12898  00FF7F  73                 	db	115	;'s'
 12899  00FF80  65                 	db	101	;'e'
 12900  00FF81  72                 	db	114	;'r'
 12901  00FF82  20                 	db	32
 12902  00FF83  49                 	db	73	;'I'
 12903  00FF84  44                 	db	68	;'D'
 12904  00FF85  73                 	db	115	;'s'
 12905  00FF86  3F                 	db	63	;'?'
 12906  00FF87  00                 	db	0
 12907  00FF88                     STR_3:
 12908  00FF88  45                 	db	69	;'E'
 12909  00FF89  4C                 	db	76	;'L'
 12910  00FF8A  45                 	db	69	;'E'
 12911  00FF8B  4E                 	db	78	;'N'
 12912  00FF8C  20                 	db	32
 12913  00FF8D  33                 	db	51	;'3'
 12914  00FF8E  30                 	db	48	;'0'
 12915  00FF8F  33                 	db	51	;'3'
 12916  00FF90  35                 	db	53	;'5'
 12917  00FF91  00                 	db	0
 12918  00FF92                     STR_161:
 12919  00FF92  48                 	db	72	;'H'
 12920  00FF93  65                 	db	101	;'e'
 12921  00FF94  6C                 	db	108	;'l'
 12922  00FF95  70                 	db	112	;'p'
 12923  00FF96  20                 	db	32
 12924  00FF97  41                 	db	65	;'A'
 12925  00FF98  6C                 	db	108	;'l'
 12926  00FF99  6C                 	db	108	;'l'
 12927  00FF9A  00                 	db	0
 12928  00FF9B                     STR_191:
 12929  00FF9B  28                 	db	40
 12930  00FF9C  6E                 	db	110	;'n'
 12931  00FF9D  75                 	db	117	;'u'
 12932  00FF9E  6C                 	db	108	;'l'
 12933  00FF9F  6C                 	db	108	;'l'
 12934  00FFA0  29                 	db	41
 12935  00FFA1  00                 	db	0
 12936  00FFA2                     STR_53:
 12937  00FFA2  2A                 	db	42
 12938  00FFA3  49                 	db	73	;'I'
 12939  00FFA4  44                 	db	68	;'D'
 12940  00FFA5  4E                 	db	78	;'N'
 12941  00FFA6  3F                 	db	63	;'?'
 12942  00FFA7  00                 	db	0
 12943  00FFA8                     STR_48:
 12944  00FFA8  43                 	db	67	;'C'
 12945  00FFA9  6C                 	db	108	;'l'
 12946  00FFAA  65                 	db	101	;'e'
 12947  00FFAB  61                 	db	97	;'a'
 12948  00FFAC  72                 	db	114	;'r'
 12949  00FFAD  00                 	db	0
 12950  00FFAE                     STR_163:
 12951  00FFAE  48                 	db	72	;'H'
 12952  00FFAF  65                 	db	101	;'e'
 12953  00FFB0  6C                 	db	108	;'l'
 12954  00FFB1  70                 	db	112	;'p'
 12955  00FFB2  00                 	db	0
 12956  00FFB3                     STR_6:
 12957  00FFB3  1B                 	db	27
 12958  00FFB4  5B                 	db	91	;'['
 12959  00FFB5  32                 	db	50	;'2'
 12960  00FFB6  4A                 	db	74	;'J'
 12961  00FFB7  00                 	db	0
 12962  00FFB8                     STR_54:
 12963  00FFB8  49                 	db	73	;'I'
 12964  00FFB9  44                 	db	68	;'D'
 12965  00FFBA  4E                 	db	78	;'N'
 12966  00FFBB  00                 	db	0
 12967  00FFBC                     STR_7:
 12968  00FFBC  1B                 	db	27
 12969  00FFBD  5B                 	db	91	;'['
 12970  00FFBE  48                 	db	72	;'H'
 12971  00FFBF  00                 	db	0
 12972  00FFC0  1B                 	db	27
 12973  00FFC1  5B                 	db	91	;'['
 12974  00FFC2  73                 	db	115	;'s'
 12975  00FFC3  00                 	db	0
 12976  00FFC4  1B                 	db	27
 12977  00FFC5  5B                 	db	91	;'['
 12978  00FFC6  75                 	db	117	;'u'
 12979  00FFC7  00                 	db	0
 12980  00FFC8                     STR_1:
 12981  00FFC8  1B                 	db	27
 12982  00FFC9  5B                 	db	91	;'['
 12983  00FFCA  4B                 	db	75	;'K'
 12984  00FFCB  00                 	db	0
 12985  00FFCC                     STR_24:
 12986  00FFCC  33                 	db	51	;'3'
 12987  00FFCD  30                 	db	48	;'0'
 12988  00FFCE  00                 	db	0
 12989  00FFCF                     STR_25:
 12990  00FFCF  33                 	db	51	;'3'
 12991  00FFD0  31                 	db	49	;'1'
 12992  00FFD1  00                 	db	0
 12993  00FFD2                     STR_35:
 12994  00FFD2  34                 	db	52	;'4'
 12995  00FFD3  31                 	db	49	;'1'
 12996  00FFD4  00                 	db	0
 12997  00FFD5                     STR_26:
 12998  00FFD5  33                 	db	51	;'3'
 12999  00FFD6  32                 	db	50	;'2'
 13000  00FFD7  00                 	db	0
 13001  00FFD8                     STR_36:
 13002  00FFD8  34                 	db	52	;'4'
 13003  00FFD9  32                 	db	50	;'2'
 13004  00FFDA  00                 	db	0
 13005  00FFDB                     STR_27:
 13006  00FFDB  33                 	db	51	;'3'
 13007  00FFDC  33                 	db	51	;'3'
 13008  00FFDD  00                 	db	0
 13009  00FFDE                     STR_37:
 13010  00FFDE  34                 	db	52	;'4'
 13011  00FFDF  33                 	db	51	;'3'
 13012  00FFE0  00                 	db	0
 13013  00FFE1                     STR_28:
 13014  00FFE1  33                 	db	51	;'3'
 13015  00FFE2  34                 	db	52	;'4'
 13016  00FFE3  00                 	db	0
 13017  00FFE4                     STR_38:
 13018  00FFE4  34                 	db	52	;'4'
 13019  00FFE5  34                 	db	52	;'4'
 13020  00FFE6  00                 	db	0
 13021  00FFE7                     STR_39:
 13022  00FFE7  34                 	db	52	;'4'
 13023  00FFE8  35                 	db	53	;'5'
 13024  00FFE9  00                 	db	0
 13025  00FFEA                     STR_30:
 13026  00FFEA  33                 	db	51	;'3'
 13027  00FFEB  36                 	db	54	;'6'
 13028  00FFEC  00                 	db	0
 13029  00FFED                     STR_40:
 13030  00FFED  34                 	db	52	;'4'
 13031  00FFEE  36                 	db	54	;'6'
 13032  00FFEF  00                 	db	0
 13033  00FFF0                     STR_31:
 13034  00FFF0  33                 	db	51	;'3'
 13035  00FFF1  37                 	db	55	;'7'
 13036  00FFF2  00                 	db	0
 13037  00FFF3                     STR_41:
 13038  00FFF3  34                 	db	52	;'4'
 13039  00FFF4  37                 	db	55	;'7'
 13040  00FFF5  00                 	db	0
 13041  00FFF6                     STR_15:
 13042  00FFF6  1B                 	db	27
 13043  00FFF7  5B                 	db	91	;'['
 13044  00FFF8  00                 	db	0
 13045  00FFF9                     STR_21:
 13046  00FFF9  38                 	db	56	;'8'
 13047  00FFFA  00                 	db	0
 13048  00FFFB                     STR_23:
 13049  00FFFB  3B                 	db	59	;';'
 13050  00FFFC  00                 	db	0
 13051  00FFFD                     STR_43:
 13052  00FFFD  6D                 	db	109	;'m'
 13053  00FFFE  00                 	db	0
 13054  0000                     
 13055                           ; #config settings
 13056  00FFFF  00                 	db	0	; dummy byte at the end
 13057  0000                     
 13058                           	psect	nvBANK2
 13059  0002F6                     __pnvBANK2:
 13060                           	opt stack 0
 13061  0002F6                     _reset_cause:
 13062                           	opt stack 0
 13063  0002F6                     	ds	1
 13064  0000                     _INT0PPS	set	3568
 13065  0000                     _HLVDCON0bits	set	3778
 13066  0000                     _HLVDCON0	set	3778
 13067  0000                     _HLVDCON1	set	3779
 13068  0000                     _PIR8bits	set	3643
 13069  0000                     _FVRCONbits	set	3780
 13070  0000                     _FVRCON	set	3780
 13071  0000                     _RC2REG	set	3825
 13072  0000                     _RC2STAbits	set	3829
 13073  0000                     _TX2REG	set	3826
 13074  0000                     _TX2STAbits	set	3830
 13075  0000                     _SP2BRGH	set	3828
 13076  0000                     _SP2BRGL	set	3827
 13077  0000                     _TX2STA	set	3830
 13078  0000                     _RC2STA	set	3829
 13079  0000                     _BAUD2CON	set	3831
 13080  0000                     _PIR1bits	set	3636
 13081  0000                     _PIE1bits	set	3626
 13082  0000                     _PIR0bits	set	3635
 13083  0000                     _PIE0bits	set	3625
 13084  0000                     _PIR2bits	set	3637
 13085  0000                     _PIE2bits	set	3627
 13086  0000                     _PIR5bits	set	3640
 13087  0000                     _PIE5bits	set	3630
 13088  0000                     _PIR3bits	set	3638
 13089  0000                     _PIE3bits	set	3628
 13090  0000                     _IPR1bits	set	3616
 13091  0000                     _IPR0bits	set	3615
 13092  0000                     _IPR2bits	set	3617
 13093  0000                     _IPR5bits	set	3620
 13094  0000                     _IPR3bits	set	3618
 13095  0000                     _SSP1DATPPS	set	3610
 13096  0000                     _RC7PPS	set	3689
 13097  0000                     _RX2PPS	set	3601
 13098  0000                     _RC6PPS	set	3688
 13099  0000                     _SSP1CLKPPS	set	3609
 13100  0000                     _RG7PPS	set	3721
 13101  0000                     _SLRCONH	set	3774
 13102  0000                     _SLRCONG	set	3769
 13103  0000                     _SLRCONF	set	3761
 13104  0000                     _SLRCONE	set	3756
 13105  0000                     _SLRCOND	set	3748
 13106  0000                     _SLRCONC	set	3743
 13107  0000                     _SLRCONB	set	3735
 13108  0000                     _SLRCONA	set	3727
 13109  0000                     _ODCOND	set	3749
 13110  0000                     _ODCONC	set	3744
 13111  0000                     _ODCONH	set	3775
 13112  0000                     _ODCONB	set	3736
 13113  0000                     _ODCONG	set	3770
 13114  0000                     _ODCONA	set	3728
 13115  0000                     _ODCONF	set	3762
 13116  0000                     _ODCONE	set	3757
 13117  0000                     _WPUH	set	3776
 13118  0000                     _WPUC	set	3745
 13119  0000                     _WPUA	set	3729
 13120  0000                     _WPUG	set	3771
 13121  0000                     _WPUB	set	3737
 13122  0000                     _WPUE	set	3758
 13123  0000                     _WPUF	set	3763
 13124  0000                     _WPUD	set	3750
 13125  0000                     _ANSELA	set	3730
 13126  0000                     _ANSELF	set	3764
 13127  0000                     _ANSELG	set	3772
 13128  0000                     _ANSELE	set	3759
 13129  0000                     _ANSELB	set	3738
 13130  0000                     _ANSELD	set	3751
 13131  0000                     _PMD5	set	3665
 13132  0000                     _PMD4	set	3664
 13133  0000                     _PMD3	set	3663
 13134  0000                     _PMD2	set	3662
 13135  0000                     _PMD1	set	3661
 13136  0000                     _PMD0	set	3660
 13137  0000                     _OSCTUNE	set	3656
 13138  0000                     _OSCFRQ	set	3657
 13139  0000                     _OSCEN	set	3655
 13140  0000                     _OSCCON3	set	3653
 13141  0000                     _OSCCON1	set	3651
 13142  0000                     _SBOREN	set	29279
 13143  0000                     _PLLR	set	29232
 13144  0000                     _T7GCONbits	set	3889
 13145  0000                     _T7CONbits	set	3888
 13146  0000                     _T7CON	set	3888
 13147  0000                     _TMR7L	set	3886
 13148  0000                     _TMR7H	set	3887
 13149  0000                     _T7CLK	set	3891
 13150  0000                     _T7GATE	set	3890
 13151  0000                     _T7GCON	set	3889
 13152  0000                     _ADCON1bits	set	3929
 13153  0000                     _ADPRE	set	3934
 13154  0000                     _ADCON3bits	set	3931
 13155  0000                     _ADCON2bits	set	3930
 13156  0000                     _ADACQ	set	3932
 13157  0000                     _ADCLK	set	3927
 13158  0000                     _ADACT	set	3926
 13159  0000                     _ADREF	set	3928
 13160  0000                     _ADCON3	set	3931
 13161  0000                     _ADCON2	set	3930
 13162  0000                     _ADCON1	set	3929
 13163  0000                     _ADCAP	set	3933
 13164  0000                     _ADPCH	set	3935
 13165  0000                     _SSP1BUF	set	3985
 13166  0000                     _SSP1CON2bits	set	3990
 13167  0000                     _SSP1CON1bits	set	3989
 13168  0000                     _SSP1ADD	set	3986
 13169  0000                     _SSP1CON3	set	3991
 13170  0000                     _SSP1CON1	set	3989
 13171  0000                     _SSP1STAT	set	3988
 13172  0000                     _PCON0bits	set	4055
 13173  0000                     _LATGbits	set	3967
 13174  0000                     _LATFbits	set	3966
 13175  0000                     _PR4	set	4022
 13176  0000                     _TMR4	set	4021
 13177  0000                     _T4CONbits	set	4023
 13178  0000                     _T4RSTbits	set	4026
 13179  0000                     _T4HLTbits	set	4024
 13180  0000                     _T4CON	set	4023
 13181  0000                     _T4TMR	set	4021
 13182  0000                     _T4PR	set	4022
 13183  0000                     _T4RST	set	4026
 13184  0000                     _T4HLT	set	4024
 13185  0000                     _T4CLKCON	set	4025
 13186  0000                     _NVMDAT	set	3958
 13187  0000                     _NVMADRL	set	3956
 13188  0000                     _NVMADRH	set	3957
 13189  0000                     _NVMCON2	set	3960
 13190  0000                     _TABLAT	set	4085
 13191  0000                     _TBLPTRL	set	4086
 13192  0000                     _TBLPTRH	set	4087
 13193  0000                     _TBLPTRU	set	4088
 13194  0000                     _NVMCON1bits	set	3959
 13195  0000                     _T5GCONbits	set	4036
 13196  0000                     _T5CONbits	set	4035
 13197  0000                     _T5CON	set	4035
 13198  0000                     _TMR5L	set	4033
 13199  0000                     _TMR5H	set	4034
 13200  0000                     _T5CLK	set	4038
 13201  0000                     _T5GATE	set	4037
 13202  0000                     _T5GCON	set	4036
 13203  0000                     _ADERRL	set	3950
 13204  0000                     _ADERRH	set	3951
 13205  0000                     _ADPREVL	set	3937
 13206  0000                     _ADPREVH	set	3938
 13207  0000                     _ADFLTRL	set	3954
 13208  0000                     _ADFLTRH	set	3955
 13209  0000                     _ADSTATbits	set	3941
 13210  0000                     _ADACCL	set	3952
 13211  0000                     _ADACCH	set	3953
 13212  0000                     _ADCNT	set	3943
 13213  0000                     _ADRESL	set	3939
 13214  0000                     _ADRESH	set	3940
 13215  0000                     _ADCON0bits	set	3936
 13216  0000                     _ADCON0	set	3936
 13217  0000                     _ADSTAT	set	3941
 13218  0000                     _ADRPT	set	3942
 13219  0000                     _ADSTPTH	set	3945
 13220  0000                     _ADSTPTL	set	3944
 13221  0000                     _ADUTHH	set	3949
 13222  0000                     _ADUTHL	set	3948
 13223  0000                     _ADLTHH	set	3947
 13224  0000                     _ADLTHL	set	3946
 13225  0000                     _PR6	set	4016
 13226  0000                     _TMR6	set	4015
 13227  0000                     _T6CONbits	set	4017
 13228  0000                     _T6RSTbits	set	4020
 13229  0000                     _T6HLTbits	set	4018
 13230  0000                     _T6CON	set	4017
 13231  0000                     _T6TMR	set	4015
 13232  0000                     _T6PR	set	4016
 13233  0000                     _T6RST	set	4020
 13234  0000                     _T6HLT	set	4018
 13235  0000                     _T6CLKCON	set	4019
 13236  0000                     _INTCONbits	set	4082
 13237  0000                     _TRISD	set	3972
 13238  0000                     _TRISC	set	3971
 13239  0000                     _TRISH	set	3976
 13240  0000                     _TRISB	set	3970
 13241  0000                     _TRISG	set	3975
 13242  0000                     _TRISA	set	3969
 13243  0000                     _TRISF	set	3974
 13244  0000                     _TRISE	set	3973
 13245  0000                     _LATH	set	3968
 13246  0000                     _LATC	set	3963
 13247  0000                     _LATG	set	3967
 13248  0000                     _LATB	set	3962
 13249  0000                     _LATF	set	3966
 13250  0000                     _LATA	set	3961
 13251  0000                     _LATD	set	3964
 13252  0000                     _LATE	set	3965
 13253                           
 13254                           	psect	cinit
 13255  0199CA                     __pcinit:
 13256                           	opt stack 0
 13257  0199CA                     start_initialization:
 13258                           	opt stack 0
 13259  0199CA                     __initialization:
 13260                           	opt stack 0
 13261                           
 13262                           ; Initialize objects allocated to BANK2 (37 bytes)
 13263                           ; load TBLPTR registers with __pidataBANK2
 13264  0199CA  0E80               	movlw	low __pidataBANK2
 13265  0199CC  6EF6               	movwf	tblptrl,c
 13266  0199CE  0EAF               	movlw	high __pidataBANK2
 13267  0199D0  6EF7               	movwf	tblptrh,c
 13268  0199D2  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 13269  0199D4  6EF8               	movwf	tblptru,c
 13270  0199D6  EE02  F0D1         	lfsr	0,__pdataBANK2
 13271  0199DA  EE10 F025          	lfsr	1,37
 13272  0199DE                     copy_data0:
 13273  0199DE  0009               	tblrd		*+
 13274  0199E0  CFF5 FFEE          	movff	tablat,postinc0
 13275  0199E4  50E5               	movf	postdec1,w,c
 13276  0199E6  50E1               	movf	fsr1l,w,c
 13277  0199E8  E1FA               	bnz	copy_data0
 13278                           
 13279                           ; Initialize objects allocated to BANK0 (6 bytes)
 13280                           ; load TBLPTR registers with __pidataBANK0
 13281  0199EA  0E1C               	movlw	low __pidataBANK0
 13282  0199EC  6EF6               	movwf	tblptrl,c
 13283  0199EE  0EB3               	movlw	high __pidataBANK0
 13284  0199F0  6EF7               	movwf	tblptrh,c
 13285  0199F2  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 13286  0199F4  6EF8               	movwf	tblptru,c
 13287  0199F6  EE00  F0F0         	lfsr	0,__pdataBANK0
 13288  0199FA  EE10 F006          	lfsr	1,6
 13289  0199FE                     copy_data1:
 13290  0199FE  0009               	tblrd		*+
 13291  019A00  CFF5 FFEE          	movff	tablat,postinc0
 13292  019A04  50E5               	movf	postdec1,w,c
 13293  019A06  50E1               	movf	fsr1l,w,c
 13294  019A08  E1FA               	bnz	copy_data1
 13295                           
 13296                           ; Clear objects allocated to BANK4 (128 bytes)
 13297  019A0A  EE04  F000         	lfsr	0,__pbssBANK4
 13298  019A0E  0E80               	movlw	128
 13299  019A10                     clear_0:
 13300  019A10  6AEE               	clrf	postinc0,c
 13301  019A12  06E8               	decf	wreg,f,c
 13302  019A14  E1FD               	bnz	clear_0
 13303                           
 13304                           ; Clear objects allocated to BANK3 (192 bytes)
 13305  019A16  EE03  F000         	lfsr	0,__pbssBANK3
 13306  019A1A  0EC0               	movlw	192
 13307  019A1C                     clear_1:
 13308  019A1C  6AEE               	clrf	postinc0,c
 13309  019A1E  06E8               	decf	wreg,f,c
 13310  019A20  E1FD               	bnz	clear_1
 13311                           
 13312                           ; Clear objects allocated to BANK2 (148 bytes)
 13313  019A22  EE02  F000         	lfsr	0,__pbssBANK2
 13314  019A26  0E94               	movlw	148
 13315  019A28                     clear_2:
 13316  019A28  6AEE               	clrf	postinc0,c
 13317  019A2A  06E8               	decf	wreg,f,c
 13318  019A2C  E1FD               	bnz	clear_2
 13319                           
 13320                           ; Clear objects allocated to BANK1 (35 bytes)
 13321  019A2E  EE01  F0C6         	lfsr	0,__pbssBANK1
 13322  019A32  0E23               	movlw	35
 13323  019A34                     clear_3:
 13324  019A34  6AEE               	clrf	postinc0,c
 13325  019A36  06E8               	decf	wreg,f,c
 13326  019A38  E1FD               	bnz	clear_3
 13327                           
 13328                           ; Clear objects allocated to BITBANK0 (1 bytes)
 13329  019A3A  0100               	movlb	0
 13330  019A3C  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
 13331                           
 13332                           ; Clear objects allocated to BANK0 (5 bytes)
 13333  019A3E  0100               	movlb	0
 13334  019A40  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
 13335  019A42  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
 13336  019A44  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
 13337  019A46  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
 13338  019A48  6BF6               	clrf	__pbssBANK0& (0+255),b
 13339                           
 13340                           ; Clear objects allocated to BITCOMRAM (1 bytes)
 13341  019A4A  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
 13342  019A4C                     end_of_initialization:
 13343                           	opt stack 0
 13344  019A4C                     __end_of__initialization:
 13345                           	opt stack 0
 13346  019A4C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13347  019A4E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13348  019A50  0100               	movlb	0
 13349  019A52  EF69  F0C5         	goto	_main	;jump to C main() function
 13350                           tblptru	equ	0xFF8
 13351                           tblptrh	equ	0xFF7
 13352                           tblptrl	equ	0xFF6
 13353                           tablat	equ	0xFF5
 13354                           postinc0	equ	0xFEE
 13355                           wreg	equ	0xFE8
 13356                           postdec1	equ	0xFE5
 13357                           fsr1l	equ	0xFE1
 13358                           
 13359                           	psect	bitbssCOMRAM
 13360  0002F0                     __pbitbssCOMRAM:
 13361                           	opt stack 0
 13362  0002F0                     _load_enable:
 13363                           	opt stack 0
 13364  0002F0                     	ds	1
 13365                           tblptru	equ	0xFF8
 13366                           tblptrh	equ	0xFF7
 13367                           tblptrl	equ	0xFF6
 13368                           tablat	equ	0xFF5
 13369                           postinc0	equ	0xFEE
 13370                           wreg	equ	0xFE8
 13371                           postdec1	equ	0xFE5
 13372                           fsr1l	equ	0xFE1
 13373                           
 13374                           	psect	bitbssBANK0
 13375  0007D8                     __pbitbssBANK0:
 13376                           	opt stack 0
 13377  0007D8                     _eusart2RxStringReady:
 13378                           	opt stack 0
 13379  0007D8                     	ds	1
 13380                           tblptru	equ	0xFF8
 13381                           tblptrh	equ	0xFF7
 13382                           tblptrl	equ	0xFF6
 13383                           tablat	equ	0xFF5
 13384                           postinc0	equ	0xFEE
 13385                           wreg	equ	0xFE8
 13386                           postdec1	equ	0xFE5
 13387                           fsr1l	equ	0xFE1
 13388                           
 13389                           	psect	bssBANK0
 13390  0000F6                     __pbssBANK0:
 13391                           	opt stack 0
 13392  0000F6                     _Total_Energy:
 13393                           	opt stack 0
 13394  0000F6                     	ds	4
 13395  0000FA                     _eusart2RxHead:
 13396                           	opt stack 0
 13397  0000FA                     	ds	1
 13398                           tblptru	equ	0xFF8
 13399                           tblptrh	equ	0xFF7
 13400                           tblptrl	equ	0xFF6
 13401                           tablat	equ	0xFF5
 13402                           postinc0	equ	0xFEE
 13403                           wreg	equ	0xFE8
 13404                           postdec1	equ	0xFE5
 13405                           fsr1l	equ	0xFE1
 13406                           
 13407                           	psect	dataBANK0
 13408  0000F0                     __pdataBANK0:
 13409                           	opt stack 0
 13410  0000F0                     _dimming_period:
 13411                           	opt stack 0
 13412  0000F0                     	ds	2
 13413  0000F2                     _TRIAC_Firing_Angle:
 13414                           	opt stack 0
 13415  0000F2                     	ds	4
 13416                           tblptru	equ	0xFF8
 13417                           tblptrh	equ	0xFF7
 13418                           tblptrl	equ	0xFF6
 13419                           tablat	equ	0xFF5
 13420                           postinc0	equ	0xFEE
 13421                           wreg	equ	0xFE8
 13422                           postdec1	equ	0xFE5
 13423                           fsr1l	equ	0xFE1
 13424                           
 13425                           	psect	bssBANK1
 13426  0001C6                     __pbssBANK1:
 13427                           	opt stack 0
 13428  0001C6                     _Avg_Power:
 13429                           	opt stack 0
 13430  0001C6                     	ds	4
 13431  0001CA                     _Irms:
 13432                           	opt stack 0
 13433  0001CA                     	ds	4
 13434  0001CE                     _Ipk:
 13435                           	opt stack 0
 13436  0001CE                     	ds	4
 13437  0001D2                     _Temp_ADC_Result:
 13438                           	opt stack 0
 13439  0001D2                     	ds	4
 13440  0001D6                     _POS12_ADC_Result:
 13441                           	opt stack 0
 13442  0001D6                     	ds	4
 13443  0001DA                     _POS3P3_ADC_Result:
 13444                           	opt stack 0
 13445  0001DA                     	ds	4
 13446  0001DE                     _eusart2RxTail:
 13447                           	opt stack 0
 13448  0001DE                     	ds	1
 13449  0001DF                     _eusart2TxBufferRemaining:
 13450                           	opt stack 0
 13451  0001DF                     	ds	1
 13452  0001E0                     _eusart2TxTail:
 13453                           	opt stack 0
 13454  0001E0                     	ds	1
 13455  0001E1                     _eusart2TxHead:
 13456                           	opt stack 0
 13457  0001E1                     	ds	1
 13458  0001E2                     _FVR_ADC_Result:
 13459                           	opt stack 0
 13460  0001E2                     	ds	4
 13461  0001E6                     I2C1_ISR@i2c_address:
 13462                           	opt stack 0
 13463  0001E6                     	ds	2
 13464  0001E8                     _OLED_I2C_Status:
 13465                           	opt stack 0
 13466  0001E8                     	ds	1
 13467                           tblptru	equ	0xFF8
 13468                           tblptrh	equ	0xFF7
 13469                           tblptrl	equ	0xFF6
 13470                           tablat	equ	0xFF5
 13471                           postinc0	equ	0xFEE
 13472                           wreg	equ	0xFE8
 13473                           postdec1	equ	0xFE5
 13474                           fsr1l	equ	0xFE1
 13475                           
 13476                           	psect	bssBANK2
 13477  000200                     __pbssBANK2:
 13478                           	opt stack 0
 13479  000200                     _error_handler:
 13480                           	opt stack 0
 13481  000200                     	ds	9
 13482  000209                     _i2c1_object:
 13483                           	opt stack 0
 13484  000209                     	ds	7
 13485  000210                     _max_FVR_ADC_Result:
 13486                           	opt stack 0
 13487  000210                     	ds	4
 13488  000214                     _max_Temp_ADC_Result:
 13489                           	opt stack 0
 13490  000214                     	ds	4
 13491  000218                     _max_POS12_ADC_Result:
 13492                           	opt stack 0
 13493  000218                     	ds	4
 13494  00021C                     _max_POS3P3_ADC_Result:
 13495                           	opt stack 0
 13496  00021C                     	ds	4
 13497  000220                     _max_Power:
 13498                           	opt stack 0
 13499  000220                     	ds	4
 13500  000224                     _max_Irms:
 13501                           	opt stack 0
 13502  000224                     	ds	4
 13503  000228                     _load_on_time:
 13504                           	opt stack 0
 13505  000228                     	ds	4
 13506  00022C                     _dev_on_time:
 13507                           	opt stack 0
 13508  00022C                     	ds	4
 13509  000230                     _Vrms:
 13510                           	opt stack 0
 13511  000230                     	ds	4
 13512  000234                     _Imeas:
 13513                           	opt stack 0
 13514  000234                     	ds	4
 13515  000238                     _Vpk:
 13516                           	opt stack 0
 13517  000238                     	ds	4
 13518  00023C                     _ADC_Result_Scaling:
 13519                           	opt stack 0
 13520  00023C                     	ds	4
 13521  000240                     _AVSS_ADC_Result:
 13522                           	opt stack 0
 13523  000240                     	ds	4
 13524  000244                     _TMR4_InterruptHandler:
 13525                           	opt stack 0
 13526  000244                     	ds	3
 13527  000247                     _INT0_InterruptHandler:
 13528                           	opt stack 0
 13529  000247                     	ds	3
 13530  00024A                     _TMR5_InterruptHandler:
 13531                           	opt stack 0
 13532  00024A                     	ds	3
 13533  00024D                     _TMR7_InterruptHandler:
 13534                           	opt stack 0
 13535  00024D                     	ds	3
 13536  000250                     _ADCC_ADTI_InterruptHandler:
 13537                           	opt stack 0
 13538  000250                     	ds	3
 13539  000253                     _TMR6_InterruptHandler:
 13540                           	opt stack 0
 13541  000253                     	ds	3
 13542  000256                     _EUSART2_RxDefaultInterruptHandler:
 13543                           	opt stack 0
 13544  000256                     	ds	3
 13545  000259                     _EUSART2_TxDefaultInterruptHandler:
 13546                           	opt stack 0
 13547  000259                     	ds	3
 13548  00025C                     _errno:
 13549                           	opt stack 0
 13550  00025C                     	ds	2
 13551  00025E                     I2C1_ISR@pi2c_buf_ptr:
 13552                           	opt stack 0
 13553  00025E                     	ds	2
 13554  000260                     _p_i2c1_current:
 13555                           	opt stack 0
 13556  000260                     	ds	2
 13557  000262                     _p_i2c1_trb_current:
 13558                           	opt stack 0
 13559  000262                     	ds	2
 13560  000264                     TMR4_ISR@CountCallBack:
 13561                           	opt stack 0
 13562  000264                     	ds	2
 13563  000266                     _timer5ReloadVal:
 13564                           	opt stack 0
 13565  000266                     	ds	2
 13566  000268                     _timer7ReloadVal:
 13567                           	opt stack 0
 13568  000268                     	ds	2
 13569  00026A                     I2C1_ISR@i2c_10bit_address_restart:
 13570                           	opt stack 0
 13571  00026A                     	ds	1
 13572  00026B                     I2C1_ISR@i2c_bytes_left:
 13573                           	opt stack 0
 13574  00026B                     	ds	1
 13575  00026C                     _i2c1_trb_count:
 13576                           	opt stack 0
 13577  00026C                     	ds	1
 13578  00026D                     _i2c1_state:
 13579                           	opt stack 0
 13580  00026D                     	ds	1
 13581  00026E                     _current_adc_channel:
 13582                           	opt stack 0
 13583  00026E                     	ds	1
 13584  00026F                     _background_color:
 13585                           	opt stack 0
 13586  00026F                     	ds	1
 13587  000270                     _foreground_color:
 13588                           	opt stack 0
 13589  000270                     	ds	1
 13590  000271                     _attribute:
 13591                           	opt stack 0
 13592  000271                     	ds	1
 13593  000272                     _OLED_Frame:
 13594                           	opt stack 0
 13595  000272                     	ds	1
 13596  000273                     _eusart2RxCount:
 13597                           	opt stack 0
 13598  000273                     	ds	1
 13599  000274                     ftoa@buf:
 13600                           	opt stack 0
 13601  000274                     	ds	17
 13602  000285                     I2C1_MasterRead@trBlock:
 13603                           	opt stack 0
 13604  000285                     	ds	5
 13605  00028A                     I2C1_MasterWrite@trBlock:
 13606                           	opt stack 0
 13607  00028A                     	ds	5
 13608  00028F                     _i2c1_tr_queue:
 13609                           	opt stack 0
 13610  00028F                     	ds	5
 13611                           tblptru	equ	0xFF8
 13612                           tblptrh	equ	0xFF7
 13613                           tblptrl	equ	0xFF6
 13614                           tablat	equ	0xFF5
 13615                           postinc0	equ	0xFEE
 13616                           wreg	equ	0xFE8
 13617                           postdec1	equ	0xFE5
 13618                           fsr1l	equ	0xFE1
 13619                           
 13620                           	psect	dataBANK2
 13621  0002D1                     __pdataBANK2:
 13622                           	opt stack 0
 13623  0002D1                     getCauseOfResetString@strings:
 13624                           	opt stack 0
 13625  0002D1                     	ds	18
 13626  0002E3                     getDeviceIDString@F17550:
 13627                           	opt stack 0
 13628  0002E3                     	ds	6
 13629  0002E9                     _Irms_offset:
 13630                           	opt stack 0
 13631  0002E9                     	ds	4
 13632  0002ED                     _Vpk_const:
 13633                           	opt stack 0
 13634  0002ED                     	ds	4
 13635  0002F1                     _Temp_ADC_Offset:
 13636                           	opt stack 0
 13637  0002F1                     	ds	4
 13638  0002F5                     _next_channel:
 13639                           	opt stack 0
 13640  0002F5                     	ds	1
 13641                           tblptru	equ	0xFF8
 13642                           tblptrh	equ	0xFF7
 13643                           tblptrl	equ	0xFF6
 13644                           tablat	equ	0xFF5
 13645                           postinc0	equ	0xFEE
 13646                           wreg	equ	0xFE8
 13647                           postdec1	equ	0xFE5
 13648                           fsr1l	equ	0xFE1
 13649                           
 13650                           	psect	bssBANK3
 13651  000300                     __pbssBANK3:
 13652                           	opt stack 0
 13653  000300                     _eusart2RxBuffer:
 13654                           	opt stack 0
 13655  000300                     	ds	64
 13656  000340                     _OLED_RAM_Buffer:
 13657                           	opt stack 0
 13658  000340                     	ds	64
 13659  000380                     _line:
 13660                           	opt stack 0
 13661  000380                     	ds	64
 13662                           tblptru	equ	0xFF8
 13663                           tblptrh	equ	0xFF7
 13664                           tblptrl	equ	0xFF6
 13665                           tablat	equ	0xFF5
 13666                           postinc0	equ	0xFEE
 13667                           wreg	equ	0xFE8
 13668                           postdec1	equ	0xFE5
 13669                           fsr1l	equ	0xFE1
 13670                           
 13671                           	psect	bssBANK4
 13672  000400                     __pbssBANK4:
 13673                           	opt stack 0
 13674  000400                     _eusart2TxBuffer:
 13675                           	opt stack 0
 13676  000400                     	ds	128
 13677                           tblptru	equ	0xFF8
 13678                           tblptrh	equ	0xFF7
 13679                           tblptrl	equ	0xFF6
 13680                           tablat	equ	0xFF5
 13681                           postinc0	equ	0xFEE
 13682                           wreg	equ	0xFE8
 13683                           postdec1	equ	0xFE5
 13684                           fsr1l	equ	0xFE1
 13685                           
 13686                           	psect	cstackBANK2
 13687  000294                     __pcstackBANK2:
 13688                           	opt stack 0
 13689  000294                     terminal_textAttributes@foreground_color:
 13690                           	opt stack 0
 13691                           
 13692                           ; 1 bytes @ 0x0
 13693  000294                     	ds	1
 13694  000295                     terminal_textAttributes@output_buff:
 13695                           	opt stack 0
 13696                           
 13697                           ; 15 bytes @ 0x1
 13698  000295                     	ds	15
 13699  0002A4                     ringBufferLUT@arg_buff:
 13700                           	opt stack 0
 13701                           
 13702                           ; 3 bytes @ 0x10
 13703  0002A4                     	ds	3
 13704  0002A7                     ringBufferLUT@angle_degrees:
 13705                           	opt stack 0
 13706                           
 13707                           ; 4 bytes @ 0x13
 13708  0002A7                     	ds	4
 13709  0002AB                     ringBufferLUT@max_current_print:
 13710                           	opt stack 0
 13711                           
 13712                           ; 4 bytes @ 0x17
 13713  0002AB                     	ds	4
 13714  0002AF                     ringBufferLUT@max_Power_print:
 13715                           	opt stack 0
 13716                           
 13717                           ; 4 bytes @ 0x1B
 13718  0002AF                     	ds	4
 13719  0002B3                     ringBufferLUT@max_voltage_print:
 13720                           	opt stack 0
 13721                           
 13722                           ; 4 bytes @ 0x1F
 13723  0002B3                     	ds	4
 13724  0002B7                     ringBufferLUT@max_voltage_print_3311:
 13725                           	opt stack 0
 13726                           
 13727                           ; 4 bytes @ 0x23
 13728  0002B7                     	ds	4
 13729  0002BB                     ringBufferLUT@max_temp_print:
 13730                           	opt stack 0
 13731                           
 13732                           ; 4 bytes @ 0x27
 13733  0002BB                     	ds	4
 13734  0002BF                     ringBufferLUT@max_voltage_print_3317:
 13735                           	opt stack 0
 13736                           
 13737                           ; 4 bytes @ 0x2B
 13738  0002BF                     	ds	4
 13739  0002C3                     ringBufferLUT@index:
 13740                           	opt stack 0
 13741                           
 13742                           ; 2 bytes @ 0x2F
 13743  0002C3                     	ds	2
 13744  0002C5                     ringBufferLUT@percentage:
 13745                           	opt stack 0
 13746                           
 13747                           ; 2 bytes @ 0x31
 13748  0002C5                     	ds	2
 13749  0002C7                     ringBufferLUT@userID:
 13750                           	opt stack 0
 13751                           
 13752                           ; 2 bytes @ 0x33
 13753  0002C7                     	ds	2
 13754  0002C9                     terminal_ringBufferPull@charNumber:
 13755                           	opt stack 0
 13756                           
 13757                           ; 2 bytes @ 0x35
 13758  0002C9                     	ds	2
 13759  0002CB                     terminal_ringBufferPull@index_2968:
 13760                           	opt stack 0
 13761                           
 13762                           ; 2 bytes @ 0x37
 13763  0002CB                     	ds	2
 13764  0002CD                     terminal_ringBufferPull@index:
 13765                           	opt stack 0
 13766                           
 13767                           ; 2 bytes @ 0x39
 13768  0002CD                     	ds	2
 13769  0002CF                     ??_main:
 13770                           
 13771                           ; 1 bytes @ 0x3B
 13772  0002CF                     	ds	2
 13773                           tblptru	equ	0xFF8
 13774                           tblptrh	equ	0xFF7
 13775                           tblptrl	equ	0xFF6
 13776                           tablat	equ	0xFF5
 13777                           postinc0	equ	0xFEE
 13778                           wreg	equ	0xFE8
 13779                           postdec1	equ	0xFE5
 13780                           fsr1l	equ	0xFE1
 13781                           
 13782                           	psect	cstackBANK1
 13783  000100                     __pcstackBANK1:
 13784                           	opt stack 0
 13785  000100                     ??_heartbeatTimerCallback:
 13786  000100                     ADCC_StartConversion@channel:
 13787                           	opt stack 0
 13788  000100                     TMR7_WriteTimer@timerVal:
 13789                           	opt stack 0
 13790                           
 13791                           ; 2 bytes @ 0x0
 13792  000100                     	ds	1
 13793  000101                     
 13794                           ; 1 bytes @ 0x1
 13795  000101                     	ds	1
 13796  000102                     ??_INTERRUPT_InterruptManagerLow:
 13797  000102                     
 13798                           ; 1 bytes @ 0x2
 13799  000102                     	ds	21
 13800  000117                     ??_isdigit:
 13801  000117                     ?_strlen:
 13802                           	opt stack 0
 13803  000117                     ?_strcmp:
 13804                           	opt stack 0
 13805  000117                     ?_getCauseOfResetString:
 13806                           	opt stack 0
 13807  000117                     ?_strchr:
 13808                           	opt stack 0
 13809  000117                     ?___wmul:
 13810                           	opt stack 0
 13811  000117                     ?___awmod:
 13812                           	opt stack 0
 13813  000117                     ?__tdiv_to_l_:
 13814                           	opt stack 0
 13815  000117                     ?__div_to_l_:
 13816                           	opt stack 0
 13817  000117                     ?___lldiv:
 13818                           	opt stack 0
 13819  000117                     ?___xxtofl:
 13820                           	opt stack 0
 13821  000117                     EUSART2_Read@readValue:
 13822                           	opt stack 0
 13823  000117                     EUSART2_Write@txData:
 13824                           	opt stack 0
 13825  000117                     getCauseOfReset@return_reset_cause:
 13826                           	opt stack 0
 13827  000117                     DATAEE_WriteByte@bAdd:
 13828                           	opt stack 0
 13829  000117                     DATAEE_ReadByte@bAdd:
 13830                           	opt stack 0
 13831  000117                     I2C1_MasterTRBInsert@ptrb_list:
 13832                           	opt stack 0
 13833  000117                     I2C1_MasterWriteTRBBuild@ptrb:
 13834                           	opt stack 0
 13835  000117                     ___wmul@multiplier:
 13836                           	opt stack 0
 13837  000117                     ___awmod@dividend:
 13838                           	opt stack 0
 13839  000117                     memmove@d1:
 13840                           	opt stack 0
 13841  000117                     strcat@to:
 13842                           	opt stack 0
 13843  000117                     strcmp@s1:
 13844                           	opt stack 0
 13845  000117                     strcpy@to:
 13846                           	opt stack 0
 13847  000117                     strlen@s:
 13848                           	opt stack 0
 13849  000117                     strncpy@to:
 13850                           	opt stack 0
 13851  000117                     strchr@ptr:
 13852                           	opt stack 0
 13853  000117                     TMR6_SetInterruptHandler@InterruptHandler:
 13854                           	opt stack 0
 13855  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
 13856                           	opt stack 0
 13857  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
 13858                           	opt stack 0
 13859  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
 13860                           	opt stack 0
 13861  000117                     TMR7_SetInterruptHandler@InterruptHandler:
 13862                           	opt stack 0
 13863  000117                     TMR5_SetInterruptHandler@InterruptHandler:
 13864                           	opt stack 0
 13865  000117                     INT0_SetInterruptHandler@InterruptHandler:
 13866                           	opt stack 0
 13867  000117                     TMR4_SetInterruptHandler@InterruptHandler:
 13868                           	opt stack 0
 13869  000117                     __tdiv_to_l_@f1:
 13870                           	opt stack 0
 13871  000117                     FLASH_ReadByte@flashAddr:
 13872                           	opt stack 0
 13873  000117                     __div_to_l_@f1:
 13874                           	opt stack 0
 13875  000117                     ___flge@ff1:
 13876                           	opt stack 0
 13877  000117                     ___lldiv@dividend:
 13878                           	opt stack 0
 13879  000117                     ___xxtofl@val:
 13880                           	opt stack 0
 13881                           
 13882                           ; 4 bytes @ 0x17
 13883  000117                     	ds	1
 13884  000118                     putch@txData:
 13885                           	opt stack 0
 13886  000118                     _isdigit$4353:
 13887                           	opt stack 0
 13888                           
 13889                           ; 1 bytes @ 0x18
 13890  000118                     	ds	1
 13891  000119                     ??_strlen:
 13892  000119                     ?_readDoubleFromEEPROM:
 13893                           	opt stack 0
 13894  000119                     DATAEE_WriteByte@bData:
 13895                           	opt stack 0
 13896  000119                     getCauseOfResetString@r:
 13897                           	opt stack 0
 13898  000119                     isdigit@c:
 13899                           	opt stack 0
 13900  000119                     readDoubleFromEEPROM@starting_address:
 13901                           	opt stack 0
 13902  000119                     I2C1_MasterTRBInsert@pflag:
 13903                           	opt stack 0
 13904  000119                     I2C1_MasterWriteTRBBuild@pdata:
 13905                           	opt stack 0
 13906  000119                     ___wmul@multiplicand:
 13907                           	opt stack 0
 13908  000119                     ___awmod@divisor:
 13909                           	opt stack 0
 13910  000119                     memmove@s1:
 13911                           	opt stack 0
 13912  000119                     strcat@from:
 13913                           	opt stack 0
 13914  000119                     strcmp@s2:
 13915                           	opt stack 0
 13916  000119                     strcpy@from:
 13917                           	opt stack 0
 13918  000119                     strncpy@from:
 13919                           	opt stack 0
 13920  000119                     strchr@chr:
 13921                           	opt stack 0
 13922                           
 13923                           ; 2 bytes @ 0x19
 13924  000119                     	ds	1
 13925  00011A                     ??_TMR7_Initialize:
 13926  00011A                     ??_TMR5_Initialize:
 13927  00011A                     DATAEE_WriteByte@GIEBitValue:
 13928                           	opt stack 0
 13929  00011A                     __tdiv_to_l_@f2:
 13930                           	opt stack 0
 13931                           
 13932                           ; 3 bytes @ 0x1A
 13933  00011A                     	ds	1
 13934  00011B                     ??_strcmp:
 13935  00011B                     ??___xxtofl:
 13936  00011B                     ?_FLASH_ReadWord:
 13937                           	opt stack 0
 13938  00011B                     I2C1_MasterWriteTRBBuild@length:
 13939                           	opt stack 0
 13940  00011B                     ___awmod@counter:
 13941                           	opt stack 0
 13942  00011B                     ___wmul@product:
 13943                           	opt stack 0
 13944  00011B                     memmove@n:
 13945                           	opt stack 0
 13946  00011B                     strcat@cp:
 13947                           	opt stack 0
 13948  00011B                     strcpy@cp:
 13949                           	opt stack 0
 13950  00011B                     strlen@cp:
 13951                           	opt stack 0
 13952  00011B                     strncpy@size:
 13953                           	opt stack 0
 13954  00011B                     FLASH_ReadWord@flashAddr:
 13955                           	opt stack 0
 13956  00011B                     writeDoubleToEEPROM@input_double:
 13957                           	opt stack 0
 13958  00011B                     __div_to_l_@f2:
 13959                           	opt stack 0
 13960  00011B                     ___flge@ff2:
 13961                           	opt stack 0
 13962  00011B                     ___lldiv@divisor:
 13963                           	opt stack 0
 13964                           
 13965                           ; 4 bytes @ 0x1B
 13966  00011B                     	ds	1
 13967  00011C                     I2C1_MasterTRBInsert@count:
 13968                           	opt stack 0
 13969  00011C                     ___awmod@sign:
 13970                           	opt stack 0
 13971  00011C                     strcmp@r:
 13972                           	opt stack 0
 13973  00011C                     I2C1_MasterWriteTRBBuild@address:
 13974                           	opt stack 0
 13975                           
 13976                           ; 2 bytes @ 0x1C
 13977  00011C                     	ds	1
 13978  00011D                     ??_memmove:
 13979  00011D                     ??__tdiv_to_l_:
 13980  00011D                     ?_atoi:
 13981                           	opt stack 0
 13982  00011D                     ?_strncmp:
 13983                           	opt stack 0
 13984  00011D                     ?___awdiv:
 13985                           	opt stack 0
 13986  00011D                     atoi@s:
 13987                           	opt stack 0
 13988  00011D                     ___awdiv@dividend:
 13989                           	opt stack 0
 13990  00011D                     strncpy@cp:
 13991                           	opt stack 0
 13992  00011D                     strncmp@s1:
 13993                           	opt stack 0
 13994  00011D                     readDoubleFromEEPROM@output_data:
 13995                           	opt stack 0
 13996                           
 13997                           ; 4 bytes @ 0x1D
 13998  00011D                     	ds	1
 13999  00011E                     ??_I2C1_MasterWriteTRBBuild:
 14000                           
 14001                           ; 1 bytes @ 0x1E
 14002  00011E                     	ds	1
 14003  00011F                     ??_atoi:
 14004  00011F                     ??_FLASH_ReadWord:
 14005  00011F                     ??___flge:
 14006  00011F                     ___xxtofl@sign:
 14007                           	opt stack 0
 14008  00011F                     writeDoubleToEEPROM@starting_address:
 14009                           	opt stack 0
 14010  00011F                     ___awdiv@divisor:
 14011                           	opt stack 0
 14012  00011F                     memmove@d:
 14013                           	opt stack 0
 14014  00011F                     strncmp@s2:
 14015                           	opt stack 0
 14016  00011F                     __div_to_l_@quot:
 14017                           	opt stack 0
 14018  00011F                     ___lldiv@quotient:
 14019                           	opt stack 0
 14020                           
 14021                           ; 4 bytes @ 0x1F
 14022  00011F                     	ds	1
 14023  000120                     ___xxtofl@exp:
 14024                           	opt stack 0
 14025  000120                     I2C1_MasterWrite@pdata:
 14026                           	opt stack 0
 14027  000120                     __tdiv_to_l_@quot:
 14028                           	opt stack 0
 14029                           
 14030                           ; 4 bytes @ 0x20
 14031  000120                     	ds	1
 14032  000121                     atoi@sign:
 14033                           	opt stack 0
 14034  000121                     ___awdiv@counter:
 14035                           	opt stack 0
 14036  000121                     readDoubleFromEEPROM@byte_index:
 14037                           	opt stack 0
 14038  000121                     memmove@s:
 14039                           	opt stack 0
 14040  000121                     strncmp@len:
 14041                           	opt stack 0
 14042  000121                     writeDoubleToEEPROM@input_data:
 14043                           	opt stack 0
 14044  000121                     ___xxtofl@arg:
 14045                           	opt stack 0
 14046                           
 14047                           ; 4 bytes @ 0x21
 14048  000121                     	ds	1
 14049  000122                     ??_getMajorRevisionID:
 14050  000122                     ?_getDeviceID:
 14051                           	opt stack 0
 14052  000122                     ?_getUserID:
 14053                           	opt stack 0
 14054  000122                     I2C1_MasterWrite@length:
 14055                           	opt stack 0
 14056  000122                     ___awdiv@sign:
 14057                           	opt stack 0
 14058  000122                     getMinorRevisionID@REVID_RAW:
 14059                           	opt stack 0
 14060  000122                     atoi@a:
 14061                           	opt stack 0
 14062                           
 14063                           ; 2 bytes @ 0x22
 14064  000122                     	ds	1
 14065  000123                     ??_strncmp:
 14066  000123                     __div_to_l_@cntr:
 14067                           	opt stack 0
 14068  000123                     ___lldiv@counter:
 14069                           	opt stack 0
 14070  000123                     I2C1_MasterWrite@address:
 14071                           	opt stack 0
 14072  000123                     ___awdiv@quotient:
 14073                           	opt stack 0
 14074                           
 14075                           ; 2 bytes @ 0x23
 14076  000123                     	ds	1
 14077  000124                     ?_getDeviceIDString:
 14078                           	opt stack 0
 14079  000124                     ?___llmod:
 14080                           	opt stack 0
 14081  000124                     __div_to_l_@exp1:
 14082                           	opt stack 0
 14083  000124                     __tdiv_to_l_@cntr:
 14084                           	opt stack 0
 14085  000124                     getDeviceIDString@inputDevID:
 14086                           	opt stack 0
 14087  000124                     getUserID@initialOffset:
 14088                           	opt stack 0
 14089  000124                     ___llmod@dividend:
 14090                           	opt stack 0
 14091                           
 14092                           ; 4 bytes @ 0x24
 14093  000124                     	ds	1
 14094  000125                     ?___flneg:
 14095                           	opt stack 0
 14096  000125                     __tdiv_to_l_@exp1:
 14097                           	opt stack 0
 14098  000125                     getMajorRevisionID@REVID_RAW:
 14099                           	opt stack 0
 14100  000125                     writeDoubleToEEPROM@byte_index:
 14101                           	opt stack 0
 14102  000125                     I2C1_MasterWrite@pflag:
 14103                           	opt stack 0
 14104  000125                     ___flneg@f1:
 14105                           	opt stack 0
 14106                           
 14107                           ; 4 bytes @ 0x25
 14108  000125                     	ds	1
 14109  000126                     ??_getDeviceIDString:
 14110  000126                     ?_strstr:
 14111                           	opt stack 0
 14112  000126                     strstr@s1:
 14113                           	opt stack 0
 14114                           
 14115                           ; 2 bytes @ 0x26
 14116  000126                     	ds	1
 14117  000127                     ??_OLED_PutChar:
 14118  000127                     OLED_Command@temp:
 14119                           	opt stack 0
 14120                           
 14121                           ; 1 bytes @ 0x27
 14122  000127                     	ds	1
 14123  000128                     getUserID@inputUserID:
 14124                           	opt stack 0
 14125  000128                     OLED_Command@length:
 14126                           	opt stack 0
 14127  000128                     strstr@s2:
 14128                           	opt stack 0
 14129  000128                     ___llmod@divisor:
 14130                           	opt stack 0
 14131  000128                     getDeviceIDString@strings:
 14132                           	opt stack 0
 14133                           
 14134                           ; 6 bytes @ 0x28
 14135  000128                     	ds	1
 14136  000129                     ?___fladd:
 14137                           	opt stack 0
 14138  000129                     getUserID@IDOffset:
 14139                           	opt stack 0
 14140  000129                     OLED_Command@data_array:
 14141                           	opt stack 0
 14142  000129                     ___fladd@b:
 14143                           	opt stack 0
 14144                           
 14145                           ; 4 bytes @ 0x29
 14146  000129                     	ds	1
 14147  00012A                     
 14148                           ; 1 bytes @ 0x2A
 14149  00012A                     	ds	1
 14150  00012B                     OLED_YX@Column:
 14151                           	opt stack 0
 14152  00012B                     OLED_PutChar@data_array:
 14153                           	opt stack 0
 14154                           
 14155                           ; 9 bytes @ 0x2B
 14156  00012B                     	ds	1
 14157  00012C                     ??_OLED_YX:
 14158  00012C                     ___llmod@counter:
 14159                           	opt stack 0
 14160                           
 14161                           ; 1 bytes @ 0x2C
 14162  00012C                     	ds	1
 14163  00012D                     OLED_YX@Row:
 14164                           	opt stack 0
 14165  00012D                     ___fladd@a:
 14166                           	opt stack 0
 14167                           
 14168                           ; 4 bytes @ 0x2D
 14169  00012D                     	ds	4
 14170  000131                     ??___fladd:
 14171                           
 14172                           ; 1 bytes @ 0x31
 14173  000131                     	ds	3
 14174  000134                     OLED_PutChar@input_base:
 14175                           	opt stack 0
 14176                           
 14177                           ; 2 bytes @ 0x34
 14178  000134                     	ds	2
 14179  000136                     OLED_PutChar@length:
 14180                           	opt stack 0
 14181                           
 14182                           ; 1 bytes @ 0x36
 14183  000136                     	ds	1
 14184  000137                     OLED_PutChar@ch:
 14185                           	opt stack 0
 14186                           
 14187                           ; 1 bytes @ 0x37
 14188  000137                     	ds	1
 14189  000138                     OLED_Clear@row:
 14190                           	opt stack 0
 14191  000138                     OLED_WriteString@s:
 14192                           	opt stack 0
 14193                           
 14194                           ; 2 bytes @ 0x38
 14195  000138                     	ds	1
 14196  000139                     ___fladd@signs:
 14197                           	opt stack 0
 14198                           
 14199                           ; 1 bytes @ 0x39
 14200  000139                     	ds	1
 14201  00013A                     ___fladd@aexp:
 14202                           	opt stack 0
 14203  00013A                     OLED_Clear@col:
 14204                           	opt stack 0
 14205                           
 14206                           ; 2 bytes @ 0x3A
 14207  00013A                     	ds	1
 14208  00013B                     ___fladd@bexp:
 14209                           	opt stack 0
 14210                           
 14211                           ; 1 bytes @ 0x3B
 14212  00013B                     	ds	1
 14213  00013C                     ___fladd@grs:
 14214                           	opt stack 0
 14215                           
 14216                           ; 1 bytes @ 0x3C
 14217  00013C                     	ds	1
 14218  00013D                     ?___fldiv:
 14219                           	opt stack 0
 14220  00013D                     ?___flsub:
 14221                           	opt stack 0
 14222  00013D                     ___flsub@b:
 14223                           	opt stack 0
 14224  00013D                     ___fldiv@b:
 14225                           	opt stack 0
 14226                           
 14227                           ; 4 bytes @ 0x3D
 14228  00013D                     	ds	4
 14229  000141                     ___flsub@a:
 14230                           	opt stack 0
 14231  000141                     ___fldiv@a:
 14232                           	opt stack 0
 14233                           
 14234                           ; 4 bytes @ 0x41
 14235  000141                     	ds	4
 14236  000145                     ??___fldiv:
 14237  000145                     
 14238                           ; 1 bytes @ 0x45
 14239  000145                     	ds	4
 14240  000149                     ___fldiv@sign:
 14241                           	opt stack 0
 14242                           
 14243                           ; 1 bytes @ 0x49
 14244  000149                     	ds	1
 14245  00014A                     ___fldiv@rem:
 14246                           	opt stack 0
 14247                           
 14248                           ; 4 bytes @ 0x4A
 14249  00014A                     	ds	4
 14250  00014E                     ___fldiv@new_exp:
 14251                           	opt stack 0
 14252                           
 14253                           ; 2 bytes @ 0x4E
 14254  00014E                     	ds	2
 14255  000150                     ___fldiv@grs:
 14256                           	opt stack 0
 14257                           
 14258                           ; 4 bytes @ 0x50
 14259  000150                     	ds	4
 14260  000154                     ___fldiv@bexp:
 14261                           	opt stack 0
 14262                           
 14263                           ; 1 bytes @ 0x54
 14264  000154                     	ds	1
 14265  000155                     ___fldiv@aexp:
 14266                           	opt stack 0
 14267                           
 14268                           ; 1 bytes @ 0x55
 14269  000155                     	ds	1
 14270  000156                     ?___flmul:
 14271                           	opt stack 0
 14272  000156                     ___flmul@b:
 14273                           	opt stack 0
 14274                           
 14275                           ; 4 bytes @ 0x56
 14276  000156                     	ds	4
 14277  00015A                     ___flmul@a:
 14278                           	opt stack 0
 14279                           
 14280                           ; 4 bytes @ 0x5A
 14281  00015A                     	ds	4
 14282  00015E                     ??___flmul:
 14283                           
 14284                           ; 1 bytes @ 0x5E
 14285  00015E                     	ds	4
 14286  000162                     ___flmul@sign:
 14287                           	opt stack 0
 14288                           
 14289                           ; 1 bytes @ 0x62
 14290  000162                     	ds	1
 14291  000163                     ___flmul@aexp:
 14292                           	opt stack 0
 14293                           
 14294                           ; 1 bytes @ 0x63
 14295  000163                     	ds	1
 14296  000164                     ___flmul@grs:
 14297                           	opt stack 0
 14298                           
 14299                           ; 4 bytes @ 0x64
 14300  000164                     	ds	4
 14301  000168                     ___flmul@bexp:
 14302                           	opt stack 0
 14303                           
 14304                           ; 1 bytes @ 0x68
 14305  000168                     	ds	1
 14306  000169                     ___flmul@prod:
 14307                           	opt stack 0
 14308                           
 14309                           ; 4 bytes @ 0x69
 14310  000169                     	ds	4
 14311  00016D                     ___flmul@temp:
 14312                           	opt stack 0
 14313                           
 14314                           ; 2 bytes @ 0x6D
 14315  00016D                     	ds	2
 14316  00016F                     ?_fround:
 14317                           	opt stack 0
 14318  00016F                     ?_scale:
 14319                           	opt stack 0
 14320                           
 14321                           ; 4 bytes @ 0x6F
 14322  00016F                     	ds	4
 14323  000173                     _fround$5212:
 14324                           	opt stack 0
 14325  000173                     _scale$5213:
 14326                           	opt stack 0
 14327                           
 14328                           ; 4 bytes @ 0x73
 14329  000173                     	ds	4
 14330  000177                     scale@scl:
 14331                           	opt stack 0
 14332  000177                     _fround$5211:
 14333                           	opt stack 0
 14334                           
 14335                           ; 4 bytes @ 0x77
 14336  000177                     	ds	1
 14337  000178                     ?___fltol:
 14338                           	opt stack 0
 14339  000178                     ___fltol@f1:
 14340                           	opt stack 0
 14341                           
 14342                           ; 4 bytes @ 0x78
 14343  000178                     	ds	3
 14344  00017B                     fround@prec:
 14345                           	opt stack 0
 14346                           
 14347                           ; 1 bytes @ 0x7B
 14348  00017B                     	ds	1
 14349  00017C                     ??___fltol:
 14350                           
 14351                           ; 1 bytes @ 0x7C
 14352  00017C                     	ds	4
 14353  000180                     ___fltol@sign1:
 14354                           	opt stack 0
 14355                           
 14356                           ; 1 bytes @ 0x80
 14357  000180                     	ds	1
 14358  000181                     ___fltol@exp1:
 14359                           	opt stack 0
 14360                           
 14361                           ; 1 bytes @ 0x81
 14362  000181                     	ds	1
 14363  000182                     ?__doprnt:
 14364                           	opt stack 0
 14365  000182                     __doprnt@pb:
 14366                           	opt stack 0
 14367                           
 14368                           ; 2 bytes @ 0x82
 14369  000182                     	ds	2
 14370  000184                     __doprnt@f:
 14371                           	opt stack 0
 14372                           
 14373                           ; 2 bytes @ 0x84
 14374  000184                     	ds	2
 14375  000186                     __doprnt@ap:
 14376                           	opt stack 0
 14377                           
 14378                           ; 2 bytes @ 0x86
 14379  000186                     	ds	2
 14380  000188                     ??__doprnt:
 14381                           
 14382                           ; 1 bytes @ 0x88
 14383  000188                     	ds	6
 14384  00018E                     __doprnt$5214:
 14385                           	opt stack 0
 14386                           
 14387                           ; 4 bytes @ 0x8E
 14388  00018E                     	ds	4
 14389  000192                     __doprnt@idx:
 14390                           	opt stack 0
 14391                           
 14392                           ; 1 bytes @ 0x92
 14393  000192                     	ds	1
 14394  000193                     __doprnt@cp:
 14395                           	opt stack 0
 14396                           
 14397                           ; 2 bytes @ 0x93
 14398  000193                     	ds	2
 14399  000195                     __doprnt@len:
 14400                           	opt stack 0
 14401                           
 14402                           ; 2 bytes @ 0x95
 14403  000195                     	ds	2
 14404  000197                     __doprnt@exp:
 14405                           	opt stack 0
 14406                           
 14407                           ; 2 bytes @ 0x97
 14408  000197                     	ds	2
 14409  000199                     __doprnt@tmpval:
 14410                           	opt stack 0
 14411                           
 14412                           ; 4 bytes @ 0x99
 14413  000199                     	ds	4
 14414  00019D                     __doprnt@fval:
 14415                           	opt stack 0
 14416                           
 14417                           ; 4 bytes @ 0x9D
 14418  00019D                     	ds	4
 14419  0001A1                     __doprnt@val:
 14420                           	opt stack 0
 14421                           
 14422                           ; 4 bytes @ 0xA1
 14423  0001A1                     	ds	4
 14424  0001A5                     __doprnt@width:
 14425                           	opt stack 0
 14426                           
 14427                           ; 2 bytes @ 0xA5
 14428  0001A5                     	ds	2
 14429  0001A7                     __doprnt@flag:
 14430                           	opt stack 0
 14431                           
 14432                           ; 2 bytes @ 0xA7
 14433  0001A7                     	ds	2
 14434  0001A9                     __doprnt@prec:
 14435                           	opt stack 0
 14436                           
 14437                           ; 2 bytes @ 0xA9
 14438  0001A9                     	ds	2
 14439  0001AB                     __doprnt@c:
 14440                           	opt stack 0
 14441                           
 14442                           ; 1 bytes @ 0xAB
 14443  0001AB                     	ds	1
 14444  0001AC                     ?_printf:
 14445                           	opt stack 0
 14446  0001AC                     printf@f:
 14447                           	opt stack 0
 14448                           
 14449                           ; 2 bytes @ 0xAC
 14450  0001AC                     	ds	10
 14451  0001B6                     printf@ap:
 14452                           	opt stack 0
 14453                           
 14454                           ; 2 bytes @ 0xB6
 14455  0001B6                     	ds	2
 14456  0001B8                     printf@pb:
 14457                           	opt stack 0
 14458                           
 14459                           ; 5 bytes @ 0xB8
 14460  0001B8                     	ds	5
 14461  0001BD                     terminal_textAttributes@background_color:
 14462                           	opt stack 0
 14463                           
 14464                           ; 1 bytes @ 0xBD
 14465  0001BD                     	ds	1
 14466  0001BE                     terminal_textAttributes@input_attribute:
 14467                           	opt stack 0
 14468                           
 14469                           ; 1 bytes @ 0xBE
 14470  0001BE                     	ds	1
 14471  0001BF                     ringBufferLUT@line:
 14472                           	opt stack 0
 14473                           
 14474                           ; 2 bytes @ 0xBF
 14475  0001BF                     	ds	2
 14476  0001C1                     ??_ringBufferLUT:
 14477                           
 14478                           ; 1 bytes @ 0xC1
 14479  0001C1                     	ds	2
 14480  0001C3                     ??_terminal_ringBufferPull:
 14481                           
 14482                           ; 1 bytes @ 0xC3
 14483  0001C3                     	ds	3
 14484                           tblptru	equ	0xFF8
 14485                           tblptrh	equ	0xFF7
 14486                           tblptrl	equ	0xFF6
 14487                           tablat	equ	0xFF5
 14488                           postinc0	equ	0xFEE
 14489                           wreg	equ	0xFE8
 14490                           postdec1	equ	0xFE5
 14491                           fsr1l	equ	0xFE1
 14492                           
 14493                           	psect	cstackBANK0
 14494  000060                     __pcstackBANK0:
 14495                           	opt stack 0
 14496  000060                     ??i2___fladd:
 14497                           
 14498                           ; 1 bytes @ 0x0
 14499  000060                     	ds	8
 14500  000068                     i2___fladd@signs:
 14501                           	opt stack 0
 14502                           
 14503                           ; 1 bytes @ 0x8
 14504  000068                     	ds	1
 14505  000069                     i2___fladd@aexp:
 14506                           	opt stack 0
 14507                           
 14508                           ; 1 bytes @ 0x9
 14509  000069                     	ds	1
 14510  00006A                     i2___fladd@bexp:
 14511                           	opt stack 0
 14512                           
 14513                           ; 1 bytes @ 0xA
 14514  00006A                     	ds	1
 14515  00006B                     i2___fladd@grs:
 14516                           	opt stack 0
 14517                           
 14518                           ; 1 bytes @ 0xB
 14519  00006B                     	ds	1
 14520  00006C                     ?_sqrt:
 14521                           	opt stack 0
 14522  00006C                     ?_eval_poly:
 14523                           	opt stack 0
 14524  00006C                     ?i2___fltol:
 14525                           	opt stack 0
 14526  00006C                     eval_poly@x:
 14527                           	opt stack 0
 14528  00006C                     sqrt@a:
 14529                           	opt stack 0
 14530  00006C                     i2___fltol@f1:
 14531                           	opt stack 0
 14532                           
 14533                           ; 4 bytes @ 0xC
 14534  00006C                     	ds	4
 14535  000070                     ??_sqrt:
 14536  000070                     ??i2___fltol:
 14537  000070                     eval_poly@d:
 14538                           	opt stack 0
 14539                           
 14540                           ; 2 bytes @ 0x10
 14541  000070                     	ds	2
 14542  000072                     eval_poly@n:
 14543                           	opt stack 0
 14544                           
 14545                           ; 2 bytes @ 0x12
 14546  000072                     	ds	2
 14547  000074                     ??_eval_poly:
 14548  000074                     sqrt@sign:
 14549                           	opt stack 0
 14550  000074                     i2___fltol@sign1:
 14551                           	opt stack 0
 14552                           
 14553                           ; 1 bytes @ 0x14
 14554  000074                     	ds	1
 14555  000075                     sqrt@i:
 14556                           	opt stack 0
 14557  000075                     i2___fltol@exp1:
 14558                           	opt stack 0
 14559                           
 14560                           ; 1 bytes @ 0x15
 14561  000075                     	ds	1
 14562  000076                     ?_abs:
 14563                           	opt stack 0
 14564  000076                     ?_floor:
 14565                           	opt stack 0
 14566  000076                     abs@a:
 14567                           	opt stack 0
 14568  000076                     sqrt@tfrac:
 14569                           	opt stack 0
 14570  000076                     floor@x:
 14571                           	opt stack 0
 14572                           
 14573                           ; 4 bytes @ 0x16
 14574  000076                     	ds	2
 14575  000078                     ??_abs:
 14576  000078                     eval_poly@res:
 14577                           	opt stack 0
 14578                           
 14579                           ; 4 bytes @ 0x18
 14580  000078                     	ds	2
 14581  00007A                     sqrt@p:
 14582                           	opt stack 0
 14583  00007A                     floor@i:
 14584                           	opt stack 0
 14585                           
 14586                           ; 4 bytes @ 0x1A
 14587  00007A                     	ds	1
 14588  00007B                     sqrt@grs:
 14589                           	opt stack 0
 14590                           
 14591                           ; 4 bytes @ 0x1B
 14592  00007B                     	ds	1
 14593  00007C                     ?_atan:
 14594                           	opt stack 0
 14595  00007C                     atan@f:
 14596                           	opt stack 0
 14597                           
 14598                           ; 4 bytes @ 0x1C
 14599  00007C                     	ds	2
 14600  00007E                     floor@expon:
 14601                           	opt stack 0
 14602                           
 14603                           ; 2 bytes @ 0x1E
 14604  00007E                     	ds	1
 14605  00007F                     sqrt@exp:
 14606                           	opt stack 0
 14607                           
 14608                           ; 2 bytes @ 0x1F
 14609  00007F                     	ds	1
 14610  000080                     ?i2___flsub:
 14611                           	opt stack 0
 14612  000080                     atan@y:
 14613                           	opt stack 0
 14614  000080                     i2___flsub@b:
 14615                           	opt stack 0
 14616                           
 14617                           ; 4 bytes @ 0x20
 14618  000080                     	ds	1
 14619  000081                     sqrt@root:
 14620                           	opt stack 0
 14621                           
 14622                           ; 4 bytes @ 0x21
 14623  000081                     	ds	3
 14624  000084                     atan@x:
 14625                           	opt stack 0
 14626  000084                     i2___flsub@a:
 14627                           	opt stack 0
 14628                           
 14629                           ; 4 bytes @ 0x24
 14630  000084                     	ds	1
 14631  000085                     sqrt@frac:
 14632                           	opt stack 0
 14633                           
 14634                           ; 4 bytes @ 0x25
 14635  000085                     	ds	3
 14636  000088                     ?i2__doprnt:
 14637                           	opt stack 0
 14638  000088                     ?_sin:
 14639                           	opt stack 0
 14640  000088                     atan@recip:
 14641                           	opt stack 0
 14642  000088                     i2__doprnt@pb:
 14643                           	opt stack 0
 14644  000088                     sin@f:
 14645                           	opt stack 0
 14646                           
 14647                           ; 4 bytes @ 0x28
 14648  000088                     	ds	1
 14649  000089                     atan@val_squared:
 14650                           	opt stack 0
 14651                           
 14652                           ; 4 bytes @ 0x29
 14653  000089                     	ds	1
 14654  00008A                     i2__doprnt@f:
 14655                           	opt stack 0
 14656                           
 14657                           ; 2 bytes @ 0x2A
 14658  00008A                     	ds	2
 14659  00008C                     i2__doprnt@ap:
 14660                           	opt stack 0
 14661  00008C                     sin@y:
 14662                           	opt stack 0
 14663                           
 14664                           ; 4 bytes @ 0x2C
 14665  00008C                     	ds	1
 14666  00008D                     atan@val:
 14667                           	opt stack 0
 14668                           
 14669                           ; 4 bytes @ 0x2D
 14670  00008D                     	ds	1
 14671  00008E                     ??i2__doprnt:
 14672                           
 14673                           ; 1 bytes @ 0x2E
 14674  00008E                     	ds	2
 14675  000090                     _sin$5454:
 14676                           	opt stack 0
 14677                           
 14678                           ; 4 bytes @ 0x30
 14679  000090                     	ds	1
 14680  000091                     ?_asin:
 14681                           	opt stack 0
 14682  000091                     asin@x:
 14683                           	opt stack 0
 14684                           
 14685                           ; 4 bytes @ 0x31
 14686  000091                     	ds	3
 14687  000094                     sin@x2:
 14688                           	opt stack 0
 14689  000094                     i2__doprnt$5458:
 14690                           	opt stack 0
 14691                           
 14692                           ; 4 bytes @ 0x34
 14693  000094                     	ds	1
 14694  000095                     asin@sgn:
 14695                           	opt stack 0
 14696                           
 14697                           ; 4 bytes @ 0x35
 14698  000095                     	ds	3
 14699  000098                     sin@sgn:
 14700                           	opt stack 0
 14701  000098                     i2__doprnt@idx:
 14702                           	opt stack 0
 14703                           
 14704                           ; 1 bytes @ 0x38
 14705  000098                     	ds	1
 14706  000099                     ?_currentMeasuredToPeak:
 14707                           	opt stack 0
 14708  000099                     i2__doprnt@cp:
 14709                           	opt stack 0
 14710  000099                     currentMeasuredToPeak@Measured:
 14711                           	opt stack 0
 14712  000099                     _asin$5453:
 14713                           	opt stack 0
 14714                           
 14715                           ; 4 bytes @ 0x39
 14716  000099                     	ds	2
 14717  00009B                     i2__doprnt@len:
 14718                           	opt stack 0
 14719                           
 14720                           ; 2 bytes @ 0x3B
 14721  00009B                     	ds	2
 14722  00009D                     i2__doprnt@exp:
 14723                           	opt stack 0
 14724  00009D                     currentMeasuredToPeak@Angle:
 14725                           	opt stack 0
 14726  00009D                     _asin$5452:
 14727                           	opt stack 0
 14728                           
 14729                           ; 4 bytes @ 0x3D
 14730  00009D                     	ds	2
 14731  00009F                     i2__doprnt@tmpval:
 14732                           	opt stack 0
 14733                           
 14734                           ; 4 bytes @ 0x3F
 14735  00009F                     	ds	2
 14736  0000A1                     currentMeasuredToPeak@Peak:
 14737                           	opt stack 0
 14738  0000A1                     asin@y:
 14739                           	opt stack 0
 14740                           
 14741                           ; 4 bytes @ 0x41
 14742  0000A1                     	ds	2
 14743  0000A3                     i2__doprnt@fval:
 14744                           	opt stack 0
 14745                           
 14746                           ; 4 bytes @ 0x43
 14747  0000A3                     	ds	2
 14748  0000A5                     _asin$5451:
 14749                           	opt stack 0
 14750                           
 14751                           ; 4 bytes @ 0x45
 14752  0000A5                     	ds	2
 14753  0000A7                     i2__doprnt@val:
 14754                           	opt stack 0
 14755                           
 14756                           ; 4 bytes @ 0x47
 14757  0000A7                     	ds	2
 14758  0000A9                     ?_acos:
 14759                           	opt stack 0
 14760  0000A9                     acos@x:
 14761                           	opt stack 0
 14762                           
 14763                           ; 4 bytes @ 0x49
 14764  0000A9                     	ds	2
 14765  0000AB                     i2__doprnt@width:
 14766                           	opt stack 0
 14767                           
 14768                           ; 2 bytes @ 0x4B
 14769  0000AB                     	ds	2
 14770  0000AD                     i2__doprnt@flag:
 14771                           	opt stack 0
 14772  0000AD                     _acos$5450:
 14773                           	opt stack 0
 14774                           
 14775                           ; 4 bytes @ 0x4D
 14776  0000AD                     	ds	2
 14777  0000AF                     i2__doprnt@prec:
 14778                           	opt stack 0
 14779                           
 14780                           ; 2 bytes @ 0x4F
 14781  0000AF                     	ds	2
 14782  0000B1                     ?_peakToRMS:
 14783                           	opt stack 0
 14784  0000B1                     i2__doprnt@c:
 14785                           	opt stack 0
 14786  0000B1                     peakToRMS@Peak:
 14787                           	opt stack 0
 14788                           
 14789                           ; 4 bytes @ 0x51
 14790  0000B1                     	ds	1
 14791  0000B2                     ?i2_printf:
 14792                           	opt stack 0
 14793  0000B2                     i2printf@f:
 14794                           	opt stack 0
 14795                           
 14796                           ; 2 bytes @ 0x52
 14797  0000B2                     	ds	2
 14798  0000B4                     i2printf@ap:
 14799                           	opt stack 0
 14800                           
 14801                           ; 2 bytes @ 0x54
 14802  0000B4                     	ds	1
 14803  0000B5                     peakToRMS@Angle:
 14804                           	opt stack 0
 14805                           
 14806                           ; 4 bytes @ 0x55
 14807  0000B5                     	ds	1
 14808  0000B6                     i2printf@pb:
 14809                           	opt stack 0
 14810                           
 14811                           ; 5 bytes @ 0x56
 14812  0000B6                     	ds	3
 14813  0000B9                     _peakToRMS$5443:
 14814                           	opt stack 0
 14815                           
 14816                           ; 4 bytes @ 0x59
 14817  0000B9                     	ds	4
 14818  0000BD                     _peakToRMS$5444:
 14819                           	opt stack 0
 14820                           
 14821                           ; 4 bytes @ 0x5D
 14822  0000BD                     	ds	4
 14823  0000C1                     _peakToRMS$5442:
 14824                           	opt stack 0
 14825                           
 14826                           ; 4 bytes @ 0x61
 14827  0000C1                     	ds	4
 14828  0000C5                     peakToRMS@RMS:
 14829                           	opt stack 0
 14830                           
 14831                           ; 4 bytes @ 0x65
 14832  0000C5                     	ds	4
 14833  0000C9                     _ADCPostProcessingCallback$5447:
 14834                           	opt stack 0
 14835                           
 14836                           ; 4 bytes @ 0x69
 14837  0000C9                     	ds	4
 14838  0000CD                     _ADCPostProcessingCallback$5448:
 14839                           	opt stack 0
 14840                           
 14841                           ; 4 bytes @ 0x6D
 14842  0000CD                     	ds	4
 14843  0000D1                     _ADCPostProcessingCallback$5449:
 14844                           	opt stack 0
 14845                           
 14846                           ; 4 bytes @ 0x71
 14847  0000D1                     	ds	4
 14848  0000D5                     ADCPostProcessingCallback@current_adc_channel:
 14849                           	opt stack 0
 14850                           
 14851                           ; 1 bytes @ 0x75
 14852  0000D5                     	ds	1
 14853  0000D6                     _ADCPostProcessingCallback$5445:
 14854                           	opt stack 0
 14855                           
 14856                           ; 4 bytes @ 0x76
 14857  0000D6                     	ds	4
 14858  0000DA                     _ADCPostProcessingCallback$5446:
 14859                           	opt stack 0
 14860                           
 14861                           ; 4 bytes @ 0x7A
 14862  0000DA                     	ds	4
 14863  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
 14864                           
 14865                           ; 1 bytes @ 0x7E
 14866  0000DE                     	ds	18
 14867                           tblptru	equ	0xFF8
 14868                           tblptrh	equ	0xFF7
 14869                           tblptrl	equ	0xFF6
 14870                           tablat	equ	0xFF5
 14871                           postinc0	equ	0xFEE
 14872                           wreg	equ	0xFE8
 14873                           postdec1	equ	0xFE5
 14874                           fsr1l	equ	0xFE1
 14875                           
 14876                           	psect	cstackCOMRAM
 14877  000001                     __pcstackCOMRAM:
 14878                           	opt stack 0
 14879  000001                     ??_I2C1_Stop:
 14880  000001                     ??i2_isdigit:
 14881  000001                     ?_ADCC_GetConversionResult:
 14882                           	opt stack 0
 14883  000001                     ?_ADCC_GetFilterValue:
 14884                           	opt stack 0
 14885  000001                     ?i2___wmul:
 14886                           	opt stack 0
 14887  000001                     ?i2___awmod:
 14888                           	opt stack 0
 14889  000001                     ?i2__div_to_l_:
 14890                           	opt stack 0
 14891  000001                     ?i2__tdiv_to_l_:
 14892                           	opt stack 0
 14893  000001                     ?i2___lldiv:
 14894                           	opt stack 0
 14895  000001                     i2EUSART2_Write@txData:
 14896                           	opt stack 0
 14897  000001                     TMR5_WriteTimer@timerVal:
 14898                           	opt stack 0
 14899  000001                     i2DATAEE_WriteByte@bAdd:
 14900                           	opt stack 0
 14901  000001                     i2DATAEE_ReadByte@bAdd:
 14902                           	opt stack 0
 14903  000001                     i2___wmul@multiplier:
 14904                           	opt stack 0
 14905  000001                     i2___awmod@dividend:
 14906                           	opt stack 0
 14907  000001                     i2__tdiv_to_l_@f1:
 14908                           	opt stack 0
 14909  000001                     frexp@value:
 14910                           	opt stack 0
 14911  000001                     i2__div_to_l_@f1:
 14912                           	opt stack 0
 14913  000001                     i2___lldiv@dividend:
 14914                           	opt stack 0
 14915                           
 14916                           ; 4 bytes @ 0x0
 14917  000001                     	ds	1
 14918  000002                     i2putch@txData:
 14919                           	opt stack 0
 14920  000002                     i2_isdigit$4353:
 14921                           	opt stack 0
 14922                           
 14923                           ; 1 bytes @ 0x1
 14924  000002                     	ds	1
 14925  000003                     ??_ADCC_GetConversionResult:
 14926  000003                     ??_ADCC_GetFilterValue:
 14927  000003                     ?i2_readDoubleFromEEPROM:
 14928                           	opt stack 0
 14929  000003                     I2C1_Stop@completion_code:
 14930                           	opt stack 0
 14931  000003                     i2DATAEE_WriteByte@bData:
 14932                           	opt stack 0
 14933  000003                     i2isdigit@c:
 14934                           	opt stack 0
 14935  000003                     i2readDoubleFromEEPROM@starting_address:
 14936                           	opt stack 0
 14937  000003                     i2___wmul@multiplicand:
 14938                           	opt stack 0
 14939  000003                     i2___awmod@divisor:
 14940                           	opt stack 0
 14941                           
 14942                           ; 2 bytes @ 0x2
 14943  000003                     	ds	1
 14944  000004                     ??_I2C1_ISR:
 14945  000004                     i2DATAEE_WriteByte@GIEBitValue:
 14946                           	opt stack 0
 14947  000004                     i2__tdiv_to_l_@f2:
 14948                           	opt stack 0
 14949                           
 14950                           ; 3 bytes @ 0x3
 14951  000004                     	ds	1
 14952  000005                     ?i2___xxtofl:
 14953                           	opt stack 0
 14954  000005                     i2___awmod@counter:
 14955                           	opt stack 0
 14956  000005                     frexp@eptr:
 14957                           	opt stack 0
 14958  000005                     i2___wmul@product:
 14959                           	opt stack 0
 14960  000005                     i2writeDoubleToEEPROM@input_double:
 14961                           	opt stack 0
 14962  000005                     i2__div_to_l_@f2:
 14963                           	opt stack 0
 14964  000005                     i2___lldiv@divisor:
 14965                           	opt stack 0
 14966  000005                     i2___xxtofl@val:
 14967                           	opt stack 0
 14968                           
 14969                           ; 4 bytes @ 0x4
 14970  000005                     	ds	1
 14971  000006                     i2___awmod@sign:
 14972                           	opt stack 0
 14973                           
 14974                           ; 1 bytes @ 0x5
 14975  000006                     	ds	1
 14976  000007                     ??_frexp:
 14977  000007                     ??i2__tdiv_to_l_:
 14978  000007                     ?i2___awdiv:
 14979                           	opt stack 0
 14980  000007                     i2___awdiv@dividend:
 14981                           	opt stack 0
 14982  000007                     i2readDoubleFromEEPROM@output_data:
 14983                           	opt stack 0
 14984                           
 14985                           ; 4 bytes @ 0x6
 14986  000007                     	ds	2
 14987  000009                     ??i2___xxtofl:
 14988  000009                     i2writeDoubleToEEPROM@starting_address:
 14989                           	opt stack 0
 14990  000009                     i2___awdiv@divisor:
 14991                           	opt stack 0
 14992  000009                     i2__div_to_l_@quot:
 14993                           	opt stack 0
 14994  000009                     i2___lldiv@quotient:
 14995                           	opt stack 0
 14996                           
 14997                           ; 4 bytes @ 0x8
 14998  000009                     	ds	1
 14999  00000A                     i2__tdiv_to_l_@quot:
 15000                           	opt stack 0
 15001                           
 15002                           ; 4 bytes @ 0x9
 15003  00000A                     	ds	1
 15004  00000B                     i2___awdiv@counter:
 15005                           	opt stack 0
 15006  00000B                     i2readDoubleFromEEPROM@byte_index:
 15007                           	opt stack 0
 15008  00000B                     i2writeDoubleToEEPROM@input_data:
 15009                           	opt stack 0
 15010                           
 15011                           ; 4 bytes @ 0xA
 15012  00000B                     	ds	1
 15013  00000C                     i2___awdiv@sign:
 15014                           	opt stack 0
 15015                           
 15016                           ; 1 bytes @ 0xB
 15017  00000C                     	ds	1
 15018  00000D                     i2__div_to_l_@cntr:
 15019                           	opt stack 0
 15020  00000D                     i2___lldiv@counter:
 15021                           	opt stack 0
 15022  00000D                     i2___xxtofl@sign:
 15023                           	opt stack 0
 15024  00000D                     i2___awdiv@quotient:
 15025                           	opt stack 0
 15026                           
 15027                           ; 2 bytes @ 0xC
 15028  00000D                     	ds	1
 15029  00000E                     ?i2___llmod:
 15030                           	opt stack 0
 15031  00000E                     i2__div_to_l_@exp1:
 15032                           	opt stack 0
 15033  00000E                     i2__tdiv_to_l_@cntr:
 15034                           	opt stack 0
 15035  00000E                     i2___xxtofl@exp:
 15036                           	opt stack 0
 15037  00000E                     i2___llmod@dividend:
 15038                           	opt stack 0
 15039                           
 15040                           ; 4 bytes @ 0xD
 15041  00000E                     	ds	1
 15042  00000F                     i2__tdiv_to_l_@exp1:
 15043                           	opt stack 0
 15044  00000F                     i2writeDoubleToEEPROM@byte_index:
 15045                           	opt stack 0
 15046  00000F                     i2___xxtofl@arg:
 15047                           	opt stack 0
 15048                           
 15049                           ; 4 bytes @ 0xE
 15050  00000F                     	ds	2
 15051  000011                     
 15052                           ; 1 bytes @ 0x10
 15053  000011                     	ds	1
 15054  000012                     i2___llmod@divisor:
 15055                           	opt stack 0
 15056                           
 15057                           ; 4 bytes @ 0x11
 15058  000012                     	ds	1
 15059  000013                     ?i2___fldiv:
 15060                           	opt stack 0
 15061  000013                     i2___fldiv@b:
 15062                           	opt stack 0
 15063                           
 15064                           ; 4 bytes @ 0x12
 15065  000013                     	ds	3
 15066  000016                     i2___llmod@counter:
 15067                           	opt stack 0
 15068                           
 15069                           ; 1 bytes @ 0x15
 15070  000016                     	ds	1
 15071  000017                     i2___fldiv@a:
 15072                           	opt stack 0
 15073                           
 15074                           ; 4 bytes @ 0x16
 15075  000017                     	ds	4
 15076  00001B                     ??i2___fldiv:
 15077                           
 15078                           ; 1 bytes @ 0x1A
 15079  00001B                     	ds	4
 15080  00001F                     i2___fldiv@sign:
 15081                           	opt stack 0
 15082                           
 15083                           ; 1 bytes @ 0x1E
 15084  00001F                     	ds	1
 15085  000020                     i2___fldiv@rem:
 15086                           	opt stack 0
 15087                           
 15088                           ; 4 bytes @ 0x1F
 15089  000020                     	ds	4
 15090  000024                     i2___fldiv@new_exp:
 15091                           	opt stack 0
 15092                           
 15093                           ; 2 bytes @ 0x23
 15094  000024                     	ds	2
 15095  000026                     i2___fldiv@grs:
 15096                           	opt stack 0
 15097                           
 15098                           ; 4 bytes @ 0x25
 15099  000026                     	ds	4
 15100  00002A                     i2___fldiv@bexp:
 15101                           	opt stack 0
 15102                           
 15103                           ; 1 bytes @ 0x29
 15104  00002A                     	ds	1
 15105  00002B                     i2___fldiv@aexp:
 15106                           	opt stack 0
 15107                           
 15108                           ; 1 bytes @ 0x2A
 15109  00002B                     	ds	1
 15110  00002C                     ?i2___flneg:
 15111                           	opt stack 0
 15112  00002C                     i2___flneg@f1:
 15113                           	opt stack 0
 15114                           
 15115                           ; 4 bytes @ 0x2B
 15116  00002C                     	ds	4
 15117  000030                     ?_fabs:
 15118                           	opt stack 0
 15119  000030                     ?i2___flmul:
 15120                           	opt stack 0
 15121  000030                     fabs@d:
 15122                           	opt stack 0
 15123  000030                     i2___flmul@b:
 15124                           	opt stack 0
 15125                           
 15126                           ; 4 bytes @ 0x2F
 15127  000030                     	ds	4
 15128  000034                     i2___flge@ff1:
 15129                           	opt stack 0
 15130  000034                     i2___flmul@a:
 15131                           	opt stack 0
 15132                           
 15133                           ; 4 bytes @ 0x33
 15134  000034                     	ds	4
 15135  000038                     ??i2___flmul:
 15136  000038                     i2___flge@ff2:
 15137                           	opt stack 0
 15138                           
 15139                           ; 4 bytes @ 0x37
 15140  000038                     	ds	4
 15141  00003C                     ??i2___flge:
 15142  00003C                     i2___flmul@sign:
 15143                           	opt stack 0
 15144                           
 15145                           ; 1 bytes @ 0x3B
 15146  00003C                     	ds	1
 15147  00003D                     i2___flmul@aexp:
 15148                           	opt stack 0
 15149                           
 15150                           ; 1 bytes @ 0x3C
 15151  00003D                     	ds	1
 15152  00003E                     i2___flmul@grs:
 15153                           	opt stack 0
 15154                           
 15155                           ; 4 bytes @ 0x3D
 15156  00003E                     	ds	2
 15157  000040                     writeEnergyToEEPROMCallback@current_value:
 15158                           	opt stack 0
 15159                           
 15160                           ; 4 bytes @ 0x3F
 15161  000040                     	ds	2
 15162  000042                     i2___flmul@bexp:
 15163                           	opt stack 0
 15164                           
 15165                           ; 1 bytes @ 0x41
 15166  000042                     	ds	1
 15167  000043                     i2___flmul@prod:
 15168                           	opt stack 0
 15169                           
 15170                           ; 4 bytes @ 0x42
 15171  000043                     	ds	1
 15172  000044                     
 15173                           ; 1 bytes @ 0x43
 15174  000044                     	ds	3
 15175  000047                     i2___flmul@temp:
 15176                           	opt stack 0
 15177                           
 15178                           ; 2 bytes @ 0x46
 15179  000047                     	ds	2
 15180  000049                     ?i2_fround:
 15181                           	opt stack 0
 15182  000049                     ?i2_scale:
 15183                           	opt stack 0
 15184                           
 15185                           ; 4 bytes @ 0x48
 15186  000049                     	ds	4
 15187  00004D                     i2_fround$5456:
 15188                           	opt stack 0
 15189  00004D                     i2_scale$5457:
 15190                           	opt stack 0
 15191                           
 15192                           ; 4 bytes @ 0x4C
 15193  00004D                     	ds	4
 15194  000051                     i2scale@scl:
 15195                           	opt stack 0
 15196  000051                     i2_fround$5455:
 15197                           	opt stack 0
 15198                           
 15199                           ; 4 bytes @ 0x50
 15200  000051                     	ds	4
 15201  000055                     i2fround@prec:
 15202                           	opt stack 0
 15203                           
 15204                           ; 1 bytes @ 0x54
 15205  000055                     	ds	1
 15206  000056                     ?i2___fladd:
 15207                           	opt stack 0
 15208  000056                     i2___fladd@b:
 15209                           	opt stack 0
 15210                           
 15211                           ; 4 bytes @ 0x55
 15212  000056                     	ds	4
 15213  00005A                     i2___fladd@a:
 15214                           	opt stack 0
 15215                           
 15216                           ; 4 bytes @ 0x59
 15217  00005A                     	ds	4
 15218  00005E                     tblptru	equ	0xFF8
 15219                           tblptrh	equ	0xFF7
 15220                           tblptrl	equ	0xFF6
 15221                           tablat	equ	0xFF5
 15222                           postinc0	equ	0xFEE
 15223                           wreg	equ	0xFE8
 15224                           postdec1	equ	0xFE5
 15225                           fsr1l	equ	0xFE1
 15226                           
 15227                           ; 1 bytes @ 0x5D
 15228 ;;
 15229 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 15230 ;;
 15231 ;; *************** function _main *****************
 15232 ;; Defined at:
 15233 ;;		line 474 in file "main.c"
 15234 ;; Parameters:    Size  Location     Type
 15235 ;;		None
 15236 ;; Auto vars:     Size  Location     Type
 15237 ;;		None
 15238 ;; Return value:  Size  Location     Type
 15239 ;;                  1    wreg      void 
 15240 ;; Registers used:
 15241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15242 ;; Tracked objects:
 15243 ;;		On entry : 0/0
 15244 ;;		On exit  : 0/0
 15245 ;;		Unchanged: 0/0
 15246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15249 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 15250 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 15251 ;;Total ram usage:        2 bytes
 15252 ;; Hardware stack levels required when called:   21
 15253 ;; This function calls:
 15254 ;;		_ADCC_SetADTIInterruptHandler
 15255 ;;		_INT0_SetInterruptHandler
 15256 ;;		_OLED_Init
 15257 ;;		_OLED_UpdateFromRAMBuffer
 15258 ;;		_SYSTEM_Initialize
 15259 ;;		_TMR4_SetInterruptHandler
 15260 ;;		_TMR5_SetInterruptHandler
 15261 ;;		_TMR5_StopTimer
 15262 ;;		_TMR6_SetInterruptHandler
 15263 ;;		_TMR7_SetInterruptHandler
 15264 ;;		_getCauseOfReset
 15265 ;;		_recoverSRAMMaxFromEEPROM
 15266 ;;		_saveSRAMMaxToEEPROM
 15267 ;;		_strcpy
 15268 ;;		_terminal_clearTerminal
 15269 ;;		_terminal_ringBufferPull
 15270 ;;		_terminal_setCursorHome
 15271 ;;		_terminal_textAttributesReset
 15272 ;;		_updateErrorLEDs
 15273 ;; This function is called by:
 15274 ;;		Startup code after reset
 15275 ;; This function uses a non-reentrant model
 15276 ;;
 15277                           
 15278                           	psect	text0
 15279  018AD2                     __ptext0:
 15280                           	opt stack 0
 15281  018AD2                     _main:
 15282                           	opt stack 10
 15283                           
 15284                           ;main.c: 478: reset_cause = getCauseOfReset();
 15285                           
 15286                           ;incstack = 0
 15287  018AD2  EC28  F0D2         	call	_getCauseOfReset	;wreg free
 15288  018AD6  0102               	movlb	2	; () banked
 15289  018AD8  6FF6               	movwf	_reset_cause& (0+255),b
 15290                           
 15291                           ; BSR set to: 2
 15292                           ;main.c: 482: _delay((unsigned long)((250)*(64000000/4000.0)));
 15293  018ADA  0E15               	movlw	21
 15294  018ADC  0102               	movlb	2	; () banked
 15295  018ADE  6FD0               	movwf	(??_main+1)& (0+255),b
 15296  018AE0  0E4B               	movlw	75
 15297  018AE2  6FCF               	movwf	??_main& (0+255),b
 15298  018AE4  0EBE               	movlw	190
 15299  018AE6                     u35477:
 15300  018AE6  2EE8               	decfsz	wreg,f,c
 15301  018AE8  D7FE               	bra	u35477
 15302  018AEA  2FCF               	decfsz	??_main& (0+255),f,b
 15303  018AEC  D7FC               	bra	u35477
 15304  018AEE  2FD0               	decfsz	(??_main+1)& (0+255),f,b
 15305  018AF0  D7FA               	bra	u35477
 15306  018AF2  F000               	nop	
 15307                           
 15308                           ;main.c: 485: SYSTEM_Initialize();
 15309  018AF4  EC9A  F0D5         	call	_SYSTEM_Initialize	;wreg free
 15310                           
 15311                           ;main.c: 488: LATGbits.LATG0 = 0;
 15312  018AF8  907F               	bcf	3967,0,c	;volatile
 15313                           
 15314                           ;main.c: 489: LATGbits.LATG1 = 0;
 15315  018AFA  927F               	bcf	3967,1,c	;volatile
 15316                           
 15317                           ;main.c: 490: load_enable = 0;
 15318  018AFC  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 15319                           
 15320                           ;main.c: 493: TMR6_SetInterruptHandler(heartbeatTimerCallback);
 15321  018AFE  0E4A               	movlw	low _heartbeatTimerCallback
 15322  018B00  0101               	movlb	1	; () banked
 15323  018B02  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 15324  018B04  0EA9               	movlw	high _heartbeatTimerCallback
 15325  018B06  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15326  018B08  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
 15327  018B0A  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15328  018B0C  EC33  F0D9         	call	_TMR6_SetInterruptHandler	;wreg free
 15329                           
 15330                           ;main.c: 496: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
 15331  018B10  0EF0               	movlw	low _ADCPostProcessingCallback
 15332  018B12  0101               	movlb	1	; () banked
 15333  018B14  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 15334  018B16  0E40               	movlw	high _ADCPostProcessingCallback
 15335  018B18  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 15336  018B1A  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
 15337  018B1C  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 15338  018B1E  EC5D  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 15339                           
 15340                           ;main.c: 499: TMR7_SetInterruptHandler(acquisitionTimerCallback);
 15341  018B22  0EF8               	movlw	low _acquisitionTimerCallback
 15342  018B24  0101               	movlb	1	; () banked
 15343  018B26  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 15344  018B28  0EB1               	movlw	high _acquisitionTimerCallback
 15345  018B2A  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15346  018B2C  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
 15347  018B2E  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15348  018B30  EC2C  F0D9         	call	_TMR7_SetInterruptHandler	;wreg free
 15349                           
 15350                           ;main.c: 502: INT0_SetInterruptHandler(dimmingOffTimeCallback);
 15351  018B34  0E7C               	movlw	low _dimmingOffTimeCallback
 15352  018B36  0101               	movlb	1	; () banked
 15353  018B38  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 15354  018B3A  0EB1               	movlw	high _dimmingOffTimeCallback
 15355  018B3C  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15356  018B3E  0E01               	movlw	low (_dimmingOffTimeCallback shr (0+16))
 15357  018B40  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15358  018B42  EC48  F0D9         	call	_INT0_SetInterruptHandler	;wreg free
 15359                           
 15360                           ;main.c: 505: TMR5_SetInterruptHandler(dimmingOnTimeCallback);
 15361  018B46  0ED6               	movlw	low _dimmingOnTimeCallback
 15362  018B48  0101               	movlb	1	; () banked
 15363  018B4A  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 15364  018B4C  0EB2               	movlw	high _dimmingOnTimeCallback
 15365  018B4E  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15366  018B50  0E01               	movlw	low (_dimmingOnTimeCallback shr (0+16))
 15367  018B52  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15368  018B54  EC3A  F0D9         	call	_TMR5_SetInterruptHandler	;wreg free
 15369                           
 15370                           ;main.c: 508: TMR4_SetInterruptHandler(writeEnergyToEEPROMCallback);
 15371  018B58  0E70               	movlw	low _writeEnergyToEEPROMCallback
 15372  018B5A  0101               	movlb	1	; () banked
 15373  018B5C  6F17               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 15374  018B5E  0E9C               	movlw	high _writeEnergyToEEPROMCallback
 15375  018B60  6F18               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15376  018B62  0E01               	movlw	low (_writeEnergyToEEPROMCallback shr (0+16))
 15377  018B64  6F19               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15378  018B66  EC41  F0D9         	call	_TMR4_SetInterruptHandler	;wreg free
 15379                           
 15380                           ;main.c: 511: TMR5_StopTimer();
 15381  018B6A  EC97  F0D9         	call	_TMR5_StopTimer	;wreg free
 15382                           
 15383                           ;main.c: 512: PIE0bits.INT0IE = 0;
 15384  018B6E  010E               	movlb	14	; () banked
 15385  018B70  9129               	bcf	41,0,b	;volatile
 15386                           
 15387                           ; BSR set to: 14
 15388                           ;main.c: 515: recoverSRAMMaxFromEEPROM();
 15389  018B72  EC72  F0C2         	call	_recoverSRAMMaxFromEEPROM	;wreg free
 15390                           
 15391                           ;main.c: 518: (INTCONbits.GIEH = 1);
 15392  018B76  8EF2               	bsf	intcon,7,c	;volatile
 15393                           
 15394                           ;main.c: 521: (INTCONbits.GIEL = 1);
 15395  018B78  8CF2               	bsf	intcon,6,c	;volatile
 15396                           
 15397                           ;main.c: 524: terminal_clearTerminal();
 15398  018B7A  EC15  F0D9         	call	_terminal_clearTerminal	;wreg free
 15399                           
 15400                           ;main.c: 525: terminal_setCursorHome();
 15401  018B7E  EC05  F0D9         	call	_terminal_setCursorHome	;wreg free
 15402                           
 15403                           ;main.c: 526: terminal_textAttributesReset();
 15404  018B82  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 15405                           
 15406                           ;main.c: 529: OLED_Init();
 15407  018B86  EC50  F0CC         	call	_OLED_Init	;wreg free
 15408                           
 15409                           ;main.c: 532: strcpy(OLED_RAM_Buffer.line0, "AC Power Meter");
 15410  018B8A  0E40               	movlw	low _OLED_RAM_Buffer
 15411  018B8C  0101               	movlb	1	; () banked
 15412  018B8E  6F17               	movwf	strcpy@to& (0+255),b
 15413  018B90  0E03               	movlw	high _OLED_RAM_Buffer
 15414  018B92  6F18               	movwf	(strcpy@to+1)& (0+255),b
 15415  018B94  0E2D               	movlw	low STR_2
 15416  018B96  6F19               	movwf	strcpy@from& (0+255),b
 15417  018B98  0EFE               	movlw	high STR_2
 15418  018B9A  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 15419  018B9C  EC0C  F0D6         	call	_strcpy	;wreg free
 15420                           
 15421                           ;main.c: 533: strcpy(OLED_RAM_Buffer.line1, "ELEN 3035");
 15422  018BA0  0E50               	movlw	low (_OLED_RAM_Buffer+16)
 15423  018BA2  0101               	movlb	1	; () banked
 15424  018BA4  6F17               	movwf	strcpy@to& (0+255),b
 15425  018BA6  0E03               	movlw	high (_OLED_RAM_Buffer+16)
 15426  018BA8  6F18               	movwf	(strcpy@to+1)& (0+255),b
 15427  018BAA  0E88               	movlw	low STR_3
 15428  018BAC  6F19               	movwf	strcpy@from& (0+255),b
 15429  018BAE  0EFF               	movlw	high STR_3
 15430  018BB0  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 15431  018BB2  EC0C  F0D6         	call	_strcpy	;wreg free
 15432                           
 15433                           ;main.c: 534: strcpy(OLED_RAM_Buffer.line2, "Final Project");
 15434  018BB6  0E60               	movlw	low (_OLED_RAM_Buffer+32)
 15435  018BB8  0101               	movlb	1	; () banked
 15436  018BBA  6F17               	movwf	strcpy@to& (0+255),b
 15437  018BBC  0E03               	movlw	high (_OLED_RAM_Buffer+32)
 15438  018BBE  6F18               	movwf	(strcpy@to+1)& (0+255),b
 15439  018BC0  0E82               	movlw	low STR_4
 15440  018BC2  6F19               	movwf	strcpy@from& (0+255),b
 15441  018BC4  0EFE               	movlw	high STR_4
 15442  018BC6  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 15443  018BC8  EC0C  F0D6         	call	_strcpy	;wreg free
 15444                           
 15445                           ;main.c: 535: strcpy(OLED_RAM_Buffer.line3, "Boot Complete");
 15446  018BCC  0E70               	movlw	low (_OLED_RAM_Buffer+48)
 15447  018BCE  0101               	movlb	1	; () banked
 15448  018BD0  6F17               	movwf	strcpy@to& (0+255),b
 15449  018BD2  0E03               	movlw	high (_OLED_RAM_Buffer+48)
 15450  018BD4  6F18               	movwf	(strcpy@to+1)& (0+255),b
 15451  018BD6  0E74               	movlw	low STR_5
 15452  018BD8  6F19               	movwf	strcpy@from& (0+255),b
 15453  018BDA  0EFE               	movlw	high STR_5
 15454  018BDC  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 15455  018BDE  EC0C  F0D6         	call	_strcpy	;wreg free
 15456                           
 15457                           ;main.c: 536: OLED_UpdateFromRAMBuffer();
 15458  018BE2  ECA6  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 15459  018BE6                     
 15460                           ;main.c: 540: {
 15461                           ;main.c: 543: if (eusart2RxStringReady) {
 15462  018BE6  0100               	movlb	0	; () banked
 15463  018BE8  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 15464                           
 15465                           ; BSR set to: 0
 15466                           ;main.c: 545: terminal_ringBufferPull();
 15467  018BEA  ECFC  F0C5         	call	_terminal_ringBufferPull	;wreg free
 15468                           
 15469                           ;main.c: 547: }
 15470                           ;main.c: 550: saveSRAMMaxToEEPROM();
 15471  018BEE  EC81  F0BC         	call	_saveSRAMMaxToEEPROM	;wreg free
 15472                           
 15473                           ;main.c: 553: updateErrorLEDs();
 15474  018BF2  ECA6  F0D8         	call	_updateErrorLEDs	;wreg free
 15475  018BF6  D7F7               	goto	l1243
 15476  018BF8                     __end_of_main:
 15477                           	opt stack 0
 15478                           tblptru	equ	0xFF8
 15479                           tblptrh	equ	0xFF7
 15480                           tblptrl	equ	0xFF6
 15481                           tablat	equ	0xFF5
 15482                           intcon	equ	0xFF2
 15483                           postinc0	equ	0xFEE
 15484                           wreg	equ	0xFE8
 15485                           postdec1	equ	0xFE5
 15486                           fsr1l	equ	0xFE1
 15487                           
 15488 ;; *************** function _updateErrorLEDs *****************
 15489 ;; Defined at:
 15490 ;;		line 54 in file "error_handling.c"
 15491 ;; Parameters:    Size  Location     Type
 15492 ;;		None
 15493 ;; Auto vars:     Size  Location     Type
 15494 ;;		None
 15495 ;; Return value:  Size  Location     Type
 15496 ;;                  1    wreg      void 
 15497 ;; Registers used:
 15498 ;;		wreg, status,2, cstack
 15499 ;; Tracked objects:
 15500 ;;		On entry : 0/0
 15501 ;;		On exit  : 0/0
 15502 ;;		Unchanged: 0/0
 15503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15508 ;;Total ram usage:        0 bytes
 15509 ;; Hardware stack levels used:    1
 15510 ;; Hardware stack levels required when called:   14
 15511 ;; This function calls:
 15512 ;;		_getADCError
 15513 ;;		_getCOMMError
 15514 ;; This function is called by:
 15515 ;;		_main
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           
 15519                           	psect	text1
 15520  01B14C                     __ptext1:
 15521                           	opt stack 0
 15522  01B14C                     _updateErrorLEDs:
 15523                           	opt stack 16
 15524                           
 15525                           ;error_handling.c: 57: if (getADCError()) {
 15526                           
 15527                           ;incstack = 0
 15528  01B14C  EC5D  F0D6         	call	_getADCError	;wreg free
 15529  01B150  0900               	iorlw	0
 15530  01B152  A4D8               	btfss	status,2,c
 15531                           
 15532                           ;error_handling.c: 59: LATFbits.LATF3 = 1;
 15533  01B154  867E               	bsf	3966,3,c	;volatile
 15534                           
 15535                           ;error_handling.c: 61: }
 15536                           ;error_handling.c: 64: if (getCOMMError()) {
 15537  01B156  ECCA  F0D8         	call	_getCOMMError	;wreg free
 15538  01B15A  0900               	iorlw	0
 15539  01B15C  B4D8               	btfsc	status,2,c
 15540  01B15E  0012               	return	
 15541                           
 15542                           ;error_handling.c: 66: LATFbits.LATF1 = 1;
 15543  01B160  827E               	bsf	3966,1,c	;volatile
 15544  01B162  0012               	return	
 15545  01B164                     __end_of_updateErrorLEDs:
 15546                           	opt stack 0
 15547                           tblptru	equ	0xFF8
 15548                           tblptrh	equ	0xFF7
 15549                           tblptrl	equ	0xFF6
 15550                           tablat	equ	0xFF5
 15551                           intcon	equ	0xFF2
 15552                           postinc0	equ	0xFEE
 15553                           wreg	equ	0xFE8
 15554                           postdec1	equ	0xFE5
 15555                           fsr1l	equ	0xFE1
 15556                           status	equ	0xFD8
 15557                           
 15558 ;; *************** function _terminal_setCursorHome *****************
 15559 ;; Defined at:
 15560 ;;		line 85 in file "ring_buffer_interface.c"
 15561 ;; Parameters:    Size  Location     Type
 15562 ;;		None
 15563 ;; Auto vars:     Size  Location     Type
 15564 ;;		None
 15565 ;; Return value:  Size  Location     Type
 15566 ;;                  1    wreg      void 
 15567 ;; Registers used:
 15568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15569 ;; Tracked objects:
 15570 ;;		On entry : 0/0
 15571 ;;		On exit  : 0/0
 15572 ;;		Unchanged: 0/0
 15573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15578 ;;Total ram usage:        0 bytes
 15579 ;; Hardware stack levels used:    1
 15580 ;; Hardware stack levels required when called:   17
 15581 ;; This function calls:
 15582 ;;		_printf
 15583 ;; This function is called by:
 15584 ;;		_main
 15585 ;; This function uses a non-reentrant model
 15586 ;;
 15587                           
 15588                           	psect	text2
 15589  01B20A                     __ptext2:
 15590                           	opt stack 0
 15591  01B20A                     _terminal_setCursorHome:
 15592                           	opt stack 13
 15593                           
 15594                           ;ring_buffer_interface.c: 86: printf("\033[H");
 15595                           
 15596                           ;incstack = 0
 15597  01B20A  0EBC               	movlw	low STR_7
 15598  01B20C  0101               	movlb	1	; () banked
 15599  01B20E  6FAC               	movwf	printf@f& (0+255),b
 15600  01B210  0EFF               	movlw	high STR_7
 15601  01B212  6FAD               	movwf	(printf@f+1)& (0+255),b
 15602  01B214  EC22  F0D5         	call	_printf	;wreg free
 15603  01B218  0012               	return		;funcret
 15604  01B21A                     __end_of_terminal_setCursorHome:
 15605                           	opt stack 0
 15606                           tblptru	equ	0xFF8
 15607                           tblptrh	equ	0xFF7
 15608                           tblptrl	equ	0xFF6
 15609                           tablat	equ	0xFF5
 15610                           intcon	equ	0xFF2
 15611                           postinc0	equ	0xFEE
 15612                           wreg	equ	0xFE8
 15613                           postdec1	equ	0xFE5
 15614                           fsr1l	equ	0xFE1
 15615                           status	equ	0xFD8
 15616                           
 15617 ;; *************** function _terminal_ringBufferPull *****************
 15618 ;; Defined at:
 15619 ;;		line 12 in file "ring_buffer_interface.c"
 15620 ;; Parameters:    Size  Location     Type
 15621 ;;		None
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;  index           2   55[BANK2 ] int 
 15624 ;;  index           2   57[BANK2 ] int 
 15625 ;;  charNumber      2   53[BANK2 ] int 
 15626 ;; Return value:  Size  Location     Type
 15627 ;;                  1    wreg      void 
 15628 ;; Registers used:
 15629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15630 ;; Tracked objects:
 15631 ;;		On entry : 0/0
 15632 ;;		On exit  : 0/0
 15633 ;;		Unchanged: 0/0
 15634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15636 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 15637 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15638 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
 15639 ;;Total ram usage:        9 bytes
 15640 ;; Hardware stack levels used:    1
 15641 ;; Hardware stack levels required when called:   20
 15642 ;; This function calls:
 15643 ;;		_EUSART2_Read
 15644 ;;		_ringBufferLUT
 15645 ;;		_strlen
 15646 ;; This function is called by:
 15647 ;;		_main
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text3
 15652  018BF8                     __ptext3:
 15653                           	opt stack 0
 15654  018BF8                     _terminal_ringBufferPull:
 15655                           	opt stack 10
 15656                           
 15657                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
 15658                           
 15659                           ;incstack = 0
 15660  018BF8  C273  F2C9         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 15661  018BFC  0102               	movlb	2	; () banked
 15662  018BFE  6BCA               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 15663                           
 15664                           ; BSR set to: 2
 15665                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
 15666  018C00  0E00               	movlw	0
 15667  018C02  6FCE               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 15668  018C04  0E00               	movlw	0
 15669  018C06  6FCD               	movwf	terminal_ringBufferPull@index& (0+255),b
 15670  018C08                     l23695:
 15671                           
 15672                           ; BSR set to: 2
 15673  018C08  BFCE               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 15674  018C0A  D006               	goto	l1284
 15675  018C0C  51CE               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 15676  018C0E  E10F               	bnz	l23705
 15677  018C10  0E40               	movlw	64
 15678  018C12  5DCD               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 15679  018C14  B0D8               	btfsc	status,0,c
 15680  018C16  D00B               	goto	u35180
 15681  018C18                     l1284:
 15682                           
 15683                           ; BSR set to: 2
 15684                           ;ring_buffer_interface.c: 19: line[index] = '\0';
 15685                           
 15686                           ; BSR set to: 2
 15687  018C18  0E80               	movlw	low _line
 15688  018C1A  25CD               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 15689  018C1C  6ED9               	movwf	fsr2l,c
 15690  018C1E  0E03               	movlw	high _line
 15691  018C20  21CE               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 15692  018C22  6EDA               	movwf	fsr2h,c
 15693  018C24  0E00               	movlw	0
 15694  018C26  6EDF               	movwf	indf2,c
 15695                           
 15696                           ; BSR set to: 2
 15697  018C28  4BCD               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 15698  018C2A  2BCE               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 15699  018C2C  D7ED               	goto	l23695
 15700  018C2E                     u35180:
 15701  018C2E                     l23705:
 15702                           
 15703                           ; BSR set to: 2
 15704                           ;ring_buffer_interface.c: 21: }
 15705                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
 15706  018C2E  0E00               	movlw	0
 15707  018C30  6FCC               	movwf	(terminal_ringBufferPull@index_2968+1)& (0+255),b
 15708  018C32  0E00               	movlw	0
 15709  018C34  6FCB               	movwf	terminal_ringBufferPull@index_2968& (0+255),b
 15710  018C36  D00F               	goto	l1286
 15711  018C38                     
 15712                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
 15713                           
 15714                           ; BSR set to: 2
 15715  018C38  EC65  F0D3         	call	_EUSART2_Read	;wreg free
 15716  018C3C  0101               	movlb	1	; () banked
 15717  018C3E  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15718  018C40  0E80               	movlw	low _line
 15719  018C42  0102               	movlb	2	; () banked
 15720  018C44  25CB               	addwf	terminal_ringBufferPull@index_2968& (0+255),w,b
 15721  018C46  6ED9               	movwf	fsr2l,c
 15722  018C48  0E03               	movlw	high _line
 15723  018C4A  21CC               	addwfc	(terminal_ringBufferPull@index_2968+1)& (0+255),w,b
 15724  018C4C  6EDA               	movwf	fsr2h,c
 15725  018C4E  C1C3  FFDF         	movff	??_terminal_ringBufferPull,indf2
 15726                           
 15727                           ; BSR set to: 2
 15728  018C52  4BCB               	infsnz	terminal_ringBufferPull@index_2968& (0+255),f,b
 15729  018C54  2BCC               	incf	(terminal_ringBufferPull@index_2968+1)& (0+255),f,b
 15730  018C56                     l1286:
 15731                           
 15732                           ; BSR set to: 2
 15733                           
 15734                           ; BSR set to: 2
 15735  018C56  51C9               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 15736  018C58  5DCB               	subwf	terminal_ringBufferPull@index_2968& (0+255),w,b
 15737  018C5A  51CC               	movf	(terminal_ringBufferPull@index_2968+1)& (0+255),w,b
 15738  018C5C  0A80               	xorlw	128
 15739  018C5E  0101               	movlb	1	; () banked
 15740  018C60  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15741  018C62  0102               	movlb	2	; () banked
 15742  018C64  51CA               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 15743  018C66  0A80               	xorlw	128
 15744  018C68  0101               	movlb	1	; () banked
 15745  018C6A  59C3               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 15746  018C6C  A0D8               	btfss	status,0,c
 15747  018C6E  D7E4               	goto	l1287
 15748                           
 15749                           ; BSR set to: 1
 15750                           ;ring_buffer_interface.c: 28: }
 15751                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
 15752  018C70  C0FA  F1DE         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 15753                           
 15754                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
 15755                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
 15756  018C74  D017               	goto	l1289
 15757  018C76                     
 15758                           ; BSR set to: 1
 15759                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
 15760                           
 15761                           ; BSR set to: 1
 15762  018C76  0EFF               	movlw	255
 15763  018C78  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15764  018C7A  0EFF               	movlw	255
 15765  018C7C  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15766  018C7E  0E80               	movlw	low _line
 15767  018C80  6F17               	movwf	strlen@s& (0+255),b
 15768  018C82  0E03               	movlw	high _line
 15769  018C84  6F18               	movwf	(strlen@s+1)& (0+255),b
 15770  018C86  EC7D  F0D1         	call	_strlen	;wreg free
 15771  018C8A  0101               	movlb	1	; () banked
 15772  018C8C  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15773  018C8E  2717               	addwf	?_strlen& (0+255),f,b
 15774  018C90  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15775  018C92  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15776  018C94  0E80               	movlw	low _line
 15777  018C96  2517               	addwf	?_strlen& (0+255),w,b
 15778  018C98  6ED9               	movwf	fsr2l,c
 15779  018C9A  0E03               	movlw	high _line
 15780  018C9C  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15781  018C9E  6EDA               	movwf	fsr2h,c
 15782  018CA0  0E00               	movlw	0
 15783  018CA2  6EDF               	movwf	indf2,c
 15784  018CA4                     l1289:
 15785                           
 15786                           ; BSR set to: 1
 15787  018CA4  0EFF               	movlw	255
 15788  018CA6  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15789  018CA8  0EFF               	movlw	255
 15790  018CAA  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15791  018CAC  0E80               	movlw	low _line
 15792  018CAE  6F17               	movwf	strlen@s& (0+255),b
 15793  018CB0  0E03               	movlw	high _line
 15794  018CB2  6F18               	movwf	(strlen@s+1)& (0+255),b
 15795  018CB4  EC7D  F0D1         	call	_strlen	;wreg free
 15796  018CB8  0101               	movlb	1	; () banked
 15797  018CBA  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15798  018CBC  2717               	addwf	?_strlen& (0+255),f,b
 15799  018CBE  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15800  018CC0  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15801  018CC2  0E80               	movlw	low _line
 15802  018CC4  2517               	addwf	?_strlen& (0+255),w,b
 15803  018CC6  6ED9               	movwf	fsr2l,c
 15804  018CC8  0E03               	movlw	high _line
 15805  018CCA  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15806  018CCC  6EDA               	movwf	fsr2h,c
 15807  018CCE  0E0A               	movlw	10
 15808  018CD0  18DE               	xorwf	postinc2,w,c
 15809  018CD2  B4D8               	btfsc	status,2,c
 15810  018CD4  D7D0               	goto	l1290
 15811                           
 15812                           ; BSR set to: 1
 15813  018CD6  0EFF               	movlw	255
 15814  018CD8  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15815  018CDA  0EFF               	movlw	255
 15816  018CDC  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15817  018CDE  0E80               	movlw	low _line
 15818  018CE0  6F17               	movwf	strlen@s& (0+255),b
 15819  018CE2  0E03               	movlw	high _line
 15820  018CE4  6F18               	movwf	(strlen@s+1)& (0+255),b
 15821  018CE6  EC7D  F0D1         	call	_strlen	;wreg free
 15822  018CEA  0101               	movlb	1	; () banked
 15823  018CEC  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15824  018CEE  2717               	addwf	?_strlen& (0+255),f,b
 15825  018CF0  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15826  018CF2  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15827  018CF4  0E80               	movlw	low _line
 15828  018CF6  2517               	addwf	?_strlen& (0+255),w,b
 15829  018CF8  6ED9               	movwf	fsr2l,c
 15830  018CFA  0E03               	movlw	high _line
 15831  018CFC  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15832  018CFE  6EDA               	movwf	fsr2h,c
 15833  018D00  0E0D               	movlw	13
 15834  018D02  18DE               	xorwf	postinc2,w,c
 15835  018D04  B4D8               	btfsc	status,2,c
 15836  018D06  D7B7               	goto	l1290
 15837                           
 15838                           ; BSR set to: 1
 15839                           ;ring_buffer_interface.c: 40: }
 15840                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
 15841  018D08  0100               	movlb	0	; () banked
 15842  018D0A  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 15843                           
 15844                           ; BSR set to: 0
 15845                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
 15846  018D0C  0E80               	movlw	low _line
 15847  018D0E  0101               	movlb	1	; () banked
 15848  018D10  6FBF               	movwf	ringBufferLUT@line& (0+255),b
 15849  018D12  0E03               	movlw	high _line
 15850  018D14  6FC0               	movwf	(ringBufferLUT@line+1)& (0+255),b
 15851  018D16  EC00  F080         	call	_ringBufferLUT	;wreg free
 15852  018D1A  0012               	return		;funcret
 15853  018D1C                     __end_of_terminal_ringBufferPull:
 15854                           	opt stack 0
 15855                           tblptru	equ	0xFF8
 15856                           tblptrh	equ	0xFF7
 15857                           tblptrl	equ	0xFF6
 15858                           tablat	equ	0xFF5
 15859                           intcon	equ	0xFF2
 15860                           postinc0	equ	0xFEE
 15861                           wreg	equ	0xFE8
 15862                           postdec1	equ	0xFE5
 15863                           fsr1l	equ	0xFE1
 15864                           indf2	equ	0xFDF
 15865                           postinc2	equ	0xFDE
 15866                           fsr2h	equ	0xFDA
 15867                           fsr2l	equ	0xFD9
 15868                           status	equ	0xFD8
 15869                           
 15870 ;; *************** function _ringBufferLUT *****************
 15871 ;; Defined at:
 15872 ;;		line 61 in file "ring_buffer_LUT.c"
 15873 ;; Parameters:    Size  Location     Type
 15874 ;;  line            2  191[BANK1 ] PTR unsigned char 
 15875 ;;		 -> line(64), 
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;  angle_degree    4   19[BANK2 ] PTR unsigned char 
 15878 ;;  index           2   47[BANK2 ] int 
 15879 ;;  userID          2   51[BANK2 ] int 
 15880 ;;  max_voltage_    4   43[BANK2 ] int 
 15881 ;;  max_temp_pri    4   39[BANK2 ] int 
 15882 ;;  max_voltage_    4   35[BANK2 ] int 
 15883 ;;  max_voltage_    4   31[BANK2 ] int 
 15884 ;;  max_Power_pr    4   27[BANK2 ] int 
 15885 ;;  max_current_    4   23[BANK2 ] int 
 15886 ;;  arg_buff        3   16[BANK2 ] unsigned char [3]
 15887 ;;  percentage      2   49[BANK2 ] int 
 15888 ;; Return value:  Size  Location     Type
 15889 ;;                  1    wreg      void 
 15890 ;; Registers used:
 15891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15892 ;; Tracked objects:
 15893 ;;		On entry : 0/0
 15894 ;;		On exit  : 0/0
 15895 ;;		Unchanged: 0/0
 15896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15897 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15898 ;;      Locals:         0       0       0      37       0       0       0       0       0       0       0       0       
      +0       0       0
 15899 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15900 ;;      Totals:         0       0       4      37       0       0       0       0       0       0       0       0       
      +0       0       0
 15901 ;;Total ram usage:       41 bytes
 15902 ;; Hardware stack levels used:    1
 15903 ;; Hardware stack levels required when called:   19
 15904 ;; This function calls:
 15905 ;;		_TMR5_StopTimer
 15906 ;;		___fladd
 15907 ;;		___fldiv
 15908 ;;		___flmul
 15909 ;;		___flneg
 15910 ;;		___wmul
 15911 ;;		___xxtofl
 15912 ;;		_atoi
 15913 ;;		_clearADCErrors
 15914 ;;		_clearCOMMErrors
 15915 ;;		_getADCError
 15916 ;;		_getCOMMError
 15917 ;;		_getCauseOfResetString
 15918 ;;		_getDeviceID
 15919 ;;		_getDeviceIDString
 15920 ;;		_getMajorRevisionID
 15921 ;;		_getMinorRevisionID
 15922 ;;		_getUserID
 15923 ;;		_printf
 15924 ;;		_readDoubleFromEEPROM
 15925 ;;		_strcmp
 15926 ;;		_strstr
 15927 ;;		_terminal_printNewline
 15928 ;;		_terminal_textAttributes
 15929 ;;		_terminal_textAttributesReset
 15930 ;;		_writeDoubleToEEPROM
 15931 ;; This function is called by:
 15932 ;;		_terminal_ringBufferPull
 15933 ;; This function uses a non-reentrant model
 15934 ;;
 15935                           
 15936                           	psect	text4
 15937  010000                     __ptext4:
 15938                           	opt stack 0
 15939  010000                     _ringBufferLUT:
 15940                           	opt stack 10
 15941                           
 15942                           ;ring_buffer_LUT.c: 67: if((0 == strcmp(line, "Reset"))) {
 15943                           
 15944                           ;incstack = 0
 15945  010000  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 15946  010004  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15947  010008  0E7C               	movlw	low (STR_179+10)
 15948  01000A  0101               	movlb	1	; () banked
 15949  01000C  6F19               	movwf	strcmp@s2& (0+255),b
 15950  01000E  0EFD               	movlw	high (STR_179+10)
 15951  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15952  010012  EC51  F0D2         	call	_strcmp	;wreg free
 15953  010016  0101               	movlb	1	; () banked
 15954  010018  5117               	movf	?_strcmp& (0+255),w,b
 15955  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15956  01001C  A4D8               	btfss	status,2,c
 15957  01001E  D026               	goto	l1465
 15958                           
 15959                           ; BSR set to: 1
 15960                           ;ring_buffer_LUT.c: 71: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 15961  010020  C0F6  F11B         	movff	_Total_Energy,writeDoubleToEEPROM@input_double	;volatile
 15962  010024  C0F7  F11C         	movff	_Total_Energy+1,writeDoubleToEEPROM@input_double+1	;volatile
 15963  010028  C0F8  F11D         	movff	_Total_Energy+2,writeDoubleToEEPROM@input_double+2	;volatile
 15964  01002C  C0F9  F11E         	movff	_Total_Energy+3,writeDoubleToEEPROM@input_double+3	;volatile
 15965  010030  0E5F               	movlw	low _Total_Energy_address
 15966  010032  6EF6               	movwf	tblptrl,c
 15967  010034                     	if	1	;There is more than 1 active tblptr byte
 15968  010034  0ECF               	movlw	high _Total_Energy_address
 15969  010036  6EF7               	movwf	tblptrh,c
 15970  010038                     	endif
 15971  010038                     	if	1	;There are 3 active tblptr bytes
 15972  010038  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 15973  01003A  6EF8               	movwf	tblptru,c
 15974  01003C                     	endif
 15975  01003C  0009               	tblrd		*+
 15976  01003E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15977  010042  000A               	tblrd		*-
 15978  010044  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15979  010048  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 15980                           
 15981                           ;ring_buffer_LUT.c: 74: printf("\033[2J");
 15982  01004C  0EB3               	movlw	low STR_6
 15983  01004E  0101               	movlb	1	; () banked
 15984  010050  6FAC               	movwf	printf@f& (0+255),b
 15985  010052  0EFF               	movlw	high STR_6
 15986  010054  6FAD               	movwf	(printf@f+1)& (0+255),b
 15987  010056  EC22  F0D5         	call	_printf	;wreg free
 15988                           
 15989                           ;ring_buffer_LUT.c: 77: printf("\033[H");
 15990  01005A  0EBC               	movlw	low STR_7
 15991  01005C  0101               	movlb	1	; () banked
 15992  01005E  6FAC               	movwf	printf@f& (0+255),b
 15993  010060  0EFF               	movlw	high STR_7
 15994  010062  6FAD               	movwf	(printf@f+1)& (0+255),b
 15995  010064  EC22  F0D5         	call	_printf	;wreg free
 15996  010068  00FF               	reset		;# 
 15997                           
 15998                           ;ring_buffer_LUT.c: 82: }
 15999  01006A  0012               	return	
 16000  01006C                     l1465:
 16001                           
 16002                           ;ring_buffer_LUT.c: 85: else if((0 == strcmp(line, "Clear"))) {
 16003  01006C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16004  010070  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16005  010074  0EA8               	movlw	low STR_48
 16006  010076  0101               	movlb	1	; () banked
 16007  010078  6F19               	movwf	strcmp@s2& (0+255),b
 16008  01007A  0EFF               	movlw	high STR_48
 16009  01007C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16010  01007E  EC51  F0D2         	call	_strcmp	;wreg free
 16011  010082  0101               	movlb	1	; () banked
 16012  010084  5117               	movf	?_strcmp& (0+255),w,b
 16013  010086  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16014  010088  A4D8               	btfss	status,2,c
 16015  01008A  D00E               	goto	l1467
 16016                           
 16017                           ; BSR set to: 1
 16018                           ;ring_buffer_LUT.c: 88: printf("\033[2J");
 16019  01008C  0EB3               	movlw	low STR_6
 16020  01008E  6FAC               	movwf	printf@f& (0+255),b
 16021  010090  0EFF               	movlw	high STR_6
 16022  010092  6FAD               	movwf	(printf@f+1)& (0+255),b
 16023  010094  EC22  F0D5         	call	_printf	;wreg free
 16024                           
 16025                           ;ring_buffer_LUT.c: 91: printf("\033[H");
 16026  010098  0EBC               	movlw	low STR_7
 16027  01009A  0101               	movlb	1	; () banked
 16028  01009C  6FAC               	movwf	printf@f& (0+255),b
 16029  01009E  0EFF               	movlw	high STR_7
 16030  0100A0  6FAD               	movwf	(printf@f+1)& (0+255),b
 16031  0100A2  EC22  F0D5         	call	_printf	;wreg free
 16032                           
 16033                           ;ring_buffer_LUT.c: 93: }
 16034  0100A6  0012               	return	
 16035  0100A8                     l1467:
 16036                           
 16037                           ;ring_buffer_LUT.c: 96: else if((0 == strcmp(line, "Cause of Reset?"))) {
 16038  0100A8  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16039  0100AC  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16040  0100B0  0EB2               	movlw	low STR_51
 16041  0100B2  0101               	movlb	1	; () banked
 16042  0100B4  6F19               	movwf	strcmp@s2& (0+255),b
 16043  0100B6  0EFD               	movlw	high STR_51
 16044  0100B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16045  0100BA  EC51  F0D2         	call	_strcmp	;wreg free
 16046  0100BE  0101               	movlb	1	; () banked
 16047  0100C0  5117               	movf	?_strcmp& (0+255),w,b
 16048  0100C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16049  0100C4  A4D8               	btfss	status,2,c
 16050  0100C6  D019               	goto	l1469
 16051                           
 16052                           ; BSR set to: 1
 16053                           ;ring_buffer_LUT.c: 98: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16054  0100C8  0E00               	movlw	0
 16055  0100CA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16056  0100CC  0E00               	movlw	0
 16057  0100CE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16058  0100D0  0E02               	movlw	2
 16059  0100D2  EC6C  F0AA         	call	_terminal_textAttributes
 16060                           
 16061                           ;ring_buffer_LUT.c: 101: printf("The cause of the most recent device reset was: %s\n\r",
 16062                           ;ring_buffer_LUT.c: 102: getCauseOfResetString(reset_cause));
 16063  0100D6  0EA4               	movlw	low STR_52
 16064  0100D8  0101               	movlb	1	; () banked
 16065  0100DA  6FAC               	movwf	printf@f& (0+255),b
 16066  0100DC  0EF5               	movlw	high STR_52
 16067  0100DE  6FAD               	movwf	(printf@f+1)& (0+255),b
 16068  0100E0  0102               	movlb	2	; () banked
 16069  0100E2  51F6               	movf	_reset_cause& (0+255),w,b
 16070  0100E4  ECC4  F0D6         	call	_getCauseOfResetString
 16071  0100E8  C117  F1AE         	movff	?_getCauseOfResetString,?_printf+2
 16072  0100EC  C118  F1AF         	movff	?_getCauseOfResetString+1,?_printf+3
 16073  0100F0  EC22  F0D5         	call	_printf	;wreg free
 16074                           
 16075                           ;ring_buffer_LUT.c: 104: terminal_textAttributesReset();
 16076  0100F4  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16077                           
 16078                           ;ring_buffer_LUT.c: 106: }
 16079  0100F8  0012               	return	
 16080  0100FA                     l1469:
 16081                           
 16082                           ;ring_buffer_LUT.c: 109: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN
      +                          "))) {
 16083  0100FA  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16084  0100FE  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16085  010102  0EA2               	movlw	low STR_53
 16086  010104  0101               	movlb	1	; () banked
 16087  010106  6F19               	movwf	strcmp@s2& (0+255),b
 16088  010108  0EFF               	movlw	high STR_53
 16089  01010A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16090  01010C  EC51  F0D2         	call	_strcmp	;wreg free
 16091  010110  0101               	movlb	1	; () banked
 16092  010112  5117               	movf	?_strcmp& (0+255),w,b
 16093  010114  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16094  010116  B4D8               	btfsc	status,2,c
 16095  010118  D00F               	goto	u34280
 16096                           
 16097                           ; BSR set to: 1
 16098  01011A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16099  01011E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16100  010122  0EB8               	movlw	low STR_54
 16101  010124  6F19               	movwf	strcmp@s2& (0+255),b
 16102  010126  0EFF               	movlw	high STR_54
 16103  010128  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16104  01012A  EC51  F0D2         	call	_strcmp	;wreg free
 16105  01012E  0101               	movlb	1	; () banked
 16106  010130  5117               	movf	?_strcmp& (0+255),w,b
 16107  010132  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16108  010134  A4D8               	btfss	status,2,c
 16109  010136  D018               	goto	l1471
 16110  010138                     u34280:
 16111                           
 16112                           ; BSR set to: 1
 16113                           ;ring_buffer_LUT.c: 111: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16114                           
 16115                           ; BSR set to: 1
 16116  010138  0E00               	movlw	0
 16117  01013A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16118  01013C  0E00               	movlw	0
 16119  01013E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16120  010140  0E02               	movlw	2
 16121  010142  EC6C  F0AA         	call	_terminal_textAttributes
 16122                           
 16123                           ;ring_buffer_LUT.c: 112: printf("AC Power Meter\n\r");
 16124  010146  0EFB               	movlw	low STR_55
 16125  010148  0101               	movlb	1	; () banked
 16126  01014A  6FAC               	movwf	printf@f& (0+255),b
 16127  01014C  0EFC               	movlw	high STR_55
 16128  01014E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16129  010150  EC22  F0D5         	call	_printf	;wreg free
 16130                           
 16131                           ;ring_buffer_LUT.c: 113: printf("Marquette University ELEN 3035 Final Project\n\r");
 16132  010154  0EA2               	movlw	low STR_56
 16133  010156  0101               	movlb	1	; () banked
 16134  010158  6FAC               	movwf	printf@f& (0+255),b
 16135  01015A  0EF6               	movlw	high STR_56
 16136  01015C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16137  01015E  EC22  F0D5         	call	_printf	;wreg free
 16138                           
 16139                           ;ring_buffer_LUT.c: 114: terminal_textAttributesReset();
 16140  010162  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16141                           
 16142                           ;ring_buffer_LUT.c: 116: }
 16143  010166  0012               	return	
 16144  010168                     l1471:
 16145                           
 16146                           ;ring_buffer_LUT.c: 119: else if((0 == strcmp(line, "Device ID?"))) {
 16147  010168  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16148  01016C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16149  010170  0E49               	movlw	low STR_57
 16150  010172  0101               	movlb	1	; () banked
 16151  010174  6F19               	movwf	strcmp@s2& (0+255),b
 16152  010176  0EFF               	movlw	high STR_57
 16153  010178  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16154  01017A  EC51  F0D2         	call	_strcmp	;wreg free
 16155  01017E  0101               	movlb	1	; () banked
 16156  010180  5117               	movf	?_strcmp& (0+255),w,b
 16157  010182  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16158  010184  A4D8               	btfss	status,2,c
 16159  010186  D023               	goto	l1475
 16160                           
 16161                           ; BSR set to: 1
 16162                           ;ring_buffer_LUT.c: 121: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16163  010188  0E00               	movlw	0
 16164  01018A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16165  01018C  0E00               	movlw	0
 16166  01018E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16167  010190  0E02               	movlw	2
 16168  010192  EC6C  F0AA         	call	_terminal_textAttributes
 16169                           
 16170                           ;ring_buffer_LUT.c: 124: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
 16171                           ;ring_buffer_LUT.c: 125: "part number of %s\n\r",
 16172                           ;ring_buffer_LUT.c: 126: getDeviceID(),
 16173                           ;ring_buffer_LUT.c: 127: getDeviceIDString(getDeviceID()));
 16174  010196  0EB7               	movlw	low STR_58
 16175  010198  0101               	movlb	1	; () banked
 16176  01019A  6FAC               	movwf	printf@f& (0+255),b
 16177  01019C  0EF0               	movlw	high STR_58
 16178  01019E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16179  0101A0  EC19  F0D8         	call	_getDeviceID	;wreg free
 16180  0101A4  C122  F1AE         	movff	?_getDeviceID,?_printf+2
 16181  0101A8  C123  F1AF         	movff	?_getDeviceID+1,?_printf+3
 16182  0101AC  EC19  F0D8         	call	_getDeviceID	;wreg free
 16183  0101B0  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 16184  0101B4  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 16185  0101B8  EC4D  F0D1         	call	_getDeviceIDString	;wreg free
 16186  0101BC  C124  F1B0         	movff	?_getDeviceIDString,?_printf+4
 16187  0101C0  C125  F1B1         	movff	?_getDeviceIDString+1,?_printf+5
 16188  0101C4  EC22  F0D5         	call	_printf	;wreg free
 16189                           
 16190                           ;ring_buffer_LUT.c: 129: terminal_textAttributesReset();
 16191  0101C8  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16192                           
 16193                           ;ring_buffer_LUT.c: 131: }
 16194  0101CC  0012               	return	
 16195  0101CE                     l1475:
 16196                           
 16197                           ;ring_buffer_LUT.c: 134: else if((0 == strcmp(line, "Revision ID?"))) {
 16198  0101CE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16199  0101D2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16200  0101D6  0EB7               	movlw	low STR_59
 16201  0101D8  0101               	movlb	1	; () banked
 16202  0101DA  6F19               	movwf	strcmp@s2& (0+255),b
 16203  0101DC  0EFE               	movlw	high STR_59
 16204  0101DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16205  0101E0  EC51  F0D2         	call	_strcmp	;wreg free
 16206  0101E4  0101               	movlb	1	; () banked
 16207  0101E6  5117               	movf	?_strcmp& (0+255),w,b
 16208  0101E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16209  0101EA  A4D8               	btfss	status,2,c
 16210  0101EC  D022               	goto	l1477
 16211                           
 16212                           ; BSR set to: 1
 16213                           ;ring_buffer_LUT.c: 136: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16214  0101EE  0E00               	movlw	0
 16215  0101F0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16216  0101F2  0E00               	movlw	0
 16217  0101F4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16218  0101F6  0E02               	movlw	2
 16219  0101F8  EC6C  F0AA         	call	_terminal_textAttributes
 16220                           
 16221                           ;ring_buffer_LUT.c: 139: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
 16222                           ;ring_buffer_LUT.c: 140: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
 16223  0101FC  0ED6               	movlw	low STR_60
 16224  0101FE  0101               	movlb	1	; () banked
 16225  010200  6FAC               	movwf	printf@f& (0+255),b
 16226  010202  0EF2               	movlw	high STR_60
 16227  010204  6FAD               	movwf	(printf@f+1)& (0+255),b
 16228  010206  EC04  F0D5         	call	_getMajorRevisionID	;wreg free
 16229  01020A  0101               	movlb	1	; () banked
 16230  01020C  6FC1               	movwf	??_ringBufferLUT& (0+255),b
 16231  01020E  0E41               	movlw	65
 16232  010210  25C1               	addwf	??_ringBufferLUT& (0+255),w,b
 16233  010212  6FAE               	movwf	(?_printf+2)& (0+255),b
 16234  010214  6BAF               	clrf	(?_printf+3)& (0+255),b
 16235  010216  0E00               	movlw	0
 16236  010218  23AF               	addwfc	(?_printf+3)& (0+255),f,b
 16237  01021A  EC74  F0D7         	call	_getMinorRevisionID	;wreg free
 16238  01021E  0101               	movlb	1	; () banked
 16239  010220  6FC2               	movwf	(??_ringBufferLUT+1)& (0+255),b
 16240  010222  51C2               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 16241  010224  6FB0               	movwf	(?_printf+4)& (0+255),b
 16242  010226  6BB1               	clrf	(?_printf+5)& (0+255),b
 16243  010228  EC22  F0D5         	call	_printf	;wreg free
 16244                           
 16245                           ;ring_buffer_LUT.c: 142: terminal_textAttributesReset();
 16246  01022C  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16247                           
 16248                           ;ring_buffer_LUT.c: 144: }
 16249  010230  0012               	return	
 16250  010232                     l1477:
 16251                           
 16252                           ;ring_buffer_LUT.c: 147: else if((0 == strcmp(line, "User IDs?"))) {
 16253  010232  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16254  010236  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16255  01023A  0E7E               	movlw	low STR_61
 16256  01023C  0101               	movlb	1	; () banked
 16257  01023E  6F19               	movwf	strcmp@s2& (0+255),b
 16258  010240  0EFF               	movlw	high STR_61
 16259  010242  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16260  010244  EC51  F0D2         	call	_strcmp	;wreg free
 16261  010248  0101               	movlb	1	; () banked
 16262  01024A  5117               	movf	?_strcmp& (0+255),w,b
 16263  01024C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16264  01024E  A4D8               	btfss	status,2,c
 16265  010250  D044               	goto	l1479
 16266                           
 16267                           ; BSR set to: 1
 16268                           ;ring_buffer_LUT.c: 149: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16269  010252  0E00               	movlw	0
 16270  010254  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16271  010256  0E00               	movlw	0
 16272  010258  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16273  01025A  0E02               	movlw	2
 16274  01025C  EC6C  F0AA         	call	_terminal_textAttributes
 16275                           
 16276                           ;ring_buffer_LUT.c: 151: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
 16277  010260  0EDD               	movlw	low STR_62
 16278  010262  0101               	movlb	1	; () banked
 16279  010264  6FAC               	movwf	printf@f& (0+255),b
 16280  010266  0EF1               	movlw	high STR_62
 16281  010268  6FAD               	movwf	(printf@f+1)& (0+255),b
 16282  01026A  EC22  F0D5         	call	_printf	;wreg free
 16283                           
 16284                           ;ring_buffer_LUT.c: 154: for (int userID = 0; userID <= 7; userID++) {
 16285  01026E  0E00               	movlw	0
 16286  010270  0102               	movlb	2	; () banked
 16287  010272  6FC8               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 16288  010274  0E00               	movlw	0
 16289  010276  6FC7               	movwf	ringBufferLUT@userID& (0+255),b
 16290  010278                     l23193:
 16291                           
 16292                           ; BSR set to: 2
 16293  010278  BFC8               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 16294  01027A  D006               	goto	l1480
 16295  01027C  51C8               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 16296  01027E  E124               	bnz	l23203
 16297  010280  0E08               	movlw	8
 16298  010282  5DC7               	subwf	ringBufferLUT@userID& (0+255),w,b
 16299  010284  B0D8               	btfsc	status,0,c
 16300  010286  D020               	goto	u34330
 16301  010288                     l1480:
 16302                           
 16303                           ; BSR set to: 2
 16304                           ;ring_buffer_LUT.c: 156: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
 16305                           ;ring_buffer_LUT.c: 157: userID,
 16306                           ;ring_buffer_LUT.c: 158: (2 * userID),
 16307                           ;ring_buffer_LUT.c: 159: getUserID(userID));
 16308                           
 16309                           ; BSR set to: 2
 16310  010288  0E65               	movlw	low STR_63
 16311  01028A  0101               	movlb	1	; () banked
 16312  01028C  6FAC               	movwf	printf@f& (0+255),b
 16313  01028E  0EF4               	movlw	high STR_63
 16314  010290  6FAD               	movwf	(printf@f+1)& (0+255),b
 16315  010292  C2C7  F1AE         	movff	ringBufferLUT@userID,?_printf+2
 16316  010296  C2C8  F1AF         	movff	ringBufferLUT@userID+1,?_printf+3
 16317  01029A  90D8               	bcf	status,0,c
 16318  01029C  0102               	movlb	2	; () banked
 16319  01029E  35C7               	rlcf	ringBufferLUT@userID& (0+255),w,b
 16320  0102A0  0101               	movlb	1	; () banked
 16321  0102A2  6FB0               	movwf	(?_printf+4)& (0+255),b
 16322  0102A4  0102               	movlb	2	; () banked
 16323  0102A6  35C8               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 16324  0102A8  0101               	movlb	1	; () banked
 16325  0102AA  6FB1               	movwf	(?_printf+5)& (0+255),b
 16326  0102AC  0102               	movlb	2	; () banked
 16327  0102AE  51C7               	movf	ringBufferLUT@userID& (0+255),w,b
 16328  0102B0  EC42  F0D4         	call	_getUserID
 16329  0102B4  C122  F1B2         	movff	?_getUserID,?_printf+6
 16330  0102B8  C123  F1B3         	movff	?_getUserID+1,?_printf+7
 16331  0102BC  EC22  F0D5         	call	_printf	;wreg free
 16332  0102C0  0102               	movlb	2	; () banked
 16333  0102C2  4BC7               	infsnz	ringBufferLUT@userID& (0+255),f,b
 16334  0102C4  2BC8               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 16335  0102C6  D7D8               	goto	l23193
 16336  0102C8                     u34330:
 16337  0102C8                     l23203:
 16338                           
 16339                           ; BSR set to: 2
 16340                           ;ring_buffer_LUT.c: 161: }
 16341                           ;ring_buffer_LUT.c: 163: terminal_textAttributesReset();
 16342  0102C8  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16343                           
 16344                           ;ring_buffer_LUT.c: 165: if (error_handler.USB_UART_COMM_error_flag) {
 16345  0102CC  0102               	movlb	2	; () banked
 16346  0102CE  5108               	movf	(_error_handler+8)& (0+255),w,b
 16347  0102D0  B4D8               	btfsc	status,2,c
 16348  0102D2  0012               	return	
 16349                           
 16350                           ; BSR set to: 2
 16351                           ;ring_buffer_LUT.c: 166: error_handler.USB_UART_COMM_error_flag = 0;
 16352  0102D4  0E00               	movlw	0
 16353  0102D6  6F08               	movwf	(_error_handler+8)& (0+255),b
 16354                           
 16355                           ; BSR set to: 2
 16356                           ;ring_buffer_LUT.c: 167: }
 16357                           ;ring_buffer_LUT.c: 169: }
 16358  0102D8  0012               	return	
 16359  0102DA                     l1479:
 16360                           
 16361                           ;ring_buffer_LUT.c: 172: else if((0 == strcmp(line, "ADC Errors?"))) {
 16362                           
 16363                           ; BSR set to: 2
 16364  0102DA  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16365  0102DE  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16366  0102E2  0E10               	movlw	low STR_64
 16367  0102E4  0101               	movlb	1	; () banked
 16368  0102E6  6F19               	movwf	strcmp@s2& (0+255),b
 16369  0102E8  0EFF               	movlw	high STR_64
 16370  0102EA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16371  0102EC  EC51  F0D2         	call	_strcmp	;wreg free
 16372  0102F0  0101               	movlb	1	; () banked
 16373  0102F2  5117               	movf	?_strcmp& (0+255),w,b
 16374  0102F4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16375  0102F6  A4D8               	btfss	status,2,c
 16376  0102F8  D08C               	goto	l1484
 16377                           
 16378                           ; BSR set to: 1
 16379                           ;ring_buffer_LUT.c: 174: if (getADCError()) {
 16380  0102FA  EC5D  F0D6         	call	_getADCError	;wreg free
 16381  0102FE  0900               	iorlw	0
 16382  010300  B4D8               	btfsc	status,2,c
 16383  010302  D075               	goto	l1485
 16384                           
 16385                           ;ring_buffer_LUT.c: 176: terminal_textAttributes(RED, BLACK, NORMAL);
 16386  010304  0E00               	movlw	0
 16387  010306  0101               	movlb	1	; () banked
 16388  010308  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16389  01030A  0E00               	movlw	0
 16390  01030C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16391  01030E  0E01               	movlw	1
 16392  010310  EC6C  F0AA         	call	_terminal_textAttributes
 16393                           
 16394                           ;ring_buffer_LUT.c: 177: printf("ADC error(s) detected!\n\r");
 16395  010314  0EA6               	movlw	low STR_65
 16396  010316  0101               	movlb	1	; () banked
 16397  010318  6FAC               	movwf	printf@f& (0+255),b
 16398  01031A  0EFB               	movlw	high STR_65
 16399  01031C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16400  01031E  EC22  F0D5         	call	_printf	;wreg free
 16401                           
 16402                           ;ring_buffer_LUT.c: 178: printf("The following channels caused an ADC error:\n\r");
 16403  010322  0ED1               	movlw	low STR_66
 16404  010324  0101               	movlb	1	; () banked
 16405  010326  6FAC               	movwf	printf@f& (0+255),b
 16406  010328  0EF6               	movlw	high STR_66
 16407  01032A  6FAD               	movwf	(printf@f+1)& (0+255),b
 16408  01032C  EC22  F0D5         	call	_printf	;wreg free
 16409                           
 16410                           ;ring_buffer_LUT.c: 180: if (error_handler.ADC_general_error_flag) {
 16411  010330  0102               	movlb	2	; () banked
 16412  010332  5106               	movf	(_error_handler+6)& (0+255),w,b
 16413  010334  B4D8               	btfsc	status,2,c
 16414  010336  D007               	goto	l1486
 16415                           
 16416                           ; BSR set to: 2
 16417                           ;ring_buffer_LUT.c: 181: printf("    General ADC error\n\r");
 16418  010338  0EF1               	movlw	low STR_67
 16419  01033A  0101               	movlb	1	; () banked
 16420  01033C  6FAC               	movwf	printf@f& (0+255),b
 16421  01033E  0EFB               	movlw	high STR_67
 16422  010340  6FAD               	movwf	(printf@f+1)& (0+255),b
 16423  010342  EC22  F0D5         	call	_printf	;wreg free
 16424  010346                     l1486:
 16425                           
 16426                           ;ring_buffer_LUT.c: 182: }
 16427                           ;ring_buffer_LUT.c: 184: if (error_handler.AVSS_ADC_error_flag) {
 16428  010346  0102               	movlb	2	; () banked
 16429  010348  5103               	movf	(_error_handler+3)& (0+255),w,b
 16430  01034A  B4D8               	btfsc	status,2,c
 16431  01034C  D007               	goto	l1487
 16432                           
 16433                           ; BSR set to: 2
 16434                           ;ring_buffer_LUT.c: 185: printf("    AVSS\n\r");
 16435  01034E  0E3E               	movlw	low STR_68
 16436  010350  0101               	movlb	1	; () banked
 16437  010352  6FAC               	movwf	printf@f& (0+255),b
 16438  010354  0EFF               	movlw	high STR_68
 16439  010356  6FAD               	movwf	(printf@f+1)& (0+255),b
 16440  010358  EC22  F0D5         	call	_printf	;wreg free
 16441  01035C                     l1487:
 16442                           
 16443                           ;ring_buffer_LUT.c: 186: }
 16444                           ;ring_buffer_LUT.c: 188: if (error_handler.FVR_ADC_error_flag) {
 16445  01035C  0102               	movlb	2	; () banked
 16446  01035E  5105               	movf	(_error_handler+5)& (0+255),w,b
 16447  010360  B4D8               	btfsc	status,2,c
 16448  010362  D007               	goto	l1488
 16449                           
 16450                           ; BSR set to: 2
 16451                           ;ring_buffer_LUT.c: 189: printf("    FVR\n\r");
 16452  010364  0E74               	movlw	low STR_69
 16453  010366  0101               	movlb	1	; () banked
 16454  010368  6FAC               	movwf	printf@f& (0+255),b
 16455  01036A  0EFF               	movlw	high STR_69
 16456  01036C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16457  01036E  EC22  F0D5         	call	_printf	;wreg free
 16458  010372                     l1488:
 16459                           
 16460                           ;ring_buffer_LUT.c: 190: }
 16461                           ;ring_buffer_LUT.c: 192: if (error_handler.ISNS_ADC_error_flag) {
 16462  010372  0102               	movlb	2	; () banked
 16463  010374  5100               	movf	_error_handler& (0+255),w,b
 16464  010376  B4D8               	btfsc	status,2,c
 16465  010378  D007               	goto	l1489
 16466                           
 16467                           ; BSR set to: 2
 16468                           ;ring_buffer_LUT.c: 193: printf("    ISNS\n\r");
 16469  01037A  0E33               	movlw	low STR_70
 16470  01037C  0101               	movlb	1	; () banked
 16471  01037E  6FAC               	movwf	printf@f& (0+255),b
 16472  010380  0EFF               	movlw	high STR_70
 16473  010382  6FAD               	movwf	(printf@f+1)& (0+255),b
 16474  010384  EC22  F0D5         	call	_printf	;wreg free
 16475  010388                     l1489:
 16476                           
 16477                           ;ring_buffer_LUT.c: 194: }
 16478                           ;ring_buffer_LUT.c: 196: if (error_handler.POS12_ADC_error_flag) {
 16479  010388  0102               	movlb	2	; () banked
 16480  01038A  5101               	movf	(_error_handler+1)& (0+255),w,b
 16481  01038C  B4D8               	btfsc	status,2,c
 16482  01038E  D007               	goto	l1490
 16483                           
 16484                           ; BSR set to: 2
 16485                           ;ring_buffer_LUT.c: 197: printf("    POS12\n\r");
 16486  010390  0E04               	movlw	low STR_71
 16487  010392  0101               	movlb	1	; () banked
 16488  010394  6FAC               	movwf	printf@f& (0+255),b
 16489  010396  0EFF               	movlw	high STR_71
 16490  010398  6FAD               	movwf	(printf@f+1)& (0+255),b
 16491  01039A  EC22  F0D5         	call	_printf	;wreg free
 16492  01039E                     l1490:
 16493                           
 16494                           ;ring_buffer_LUT.c: 198: }
 16495                           ;ring_buffer_LUT.c: 200: if (error_handler.POS3P3_ADC_error_flag) {
 16496  01039E  0102               	movlb	2	; () banked
 16497  0103A0  5102               	movf	(_error_handler+2)& (0+255),w,b
 16498  0103A2  B4D8               	btfsc	status,2,c
 16499  0103A4  D007               	goto	l1491
 16500                           
 16501                           ; BSR set to: 2
 16502                           ;ring_buffer_LUT.c: 201: printf("    POS3P3\n\r");
 16503  0103A6  0E9D               	movlw	low STR_72
 16504  0103A8  0101               	movlb	1	; () banked
 16505  0103AA  6FAC               	movwf	printf@f& (0+255),b
 16506  0103AC  0EFE               	movlw	high STR_72
 16507  0103AE  6FAD               	movwf	(printf@f+1)& (0+255),b
 16508  0103B0  EC22  F0D5         	call	_printf	;wreg free
 16509  0103B4                     l1491:
 16510                           
 16511                           ;ring_buffer_LUT.c: 202: }
 16512                           ;ring_buffer_LUT.c: 204: if (error_handler.Temp_ADC_error_flag) {
 16513  0103B4  0102               	movlb	2	; () banked
 16514  0103B6  5104               	movf	(_error_handler+4)& (0+255),w,b
 16515  0103B8  B4D8               	btfsc	status,2,c
 16516  0103BA  D007               	goto	l1492
 16517                           
 16518                           ; BSR set to: 2
 16519                           ;ring_buffer_LUT.c: 205: printf("    Die Temp\n\r");
 16520  0103BC  0EF1               	movlw	low STR_73
 16521  0103BE  0101               	movlb	1	; () banked
 16522  0103C0  6FAC               	movwf	printf@f& (0+255),b
 16523  0103C2  0EFD               	movlw	high STR_73
 16524  0103C4  6FAD               	movwf	(printf@f+1)& (0+255),b
 16525  0103C6  EC22  F0D5         	call	_printf	;wreg free
 16526  0103CA                     l1492:
 16527                           
 16528                           ;ring_buffer_LUT.c: 206: }
 16529                           ;ring_buffer_LUT.c: 208: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16530  0103CA  0E00               	movlw	0
 16531  0103CC  0101               	movlb	1	; () banked
 16532  0103CE  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16533  0103D0  0E00               	movlw	0
 16534  0103D2  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16535  0103D4  0E03               	movlw	3
 16536  0103D6  EC6C  F0AA         	call	_terminal_textAttributes
 16537                           
 16538                           ;ring_buffer_LUT.c: 209: printf("Call 'Clear ADC Errors' to clear ADC error(s)\n\r");
 16539  0103DA  0E72               	movlw	low STR_74
 16540  0103DC  0101               	movlb	1	; () banked
 16541  0103DE  6FAC               	movwf	printf@f& (0+255),b
 16542  0103E0  0EF6               	movlw	high STR_74
 16543  0103E2  6FAD               	movwf	(printf@f+1)& (0+255),b
 16544  0103E4  EC22  F0D5         	call	_printf	;wreg free
 16545                           
 16546                           ;ring_buffer_LUT.c: 210: terminal_textAttributesReset();
 16547  0103E8  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16548                           
 16549                           ;ring_buffer_LUT.c: 212: }
 16550  0103EC  0012               	return	
 16551  0103EE                     l1485:
 16552                           
 16553                           ;ring_buffer_LUT.c: 214: else {
 16554                           ;ring_buffer_LUT.c: 216: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16555  0103EE  0E00               	movlw	0
 16556  0103F0  0101               	movlb	1	; () banked
 16557  0103F2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16558  0103F4  0E00               	movlw	0
 16559  0103F6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16560  0103F8  0E02               	movlw	2
 16561  0103FA  EC6C  F0AA         	call	_terminal_textAttributes
 16562                           
 16563                           ;ring_buffer_LUT.c: 217: printf("No ADC error(s) detected\n\r");
 16564  0103FE  0E71               	movlw	low STR_75
 16565  010400  0101               	movlb	1	; () banked
 16566  010402  6FAC               	movwf	printf@f& (0+255),b
 16567  010404  0EFB               	movlw	high STR_75
 16568  010406  6FAD               	movwf	(printf@f+1)& (0+255),b
 16569  010408  EC22  F0D5         	call	_printf	;wreg free
 16570                           
 16571                           ;ring_buffer_LUT.c: 218: terminal_textAttributesReset();
 16572  01040C  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16573                           
 16574                           ;ring_buffer_LUT.c: 220: }
 16575                           ;ring_buffer_LUT.c: 222: }
 16576  010410  0012               	return	
 16577  010412                     l1484:
 16578                           
 16579                           ;ring_buffer_LUT.c: 225: else if((0 == strcmp(line, "Clear ADC Errors"))) {
 16580  010412  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16581  010416  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16582  01041A  0E61               	movlw	low STR_76
 16583  01041C  0101               	movlb	1	; () banked
 16584  01041E  6F19               	movwf	strcmp@s2& (0+255),b
 16585  010420  0EFD               	movlw	high STR_76
 16586  010422  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16587  010424  EC51  F0D2         	call	_strcmp	;wreg free
 16588  010428  0101               	movlb	1	; () banked
 16589  01042A  5117               	movf	?_strcmp& (0+255),w,b
 16590  01042C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16591  01042E  A4D8               	btfss	status,2,c
 16592  010430  D014               	goto	l1495
 16593                           
 16594                           ; BSR set to: 1
 16595                           ;ring_buffer_LUT.c: 227: clearADCErrors();
 16596  010432  ECF7  F0D7         	call	_clearADCErrors	;wreg free
 16597                           
 16598                           ;ring_buffer_LUT.c: 229: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16599  010436  0E00               	movlw	0
 16600  010438  0101               	movlb	1	; () banked
 16601  01043A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16602  01043C  0E00               	movlw	0
 16603  01043E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16604  010440  0E02               	movlw	2
 16605  010442  EC6C  F0AA         	call	_terminal_textAttributes
 16606                           
 16607                           ;ring_buffer_LUT.c: 230: printf("ADC Error(s) cleared\n\r");
 16608  010446  0E20               	movlw	low STR_77
 16609  010448  0101               	movlb	1	; () banked
 16610  01044A  6FAC               	movwf	printf@f& (0+255),b
 16611  01044C  0EFC               	movlw	high STR_77
 16612  01044E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16613  010450  EC22  F0D5         	call	_printf	;wreg free
 16614                           
 16615                           ;ring_buffer_LUT.c: 231: terminal_textAttributesReset();
 16616  010454  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16617                           
 16618                           ;ring_buffer_LUT.c: 233: }
 16619  010458  0012               	return	
 16620  01045A                     l1495:
 16621                           
 16622                           ;ring_buffer_LUT.c: 236: else if((0 == strcmp(line, "Comm Errors?"))) {
 16623  01045A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16624  01045E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16625  010462  0ED1               	movlw	low STR_78
 16626  010464  0101               	movlb	1	; () banked
 16627  010466  6F19               	movwf	strcmp@s2& (0+255),b
 16628  010468  0EFE               	movlw	high STR_78
 16629  01046A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16630  01046C  EC51  F0D2         	call	_strcmp	;wreg free
 16631  010470  0101               	movlb	1	; () banked
 16632  010472  5117               	movf	?_strcmp& (0+255),w,b
 16633  010474  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16634  010476  A4D8               	btfss	status,2,c
 16635  010478  D04E               	goto	l1497
 16636                           
 16637                           ; BSR set to: 1
 16638                           ;ring_buffer_LUT.c: 238: if (getCOMMError()) {
 16639  01047A  ECCA  F0D8         	call	_getCOMMError	;wreg free
 16640  01047E  0900               	iorlw	0
 16641  010480  B4D8               	btfsc	status,2,c
 16642  010482  D037               	goto	l1498
 16643                           
 16644                           ;ring_buffer_LUT.c: 240: terminal_textAttributes(RED, BLACK, NORMAL);
 16645  010484  0E00               	movlw	0
 16646  010486  0101               	movlb	1	; () banked
 16647  010488  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16648  01048A  0E00               	movlw	0
 16649  01048C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16650  01048E  0E01               	movlw	1
 16651  010490  EC6C  F0AA         	call	_terminal_textAttributes
 16652                           
 16653                           ;ring_buffer_LUT.c: 241: printf("Communications error(s) detected! Interfaces causing er
      +                          ror(s):\n\r");
 16654  010494  0E9C               	movlw	low STR_79
 16655  010496  0101               	movlb	1	; () banked
 16656  010498  6FAC               	movwf	printf@f& (0+255),b
 16657  01049A  0EF1               	movlw	high STR_79
 16658  01049C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16659  01049E  EC22  F0D5         	call	_printf	;wreg free
 16660                           
 16661                           ;ring_buffer_LUT.c: 243: if (error_handler.I2C_COMM_error_flag) {
 16662  0104A2  0102               	movlb	2	; () banked
 16663  0104A4  5107               	movf	(_error_handler+7)& (0+255),w,b
 16664  0104A6  B4D8               	btfsc	status,2,c
 16665  0104A8  D007               	goto	l1499
 16666                           
 16667                           ; BSR set to: 2
 16668                           ;ring_buffer_LUT.c: 244: printf("    OLED Display I2C\n\r");
 16669  0104AA  0E09               	movlw	low STR_80
 16670  0104AC  0101               	movlb	1	; () banked
 16671  0104AE  6FAC               	movwf	printf@f& (0+255),b
 16672  0104B0  0EFC               	movlw	high STR_80
 16673  0104B2  6FAD               	movwf	(printf@f+1)& (0+255),b
 16674  0104B4  EC22  F0D5         	call	_printf	;wreg free
 16675  0104B8                     l1499:
 16676                           
 16677                           ;ring_buffer_LUT.c: 245: }
 16678                           ;ring_buffer_LUT.c: 247: if (error_handler.USB_UART_COMM_error_flag) {
 16679  0104B8  0102               	movlb	2	; () banked
 16680  0104BA  5108               	movf	(_error_handler+8)& (0+255),w,b
 16681  0104BC  B4D8               	btfsc	status,2,c
 16682  0104BE  D007               	goto	l1500
 16683                           
 16684                           ; BSR set to: 2
 16685                           ;ring_buffer_LUT.c: 248: printf("    USB UART (this interface)\n\r");
 16686  0104C0  0E2B               	movlw	low STR_81
 16687  0104C2  0101               	movlb	1	; () banked
 16688  0104C4  6FAC               	movwf	printf@f& (0+255),b
 16689  0104C6  0EFA               	movlw	high STR_81
 16690  0104C8  6FAD               	movwf	(printf@f+1)& (0+255),b
 16691  0104CA  EC22  F0D5         	call	_printf	;wreg free
 16692  0104CE                     l1500:
 16693                           
 16694                           ;ring_buffer_LUT.c: 249: }
 16695                           ;ring_buffer_LUT.c: 251: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16696  0104CE  0E00               	movlw	0
 16697  0104D0  0101               	movlb	1	; () banked
 16698  0104D2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16699  0104D4  0E00               	movlw	0
 16700  0104D6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16701  0104D8  0E03               	movlw	3
 16702  0104DA  EC6C  F0AA         	call	_terminal_textAttributes
 16703                           
 16704                           ;ring_buffer_LUT.c: 252: printf("Call 'Clear COMM Errors' to clear communications error(
      +                          s)\n\r");
 16705  0104DE  0E9A               	movlw	low STR_82
 16706  0104E0  0101               	movlb	1	; () banked
 16707  0104E2  6FAC               	movwf	printf@f& (0+255),b
 16708  0104E4  0EF2               	movlw	high STR_82
 16709  0104E6  6FAD               	movwf	(printf@f+1)& (0+255),b
 16710  0104E8  EC22  F0D5         	call	_printf	;wreg free
 16711                           
 16712                           ;ring_buffer_LUT.c: 253: terminal_textAttributesReset();
 16713  0104EC  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16714                           
 16715                           ;ring_buffer_LUT.c: 255: }
 16716  0104F0  0012               	return	
 16717  0104F2                     l1498:
 16718                           
 16719                           ;ring_buffer_LUT.c: 257: else {
 16720                           ;ring_buffer_LUT.c: 259: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16721  0104F2  0E00               	movlw	0
 16722  0104F4  0101               	movlb	1	; () banked
 16723  0104F6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16724  0104F8  0E00               	movlw	0
 16725  0104FA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16726  0104FC  0E02               	movlw	2
 16727  0104FE  EC6C  F0AA         	call	_terminal_textAttributes
 16728                           
 16729                           ;ring_buffer_LUT.c: 260: printf("No communications error(s) detected\n\r");
 16730  010502  0E83               	movlw	low STR_83
 16731  010504  0101               	movlb	1	; () banked
 16732  010506  6FAC               	movwf	printf@f& (0+255),b
 16733  010508  0EF8               	movlw	high STR_83
 16734  01050A  6FAD               	movwf	(printf@f+1)& (0+255),b
 16735  01050C  EC22  F0D5         	call	_printf	;wreg free
 16736                           
 16737                           ;ring_buffer_LUT.c: 261: terminal_textAttributesReset();
 16738  010510  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16739                           
 16740                           ;ring_buffer_LUT.c: 263: }
 16741                           ;ring_buffer_LUT.c: 264: }
 16742  010514  0012               	return	
 16743  010516                     l1497:
 16744                           
 16745                           ;ring_buffer_LUT.c: 267: else if((0 == strcmp(line, "Clear Comm Errors"))) {
 16746  010516  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16747  01051A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16748  01051E  0ED8               	movlw	low STR_84
 16749  010520  0101               	movlb	1	; () banked
 16750  010522  6F19               	movwf	strcmp@s2& (0+255),b
 16751  010524  0EFC               	movlw	high STR_84
 16752  010526  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16753  010528  EC51  F0D2         	call	_strcmp	;wreg free
 16754  01052C  0101               	movlb	1	; () banked
 16755  01052E  5117               	movf	?_strcmp& (0+255),w,b
 16756  010530  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16757  010532  A4D8               	btfss	status,2,c
 16758  010534  D014               	goto	l1503
 16759                           
 16760                           ; BSR set to: 1
 16761                           ;ring_buffer_LUT.c: 269: clearCOMMErrors();
 16762  010536  EC25  F0D9         	call	_clearCOMMErrors	;wreg free
 16763                           
 16764                           ;ring_buffer_LUT.c: 271: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16765  01053A  0E00               	movlw	0
 16766  01053C  0101               	movlb	1	; () banked
 16767  01053E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16768  010540  0E00               	movlw	0
 16769  010542  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16770  010544  0E02               	movlw	2
 16771  010546  EC6C  F0AA         	call	_terminal_textAttributes
 16772                           
 16773                           ;ring_buffer_LUT.c: 272: printf("Communications error(s) cleared\n\r");
 16774  01054A  0E82               	movlw	low STR_85
 16775  01054C  0101               	movlb	1	; () banked
 16776  01054E  6FAC               	movwf	printf@f& (0+255),b
 16777  010550  0EF9               	movlw	high STR_85
 16778  010552  6FAD               	movwf	(printf@f+1)& (0+255),b
 16779  010554  EC22  F0D5         	call	_printf	;wreg free
 16780                           
 16781                           ;ring_buffer_LUT.c: 273: terminal_textAttributesReset();
 16782  010558  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16783                           
 16784                           ;ring_buffer_LUT.c: 275: }
 16785  01055C  0012               	return	
 16786  01055E                     l1503:
 16787                           
 16788                           ;ring_buffer_LUT.c: 279: else if((0 == strcmp(line, "Measure POS3P3?"))) {
 16789  01055E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16790  010562  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16791  010566  0E92               	movlw	low STR_86
 16792  010568  0101               	movlb	1	; () banked
 16793  01056A  6F19               	movwf	strcmp@s2& (0+255),b
 16794  01056C  0EFD               	movlw	high STR_86
 16795  01056E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16796  010570  EC51  F0D2         	call	_strcmp	;wreg free
 16797  010574  0101               	movlb	1	; () banked
 16798  010576  5117               	movf	?_strcmp& (0+255),w,b
 16799  010578  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16800  01057A  A4D8               	btfss	status,2,c
 16801  01057C  D019               	goto	l1505
 16802                           
 16803                           ; BSR set to: 1
 16804                           ;ring_buffer_LUT.c: 281: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16805  01057E  0E00               	movlw	0
 16806  010580  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16807  010582  0E00               	movlw	0
 16808  010584  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16809  010586  0E06               	movlw	6
 16810  010588  EC6C  F0AA         	call	_terminal_textAttributes
 16811                           
 16812                           ;ring_buffer_LUT.c: 282: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
 16813  01058C  0ECE               	movlw	low STR_87
 16814  01058E  0101               	movlb	1	; () banked
 16815  010590  6FAC               	movwf	printf@f& (0+255),b
 16816  010592  0EF8               	movlw	high STR_87
 16817  010594  6FAD               	movwf	(printf@f+1)& (0+255),b
 16818  010596  C1DA  F1AE         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
 16819  01059A  C1DB  F1AF         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
 16820  01059E  C1DC  F1B0         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
 16821  0105A2  C1DD  F1B1         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
 16822  0105A6  EC22  F0D5         	call	_printf	;wreg free
 16823                           
 16824                           ;ring_buffer_LUT.c: 283: terminal_textAttributesReset();
 16825  0105AA  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16826                           
 16827                           ;ring_buffer_LUT.c: 285: }
 16828  0105AE  0012               	return	
 16829  0105B0                     l1505:
 16830                           
 16831                           ;ring_buffer_LUT.c: 288: else if((0 == strcmp(line, "Measure POS12?"))) {
 16832  0105B0  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16833  0105B4  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16834  0105B8  0E00               	movlw	low STR_88
 16835  0105BA  0101               	movlb	1	; () banked
 16836  0105BC  6F19               	movwf	strcmp@s2& (0+255),b
 16837  0105BE  0EFE               	movlw	high STR_88
 16838  0105C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16839  0105C2  EC51  F0D2         	call	_strcmp	;wreg free
 16840  0105C6  0101               	movlb	1	; () banked
 16841  0105C8  5117               	movf	?_strcmp& (0+255),w,b
 16842  0105CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16843  0105CC  A4D8               	btfss	status,2,c
 16844  0105CE  D019               	goto	l1507
 16845                           
 16846                           ; BSR set to: 1
 16847                           ;ring_buffer_LUT.c: 290: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16848  0105D0  0E00               	movlw	0
 16849  0105D2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16850  0105D4  0E00               	movlw	0
 16851  0105D6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16852  0105D8  0E06               	movlw	6
 16853  0105DA  EC6C  F0AA         	call	_terminal_textAttributes
 16854                           
 16855                           ;ring_buffer_LUT.c: 291: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
 16856  0105DE  0E3C               	movlw	low STR_89
 16857  0105E0  0101               	movlb	1	; () banked
 16858  0105E2  6FAC               	movwf	printf@f& (0+255),b
 16859  0105E4  0EF9               	movlw	high STR_89
 16860  0105E6  6FAD               	movwf	(printf@f+1)& (0+255),b
 16861  0105E8  C1D6  F1AE         	movff	_POS12_ADC_Result,?_printf+2	;volatile
 16862  0105EC  C1D7  F1AF         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
 16863  0105F0  C1D8  F1B0         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
 16864  0105F4  C1D9  F1B1         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
 16865  0105F8  EC22  F0D5         	call	_printf	;wreg free
 16866                           
 16867                           ;ring_buffer_LUT.c: 292: terminal_textAttributesReset();
 16868  0105FC  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16869                           
 16870                           ;ring_buffer_LUT.c: 294: }
 16871  010600  0012               	return	
 16872  010602                     l1507:
 16873                           
 16874                           ;ring_buffer_LUT.c: 297: else if((0 == strcmp(line, "Measure Die Temp?"))) {
 16875  010602  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16876  010606  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16877  01060A  0EC6               	movlw	low STR_90
 16878  01060C  0101               	movlb	1	; () banked
 16879  01060E  6F19               	movwf	strcmp@s2& (0+255),b
 16880  010610  0EFC               	movlw	high STR_90
 16881  010612  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16882  010614  EC51  F0D2         	call	_strcmp	;wreg free
 16883  010618  0101               	movlb	1	; () banked
 16884  01061A  5117               	movf	?_strcmp& (0+255),w,b
 16885  01061C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16886  01061E  A4D8               	btfss	status,2,c
 16887  010620  D019               	goto	l1509
 16888                           
 16889                           ; BSR set to: 1
 16890                           ;ring_buffer_LUT.c: 299: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16891  010622  0E00               	movlw	0
 16892  010624  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16893  010626  0E00               	movlw	0
 16894  010628  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16895  01062A  0E06               	movlw	6
 16896  01062C  EC6C  F0AA         	call	_terminal_textAttributes
 16897                           
 16898                           ;ring_buffer_LUT.c: 300: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
 16899  010630  0E18               	movlw	low STR_91
 16900  010632  0101               	movlb	1	; () banked
 16901  010634  6FAC               	movwf	printf@f& (0+255),b
 16902  010636  0EF9               	movlw	high STR_91
 16903  010638  6FAD               	movwf	(printf@f+1)& (0+255),b
 16904  01063A  C1D2  F1AE         	movff	_Temp_ADC_Result,?_printf+2	;volatile
 16905  01063E  C1D3  F1AF         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
 16906  010642  C1D4  F1B0         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
 16907  010646  C1D5  F1B1         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
 16908  01064A  EC22  F0D5         	call	_printf	;wreg free
 16909                           
 16910                           ;ring_buffer_LUT.c: 301: terminal_textAttributesReset();
 16911  01064E  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16912                           
 16913                           ;ring_buffer_LUT.c: 305: }
 16914  010652  0012               	return	
 16915  010654                     l1509:
 16916                           
 16917                           ;ring_buffer_LUT.c: 308: else if((0 == strcmp(line, "Measure FVR?"))) {
 16918  010654  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16919  010658  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16920  01065C  0EC4               	movlw	low STR_92
 16921  01065E  0101               	movlb	1	; () banked
 16922  010660  6F19               	movwf	strcmp@s2& (0+255),b
 16923  010662  0EFE               	movlw	high STR_92
 16924  010664  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16925  010666  EC51  F0D2         	call	_strcmp	;wreg free
 16926  01066A  0101               	movlb	1	; () banked
 16927  01066C  5117               	movf	?_strcmp& (0+255),w,b
 16928  01066E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16929  010670  A4D8               	btfss	status,2,c
 16930  010672  D019               	goto	l1511
 16931                           
 16932                           ; BSR set to: 1
 16933                           ;ring_buffer_LUT.c: 310: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16934  010674  0E00               	movlw	0
 16935  010676  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16936  010678  0E00               	movlw	0
 16937  01067A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16938  01067C  0E06               	movlw	6
 16939  01067E  EC6C  F0AA         	call	_terminal_textAttributes
 16940                           
 16941                           ;ring_buffer_LUT.c: 311: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
 16942  010682  0E86               	movlw	low STR_93
 16943  010684  0101               	movlb	1	; () banked
 16944  010686  6FAC               	movwf	printf@f& (0+255),b
 16945  010688  0EF3               	movlw	high STR_93
 16946  01068A  6FAD               	movwf	(printf@f+1)& (0+255),b
 16947  01068C  C1E2  F1AE         	movff	_FVR_ADC_Result,?_printf+2	;volatile
 16948  010690  C1E3  F1AF         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
 16949  010694  C1E4  F1B0         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
 16950  010698  C1E5  F1B1         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
 16951  01069C  EC22  F0D5         	call	_printf	;wreg free
 16952                           
 16953                           ;ring_buffer_LUT.c: 312: terminal_textAttributesReset();
 16954  0106A0  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16955                           
 16956                           ;ring_buffer_LUT.c: 314: }
 16957  0106A4  0012               	return	
 16958  0106A6                     l1511:
 16959                           
 16960                           ;ring_buffer_LUT.c: 317: else if((0 == strcmp(line, "Measure AVSS?"))) {
 16961  0106A6  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16962  0106AA  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16963  0106AE  0E3C               	movlw	low STR_94
 16964  0106B0  0101               	movlb	1	; () banked
 16965  0106B2  6F19               	movwf	strcmp@s2& (0+255),b
 16966  0106B4  0EFE               	movlw	high STR_94
 16967  0106B6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16968  0106B8  EC51  F0D2         	call	_strcmp	;wreg free
 16969  0106BC  0101               	movlb	1	; () banked
 16970  0106BE  5117               	movf	?_strcmp& (0+255),w,b
 16971  0106C0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16972  0106C2  A4D8               	btfss	status,2,c
 16973  0106C4  D019               	goto	l1513
 16974                           
 16975                           ; BSR set to: 1
 16976                           ;ring_buffer_LUT.c: 319: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16977  0106C6  0E00               	movlw	0
 16978  0106C8  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16979  0106CA  0E00               	movlw	0
 16980  0106CC  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16981  0106CE  0E06               	movlw	6
 16982  0106D0  EC6C  F0AA         	call	_terminal_textAttributes
 16983                           
 16984                           ;ring_buffer_LUT.c: 320: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 16985  0106D4  0EA9               	movlw	low STR_95
 16986  0106D6  0101               	movlb	1	; () banked
 16987  0106D8  6FAC               	movwf	printf@f& (0+255),b
 16988  0106DA  0EF8               	movlw	high STR_95
 16989  0106DC  6FAD               	movwf	(printf@f+1)& (0+255),b
 16990  0106DE  C240  F1AE         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 16991  0106E2  C241  F1AF         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 16992  0106E6  C242  F1B0         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 16993  0106EA  C243  F1B1         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 16994  0106EE  EC22  F0D5         	call	_printf	;wreg free
 16995                           
 16996                           ;ring_buffer_LUT.c: 321: terminal_textAttributesReset();
 16997  0106F2  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16998                           
 16999                           ;ring_buffer_LUT.c: 323: }
 17000  0106F6  0012               	return	
 17001  0106F8                     l1513:
 17002                           
 17003                           ;ring_buffer_LUT.c: 326: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 17004  0106F8  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17005  0106FC  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17006  010700  0E8C               	movlw	low STR_96
 17007  010702  0101               	movlb	1	; () banked
 17008  010704  6F19               	movwf	strcmp@s2& (0+255),b
 17009  010706  0EFB               	movlw	high STR_96
 17010  010708  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17011  01070A  EC51  F0D2         	call	_strcmp	;wreg free
 17012  01070E  0101               	movlb	1	; () banked
 17013  010710  5117               	movf	?_strcmp& (0+255),w,b
 17014  010712  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17015  010714  A4D8               	btfss	status,2,c
 17016  010716  D019               	goto	l1515
 17017                           
 17018                           ; BSR set to: 1
 17019                           ;ring_buffer_LUT.c: 328: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17020  010718  0E00               	movlw	0
 17021  01071A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17022  01071C  0E00               	movlw	0
 17023  01071E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17024  010720  0E06               	movlw	6
 17025  010722  EC6C  F0AA         	call	_terminal_textAttributes
 17026                           
 17027                           ;ring_buffer_LUT.c: 329: printf("Measured Current is %.3f Amps\n\r", Imeas);
 17028  010726  0E4B               	movlw	low STR_97
 17029  010728  0101               	movlb	1	; () banked
 17030  01072A  6FAC               	movwf	printf@f& (0+255),b
 17031  01072C  0EFA               	movlw	high STR_97
 17032  01072E  6FAD               	movwf	(printf@f+1)& (0+255),b
 17033  010730  C234  F1AE         	movff	_Imeas,?_printf+2	;volatile
 17034  010734  C235  F1AF         	movff	_Imeas+1,?_printf+3	;volatile
 17035  010738  C236  F1B0         	movff	_Imeas+2,?_printf+4	;volatile
 17036  01073C  C237  F1B1         	movff	_Imeas+3,?_printf+5	;volatile
 17037  010740  EC22  F0D5         	call	_printf	;wreg free
 17038                           
 17039                           ;ring_buffer_LUT.c: 330: terminal_textAttributesReset();
 17040  010744  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17041                           
 17042                           ;ring_buffer_LUT.c: 332: }
 17043  010748  0012               	return	
 17044  01074A                     l1515:
 17045                           
 17046                           ;ring_buffer_LUT.c: 335: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 17047  01074A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17048  01074E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17049  010752  0E77               	movlw	low STR_98
 17050  010754  0101               	movlb	1	; () banked
 17051  010756  6F19               	movwf	strcmp@s2& (0+255),b
 17052  010758  0EFC               	movlw	high STR_98
 17053  01075A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17054  01075C  EC51  F0D2         	call	_strcmp	;wreg free
 17055  010760  0101               	movlb	1	; () banked
 17056  010762  5117               	movf	?_strcmp& (0+255),w,b
 17057  010764  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17058  010766  A4D8               	btfss	status,2,c
 17059  010768  D019               	goto	l1517
 17060                           
 17061                           ; BSR set to: 1
 17062                           ;ring_buffer_LUT.c: 337: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17063  01076A  0E00               	movlw	0
 17064  01076C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17065  01076E  0E00               	movlw	0
 17066  010770  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17067  010772  0E06               	movlw	6
 17068  010774  EC6C  F0AA         	call	_terminal_textAttributes
 17069                           
 17070                           ;ring_buffer_LUT.c: 338: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 17071  010778  0EA4               	movlw	low STR_99
 17072  01077A  0101               	movlb	1	; () banked
 17073  01077C  6FAC               	movwf	printf@f& (0+255),b
 17074  01077E  0EF9               	movlw	high STR_99
 17075  010780  6FAD               	movwf	(printf@f+1)& (0+255),b
 17076  010782  C1CA  F1AE         	movff	_Irms,?_printf+2	;volatile
 17077  010786  C1CB  F1AF         	movff	_Irms+1,?_printf+3	;volatile
 17078  01078A  C1CC  F1B0         	movff	_Irms+2,?_printf+4	;volatile
 17079  01078E  C1CD  F1B1         	movff	_Irms+3,?_printf+5	;volatile
 17080  010792  EC22  F0D5         	call	_printf	;wreg free
 17081                           
 17082                           ;ring_buffer_LUT.c: 339: terminal_textAttributesReset();
 17083  010796  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17084                           
 17085                           ;ring_buffer_LUT.c: 341: }
 17086  01079A  0012               	return	
 17087  01079C                     l1517:
 17088                           
 17089                           ;ring_buffer_LUT.c: 344: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 17090  01079C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17091  0107A0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17092  0107A4  0E62               	movlw	low STR_100
 17093  0107A6  0101               	movlb	1	; () banked
 17094  0107A8  6F19               	movwf	strcmp@s2& (0+255),b
 17095  0107AA  0EFC               	movlw	high STR_100
 17096  0107AC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17097  0107AE  EC51  F0D2         	call	_strcmp	;wreg free
 17098  0107B2  0101               	movlb	1	; () banked
 17099  0107B4  5117               	movf	?_strcmp& (0+255),w,b
 17100  0107B6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17101  0107B8  A4D8               	btfss	status,2,c
 17102  0107BA  D019               	goto	l1519
 17103                           
 17104                           ; BSR set to: 1
 17105                           ;ring_buffer_LUT.c: 346: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17106  0107BC  0E00               	movlw	0
 17107  0107BE  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17108  0107C0  0E00               	movlw	0
 17109  0107C2  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17110  0107C4  0E06               	movlw	6
 17111  0107C6  EC6C  F0AA         	call	_terminal_textAttributes
 17112                           
 17113                           ;ring_buffer_LUT.c: 347: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 17114  0107CA  0EC6               	movlw	low STR_101
 17115  0107CC  0101               	movlb	1	; () banked
 17116  0107CE  6FAC               	movwf	printf@f& (0+255),b
 17117  0107D0  0EF9               	movlw	high STR_101
 17118  0107D2  6FAD               	movwf	(printf@f+1)& (0+255),b
 17119  0107D4  C230  F1AE         	movff	_Vrms,?_printf+2	;volatile
 17120  0107D8  C231  F1AF         	movff	_Vrms+1,?_printf+3	;volatile
 17121  0107DC  C232  F1B0         	movff	_Vrms+2,?_printf+4	;volatile
 17122  0107E0  C233  F1B1         	movff	_Vrms+3,?_printf+5	;volatile
 17123  0107E4  EC22  F0D5         	call	_printf	;wreg free
 17124                           
 17125                           ;ring_buffer_LUT.c: 348: terminal_textAttributesReset();
 17126  0107E8  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17127                           
 17128                           ;ring_buffer_LUT.c: 350: }
 17129  0107EC  0012               	return	
 17130  0107EE                     l1519:
 17131                           
 17132                           ;ring_buffer_LUT.c: 353: else if ((0 == strcmp(line, "Measure Power?"))) {
 17133  0107EE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17134  0107F2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17135  0107F6  0E0F               	movlw	low STR_102
 17136  0107F8  0101               	movlb	1	; () banked
 17137  0107FA  6F19               	movwf	strcmp@s2& (0+255),b
 17138  0107FC  0EFE               	movlw	high STR_102
 17139  0107FE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17140  010800  EC51  F0D2         	call	_strcmp	;wreg free
 17141  010804  0101               	movlb	1	; () banked
 17142  010806  5117               	movf	?_strcmp& (0+255),w,b
 17143  010808  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17144  01080A  A4D8               	btfss	status,2,c
 17145  01080C  D019               	goto	l1521
 17146                           
 17147                           ; BSR set to: 1
 17148                           ;ring_buffer_LUT.c: 355: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17149  01080E  0E00               	movlw	0
 17150  010810  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17151  010812  0E00               	movlw	0
 17152  010814  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17153  010816  0E06               	movlw	6
 17154  010818  EC6C  F0AA         	call	_terminal_textAttributes
 17155                           
 17156                           ;ring_buffer_LUT.c: 356: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 17157  01081C  0EC0               	movlw	low STR_103
 17158  01081E  0101               	movlb	1	; () banked
 17159  010820  6FAC               	movwf	printf@f& (0+255),b
 17160  010822  0EF3               	movlw	high STR_103
 17161  010824  6FAD               	movwf	(printf@f+1)& (0+255),b
 17162  010826  C1C6  F1AE         	movff	_Avg_Power,?_printf+2	;volatile
 17163  01082A  C1C7  F1AF         	movff	_Avg_Power+1,?_printf+3	;volatile
 17164  01082E  C1C8  F1B0         	movff	_Avg_Power+2,?_printf+4	;volatile
 17165  010832  C1C9  F1B1         	movff	_Avg_Power+3,?_printf+5	;volatile
 17166  010836  EC22  F0D5         	call	_printf	;wreg free
 17167                           
 17168                           ;ring_buffer_LUT.c: 357: terminal_textAttributesReset();
 17169  01083A  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17170                           
 17171                           ;ring_buffer_LUT.c: 359: }
 17172  01083E  0012               	return	
 17173  010840                     l1521:
 17174                           
 17175                           ;ring_buffer_LUT.c: 362: else if ((0 == strcmp(line, "Measure Energy?"))) {
 17176  010840  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17177  010844  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17178  010848  0EC2               	movlw	low STR_104
 17179  01084A  0101               	movlb	1	; () banked
 17180  01084C  6F19               	movwf	strcmp@s2& (0+255),b
 17181  01084E  0EFD               	movlw	high STR_104
 17182  010850  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17183  010852  EC51  F0D2         	call	_strcmp	;wreg free
 17184  010856  0101               	movlb	1	; () banked
 17185  010858  5117               	movf	?_strcmp& (0+255),w,b
 17186  01085A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17187  01085C  A4D8               	btfss	status,2,c
 17188  01085E  D019               	goto	l1523
 17189                           
 17190                           ; BSR set to: 1
 17191                           ;ring_buffer_LUT.c: 364: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17192  010860  0E00               	movlw	0
 17193  010862  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17194  010864  0E00               	movlw	0
 17195  010866  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17196  010868  0E06               	movlw	6
 17197  01086A  EC6C  F0AA         	call	_terminal_textAttributes
 17198                           
 17199                           ;ring_buffer_LUT.c: 365: printf("Measured output energy since last measurement reset is 
      +                          %.3f Watt Hours\n\r", Total_Energy);
 17200  01086E  0E0C               	movlw	low STR_105
 17201  010870  0101               	movlb	1	; () banked
 17202  010872  6FAC               	movwf	printf@f& (0+255),b
 17203  010874  0EF1               	movlw	high STR_105
 17204  010876  6FAD               	movwf	(printf@f+1)& (0+255),b
 17205  010878  C0F6  F1AE         	movff	_Total_Energy,?_printf+2	;volatile
 17206  01087C  C0F7  F1AF         	movff	_Total_Energy+1,?_printf+3	;volatile
 17207  010880  C0F8  F1B0         	movff	_Total_Energy+2,?_printf+4	;volatile
 17208  010884  C0F9  F1B1         	movff	_Total_Energy+3,?_printf+5	;volatile
 17209  010888  EC22  F0D5         	call	_printf	;wreg free
 17210                           
 17211                           ;ring_buffer_LUT.c: 366: terminal_textAttributesReset();
 17212  01088C  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17213                           
 17214                           ;ring_buffer_LUT.c: 368: }
 17215  010890  0012               	return	
 17216  010892                     l1523:
 17217                           
 17218                           ;ring_buffer_LUT.c: 371: else if ((0 == strcmp(line, "Clear Energy"))) {
 17219  010892  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17220  010896  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17221  01089A  0EEB               	movlw	low STR_106
 17222  01089C  0101               	movlb	1	; () banked
 17223  01089E  6F19               	movwf	strcmp@s2& (0+255),b
 17224  0108A0  0EFE               	movlw	high STR_106
 17225  0108A2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17226  0108A4  EC51  F0D2         	call	_strcmp	;wreg free
 17227  0108A8  0101               	movlb	1	; () banked
 17228  0108AA  5117               	movf	?_strcmp& (0+255),w,b
 17229  0108AC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17230  0108AE  A4D8               	btfss	status,2,c
 17231  0108B0  D032               	goto	l1525
 17232                           
 17233                           ; BSR set to: 1
 17234                           ;ring_buffer_LUT.c: 374: Total_Energy = 0.0;
 17235  0108B2  0E00               	movlw	0
 17236  0108B4  0100               	movlb	0	; () banked
 17237  0108B6  6FF6               	movwf	_Total_Energy& (0+255),b	;volatile
 17238  0108B8  0E00               	movlw	0
 17239  0108BA  6FF7               	movwf	(_Total_Energy+1)& (0+255),b	;volatile
 17240  0108BC  0E00               	movlw	0
 17241  0108BE  6FF8               	movwf	(_Total_Energy+2)& (0+255),b	;volatile
 17242  0108C0  0E00               	movlw	0
 17243  0108C2  6FF9               	movwf	(_Total_Energy+3)& (0+255),b	;volatile
 17244                           
 17245                           ; BSR set to: 0
 17246                           ;ring_buffer_LUT.c: 375: writeDoubleToEEPROM(0.0, Total_Energy_address);
 17247  0108C4  0E00               	movlw	0
 17248  0108C6  0101               	movlb	1	; () banked
 17249  0108C8  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 17250  0108CA  0E00               	movlw	0
 17251  0108CC  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 17252  0108CE  0E00               	movlw	0
 17253  0108D0  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 17254  0108D2  0E00               	movlw	0
 17255  0108D4  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 17256  0108D6  0E5F               	movlw	low _Total_Energy_address
 17257  0108D8  6EF6               	movwf	tblptrl,c
 17258  0108DA                     	if	1	;There is more than 1 active tblptr byte
 17259  0108DA  0ECF               	movlw	high _Total_Energy_address
 17260  0108DC  6EF7               	movwf	tblptrh,c
 17261  0108DE                     	endif
 17262  0108DE                     	if	1	;There are 3 active tblptr bytes
 17263  0108DE  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 17264  0108E0  6EF8               	movwf	tblptru,c
 17265  0108E2                     	endif
 17266  0108E2  0009               	tblrd		*+
 17267  0108E4  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 17268  0108E8  000A               	tblrd		*-
 17269  0108EA  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 17270  0108EE  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 17271                           
 17272                           ;ring_buffer_LUT.c: 377: terminal_textAttributes(RED, BLACK, NORMAL);
 17273  0108F2  0E00               	movlw	0
 17274  0108F4  0101               	movlb	1	; () banked
 17275  0108F6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17276  0108F8  0E00               	movlw	0
 17277  0108FA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17278  0108FC  0E01               	movlw	1
 17279  0108FE  EC6C  F0AA         	call	_terminal_textAttributes
 17280                           
 17281                           ;ring_buffer_LUT.c: 378: printf("Measured output energy has been reset to zero Watt Hour
      +                          s\n\r");
 17282  010902  0E11               	movlw	low STR_107
 17283  010904  0101               	movlb	1	; () banked
 17284  010906  6FAC               	movwf	printf@f& (0+255),b
 17285  010908  0EF3               	movlw	high STR_107
 17286  01090A  6FAD               	movwf	(printf@f+1)& (0+255),b
 17287  01090C  EC22  F0D5         	call	_printf	;wreg free
 17288                           
 17289                           ;ring_buffer_LUT.c: 379: terminal_textAttributesReset();
 17290  010910  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17291                           
 17292                           ;ring_buffer_LUT.c: 381: }
 17293  010914  0012               	return	
 17294  010916                     l1525:
 17295                           
 17296                           ;ring_buffer_LUT.c: 384: else if ((0 == strcmp(line, "Enable Dimming"))) {
 17297  010916  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17298  01091A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17299  01091E  0E1E               	movlw	low STR_108
 17300  010920  0101               	movlb	1	; () banked
 17301  010922  6F19               	movwf	strcmp@s2& (0+255),b
 17302  010924  0EFE               	movlw	high STR_108
 17303  010926  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17304  010928  EC51  F0D2         	call	_strcmp	;wreg free
 17305  01092C  0101               	movlb	1	; () banked
 17306  01092E  5117               	movf	?_strcmp& (0+255),w,b
 17307  010930  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17308  010932  A4D8               	btfss	status,2,c
 17309  010934  D04C               	goto	l1527
 17310                           
 17311                           ; BSR set to: 1
 17312                           ;ring_buffer_LUT.c: 388: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 17313  010936  0E01               	movlw	1
 17314  010938  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17315  01093A  0E02               	movlw	2
 17316  01093C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17317  01093E  0E00               	movlw	0
 17318  010940  EC6C  F0AA         	call	_terminal_textAttributes
 17319                           
 17320                           ;ring_buffer_LUT.c: 389: printf("WARNING: Using the dimming feature with load devices ot
      +                          her than a light bulb can result in device damage");
 17321  010944  0E29               	movlw	low STR_109
 17322  010946  0101               	movlb	1	; () banked
 17323  010948  6FAC               	movwf	printf@f& (0+255),b
 17324  01094A  0EEF               	movlw	high STR_109
 17325  01094C  6FAD               	movwf	(printf@f+1)& (0+255),b
 17326  01094E  EC22  F0D5         	call	_printf	;wreg free
 17327                           
 17328                           ;ring_buffer_LUT.c: 390: terminal_textAttributesReset();
 17329  010952  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17330                           
 17331                           ;ring_buffer_LUT.c: 391: terminal_printNewline();
 17332  010956  EC0D  F0D9         	call	_terminal_printNewline	;wreg free
 17333                           
 17334                           ;ring_buffer_LUT.c: 392: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 17335  01095A  0E01               	movlw	1
 17336  01095C  0101               	movlb	1	; () banked
 17337  01095E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17338  010960  0E02               	movlw	2
 17339  010962  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17340  010964  0E00               	movlw	0
 17341  010966  EC6C  F0AA         	call	_terminal_textAttributes
 17342                           
 17343                           ;ring_buffer_LUT.c: 393: printf("Only enable dimming if you are completely sure the load
      +                           is compatible with a solid state dimming circuit");
 17344  01096A  0E92               	movlw	low STR_110
 17345  01096C  0101               	movlb	1	; () banked
 17346  01096E  6FAC               	movwf	printf@f& (0+255),b
 17347  010970  0EEF               	movlw	high STR_110
 17348  010972  6FAD               	movwf	(printf@f+1)& (0+255),b
 17349  010974  EC22  F0D5         	call	_printf	;wreg free
 17350                           
 17351                           ;ring_buffer_LUT.c: 394: terminal_textAttributesReset();
 17352  010978  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17353                           
 17354                           ;ring_buffer_LUT.c: 395: terminal_printNewline();
 17355  01097C  EC0D  F0D9         	call	_terminal_printNewline	;wreg free
 17356                           
 17357                           ;ring_buffer_LUT.c: 396: terminal_textAttributes(BLACK, YELLOW, NORMAL);
 17358  010980  0E03               	movlw	3
 17359  010982  0101               	movlb	1	; () banked
 17360  010984  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17361  010986  0E00               	movlw	0
 17362  010988  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17363  01098A  0E00               	movlw	0
 17364  01098C  EC6C  F0AA         	call	_terminal_textAttributes
 17365                           
 17366                           ;ring_buffer_LUT.c: 397: printf("Are you sure you'd like to enable output dimming?\n\r")
      +                          ;
 17367  010990  0E70               	movlw	low STR_111
 17368  010992  0101               	movlb	1	; () banked
 17369  010994  6FAC               	movwf	printf@f& (0+255),b
 17370  010996  0EF5               	movlw	high STR_111
 17371  010998  6FAD               	movwf	(printf@f+1)& (0+255),b
 17372  01099A  EC22  F0D5         	call	_printf	;wreg free
 17373                           
 17374                           ;ring_buffer_LUT.c: 398: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17375  01099E  0E00               	movlw	0
 17376  0109A0  0101               	movlb	1	; () banked
 17377  0109A2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17378  0109A4  0E00               	movlw	0
 17379  0109A6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17380  0109A8  0E03               	movlw	3
 17381  0109AA  EC6C  F0AA         	call	_terminal_textAttributes
 17382                           
 17383                           ;ring_buffer_LUT.c: 399: printf("If yes, reply 'Enable Dimming Y' on the next line:\n\r"
      +                          );
 17384  0109AE  0ED1               	movlw	low STR_112
 17385  0109B0  0101               	movlb	1	; () banked
 17386  0109B2  6FAC               	movwf	printf@f& (0+255),b
 17387  0109B4  0EF4               	movlw	high STR_112
 17388  0109B6  6FAD               	movwf	(printf@f+1)& (0+255),b
 17389  0109B8  EC22  F0D5         	call	_printf	;wreg free
 17390                           
 17391                           ;ring_buffer_LUT.c: 400: terminal_textAttributesReset();
 17392  0109BC  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17393                           
 17394                           ;ring_buffer_LUT.c: 402: if (error_handler.USB_UART_COMM_error_flag) {
 17395  0109C0  0102               	movlb	2	; () banked
 17396  0109C2  5108               	movf	(_error_handler+8)& (0+255),w,b
 17397  0109C4  B4D8               	btfsc	status,2,c
 17398  0109C6  0012               	return	
 17399                           
 17400                           ; BSR set to: 2
 17401                           ;ring_buffer_LUT.c: 403: error_handler.USB_UART_COMM_error_flag = 0;
 17402  0109C8  0E00               	movlw	0
 17403  0109CA  6F08               	movwf	(_error_handler+8)& (0+255),b
 17404                           
 17405                           ; BSR set to: 2
 17406                           ;ring_buffer_LUT.c: 404: }
 17407                           ;ring_buffer_LUT.c: 406: }
 17408  0109CC  0012               	return	
 17409  0109CE                     l1527:
 17410                           
 17411                           ;ring_buffer_LUT.c: 409: else if ((0 == strcmp(line, "Enable Dimming Y"))) {
 17412                           
 17413                           ; BSR set to: 2
 17414  0109CE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17415  0109D2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17416  0109D6  0E3F               	movlw	low STR_113
 17417  0109D8  0101               	movlb	1	; () banked
 17418  0109DA  6F19               	movwf	strcmp@s2& (0+255),b
 17419  0109DC  0EFD               	movlw	high STR_113
 17420  0109DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17421  0109E0  EC51  F0D2         	call	_strcmp	;wreg free
 17422  0109E4  0101               	movlb	1	; () banked
 17423  0109E6  5117               	movf	?_strcmp& (0+255),w,b
 17424  0109E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17425  0109EA  A4D8               	btfss	status,2,c
 17426  0109EC  D015               	goto	l1530
 17427                           
 17428                           ; BSR set to: 1
 17429                           ;ring_buffer_LUT.c: 412: LATGbits.LATG0 = 0;
 17430  0109EE  907F               	bcf	3967,0,c	;volatile
 17431                           
 17432                           ;ring_buffer_LUT.c: 415: PIE0bits.INT0IE = 1;
 17433  0109F0  010E               	movlb	14	; () banked
 17434  0109F2  8129               	bsf	41,0,b	;volatile
 17435                           
 17436                           ; BSR set to: 14
 17437                           ;ring_buffer_LUT.c: 417: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17438  0109F4  0E00               	movlw	0
 17439  0109F6  0101               	movlb	1	; () banked
 17440  0109F8  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17441  0109FA  0E00               	movlw	0
 17442  0109FC  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17443  0109FE  0E02               	movlw	2
 17444  010A00  EC6C  F0AA         	call	_terminal_textAttributes
 17445                           
 17446                           ;ring_buffer_LUT.c: 418: printf("Output dimming has been enabled\n\r");
 17447  010A04  0E60               	movlw	low STR_114
 17448  010A06  0101               	movlb	1	; () banked
 17449  010A08  6FAC               	movwf	printf@f& (0+255),b
 17450  010A0A  0EF9               	movlw	high STR_114
 17451  010A0C  6FAD               	movwf	(printf@f+1)& (0+255),b
 17452  010A0E  EC22  F0D5         	call	_printf	;wreg free
 17453                           
 17454                           ;ring_buffer_LUT.c: 419: terminal_textAttributesReset();
 17455  010A12  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17456                           
 17457                           ;ring_buffer_LUT.c: 421: }
 17458  010A16  0012               	return	
 17459  010A18                     l1530:
 17460                           
 17461                           ;ring_buffer_LUT.c: 424: else if ((0 == strcmp(line, "Disable Dimming"))) {
 17462  010A18  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17463  010A1C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17464  010A20  0ED2               	movlw	low STR_115
 17465  010A22  0101               	movlb	1	; () banked
 17466  010A24  6F19               	movwf	strcmp@s2& (0+255),b
 17467  010A26  0EFD               	movlw	high STR_115
 17468  010A28  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17469  010A2A  EC51  F0D2         	call	_strcmp	;wreg free
 17470  010A2E  0101               	movlb	1	; () banked
 17471  010A30  5117               	movf	?_strcmp& (0+255),w,b
 17472  010A32  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17473  010A34  A4D8               	btfss	status,2,c
 17474  010A36  D017               	goto	l1532
 17475                           
 17476                           ; BSR set to: 1
 17477                           ;ring_buffer_LUT.c: 427: LATGbits.LATG0 = 1;
 17478  010A38  807F               	bsf	3967,0,c	;volatile
 17479                           
 17480                           ;ring_buffer_LUT.c: 430: PIE0bits.INT0IE = 0;
 17481  010A3A  010E               	movlb	14	; () banked
 17482  010A3C  9129               	bcf	41,0,b	;volatile
 17483                           
 17484                           ; BSR set to: 14
 17485                           ;ring_buffer_LUT.c: 431: TMR5_StopTimer();
 17486  010A3E  EC97  F0D9         	call	_TMR5_StopTimer	;wreg free
 17487                           
 17488                           ;ring_buffer_LUT.c: 433: terminal_textAttributes(RED, BLACK, NORMAL);
 17489  010A42  0E00               	movlw	0
 17490  010A44  0101               	movlb	1	; () banked
 17491  010A46  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17492  010A48  0E00               	movlw	0
 17493  010A4A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17494  010A4C  0E01               	movlw	1
 17495  010A4E  EC6C  F0AA         	call	_terminal_textAttributes
 17496                           
 17497                           ;ring_buffer_LUT.c: 434: printf("TRIAC output dimming has been disabled\n\r");
 17498  010A52  0E33               	movlw	low STR_116
 17499  010A54  0101               	movlb	1	; () banked
 17500  010A56  6FAC               	movwf	printf@f& (0+255),b
 17501  010A58  0EF8               	movlw	high STR_116
 17502  010A5A  6FAD               	movwf	(printf@f+1)& (0+255),b
 17503  010A5C  EC22  F0D5         	call	_printf	;wreg free
 17504                           
 17505                           ;ring_buffer_LUT.c: 435: terminal_textAttributesReset();
 17506  010A60  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17507                           
 17508                           ;ring_buffer_LUT.c: 437: }
 17509  010A64  0012               	return	
 17510  010A66                     l1532:
 17511                           
 17512                           ;ring_buffer_LUT.c: 440: else if ((0 == strcmp(line, "Enable Load"))) {
 17513  010A66  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17514  010A6A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17515  010A6E  0E1C               	movlw	low STR_117
 17516  010A70  0101               	movlb	1	; () banked
 17517  010A72  6F19               	movwf	strcmp@s2& (0+255),b
 17518  010A74  0EFF               	movlw	high STR_117
 17519  010A76  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17520  010A78  EC51  F0D2         	call	_strcmp	;wreg free
 17521  010A7C  0101               	movlb	1	; () banked
 17522  010A7E  5117               	movf	?_strcmp& (0+255),w,b
 17523  010A80  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17524  010A82  A4D8               	btfss	status,2,c
 17525  010A84  D014               	goto	l1534
 17526                           
 17527                           ; BSR set to: 1
 17528                           ;ring_buffer_LUT.c: 442: LATGbits.LATG0 = 1;
 17529  010A86  807F               	bsf	3967,0,c	;volatile
 17530                           
 17531                           ;ring_buffer_LUT.c: 443: LATGbits.LATG1 = 0;
 17532  010A88  927F               	bcf	3967,1,c	;volatile
 17533                           
 17534                           ;ring_buffer_LUT.c: 444: load_enable = 1;
 17535  010A8A  805E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17536                           
 17537                           ; BSR set to: 1
 17538                           ;ring_buffer_LUT.c: 446: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17539  010A8C  0E00               	movlw	0
 17540  010A8E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17541  010A90  0E00               	movlw	0
 17542  010A92  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17543  010A94  0E02               	movlw	2
 17544  010A96  EC6C  F0AA         	call	_terminal_textAttributes
 17545                           
 17546                           ;ring_buffer_LUT.c: 447: printf("Load has been enabled, dimming disabled\n\r");
 17547  010A9A  0EB6               	movlw	low STR_118
 17548  010A9C  0101               	movlb	1	; () banked
 17549  010A9E  6FAC               	movwf	printf@f& (0+255),b
 17550  010AA0  0EF7               	movlw	high STR_118
 17551  010AA2  6FAD               	movwf	(printf@f+1)& (0+255),b
 17552  010AA4  EC22  F0D5         	call	_printf	;wreg free
 17553                           
 17554                           ;ring_buffer_LUT.c: 448: terminal_textAttributesReset();
 17555  010AA8  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17556                           
 17557                           ;ring_buffer_LUT.c: 450: }
 17558  010AAC  0012               	return	
 17559  010AAE                     l1534:
 17560                           
 17561                           ;ring_buffer_LUT.c: 453: else if ((0 == strcmp(line, "Load Enabled?"))) {
 17562  010AAE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17563  010AB2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17564  010AB6  0E4A               	movlw	low STR_119
 17565  010AB8  0101               	movlb	1	; () banked
 17566  010ABA  6F19               	movwf	strcmp@s2& (0+255),b
 17567  010ABC  0EFE               	movlw	high STR_119
 17568  010ABE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17569  010AC0  EC51  F0D2         	call	_strcmp	;wreg free
 17570  010AC4  0101               	movlb	1	; () banked
 17571  010AC6  5117               	movf	?_strcmp& (0+255),w,b
 17572  010AC8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17573  010ACA  A4D8               	btfss	status,2,c
 17574  010ACC  D025               	goto	l1536
 17575                           
 17576                           ; BSR set to: 1
 17577                           ;ring_buffer_LUT.c: 455: if (load_enable == 1) {
 17578  010ACE  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17579  010AD0  D011               	goto	l1537
 17580                           
 17581                           ; BSR set to: 1
 17582                           ;ring_buffer_LUT.c: 457: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17583  010AD2  0E00               	movlw	0
 17584  010AD4  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17585  010AD6  0E00               	movlw	0
 17586  010AD8  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17587  010ADA  0E02               	movlw	2
 17588  010ADC  EC6C  F0AA         	call	_terminal_textAttributes
 17589                           
 17590                           ;ring_buffer_LUT.c: 458: printf("Load is currently enabled\n\r");
 17591  010AE0  0E3A               	movlw	low STR_120
 17592  010AE2  0101               	movlb	1	; () banked
 17593  010AE4  6FAC               	movwf	printf@f& (0+255),b
 17594  010AE6  0EFB               	movlw	high STR_120
 17595  010AE8  6FAD               	movwf	(printf@f+1)& (0+255),b
 17596  010AEA  EC22  F0D5         	call	_printf	;wreg free
 17597                           
 17598                           ;ring_buffer_LUT.c: 459: terminal_textAttributesReset();
 17599  010AEE  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17600                           
 17601                           ;ring_buffer_LUT.c: 461: }
 17602  010AF2  0012               	return	
 17603  010AF4                     l1537:
 17604                           
 17605                           ;ring_buffer_LUT.c: 463: else {
 17606                           ;ring_buffer_LUT.c: 465: terminal_textAttributes(RED, BLACK, NORMAL);
 17607  010AF4  0E00               	movlw	0
 17608  010AF6  0101               	movlb	1	; () banked
 17609  010AF8  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17610  010AFA  0E00               	movlw	0
 17611  010AFC  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17612  010AFE  0E01               	movlw	1
 17613  010B00  EC6C  F0AA         	call	_terminal_textAttributes
 17614                           
 17615                           ;ring_buffer_LUT.c: 466: printf("Load is currently disabled\n\r");
 17616  010B04  0EC7               	movlw	low STR_121
 17617  010B06  0101               	movlb	1	; () banked
 17618  010B08  6FAC               	movwf	printf@f& (0+255),b
 17619  010B0A  0EFA               	movlw	high STR_121
 17620  010B0C  6FAD               	movwf	(printf@f+1)& (0+255),b
 17621  010B0E  EC22  F0D5         	call	_printf	;wreg free
 17622                           
 17623                           ;ring_buffer_LUT.c: 467: terminal_textAttributesReset();
 17624  010B12  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17625                           
 17626                           ;ring_buffer_LUT.c: 470: }
 17627                           ;ring_buffer_LUT.c: 472: }
 17628  010B16  0012               	return	
 17629  010B18                     l1536:
 17630                           
 17631                           ;ring_buffer_LUT.c: 475: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 17632  010B18  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17633  010B1C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17634  010B20  0E0C               	movlw	low STR_122
 17635  010B22  0101               	movlb	1	; () banked
 17636  010B24  6F19               	movwf	strcmp@s2& (0+255),b
 17637  010B26  0EFD               	movlw	high STR_122
 17638  010B28  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17639  010B2A  EC51  F0D2         	call	_strcmp	;wreg free
 17640  010B2E  0101               	movlb	1	; () banked
 17641  010B30  5117               	movf	?_strcmp& (0+255),w,b
 17642  010B32  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17643  010B34  A4D8               	btfss	status,2,c
 17644  010B36  D039               	goto	l1540
 17645                           
 17646                           ; BSR set to: 1
 17647                           ;ring_buffer_LUT.c: 477: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 17648  010B38  B05E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17649                           
 17650                           ; BSR set to: 1
 17651  010B3A  B07F               	btfsc	3967,0,c	;volatile
 17652  010B3C  D011               	goto	l1541
 17653                           
 17654                           ; BSR set to: 1
 17655                           ;ring_buffer_LUT.c: 479: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17656  010B3E  0E00               	movlw	0
 17657  010B40  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17658  010B42  0E00               	movlw	0
 17659  010B44  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17660  010B46  0E02               	movlw	2
 17661  010B48  EC6C  F0AA         	call	_terminal_textAttributes
 17662                           
 17663                           ;ring_buffer_LUT.c: 480: printf("Dimming is currently enabled\n\r");
 17664  010B4C  0E6B               	movlw	low STR_123
 17665  010B4E  0101               	movlb	1	; () banked
 17666  010B50  6FAC               	movwf	printf@f& (0+255),b
 17667  010B52  0EFA               	movlw	high STR_123
 17668  010B54  6FAD               	movwf	(printf@f+1)& (0+255),b
 17669  010B56  EC22  F0D5         	call	_printf	;wreg free
 17670                           
 17671                           ;ring_buffer_LUT.c: 481: terminal_textAttributesReset();
 17672  010B5A  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17673                           
 17674                           ;ring_buffer_LUT.c: 483: }
 17675  010B5E  0012               	return	
 17676  010B60                     l1541:
 17677                           
 17678                           ; BSR set to: 1
 17679                           ;ring_buffer_LUT.c: 485: else if (load_enable == 1){
 17680  010B60  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17681  010B62  D011               	goto	l1543
 17682                           
 17683                           ; BSR set to: 1
 17684                           ;ring_buffer_LUT.c: 487: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17685  010B64  0E00               	movlw	0
 17686  010B66  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17687  010B68  0E00               	movlw	0
 17688  010B6A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17689  010B6C  0E03               	movlw	3
 17690  010B6E  EC6C  F0AA         	call	_terminal_textAttributes
 17691                           
 17692                           ;ring_buffer_LUT.c: 488: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 17693  010B72  0E06               	movlw	low STR_124
 17694  010B74  0101               	movlb	1	; () banked
 17695  010B76  6FAC               	movwf	printf@f& (0+255),b
 17696  010B78  0EF5               	movlw	high STR_124
 17697  010B7A  6FAD               	movwf	(printf@f+1)& (0+255),b
 17698  010B7C  EC22  F0D5         	call	_printf	;wreg free
 17699                           
 17700                           ;ring_buffer_LUT.c: 489: terminal_textAttributesReset();
 17701  010B80  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17702                           
 17703                           ;ring_buffer_LUT.c: 491: }
 17704  010B84  0012               	return	
 17705  010B86                     l1543:
 17706                           
 17707                           ;ring_buffer_LUT.c: 493: else {
 17708                           ;ring_buffer_LUT.c: 495: terminal_textAttributes(RED, BLACK, NORMAL);
 17709  010B86  0E00               	movlw	0
 17710  010B88  0101               	movlb	1	; () banked
 17711  010B8A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17712  010B8C  0E00               	movlw	0
 17713  010B8E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17714  010B90  0E01               	movlw	1
 17715  010B92  EC6C  F0AA         	call	_terminal_textAttributes
 17716                           
 17717                           ;ring_buffer_LUT.c: 496: printf("Load and dimming are currently disabled\n\r");
 17718  010B96  0EE0               	movlw	low STR_125
 17719  010B98  0101               	movlb	1	; () banked
 17720  010B9A  6FAC               	movwf	printf@f& (0+255),b
 17721  010B9C  0EF7               	movlw	high STR_125
 17722  010B9E  6FAD               	movwf	(printf@f+1)& (0+255),b
 17723  010BA0  EC22  F0D5         	call	_printf	;wreg free
 17724                           
 17725                           ;ring_buffer_LUT.c: 497: terminal_textAttributesReset();
 17726  010BA4  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17727                           
 17728                           ;ring_buffer_LUT.c: 499: }
 17729                           ;ring_buffer_LUT.c: 503: }
 17730  010BA8  0012               	return	
 17731  010BAA                     l1540:
 17732                           
 17733                           ;ring_buffer_LUT.c: 508: else if ((0 == strcmp(line, "Disable Load"))) {
 17734  010BAA  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17735  010BAE  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17736  010BB2  0EDE               	movlw	low STR_126
 17737  010BB4  0101               	movlb	1	; () banked
 17738  010BB6  6F19               	movwf	strcmp@s2& (0+255),b
 17739  010BB8  0EFE               	movlw	high STR_126
 17740  010BBA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17741  010BBC  EC51  F0D2         	call	_strcmp	;wreg free
 17742  010BC0  0101               	movlb	1	; () banked
 17743  010BC2  5117               	movf	?_strcmp& (0+255),w,b
 17744  010BC4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17745  010BC6  A4D8               	btfss	status,2,c
 17746  010BC8  D014               	goto	l1546
 17747                           
 17748                           ; BSR set to: 1
 17749                           ;ring_buffer_LUT.c: 510: LATGbits.LATG1 = 0;
 17750  010BCA  927F               	bcf	3967,1,c	;volatile
 17751                           
 17752                           ;ring_buffer_LUT.c: 511: LATGbits.LATG0 = 0;
 17753  010BCC  907F               	bcf	3967,0,c	;volatile
 17754                           
 17755                           ;ring_buffer_LUT.c: 512: load_enable = 0;
 17756  010BCE  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17757                           
 17758                           ; BSR set to: 1
 17759                           ;ring_buffer_LUT.c: 514: terminal_textAttributes(RED, BLACK, NORMAL);
 17760  010BD0  0E00               	movlw	0
 17761  010BD2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17762  010BD4  0E00               	movlw	0
 17763  010BD6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17764  010BD8  0E01               	movlw	1
 17765  010BDA  EC6C  F0AA         	call	_terminal_textAttributes
 17766                           
 17767                           ;ring_buffer_LUT.c: 515: printf("Load has been disabled\n\r");
 17768  010BDE  0EBF               	movlw	low STR_127
 17769  010BE0  0101               	movlb	1	; () banked
 17770  010BE2  6FAC               	movwf	printf@f& (0+255),b
 17771  010BE4  0EFB               	movlw	high STR_127
 17772  010BE6  6FAD               	movwf	(printf@f+1)& (0+255),b
 17773  010BE8  EC22  F0D5         	call	_printf	;wreg free
 17774                           
 17775                           ;ring_buffer_LUT.c: 516: terminal_textAttributesReset();
 17776  010BEC  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17777                           
 17778                           ;ring_buffer_LUT.c: 518: }
 17779  010BF0  0012               	return	
 17780  010BF2                     l1546:
 17781                           
 17782                           ;ring_buffer_LUT.c: 521: else if ((strstr(line, "Set Dimming Percentage: "))) {
 17783  010BF2  C1BF  F126         	movff	ringBufferLUT@line,strstr@s1
 17784  010BF6  C1C0  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 17785  010BFA  0ED8               	movlw	low STR_128
 17786  010BFC  0101               	movlb	1	; () banked
 17787  010BFE  6F28               	movwf	strstr@s2& (0+255),b
 17788  010C00  0EFB               	movlw	high STR_128
 17789  010C02  6F29               	movwf	(strstr@s2+1)& (0+255),b
 17790  010C04  EC2B  F0CD         	call	_strstr	;wreg free
 17791  010C08  0101               	movlb	1	; () banked
 17792  010C0A  5126               	movf	?_strstr& (0+255),w,b
 17793  010C0C  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 17794  010C0E  B4D8               	btfsc	status,2,c
 17795  010C10  D12D               	goto	l1548
 17796                           
 17797                           ; BSR set to: 1
 17798                           ;ring_buffer_LUT.c: 524: char arg_buff[3];
 17799                           ;ring_buffer_LUT.c: 527: for (int index = 0; index < 3; index++) {
 17800  010C12  0E00               	movlw	0
 17801  010C14  0102               	movlb	2	; () banked
 17802  010C16  6FC4               	movwf	(ringBufferLUT@index+1)& (0+255),b
 17803  010C18  0E00               	movlw	0
 17804  010C1A  6FC3               	movwf	ringBufferLUT@index& (0+255),b
 17805  010C1C                     l23395:
 17806                           
 17807                           ; BSR set to: 2
 17808  010C1C  BFC4               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 17809  010C1E  D006               	goto	l1549
 17810  010C20  51C4               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 17811  010C22  E11F               	bnz	l23405
 17812  010C24  0E03               	movlw	3
 17813  010C26  5DC3               	subwf	ringBufferLUT@index& (0+255),w,b
 17814  010C28  B0D8               	btfsc	status,0,c
 17815  010C2A  D01B               	goto	u34750
 17816  010C2C                     l1549:
 17817                           
 17818                           ; BSR set to: 2
 17819                           ;ring_buffer_LUT.c: 529: arg_buff[index] = line[index + 24];
 17820                           
 17821                           ; BSR set to: 2
 17822  010C2C  0E18               	movlw	24
 17823  010C2E  25C3               	addwf	ringBufferLUT@index& (0+255),w,b
 17824  010C30  0101               	movlb	1	; () banked
 17825  010C32  6FC1               	movwf	??_ringBufferLUT& (0+255),b
 17826  010C34  0E00               	movlw	0
 17827  010C36  0102               	movlb	2	; () banked
 17828  010C38  21C4               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 17829  010C3A  0101               	movlb	1	; () banked
 17830  010C3C  6FC2               	movwf	(??_ringBufferLUT+1)& (0+255),b
 17831  010C3E  51C1               	movf	??_ringBufferLUT& (0+255),w,b
 17832  010C40  25BF               	addwf	ringBufferLUT@line& (0+255),w,b
 17833  010C42  6ED9               	movwf	fsr2l,c
 17834  010C44  51C2               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 17835  010C46  21C0               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 17836  010C48  6EDA               	movwf	fsr2h,c
 17837  010C4A  0EA4               	movlw	low ringBufferLUT@arg_buff
 17838  010C4C  0102               	movlb	2	; () banked
 17839  010C4E  25C3               	addwf	ringBufferLUT@index& (0+255),w,b
 17840  010C50  6EE1               	movwf	fsr1l,c
 17841  010C52  0E02               	movlw	high ringBufferLUT@arg_buff
 17842  010C54  21C4               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 17843  010C56  6EE2               	movwf	fsr1h,c
 17844  010C58  CFDF FFE7          	movff	indf2,indf1
 17845                           
 17846                           ; BSR set to: 2
 17847  010C5C  4BC3               	infsnz	ringBufferLUT@index& (0+255),f,b
 17848  010C5E  2BC4               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 17849  010C60  D7DD               	goto	l23395
 17850  010C62                     u34750:
 17851  010C62                     l23405:
 17852                           
 17853                           ; BSR set to: 2
 17854                           ;ring_buffer_LUT.c: 531: }
 17855                           ;ring_buffer_LUT.c: 533: int percentage = atoi(arg_buff);
 17856  010C62  0EA4               	movlw	low ringBufferLUT@arg_buff
 17857  010C64  0101               	movlb	1	; () banked
 17858  010C66  6F1D               	movwf	atoi@s& (0+255),b
 17859  010C68  0E02               	movlw	high ringBufferLUT@arg_buff
 17860  010C6A  6F1E               	movwf	(atoi@s+1)& (0+255),b
 17861  010C6C  EC1A  F0CA         	call	_atoi	;wreg free
 17862  010C70  C11D  F2C5         	movff	?_atoi,ringBufferLUT@percentage
 17863  010C74  C11E  F2C6         	movff	?_atoi+1,ringBufferLUT@percentage+1
 17864                           
 17865                           ;ring_buffer_LUT.c: 536: if ( (percentage >= 100) ||
 17866                           ;ring_buffer_LUT.c: 537: (percentage <= 0)) {
 17867  010C78  0102               	movlb	2	; () banked
 17868  010C7A  BFC6               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 17869  010C7C  D006               	goto	u34760
 17870  010C7E  51C6               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 17871  010C80  E10B               	bnz	l23411
 17872  010C82  0E64               	movlw	100
 17873  010C84  5DC5               	subwf	ringBufferLUT@percentage& (0+255),w,b
 17874  010C86  B0D8               	btfsc	status,0,c
 17875  010C88  D007               	goto	u34770
 17876  010C8A                     u34760:
 17877                           
 17878                           ; BSR set to: 2
 17879  010C8A  BFC6               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 17880  010C8C  D005               	goto	u34770
 17881  010C8E  51C6               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 17882  010C90  E12B               	bnz	l23413
 17883  010C92  05C5               	decf	ringBufferLUT@percentage& (0+255),w,b
 17884  010C94  B0D8               	btfsc	status,0,c
 17885  010C96  D028               	goto	l1551
 17886  010C98                     u34770:
 17887  010C98                     l23411:
 17888                           
 17889                           ; BSR set to: 2
 17890                           ;ring_buffer_LUT.c: 539: terminal_textAttributes(RED, BLACK, NORMAL);
 17891  010C98  0E00               	movlw	0
 17892  010C9A  0101               	movlb	1	; () banked
 17893  010C9C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17894  010C9E  0E00               	movlw	0
 17895  010CA0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17896  010CA2  0E01               	movlw	1
 17897  010CA4  EC6C  F0AA         	call	_terminal_textAttributes
 17898                           
 17899                           ;ring_buffer_LUT.c: 540: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 17900  010CA8  0E61               	movlw	low STR_129
 17901  010CAA  0101               	movlb	1	; () banked
 17902  010CAC  6FAC               	movwf	printf@f& (0+255),b
 17903  010CAE  0EF0               	movlw	high STR_129
 17904  010CB0  6FAD               	movwf	(printf@f+1)& (0+255),b
 17905  010CB2  EC22  F0D5         	call	_printf	;wreg free
 17906                           
 17907                           ;ring_buffer_LUT.c: 541: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17908  010CB6  0E00               	movlw	0
 17909  010CB8  0101               	movlb	1	; () banked
 17910  010CBA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17911  010CBC  0E00               	movlw	0
 17912  010CBE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17913  010CC0  0E03               	movlw	3
 17914  010CC2  EC6C  F0AA         	call	_terminal_textAttributes
 17915                           
 17916                           ;ring_buffer_LUT.c: 542: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 17917  010CC6  0EFB               	movlw	low STR_130
 17918  010CC8  0101               	movlb	1	; () banked
 17919  010CCA  6FAC               	movwf	printf@f& (0+255),b
 17920  010CCC  0EEF               	movlw	high STR_130
 17921  010CCE  6FAD               	movwf	(printf@f+1)& (0+255),b
 17922  010CD0  EC22  F0D5         	call	_printf	;wreg free
 17923                           
 17924                           ;ring_buffer_LUT.c: 543: printf("Enter 'Help' for list of available commands\n\r");
 17925  010CD4  0E2D               	movlw	low STR_131
 17926  010CD6  0101               	movlb	1	; () banked
 17927  010CD8  6FAC               	movwf	printf@f& (0+255),b
 17928  010CDA  0EF7               	movlw	high STR_131
 17929  010CDC  6FAD               	movwf	(printf@f+1)& (0+255),b
 17930  010CDE  EC22  F0D5         	call	_printf	;wreg free
 17931                           
 17932                           ;ring_buffer_LUT.c: 544: terminal_textAttributesReset();
 17933  010CE2  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17934                           
 17935                           ;ring_buffer_LUT.c: 546: }
 17936  010CE6  D0BB               	goto	l1554
 17937  010CE8                     l1551:
 17938  010CE8                     l23413:
 17939                           
 17940                           ;ring_buffer_LUT.c: 549: else {
 17941                           ;ring_buffer_LUT.c: 552: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 17942  010CE8  0E00               	movlw	0
 17943  010CEA  0101               	movlb	1	; () banked
 17944  010CEC  6F41               	movwf	___fldiv@a& (0+255),b
 17945  010CEE  0E00               	movlw	0
 17946  010CF0  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 17947  010CF2  0EC8               	movlw	200
 17948  010CF4  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 17949  010CF6  0E42               	movlw	66
 17950  010CF8  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 17951  010CFA  0E00               	movlw	0
 17952  010CFC  6F2D               	movwf	___fladd@a& (0+255),b
 17953  010CFE  0E00               	movlw	0
 17954  010D00  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 17955  010D02  0EC8               	movlw	200
 17956  010D04  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 17957  010D06  0E42               	movlw	66
 17958  010D08  6F30               	movwf	(___fladd@a+3)& (0+255),b
 17959  010D0A  C2C5  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 17960  010D0E  C2C6  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 17961  010D12  0E00               	movlw	0
 17962  010D14  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 17963  010D16  0EFF               	movlw	-1
 17964  010D18  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 17965  010D1A  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 17966  010D1C  0E01               	movlw	1
 17967  010D1E  EC20  F0C1         	call	___xxtofl
 17968  010D22  C117  F125         	movff	?___xxtofl,___flneg@f1
 17969  010D26  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 17970  010D2A  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 17971  010D2E  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 17972  010D32  ECDC  F0D6         	call	___flneg	;wreg free
 17973  010D36  C125  F129         	movff	?___flneg,___fladd@b
 17974  010D3A  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 17975  010D3E  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 17976  010D42  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 17977  010D46  EC71  F0AF         	call	___fladd	;wreg free
 17978  010D4A  C129  F13D         	movff	?___fladd,___fldiv@b
 17979  010D4E  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 17980  010D52  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 17981  010D56  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 17982  010D5A  EC75  F0B8         	call	___fldiv	;wreg free
 17983  010D5E  C13D  F156         	movff	?___fldiv,___flmul@b
 17984  010D62  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 17985  010D66  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 17986  010D6A  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 17987  010D6E  0EDB               	movlw	219
 17988  010D70  0101               	movlb	1	; () banked
 17989  010D72  6F5A               	movwf	___flmul@a& (0+255),b
 17990  010D74  0E0F               	movlw	15
 17991  010D76  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17992  010D78  0E49               	movlw	73
 17993  010D7A  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17994  010D7C  0E40               	movlw	64
 17995  010D7E  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17996  010D80  EC20  F0AC         	call	___flmul	;wreg free
 17997  010D84  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 17998  010D88  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 17999  010D8C  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 18000  010D90  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 18001                           
 18002                           ;ring_buffer_LUT.c: 553: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 18003  010D94  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 18004  010D98  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 18005  010D9C  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 18006  010DA0  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 18007  010DA4  0EE1               	movlw	225
 18008  010DA6  0101               	movlb	1	; () banked
 18009  010DA8  6F5A               	movwf	___flmul@a& (0+255),b
 18010  010DAA  0E2E               	movlw	46
 18011  010DAC  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 18012  010DAE  0E65               	movlw	101
 18013  010DB0  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 18014  010DB2  0E42               	movlw	66
 18015  010DB4  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 18016  010DB6  EC20  F0AC         	call	___flmul	;wreg free
 18017  010DBA  C156  F2A7         	movff	?___flmul,ringBufferLUT@angle_degrees
 18018  010DBE  C157  F2A8         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 18019  010DC2  C158  F2A9         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 18020  010DC6  C159  F2AA         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 18021                           
 18022                           ;ring_buffer_LUT.c: 554: dimming_period = (percentage) * (0xFFFF / 100);
 18023  010DCA  C2C5  F117         	movff	ringBufferLUT@percentage,___wmul@multiplier
 18024  010DCE  C2C6  F118         	movff	ringBufferLUT@percentage+1,___wmul@multiplier+1
 18025  010DD2  0E02               	movlw	2
 18026  010DD4  0101               	movlb	1	; () banked
 18027  010DD6  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18028  010DD8  0E8F               	movlw	143
 18029  010DDA  6F19               	movwf	___wmul@multiplicand& (0+255),b
 18030  010DDC  EC38  F0D7         	call	___wmul	;wreg free
 18031  010DE0  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 18032  010DE4  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 18033                           
 18034                           ;ring_buffer_LUT.c: 556: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18035  010DE8  0E00               	movlw	0
 18036  010DEA  0101               	movlb	1	; () banked
 18037  010DEC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18038  010DEE  0E00               	movlw	0
 18039  010DF0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18040  010DF2  0E02               	movlw	2
 18041  010DF4  EC6C  F0AA         	call	_terminal_textAttributes
 18042                           
 18043                           ;ring_buffer_LUT.c: 557: printf("Dimming has been set to %d percent\n\r", percentage);
 18044  010DF8  0EF3               	movlw	low STR_132
 18045  010DFA  0101               	movlb	1	; () banked
 18046  010DFC  6FAC               	movwf	printf@f& (0+255),b
 18047  010DFE  0EF8               	movlw	high STR_132
 18048  010E00  6FAD               	movwf	(printf@f+1)& (0+255),b
 18049  010E02  C2C5  F1AE         	movff	ringBufferLUT@percentage,?_printf+2
 18050  010E06  C2C6  F1AF         	movff	ringBufferLUT@percentage+1,?_printf+3
 18051  010E0A  EC22  F0D5         	call	_printf	;wreg free
 18052                           
 18053                           ;ring_buffer_LUT.c: 558: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 18054  010E0E  0E1D               	movlw	low STR_133
 18055  010E10  0101               	movlb	1	; () banked
 18056  010E12  6FAC               	movwf	printf@f& (0+255),b
 18057  010E14  0EF2               	movlw	high STR_133
 18058  010E16  6FAD               	movwf	(printf@f+1)& (0+255),b
 18059  010E18  C0F2  F1AE         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 18060  010E1C  C0F3  F1AF         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 18061  010E20  C0F4  F1B0         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 18062  010E24  C0F5  F1B1         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 18063  010E28  C2A7  F1B2         	movff	ringBufferLUT@angle_degrees,?_printf+6
 18064  010E2C  C2A8  F1B3         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 18065  010E30  C2A9  F1B4         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 18066  010E34  C2AA  F1B5         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 18067  010E38  EC22  F0D5         	call	_printf	;wreg free
 18068                           
 18069                           ;ring_buffer_LUT.c: 559: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 18070  010E3C  0E55               	movlw	low STR_134
 18071  010E3E  0101               	movlb	1	; () banked
 18072  010E40  6FAC               	movwf	printf@f& (0+255),b
 18073  010E42  0EF1               	movlw	high STR_134
 18074  010E44  6FAD               	movwf	(printf@f+1)& (0+255),b
 18075  010E46  C0F0  F1AE         	movff	_dimming_period,?_printf+2	;volatile
 18076  010E4A  C0F1  F1AF         	movff	_dimming_period+1,?_printf+3	;volatile
 18077  010E4E  C0F0  F1B0         	movff	_dimming_period,?_printf+4	;volatile
 18078  010E52  C0F1  F1B1         	movff	_dimming_period+1,?_printf+5	;volatile
 18079  010E56  EC22  F0D5         	call	_printf	;wreg free
 18080                           
 18081                           ;ring_buffer_LUT.c: 560: terminal_textAttributesReset();
 18082  010E5A  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18083  010E5E                     l1554:
 18084                           
 18085                           ;ring_buffer_LUT.c: 562: }
 18086                           ;ring_buffer_LUT.c: 564: if (error_handler.USB_UART_COMM_error_flag) {
 18087  010E5E  0102               	movlb	2	; () banked
 18088  010E60  5108               	movf	(_error_handler+8)& (0+255),w,b
 18089  010E62  B4D8               	btfsc	status,2,c
 18090  010E64  0012               	return	
 18091                           
 18092                           ; BSR set to: 2
 18093                           ;ring_buffer_LUT.c: 565: error_handler.USB_UART_COMM_error_flag = 0;
 18094  010E66  0E00               	movlw	0
 18095  010E68  6F08               	movwf	(_error_handler+8)& (0+255),b
 18096                           
 18097                           ; BSR set to: 2
 18098                           ;ring_buffer_LUT.c: 566: }
 18099                           ;ring_buffer_LUT.c: 568: }
 18100  010E6A  0012               	return	
 18101  010E6C                     l1548:
 18102                           
 18103                           ;ring_buffer_LUT.c: 571: else if((0 == strcmp(line, "Device On Time?"))) {
 18104                           
 18105                           ; BSR set to: 2
 18106  010E6C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18107  010E70  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18108  010E74  0EA2               	movlw	low STR_135
 18109  010E76  0101               	movlb	1	; () banked
 18110  010E78  6F19               	movwf	strcmp@s2& (0+255),b
 18111  010E7A  0EFD               	movlw	high STR_135
 18112  010E7C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18113  010E7E  EC51  F0D2         	call	_strcmp	;wreg free
 18114  010E82  0101               	movlb	1	; () banked
 18115  010E84  5117               	movf	?_strcmp& (0+255),w,b
 18116  010E86  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18117  010E88  A4D8               	btfss	status,2,c
 18118  010E8A  D019               	goto	l1557
 18119                           
 18120                           ; BSR set to: 1
 18121                           ;ring_buffer_LUT.c: 573: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18122  010E8C  0E00               	movlw	0
 18123  010E8E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18124  010E90  0E00               	movlw	0
 18125  010E92  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18126  010E94  0E02               	movlw	2
 18127  010E96  EC6C  F0AA         	call	_terminal_textAttributes
 18128                           
 18129                           ;ring_buffer_LUT.c: 574: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 18130  010E9A  0E4C               	movlw	low STR_136
 18131  010E9C  0101               	movlb	1	; () banked
 18132  010E9E  6FAC               	movwf	printf@f& (0+255),b
 18133  010EA0  0EF3               	movlw	high STR_136
 18134  010EA2  6FAD               	movwf	(printf@f+1)& (0+255),b
 18135  010EA4  C22C  F1AE         	movff	_dev_on_time,?_printf+2	;volatile
 18136  010EA8  C22D  F1AF         	movff	_dev_on_time+1,?_printf+3	;volatile
 18137  010EAC  C22E  F1B0         	movff	_dev_on_time+2,?_printf+4	;volatile
 18138  010EB0  C22F  F1B1         	movff	_dev_on_time+3,?_printf+5	;volatile
 18139  010EB4  EC22  F0D5         	call	_printf	;wreg free
 18140                           
 18141                           ;ring_buffer_LUT.c: 575: terminal_textAttributesReset();
 18142  010EB8  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18143                           
 18144                           ;ring_buffer_LUT.c: 577: }
 18145  010EBC  0012               	return	
 18146  010EBE                     l1557:
 18147                           
 18148                           ;ring_buffer_LUT.c: 580: else if((0 == strcmp(line, "Load On Time?"))) {
 18149  010EBE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18150  010EC2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18151  010EC6  0E58               	movlw	low STR_137
 18152  010EC8  0101               	movlb	1	; () banked
 18153  010ECA  6F19               	movwf	strcmp@s2& (0+255),b
 18154  010ECC  0EFE               	movlw	high STR_137
 18155  010ECE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18156  010ED0  EC51  F0D2         	call	_strcmp	;wreg free
 18157  010ED4  0101               	movlb	1	; () banked
 18158  010ED6  5117               	movf	?_strcmp& (0+255),w,b
 18159  010ED8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18160  010EDA  A4D8               	btfss	status,2,c
 18161  010EDC  D019               	goto	l1559
 18162                           
 18163                           ; BSR set to: 1
 18164                           ;ring_buffer_LUT.c: 582: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18165  010EDE  0E00               	movlw	0
 18166  010EE0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18167  010EE2  0E00               	movlw	0
 18168  010EE4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18169  010EE6  0E02               	movlw	2
 18170  010EE8  EC6C  F0AA         	call	_terminal_textAttributes
 18171                           
 18172                           ;ring_buffer_LUT.c: 583: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 18173  010EEC  0E3B               	movlw	low STR_138
 18174  010EEE  0101               	movlb	1	; () banked
 18175  010EF0  6FAC               	movwf	printf@f& (0+255),b
 18176  010EF2  0EF5               	movlw	high STR_138
 18177  010EF4  6FAD               	movwf	(printf@f+1)& (0+255),b
 18178  010EF6  C228  F1AE         	movff	_load_on_time,?_printf+2	;volatile
 18179  010EFA  C229  F1AF         	movff	_load_on_time+1,?_printf+3	;volatile
 18180  010EFE  C22A  F1B0         	movff	_load_on_time+2,?_printf+4	;volatile
 18181  010F02  C22B  F1B1         	movff	_load_on_time+3,?_printf+5	;volatile
 18182  010F06  EC22  F0D5         	call	_printf	;wreg free
 18183                           
 18184                           ;ring_buffer_LUT.c: 584: terminal_textAttributesReset();
 18185  010F0A  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18186                           
 18187                           ;ring_buffer_LUT.c: 586: }
 18188  010F0E  0012               	return	
 18189  010F10                     l1559:
 18190                           
 18191                           ;ring_buffer_LUT.c: 589: else if((0 == strcmp(line, "Max RMS Current?"))) {
 18192  010F10  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18193  010F14  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18194  010F18  0E2E               	movlw	low STR_139
 18195  010F1A  0101               	movlb	1	; () banked
 18196  010F1C  6F19               	movwf	strcmp@s2& (0+255),b
 18197  010F1E  0EFD               	movlw	high STR_139
 18198  010F20  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18199  010F22  EC51  F0D2         	call	_strcmp	;wreg free
 18200  010F26  0101               	movlb	1	; () banked
 18201  010F28  5117               	movf	?_strcmp& (0+255),w,b
 18202  010F2A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18203  010F2C  A4D8               	btfss	status,2,c
 18204  010F2E  D030               	goto	l1561
 18205                           
 18206                           ; BSR set to: 1
 18207                           ;ring_buffer_LUT.c: 592: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 18208  010F30  0E5D               	movlw	low _max_Irms_address
 18209  010F32  6EF6               	movwf	tblptrl,c
 18210  010F34                     	if	1	;There is more than 1 active tblptr byte
 18211  010F34  0ECF               	movlw	high _max_Irms_address
 18212  010F36  6EF7               	movwf	tblptrh,c
 18213  010F38                     	endif
 18214  010F38                     	if	1	;There are 3 active tblptr bytes
 18215  010F38  0E00               	movlw	low (_max_Irms_address shr (0+16))
 18216  010F3A  6EF8               	movwf	tblptru,c
 18217  010F3C                     	endif
 18218  010F3C  0009               	tblrd		*+
 18219  010F3E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18220  010F42  000A               	tblrd		*-
 18221  010F44  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18222  010F48  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18223  010F4C  C119  F2AB         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 18224  010F50  C11A  F2AC         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 18225  010F54  C11B  F2AD         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 18226  010F58  C11C  F2AE         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 18227                           
 18228                           ;ring_buffer_LUT.c: 594: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18229  010F5C  0E00               	movlw	0
 18230  010F5E  0101               	movlb	1	; () banked
 18231  010F60  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18232  010F62  0E00               	movlw	0
 18233  010F64  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18234  010F66  0E06               	movlw	6
 18235  010F68  EC6C  F0AA         	call	_terminal_textAttributes
 18236                           
 18237                           ;ring_buffer_LUT.c: 595: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 18238  010F6C  0E0C               	movlw	low STR_140
 18239  010F6E  0101               	movlb	1	; () banked
 18240  010F70  6FAC               	movwf	printf@f& (0+255),b
 18241  010F72  0EF6               	movlw	high STR_140
 18242  010F74  6FAD               	movwf	(printf@f+1)& (0+255),b
 18243  010F76  C2AB  F1AE         	movff	ringBufferLUT@max_current_print,?_printf+2
 18244  010F7A  C2AC  F1AF         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 18245  010F7E  C2AD  F1B0         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 18246  010F82  C2AE  F1B1         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 18247  010F86  EC22  F0D5         	call	_printf	;wreg free
 18248                           
 18249                           ;ring_buffer_LUT.c: 596: terminal_textAttributesReset();
 18250  010F8A  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18251                           
 18252                           ;ring_buffer_LUT.c: 598: }
 18253  010F8E  0012               	return	
 18254  010F90                     l1561:
 18255                           
 18256                           ;ring_buffer_LUT.c: 601: else if((0 == strcmp(line, "Max Power?"))) {
 18257  010F90  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18258  010F94  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18259  010F98  0E54               	movlw	low STR_141
 18260  010F9A  0101               	movlb	1	; () banked
 18261  010F9C  6F19               	movwf	strcmp@s2& (0+255),b
 18262  010F9E  0EFF               	movlw	high STR_141
 18263  010FA0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18264  010FA2  EC51  F0D2         	call	_strcmp	;wreg free
 18265  010FA6  0101               	movlb	1	; () banked
 18266  010FA8  5117               	movf	?_strcmp& (0+255),w,b
 18267  010FAA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18268  010FAC  A4D8               	btfss	status,2,c
 18269  010FAE  D030               	goto	l1563
 18270                           
 18271                           ; BSR set to: 1
 18272                           ;ring_buffer_LUT.c: 604: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 18273  010FB0  0E5B               	movlw	low _max_Power_address
 18274  010FB2  6EF6               	movwf	tblptrl,c
 18275  010FB4                     	if	1	;There is more than 1 active tblptr byte
 18276  010FB4  0ECF               	movlw	high _max_Power_address
 18277  010FB6  6EF7               	movwf	tblptrh,c
 18278  010FB8                     	endif
 18279  010FB8                     	if	1	;There are 3 active tblptr bytes
 18280  010FB8  0E00               	movlw	low (_max_Power_address shr (0+16))
 18281  010FBA  6EF8               	movwf	tblptru,c
 18282  010FBC                     	endif
 18283  010FBC  0009               	tblrd		*+
 18284  010FBE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18285  010FC2  000A               	tblrd		*-
 18286  010FC4  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18287  010FC8  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18288  010FCC  C119  F2AF         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 18289  010FD0  C11A  F2B0         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 18290  010FD4  C11B  F2B1         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 18291  010FD8  C11C  F2B2         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 18292                           
 18293                           ;ring_buffer_LUT.c: 606: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18294  010FDC  0E00               	movlw	0
 18295  010FDE  0101               	movlb	1	; () banked
 18296  010FE0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18297  010FE2  0E00               	movlw	0
 18298  010FE4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18299  010FE6  0E06               	movlw	6
 18300  010FE8  EC6C  F0AA         	call	_terminal_textAttributes
 18301                           
 18302                           ;ring_buffer_LUT.c: 607: printf("Maximum recorded output power is %.3f Watts\n\r", max_P
      +                          ower_print);
 18303  010FEC  0E5B               	movlw	low STR_142
 18304  010FEE  0101               	movlb	1	; () banked
 18305  010FF0  6FAC               	movwf	printf@f& (0+255),b
 18306  010FF2  0EF7               	movlw	high STR_142
 18307  010FF4  6FAD               	movwf	(printf@f+1)& (0+255),b
 18308  010FF6  C2AF  F1AE         	movff	ringBufferLUT@max_Power_print,?_printf+2
 18309  010FFA  C2B0  F1AF         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 18310  010FFE  C2B1  F1B0         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 18311  011002  C2B2  F1B1         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 18312  011006  EC22  F0D5         	call	_printf	;wreg free
 18313                           
 18314                           ;ring_buffer_LUT.c: 608: terminal_textAttributesReset();
 18315  01100A  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18316                           
 18317                           ;ring_buffer_LUT.c: 610: }
 18318  01100E  0012               	return	
 18319  011010                     l1563:
 18320                           
 18321                           ;ring_buffer_LUT.c: 613: else if((0 == strcmp(line, "Max POS3P3 Voltage?"))) {
 18322  011010  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18323  011014  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18324  011018  0E8C               	movlw	low STR_143
 18325  01101A  0101               	movlb	1	; () banked
 18326  01101C  6F19               	movwf	strcmp@s2& (0+255),b
 18327  01101E  0EFC               	movlw	high STR_143
 18328  011020  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18329  011022  EC51  F0D2         	call	_strcmp	;wreg free
 18330  011026  0101               	movlb	1	; () banked
 18331  011028  5117               	movf	?_strcmp& (0+255),w,b
 18332  01102A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18333  01102C  A4D8               	btfss	status,2,c
 18334  01102E  D030               	goto	l1565
 18335                           
 18336                           ; BSR set to: 1
 18337                           ;ring_buffer_LUT.c: 616: double max_voltage_print = readDoubleFromEEPROM(max_POS3P3_ADC_
      +                          Result_address);
 18338  011030  0E59               	movlw	low _max_POS3P3_ADC_Result_address
 18339  011032  6EF6               	movwf	tblptrl,c
 18340  011034                     	if	1	;There is more than 1 active tblptr byte
 18341  011034  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 18342  011036  6EF7               	movwf	tblptrh,c
 18343  011038                     	endif
 18344  011038                     	if	1	;There are 3 active tblptr bytes
 18345  011038  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 18346  01103A  6EF8               	movwf	tblptru,c
 18347  01103C                     	endif
 18348  01103C  0009               	tblrd		*+
 18349  01103E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18350  011042  000A               	tblrd		*-
 18351  011044  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18352  011048  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18353  01104C  C119  F2B3         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print
 18354  011050  C11A  F2B4         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print+1
 18355  011054  C11B  F2B5         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print+2
 18356  011058  C11C  F2B6         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print+3
 18357                           
 18358                           ;ring_buffer_LUT.c: 618: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18359  01105C  0E00               	movlw	0
 18360  01105E  0101               	movlb	1	; () banked
 18361  011060  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18362  011062  0E00               	movlw	0
 18363  011064  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18364  011066  0E06               	movlw	6
 18365  011068  EC6C  F0AA         	call	_terminal_textAttributes
 18366                           
 18367                           ;ring_buffer_LUT.c: 619: printf("Maximum recorded +3.3V rail voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 18368  01106C  0ED8               	movlw	low STR_144
 18369  01106E  0101               	movlb	1	; () banked
 18370  011070  6FAC               	movwf	printf@f& (0+255),b
 18371  011072  0EF5               	movlw	high STR_144
 18372  011074  6FAD               	movwf	(printf@f+1)& (0+255),b
 18373  011076  C2B3  F1AE         	movff	ringBufferLUT@max_voltage_print,?_printf+2
 18374  01107A  C2B4  F1AF         	movff	ringBufferLUT@max_voltage_print+1,?_printf+3
 18375  01107E  C2B5  F1B0         	movff	ringBufferLUT@max_voltage_print+2,?_printf+4
 18376  011082  C2B6  F1B1         	movff	ringBufferLUT@max_voltage_print+3,?_printf+5
 18377  011086  EC22  F0D5         	call	_printf	;wreg free
 18378                           
 18379                           ;ring_buffer_LUT.c: 620: terminal_textAttributesReset();
 18380  01108A  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18381                           
 18382                           ;ring_buffer_LUT.c: 622: }
 18383  01108E  0012               	return	
 18384  011090                     l1565:
 18385                           
 18386                           ;ring_buffer_LUT.c: 625: else if((0 == strcmp(line, "Max POS12 Voltage?"))) {
 18387  011090  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18388  011094  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18389  011098  0EB3               	movlw	low STR_145
 18390  01109A  0101               	movlb	1	; () banked
 18391  01109C  6F19               	movwf	strcmp@s2& (0+255),b
 18392  01109E  0EFC               	movlw	high STR_145
 18393  0110A0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18394  0110A2  EC51  F0D2         	call	_strcmp	;wreg free
 18395  0110A6  0101               	movlb	1	; () banked
 18396  0110A8  5117               	movf	?_strcmp& (0+255),w,b
 18397  0110AA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18398  0110AC  A4D8               	btfss	status,2,c
 18399  0110AE  D030               	goto	l1567
 18400                           
 18401                           ; BSR set to: 1
 18402                           ;ring_buffer_LUT.c: 628: double max_voltage_print = readDoubleFromEEPROM(max_POS12_ADC_R
      +                          esult_address);
 18403  0110B0  0E57               	movlw	low _max_POS12_ADC_Result_address
 18404  0110B2  6EF6               	movwf	tblptrl,c
 18405  0110B4                     	if	1	;There is more than 1 active tblptr byte
 18406  0110B4  0ECF               	movlw	high _max_POS12_ADC_Result_address
 18407  0110B6  6EF7               	movwf	tblptrh,c
 18408  0110B8                     	endif
 18409  0110B8                     	if	1	;There are 3 active tblptr bytes
 18410  0110B8  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 18411  0110BA  6EF8               	movwf	tblptru,c
 18412  0110BC                     	endif
 18413  0110BC  0009               	tblrd		*+
 18414  0110BE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18415  0110C2  000A               	tblrd		*-
 18416  0110C4  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18417  0110C8  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18418  0110CC  C119  F2B7         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3311
 18419  0110D0  C11A  F2B8         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3311+1
 18420  0110D4  C11B  F2B9         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3311+2
 18421  0110D8  C11C  F2BA         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3311+3
 18422                           
 18423                           ;ring_buffer_LUT.c: 630: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18424  0110DC  0E00               	movlw	0
 18425  0110DE  0101               	movlb	1	; () banked
 18426  0110E0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18427  0110E2  0E00               	movlw	0
 18428  0110E4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18429  0110E6  0E06               	movlw	6
 18430  0110E8  EC6C  F0AA         	call	_terminal_textAttributes
 18431                           
 18432                           ;ring_buffer_LUT.c: 631: printf("Maximum recorded +12V rail voltage is %.3f Volts\n\r", 
      +                          max_voltage_print);
 18433  0110EC  0E3F               	movlw	low STR_146
 18434  0110EE  0101               	movlb	1	; () banked
 18435  0110F0  6FAC               	movwf	printf@f& (0+255),b
 18436  0110F2  0EF6               	movlw	high STR_146
 18437  0110F4  6FAD               	movwf	(printf@f+1)& (0+255),b
 18438  0110F6  C2B7  F1AE         	movff	ringBufferLUT@max_voltage_print_3311,?_printf+2
 18439  0110FA  C2B8  F1AF         	movff	ringBufferLUT@max_voltage_print_3311+1,?_printf+3
 18440  0110FE  C2B9  F1B0         	movff	ringBufferLUT@max_voltage_print_3311+2,?_printf+4
 18441  011102  C2BA  F1B1         	movff	ringBufferLUT@max_voltage_print_3311+3,?_printf+5
 18442  011106  EC22  F0D5         	call	_printf	;wreg free
 18443                           
 18444                           ;ring_buffer_LUT.c: 632: terminal_textAttributesReset();
 18445  01110A  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18446                           
 18447                           ;ring_buffer_LUT.c: 634: }
 18448  01110E  0012               	return	
 18449  011110                     l1567:
 18450                           
 18451                           ;ring_buffer_LUT.c: 637: else if((0 == strcmp(line, "Max Die Temp?"))) {
 18452  011110  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18453  011114  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18454  011118  0E66               	movlw	low STR_147
 18455  01111A  0101               	movlb	1	; () banked
 18456  01111C  6F19               	movwf	strcmp@s2& (0+255),b
 18457  01111E  0EFE               	movlw	high STR_147
 18458  011120  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18459  011122  EC51  F0D2         	call	_strcmp	;wreg free
 18460  011126  0101               	movlb	1	; () banked
 18461  011128  5117               	movf	?_strcmp& (0+255),w,b
 18462  01112A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18463  01112C  A4D8               	btfss	status,2,c
 18464  01112E  D030               	goto	l1569
 18465                           
 18466                           ; BSR set to: 1
 18467                           ;ring_buffer_LUT.c: 640: double max_temp_print = readDoubleFromEEPROM(max_Temp_ADC_Resul
      +                          t_address);
 18468  011130  0E55               	movlw	low _max_Temp_ADC_Result_address
 18469  011132  6EF6               	movwf	tblptrl,c
 18470  011134                     	if	1	;There is more than 1 active tblptr byte
 18471  011134  0ECF               	movlw	high _max_Temp_ADC_Result_address
 18472  011136  6EF7               	movwf	tblptrh,c
 18473  011138                     	endif
 18474  011138                     	if	1	;There are 3 active tblptr bytes
 18475  011138  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 18476  01113A  6EF8               	movwf	tblptru,c
 18477  01113C                     	endif
 18478  01113C  0009               	tblrd		*+
 18479  01113E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18480  011142  000A               	tblrd		*-
 18481  011144  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18482  011148  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18483  01114C  C119  F2BB         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_temp_print
 18484  011150  C11A  F2BC         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_temp_print+1
 18485  011154  C11B  F2BD         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_temp_print+2
 18486  011158  C11C  F2BE         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_temp_print+3
 18487                           
 18488                           ;ring_buffer_LUT.c: 642: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18489  01115C  0E00               	movlw	0
 18490  01115E  0101               	movlb	1	; () banked
 18491  011160  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18492  011162  0E00               	movlw	0
 18493  011164  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18494  011166  0E06               	movlw	6
 18495  011168  EC6C  F0AA         	call	_terminal_textAttributes
 18496                           
 18497                           ;ring_buffer_LUT.c: 643: printf("Maximum recorded die temperature is %.3f C\n\r", max_te
      +                          mp_print);
 18498  01116C  0E89               	movlw	low STR_148
 18499  01116E  0101               	movlb	1	; () banked
 18500  011170  6FAC               	movwf	printf@f& (0+255),b
 18501  011172  0EF7               	movlw	high STR_148
 18502  011174  6FAD               	movwf	(printf@f+1)& (0+255),b
 18503  011176  C2BB  F1AE         	movff	ringBufferLUT@max_temp_print,?_printf+2
 18504  01117A  C2BC  F1AF         	movff	ringBufferLUT@max_temp_print+1,?_printf+3
 18505  01117E  C2BD  F1B0         	movff	ringBufferLUT@max_temp_print+2,?_printf+4
 18506  011182  C2BE  F1B1         	movff	ringBufferLUT@max_temp_print+3,?_printf+5
 18507  011186  EC22  F0D5         	call	_printf	;wreg free
 18508                           
 18509                           ;ring_buffer_LUT.c: 644: terminal_textAttributesReset();
 18510  01118A  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18511                           
 18512                           ;ring_buffer_LUT.c: 646: }
 18513  01118E  0012               	return	
 18514  011190                     l1569:
 18515                           
 18516                           ;ring_buffer_LUT.c: 649: else if((0 == strcmp(line, "Max FVR Voltage?"))) {
 18517  011190  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18518  011194  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18519  011198  0E1D               	movlw	low STR_149
 18520  01119A  0101               	movlb	1	; () banked
 18521  01119C  6F19               	movwf	strcmp@s2& (0+255),b
 18522  01119E  0EFD               	movlw	high STR_149
 18523  0111A0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18524  0111A2  EC51  F0D2         	call	_strcmp	;wreg free
 18525  0111A6  0101               	movlb	1	; () banked
 18526  0111A8  5117               	movf	?_strcmp& (0+255),w,b
 18527  0111AA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18528  0111AC  A4D8               	btfss	status,2,c
 18529  0111AE  D030               	goto	l1571
 18530                           
 18531                           ; BSR set to: 1
 18532                           ;ring_buffer_LUT.c: 652: double max_voltage_print = readDoubleFromEEPROM(max_FVR_ADC_Res
      +                          ult_address);
 18533  0111B0  0E53               	movlw	low _max_FVR_ADC_Result_address
 18534  0111B2  6EF6               	movwf	tblptrl,c
 18535  0111B4                     	if	1	;There is more than 1 active tblptr byte
 18536  0111B4  0ECF               	movlw	high _max_FVR_ADC_Result_address
 18537  0111B6  6EF7               	movwf	tblptrh,c
 18538  0111B8                     	endif
 18539  0111B8                     	if	1	;There are 3 active tblptr bytes
 18540  0111B8  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 18541  0111BA  6EF8               	movwf	tblptru,c
 18542  0111BC                     	endif
 18543  0111BC  0009               	tblrd		*+
 18544  0111BE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18545  0111C2  000A               	tblrd		*-
 18546  0111C4  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18547  0111C8  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18548  0111CC  C119  F2BF         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3317
 18549  0111D0  C11A  F2C0         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3317+1
 18550  0111D4  C11B  F2C1         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3317+2
 18551  0111D8  C11C  F2C2         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3317+3
 18552                           
 18553                           ;ring_buffer_LUT.c: 654: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18554  0111DC  0E00               	movlw	0
 18555  0111DE  0101               	movlb	1	; () banked
 18556  0111E0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18557  0111E2  0E00               	movlw	0
 18558  0111E4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18559  0111E6  0E06               	movlw	6
 18560  0111E8  EC6C  F0AA         	call	_terminal_textAttributes
 18561                           
 18562                           ;ring_buffer_LUT.c: 655: printf("Maximum recorded FVR buffer 1 voltage is %.3f Volts\n\r
      +                          ", max_voltage_print);
 18563  0111EC  0E9B               	movlw	low STR_150
 18564  0111EE  0101               	movlb	1	; () banked
 18565  0111F0  6FAC               	movwf	printf@f& (0+255),b
 18566  0111F2  0EF4               	movlw	high STR_150
 18567  0111F4  6FAD               	movwf	(printf@f+1)& (0+255),b
 18568  0111F6  C2BF  F1AE         	movff	ringBufferLUT@max_voltage_print_3317,?_printf+2
 18569  0111FA  C2C0  F1AF         	movff	ringBufferLUT@max_voltage_print_3317+1,?_printf+3
 18570  0111FE  C2C1  F1B0         	movff	ringBufferLUT@max_voltage_print_3317+2,?_printf+4
 18571  011202  C2C2  F1B1         	movff	ringBufferLUT@max_voltage_print_3317+3,?_printf+5
 18572  011206  EC22  F0D5         	call	_printf	;wreg free
 18573                           
 18574                           ;ring_buffer_LUT.c: 656: terminal_textAttributesReset();
 18575  01120A  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18576                           
 18577                           ;ring_buffer_LUT.c: 658: }
 18578  01120E  0012               	return	
 18579  011210                     l1571:
 18580                           
 18581                           ;ring_buffer_LUT.c: 661: else if((0 == strcmp(line, "Clear Max Values"))) {
 18582  011210  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18583  011214  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18584  011218  0E50               	movlw	low STR_151
 18585  01121A  0101               	movlb	1	; () banked
 18586  01121C  6F19               	movwf	strcmp@s2& (0+255),b
 18587  01121E  0EFD               	movlw	high STR_151
 18588  011220  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18589  011222  EC51  F0D2         	call	_strcmp	;wreg free
 18590  011226  0101               	movlb	1	; () banked
 18591  011228  5117               	movf	?_strcmp& (0+255),w,b
 18592  01122A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18593  01122C  A4D8               	btfss	status,2,c
 18594  01122E  D0CC               	goto	l1573
 18595                           
 18596                           ; BSR set to: 1
 18597                           ;ring_buffer_LUT.c: 664: writeDoubleToEEPROM(0.0, max_Irms_address);
 18598  011230  0E00               	movlw	0
 18599  011232  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18600  011234  0E00               	movlw	0
 18601  011236  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18602  011238  0E00               	movlw	0
 18603  01123A  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18604  01123C  0E00               	movlw	0
 18605  01123E  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18606  011240  0E5D               	movlw	low _max_Irms_address
 18607  011242  6EF6               	movwf	tblptrl,c
 18608  011244                     	if	1	;There is more than 1 active tblptr byte
 18609  011244  0ECF               	movlw	high _max_Irms_address
 18610  011246  6EF7               	movwf	tblptrh,c
 18611  011248                     	endif
 18612  011248                     	if	1	;There are 3 active tblptr bytes
 18613  011248  0E00               	movlw	low (_max_Irms_address shr (0+16))
 18614  01124A  6EF8               	movwf	tblptru,c
 18615  01124C                     	endif
 18616  01124C  0009               	tblrd		*+
 18617  01124E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18618  011252  000A               	tblrd		*-
 18619  011254  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18620  011258  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18621                           
 18622                           ;ring_buffer_LUT.c: 665: writeDoubleToEEPROM(0.0, max_Power_address);
 18623  01125C  0E00               	movlw	0
 18624  01125E  0101               	movlb	1	; () banked
 18625  011260  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18626  011262  0E00               	movlw	0
 18627  011264  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18628  011266  0E00               	movlw	0
 18629  011268  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18630  01126A  0E00               	movlw	0
 18631  01126C  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18632  01126E  0E5B               	movlw	low _max_Power_address
 18633  011270  6EF6               	movwf	tblptrl,c
 18634  011272                     	if	1	;There is more than 1 active tblptr byte
 18635  011272  0ECF               	movlw	high _max_Power_address
 18636  011274  6EF7               	movwf	tblptrh,c
 18637  011276                     	endif
 18638  011276                     	if	1	;There are 3 active tblptr bytes
 18639  011276  0E00               	movlw	low (_max_Power_address shr (0+16))
 18640  011278  6EF8               	movwf	tblptru,c
 18641  01127A                     	endif
 18642  01127A  0009               	tblrd		*+
 18643  01127C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18644  011280  000A               	tblrd		*-
 18645  011282  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18646  011286  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18647                           
 18648                           ;ring_buffer_LUT.c: 666: writeDoubleToEEPROM(0.0, max_POS3P3_ADC_Result_address);
 18649  01128A  0E00               	movlw	0
 18650  01128C  0101               	movlb	1	; () banked
 18651  01128E  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18652  011290  0E00               	movlw	0
 18653  011292  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18654  011294  0E00               	movlw	0
 18655  011296  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18656  011298  0E00               	movlw	0
 18657  01129A  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18658  01129C  0E59               	movlw	low _max_POS3P3_ADC_Result_address
 18659  01129E  6EF6               	movwf	tblptrl,c
 18660  0112A0                     	if	1	;There is more than 1 active tblptr byte
 18661  0112A0  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 18662  0112A2  6EF7               	movwf	tblptrh,c
 18663  0112A4                     	endif
 18664  0112A4                     	if	1	;There are 3 active tblptr bytes
 18665  0112A4  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 18666  0112A6  6EF8               	movwf	tblptru,c
 18667  0112A8                     	endif
 18668  0112A8  0009               	tblrd		*+
 18669  0112AA  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18670  0112AE  000A               	tblrd		*-
 18671  0112B0  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18672  0112B4  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18673                           
 18674                           ;ring_buffer_LUT.c: 667: writeDoubleToEEPROM(0.0, max_POS12_ADC_Result_address);
 18675  0112B8  0E00               	movlw	0
 18676  0112BA  0101               	movlb	1	; () banked
 18677  0112BC  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18678  0112BE  0E00               	movlw	0
 18679  0112C0  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18680  0112C2  0E00               	movlw	0
 18681  0112C4  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18682  0112C6  0E00               	movlw	0
 18683  0112C8  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18684  0112CA  0E57               	movlw	low _max_POS12_ADC_Result_address
 18685  0112CC  6EF6               	movwf	tblptrl,c
 18686  0112CE                     	if	1	;There is more than 1 active tblptr byte
 18687  0112CE  0ECF               	movlw	high _max_POS12_ADC_Result_address
 18688  0112D0  6EF7               	movwf	tblptrh,c
 18689  0112D2                     	endif
 18690  0112D2                     	if	1	;There are 3 active tblptr bytes
 18691  0112D2  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 18692  0112D4  6EF8               	movwf	tblptru,c
 18693  0112D6                     	endif
 18694  0112D6  0009               	tblrd		*+
 18695  0112D8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18696  0112DC  000A               	tblrd		*-
 18697  0112DE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18698  0112E2  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18699                           
 18700                           ;ring_buffer_LUT.c: 668: writeDoubleToEEPROM(0.0, max_Temp_ADC_Result_address);
 18701  0112E6  0E00               	movlw	0
 18702  0112E8  0101               	movlb	1	; () banked
 18703  0112EA  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18704  0112EC  0E00               	movlw	0
 18705  0112EE  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18706  0112F0  0E00               	movlw	0
 18707  0112F2  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18708  0112F4  0E00               	movlw	0
 18709  0112F6  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18710  0112F8  0E55               	movlw	low _max_Temp_ADC_Result_address
 18711  0112FA  6EF6               	movwf	tblptrl,c
 18712  0112FC                     	if	1	;There is more than 1 active tblptr byte
 18713  0112FC  0ECF               	movlw	high _max_Temp_ADC_Result_address
 18714  0112FE  6EF7               	movwf	tblptrh,c
 18715  011300                     	endif
 18716  011300                     	if	1	;There are 3 active tblptr bytes
 18717  011300  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 18718  011302  6EF8               	movwf	tblptru,c
 18719  011304                     	endif
 18720  011304  0009               	tblrd		*+
 18721  011306  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18722  01130A  000A               	tblrd		*-
 18723  01130C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18724  011310  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18725                           
 18726                           ;ring_buffer_LUT.c: 669: writeDoubleToEEPROM(0.0, max_FVR_ADC_Result_address);
 18727  011314  0E00               	movlw	0
 18728  011316  0101               	movlb	1	; () banked
 18729  011318  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18730  01131A  0E00               	movlw	0
 18731  01131C  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18732  01131E  0E00               	movlw	0
 18733  011320  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18734  011322  0E00               	movlw	0
 18735  011324  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18736  011326  0E53               	movlw	low _max_FVR_ADC_Result_address
 18737  011328  6EF6               	movwf	tblptrl,c
 18738  01132A                     	if	1	;There is more than 1 active tblptr byte
 18739  01132A  0ECF               	movlw	high _max_FVR_ADC_Result_address
 18740  01132C  6EF7               	movwf	tblptrh,c
 18741  01132E                     	endif
 18742  01132E                     	if	1	;There are 3 active tblptr bytes
 18743  01132E  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 18744  011330  6EF8               	movwf	tblptru,c
 18745  011332                     	endif
 18746  011332  0009               	tblrd		*+
 18747  011334  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18748  011338  000A               	tblrd		*-
 18749  01133A  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18750  01133E  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18751                           
 18752                           ;ring_buffer_LUT.c: 672: max_Irms = 0.0;
 18753  011342  0E00               	movlw	0
 18754  011344  0102               	movlb	2	; () banked
 18755  011346  6F24               	movwf	_max_Irms& (0+255),b	;volatile
 18756  011348  0E00               	movlw	0
 18757  01134A  6F25               	movwf	(_max_Irms+1)& (0+255),b	;volatile
 18758  01134C  0E00               	movlw	0
 18759  01134E  6F26               	movwf	(_max_Irms+2)& (0+255),b	;volatile
 18760  011350  0E00               	movlw	0
 18761  011352  6F27               	movwf	(_max_Irms+3)& (0+255),b	;volatile
 18762                           
 18763                           ; BSR set to: 2
 18764                           ;ring_buffer_LUT.c: 673: max_Power = 0.0;
 18765  011354  0E00               	movlw	0
 18766  011356  6F20               	movwf	_max_Power& (0+255),b	;volatile
 18767  011358  0E00               	movlw	0
 18768  01135A  6F21               	movwf	(_max_Power+1)& (0+255),b	;volatile
 18769  01135C  0E00               	movlw	0
 18770  01135E  6F22               	movwf	(_max_Power+2)& (0+255),b	;volatile
 18771  011360  0E00               	movlw	0
 18772  011362  6F23               	movwf	(_max_Power+3)& (0+255),b	;volatile
 18773                           
 18774                           ; BSR set to: 2
 18775                           ;ring_buffer_LUT.c: 674: max_POS3P3_ADC_Result = 0.0;
 18776  011364  0E00               	movlw	0
 18777  011366  6F1C               	movwf	_max_POS3P3_ADC_Result& (0+255),b	;volatile
 18778  011368  0E00               	movlw	0
 18779  01136A  6F1D               	movwf	(_max_POS3P3_ADC_Result+1)& (0+255),b	;volatile
 18780  01136C  0E00               	movlw	0
 18781  01136E  6F1E               	movwf	(_max_POS3P3_ADC_Result+2)& (0+255),b	;volatile
 18782  011370  0E00               	movlw	0
 18783  011372  6F1F               	movwf	(_max_POS3P3_ADC_Result+3)& (0+255),b	;volatile
 18784                           
 18785                           ; BSR set to: 2
 18786                           ;ring_buffer_LUT.c: 675: max_POS12_ADC_Result = 0.0;
 18787  011374  0E00               	movlw	0
 18788  011376  6F18               	movwf	_max_POS12_ADC_Result& (0+255),b	;volatile
 18789  011378  0E00               	movlw	0
 18790  01137A  6F19               	movwf	(_max_POS12_ADC_Result+1)& (0+255),b	;volatile
 18791  01137C  0E00               	movlw	0
 18792  01137E  6F1A               	movwf	(_max_POS12_ADC_Result+2)& (0+255),b	;volatile
 18793  011380  0E00               	movlw	0
 18794  011382  6F1B               	movwf	(_max_POS12_ADC_Result+3)& (0+255),b	;volatile
 18795                           
 18796                           ; BSR set to: 2
 18797                           ;ring_buffer_LUT.c: 676: max_Temp_ADC_Result = 0.0;
 18798  011384  0E00               	movlw	0
 18799  011386  6F14               	movwf	_max_Temp_ADC_Result& (0+255),b	;volatile
 18800  011388  0E00               	movlw	0
 18801  01138A  6F15               	movwf	(_max_Temp_ADC_Result+1)& (0+255),b	;volatile
 18802  01138C  0E00               	movlw	0
 18803  01138E  6F16               	movwf	(_max_Temp_ADC_Result+2)& (0+255),b	;volatile
 18804  011390  0E00               	movlw	0
 18805  011392  6F17               	movwf	(_max_Temp_ADC_Result+3)& (0+255),b	;volatile
 18806                           
 18807                           ; BSR set to: 2
 18808                           ;ring_buffer_LUT.c: 677: max_FVR_ADC_Result = 0.0;
 18809  011394  0E00               	movlw	0
 18810  011396  6F10               	movwf	_max_FVR_ADC_Result& (0+255),b	;volatile
 18811  011398  0E00               	movlw	0
 18812  01139A  6F11               	movwf	(_max_FVR_ADC_Result+1)& (0+255),b	;volatile
 18813  01139C  0E00               	movlw	0
 18814  01139E  6F12               	movwf	(_max_FVR_ADC_Result+2)& (0+255),b	;volatile
 18815  0113A0  0E00               	movlw	0
 18816  0113A2  6F13               	movwf	(_max_FVR_ADC_Result+3)& (0+255),b	;volatile
 18817                           
 18818                           ; BSR set to: 2
 18819                           ;ring_buffer_LUT.c: 679: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18820  0113A4  0E00               	movlw	0
 18821  0113A6  0101               	movlb	1	; () banked
 18822  0113A8  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18823  0113AA  0E00               	movlw	0
 18824  0113AC  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18825  0113AE  0E02               	movlw	2
 18826  0113B0  EC6C  F0AA         	call	_terminal_textAttributes
 18827                           
 18828                           ;ring_buffer_LUT.c: 680: printf("Maximum recorded values erased from SRAM and EEPROM\n\r
      +                          ");
 18829  0113B4  0E2F               	movlw	low STR_152
 18830  0113B6  0101               	movlb	1	; () banked
 18831  0113B8  6FAC               	movwf	printf@f& (0+255),b
 18832  0113BA  0EF4               	movlw	high STR_152
 18833  0113BC  6FAD               	movwf	(printf@f+1)& (0+255),b
 18834  0113BE  EC22  F0D5         	call	_printf	;wreg free
 18835                           
 18836                           ;ring_buffer_LUT.c: 681: terminal_textAttributesReset();
 18837  0113C2  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18838                           
 18839                           ;ring_buffer_LUT.c: 683: }
 18840  0113C6  0012               	return	
 18841  0113C8                     l1573:
 18842                           
 18843                           ;ring_buffer_LUT.c: 687: else if((0 == strcmp(line, "Help Device Control Commands"))) {
 18844  0113C8  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18845  0113CC  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18846  0113D0  0EE4               	movlw	low STR_153
 18847  0113D2  0101               	movlb	1	; () banked
 18848  0113D4  6F19               	movwf	strcmp@s2& (0+255),b
 18849  0113D6  0EFA               	movlw	high STR_153
 18850  0113D8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18851  0113DA  EC51  F0D2         	call	_strcmp	;wreg free
 18852  0113DE  0101               	movlb	1	; () banked
 18853  0113E0  5117               	movf	?_strcmp& (0+255),w,b
 18854  0113E2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18855  0113E4  A4D8               	btfss	status,2,c
 18856  0113E6  D017               	goto	l1575
 18857                           
 18858                           ; BSR set to: 1
 18859                           ;ring_buffer_LUT.c: 689: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18860  0113E8  0E00               	movlw	0
 18861  0113EA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18862  0113EC  0E00               	movlw	0
 18863  0113EE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18864  0113F0  0E03               	movlw	3
 18865  0113F2  EC6C  F0AA         	call	_terminal_textAttributes
 18866                           
 18867                           ;ring_buffer_LUT.c: 690: printf("List of supported Device Control Commands:\n\r"
 18868                           ;ring_buffer_LUT.c: 692: "   Reset: Clears the terminal and resets the microcontroller\n
      +                          \r"
 18869                           ;ring_buffer_LUT.c: 693: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 18870                           ;ring_buffer_LUT.c: 694: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 18871                           ;ring_buffer_LUT.c: 695: "   *IDN?: Returns device identification string\n\r"
 18872                           ;ring_buffer_LUT.c: 696: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 18873  0113F6  0EBF               	movlw	low STR_154
 18874  0113F8  0101               	movlb	1	; () banked
 18875  0113FA  6FAC               	movwf	printf@f& (0+255),b
 18876  0113FC  0EDE               	movlw	high STR_154
 18877  0113FE  6FAD               	movwf	(printf@f+1)& (0+255),b
 18878  011400  EC22  F0D5         	call	_printf	;wreg free
 18879                           
 18880                           ;ring_buffer_LUT.c: 708: terminal_textAttributesReset();
 18881  011404  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18882                           
 18883                           ;ring_buffer_LUT.c: 710: if (error_handler.USB_UART_COMM_error_flag) {
 18884  011408  0102               	movlb	2	; () banked
 18885  01140A  5108               	movf	(_error_handler+8)& (0+255),w,b
 18886  01140C  B4D8               	btfsc	status,2,c
 18887  01140E  0012               	return	
 18888                           
 18889                           ; BSR set to: 2
 18890                           ;ring_buffer_LUT.c: 711: error_handler.USB_UART_COMM_error_flag = 0;
 18891  011410  0E00               	movlw	0
 18892  011412  6F08               	movwf	(_error_handler+8)& (0+255),b
 18893                           
 18894                           ; BSR set to: 2
 18895                           ;ring_buffer_LUT.c: 712: }
 18896                           ;ring_buffer_LUT.c: 714: }
 18897  011414  0012               	return	
 18898  011416                     l1575:
 18899                           
 18900                           ;ring_buffer_LUT.c: 717: else if((0 == strcmp(line, "Help Device Measurement Commands"))
      +                          ) {
 18901                           
 18902                           ; BSR set to: 2
 18903  011416  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18904  01141A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18905  01141E  0E0A               	movlw	low STR_155
 18906  011420  0101               	movlb	1	; () banked
 18907  011422  6F19               	movwf	strcmp@s2& (0+255),b
 18908  011424  0EFA               	movlw	high STR_155
 18909  011426  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18910  011428  EC51  F0D2         	call	_strcmp	;wreg free
 18911  01142C  0101               	movlb	1	; () banked
 18912  01142E  5117               	movf	?_strcmp& (0+255),w,b
 18913  011430  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18914  011432  A4D8               	btfss	status,2,c
 18915  011434  D017               	goto	l1578
 18916                           
 18917                           ; BSR set to: 1
 18918                           ;ring_buffer_LUT.c: 719: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18919  011436  0E00               	movlw	0
 18920  011438  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18921  01143A  0E00               	movlw	0
 18922  01143C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18923  01143E  0E03               	movlw	3
 18924  011440  EC6C  F0AA         	call	_terminal_textAttributes
 18925                           
 18926                           ;ring_buffer_LUT.c: 720: printf("List of supported Device Measurement Commands:\n\r"
 18927                           ;ring_buffer_LUT.c: 722: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
 18928                           ;ring_buffer_LUT.c: 723: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
 18929                           ;ring_buffer_LUT.c: 724: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
 18930                           ;ring_buffer_LUT.c: 725: "   Measure FVR?: Returns the internal fixed voltage reference 
      +                          buffer 1 output in volts\n\r"
 18931                           ;ring_buffer_LUT.c: 726: "   Measure AVSS?: Returns the measured value of Analog VSS in 
      +                          volts\n\r"
 18932  011444  0E79               	movlw	low STR_156
 18933  011446  0101               	movlb	1	; () banked
 18934  011448  6FAC               	movwf	printf@f& (0+255),b
 18935  01144A  0EE5               	movlw	high STR_156
 18936  01144C  6FAD               	movwf	(printf@f+1)& (0+255),b
 18937  01144E  EC22  F0D5         	call	_printf	;wreg free
 18938                           
 18939                           ;ring_buffer_LUT.c: 733: terminal_textAttributesReset();
 18940  011452  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18941                           
 18942                           ;ring_buffer_LUT.c: 735: if (error_handler.USB_UART_COMM_error_flag) {
 18943  011456  0102               	movlb	2	; () banked
 18944  011458  5108               	movf	(_error_handler+8)& (0+255),w,b
 18945  01145A  B4D8               	btfsc	status,2,c
 18946  01145C  0012               	return	
 18947                           
 18948                           ; BSR set to: 2
 18949                           ;ring_buffer_LUT.c: 736: error_handler.USB_UART_COMM_error_flag = 0;
 18950  01145E  0E00               	movlw	0
 18951  011460  6F08               	movwf	(_error_handler+8)& (0+255),b
 18952                           
 18953                           ; BSR set to: 2
 18954                           ;ring_buffer_LUT.c: 737: }
 18955                           ;ring_buffer_LUT.c: 739: }
 18956  011462  0012               	return	
 18957  011464                     l1578:
 18958                           
 18959                           ;ring_buffer_LUT.c: 742: else if((0 == strcmp(line, "Help Primary Measurement Commands")
      +                          )) {
 18960                           
 18961                           ; BSR set to: 2
 18962  011464  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18963  011468  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18964  01146C  0EE8               	movlw	low STR_157
 18965  01146E  0101               	movlb	1	; () banked
 18966  011470  6F19               	movwf	strcmp@s2& (0+255),b
 18967  011472  0EF9               	movlw	high STR_157
 18968  011474  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18969  011476  EC51  F0D2         	call	_strcmp	;wreg free
 18970  01147A  0101               	movlb	1	; () banked
 18971  01147C  5117               	movf	?_strcmp& (0+255),w,b
 18972  01147E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18973  011480  A4D8               	btfss	status,2,c
 18974  011482  D017               	goto	l1581
 18975                           
 18976                           ; BSR set to: 1
 18977                           ;ring_buffer_LUT.c: 744: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18978  011484  0E00               	movlw	0
 18979  011486  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18980  011488  0E00               	movlw	0
 18981  01148A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18982  01148C  0E03               	movlw	3
 18983  01148E  EC6C  F0AA         	call	_terminal_textAttributes
 18984                           
 18985                           ;ring_buffer_LUT.c: 745: printf("List of supported Primary Measurement Commands:\n\r"
 18986                           ;ring_buffer_LUT.c: 747: "   Measure Detected Current?: Returns measured output current 
      +                          in amps as seen by ADC\n\r"
 18987                           ;ring_buffer_LUT.c: 748: "   Measure RMS Current?: Returns the calculated RMS output cur
      +                          rent from measurements and TRIAC firing angle\n\r"
 18988                           ;ring_buffer_LUT.c: 749: "   Measure RMS Voltage?: Returns the calculated RMS output vol
      +                          tage from TRIAC firing angle\n\r"
 18989                           ;ring_buffer_LUT.c: 750: "   Measure Power?: Returns the calculated output power in Watt
      +                          s\n\r"
 18990  011492  0E8D               	movlw	low STR_158
 18991  011494  0101               	movlb	1	; () banked
 18992  011496  6FAC               	movwf	printf@f& (0+255),b
 18993  011498  0EE2               	movlw	high STR_158
 18994  01149A  6FAD               	movwf	(printf@f+1)& (0+255),b
 18995  01149C  EC22  F0D5         	call	_printf	;wreg free
 18996                           
 18997                           ;ring_buffer_LUT.c: 758: terminal_textAttributesReset();
 18998  0114A0  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18999                           
 19000                           ;ring_buffer_LUT.c: 760: if (error_handler.USB_UART_COMM_error_flag) {
 19001  0114A4  0102               	movlb	2	; () banked
 19002  0114A6  5108               	movf	(_error_handler+8)& (0+255),w,b
 19003  0114A8  B4D8               	btfsc	status,2,c
 19004  0114AA  0012               	return	
 19005                           
 19006                           ; BSR set to: 2
 19007                           ;ring_buffer_LUT.c: 761: error_handler.USB_UART_COMM_error_flag = 0;
 19008  0114AC  0E00               	movlw	0
 19009  0114AE  6F08               	movwf	(_error_handler+8)& (0+255),b
 19010                           
 19011                           ; BSR set to: 2
 19012                           ;ring_buffer_LUT.c: 762: }
 19013                           ;ring_buffer_LUT.c: 764: }
 19014  0114B0  0012               	return	
 19015  0114B2                     l1581:
 19016                           
 19017                           ;ring_buffer_LUT.c: 767: else if((0 == strcmp(line, "Help Output Control Commands"))) {
 19018                           
 19019                           ; BSR set to: 2
 19020  0114B2  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 19021  0114B6  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19022  0114BA  0E01               	movlw	low STR_159
 19023  0114BC  0101               	movlb	1	; () banked
 19024  0114BE  6F19               	movwf	strcmp@s2& (0+255),b
 19025  0114C0  0EFB               	movlw	high STR_159
 19026  0114C2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 19027  0114C4  EC51  F0D2         	call	_strcmp	;wreg free
 19028  0114C8  0101               	movlb	1	; () banked
 19029  0114CA  5117               	movf	?_strcmp& (0+255),w,b
 19030  0114CC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 19031  0114CE  A4D8               	btfss	status,2,c
 19032  0114D0  D017               	goto	l1584
 19033                           
 19034                           ; BSR set to: 1
 19035                           ;ring_buffer_LUT.c: 769: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19036  0114D2  0E00               	movlw	0
 19037  0114D4  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19038  0114D6  0E00               	movlw	0
 19039  0114D8  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19040  0114DA  0E03               	movlw	3
 19041  0114DC  EC6C  F0AA         	call	_terminal_textAttributes
 19042                           
 19043                           ;ring_buffer_LUT.c: 770: printf("List of supported Output Control Commands:\n\r"
 19044                           ;ring_buffer_LUT.c: 772: "   Enable Dimming: Enable TRIAC output dimming\n\r"
 19045                           ;ring_buffer_LUT.c: 773: "   Disable Dimming: Disable TRIAC output dimming\n\r"
 19046                           ;ring_buffer_LUT.c: 774: "   Enable Load: Enables the output TRIAC with dimming disabled
      +                          \n\r"
 19047                           ;ring_buffer_LUT.c: 775: "   Disable Load: Disables the output TRIAC completely\n\r"
 19048                           ;ring_buffer_LUT.c: 776: "   Load Enabled?: Returns if the output load is enabled or dis
      +                          abled\n\r"
 19049  0114E0  0E49               	movlw	low STR_160
 19050  0114E2  0101               	movlb	1	; () banked
 19051  0114E4  6FAC               	movwf	printf@f& (0+255),b
 19052  0114E6  0EE8               	movlw	high STR_160
 19053  0114E8  6FAD               	movwf	(printf@f+1)& (0+255),b
 19054  0114EA  EC22  F0D5         	call	_printf	;wreg free
 19055                           
 19056                           ;ring_buffer_LUT.c: 781: terminal_textAttributesReset();
 19057  0114EE  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19058                           
 19059                           ;ring_buffer_LUT.c: 783: if (error_handler.USB_UART_COMM_error_flag) {
 19060  0114F2  0102               	movlb	2	; () banked
 19061  0114F4  5108               	movf	(_error_handler+8)& (0+255),w,b
 19062  0114F6  B4D8               	btfsc	status,2,c
 19063  0114F8  0012               	return	
 19064                           
 19065                           ; BSR set to: 2
 19066                           ;ring_buffer_LUT.c: 784: error_handler.USB_UART_COMM_error_flag = 0;
 19067  0114FA  0E00               	movlw	0
 19068  0114FC  6F08               	movwf	(_error_handler+8)& (0+255),b
 19069                           
 19070                           ; BSR set to: 2
 19071                           ;ring_buffer_LUT.c: 785: }
 19072                           ;ring_buffer_LUT.c: 787: }
 19073  0114FE  0012               	return	
 19074  011500                     l1584:
 19075                           
 19076                           ;ring_buffer_LUT.c: 790: else if((0 == strcmp(line, "Help All"))) {
 19077                           
 19078                           ; BSR set to: 2
 19079  011500  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 19080  011504  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19081  011508  0E92               	movlw	low STR_161
 19082  01150A  0101               	movlb	1	; () banked
 19083  01150C  6F19               	movwf	strcmp@s2& (0+255),b
 19084  01150E  0EFF               	movlw	high STR_161
 19085  011510  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 19086  011512  EC51  F0D2         	call	_strcmp	;wreg free
 19087  011516  0101               	movlb	1	; () banked
 19088  011518  5117               	movf	?_strcmp& (0+255),w,b
 19089  01151A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 19090  01151C  A4D8               	btfss	status,2,c
 19091  01151E  D017               	goto	l1587
 19092                           
 19093                           ; BSR set to: 1
 19094                           ;ring_buffer_LUT.c: 792: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19095  011520  0E00               	movlw	0
 19096  011522  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19097  011524  0E00               	movlw	0
 19098  011526  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19099  011528  0E03               	movlw	3
 19100  01152A  EC6C  F0AA         	call	_terminal_textAttributes
 19101                           
 19102                           ;ring_buffer_LUT.c: 793: printf("List of all supported commands:\n\r"
 19103                           ;ring_buffer_LUT.c: 795: "Device Control Commands: Commands to view and control low leve
      +                          l system functionality\n\r"
 19104                           ;ring_buffer_LUT.c: 796: "   Reset: Clears the terminal and resets the microcontroller\n
      +                          \r"
 19105                           ;ring_buffer_LUT.c: 797: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 19106                           ;ring_buffer_LUT.c: 798: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 19107                           ;ring_buffer_LUT.c: 799: "   *IDN?: Returns device identification string\n\r"
 19108  01152E  0EB1               	movlw	low STR_162
 19109  011530  0101               	movlb	1	; () banked
 19110  011532  6FAC               	movwf	printf@f& (0+255),b
 19111  011534  0ED2               	movlw	high STR_162
 19112  011536  6FAD               	movwf	(printf@f+1)& (0+255),b
 19113  011538  EC22  F0D5         	call	_printf	;wreg free
 19114                           
 19115                           ;ring_buffer_LUT.c: 844: terminal_textAttributesReset();
 19116  01153C  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19117                           
 19118                           ;ring_buffer_LUT.c: 846: if (error_handler.USB_UART_COMM_error_flag) {
 19119  011540  0102               	movlb	2	; () banked
 19120  011542  5108               	movf	(_error_handler+8)& (0+255),w,b
 19121  011544  B4D8               	btfsc	status,2,c
 19122  011546  0012               	return	
 19123                           
 19124                           ; BSR set to: 2
 19125                           ;ring_buffer_LUT.c: 847: error_handler.USB_UART_COMM_error_flag = 0;
 19126  011548  0E00               	movlw	0
 19127  01154A  6F08               	movwf	(_error_handler+8)& (0+255),b
 19128                           
 19129                           ; BSR set to: 2
 19130                           ;ring_buffer_LUT.c: 848: }
 19131                           ;ring_buffer_LUT.c: 850: }
 19132  01154C  0012               	return	
 19133  01154E                     l1587:
 19134                           
 19135                           ;ring_buffer_LUT.c: 854: else if((0 == strcmp(line, "Help"))) {
 19136                           
 19137                           ; BSR set to: 2
 19138  01154E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 19139  011552  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19140  011556  0EAE               	movlw	low STR_163
 19141  011558  0101               	movlb	1	; () banked
 19142  01155A  6F19               	movwf	strcmp@s2& (0+255),b
 19143  01155C  0EFF               	movlw	high STR_163
 19144  01155E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 19145  011560  EC51  F0D2         	call	_strcmp	;wreg free
 19146  011564  0101               	movlb	1	; () banked
 19147  011566  5117               	movf	?_strcmp& (0+255),w,b
 19148  011568  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 19149  01156A  A4D8               	btfss	status,2,c
 19150  01156C  D056               	goto	l1590
 19151                           
 19152                           ; BSR set to: 1
 19153                           ;ring_buffer_LUT.c: 856: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19154  01156E  0E00               	movlw	0
 19155  011570  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19156  011572  0E00               	movlw	0
 19157  011574  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19158  011576  0E03               	movlw	3
 19159  011578  EC6C  F0AA         	call	_terminal_textAttributes
 19160                           
 19161                           ;ring_buffer_LUT.c: 857: printf("Please specify what type of commands you'd like help wi
      +                          th:\n\r"
 19162                           ;ring_buffer_LUT.c: 858: "Try 'Help <command set>'\n\r\n\r"
 19163                           ;ring_buffer_LUT.c: 860: "Supported Command Sets:\n\r"
 19164                           ;ring_buffer_LUT.c: 861: "   Device Control Commands: Commands to view and control low l
      +                          evel system functionality\n\r"
 19165                           ;ring_buffer_LUT.c: 862: "   Device Measurement Commands: View low level system measurem
      +                          ents\n\r"
 19166                           ;ring_buffer_LUT.c: 863: "   Primary Measurement Commands: View high level output measur
      +                          ements and calculations\n\r"
 19167  01157C  0E35               	movlw	low STR_164
 19168  01157E  0101               	movlb	1	; () banked
 19169  011580  6FAC               	movwf	printf@f& (0+255),b
 19170  011582  0EEA               	movlw	high STR_164
 19171  011584  6FAD               	movwf	(printf@f+1)& (0+255),b
 19172  011586  EC22  F0D5         	call	_printf	;wreg free
 19173                           
 19174                           ;ring_buffer_LUT.c: 870: terminal_printNewline();
 19175  01158A  EC0D  F0D9         	call	_terminal_printNewline	;wreg free
 19176                           
 19177                           ;ring_buffer_LUT.c: 871: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 19178  01158E  0EF8               	movlw	low STR_165
 19179  011590  0101               	movlb	1	; () banked
 19180  011592  6FAC               	movwf	printf@f& (0+255),b
 19181  011594  0EF3               	movlw	high STR_165
 19182  011596  6FAD               	movwf	(printf@f+1)& (0+255),b
 19183  011598  EC22  F0D5         	call	_printf	;wreg free
 19184                           
 19185                           ;ring_buffer_LUT.c: 873: terminal_textAttributes(GREEN, BLACK, NORMAL);
 19186  01159C  0E00               	movlw	0
 19187  01159E  0101               	movlb	1	; () banked
 19188  0115A0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19189  0115A2  0E00               	movlw	0
 19190  0115A4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19191  0115A6  0E02               	movlw	2
 19192  0115A8  EC6C  F0AA         	call	_terminal_textAttributes
 19193                           
 19194                           ;ring_buffer_LUT.c: 874: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 19195  0115AC  0E5C               	movlw	low STR_166
 19196  0115AE  0101               	movlb	1	; () banked
 19197  0115B0  6FAC               	movwf	printf@f& (0+255),b
 19198  0115B2  0EF2               	movlw	high STR_166
 19199  0115B4  6FAD               	movwf	(printf@f+1)& (0+255),b
 19200  0115B6  EC22  F0D5         	call	_printf	;wreg free
 19201                           
 19202                           ;ring_buffer_LUT.c: 875: terminal_textAttributes(CYAN, BLACK, NORMAL);
 19203  0115BA  0E00               	movlw	0
 19204  0115BC  0101               	movlb	1	; () banked
 19205  0115BE  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19206  0115C0  0E00               	movlw	0
 19207  0115C2  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19208  0115C4  0E06               	movlw	6
 19209  0115C6  EC6C  F0AA         	call	_terminal_textAttributes
 19210                           
 19211                           ;ring_buffer_LUT.c: 876: printf("Measurement responses appear in cyan\n\r");
 19212  0115CA  0E5C               	movlw	low STR_167
 19213  0115CC  0101               	movlb	1	; () banked
 19214  0115CE  6FAC               	movwf	printf@f& (0+255),b
 19215  0115D0  0EF8               	movlw	high STR_167
 19216  0115D2  6FAD               	movwf	(printf@f+1)& (0+255),b
 19217  0115D4  EC22  F0D5         	call	_printf	;wreg free
 19218                           
 19219                           ;ring_buffer_LUT.c: 877: terminal_textAttributes(RED, BLACK, NORMAL);
 19220  0115D8  0E00               	movlw	0
 19221  0115DA  0101               	movlb	1	; () banked
 19222  0115DC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19223  0115DE  0E00               	movlw	0
 19224  0115E0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19225  0115E2  0E01               	movlw	1
 19226  0115E4  EC6C  F0AA         	call	_terminal_textAttributes
 19227                           
 19228                           ;ring_buffer_LUT.c: 878: printf("Errors and negative responses appear in red\n\r");
 19229  0115E8  0EFF               	movlw	low STR_168
 19230  0115EA  0101               	movlb	1	; () banked
 19231  0115EC  6FAC               	movwf	printf@f& (0+255),b
 19232  0115EE  0EF6               	movlw	high STR_168
 19233  0115F0  6FAD               	movwf	(printf@f+1)& (0+255),b
 19234  0115F2  EC22  F0D5         	call	_printf	;wreg free
 19235                           
 19236                           ;ring_buffer_LUT.c: 879: terminal_textAttributesReset();
 19237  0115F6  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19238                           
 19239                           ;ring_buffer_LUT.c: 880: printf("User input appears in white\n\r");
 19240  0115FA  0EA9               	movlw	low STR_169
 19241  0115FC  0101               	movlb	1	; () banked
 19242  0115FE  6FAC               	movwf	printf@f& (0+255),b
 19243  011600  0EFA               	movlw	high STR_169
 19244  011602  6FAD               	movwf	(printf@f+1)& (0+255),b
 19245  011604  EC22  F0D5         	call	_printf	;wreg free
 19246                           
 19247                           ;ring_buffer_LUT.c: 883: terminal_printNewline();
 19248  011608  EC0D  F0D9         	call	_terminal_printNewline	;wreg free
 19249                           
 19250                           ;ring_buffer_LUT.c: 885: if (error_handler.USB_UART_COMM_error_flag) {
 19251  01160C  0102               	movlb	2	; () banked
 19252  01160E  5108               	movf	(_error_handler+8)& (0+255),w,b
 19253  011610  B4D8               	btfsc	status,2,c
 19254  011612  0012               	return	
 19255                           
 19256                           ; BSR set to: 2
 19257                           ;ring_buffer_LUT.c: 886: error_handler.USB_UART_COMM_error_flag = 0;
 19258  011614  0E00               	movlw	0
 19259  011616  6F08               	movwf	(_error_handler+8)& (0+255),b
 19260                           
 19261                           ; BSR set to: 2
 19262                           ;ring_buffer_LUT.c: 887: }
 19263                           ;ring_buffer_LUT.c: 889: }
 19264  011618  0012               	return	
 19265  01161A                     l1590:
 19266                           
 19267                           ;ring_buffer_LUT.c: 892: else if ((0 == strcmp(line, "Easter Egg"))) {
 19268                           
 19269                           ; BSR set to: 2
 19270  01161A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 19271  01161E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19272  011622  0E5F               	movlw	low STR_170
 19273  011624  0101               	movlb	1	; () banked
 19274  011626  6F19               	movwf	strcmp@s2& (0+255),b
 19275  011628  0EFF               	movlw	high STR_170
 19276  01162A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 19277  01162C  EC51  F0D2         	call	_strcmp	;wreg free
 19278  011630  0101               	movlb	1	; () banked
 19279  011632  5117               	movf	?_strcmp& (0+255),w,b
 19280  011634  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 19281  011636  A4D8               	btfss	status,2,c
 19282  011638  0012               	return	
 19283                           
 19284                           ; BSR set to: 1
 19285                           ;ring_buffer_LUT.c: 894: terminal_printNewline();
 19286  01163A  EC0D  F0D9         	call	_terminal_printNewline	;wreg free
 19287                           
 19288                           ;ring_buffer_LUT.c: 895: terminal_textAttributes(RED, BLACK, NORMAL);
 19289  01163E  0E00               	movlw	0
 19290  011640  0101               	movlb	1	; () banked
 19291  011642  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19292  011644  0E00               	movlw	0
 19293  011646  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19294  011648  0E01               	movlw	1
 19295  01164A  EC6C  F0AA         	call	_terminal_textAttributes
 19296                           
 19297                           ;ring_buffer_LUT.c: 896: printf(
 19298                           ;ring_buffer_LUT.c: 897: "    _   ___   ___                      __  __     _           
      +                                         _   ___  _      \n\r"
 19299                           ;ring_buffer_LUT.c: 898: "   /_\\ / __| | _ \\_____ __ _____ _ _  |  \\/  |___| |_ ___ _
      +                           _   __ _ _ _  __| | |   \\(_)_ __  _ __  ___ _ _ \n\r"
 19300                           ;ring_buffer_LUT.c: 899: "  / _ \\ (__  |  _/ _ \\ V  V / -_) '_| | |\\/| / -_)  _/ -_) 
      +                          '_| / _` | ' \\/ _` | | |) | | '  \\| '  \\/ -_) '_|\n\r"
 19301                           ;ring_buffer_LUT.c: 900: " /_/ \\_\\___| |_| \\___/\\_/\\_/\\___|_|   |_|  |_\\___|\\__\
      +                          \___|_|   \\__,_|_||_\\__,_| |___/|_|_|_|_|_|_|_\\___|_|  \n\r"
 19302  01164E  0E0B               	movlw	low STR_171
 19303  011650  0101               	movlb	1	; () banked
 19304  011652  6FAC               	movwf	printf@f& (0+255),b
 19305  011654  0EEC               	movlw	high STR_171
 19306  011656  6FAD               	movwf	(printf@f+1)& (0+255),b
 19307  011658  EC22  F0D5         	call	_printf	;wreg free
 19308                           
 19309                           ;ring_buffer_LUT.c: 905: terminal_printNewline();
 19310  01165C  EC0D  F0D9         	call	_terminal_printNewline	;wreg free
 19311                           
 19312                           ;ring_buffer_LUT.c: 906: terminal_textAttributes(YELLOW, BLUE, NORMAL);
 19313  011660  0E04               	movlw	4
 19314  011662  0101               	movlb	1	; () banked
 19315  011664  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19316  011666  0E00               	movlw	0
 19317  011668  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19318  01166A  0E03               	movlw	3
 19319  01166C  EC6C  F0AA         	call	_terminal_textAttributes
 19320                           
 19321                           ;ring_buffer_LUT.c: 907: printf("Marquette University EECE\n\r");
 19322  011670  0E1E               	movlw	low STR_172
 19323  011672  0101               	movlb	1	; () banked
 19324  011674  6FAC               	movwf	printf@f& (0+255),b
 19325  011676  0EFB               	movlw	high STR_172
 19326  011678  6FAD               	movwf	(printf@f+1)& (0+255),b
 19327  01167A  EC22  F0D5         	call	_printf	;wreg free
 19328                           
 19329                           ;ring_buffer_LUT.c: 908: terminal_textAttributes(GREEN, BLACK, NORMAL);
 19330  01167E  0E00               	movlw	0
 19331  011680  0101               	movlb	1	; () banked
 19332  011682  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19333  011684  0E00               	movlw	0
 19334  011686  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19335  011688  0E02               	movlw	2
 19336  01168A  EC6C  F0AA         	call	_terminal_textAttributes
 19337                           
 19338                           ;ring_buffer_LUT.c: 909: printf("ELEN 3035 Final Project\n\r");
 19339  01168E  0EB7               	movlw	low (STR_56+21)
 19340  011690  0101               	movlb	1	; () banked
 19341  011692  6FAC               	movwf	printf@f& (0+255),b
 19342  011694  0EF6               	movlw	high (STR_56+21)
 19343  011696  6FAD               	movwf	(printf@f+1)& (0+255),b
 19344  011698  EC22  F0D5         	call	_printf	;wreg free
 19345                           
 19346                           ;ring_buffer_LUT.c: 910: printf("Drew Maatman and Gabe Thalji\n\r");
 19347  01169C  0E8A               	movlw	low STR_174
 19348  01169E  0101               	movlb	1	; () banked
 19349  0116A0  6FAC               	movwf	printf@f& (0+255),b
 19350  0116A2  0EFA               	movlw	high STR_174
 19351  0116A4  6FAD               	movwf	(printf@f+1)& (0+255),b
 19352  0116A6  EC22  F0D5         	call	_printf	;wreg free
 19353                           
 19354                           ;ring_buffer_LUT.c: 911: terminal_textAttributes(YELLOW, BLACK, BOLD);
 19355  0116AA  0E00               	movlw	0
 19356  0116AC  0101               	movlb	1	; () banked
 19357  0116AE  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19358  0116B0  0E01               	movlw	1
 19359  0116B2  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19360  0116B4  0E03               	movlw	3
 19361  0116B6  EC6C  F0AA         	call	_terminal_textAttributes
 19362                           
 19363                           ;ring_buffer_LUT.c: 912: printf("PSOCs SUCK\n\r");
 19364  0116BA  0EAA               	movlw	low STR_175
 19365  0116BC  0101               	movlb	1	; () banked
 19366  0116BE  6FAC               	movwf	printf@f& (0+255),b
 19367  0116C0  0EFE               	movlw	high STR_175
 19368  0116C2  6FAD               	movwf	(printf@f+1)& (0+255),b
 19369  0116C4  EC22  F0D5         	call	_printf	;wreg free
 19370                           
 19371                           ;ring_buffer_LUT.c: 913: terminal_textAttributesReset();
 19372  0116C8  ECF3  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19373                           
 19374                           ;ring_buffer_LUT.c: 914: terminal_printNewline();
 19375  0116CC  EC0D  F0D9         	call	_terminal_printNewline	;wreg free
 19376                           
 19377                           ;ring_buffer_LUT.c: 916: if (error_handler.USB_UART_COMM_error_flag) {
 19378  0116D0  0102               	movlb	2	; () banked
 19379  0116D2  5108               	movf	(_error_handler+8)& (0+255),w,b
 19380  0116D4  B4D8               	btfsc	status,2,c
 19381  0116D6  0012               	return	
 19382                           
 19383                           ; BSR set to: 2
 19384                           ;ring_buffer_LUT.c: 917: error_handler.USB_UART_COMM_error_flag = 0;
 19385  0116D8  0E00               	movlw	0
 19386  0116DA  6F08               	movwf	(_error_handler+8)& (0+255),b
 19387                           
 19388                           ; BSR set to: 2
 19389                           
 19390                           ; BSR set to: 2
 19391                           
 19392                           ; BSR set to: 2
 19393                           
 19394                           ; BSR set to: 2
 19395                           
 19396                           ; BSR set to: 2
 19397                           
 19398                           ; BSR set to: 2
 19399                           
 19400                           ; BSR set to: 2
 19401                           
 19402                           ; BSR set to: 2
 19403                           
 19404                           ; BSR set to: 2
 19405                           
 19406                           ; BSR set to: 2
 19407                           
 19408                           ; BSR set to: 2
 19409                           
 19410                           ; BSR set to: 2
 19411                           
 19412                           ; BSR set to: 2
 19413                           
 19414                           ; BSR set to: 2
 19415                           
 19416                           ; BSR set to: 2
 19417                           
 19418                           ; BSR set to: 2
 19419                           
 19420                           ; BSR set to: 2
 19421                           
 19422                           ; BSR set to: 2
 19423                           
 19424                           ; BSR set to: 2
 19425                           
 19426                           ; BSR set to: 2
 19427                           
 19428                           ; BSR set to: 2
 19429                           
 19430                           ; BSR set to: 2
 19431                           
 19432                           ; BSR set to: 2
 19433                           
 19434                           ; BSR set to: 2
 19435                           
 19436                           ; BSR set to: 2
 19437                           
 19438                           ; BSR set to: 2
 19439                           
 19440                           ; BSR set to: 2
 19441                           
 19442                           ; BSR set to: 2
 19443                           
 19444                           ; BSR set to: 2
 19445                           
 19446                           ; BSR set to: 2
 19447                           
 19448                           ; BSR set to: 2
 19449                           
 19450                           ; BSR set to: 2
 19451                           
 19452                           ; BSR set to: 2
 19453                           
 19454                           ; BSR set to: 2
 19455                           
 19456                           ; BSR set to: 2
 19457                           
 19458                           ; BSR set to: 2
 19459                           
 19460                           ; BSR set to: 2
 19461                           
 19462                           ; BSR set to: 2
 19463                           
 19464                           ; BSR set to: 2
 19465                           
 19466                           ; BSR set to: 2
 19467                           
 19468                           ; BSR set to: 2
 19469                           
 19470                           ; BSR set to: 2
 19471                           
 19472                           ; BSR set to: 2
 19473                           
 19474                           ; BSR set to: 2
 19475                           
 19476                           ; BSR set to: 2
 19477                           
 19478                           ; BSR set to: 2
 19479  0116DC  0012               	return	
 19480  0116DE                     __end_of_ringBufferLUT:
 19481                           	opt stack 0
 19482                           tblptru	equ	0xFF8
 19483                           tblptrh	equ	0xFF7
 19484                           tblptrl	equ	0xFF6
 19485                           tablat	equ	0xFF5
 19486                           intcon	equ	0xFF2
 19487                           postinc0	equ	0xFEE
 19488                           wreg	equ	0xFE8
 19489                           indf1	equ	0xFE7
 19490                           postdec1	equ	0xFE5
 19491                           fsr1h	equ	0xFE2
 19492                           fsr1l	equ	0xFE1
 19493                           indf2	equ	0xFDF
 19494                           postinc2	equ	0xFDE
 19495                           fsr2h	equ	0xFDA
 19496                           fsr2l	equ	0xFD9
 19497                           status	equ	0xFD8
 19498                           
 19499 ;; *************** function _terminal_textAttributesReset *****************
 19500 ;; Defined at:
 19501 ;;		line 223 in file "ring_buffer_interface.c"
 19502 ;; Parameters:    Size  Location     Type
 19503 ;;		None
 19504 ;; Auto vars:     Size  Location     Type
 19505 ;;		None
 19506 ;; Return value:  Size  Location     Type
 19507 ;;                  1    wreg      void 
 19508 ;; Registers used:
 19509 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19510 ;; Tracked objects:
 19511 ;;		On entry : 0/0
 19512 ;;		On exit  : 0/0
 19513 ;;		Unchanged: 0/0
 19514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19519 ;;Total ram usage:        0 bytes
 19520 ;; Hardware stack levels used:    1
 19521 ;; Hardware stack levels required when called:   18
 19522 ;; This function calls:
 19523 ;;		_terminal_textAttributes
 19524 ;; This function is called by:
 19525 ;;		_main
 19526 ;;		_ringBufferLUT
 19527 ;; This function uses a non-reentrant model
 19528 ;;
 19529                           
 19530                           	psect	text5
 19531  01B1E6                     __ptext5:
 19532                           	opt stack 0
 19533  01B1E6                     _terminal_textAttributesReset:
 19534                           	opt stack 12
 19535                           
 19536                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 19537                           
 19538                           ;incstack = 0
 19539  01B1E6  0E00               	movlw	0
 19540  01B1E8  0101               	movlb	1	; () banked
 19541  01B1EA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19542  01B1EC  0E00               	movlw	0
 19543  01B1EE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19544  01B1F0  0E07               	movlw	7
 19545  01B1F2  EC6C  F0AA         	call	_terminal_textAttributes
 19546  01B1F6  0012               	return		;funcret
 19547  01B1F8                     __end_of_terminal_textAttributesReset:
 19548                           	opt stack 0
 19549                           tblptru	equ	0xFF8
 19550                           tblptrh	equ	0xFF7
 19551                           tblptrl	equ	0xFF6
 19552                           tablat	equ	0xFF5
 19553                           intcon	equ	0xFF2
 19554                           postinc0	equ	0xFEE
 19555                           wreg	equ	0xFE8
 19556                           indf1	equ	0xFE7
 19557                           postdec1	equ	0xFE5
 19558                           fsr1h	equ	0xFE2
 19559                           fsr1l	equ	0xFE1
 19560                           indf2	equ	0xFDF
 19561                           postinc2	equ	0xFDE
 19562                           fsr2h	equ	0xFDA
 19563                           fsr2l	equ	0xFD9
 19564                           status	equ	0xFD8
 19565                           
 19566 ;; *************** function _terminal_textAttributes *****************
 19567 ;; Defined at:
 19568 ;;		line 115 in file "ring_buffer_interface.c"
 19569 ;; Parameters:    Size  Location     Type
 19570 ;;  foreground_c    1    wreg     enum E18069
 19571 ;;  background_c    1  189[BANK1 ] enum E18069
 19572 ;;  input_attrib    1  190[BANK1 ] enum E18061
 19573 ;; Auto vars:     Size  Location     Type
 19574 ;;  foreground_c    1    0[BANK2 ] enum E18069
 19575 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 19576 ;; Return value:  Size  Location     Type
 19577 ;;                  1    wreg      void 
 19578 ;; Registers used:
 19579 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19580 ;; Tracked objects:
 19581 ;;		On entry : 0/0
 19582 ;;		On exit  : 0/0
 19583 ;;		Unchanged: 0/0
 19584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19585 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19586 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 19587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19588 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 19589 ;;Total ram usage:       18 bytes
 19590 ;; Hardware stack levels used:    1
 19591 ;; Hardware stack levels required when called:   17
 19592 ;; This function calls:
 19593 ;;		_printf
 19594 ;;		_strcat
 19595 ;;		_strncpy
 19596 ;; This function is called by:
 19597 ;;		_terminal_textAttributesReset
 19598 ;;		_ringBufferLUT
 19599 ;; This function uses a non-reentrant model
 19600 ;;
 19601                           
 19602                           	psect	text6
 19603  0154D8                     __ptext6:
 19604                           	opt stack 0
 19605  0154D8                     _terminal_textAttributes:
 19606                           	opt stack 12
 19607                           
 19608                           ;incstack = 0
 19609                           ;terminal_textAttributes@foreground_color stored from wreg
 19610  0154D8  0102               	movlb	2	; () banked
 19611  0154DA  6F94               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 19612                           
 19613                           ;ring_buffer_interface.c: 119: char output_buff[15];
 19614                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 19615  0154DC  0E95               	movlw	low terminal_textAttributes@output_buff
 19616  0154DE  0101               	movlb	1	; () banked
 19617  0154E0  6F17               	movwf	strncpy@to& (0+255),b
 19618  0154E2  0E02               	movlw	high terminal_textAttributes@output_buff
 19619  0154E4  6F18               	movwf	(strncpy@to+1)& (0+255),b
 19620  0154E6  0EF6               	movlw	low STR_15
 19621  0154E8  6F19               	movwf	strncpy@from& (0+255),b
 19622  0154EA  0EFF               	movlw	high STR_15
 19623  0154EC  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 19624  0154EE  0E00               	movlw	0
 19625  0154F0  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 19626  0154F2  0E0F               	movlw	15
 19627  0154F4  6F1B               	movwf	strncpy@size& (0+255),b
 19628  0154F6  EC7E  F0D0         	call	_strncpy	;wreg free
 19629                           
 19630                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 19631  0154FA  D054               	goto	l1313
 19632  0154FC                     
 19633                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 19634  0154FC  0E95               	movlw	low terminal_textAttributes@output_buff
 19635  0154FE  0101               	movlb	1	; () banked
 19636  015500  6F17               	movwf	strcat@to& (0+255),b
 19637  015502  0E02               	movlw	high terminal_textAttributes@output_buff
 19638  015504  6F18               	movwf	(strcat@to+1)& (0+255),b
 19639  015506  0ECD               	movlw	low (STR_24+1)
 19640  015508  6F19               	movwf	strcat@from& (0+255),b
 19641  01550A  0EFF               	movlw	high (STR_24+1)
 19642  01550C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19643  01550E  EC3F  F0D3         	call	_strcat	;wreg free
 19644                           
 19645                           ;ring_buffer_interface.c: 127: break;
 19646  015512  D05D               	goto	l1315
 19647  015514                     
 19648                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 19649  015514  0E95               	movlw	low terminal_textAttributes@output_buff
 19650  015516  0101               	movlb	1	; () banked
 19651  015518  6F17               	movwf	strcat@to& (0+255),b
 19652  01551A  0E02               	movlw	high terminal_textAttributes@output_buff
 19653  01551C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19654  01551E  0ED0               	movlw	low (STR_25+1)
 19655  015520  6F19               	movwf	strcat@from& (0+255),b
 19656  015522  0EFF               	movlw	high (STR_25+1)
 19657  015524  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19658  015526  EC3F  F0D3         	call	_strcat	;wreg free
 19659                           
 19660                           ;ring_buffer_interface.c: 130: break;
 19661  01552A  D051               	goto	l1315
 19662  01552C                     
 19663                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 19664  01552C  0E95               	movlw	low terminal_textAttributes@output_buff
 19665  01552E  0101               	movlb	1	; () banked
 19666  015530  6F17               	movwf	strcat@to& (0+255),b
 19667  015532  0E02               	movlw	high terminal_textAttributes@output_buff
 19668  015534  6F18               	movwf	(strcat@to+1)& (0+255),b
 19669  015536  0EE2               	movlw	low (STR_28+1)
 19670  015538  6F19               	movwf	strcat@from& (0+255),b
 19671  01553A  0EFF               	movlw	high (STR_28+1)
 19672  01553C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19673  01553E  EC3F  F0D3         	call	_strcat	;wreg free
 19674                           
 19675                           ;ring_buffer_interface.c: 133: break;
 19676  015542  D045               	goto	l1315
 19677  015544                     
 19678                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 19679  015544  0E95               	movlw	low terminal_textAttributes@output_buff
 19680  015546  0101               	movlb	1	; () banked
 19681  015548  6F17               	movwf	strcat@to& (0+255),b
 19682  01554A  0E02               	movlw	high terminal_textAttributes@output_buff
 19683  01554C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19684  01554E  0E90               	movlw	low (STR_3+8)
 19685  015550  6F19               	movwf	strcat@from& (0+255),b
 19686  015552  0EFF               	movlw	high (STR_3+8)
 19687  015554  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19688  015556  EC3F  F0D3         	call	_strcat	;wreg free
 19689                           
 19690                           ;ring_buffer_interface.c: 136: break;
 19691  01555A  D039               	goto	l1315
 19692  01555C                     
 19693                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 19694  01555C  0E95               	movlw	low terminal_textAttributes@output_buff
 19695  01555E  0101               	movlb	1	; () banked
 19696  015560  6F17               	movwf	strcat@to& (0+255),b
 19697  015562  0E02               	movlw	high terminal_textAttributes@output_buff
 19698  015564  6F18               	movwf	(strcat@to+1)& (0+255),b
 19699  015566  0EF1               	movlw	low (STR_31+1)
 19700  015568  6F19               	movwf	strcat@from& (0+255),b
 19701  01556A  0EFF               	movlw	high (STR_31+1)
 19702  01556C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19703  01556E  EC3F  F0D3         	call	_strcat	;wreg free
 19704                           
 19705                           ;ring_buffer_interface.c: 139: break;
 19706  015572  D02D               	goto	l1315
 19707  015574                     
 19708                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 19709  015574  0E95               	movlw	low terminal_textAttributes@output_buff
 19710  015576  0101               	movlb	1	; () banked
 19711  015578  6F17               	movwf	strcat@to& (0+255),b
 19712  01557A  0E02               	movlw	high terminal_textAttributes@output_buff
 19713  01557C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19714  01557E  0EF9               	movlw	low STR_21
 19715  015580  6F19               	movwf	strcat@from& (0+255),b
 19716  015582  0EFF               	movlw	high STR_21
 19717  015584  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19718  015586  EC3F  F0D3         	call	_strcat	;wreg free
 19719                           
 19720                           ;ring_buffer_interface.c: 142: break;
 19721  01558A  D021               	goto	l1315
 19722  01558C                     
 19723                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 19724  01558C  0E95               	movlw	low terminal_textAttributes@output_buff
 19725  01558E  0101               	movlb	1	; () banked
 19726  015590  6F17               	movwf	strcat@to& (0+255),b
 19727  015592  0E02               	movlw	high terminal_textAttributes@output_buff
 19728  015594  6F18               	movwf	(strcat@to+1)& (0+255),b
 19729  015596  0ECD               	movlw	low (STR_24+1)
 19730  015598  6F19               	movwf	strcat@from& (0+255),b
 19731  01559A  0EFF               	movlw	high (STR_24+1)
 19732  01559C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19733  01559E  EC3F  F0D3         	call	_strcat	;wreg free
 19734                           
 19735                           ;ring_buffer_interface.c: 147: }
 19736                           
 19737                           ;ring_buffer_interface.c: 146: break;
 19738  0155A2  D015               	goto	l1315
 19739  0155A4                     l1313:
 19740  0155A4  0101               	movlb	1	; () banked
 19741  0155A6  51BE               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 19742                           
 19743                           ; Switch size 1, requested type "space"
 19744                           ; Number of cases is 6, Range of values is 0 to 5
 19745                           ; switch strategies available:
 19746                           ; Name         Instructions Cycles
 19747                           ; simple_byte           19    10 (average)
 19748                           ;	Chosen strategy is simple_byte
 19749  0155A8  0A00               	xorlw	0	; case 0
 19750  0155AA  B4D8               	btfsc	status,2,c
 19751  0155AC  D7A7               	goto	l1314
 19752  0155AE  0A01               	xorlw	1	; case 1
 19753  0155B0  B4D8               	btfsc	status,2,c
 19754  0155B2  D7B0               	goto	l1316
 19755  0155B4  0A03               	xorlw	3	; case 2
 19756  0155B6  B4D8               	btfsc	status,2,c
 19757  0155B8  D7B9               	goto	l1317
 19758  0155BA  0A01               	xorlw	1	; case 3
 19759  0155BC  B4D8               	btfsc	status,2,c
 19760  0155BE  D7C2               	goto	l1318
 19761  0155C0  0A07               	xorlw	7	; case 4
 19762  0155C2  B4D8               	btfsc	status,2,c
 19763  0155C4  D7CB               	goto	l1319
 19764  0155C6  0A01               	xorlw	1	; case 5
 19765  0155C8  B4D8               	btfsc	status,2,c
 19766  0155CA  D7D4               	goto	l1320
 19767  0155CC  D7DF               	goto	l1321
 19768  0155CE                     l1315:
 19769                           
 19770                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 19771                           
 19772                           ; BSR set to: 1
 19773  0155CE  0E95               	movlw	low terminal_textAttributes@output_buff
 19774  0155D0  0101               	movlb	1	; () banked
 19775  0155D2  6F17               	movwf	strcat@to& (0+255),b
 19776  0155D4  0E02               	movlw	high terminal_textAttributes@output_buff
 19777  0155D6  6F18               	movwf	(strcat@to+1)& (0+255),b
 19778  0155D8  0EFB               	movlw	low STR_23
 19779  0155DA  6F19               	movwf	strcat@from& (0+255),b
 19780  0155DC  0EFF               	movlw	high STR_23
 19781  0155DE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19782  0155E0  EC3F  F0D3         	call	_strcat	;wreg free
 19783                           
 19784                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 19785  0155E4  D06C               	goto	l1322
 19786  0155E6                     
 19787                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 19788  0155E6  0E95               	movlw	low terminal_textAttributes@output_buff
 19789  0155E8  0101               	movlb	1	; () banked
 19790  0155EA  6F17               	movwf	strcat@to& (0+255),b
 19791  0155EC  0E02               	movlw	high terminal_textAttributes@output_buff
 19792  0155EE  6F18               	movwf	(strcat@to+1)& (0+255),b
 19793  0155F0  0ECC               	movlw	low STR_24
 19794  0155F2  6F19               	movwf	strcat@from& (0+255),b
 19795  0155F4  0EFF               	movlw	high STR_24
 19796  0155F6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19797  0155F8  EC3F  F0D3         	call	_strcat	;wreg free
 19798                           
 19799                           ;ring_buffer_interface.c: 155: break;
 19800  0155FC  D07B               	goto	l1324
 19801  0155FE                     
 19802                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 19803  0155FE  0E95               	movlw	low terminal_textAttributes@output_buff
 19804  015600  0101               	movlb	1	; () banked
 19805  015602  6F17               	movwf	strcat@to& (0+255),b
 19806  015604  0E02               	movlw	high terminal_textAttributes@output_buff
 19807  015606  6F18               	movwf	(strcat@to+1)& (0+255),b
 19808  015608  0ECF               	movlw	low STR_25
 19809  01560A  6F19               	movwf	strcat@from& (0+255),b
 19810  01560C  0EFF               	movlw	high STR_25
 19811  01560E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19812  015610  EC3F  F0D3         	call	_strcat	;wreg free
 19813                           
 19814                           ;ring_buffer_interface.c: 158: break;
 19815  015614  D06F               	goto	l1324
 19816  015616                     
 19817                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 19818  015616  0E95               	movlw	low terminal_textAttributes@output_buff
 19819  015618  0101               	movlb	1	; () banked
 19820  01561A  6F17               	movwf	strcat@to& (0+255),b
 19821  01561C  0E02               	movlw	high terminal_textAttributes@output_buff
 19822  01561E  6F18               	movwf	(strcat@to+1)& (0+255),b
 19823  015620  0ED5               	movlw	low STR_26
 19824  015622  6F19               	movwf	strcat@from& (0+255),b
 19825  015624  0EFF               	movlw	high STR_26
 19826  015626  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19827  015628  EC3F  F0D3         	call	_strcat	;wreg free
 19828                           
 19829                           ;ring_buffer_interface.c: 161: break;
 19830  01562C  D063               	goto	l1324
 19831  01562E                     
 19832                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 19833  01562E  0E95               	movlw	low terminal_textAttributes@output_buff
 19834  015630  0101               	movlb	1	; () banked
 19835  015632  6F17               	movwf	strcat@to& (0+255),b
 19836  015634  0E02               	movlw	high terminal_textAttributes@output_buff
 19837  015636  6F18               	movwf	(strcat@to+1)& (0+255),b
 19838  015638  0EDB               	movlw	low STR_27
 19839  01563A  6F19               	movwf	strcat@from& (0+255),b
 19840  01563C  0EFF               	movlw	high STR_27
 19841  01563E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19842  015640  EC3F  F0D3         	call	_strcat	;wreg free
 19843                           
 19844                           ;ring_buffer_interface.c: 164: break;
 19845  015644  D057               	goto	l1324
 19846  015646                     
 19847                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 19848  015646  0E95               	movlw	low terminal_textAttributes@output_buff
 19849  015648  0101               	movlb	1	; () banked
 19850  01564A  6F17               	movwf	strcat@to& (0+255),b
 19851  01564C  0E02               	movlw	high terminal_textAttributes@output_buff
 19852  01564E  6F18               	movwf	(strcat@to+1)& (0+255),b
 19853  015650  0EE1               	movlw	low STR_28
 19854  015652  6F19               	movwf	strcat@from& (0+255),b
 19855  015654  0EFF               	movlw	high STR_28
 19856  015656  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19857  015658  EC3F  F0D3         	call	_strcat	;wreg free
 19858                           
 19859                           ;ring_buffer_interface.c: 167: break;
 19860  01565C  D04B               	goto	l1324
 19861  01565E                     
 19862                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 19863  01565E  0E95               	movlw	low terminal_textAttributes@output_buff
 19864  015660  0101               	movlb	1	; () banked
 19865  015662  6F17               	movwf	strcat@to& (0+255),b
 19866  015664  0E02               	movlw	high terminal_textAttributes@output_buff
 19867  015666  6F18               	movwf	(strcat@to+1)& (0+255),b
 19868  015668  0E8F               	movlw	low (STR_3+7)
 19869  01566A  6F19               	movwf	strcat@from& (0+255),b
 19870  01566C  0EFF               	movlw	high (STR_3+7)
 19871  01566E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19872  015670  EC3F  F0D3         	call	_strcat	;wreg free
 19873                           
 19874                           ;ring_buffer_interface.c: 170: break;
 19875  015674  D03F               	goto	l1324
 19876  015676                     
 19877                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 19878  015676  0E95               	movlw	low terminal_textAttributes@output_buff
 19879  015678  0101               	movlb	1	; () banked
 19880  01567A  6F17               	movwf	strcat@to& (0+255),b
 19881  01567C  0E02               	movlw	high terminal_textAttributes@output_buff
 19882  01567E  6F18               	movwf	(strcat@to+1)& (0+255),b
 19883  015680  0EEA               	movlw	low STR_30
 19884  015682  6F19               	movwf	strcat@from& (0+255),b
 19885  015684  0EFF               	movlw	high STR_30
 19886  015686  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19887  015688  EC3F  F0D3         	call	_strcat	;wreg free
 19888                           
 19889                           ;ring_buffer_interface.c: 173: break;
 19890  01568C  D033               	goto	l1324
 19891  01568E                     
 19892                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 19893  01568E  0E95               	movlw	low terminal_textAttributes@output_buff
 19894  015690  0101               	movlb	1	; () banked
 19895  015692  6F17               	movwf	strcat@to& (0+255),b
 19896  015694  0E02               	movlw	high terminal_textAttributes@output_buff
 19897  015696  6F18               	movwf	(strcat@to+1)& (0+255),b
 19898  015698  0EF0               	movlw	low STR_31
 19899  01569A  6F19               	movwf	strcat@from& (0+255),b
 19900  01569C  0EFF               	movlw	high STR_31
 19901  01569E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19902  0156A0  EC3F  F0D3         	call	_strcat	;wreg free
 19903                           
 19904                           ;ring_buffer_interface.c: 176: break;
 19905  0156A4  D027               	goto	l1324
 19906  0156A6                     
 19907                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 19908  0156A6  0E95               	movlw	low terminal_textAttributes@output_buff
 19909  0156A8  0101               	movlb	1	; () banked
 19910  0156AA  6F17               	movwf	strcat@to& (0+255),b
 19911  0156AC  0E02               	movlw	high terminal_textAttributes@output_buff
 19912  0156AE  6F18               	movwf	(strcat@to+1)& (0+255),b
 19913  0156B0  0EF0               	movlw	low STR_31
 19914  0156B2  6F19               	movwf	strcat@from& (0+255),b
 19915  0156B4  0EFF               	movlw	high STR_31
 19916  0156B6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19917  0156B8  EC3F  F0D3         	call	_strcat	;wreg free
 19918                           
 19919                           ;ring_buffer_interface.c: 181: }
 19920                           
 19921                           ;ring_buffer_interface.c: 180: break;
 19922  0156BC  D01B               	goto	l1324
 19923  0156BE                     l1322:
 19924  0156BE  0102               	movlb	2	; () banked
 19925  0156C0  5194               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 19926                           
 19927                           ; Switch size 1, requested type "space"
 19928                           ; Number of cases is 8, Range of values is 0 to 7
 19929                           ; switch strategies available:
 19930                           ; Name         Instructions Cycles
 19931                           ; simple_byte           25    13 (average)
 19932                           ;	Chosen strategy is simple_byte
 19933  0156C2  0A00               	xorlw	0	; case 0
 19934  0156C4  B4D8               	btfsc	status,2,c
 19935  0156C6  D78F               	goto	l1323
 19936  0156C8  0A01               	xorlw	1	; case 1
 19937  0156CA  B4D8               	btfsc	status,2,c
 19938  0156CC  D798               	goto	l1325
 19939  0156CE  0A03               	xorlw	3	; case 2
 19940  0156D0  B4D8               	btfsc	status,2,c
 19941  0156D2  D7A1               	goto	l1326
 19942  0156D4  0A01               	xorlw	1	; case 3
 19943  0156D6  B4D8               	btfsc	status,2,c
 19944  0156D8  D7AA               	goto	l1327
 19945  0156DA  0A07               	xorlw	7	; case 4
 19946  0156DC  B4D8               	btfsc	status,2,c
 19947  0156DE  D7B3               	goto	l1328
 19948  0156E0  0A01               	xorlw	1	; case 5
 19949  0156E2  B4D8               	btfsc	status,2,c
 19950  0156E4  D7BC               	goto	l1329
 19951  0156E6  0A03               	xorlw	3	; case 6
 19952  0156E8  B4D8               	btfsc	status,2,c
 19953  0156EA  D7C5               	goto	l1330
 19954  0156EC  0A01               	xorlw	1	; case 7
 19955  0156EE  B4D8               	btfsc	status,2,c
 19956  0156F0  D7CE               	goto	l1331
 19957  0156F2  D7D9               	goto	l1332
 19958  0156F4                     l1324:
 19959                           
 19960                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 19961                           
 19962                           ; BSR set to: 2
 19963  0156F4  0E95               	movlw	low terminal_textAttributes@output_buff
 19964  0156F6  0101               	movlb	1	; () banked
 19965  0156F8  6F17               	movwf	strcat@to& (0+255),b
 19966  0156FA  0E02               	movlw	high terminal_textAttributes@output_buff
 19967  0156FC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19968  0156FE  0EFB               	movlw	low STR_23
 19969  015700  6F19               	movwf	strcat@from& (0+255),b
 19970  015702  0EFF               	movlw	high STR_23
 19971  015704  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19972  015706  EC3F  F0D3         	call	_strcat	;wreg free
 19973                           
 19974                           ;ring_buffer_interface.c: 185: switch (background_color) {
 19975  01570A  D06C               	goto	l1333
 19976  01570C                     
 19977                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 19978  01570C  0E95               	movlw	low terminal_textAttributes@output_buff
 19979  01570E  0101               	movlb	1	; () banked
 19980  015710  6F17               	movwf	strcat@to& (0+255),b
 19981  015712  0E02               	movlw	high terminal_textAttributes@output_buff
 19982  015714  6F18               	movwf	(strcat@to+1)& (0+255),b
 19983  015716  0E01               	movlw	low (STR_176+9)
 19984  015718  6F19               	movwf	strcat@from& (0+255),b
 19985  01571A  0EFF               	movlw	high (STR_176+9)
 19986  01571C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19987  01571E  EC3F  F0D3         	call	_strcat	;wreg free
 19988                           
 19989                           ;ring_buffer_interface.c: 189: break;
 19990  015722  D07B               	goto	l1335
 19991  015724                     
 19992                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 19993  015724  0E95               	movlw	low terminal_textAttributes@output_buff
 19994  015726  0101               	movlb	1	; () banked
 19995  015728  6F17               	movwf	strcat@to& (0+255),b
 19996  01572A  0E02               	movlw	high terminal_textAttributes@output_buff
 19997  01572C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19998  01572E  0ED2               	movlw	low STR_35
 19999  015730  6F19               	movwf	strcat@from& (0+255),b
 20000  015732  0EFF               	movlw	high STR_35
 20001  015734  6F1A               	movwf	(strcat@from+1)& (0+255),b
 20002  015736  EC3F  F0D3         	call	_strcat	;wreg free
 20003                           
 20004                           ;ring_buffer_interface.c: 192: break;
 20005  01573A  D06F               	goto	l1335
 20006  01573C                     
 20007                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 20008  01573C  0E95               	movlw	low terminal_textAttributes@output_buff
 20009  01573E  0101               	movlb	1	; () banked
 20010  015740  6F17               	movwf	strcat@to& (0+255),b
 20011  015742  0E02               	movlw	high terminal_textAttributes@output_buff
 20012  015744  6F18               	movwf	(strcat@to+1)& (0+255),b
 20013  015746  0ED8               	movlw	low STR_36
 20014  015748  6F19               	movwf	strcat@from& (0+255),b
 20015  01574A  0EFF               	movlw	high STR_36
 20016  01574C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 20017  01574E  EC3F  F0D3         	call	_strcat	;wreg free
 20018                           
 20019                           ;ring_buffer_interface.c: 195: break;
 20020  015752  D063               	goto	l1335
 20021  015754                     
 20022                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 20023  015754  0E95               	movlw	low terminal_textAttributes@output_buff
 20024  015756  0101               	movlb	1	; () banked
 20025  015758  6F17               	movwf	strcat@to& (0+255),b
 20026  01575A  0E02               	movlw	high terminal_textAttributes@output_buff
 20027  01575C  6F18               	movwf	(strcat@to+1)& (0+255),b
 20028  01575E  0EDE               	movlw	low STR_37
 20029  015760  6F19               	movwf	strcat@from& (0+255),b
 20030  015762  0EFF               	movlw	high STR_37
 20031  015764  6F1A               	movwf	(strcat@from+1)& (0+255),b
 20032  015766  EC3F  F0D3         	call	_strcat	;wreg free
 20033                           
 20034                           ;ring_buffer_interface.c: 198: break;
 20035  01576A  D057               	goto	l1335
 20036  01576C                     
 20037                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 20038  01576C  0E95               	movlw	low terminal_textAttributes@output_buff
 20039  01576E  0101               	movlb	1	; () banked
 20040  015770  6F17               	movwf	strcat@to& (0+255),b
 20041  015772  0E02               	movlw	high terminal_textAttributes@output_buff
 20042  015774  6F18               	movwf	(strcat@to+1)& (0+255),b
 20043  015776  0EE4               	movlw	low STR_38
 20044  015778  6F19               	movwf	strcat@from& (0+255),b
 20045  01577A  0EFF               	movlw	high STR_38
 20046  01577C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 20047  01577E  EC3F  F0D3         	call	_strcat	;wreg free
 20048                           
 20049                           ;ring_buffer_interface.c: 201: break;
 20050  015782  D04B               	goto	l1335
 20051  015784                     
 20052                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 20053  015784  0E95               	movlw	low terminal_textAttributes@output_buff
 20054  015786  0101               	movlb	1	; () banked
 20055  015788  6F17               	movwf	strcat@to& (0+255),b
 20056  01578A  0E02               	movlw	high terminal_textAttributes@output_buff
 20057  01578C  6F18               	movwf	(strcat@to+1)& (0+255),b
 20058  01578E  0EE7               	movlw	low STR_39
 20059  015790  6F19               	movwf	strcat@from& (0+255),b
 20060  015792  0EFF               	movlw	high STR_39
 20061  015794  6F1A               	movwf	(strcat@from+1)& (0+255),b
 20062  015796  EC3F  F0D3         	call	_strcat	;wreg free
 20063                           
 20064                           ;ring_buffer_interface.c: 204: break;
 20065  01579A  D03F               	goto	l1335
 20066  01579C                     
 20067                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 20068  01579C  0E95               	movlw	low terminal_textAttributes@output_buff
 20069  01579E  0101               	movlb	1	; () banked
 20070  0157A0  6F17               	movwf	strcat@to& (0+255),b
 20071  0157A2  0E02               	movlw	high terminal_textAttributes@output_buff
 20072  0157A4  6F18               	movwf	(strcat@to+1)& (0+255),b
 20073  0157A6  0EED               	movlw	low STR_40
 20074  0157A8  6F19               	movwf	strcat@from& (0+255),b
 20075  0157AA  0EFF               	movlw	high STR_40
 20076  0157AC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 20077  0157AE  EC3F  F0D3         	call	_strcat	;wreg free
 20078                           
 20079                           ;ring_buffer_interface.c: 207: break;
 20080  0157B2  D033               	goto	l1335
 20081  0157B4                     
 20082                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 20083  0157B4  0E95               	movlw	low terminal_textAttributes@output_buff
 20084  0157B6  0101               	movlb	1	; () banked
 20085  0157B8  6F17               	movwf	strcat@to& (0+255),b
 20086  0157BA  0E02               	movlw	high terminal_textAttributes@output_buff
 20087  0157BC  6F18               	movwf	(strcat@to+1)& (0+255),b
 20088  0157BE  0EF3               	movlw	low STR_41
 20089  0157C0  6F19               	movwf	strcat@from& (0+255),b
 20090  0157C2  0EFF               	movlw	high STR_41
 20091  0157C4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 20092  0157C6  EC3F  F0D3         	call	_strcat	;wreg free
 20093                           
 20094                           ;ring_buffer_interface.c: 210: break;
 20095  0157CA  D027               	goto	l1335
 20096  0157CC                     
 20097                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 20098  0157CC  0E95               	movlw	low terminal_textAttributes@output_buff
 20099  0157CE  0101               	movlb	1	; () banked
 20100  0157D0  6F17               	movwf	strcat@to& (0+255),b
 20101  0157D2  0E02               	movlw	high terminal_textAttributes@output_buff
 20102  0157D4  6F18               	movwf	(strcat@to+1)& (0+255),b
 20103  0157D6  0EF3               	movlw	low STR_41
 20104  0157D8  6F19               	movwf	strcat@from& (0+255),b
 20105  0157DA  0EFF               	movlw	high STR_41
 20106  0157DC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 20107  0157DE  EC3F  F0D3         	call	_strcat	;wreg free
 20108                           
 20109                           ;ring_buffer_interface.c: 215: }
 20110                           
 20111                           ;ring_buffer_interface.c: 214: break;
 20112  0157E2  D01B               	goto	l1335
 20113  0157E4                     l1333:
 20114  0157E4  0101               	movlb	1	; () banked
 20115  0157E6  51BD               	movf	terminal_textAttributes@background_color& (0+255),w,b
 20116                           
 20117                           ; Switch size 1, requested type "space"
 20118                           ; Number of cases is 8, Range of values is 0 to 7
 20119                           ; switch strategies available:
 20120                           ; Name         Instructions Cycles
 20121                           ; simple_byte           25    13 (average)
 20122                           ;	Chosen strategy is simple_byte
 20123  0157E8  0A00               	xorlw	0	; case 0
 20124  0157EA  B4D8               	btfsc	status,2,c
 20125  0157EC  D78F               	goto	l1334
 20126  0157EE  0A01               	xorlw	1	; case 1
 20127  0157F0  B4D8               	btfsc	status,2,c
 20128  0157F2  D798               	goto	l1336
 20129  0157F4  0A03               	xorlw	3	; case 2
 20130  0157F6  B4D8               	btfsc	status,2,c
 20131  0157F8  D7A1               	goto	l1337
 20132  0157FA  0A01               	xorlw	1	; case 3
 20133  0157FC  B4D8               	btfsc	status,2,c
 20134  0157FE  D7AA               	goto	l1338
 20135  015800  0A07               	xorlw	7	; case 4
 20136  015802  B4D8               	btfsc	status,2,c
 20137  015804  D7B3               	goto	l1339
 20138  015806  0A01               	xorlw	1	; case 5
 20139  015808  B4D8               	btfsc	status,2,c
 20140  01580A  D7BC               	goto	l1340
 20141  01580C  0A03               	xorlw	3	; case 6
 20142  01580E  B4D8               	btfsc	status,2,c
 20143  015810  D7C5               	goto	l1341
 20144  015812  0A01               	xorlw	1	; case 7
 20145  015814  B4D8               	btfsc	status,2,c
 20146  015816  D7CE               	goto	l1342
 20147  015818  D7D9               	goto	l1343
 20148  01581A                     l1335:
 20149                           
 20150                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 20151                           
 20152                           ; BSR set to: 1
 20153  01581A  0E95               	movlw	low terminal_textAttributes@output_buff
 20154  01581C  0101               	movlb	1	; () banked
 20155  01581E  6F17               	movwf	strcat@to& (0+255),b
 20156  015820  0E02               	movlw	high terminal_textAttributes@output_buff
 20157  015822  6F18               	movwf	(strcat@to+1)& (0+255),b
 20158  015824  0EFD               	movlw	low STR_43
 20159  015826  6F19               	movwf	strcat@from& (0+255),b
 20160  015828  0EFF               	movlw	high STR_43
 20161  01582A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 20162  01582C  EC3F  F0D3         	call	_strcat	;wreg free
 20163                           
 20164                           ;ring_buffer_interface.c: 219: printf(output_buff);
 20165  015830  0E95               	movlw	low terminal_textAttributes@output_buff
 20166  015832  0101               	movlb	1	; () banked
 20167  015834  6FAC               	movwf	printf@f& (0+255),b
 20168  015836  0E02               	movlw	high terminal_textAttributes@output_buff
 20169  015838  6FAD               	movwf	(printf@f+1)& (0+255),b
 20170  01583A  EC22  F0D5         	call	_printf	;wreg free
 20171  01583E  0012               	return		;funcret
 20172  015840                     __end_of_terminal_textAttributes:
 20173                           	opt stack 0
 20174                           tblptru	equ	0xFF8
 20175                           tblptrh	equ	0xFF7
 20176                           tblptrl	equ	0xFF6
 20177                           tablat	equ	0xFF5
 20178                           intcon	equ	0xFF2
 20179                           postinc0	equ	0xFEE
 20180                           wreg	equ	0xFE8
 20181                           indf1	equ	0xFE7
 20182                           postdec1	equ	0xFE5
 20183                           fsr1h	equ	0xFE2
 20184                           fsr1l	equ	0xFE1
 20185                           indf2	equ	0xFDF
 20186                           postinc2	equ	0xFDE
 20187                           fsr2h	equ	0xFDA
 20188                           fsr2l	equ	0xFD9
 20189                           status	equ	0xFD8
 20190                           
 20191 ;; *************** function _strncpy *****************
 20192 ;; Defined at:
 20193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 20194 ;; Parameters:    Size  Location     Type
 20195 ;;  to              2   23[BANK1 ] PTR unsigned char 
 20196 ;;		 -> terminal_textAttributes@output_buff(15), 
 20197 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 20198 ;;		 -> STR_15(3), 
 20199 ;;  size            2   27[BANK1 ] unsigned int 
 20200 ;; Auto vars:     Size  Location     Type
 20201 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 20202 ;;		 -> terminal_textAttributes@output_buff(15), 
 20203 ;; Return value:  Size  Location     Type
 20204 ;;                  2   23[BANK1 ] PTR unsigned char 
 20205 ;; Registers used:
 20206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20207 ;; Tracked objects:
 20208 ;;		On entry : 0/0
 20209 ;;		On exit  : 0/0
 20210 ;;		Unchanged: 0/0
 20211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20212 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20213 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20215 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20216 ;;Total ram usage:        8 bytes
 20217 ;; Hardware stack levels used:    1
 20218 ;; Hardware stack levels required when called:   13
 20219 ;; This function calls:
 20220 ;;		Nothing
 20221 ;; This function is called by:
 20222 ;;		_terminal_textAttributes
 20223 ;; This function uses a non-reentrant model
 20224 ;;
 20225                           
 20226                           	psect	text7
 20227  01A0FC                     __ptext7:
 20228                           	opt stack 0
 20229  01A0FC                     _strncpy:
 20230                           	opt stack 15
 20231                           
 20232                           ;incstack = 0
 20233  01A0FC  C117  F11D         	movff	strncpy@to,strncpy@cp
 20234  01A100  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 20235  01A104  D018               	goto	l2908
 20236  01A106  0101               	movlb	1	; () banked
 20237  01A108  071B               	decf	strncpy@size& (0+255),f,b
 20238  01A10A  A0D8               	btfss	status,0,c
 20239  01A10C  071C               	decf	(strncpy@size+1)& (0+255),f,b
 20240                           
 20241                           ; BSR set to: 1
 20242  01A10E  C119  FFF6         	movff	strncpy@from,tblptrl
 20243  01A112  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 20244  01A116  4B19               	infsnz	strncpy@from& (0+255),f,b
 20245  01A118  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 20246  01A11A                     	if	0	;tblptru may be non-zero
 20247  01A11A                     	endif
 20248  01A11A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20249  01A11A  0E00               	movlw	low (__mediumconst shr (0+16))
 20250  01A11C  6EF8               	movwf	tblptru,c
 20251  01A11E                     	endif
 20252  01A11E  C11D  FFD9         	movff	strncpy@cp,fsr2l
 20253  01A122  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 20254  01A126  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 20255  01A128  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 20256  01A12A  0008               	tblrd		*
 20257  01A12C  CFF5 FFDF          	movff	tablat,indf2
 20258  01A130  50DF               	movf	indf2,w,c
 20259  01A132  B4D8               	btfsc	status,2,c
 20260  01A134  D00E               	goto	l2910
 20261  01A136                     l2908:
 20262                           
 20263                           ; BSR set to: 1
 20264                           
 20265                           ; BSR set to: 1
 20266  01A136  0101               	movlb	1	; () banked
 20267  01A138  511B               	movf	strncpy@size& (0+255),w,b
 20268  01A13A  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 20269  01A13C  B4D8               	btfsc	status,2,c
 20270  01A13E  D009               	goto	l2910
 20271  01A140  D7E2               	goto	l2907
 20272  01A142                     l15593:
 20273                           
 20274                           ; BSR set to: 1
 20275  01A142  C11D  FFD9         	movff	strncpy@cp,fsr2l
 20276  01A146  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 20277  01A14A  0E00               	movlw	0
 20278  01A14C  6EDF               	movwf	indf2,c
 20279                           
 20280                           ; BSR set to: 1
 20281  01A14E  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 20282  01A150  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 20283  01A152                     l2910:
 20284                           
 20285                           ; BSR set to: 1
 20286                           
 20287                           ; BSR set to: 1
 20288  01A152  071B               	decf	strncpy@size& (0+255),f,b
 20289  01A154  A0D8               	btfss	status,0,c
 20290  01A156  071C               	decf	(strncpy@size+1)& (0+255),f,b
 20291  01A158  291B               	incf	strncpy@size& (0+255),w,b
 20292  01A15A  E1F3               	bnz	l15593
 20293  01A15C  291C               	incf	(strncpy@size+1)& (0+255),w,b
 20294  01A15E  B4D8               	btfsc	status,2,c
 20295  01A160  0012               	return	
 20296  01A162  D7EF               	goto	l2911
 20297  01A164                     __end_of_strncpy:
 20298                           	opt stack 0
 20299                           tblptru	equ	0xFF8
 20300                           tblptrh	equ	0xFF7
 20301                           tblptrl	equ	0xFF6
 20302                           tablat	equ	0xFF5
 20303                           intcon	equ	0xFF2
 20304                           postinc0	equ	0xFEE
 20305                           wreg	equ	0xFE8
 20306                           indf1	equ	0xFE7
 20307                           postdec1	equ	0xFE5
 20308                           fsr1h	equ	0xFE2
 20309                           fsr1l	equ	0xFE1
 20310                           indf2	equ	0xFDF
 20311                           postinc2	equ	0xFDE
 20312                           fsr2h	equ	0xFDA
 20313                           fsr2l	equ	0xFD9
 20314                           status	equ	0xFD8
 20315                           
 20316 ;; *************** function _strcat *****************
 20317 ;; Defined at:
 20318 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 20319 ;; Parameters:    Size  Location     Type
 20320 ;;  to              2   23[BANK1 ] PTR unsigned char 
 20321 ;;		 -> terminal_textAttributes@output_buff(15), 
 20322 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 20323 ;;		 -> STR_43(2), STR_42(3), STR_41(3), STR_40(3), 
 20324 ;;		 -> STR_39(3), STR_38(3), STR_37(3), STR_36(3), 
 20325 ;;		 -> STR_35(3), STR_34(3), STR_33(2), STR_32(3), 
 20326 ;;		 -> STR_31(3), STR_30(3), STR_29(3), STR_28(3), 
 20327 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 20328 ;;		 -> STR_23(2), STR_22(2), STR_21(2), STR_20(2), 
 20329 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 20330 ;; Auto vars:     Size  Location     Type
 20331 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 20332 ;;		 -> terminal_textAttributes@output_buff(15), 
 20333 ;; Return value:  Size  Location     Type
 20334 ;;                  2   23[BANK1 ] PTR unsigned char 
 20335 ;; Registers used:
 20336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20337 ;; Tracked objects:
 20338 ;;		On entry : 0/0
 20339 ;;		On exit  : 0/0
 20340 ;;		Unchanged: 0/0
 20341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20342 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20343 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20345 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20346 ;;Total ram usage:        6 bytes
 20347 ;; Hardware stack levels used:    1
 20348 ;; Hardware stack levels required when called:   13
 20349 ;; This function calls:
 20350 ;;		Nothing
 20351 ;; This function is called by:
 20352 ;;		_terminal_textAttributes
 20353 ;; This function uses a non-reentrant model
 20354 ;;
 20355                           
 20356                           	psect	text8
 20357  01A67E                     __ptext8:
 20358                           	opt stack 0
 20359  01A67E                     _strcat:
 20360                           	opt stack 15
 20361                           
 20362                           ; BSR set to: 1
 20363                           ;incstack = 0
 20364  01A67E  C117  F11B         	movff	strcat@to,strcat@cp
 20365  01A682  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 20366  01A686  D003               	goto	l2877
 20367  01A688  0101               	movlb	1	; () banked
 20368  01A68A  4B1B               	infsnz	strcat@cp& (0+255),f,b
 20369  01A68C  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 20370  01A68E                     l2877:
 20371                           
 20372                           ; BSR set to: 1
 20373  01A68E  C11B  FFD9         	movff	strcat@cp,fsr2l
 20374  01A692  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 20375  01A696  50DF               	movf	indf2,w,c
 20376  01A698  B4D8               	btfsc	status,2,c
 20377  01A69A  D006               	goto	l2880
 20378  01A69C  D7F5               	goto	l2878
 20379  01A69E  0101               	movlb	1	; () banked
 20380  01A6A0  4B1B               	infsnz	strcat@cp& (0+255),f,b
 20381  01A6A2  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 20382  01A6A4  4B19               	infsnz	strcat@from& (0+255),f,b
 20383  01A6A6  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 20384  01A6A8                     l2880:
 20385                           
 20386                           ; BSR set to: 1
 20387  01A6A8  C119  FFF6         	movff	strcat@from,tblptrl
 20388  01A6AC  C11A  FFF7         	movff	strcat@from+1,tblptrh
 20389  01A6B0                     	if	0	;tblptru may be non-zero
 20390  01A6B0                     	endif
 20391  01A6B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20392  01A6B0  0E00               	movlw	low (__mediumconst shr (0+16))
 20393  01A6B2  6EF8               	movwf	tblptru,c
 20394  01A6B4                     	endif
 20395  01A6B4  C11B  FFD9         	movff	strcat@cp,fsr2l
 20396  01A6B8  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 20397  01A6BC  0008               	tblrd		*
 20398  01A6BE  CFF5 FFDF          	movff	tablat,indf2
 20399  01A6C2  50DF               	movf	indf2,w,c
 20400  01A6C4  B4D8               	btfsc	status,2,c
 20401  01A6C6  0012               	return	
 20402  01A6C8  D7EA               	goto	l2881
 20403  01A6CA                     __end_of_strcat:
 20404                           	opt stack 0
 20405                           tblptru	equ	0xFF8
 20406                           tblptrh	equ	0xFF7
 20407                           tblptrl	equ	0xFF6
 20408                           tablat	equ	0xFF5
 20409                           intcon	equ	0xFF2
 20410                           postinc0	equ	0xFEE
 20411                           wreg	equ	0xFE8
 20412                           indf1	equ	0xFE7
 20413                           postdec1	equ	0xFE5
 20414                           fsr1h	equ	0xFE2
 20415                           fsr1l	equ	0xFE1
 20416                           indf2	equ	0xFDF
 20417                           postinc2	equ	0xFDE
 20418                           fsr2h	equ	0xFDA
 20419                           fsr2l	equ	0xFD9
 20420                           status	equ	0xFD8
 20421                           
 20422 ;; *************** function _terminal_printNewline *****************
 20423 ;; Defined at:
 20424 ;;		line 230 in file "ring_buffer_interface.c"
 20425 ;; Parameters:    Size  Location     Type
 20426 ;;		None
 20427 ;; Auto vars:     Size  Location     Type
 20428 ;;		None
 20429 ;; Return value:  Size  Location     Type
 20430 ;;                  1    wreg      void 
 20431 ;; Registers used:
 20432 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20433 ;; Tracked objects:
 20434 ;;		On entry : 0/0
 20435 ;;		On exit  : 0/0
 20436 ;;		Unchanged: 0/0
 20437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20442 ;;Total ram usage:        0 bytes
 20443 ;; Hardware stack levels used:    1
 20444 ;; Hardware stack levels required when called:   17
 20445 ;; This function calls:
 20446 ;;		_printf
 20447 ;; This function is called by:
 20448 ;;		_ringBufferLUT
 20449 ;; This function uses a non-reentrant model
 20450 ;;
 20451                           
 20452                           	psect	text9
 20453  01B21A                     __ptext9:
 20454                           	opt stack 0
 20455  01B21A                     _terminal_printNewline:
 20456                           	opt stack 11
 20457                           
 20458                           ;ring_buffer_interface.c: 232: printf("\n\r");
 20459                           
 20460                           ;incstack = 0
 20461  01B21A  0E46               	movlw	low (STR_156+717)
 20462  01B21C  0101               	movlb	1	; () banked
 20463  01B21E  6FAC               	movwf	printf@f& (0+255),b
 20464  01B220  0EE8               	movlw	high (STR_156+717)
 20465  01B222  6FAD               	movwf	(printf@f+1)& (0+255),b
 20466  01B224  EC22  F0D5         	call	_printf	;wreg free
 20467  01B228  0012               	return		;funcret
 20468  01B22A                     __end_of_terminal_printNewline:
 20469                           	opt stack 0
 20470                           tblptru	equ	0xFF8
 20471                           tblptrh	equ	0xFF7
 20472                           tblptrl	equ	0xFF6
 20473                           tablat	equ	0xFF5
 20474                           intcon	equ	0xFF2
 20475                           postinc0	equ	0xFEE
 20476                           wreg	equ	0xFE8
 20477                           indf1	equ	0xFE7
 20478                           postdec1	equ	0xFE5
 20479                           fsr1h	equ	0xFE2
 20480                           fsr1l	equ	0xFE1
 20481                           indf2	equ	0xFDF
 20482                           postinc2	equ	0xFDE
 20483                           fsr2h	equ	0xFDA
 20484                           fsr2l	equ	0xFD9
 20485                           status	equ	0xFD8
 20486                           
 20487 ;; *************** function _strstr *****************
 20488 ;; Defined at:
 20489 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 20490 ;; Parameters:    Size  Location     Type
 20491 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 20492 ;;		 -> NULL(0), line(64), 
 20493 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 20494 ;;		 -> STR_128(25), 
 20495 ;; Auto vars:     Size  Location     Type
 20496 ;;		None
 20497 ;; Return value:  Size  Location     Type
 20498 ;;                  2   38[BANK1 ] PTR unsigned char 
 20499 ;; Registers used:
 20500 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20501 ;; Tracked objects:
 20502 ;;		On entry : 0/0
 20503 ;;		On exit  : 0/0
 20504 ;;		Unchanged: 0/0
 20505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20506 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20509 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20510 ;;Total ram usage:        4 bytes
 20511 ;; Hardware stack levels used:    1
 20512 ;; Hardware stack levels required when called:   14
 20513 ;; This function calls:
 20514 ;;		_strchr
 20515 ;;		_strlen
 20516 ;;		_strncmp
 20517 ;; This function is called by:
 20518 ;;		_ringBufferLUT
 20519 ;; This function uses a non-reentrant model
 20520 ;;
 20521                           
 20522                           	psect	text10
 20523  019A56                     __ptext10:
 20524                           	opt stack 0
 20525  019A56                     _strstr:
 20526                           	opt stack 14
 20527                           
 20528                           ;incstack = 0
 20529  019A56  D034               	goto	l2922
 20530  019A58  C126  F11D         	movff	strstr@s1,strncmp@s1
 20531  019A5C  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 20532  019A60  C128  F11F         	movff	strstr@s2,strncmp@s2
 20533  019A64  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 20534  019A68  C128  F117         	movff	strstr@s2,strlen@s
 20535  019A6C  C129  F118         	movff	strstr@s2+1,strlen@s+1
 20536  019A70  EC7D  F0D1         	call	_strlen	;wreg free
 20537  019A74  C117  F121         	movff	?_strlen,strncmp@len
 20538  019A78  C118  F122         	movff	?_strlen+1,strncmp@len+1
 20539  019A7C  EC9D  F0CC         	call	_strncmp	;wreg free
 20540  019A80  0101               	movlb	1	; () banked
 20541  019A82  511D               	movf	?_strncmp& (0+255),w,b
 20542  019A84  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 20543  019A86  A4D8               	btfss	status,2,c
 20544  019A88  D005               	goto	l2924
 20545                           
 20546                           ; BSR set to: 1
 20547  019A8A  C126  F126         	movff	strstr@s1,?_strstr
 20548  019A8E  C127  F127         	movff	strstr@s1+1,?_strstr+1
 20549                           
 20550                           ; BSR set to: 1
 20551  019A92  0012               	return	
 20552  019A94                     l2924:
 20553                           
 20554                           ; BSR set to: 1
 20555                           
 20556                           ; BSR set to: 1
 20557  019A94  0E01               	movlw	1
 20558  019A96  2526               	addwf	strstr@s1& (0+255),w,b
 20559  019A98  6F17               	movwf	strchr@ptr& (0+255),b
 20560  019A9A  0E00               	movlw	0
 20561  019A9C  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 20562  019A9E  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 20563  019AA0  C128  FFF6         	movff	strstr@s2,tblptrl
 20564  019AA4  C129  FFF7         	movff	strstr@s2+1,tblptrh
 20565  019AA8                     	if	0	;tblptru may be non-zero
 20566  019AA8                     	endif
 20567  019AA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20568  019AA8  0E00               	movlw	low (__mediumconst shr (0+16))
 20569  019AAA  6EF8               	movwf	tblptru,c
 20570  019AAC                     	endif
 20571  019AAC  0008               	tblrd		*
 20572  019AAE  50F5               	movf	tablat,w,c
 20573  019AB0  6F19               	movwf	strchr@chr& (0+255),b
 20574  019AB2  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 20575  019AB4  ECD4  F0D5         	call	_strchr	;wreg free
 20576  019AB8  C117  F126         	movff	?_strchr,strstr@s1
 20577  019ABC  C118  F127         	movff	?_strchr+1,strstr@s1+1
 20578  019AC0                     l2922:
 20579  019AC0  0101               	movlb	1	; () banked
 20580  019AC2  5126               	movf	strstr@s1& (0+255),w,b
 20581  019AC4  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 20582  019AC6  B4D8               	btfsc	status,2,c
 20583  019AC8  D007               	goto	u21330
 20584                           
 20585                           ; BSR set to: 1
 20586  019ACA  C126  FFD9         	movff	strstr@s1,fsr2l
 20587  019ACE  C127  FFDA         	movff	strstr@s1+1,fsr2h
 20588  019AD2  50DF               	movf	indf2,w,c
 20589  019AD4  A4D8               	btfss	status,2,c
 20590  019AD6  D7C0               	goto	l2923
 20591  019AD8                     u21330:
 20592                           
 20593                           ; BSR set to: 1
 20594                           
 20595                           ; BSR set to: 1
 20596                           
 20597                           ; BSR set to: 1
 20598  019AD8  0E00               	movlw	0
 20599  019ADA  6F26               	movwf	?_strstr& (0+255),b
 20600  019ADC  0E00               	movlw	0
 20601  019ADE  6F27               	movwf	(?_strstr+1)& (0+255),b
 20602  019AE0  0012               	return	
 20603  019AE2                     __end_of_strstr:
 20604                           	opt stack 0
 20605                           tblptru	equ	0xFF8
 20606                           tblptrh	equ	0xFF7
 20607                           tblptrl	equ	0xFF6
 20608                           tablat	equ	0xFF5
 20609                           intcon	equ	0xFF2
 20610                           postinc0	equ	0xFEE
 20611                           wreg	equ	0xFE8
 20612                           indf1	equ	0xFE7
 20613                           postdec1	equ	0xFE5
 20614                           fsr1h	equ	0xFE2
 20615                           fsr1l	equ	0xFE1
 20616                           indf2	equ	0xFDF
 20617                           postinc2	equ	0xFDE
 20618                           fsr2h	equ	0xFDA
 20619                           fsr2l	equ	0xFD9
 20620                           status	equ	0xFD8
 20621                           
 20622 ;; *************** function _strncmp *****************
 20623 ;; Defined at:
 20624 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 20625 ;; Parameters:    Size  Location     Type
 20626 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 20627 ;;		 -> NULL(0), line(64), 
 20628 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 20629 ;;		 -> STR_128(25), 
 20630 ;;  len             2   33[BANK1 ] unsigned int 
 20631 ;; Auto vars:     Size  Location     Type
 20632 ;;		None
 20633 ;; Return value:  Size  Location     Type
 20634 ;;                  2   29[BANK1 ] int 
 20635 ;; Registers used:
 20636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20637 ;; Tracked objects:
 20638 ;;		On entry : 0/0
 20639 ;;		On exit  : 0/0
 20640 ;;		Unchanged: 0/0
 20641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20642 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20644 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20645 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20646 ;;Total ram usage:        9 bytes
 20647 ;; Hardware stack levels used:    1
 20648 ;; Hardware stack levels required when called:   13
 20649 ;; This function calls:
 20650 ;;		Nothing
 20651 ;; This function is called by:
 20652 ;;		_strstr
 20653 ;; This function uses a non-reentrant model
 20654 ;;
 20655                           
 20656                           	psect	text11
 20657  01993A                     __ptext11:
 20658                           	opt stack 0
 20659  01993A                     _strncmp:
 20660                           	opt stack 14
 20661                           
 20662                           ; BSR set to: 1
 20663                           ;incstack = 0
 20664  01993A  D039               	goto	l2981
 20665  01993C                     l16005:
 20666  01993C  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20667  019940  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20668  019944  50DF               	movf	indf2,w,c
 20669  019946  B4D8               	btfsc	status,2,c
 20670  019948  D012               	goto	u20770
 20671  01994A  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20672  01994E  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20673  019952  50DF               	movf	indf2,w,c
 20674  019954  0101               	movlb	1	; () banked
 20675  019956  6F23               	movwf	??_strncmp& (0+255),b
 20676  019958  C11F  FFF6         	movff	strncmp@s2,tblptrl
 20677  01995C  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 20678  019960                     	if	0	;tblptru may be non-zero
 20679  019960                     	endif
 20680  019960                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20681  019960  0E00               	movlw	low (__mediumconst shr (0+16))
 20682  019962  6EF8               	movwf	tblptru,c
 20683  019964                     	endif
 20684  019964  0008               	tblrd		*
 20685  019966  50F5               	movf	tablat,w,c
 20686  019968  1923               	xorwf	??_strncmp& (0+255),w,b
 20687  01996A  B4D8               	btfsc	status,2,c
 20688  01996C  D01C               	goto	l2983
 20689  01996E                     u20770:
 20690                           
 20691                           ; BSR set to: 1
 20692  01996E  C11F  FFF6         	movff	strncmp@s2,tblptrl
 20693  019972  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 20694  019976                     	if	0	;tblptru may be non-zero
 20695  019976                     	endif
 20696  019976                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20697  019976  0E00               	movlw	low (__mediumconst shr (0+16))
 20698  019978  6EF8               	movwf	tblptru,c
 20699  01997A                     	endif
 20700  01997A  0008               	tblrd		*
 20701  01997C  50F5               	movf	tablat,w,c
 20702  01997E  0101               	movlb	1	; () banked
 20703  019980  6F23               	movwf	??_strncmp& (0+255),b
 20704  019982  6B24               	clrf	(??_strncmp+1)& (0+255),b
 20705  019984  1F23               	comf	??_strncmp& (0+255),f,b
 20706  019986  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 20707  019988  4B23               	infsnz	??_strncmp& (0+255),f,b
 20708  01998A  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 20709  01998C  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20710  019990  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20711  019994  50DF               	movf	indf2,w,c
 20712  019996  6F25               	movwf	(??_strncmp+2)& (0+255),b
 20713  019998  5125               	movf	(??_strncmp+2)& (0+255),w,b
 20714  01999A  2523               	addwf	??_strncmp& (0+255),w,b
 20715  01999C  6F1D               	movwf	?_strncmp& (0+255),b
 20716  01999E  0E00               	movlw	0
 20717  0199A0  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 20718  0199A2  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 20719                           
 20720                           ; BSR set to: 1
 20721  0199A4  0012               	return	
 20722  0199A6                     l2983:
 20723                           
 20724                           ; BSR set to: 1
 20725                           
 20726                           ; BSR set to: 1
 20727  0199A6  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 20728  0199A8  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 20729  0199AA  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 20730  0199AC  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 20731  0199AE                     l2981:
 20732                           
 20733                           ; BSR set to: 1
 20734  0199AE  0101               	movlb	1	; () banked
 20735  0199B0  0721               	decf	strncmp@len& (0+255),f,b
 20736  0199B2  A0D8               	btfss	status,0,c
 20737  0199B4  0722               	decf	(strncmp@len+1)& (0+255),f,b
 20738  0199B6  2921               	incf	strncmp@len& (0+255),w,b
 20739  0199B8  E1C1               	bnz	l16005
 20740  0199BA  2922               	incf	(strncmp@len+1)& (0+255),w,b
 20741  0199BC  A4D8               	btfss	status,2,c
 20742  0199BE  D7BE               	goto	l2982
 20743                           
 20744                           ; BSR set to: 1
 20745                           
 20746                           ; BSR set to: 1
 20747  0199C0  0E00               	movlw	0
 20748  0199C2  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 20749  0199C4  0E00               	movlw	0
 20750  0199C6  6F1D               	movwf	?_strncmp& (0+255),b
 20751  0199C8  0012               	return	
 20752  0199CA                     __end_of_strncmp:
 20753                           	opt stack 0
 20754                           tblptru	equ	0xFF8
 20755                           tblptrh	equ	0xFF7
 20756                           tblptrl	equ	0xFF6
 20757                           tablat	equ	0xFF5
 20758                           intcon	equ	0xFF2
 20759                           postinc0	equ	0xFEE
 20760                           wreg	equ	0xFE8
 20761                           indf1	equ	0xFE7
 20762                           postdec1	equ	0xFE5
 20763                           fsr1h	equ	0xFE2
 20764                           fsr1l	equ	0xFE1
 20765                           indf2	equ	0xFDF
 20766                           postinc2	equ	0xFDE
 20767                           fsr2h	equ	0xFDA
 20768                           fsr2l	equ	0xFD9
 20769                           status	equ	0xFD8
 20770                           
 20771 ;; *************** function _strlen *****************
 20772 ;; Defined at:
 20773 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 20774 ;; Parameters:    Size  Location     Type
 20775 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 20776 ;;		 -> STR_128(25), line(64), 
 20777 ;; Auto vars:     Size  Location     Type
 20778 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 20779 ;;		 -> STR_128(25), line(64), 
 20780 ;; Return value:  Size  Location     Type
 20781 ;;                  2   23[BANK1 ] unsigned int 
 20782 ;; Registers used:
 20783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 20784 ;; Tracked objects:
 20785 ;;		On entry : 0/0
 20786 ;;		On exit  : 0/0
 20787 ;;		Unchanged: 0/0
 20788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20789 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20790 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20791 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20792 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20793 ;;Total ram usage:        6 bytes
 20794 ;; Hardware stack levels used:    1
 20795 ;; Hardware stack levels required when called:   13
 20796 ;; This function calls:
 20797 ;;		Nothing
 20798 ;; This function is called by:
 20799 ;;		_terminal_ringBufferPull
 20800 ;;		_strstr
 20801 ;; This function uses a non-reentrant model
 20802 ;;
 20803                           
 20804                           	psect	text12
 20805  01A2FA                     __ptext12:
 20806                           	opt stack 0
 20807  01A2FA                     _strlen:
 20808                           	opt stack 16
 20809                           
 20810                           ; BSR set to: 1
 20811                           ;incstack = 0
 20812  01A2FA  C117  F11B         	movff	strlen@s,strlen@cp
 20813  01A2FE  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 20814  01A302  D003               	goto	l2900
 20815  01A304  0101               	movlb	1	; () banked
 20816  01A306  4B1B               	infsnz	strlen@cp& (0+255),f,b
 20817  01A308  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 20818  01A30A                     l2900:
 20819                           
 20820                           ; BSR set to: 1
 20821  01A30A  C11B  FFF6         	movff	strlen@cp,tblptrl
 20822  01A30E  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 20823  01A312  0E00               	movlw	low (__mediumconst shr (0+16))
 20824  01A314  6EF8               	movwf	tblptru,c
 20825  01A316  0E0D               	movlw	(high __ramtop+-1)
 20826  01A318  64F7               	cpfsgt	tblptrh,c
 20827  01A31A  D003               	bra	u20687
 20828  01A31C  0008               	tblrd		*
 20829  01A31E  50F5               	movf	tablat,w,c
 20830  01A320  D005               	bra	u20680
 20831  01A322                     u20687:
 20832  01A322  CFF6 FFE9          	movff	tblptrl,fsr0l
 20833  01A326  CFF7 FFEA          	movff	tblptrh,fsr0h
 20834  01A32A  50EF               	movf	indf0,w,c
 20835  01A32C                     u20680:
 20836  01A32C  0900               	iorlw	0
 20837  01A32E  A4D8               	btfss	status,2,c
 20838  01A330  D7E9               	goto	l2901
 20839  01A332  C117  F119         	movff	strlen@s,??_strlen
 20840  01A336  C118  F11A         	movff	strlen@s+1,??_strlen+1
 20841  01A33A  0101               	movlb	1	; () banked
 20842  01A33C  1F19               	comf	??_strlen& (0+255),f,b
 20843  01A33E  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 20844  01A340  4B19               	infsnz	??_strlen& (0+255),f,b
 20845  01A342  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 20846  01A344  511B               	movf	strlen@cp& (0+255),w,b
 20847  01A346  2519               	addwf	??_strlen& (0+255),w,b
 20848  01A348  6F17               	movwf	?_strlen& (0+255),b
 20849  01A34A  511C               	movf	(strlen@cp+1)& (0+255),w,b
 20850  01A34C  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 20851  01A34E  6F18               	movwf	(?_strlen+1)& (0+255),b
 20852  01A350  0012               	return	
 20853  01A352                     __end_of_strlen:
 20854                           	opt stack 0
 20855                           tblptru	equ	0xFF8
 20856                           tblptrh	equ	0xFF7
 20857                           tblptrl	equ	0xFF6
 20858                           tablat	equ	0xFF5
 20859                           intcon	equ	0xFF2
 20860                           indf0	equ	0xFEF
 20861                           postinc0	equ	0xFEE
 20862                           fsr0h	equ	0xFEA
 20863                           fsr0l	equ	0xFE9
 20864                           wreg	equ	0xFE8
 20865                           indf1	equ	0xFE7
 20866                           postdec1	equ	0xFE5
 20867                           fsr1h	equ	0xFE2
 20868                           fsr1l	equ	0xFE1
 20869                           indf2	equ	0xFDF
 20870                           postinc2	equ	0xFDE
 20871                           fsr2h	equ	0xFDA
 20872                           fsr2l	equ	0xFD9
 20873                           status	equ	0xFD8
 20874                           
 20875 ;; *************** function _strchr *****************
 20876 ;; Defined at:
 20877 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 20878 ;; Parameters:    Size  Location     Type
 20879 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 20880 ;;		 -> NULL(0), line(64), 
 20881 ;;  chr             2   25[BANK1 ] int 
 20882 ;; Auto vars:     Size  Location     Type
 20883 ;;		None
 20884 ;; Return value:  Size  Location     Type
 20885 ;;                  2   23[BANK1 ] PTR unsigned char 
 20886 ;; Registers used:
 20887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20888 ;; Tracked objects:
 20889 ;;		On entry : 0/0
 20890 ;;		On exit  : 0/0
 20891 ;;		Unchanged: 0/0
 20892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20893 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20895 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20896 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20897 ;;Total ram usage:        5 bytes
 20898 ;; Hardware stack levels used:    1
 20899 ;; Hardware stack levels required when called:   13
 20900 ;; This function calls:
 20901 ;;		Nothing
 20902 ;; This function is called by:
 20903 ;;		_strstr
 20904 ;; This function uses a non-reentrant model
 20905 ;;
 20906                           
 20907                           	psect	text13
 20908  01ABA8                     __ptext13:
 20909                           	opt stack 0
 20910  01ABA8                     _strchr:
 20911                           	opt stack 14
 20912                           
 20913                           ; BSR set to: 1
 20914                           ;incstack = 0
 20915  01ABA8  C117  FFD9         	movff	strchr@ptr,fsr2l
 20916  01ABAC  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 20917  01ABB0  0101               	movlb	1	; () banked
 20918  01ABB2  5119               	movf	strchr@chr& (0+255),w,b
 20919  01ABB4  18DE               	xorwf	postinc2,w,c
 20920  01ABB6  A4D8               	btfss	status,2,c
 20921  01ABB8  D005               	goto	l2976
 20922                           
 20923                           ; BSR set to: 1
 20924  01ABBA  C117  F117         	movff	strchr@ptr,?_strchr
 20925  01ABBE  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 20926                           
 20927                           ; BSR set to: 1
 20928  01ABC2  0012               	return	
 20929  01ABC4                     l2976:
 20930                           
 20931                           ; BSR set to: 1
 20932                           
 20933                           ; BSR set to: 1
 20934  01ABC4  C117  FFD9         	movff	strchr@ptr,fsr2l
 20935  01ABC8  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 20936  01ABCC  4B17               	infsnz	strchr@ptr& (0+255),f,b
 20937  01ABCE  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 20938  01ABD0  50DF               	movf	indf2,w,c
 20939  01ABD2  A4D8               	btfss	status,2,c
 20940  01ABD4  D7E9               	goto	_strchr
 20941                           
 20942                           ; BSR set to: 1
 20943                           
 20944                           ; BSR set to: 1
 20945  01ABD6  0E00               	movlw	0
 20946  01ABD8  6F17               	movwf	?_strchr& (0+255),b
 20947  01ABDA  0E00               	movlw	0
 20948  01ABDC  6F18               	movwf	(?_strchr+1)& (0+255),b
 20949  01ABDE  0012               	return	
 20950  01ABE0                     __end_of_strchr:
 20951                           	opt stack 0
 20952                           tblptru	equ	0xFF8
 20953                           tblptrh	equ	0xFF7
 20954                           tblptrl	equ	0xFF6
 20955                           tablat	equ	0xFF5
 20956                           intcon	equ	0xFF2
 20957                           indf0	equ	0xFEF
 20958                           postinc0	equ	0xFEE
 20959                           fsr0h	equ	0xFEA
 20960                           fsr0l	equ	0xFE9
 20961                           wreg	equ	0xFE8
 20962                           indf1	equ	0xFE7
 20963                           postdec1	equ	0xFE5
 20964                           fsr1h	equ	0xFE2
 20965                           fsr1l	equ	0xFE1
 20966                           indf2	equ	0xFDF
 20967                           postinc2	equ	0xFDE
 20968                           fsr2h	equ	0xFDA
 20969                           fsr2l	equ	0xFD9
 20970                           status	equ	0xFD8
 20971                           
 20972 ;; *************** function _strcmp *****************
 20973 ;; Defined at:
 20974 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 20975 ;; Parameters:    Size  Location     Type
 20976 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 20977 ;;		 -> line(64), 
 20978 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 20979 ;;		 -> STR_170(11), STR_163(5), STR_161(9), STR_159(29), 
 20980 ;;		 -> STR_157(34), STR_155(33), STR_153(29), STR_151(17), 
 20981 ;;		 -> STR_149(17), STR_147(14), STR_145(19), STR_143(20), 
 20982 ;;		 -> STR_141(11), STR_139(17), STR_137(14), STR_135(16), 
 20983 ;;		 -> STR_126(13), STR_122(17), STR_119(14), STR_117(12), 
 20984 ;;		 -> STR_115(16), STR_113(17), STR_108(15), STR_106(13), 
 20985 ;;		 -> STR_104(16), STR_102(15), STR_100(21), STR_98(21), 
 20986 ;;		 -> STR_96(26), STR_94(14), STR_92(13), STR_90(18), 
 20987 ;;		 -> STR_88(15), STR_86(16), STR_84(18), STR_78(13), 
 20988 ;;		 -> STR_76(17), STR_64(12), STR_61(10), STR_59(13), 
 20989 ;;		 -> STR_57(11), STR_54(4), STR_53(6), STR_51(16), 
 20990 ;;		 -> STR_48(6), STR_45(6), 
 20991 ;; Auto vars:     Size  Location     Type
 20992 ;;  r               1   28[BANK1 ] char 
 20993 ;; Return value:  Size  Location     Type
 20994 ;;                  2   23[BANK1 ] int 
 20995 ;; Registers used:
 20996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20997 ;; Tracked objects:
 20998 ;;		On entry : 0/0
 20999 ;;		On exit  : 0/0
 21000 ;;		Unchanged: 0/0
 21001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21002 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21003 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21004 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21005 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21006 ;;Total ram usage:        6 bytes
 21007 ;; Hardware stack levels used:    1
 21008 ;; Hardware stack levels required when called:   13
 21009 ;; This function calls:
 21010 ;;		Nothing
 21011 ;; This function is called by:
 21012 ;;		_ringBufferLUT
 21013 ;; This function uses a non-reentrant model
 21014 ;;
 21015                           
 21016                           	psect	text14
 21017  01A4A2                     __ptext14:
 21018                           	opt stack 0
 21019  01A4A2                     _strcmp:
 21020                           	opt stack 15
 21021                           
 21022                           ; BSR set to: 1
 21023                           ;incstack = 0
 21024  01A4A2  D005               	goto	l2886
 21025  01A4A4  0101               	movlb	1	; () banked
 21026  01A4A6  4B17               	infsnz	strcmp@s1& (0+255),f,b
 21027  01A4A8  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 21028  01A4AA  4B19               	infsnz	strcmp@s2& (0+255),f,b
 21029  01A4AC  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 21030  01A4AE                     l2886:
 21031                           
 21032                           ; BSR set to: 1
 21033  01A4AE  C117  FFD9         	movff	strcmp@s1,fsr2l
 21034  01A4B2  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 21035  01A4B6  50DF               	movf	indf2,w,c
 21036  01A4B8  0101               	movlb	1	; () banked
 21037  01A4BA  6F1B               	movwf	??_strcmp& (0+255),b
 21038  01A4BC  C119  FFF6         	movff	strcmp@s2,tblptrl
 21039  01A4C0  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 21040  01A4C4                     	if	0	;tblptru may be non-zero
 21041  01A4C4                     	endif
 21042  01A4C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21043  01A4C4  0E00               	movlw	low (__mediumconst shr (0+16))
 21044  01A4C6  6EF8               	movwf	tblptru,c
 21045  01A4C8                     	endif
 21046  01A4C8  0008               	tblrd		*
 21047  01A4CA  50F5               	movf	tablat,w,c
 21048  01A4CC  0800               	sublw	0
 21049  01A4CE  251B               	addwf	??_strcmp& (0+255),w,b
 21050  01A4D0  6F1C               	movwf	strcmp@r& (0+255),b
 21051  01A4D2  511C               	movf	strcmp@r& (0+255),w,b
 21052  01A4D4  A4D8               	btfss	status,2,c
 21053  01A4D6  D007               	goto	u21180
 21054                           
 21055                           ; BSR set to: 1
 21056  01A4D8  C117  FFD9         	movff	strcmp@s1,fsr2l
 21057  01A4DC  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 21058  01A4E0  50DF               	movf	indf2,w,c
 21059  01A4E2  A4D8               	btfss	status,2,c
 21060  01A4E4  D7DF               	goto	l2887
 21061  01A4E6                     u21180:
 21062                           
 21063                           ; BSR set to: 1
 21064                           
 21065                           ; BSR set to: 1
 21066                           
 21067                           ; BSR set to: 1
 21068  01A4E6  511C               	movf	strcmp@r& (0+255),w,b
 21069  01A4E8  6F17               	movwf	?_strcmp& (0+255),b
 21070  01A4EA  6B18               	clrf	(?_strcmp+1)& (0+255),b
 21071  01A4EC  BF17               	btfsc	?_strcmp& (0+255),7,b
 21072  01A4EE  0718               	decf	(?_strcmp+1)& (0+255),f,b
 21073  01A4F0  0012               	return	
 21074  01A4F2                     __end_of_strcmp:
 21075                           	opt stack 0
 21076                           tblptru	equ	0xFF8
 21077                           tblptrh	equ	0xFF7
 21078                           tblptrl	equ	0xFF6
 21079                           tablat	equ	0xFF5
 21080                           intcon	equ	0xFF2
 21081                           indf0	equ	0xFEF
 21082                           postinc0	equ	0xFEE
 21083                           fsr0h	equ	0xFEA
 21084                           fsr0l	equ	0xFE9
 21085                           wreg	equ	0xFE8
 21086                           indf1	equ	0xFE7
 21087                           postdec1	equ	0xFE5
 21088                           fsr1h	equ	0xFE2
 21089                           fsr1l	equ	0xFE1
 21090                           indf2	equ	0xFDF
 21091                           postinc2	equ	0xFDE
 21092                           fsr2h	equ	0xFDA
 21093                           fsr2l	equ	0xFD9
 21094                           status	equ	0xFD8
 21095                           
 21096 ;; *************** function _getUserID *****************
 21097 ;; Defined at:
 21098 ;;		line 65 in file "device_IDs.c"
 21099 ;; Parameters:    Size  Location     Type
 21100 ;;  inputUserID     1    wreg     unsigned char 
 21101 ;; Auto vars:     Size  Location     Type
 21102 ;;  inputUserID     1   40[BANK1 ] unsigned char 
 21103 ;;  initialOffse    4   36[BANK1 ] unsigned long 
 21104 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 21105 ;; Return value:  Size  Location     Type
 21106 ;;                  2   34[BANK1 ] unsigned int 
 21107 ;; Registers used:
 21108 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21109 ;; Tracked objects:
 21110 ;;		On entry : 0/0
 21111 ;;		On exit  : 0/0
 21112 ;;		Unchanged: 0/0
 21113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21114 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21115 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21117 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21118 ;;Total ram usage:        8 bytes
 21119 ;; Hardware stack levels used:    1
 21120 ;; Hardware stack levels required when called:   15
 21121 ;; This function calls:
 21122 ;;		_FLASH_ReadWord
 21123 ;; This function is called by:
 21124 ;;		_ringBufferLUT
 21125 ;; This function uses a non-reentrant model
 21126 ;;
 21127                           
 21128                           	psect	text15
 21129  01A884                     __ptext15:
 21130                           	opt stack 0
 21131  01A884                     _getUserID:
 21132                           	opt stack 13
 21133                           
 21134                           ; BSR set to: 1
 21135                           ;incstack = 0
 21136                           ;getUserID@inputUserID stored from wreg
 21137  01A884  0101               	movlb	1	; () banked
 21138  01A886  6F28               	movwf	getUserID@inputUserID& (0+255),b
 21139                           
 21140                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 21141  01A888  0E00               	movlw	0
 21142  01A88A  0101               	movlb	1	; () banked
 21143  01A88C  6F24               	movwf	getUserID@initialOffset& (0+255),b
 21144  01A88E  0E00               	movlw	0
 21145  01A890  6F25               	movwf	(getUserID@initialOffset+1)& (0+255),b
 21146  01A892  0E20               	movlw	32
 21147  01A894  6F26               	movwf	(getUserID@initialOffset+2)& (0+255),b
 21148  01A896  0E00               	movlw	0
 21149  01A898  6F27               	movwf	(getUserID@initialOffset+3)& (0+255),b
 21150                           
 21151                           ; BSR set to: 1
 21152                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 21153  01A89A  5128               	movf	getUserID@inputUserID& (0+255),w,b
 21154  01A89C  0D02               	mullw	2
 21155  01A89E  CFF3 F129          	movff	prodl,getUserID@IDOffset
 21156                           
 21157                           ; BSR set to: 1
 21158                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 21159  01A8A2  5129               	movf	getUserID@IDOffset& (0+255),w,b
 21160  01A8A4  2524               	addwf	getUserID@initialOffset& (0+255),w,b
 21161  01A8A6  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21162  01A8A8  0E00               	movlw	0
 21163  01A8AA  2125               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 21164  01A8AC  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21165  01A8AE  0E00               	movlw	0
 21166  01A8B0  2126               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 21167  01A8B2  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21168  01A8B4  0E00               	movlw	0
 21169  01A8B6  2127               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 21170  01A8B8  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21171  01A8BA  EC64  F0D4         	call	_FLASH_ReadWord	;wreg free
 21172  01A8BE  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 21173  01A8C2  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 21174  01A8C6  0012               	return	
 21175  01A8C8                     __end_of_getUserID:
 21176                           	opt stack 0
 21177                           tblptru	equ	0xFF8
 21178                           tblptrh	equ	0xFF7
 21179                           tblptrl	equ	0xFF6
 21180                           tablat	equ	0xFF5
 21181                           prodl	equ	0xFF3
 21182                           intcon	equ	0xFF2
 21183                           indf0	equ	0xFEF
 21184                           postinc0	equ	0xFEE
 21185                           fsr0h	equ	0xFEA
 21186                           fsr0l	equ	0xFE9
 21187                           wreg	equ	0xFE8
 21188                           indf1	equ	0xFE7
 21189                           postdec1	equ	0xFE5
 21190                           fsr1h	equ	0xFE2
 21191                           fsr1l	equ	0xFE1
 21192                           indf2	equ	0xFDF
 21193                           postinc2	equ	0xFDE
 21194                           fsr2h	equ	0xFDA
 21195                           fsr2l	equ	0xFD9
 21196                           status	equ	0xFD8
 21197                           
 21198 ;; *************** function _getMinorRevisionID *****************
 21199 ;; Defined at:
 21200 ;;		line 23 in file "device_IDs.c"
 21201 ;; Parameters:    Size  Location     Type
 21202 ;;		None
 21203 ;; Auto vars:     Size  Location     Type
 21204 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 21205 ;; Return value:  Size  Location     Type
 21206 ;;                  1    wreg      unsigned char 
 21207 ;; Registers used:
 21208 ;;		wreg, status,2, status,0, cstack
 21209 ;; Tracked objects:
 21210 ;;		On entry : 0/0
 21211 ;;		On exit  : 0/0
 21212 ;;		Unchanged: 0/0
 21213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21215 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21217 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21218 ;;Total ram usage:        2 bytes
 21219 ;; Hardware stack levels used:    1
 21220 ;; Hardware stack levels required when called:   15
 21221 ;; This function calls:
 21222 ;;		_FLASH_ReadWord
 21223 ;; This function is called by:
 21224 ;;		_ringBufferLUT
 21225 ;; This function uses a non-reentrant model
 21226 ;;
 21227                           
 21228                           	psect	text16
 21229  01AEE8                     __ptext16:
 21230                           	opt stack 0
 21231  01AEE8                     _getMinorRevisionID:
 21232                           	opt stack 13
 21233                           
 21234                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21235                           
 21236                           ;incstack = 0
 21237  01AEE8  0EFC               	movlw	252
 21238  01AEEA  0101               	movlb	1	; () banked
 21239  01AEEC  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21240  01AEEE  0EFF               	movlw	255
 21241  01AEF0  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21242  01AEF2  0E3F               	movlw	63
 21243  01AEF4  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21244  01AEF6  0E00               	movlw	0
 21245  01AEF8  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21246  01AEFA  EC64  F0D4         	call	_FLASH_ReadWord	;wreg free
 21247  01AEFE  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 21248  01AF02  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 21249                           
 21250                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 21251  01AF06  0101               	movlb	1	; () banked
 21252  01AF08  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 21253  01AF0A  0B1F               	andlw	31
 21254  01AF0C  0012               	return	
 21255  01AF0E                     __end_of_getMinorRevisionID:
 21256                           	opt stack 0
 21257                           tblptru	equ	0xFF8
 21258                           tblptrh	equ	0xFF7
 21259                           tblptrl	equ	0xFF6
 21260                           tablat	equ	0xFF5
 21261                           prodl	equ	0xFF3
 21262                           intcon	equ	0xFF2
 21263                           indf0	equ	0xFEF
 21264                           postinc0	equ	0xFEE
 21265                           fsr0h	equ	0xFEA
 21266                           fsr0l	equ	0xFE9
 21267                           wreg	equ	0xFE8
 21268                           indf1	equ	0xFE7
 21269                           postdec1	equ	0xFE5
 21270                           fsr1h	equ	0xFE2
 21271                           fsr1l	equ	0xFE1
 21272                           indf2	equ	0xFDF
 21273                           postinc2	equ	0xFDE
 21274                           fsr2h	equ	0xFDA
 21275                           fsr2l	equ	0xFD9
 21276                           status	equ	0xFD8
 21277                           
 21278 ;; *************** function _getMajorRevisionID *****************
 21279 ;; Defined at:
 21280 ;;		line 12 in file "device_IDs.c"
 21281 ;; Parameters:    Size  Location     Type
 21282 ;;		None
 21283 ;; Auto vars:     Size  Location     Type
 21284 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 21285 ;; Return value:  Size  Location     Type
 21286 ;;                  1    wreg      unsigned char 
 21287 ;; Registers used:
 21288 ;;		wreg, status,2, status,0, cstack
 21289 ;; Tracked objects:
 21290 ;;		On entry : 0/0
 21291 ;;		On exit  : 0/0
 21292 ;;		Unchanged: 0/0
 21293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21295 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21296 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21297 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21298 ;;Total ram usage:        5 bytes
 21299 ;; Hardware stack levels used:    1
 21300 ;; Hardware stack levels required when called:   15
 21301 ;; This function calls:
 21302 ;;		_FLASH_ReadWord
 21303 ;; This function is called by:
 21304 ;;		_ringBufferLUT
 21305 ;; This function uses a non-reentrant model
 21306 ;;
 21307                           
 21308                           	psect	text17
 21309  01AA08                     __ptext17:
 21310                           	opt stack 0
 21311  01AA08                     _getMajorRevisionID:
 21312                           	opt stack 13
 21313                           
 21314                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21315                           
 21316                           ; BSR set to: 1
 21317                           ;incstack = 0
 21318  01AA08  0EFC               	movlw	252
 21319  01AA0A  0101               	movlb	1	; () banked
 21320  01AA0C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21321  01AA0E  0EFF               	movlw	255
 21322  01AA10  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21323  01AA12  0E3F               	movlw	63
 21324  01AA14  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21325  01AA16  0E00               	movlw	0
 21326  01AA18  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21327  01AA1A  EC64  F0D4         	call	_FLASH_ReadWord	;wreg free
 21328  01AA1E  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 21329  01AA22  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 21330                           
 21331                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 21332  01AA26  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 21333  01AA2A  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 21334  01AA2E  0E06               	movlw	6
 21335  01AA30  0101               	movlb	1	; () banked
 21336  01AA32  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 21337  01AA34                     u21215:
 21338  01AA34  90D8               	bcf	status,0,c
 21339  01AA36  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 21340  01AA38  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 21341  01AA3A  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 21342  01AA3C  D7FB               	goto	u21215
 21343  01AA3E  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 21344  01AA40  0B1F               	andlw	31
 21345  01AA42  0012               	return	
 21346  01AA44                     __end_of_getMajorRevisionID:
 21347                           	opt stack 0
 21348                           tblptru	equ	0xFF8
 21349                           tblptrh	equ	0xFF7
 21350                           tblptrl	equ	0xFF6
 21351                           tablat	equ	0xFF5
 21352                           prodl	equ	0xFF3
 21353                           intcon	equ	0xFF2
 21354                           indf0	equ	0xFEF
 21355                           postinc0	equ	0xFEE
 21356                           fsr0h	equ	0xFEA
 21357                           fsr0l	equ	0xFE9
 21358                           wreg	equ	0xFE8
 21359                           indf1	equ	0xFE7
 21360                           postdec1	equ	0xFE5
 21361                           fsr1h	equ	0xFE2
 21362                           fsr1l	equ	0xFE1
 21363                           indf2	equ	0xFDF
 21364                           postinc2	equ	0xFDE
 21365                           fsr2h	equ	0xFDA
 21366                           fsr2l	equ	0xFD9
 21367                           status	equ	0xFD8
 21368                           
 21369 ;; *************** function _getDeviceIDString *****************
 21370 ;; Defined at:
 21371 ;;		line 34 in file "device_IDs.c"
 21372 ;; Parameters:    Size  Location     Type
 21373 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 21374 ;; Auto vars:     Size  Location     Type
 21375 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 21376 ;;		 -> STR_178(10), STR_177(13), STR_176(12), 
 21377 ;; Return value:  Size  Location     Type
 21378 ;;                  2   36[BANK1 ] PTR inline unsigned char
 21379 ;; Registers used:
 21380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21381 ;; Tracked objects:
 21382 ;;		On entry : 0/0
 21383 ;;		On exit  : 0/0
 21384 ;;		Unchanged: 0/0
 21385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21386 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21387 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21388 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21389 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21390 ;;Total ram usage:       10 bytes
 21391 ;; Hardware stack levels used:    1
 21392 ;; Hardware stack levels required when called:   13
 21393 ;; This function calls:
 21394 ;;		Nothing
 21395 ;; This function is called by:
 21396 ;;		_ringBufferLUT
 21397 ;; This function uses a non-reentrant model
 21398 ;;
 21399                           
 21400                           	psect	text18
 21401  01A29A                     __ptext18:
 21402                           	opt stack 0
 21403  01A29A                     _getDeviceIDString:
 21404                           	opt stack 15
 21405                           
 21406                           ;device_IDs.c: 37: const char *strings[] = {
 21407                           ;device_IDs.c: 39: "PIC18F67K40",
 21408                           ;device_IDs.c: 40: "PIC18LF67K40",
 21409                           ;device_IDs.c: 41: "Undefined"
 21410                           ;device_IDs.c: 43: };
 21411                           
 21412                           ; BSR set to: 1
 21413                           ;incstack = 0
 21414  01A29A  EE22  F0E3         	lfsr	2,getDeviceIDString@F17550
 21415  01A29E  EE11  F028         	lfsr	1,getDeviceIDString@strings
 21416  01A2A2  0E05               	movlw	5
 21417  01A2A4                     u21201:
 21418  01A2A4  CFDB FFE3          	movff	plusw2,plusw1
 21419  01A2A8  06E8               	decf	wreg,f,c
 21420  01A2AA  E2FC               	bc	u21201
 21421                           
 21422                           ;device_IDs.c: 47: switch (inputDevID) {
 21423  01A2AC  D00F               	goto	l1611
 21424  01A2AE                     
 21425                           ;device_IDs.c: 50: return strings[0];
 21426  01A2AE  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 21427  01A2B2  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 21428                           
 21429                           ;device_IDs.c: 51: break;
 21430  01A2B6  0012               	return	
 21431  01A2B8                     
 21432                           ;device_IDs.c: 54: return strings[1];
 21433  01A2B8  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 21434  01A2BC  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 21435                           
 21436                           ;device_IDs.c: 55: break;
 21437  01A2C0  0012               	return	
 21438  01A2C2                     
 21439                           ;device_IDs.c: 58: return strings[2];
 21440  01A2C2  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 21441  01A2C6  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 21442                           
 21443                           ;device_IDs.c: 61: }
 21444                           
 21445                           ;device_IDs.c: 59: break;
 21446  01A2CA  0012               	return	
 21447  01A2CC                     l1611:
 21448  01A2CC  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 21449  01A2D0  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 21450                           
 21451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 21452                           ; Switch size 1, requested type "space"
 21453                           ; Number of cases is 2, Range of values is 106 to 107
 21454                           ; switch strategies available:
 21455                           ; Name         Instructions Cycles
 21456                           ; simple_byte            7     4 (average)
 21457                           ;	Chosen strategy is simple_byte
 21458  01A2D4  0101               	movlb	1	; () banked
 21459  01A2D6  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 21460  01A2D8  0A6A               	xorlw	106	; case 106
 21461  01A2DA  B4D8               	btfsc	status,2,c
 21462  01A2DC  D004               	goto	l23875
 21463  01A2DE  0A01               	xorlw	1	; case 107
 21464  01A2E0  B4D8               	btfsc	status,2,c
 21465  01A2E2  D006               	goto	l23877
 21466  01A2E4  D7EE               	goto	l1616
 21467  01A2E6                     l23875:
 21468                           
 21469                           ; BSR set to: 1
 21470                           ; Switch size 1, requested type "space"
 21471                           ; Number of cases is 1, Range of values is 192 to 192
 21472                           ; switch strategies available:
 21473                           ; Name         Instructions Cycles
 21474                           ; simple_byte            4     3 (average)
 21475                           ;	Chosen strategy is simple_byte
 21476  01A2E6  5126               	movf	??_getDeviceIDString& (0+255),w,b
 21477  01A2E8  0AC0               	xorlw	192	; case 192
 21478  01A2EA  B4D8               	btfsc	status,2,c
 21479  01A2EC  D7E0               	goto	l1612
 21480  01A2EE  D7E9               	goto	l1616
 21481  01A2F0                     l23877:
 21482                           
 21483                           ; BSR set to: 1
 21484                           ; Switch size 1, requested type "space"
 21485                           ; Number of cases is 1, Range of values is 32 to 32
 21486                           ; switch strategies available:
 21487                           ; Name         Instructions Cycles
 21488                           ; simple_byte            4     3 (average)
 21489                           ;	Chosen strategy is simple_byte
 21490  01A2F0  5126               	movf	??_getDeviceIDString& (0+255),w,b
 21491  01A2F2  0A20               	xorlw	32	; case 32
 21492  01A2F4  B4D8               	btfsc	status,2,c
 21493  01A2F6  D7E0               	goto	l1615
 21494  01A2F8  D7E4               	goto	l1616
 21495  01A2FA                     __end_of_getDeviceIDString:
 21496                           	opt stack 0
 21497                           tblptru	equ	0xFF8
 21498                           tblptrh	equ	0xFF7
 21499                           tblptrl	equ	0xFF6
 21500                           tablat	equ	0xFF5
 21501                           prodl	equ	0xFF3
 21502                           intcon	equ	0xFF2
 21503                           indf0	equ	0xFEF
 21504                           postinc0	equ	0xFEE
 21505                           fsr0h	equ	0xFEA
 21506                           fsr0l	equ	0xFE9
 21507                           wreg	equ	0xFE8
 21508                           indf1	equ	0xFE7
 21509                           postdec1	equ	0xFE5
 21510                           plusw1	equ	0xFE3
 21511                           fsr1h	equ	0xFE2
 21512                           fsr1l	equ	0xFE1
 21513                           indf2	equ	0xFDF
 21514                           postinc2	equ	0xFDE
 21515                           plusw2	equ	0xFDB
 21516                           fsr2h	equ	0xFDA
 21517                           fsr2l	equ	0xFD9
 21518                           status	equ	0xFD8
 21519                           
 21520 ;; *************** function _getDeviceID *****************
 21521 ;; Defined at:
 21522 ;;		line 4 in file "device_IDs.c"
 21523 ;; Parameters:    Size  Location     Type
 21524 ;;		None
 21525 ;; Auto vars:     Size  Location     Type
 21526 ;;		None
 21527 ;; Return value:  Size  Location     Type
 21528 ;;                  2   34[BANK1 ] unsigned int 
 21529 ;; Registers used:
 21530 ;;		wreg, status,2, status,0, cstack
 21531 ;; Tracked objects:
 21532 ;;		On entry : 0/0
 21533 ;;		On exit  : 0/0
 21534 ;;		Unchanged: 0/0
 21535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21536 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21539 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21540 ;;Total ram usage:        2 bytes
 21541 ;; Hardware stack levels used:    1
 21542 ;; Hardware stack levels required when called:   15
 21543 ;; This function calls:
 21544 ;;		_FLASH_ReadWord
 21545 ;; This function is called by:
 21546 ;;		_ringBufferLUT
 21547 ;; This function uses a non-reentrant model
 21548 ;;
 21549                           
 21550                           	psect	text19
 21551  01B032                     __ptext19:
 21552                           	opt stack 0
 21553  01B032                     _getDeviceID:
 21554                           	opt stack 13
 21555                           
 21556                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 21557                           
 21558                           ;incstack = 0
 21559  01B032  0EFE               	movlw	254
 21560  01B034  0101               	movlb	1	; () banked
 21561  01B036  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21562  01B038  0EFF               	movlw	255
 21563  01B03A  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21564  01B03C  0E3F               	movlw	63
 21565  01B03E  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21566  01B040  0E00               	movlw	0
 21567  01B042  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21568  01B044  EC64  F0D4         	call	_FLASH_ReadWord	;wreg free
 21569  01B048  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 21570  01B04C  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 21571  01B050  0012               	return	
 21572  01B052                     __end_of_getDeviceID:
 21573                           	opt stack 0
 21574                           tblptru	equ	0xFF8
 21575                           tblptrh	equ	0xFF7
 21576                           tblptrl	equ	0xFF6
 21577                           tablat	equ	0xFF5
 21578                           prodl	equ	0xFF3
 21579                           intcon	equ	0xFF2
 21580                           indf0	equ	0xFEF
 21581                           postinc0	equ	0xFEE
 21582                           fsr0h	equ	0xFEA
 21583                           fsr0l	equ	0xFE9
 21584                           wreg	equ	0xFE8
 21585                           indf1	equ	0xFE7
 21586                           postdec1	equ	0xFE5
 21587                           plusw1	equ	0xFE3
 21588                           fsr1h	equ	0xFE2
 21589                           fsr1l	equ	0xFE1
 21590                           indf2	equ	0xFDF
 21591                           postinc2	equ	0xFDE
 21592                           plusw2	equ	0xFDB
 21593                           fsr2h	equ	0xFDA
 21594                           fsr2l	equ	0xFD9
 21595                           status	equ	0xFD8
 21596                           
 21597 ;; *************** function _FLASH_ReadWord *****************
 21598 ;; Defined at:
 21599 ;;		line 71 in file "mcc_generated_files/memory.c"
 21600 ;; Parameters:    Size  Location     Type
 21601 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 21602 ;; Auto vars:     Size  Location     Type
 21603 ;;		None
 21604 ;; Return value:  Size  Location     Type
 21605 ;;                  2   27[BANK1 ] unsigned int 
 21606 ;; Registers used:
 21607 ;;		wreg, status,2, status,0, cstack
 21608 ;; Tracked objects:
 21609 ;;		On entry : 0/0
 21610 ;;		On exit  : 0/0
 21611 ;;		Unchanged: 0/0
 21612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21613 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21615 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21616 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21617 ;;Total ram usage:        7 bytes
 21618 ;; Hardware stack levels used:    1
 21619 ;; Hardware stack levels required when called:   14
 21620 ;; This function calls:
 21621 ;;		_FLASH_ReadByte
 21622 ;; This function is called by:
 21623 ;;		_getDeviceID
 21624 ;;		_getMajorRevisionID
 21625 ;;		_getMinorRevisionID
 21626 ;;		_getUserID
 21627 ;; This function uses a non-reentrant model
 21628 ;;
 21629                           
 21630                           	psect	text20
 21631  01A8C8                     __ptext20:
 21632                           	opt stack 0
 21633  01A8C8                     _FLASH_ReadWord:
 21634                           	opt stack 13
 21635                           
 21636                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 21637                           
 21638                           ;incstack = 0
 21639  01A8C8  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 21640  01A8CC  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 21641  01A8D0  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 21642  01A8D4  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 21643  01A8D8  EC7F  F0D8         	call	_FLASH_ReadByte	;wreg free
 21644  01A8DC  0101               	movlb	1	; () banked
 21645  01A8DE  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 21646  01A8E0  0E01               	movlw	1
 21647  01A8E2  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 21648  01A8E4  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 21649  01A8E6  0E00               	movlw	0
 21650  01A8E8  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 21651  01A8EA  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 21652  01A8EC  0E00               	movlw	0
 21653  01A8EE  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 21654  01A8F0  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 21655  01A8F2  0E00               	movlw	0
 21656  01A8F4  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 21657  01A8F6  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 21658  01A8F8  EC7F  F0D8         	call	_FLASH_ReadByte	;wreg free
 21659  01A8FC  0101               	movlb	1	; () banked
 21660  01A8FE  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 21661  01A900  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 21662  01A902  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 21663  01A904  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 21664  01A908  0012               	return	
 21665  01A90A                     __end_of_FLASH_ReadWord:
 21666                           	opt stack 0
 21667                           tblptru	equ	0xFF8
 21668                           tblptrh	equ	0xFF7
 21669                           tblptrl	equ	0xFF6
 21670                           tablat	equ	0xFF5
 21671                           prodl	equ	0xFF3
 21672                           intcon	equ	0xFF2
 21673                           indf0	equ	0xFEF
 21674                           postinc0	equ	0xFEE
 21675                           fsr0h	equ	0xFEA
 21676                           fsr0l	equ	0xFE9
 21677                           wreg	equ	0xFE8
 21678                           indf1	equ	0xFE7
 21679                           postdec1	equ	0xFE5
 21680                           plusw1	equ	0xFE3
 21681                           fsr1h	equ	0xFE2
 21682                           fsr1l	equ	0xFE1
 21683                           indf2	equ	0xFDF
 21684                           postinc2	equ	0xFDE
 21685                           plusw2	equ	0xFDB
 21686                           fsr2h	equ	0xFDA
 21687                           fsr2l	equ	0xFD9
 21688                           status	equ	0xFD8
 21689                           
 21690 ;; *************** function _FLASH_ReadByte *****************
 21691 ;; Defined at:
 21692 ;;		line 59 in file "mcc_generated_files/memory.c"
 21693 ;; Parameters:    Size  Location     Type
 21694 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 21695 ;; Auto vars:     Size  Location     Type
 21696 ;;		None
 21697 ;; Return value:  Size  Location     Type
 21698 ;;                  1    wreg      unsigned char 
 21699 ;; Registers used:
 21700 ;;		wreg, status,2
 21701 ;; Tracked objects:
 21702 ;;		On entry : 0/0
 21703 ;;		On exit  : 0/0
 21704 ;;		Unchanged: 0/0
 21705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21706 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21709 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21710 ;;Total ram usage:        4 bytes
 21711 ;; Hardware stack levels used:    1
 21712 ;; Hardware stack levels required when called:   13
 21713 ;; This function calls:
 21714 ;;		Nothing
 21715 ;; This function is called by:
 21716 ;;		_FLASH_ReadWord
 21717 ;;		_FLASH_WriteByte
 21718 ;; This function uses a non-reentrant model
 21719 ;;
 21720                           
 21721                           	psect	text21
 21722  01B0FE                     __ptext21:
 21723                           	opt stack 0
 21724  01B0FE                     _FLASH_ReadByte:
 21725                           	opt stack 13
 21726                           
 21727                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 21728                           
 21729                           ; BSR set to: 1
 21730                           ;incstack = 0
 21731  01B0FE  5077               	movf	3959,w,c	;volsfr
 21732  01B100  0B3F               	andlw	-193
 21733  01B102  0980               	iorlw	128
 21734  01B104  6E77               	movwf	3959,c	;volsfr
 21735                           
 21736                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 21737  01B106  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 21738                           
 21739                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 21740  01B10A  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 21741                           
 21742                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 21743  01B10E  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 21744  01B112  0008               	tblrd		*	;# 
 21745                           
 21746                           ;memory.c: 68: return (TABLAT);
 21747  01B114  50F5               	movf	tablat,w,c	;volatile
 21748  01B116  0012               	return	
 21749  01B118                     __end_of_FLASH_ReadByte:
 21750                           	opt stack 0
 21751                           tblptru	equ	0xFF8
 21752                           tblptrh	equ	0xFF7
 21753                           tblptrl	equ	0xFF6
 21754                           tablat	equ	0xFF5
 21755                           prodl	equ	0xFF3
 21756                           intcon	equ	0xFF2
 21757                           indf0	equ	0xFEF
 21758                           postinc0	equ	0xFEE
 21759                           fsr0h	equ	0xFEA
 21760                           fsr0l	equ	0xFE9
 21761                           wreg	equ	0xFE8
 21762                           indf1	equ	0xFE7
 21763                           postdec1	equ	0xFE5
 21764                           plusw1	equ	0xFE3
 21765                           fsr1h	equ	0xFE2
 21766                           fsr1l	equ	0xFE1
 21767                           indf2	equ	0xFDF
 21768                           postinc2	equ	0xFDE
 21769                           plusw2	equ	0xFDB
 21770                           fsr2h	equ	0xFDA
 21771                           fsr2l	equ	0xFD9
 21772                           status	equ	0xFD8
 21773                           
 21774 ;; *************** function _getCauseOfResetString *****************
 21775 ;; Defined at:
 21776 ;;		line 81 in file "cause_of_reset.c"
 21777 ;; Parameters:    Size  Location     Type
 21778 ;;  r               1    wreg     enum E17455
 21779 ;; Auto vars:     Size  Location     Type
 21780 ;;  r               1   25[BANK1 ] enum E17455
 21781 ;; Return value:  Size  Location     Type
 21782 ;;                  2   23[BANK1 ] PTR inline unsigned char
 21783 ;; Registers used:
 21784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21785 ;; Tracked objects:
 21786 ;;		On entry : 0/0
 21787 ;;		On exit  : 0/0
 21788 ;;		Unchanged: 0/0
 21789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21790 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21791 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21793 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21794 ;;Total ram usage:        3 bytes
 21795 ;; Hardware stack levels used:    1
 21796 ;; Hardware stack levels required when called:   13
 21797 ;; This function calls:
 21798 ;;		Nothing
 21799 ;; This function is called by:
 21800 ;;		_ringBufferLUT
 21801 ;; This function uses a non-reentrant model
 21802 ;;
 21803                           
 21804                           	psect	text22
 21805  01AD88                     __ptext22:
 21806                           	opt stack 0
 21807  01AD88                     _getCauseOfResetString:
 21808                           	opt stack 15
 21809                           
 21810                           ;incstack = 0
 21811                           ;getCauseOfResetString@r stored from wreg
 21812  01AD88  0101               	movlb	1	; () banked
 21813  01AD8A  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 21814                           
 21815                           ;cause_of_reset.c: 84: static char *strings[] = {
 21816                           ;cause_of_reset.c: 85: "Undefined Reset",
 21817                           ;cause_of_reset.c: 86: "Power On Reset",
 21818                           ;cause_of_reset.c: 87: "Brown Out Reset",
 21819                           ;cause_of_reset.c: 88: "Master Clear Reset",
 21820                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 21821                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 21822                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 21823                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 21824                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 21825                           ;cause_of_reset.c: 94: };
 21826  01AD8C  0E09               	movlw	9
 21827  01AD8E  0101               	movlb	1	; () banked
 21828  01AD90  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 21829  01AD92  D00D               	goto	l1643
 21830                           
 21831                           ; BSR set to: 1
 21832                           ;cause_of_reset.c: 99: return strings[r];
 21833  01AD94  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 21834  01AD96  0D02               	mullw	2
 21835  01AD98  0ED1               	movlw	low getCauseOfResetString@strings
 21836  01AD9A  24F3               	addwf	prodl,w,c
 21837  01AD9C  6ED9               	movwf	fsr2l,c
 21838  01AD9E  0E02               	movlw	high getCauseOfResetString@strings
 21839  01ADA0  20F4               	addwfc	prodh,w,c
 21840  01ADA2  6EDA               	movwf	fsr2h,c
 21841  01ADA4  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 21842  01ADA8  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 21843                           
 21844                           ; BSR set to: 1
 21845                           ;cause_of_reset.c: 101: }
 21846                           
 21847                           ; BSR set to: 1
 21848  01ADAC  0012               	return	
 21849  01ADAE                     l1643:
 21850                           
 21851                           ; BSR set to: 1
 21852                           ;cause_of_reset.c: 103: else {
 21853                           ;cause_of_reset.c: 105: return "Undefined Reset";
 21854                           
 21855                           ; BSR set to: 1
 21856  01ADAE  0E72               	movlw	low STR_179
 21857  01ADB0  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 21858  01ADB2  0EFD               	movlw	high STR_179
 21859  01ADB4  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 21860                           
 21861                           ; BSR set to: 1
 21862  01ADB6  0012               	return	
 21863  01ADB8                     __end_of_getCauseOfResetString:
 21864                           	opt stack 0
 21865                           tblptru	equ	0xFF8
 21866                           tblptrh	equ	0xFF7
 21867                           tblptrl	equ	0xFF6
 21868                           tablat	equ	0xFF5
 21869                           prodh	equ	0xFF4
 21870                           prodl	equ	0xFF3
 21871                           intcon	equ	0xFF2
 21872                           indf0	equ	0xFEF
 21873                           postinc0	equ	0xFEE
 21874                           fsr0h	equ	0xFEA
 21875                           fsr0l	equ	0xFE9
 21876                           wreg	equ	0xFE8
 21877                           indf1	equ	0xFE7
 21878                           postdec1	equ	0xFE5
 21879                           plusw1	equ	0xFE3
 21880                           fsr1h	equ	0xFE2
 21881                           fsr1l	equ	0xFE1
 21882                           indf2	equ	0xFDF
 21883                           postinc2	equ	0xFDE
 21884                           postdec2	equ	0xFDD
 21885                           plusw2	equ	0xFDB
 21886                           fsr2h	equ	0xFDA
 21887                           fsr2l	equ	0xFD9
 21888                           status	equ	0xFD8
 21889                           
 21890 ;; *************** function _getCOMMError *****************
 21891 ;; Defined at:
 21892 ;;		line 35 in file "error_handling.c"
 21893 ;; Parameters:    Size  Location     Type
 21894 ;;		None
 21895 ;; Auto vars:     Size  Location     Type
 21896 ;;		None
 21897 ;; Return value:  Size  Location     Type
 21898 ;;                  1    wreg      unsigned char 
 21899 ;; Registers used:
 21900 ;;		wreg, status,2
 21901 ;; Tracked objects:
 21902 ;;		On entry : 0/0
 21903 ;;		On exit  : 0/0
 21904 ;;		Unchanged: 0/0
 21905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21910 ;;Total ram usage:        0 bytes
 21911 ;; Hardware stack levels used:    1
 21912 ;; Hardware stack levels required when called:   13
 21913 ;; This function calls:
 21914 ;;		Nothing
 21915 ;; This function is called by:
 21916 ;;		_ringBufferLUT
 21917 ;;		_updateErrorLEDs
 21918 ;; This function uses a non-reentrant model
 21919 ;;
 21920                           
 21921                           	psect	text23
 21922  01B194                     __ptext23:
 21923                           	opt stack 0
 21924  01B194                     _getCOMMError:
 21925                           	opt stack 16
 21926                           
 21927                           ;error_handling.c: 38: if ( error_handler.I2C_COMM_error_flag ||
 21928                           ;error_handling.c: 39: error_handler.USB_UART_COMM_error_flag ) {
 21929                           
 21930                           ; BSR set to: 1
 21931                           ;incstack = 0
 21932  01B194  0102               	movlb	2	; () banked
 21933  01B196  5107               	movf	(_error_handler+7)& (0+255),w,b
 21934  01B198  A4D8               	btfss	status,2,c
 21935  01B19A  D003               	goto	u21300
 21936                           
 21937                           ; BSR set to: 2
 21938  01B19C  5108               	movf	(_error_handler+8)& (0+255),w,b
 21939  01B19E  B4D8               	btfsc	status,2,c
 21940  01B1A0  D002               	goto	l1909
 21941  01B1A2                     u21300:
 21942                           
 21943                           ; BSR set to: 2
 21944                           ;error_handling.c: 41: return 1;
 21945                           
 21946                           ; BSR set to: 2
 21947  01B1A2  0E01               	movlw	1
 21948                           
 21949                           ; BSR set to: 2
 21950                           ;error_handling.c: 43: }
 21951                           
 21952                           ; BSR set to: 2
 21953  01B1A4  0012               	return	
 21954  01B1A6                     l1909:
 21955                           
 21956                           ; BSR set to: 2
 21957                           ;error_handling.c: 45: else {
 21958                           ;error_handling.c: 47: return 0;
 21959                           
 21960                           ; BSR set to: 2
 21961  01B1A6  0E00               	movlw	0
 21962                           
 21963                           ; BSR set to: 2
 21964  01B1A8  0012               	return	
 21965  01B1AA                     __end_of_getCOMMError:
 21966                           	opt stack 0
 21967                           tblptru	equ	0xFF8
 21968                           tblptrh	equ	0xFF7
 21969                           tblptrl	equ	0xFF6
 21970                           tablat	equ	0xFF5
 21971                           prodh	equ	0xFF4
 21972                           prodl	equ	0xFF3
 21973                           intcon	equ	0xFF2
 21974                           indf0	equ	0xFEF
 21975                           postinc0	equ	0xFEE
 21976                           fsr0h	equ	0xFEA
 21977                           fsr0l	equ	0xFE9
 21978                           wreg	equ	0xFE8
 21979                           indf1	equ	0xFE7
 21980                           postdec1	equ	0xFE5
 21981                           plusw1	equ	0xFE3
 21982                           fsr1h	equ	0xFE2
 21983                           fsr1l	equ	0xFE1
 21984                           indf2	equ	0xFDF
 21985                           postinc2	equ	0xFDE
 21986                           postdec2	equ	0xFDD
 21987                           plusw2	equ	0xFDB
 21988                           fsr2h	equ	0xFDA
 21989                           fsr2l	equ	0xFD9
 21990                           status	equ	0xFD8
 21991                           
 21992 ;; *************** function _getADCError *****************
 21993 ;; Defined at:
 21994 ;;		line 11 in file "error_handling.c"
 21995 ;; Parameters:    Size  Location     Type
 21996 ;;		None
 21997 ;; Auto vars:     Size  Location     Type
 21998 ;;		None
 21999 ;; Return value:  Size  Location     Type
 22000 ;;                  1    wreg      unsigned char 
 22001 ;; Registers used:
 22002 ;;		wreg, status,2
 22003 ;; Tracked objects:
 22004 ;;		On entry : 0/0
 22005 ;;		On exit  : 0/0
 22006 ;;		Unchanged: 0/0
 22007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22012 ;;Total ram usage:        0 bytes
 22013 ;; Hardware stack levels used:    1
 22014 ;; Hardware stack levels required when called:   13
 22015 ;; This function calls:
 22016 ;;		Nothing
 22017 ;; This function is called by:
 22018 ;;		_ringBufferLUT
 22019 ;;		_updateErrorLEDs
 22020 ;; This function uses a non-reentrant model
 22021 ;;
 22022                           
 22023                           	psect	text24
 22024  01ACBA                     __ptext24:
 22025                           	opt stack 0
 22026  01ACBA                     _getADCError:
 22027                           	opt stack 16
 22028                           
 22029                           ;error_handling.c: 14: if ( error_handler.ADC_general_error_flag ||
 22030                           ;error_handling.c: 15: error_handler.AVSS_ADC_error_flag ||
 22031                           ;error_handling.c: 16: error_handler.FVR_ADC_error_flag ||
 22032                           ;error_handling.c: 17: error_handler.ISNS_ADC_error_flag ||
 22033                           ;error_handling.c: 18: error_handler.POS12_ADC_error_flag ||
 22034                           ;error_handling.c: 19: error_handler.POS3P3_ADC_error_flag ||
 22035                           ;error_handling.c: 20: error_handler.Temp_ADC_error_flag ) {
 22036                           
 22037                           ; BSR set to: 2
 22038                           ;incstack = 0
 22039  01ACBA  0102               	movlb	2	; () banked
 22040  01ACBC  5106               	movf	(_error_handler+6)& (0+255),w,b
 22041  01ACBE  A4D8               	btfss	status,2,c
 22042  01ACC0  D012               	goto	u21280
 22043                           
 22044                           ; BSR set to: 2
 22045  01ACC2  5103               	movf	(_error_handler+3)& (0+255),w,b
 22046  01ACC4  A4D8               	btfss	status,2,c
 22047  01ACC6  D00F               	goto	u21280
 22048                           
 22049                           ; BSR set to: 2
 22050  01ACC8  5105               	movf	(_error_handler+5)& (0+255),w,b
 22051  01ACCA  A4D8               	btfss	status,2,c
 22052  01ACCC  D00C               	goto	u21280
 22053                           
 22054                           ; BSR set to: 2
 22055  01ACCE  5100               	movf	_error_handler& (0+255),w,b
 22056  01ACD0  A4D8               	btfss	status,2,c
 22057  01ACD2  D009               	goto	u21280
 22058                           
 22059                           ; BSR set to: 2
 22060  01ACD4  5101               	movf	(_error_handler+1)& (0+255),w,b
 22061  01ACD6  A4D8               	btfss	status,2,c
 22062  01ACD8  D006               	goto	u21280
 22063                           
 22064                           ; BSR set to: 2
 22065  01ACDA  5102               	movf	(_error_handler+2)& (0+255),w,b
 22066  01ACDC  A4D8               	btfss	status,2,c
 22067  01ACDE  D003               	goto	u21280
 22068                           
 22069                           ; BSR set to: 2
 22070  01ACE0  5104               	movf	(_error_handler+4)& (0+255),w,b
 22071  01ACE2  B4D8               	btfsc	status,2,c
 22072  01ACE4  D002               	goto	l1902
 22073  01ACE6                     u21280:
 22074                           
 22075                           ; BSR set to: 2
 22076                           ;error_handling.c: 22: return 1;
 22077                           
 22078                           ; BSR set to: 2
 22079  01ACE6  0E01               	movlw	1
 22080                           
 22081                           ; BSR set to: 2
 22082                           ;error_handling.c: 24: }
 22083                           
 22084                           ; BSR set to: 2
 22085  01ACE8  0012               	return	
 22086  01ACEA                     l1902:
 22087                           
 22088                           ; BSR set to: 2
 22089                           ;error_handling.c: 26: else {
 22090                           ;error_handling.c: 28: return 0;
 22091                           
 22092                           ; BSR set to: 2
 22093  01ACEA  0E00               	movlw	0
 22094                           
 22095                           ; BSR set to: 2
 22096  01ACEC  0012               	return	
 22097  01ACEE                     __end_of_getADCError:
 22098                           	opt stack 0
 22099                           tblptru	equ	0xFF8
 22100                           tblptrh	equ	0xFF7
 22101                           tblptrl	equ	0xFF6
 22102                           tablat	equ	0xFF5
 22103                           prodh	equ	0xFF4
 22104                           prodl	equ	0xFF3
 22105                           intcon	equ	0xFF2
 22106                           indf0	equ	0xFEF
 22107                           postinc0	equ	0xFEE
 22108                           fsr0h	equ	0xFEA
 22109                           fsr0l	equ	0xFE9
 22110                           wreg	equ	0xFE8
 22111                           indf1	equ	0xFE7
 22112                           postdec1	equ	0xFE5
 22113                           plusw1	equ	0xFE3
 22114                           fsr1h	equ	0xFE2
 22115                           fsr1l	equ	0xFE1
 22116                           indf2	equ	0xFDF
 22117                           postinc2	equ	0xFDE
 22118                           postdec2	equ	0xFDD
 22119                           plusw2	equ	0xFDB
 22120                           fsr2h	equ	0xFDA
 22121                           fsr2l	equ	0xFD9
 22122                           status	equ	0xFD8
 22123                           
 22124 ;; *************** function _clearCOMMErrors *****************
 22125 ;; Defined at:
 22126 ;;		line 90 in file "error_handling.c"
 22127 ;; Parameters:    Size  Location     Type
 22128 ;;		None
 22129 ;; Auto vars:     Size  Location     Type
 22130 ;;		None
 22131 ;; Return value:  Size  Location     Type
 22132 ;;                  1    wreg      void 
 22133 ;; Registers used:
 22134 ;;		wreg, status,2
 22135 ;; Tracked objects:
 22136 ;;		On entry : 0/0
 22137 ;;		On exit  : 0/0
 22138 ;;		Unchanged: 0/0
 22139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22144 ;;Total ram usage:        0 bytes
 22145 ;; Hardware stack levels used:    1
 22146 ;; Hardware stack levels required when called:   13
 22147 ;; This function calls:
 22148 ;;		Nothing
 22149 ;; This function is called by:
 22150 ;;		_ringBufferLUT
 22151 ;; This function uses a non-reentrant model
 22152 ;;
 22153                           
 22154                           	psect	text25
 22155  01B24A                     __ptext25:
 22156                           	opt stack 0
 22157  01B24A                     _clearCOMMErrors:
 22158                           	opt stack 15
 22159                           
 22160                           ;error_handling.c: 93: error_handler.I2C_COMM_error_flag = 0;
 22161                           
 22162                           ; BSR set to: 2
 22163                           ;incstack = 0
 22164  01B24A  0E00               	movlw	0
 22165  01B24C  0102               	movlb	2	; () banked
 22166  01B24E  6F07               	movwf	(_error_handler+7)& (0+255),b
 22167                           
 22168                           ;error_handling.c: 94: error_handler.USB_UART_COMM_error_flag = 0;
 22169  01B250  0E00               	movlw	0
 22170  01B252  6F08               	movwf	(_error_handler+8)& (0+255),b
 22171                           
 22172                           ; BSR set to: 2
 22173                           ;error_handling.c: 97: LATFbits.LATF1 = 0;
 22174  01B254  927E               	bcf	3966,1,c	;volatile
 22175                           
 22176                           ; BSR set to: 2
 22177  01B256  0012               	return		;funcret
 22178  01B258                     __end_of_clearCOMMErrors:
 22179                           	opt stack 0
 22180                           tblptru	equ	0xFF8
 22181                           tblptrh	equ	0xFF7
 22182                           tblptrl	equ	0xFF6
 22183                           tablat	equ	0xFF5
 22184                           prodh	equ	0xFF4
 22185                           prodl	equ	0xFF3
 22186                           intcon	equ	0xFF2
 22187                           indf0	equ	0xFEF
 22188                           postinc0	equ	0xFEE
 22189                           fsr0h	equ	0xFEA
 22190                           fsr0l	equ	0xFE9
 22191                           wreg	equ	0xFE8
 22192                           indf1	equ	0xFE7
 22193                           postdec1	equ	0xFE5
 22194                           plusw1	equ	0xFE3
 22195                           fsr1h	equ	0xFE2
 22196                           fsr1l	equ	0xFE1
 22197                           indf2	equ	0xFDF
 22198                           postinc2	equ	0xFDE
 22199                           postdec2	equ	0xFDD
 22200                           plusw2	equ	0xFDB
 22201                           fsr2h	equ	0xFDA
 22202                           fsr2l	equ	0xFD9
 22203                           status	equ	0xFD8
 22204                           
 22205 ;; *************** function _clearADCErrors *****************
 22206 ;; Defined at:
 22207 ;;		line 73 in file "error_handling.c"
 22208 ;; Parameters:    Size  Location     Type
 22209 ;;		None
 22210 ;; Auto vars:     Size  Location     Type
 22211 ;;		None
 22212 ;; Return value:  Size  Location     Type
 22213 ;;                  1    wreg      void 
 22214 ;; Registers used:
 22215 ;;		wreg, status,2
 22216 ;; Tracked objects:
 22217 ;;		On entry : 0/0
 22218 ;;		On exit  : 0/0
 22219 ;;		Unchanged: 0/0
 22220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22225 ;;Total ram usage:        0 bytes
 22226 ;; Hardware stack levels used:    1
 22227 ;; Hardware stack levels required when called:   13
 22228 ;; This function calls:
 22229 ;;		Nothing
 22230 ;; This function is called by:
 22231 ;;		_ringBufferLUT
 22232 ;; This function uses a non-reentrant model
 22233 ;;
 22234                           
 22235                           	psect	text26
 22236  01AFEE                     __ptext26:
 22237                           	opt stack 0
 22238  01AFEE                     _clearADCErrors:
 22239                           	opt stack 15
 22240                           
 22241                           ;error_handling.c: 76: error_handler.ISNS_ADC_error_flag = 0;
 22242                           
 22243                           ; BSR set to: 2
 22244                           ;incstack = 0
 22245  01AFEE  0E00               	movlw	0
 22246  01AFF0  0102               	movlb	2	; () banked
 22247  01AFF2  6F00               	movwf	_error_handler& (0+255),b
 22248                           
 22249                           ;error_handling.c: 77: error_handler.POS12_ADC_error_flag = 0;
 22250  01AFF4  0E00               	movlw	0
 22251  01AFF6  6F01               	movwf	(_error_handler+1)& (0+255),b
 22252                           
 22253                           ;error_handling.c: 78: error_handler.POS3P3_ADC_error_flag = 0;
 22254  01AFF8  0E00               	movlw	0
 22255  01AFFA  6F02               	movwf	(_error_handler+2)& (0+255),b
 22256                           
 22257                           ;error_handling.c: 79: error_handler.AVSS_ADC_error_flag = 0;
 22258  01AFFC  0E00               	movlw	0
 22259  01AFFE  6F03               	movwf	(_error_handler+3)& (0+255),b
 22260                           
 22261                           ;error_handling.c: 80: error_handler.Temp_ADC_error_flag = 0;
 22262  01B000  0E00               	movlw	0
 22263  01B002  6F04               	movwf	(_error_handler+4)& (0+255),b
 22264                           
 22265                           ;error_handling.c: 81: error_handler.FVR_ADC_error_flag = 0;
 22266  01B004  0E00               	movlw	0
 22267  01B006  6F05               	movwf	(_error_handler+5)& (0+255),b
 22268                           
 22269                           ;error_handling.c: 82: error_handler.ADC_general_error_flag = 0;
 22270  01B008  0E00               	movlw	0
 22271  01B00A  6F06               	movwf	(_error_handler+6)& (0+255),b
 22272                           
 22273                           ; BSR set to: 2
 22274                           ;error_handling.c: 85: LATFbits.LATF3 = 0;
 22275  01B00C  967E               	bcf	3966,3,c	;volatile
 22276                           
 22277                           ; BSR set to: 2
 22278  01B00E  0012               	return		;funcret
 22279  01B010                     __end_of_clearADCErrors:
 22280                           	opt stack 0
 22281                           tblptru	equ	0xFF8
 22282                           tblptrh	equ	0xFF7
 22283                           tblptrl	equ	0xFF6
 22284                           tablat	equ	0xFF5
 22285                           prodh	equ	0xFF4
 22286                           prodl	equ	0xFF3
 22287                           intcon	equ	0xFF2
 22288                           indf0	equ	0xFEF
 22289                           postinc0	equ	0xFEE
 22290                           fsr0h	equ	0xFEA
 22291                           fsr0l	equ	0xFE9
 22292                           wreg	equ	0xFE8
 22293                           indf1	equ	0xFE7
 22294                           postdec1	equ	0xFE5
 22295                           plusw1	equ	0xFE3
 22296                           fsr1h	equ	0xFE2
 22297                           fsr1l	equ	0xFE1
 22298                           indf2	equ	0xFDF
 22299                           postinc2	equ	0xFDE
 22300                           postdec2	equ	0xFDD
 22301                           plusw2	equ	0xFDB
 22302                           fsr2h	equ	0xFDA
 22303                           fsr2l	equ	0xFD9
 22304                           status	equ	0xFD8
 22305                           
 22306 ;; *************** function _atoi *****************
 22307 ;; Defined at:
 22308 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 22309 ;; Parameters:    Size  Location     Type
 22310 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 22311 ;;		 -> ringBufferLUT@arg_buff(3), 
 22312 ;; Auto vars:     Size  Location     Type
 22313 ;;  a               2   34[BANK1 ] int 
 22314 ;;  sign            1   33[BANK1 ] unsigned char 
 22315 ;; Return value:  Size  Location     Type
 22316 ;;                  2   29[BANK1 ] int 
 22317 ;; Registers used:
 22318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22319 ;; Tracked objects:
 22320 ;;		On entry : 0/0
 22321 ;;		On exit  : 0/0
 22322 ;;		Unchanged: 0/0
 22323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22324 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22325 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22326 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22327 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22328 ;;Total ram usage:        7 bytes
 22329 ;; Hardware stack levels used:    1
 22330 ;; Hardware stack levels required when called:   14
 22331 ;; This function calls:
 22332 ;;		___wmul
 22333 ;;		_isdigit
 22334 ;; This function is called by:
 22335 ;;		_ringBufferLUT
 22336 ;; This function uses a non-reentrant model
 22337 ;;
 22338                           
 22339                           	psect	text27
 22340  019434                     __ptext27:
 22341                           	opt stack 0
 22342  019434                     _atoi:
 22343                           	opt stack 14
 22344                           
 22345                           ; BSR set to: 2
 22346                           ;incstack = 0
 22347  019434  D003               	goto	l2340
 22348  019436  0101               	movlb	1	; () banked
 22349  019438  4B1D               	infsnz	atoi@s& (0+255),f,b
 22350  01943A  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 22351  01943C                     l2340:
 22352                           
 22353                           ; BSR set to: 1
 22354  01943C  C11D  FFD9         	movff	atoi@s,fsr2l
 22355  019440  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22356  019444  0E20               	movlw	32
 22357  019446  18DE               	xorwf	postinc2,w,c
 22358  019448  B4D8               	btfsc	status,2,c
 22359  01944A  D7F5               	goto	l2341
 22360  01944C  C11D  FFD9         	movff	atoi@s,fsr2l
 22361  019450  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22362  019454  0E09               	movlw	9
 22363  019456  18DE               	xorwf	postinc2,w,c
 22364  019458  B4D8               	btfsc	status,2,c
 22365  01945A  D7ED               	goto	l2341
 22366  01945C  0E00               	movlw	0
 22367  01945E  0101               	movlb	1	; () banked
 22368  019460  6F23               	movwf	(atoi@a+1)& (0+255),b
 22369  019462  0E00               	movlw	0
 22370  019464  6F22               	movwf	atoi@a& (0+255),b
 22371  019466  0E00               	movlw	0
 22372  019468  6F21               	movwf	atoi@sign& (0+255),b
 22373                           
 22374                           ; BSR set to: 1
 22375  01946A  C11D  FFD9         	movff	atoi@s,fsr2l
 22376  01946E  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22377  019472  0E2D               	movlw	45
 22378  019474  18DE               	xorwf	postinc2,w,c
 22379  019476  A4D8               	btfss	status,2,c
 22380  019478  D002               	goto	l2343
 22381                           
 22382                           ; BSR set to: 1
 22383  01947A  2B21               	incf	atoi@sign& (0+255),f,b
 22384  01947C  D026               	goto	l16521
 22385  01947E                     l2343:
 22386                           
 22387                           ; BSR set to: 1
 22388                           
 22389                           ; BSR set to: 1
 22390  01947E  C11D  FFD9         	movff	atoi@s,fsr2l
 22391  019482  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22392  019486  0E2B               	movlw	43
 22393  019488  18DE               	xorwf	postinc2,w,c
 22394  01948A  A4D8               	btfss	status,2,c
 22395  01948C  D020               	goto	l2346
 22396  01948E  D01D               	goto	l16521
 22397  019490                     
 22398                           ; BSR set to: 1
 22399  019490  C122  F117         	movff	atoi@a,___wmul@multiplier
 22400  019494  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 22401  019498  0E00               	movlw	0
 22402  01949A  0101               	movlb	1	; () banked
 22403  01949C  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22404  01949E  0E0A               	movlw	10
 22405  0194A0  6F19               	movwf	___wmul@multiplicand& (0+255),b
 22406  0194A2  EC38  F0D7         	call	___wmul	;wreg free
 22407  0194A6  C11D  FFD9         	movff	atoi@s,fsr2l
 22408  0194AA  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22409  0194AE  50DF               	movf	indf2,w,c
 22410  0194B0  0101               	movlb	1	; () banked
 22411  0194B2  6F1F               	movwf	??_atoi& (0+255),b
 22412  0194B4  6B20               	clrf	(??_atoi+1)& (0+255),b
 22413  0194B6  5117               	movf	?___wmul& (0+255),w,b
 22414  0194B8  271F               	addwf	??_atoi& (0+255),f,b
 22415  0194BA  5118               	movf	(?___wmul+1)& (0+255),w,b
 22416  0194BC  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 22417  0194BE  0ED0               	movlw	208
 22418  0194C0  251F               	addwf	??_atoi& (0+255),w,b
 22419  0194C2  6F22               	movwf	atoi@a& (0+255),b
 22420  0194C4  0EFF               	movlw	255
 22421  0194C6  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 22422  0194C8  6F23               	movwf	(atoi@a+1)& (0+255),b
 22423  0194CA                     l16521:
 22424                           
 22425                           ; BSR set to: 1
 22426  0194CA  4B1D               	infsnz	atoi@s& (0+255),f,b
 22427  0194CC  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 22428  0194CE                     l2346:
 22429                           
 22430                           ; BSR set to: 1
 22431                           
 22432                           ; BSR set to: 1
 22433  0194CE  C11D  FFD9         	movff	atoi@s,fsr2l
 22434  0194D2  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22435  0194D6  50DF               	movf	indf2,w,c
 22436  0194D8  EC08  F0D8         	call	_isdigit
 22437  0194DC  B0D8               	btfsc	status,0,c
 22438  0194DE  D7D8               	goto	l2347
 22439  0194E0  0101               	movlb	1	; () banked
 22440  0194E2  5121               	movf	atoi@sign& (0+255),w,b
 22441  0194E4  B4D8               	btfsc	status,2,c
 22442  0194E6  D00D               	goto	l2349
 22443                           
 22444                           ; BSR set to: 1
 22445  0194E8  C122  F11F         	movff	atoi@a,??_atoi
 22446  0194EC  C123  F120         	movff	atoi@a+1,??_atoi+1
 22447  0194F0  1F1F               	comf	??_atoi& (0+255),f,b
 22448  0194F2  1F20               	comf	(??_atoi+1)& (0+255),f,b
 22449  0194F4  4B1F               	infsnz	??_atoi& (0+255),f,b
 22450  0194F6  2B20               	incf	(??_atoi+1)& (0+255),f,b
 22451  0194F8  C11F  F11D         	movff	??_atoi,?_atoi
 22452  0194FC  C120  F11E         	movff	??_atoi+1,?_atoi+1
 22453  019500  0012               	return	
 22454  019502                     l2349:
 22455                           
 22456                           ; BSR set to: 1
 22457  019502  C122  F11D         	movff	atoi@a,?_atoi
 22458  019506  C123  F11E         	movff	atoi@a+1,?_atoi+1
 22459                           
 22460                           ; BSR set to: 1
 22461  01950A  0012               	return		;funcret
 22462  01950C                     __end_of_atoi:
 22463                           	opt stack 0
 22464                           tblptru	equ	0xFF8
 22465                           tblptrh	equ	0xFF7
 22466                           tblptrl	equ	0xFF6
 22467                           tablat	equ	0xFF5
 22468                           prodh	equ	0xFF4
 22469                           prodl	equ	0xFF3
 22470                           intcon	equ	0xFF2
 22471                           indf0	equ	0xFEF
 22472                           postinc0	equ	0xFEE
 22473                           fsr0h	equ	0xFEA
 22474                           fsr0l	equ	0xFE9
 22475                           wreg	equ	0xFE8
 22476                           indf1	equ	0xFE7
 22477                           postdec1	equ	0xFE5
 22478                           plusw1	equ	0xFE3
 22479                           fsr1h	equ	0xFE2
 22480                           fsr1l	equ	0xFE1
 22481                           indf2	equ	0xFDF
 22482                           postinc2	equ	0xFDE
 22483                           postdec2	equ	0xFDD
 22484                           plusw2	equ	0xFDB
 22485                           fsr2h	equ	0xFDA
 22486                           fsr2l	equ	0xFD9
 22487                           status	equ	0xFD8
 22488                           
 22489 ;; *************** function ___fldiv *****************
 22490 ;; Defined at:
 22491 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 22492 ;; Parameters:    Size  Location     Type
 22493 ;;  b               4   61[BANK1 ] int 
 22494 ;;  a               4   65[BANK1 ] int 
 22495 ;; Auto vars:     Size  Location     Type
 22496 ;;  grs             4   80[BANK1 ] unsigned long 
 22497 ;;  rem             4   74[BANK1 ] unsigned long 
 22498 ;;  new_exp         2   78[BANK1 ] int 
 22499 ;;  aexp            1   85[BANK1 ] unsigned char 
 22500 ;;  bexp            1   84[BANK1 ] unsigned char 
 22501 ;;  sign            1   73[BANK1 ] unsigned char 
 22502 ;; Return value:  Size  Location     Type
 22503 ;;                  4   61[BANK1 ] unsigned char 
 22504 ;; Registers used:
 22505 ;;		wreg, status,2, status,0
 22506 ;; Tracked objects:
 22507 ;;		On entry : 0/0
 22508 ;;		On exit  : 0/0
 22509 ;;		Unchanged: 0/0
 22510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22511 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22512 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22513 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22514 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22515 ;;Total ram usage:       25 bytes
 22516 ;; Hardware stack levels used:    1
 22517 ;; Hardware stack levels required when called:   13
 22518 ;; This function calls:
 22519 ;;		Nothing
 22520 ;; This function is called by:
 22521 ;;		_ringBufferLUT
 22522 ;; This function uses a non-reentrant model
 22523 ;;
 22524                           
 22525                           	psect	text28
 22526  0170EA                     __ptext28:
 22527                           	opt stack 0
 22528  0170EA                     ___fldiv:
 22529                           	opt stack 15
 22530                           
 22531                           ; BSR set to: 1
 22532                           ;incstack = 0
 22533  0170EA  0101               	movlb	1	; () banked
 22534  0170EC  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 22535  0170EE  0B80               	andlw	128
 22536  0170F0  6F49               	movwf	___fldiv@sign& (0+255),b
 22537  0170F2  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 22538  0170F4  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 22539  0170F6  6F54               	movwf	___fldiv@bexp& (0+255),b
 22540                           
 22541                           ; BSR set to: 1
 22542  0170F8  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 22543                           
 22544                           ; BSR set to: 1
 22545  0170FA  8154               	bsf	___fldiv@bexp& (0+255),0,b
 22546                           
 22547                           ; BSR set to: 1
 22548                           
 22549                           ; BSR set to: 1
 22550  0170FC  5154               	movf	___fldiv@bexp& (0+255),w,b
 22551  0170FE  B4D8               	btfsc	status,2,c
 22552  017100  D00D               	goto	l2788
 22553                           
 22554                           ; BSR set to: 1
 22555  017102  2954               	incf	___fldiv@bexp& (0+255),w,b
 22556  017104  A4D8               	btfss	status,2,c
 22557  017106  D008               	goto	l2789
 22558                           
 22559                           ; BSR set to: 1
 22560  017108  0E00               	movlw	0
 22561  01710A  6F3D               	movwf	___fldiv@b& (0+255),b
 22562  01710C  0E00               	movlw	0
 22563  01710E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22564  017110  0E00               	movlw	0
 22565  017112  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22566  017114  0E00               	movlw	0
 22567  017116  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22568  017118                     l2789:
 22569                           
 22570                           ; BSR set to: 1
 22571                           
 22572                           ; BSR set to: 1
 22573  017118  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 22574  01711A  D006               	goto	L1
 22575  01711C                     l2788:
 22576                           
 22577                           ; BSR set to: 1
 22578                           
 22579                           ; BSR set to: 1
 22580  01711C  0E00               	movlw	0
 22581  01711E  6F3D               	movwf	___fldiv@b& (0+255),b
 22582  017120  0E00               	movlw	0
 22583  017122  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22584  017124  0E00               	movlw	0
 22585  017126  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22586  017128                     L1:
 22587  017128  0E00               	movlw	0
 22588  01712A  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22589                           
 22590                           ; BSR set to: 1
 22591                           
 22592                           ; BSR set to: 1
 22593  01712C  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22594  01712E  0B80               	andlw	128
 22595  017130  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 22596                           
 22597                           ; BSR set to: 1
 22598  017132  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22599  017134  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 22600  017136  6F55               	movwf	___fldiv@aexp& (0+255),b
 22601                           
 22602                           ; BSR set to: 1
 22603  017138  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 22604                           
 22605                           ; BSR set to: 1
 22606  01713A  8155               	bsf	___fldiv@aexp& (0+255),0,b
 22607                           
 22608                           ; BSR set to: 1
 22609                           
 22610                           ; BSR set to: 1
 22611  01713C  5155               	movf	___fldiv@aexp& (0+255),w,b
 22612  01713E  B4D8               	btfsc	status,2,c
 22613  017140  D00D               	goto	l2792
 22614                           
 22615                           ; BSR set to: 1
 22616  017142  2955               	incf	___fldiv@aexp& (0+255),w,b
 22617  017144  A4D8               	btfss	status,2,c
 22618  017146  D008               	goto	l2793
 22619                           
 22620                           ; BSR set to: 1
 22621  017148  0E00               	movlw	0
 22622  01714A  6F41               	movwf	___fldiv@a& (0+255),b
 22623  01714C  0E00               	movlw	0
 22624  01714E  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 22625  017150  0E00               	movlw	0
 22626  017152  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 22627  017154  0E00               	movlw	0
 22628  017156  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 22629  017158                     l2793:
 22630                           
 22631                           ; BSR set to: 1
 22632                           
 22633                           ; BSR set to: 1
 22634  017158  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 22635  01715A  D006               	goto	L2
 22636  01715C                     l2792:
 22637                           
 22638                           ; BSR set to: 1
 22639                           
 22640                           ; BSR set to: 1
 22641  01715C  0E00               	movlw	0
 22642  01715E  6F41               	movwf	___fldiv@a& (0+255),b
 22643  017160  0E00               	movlw	0
 22644  017162  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 22645  017164  0E00               	movlw	0
 22646  017166  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 22647  017168                     L2:
 22648  017168  0E00               	movlw	0
 22649  01716A  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 22650                           
 22651                           ; BSR set to: 1
 22652                           
 22653                           ; BSR set to: 1
 22654  01716C  5141               	movf	___fldiv@a& (0+255),w,b
 22655  01716E  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 22656  017170  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 22657  017172  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 22658  017174  A4D8               	btfss	status,2,c
 22659  017176  D015               	goto	l2795
 22660                           
 22661                           ; BSR set to: 1
 22662  017178  0E00               	movlw	0
 22663  01717A  6F3D               	movwf	___fldiv@b& (0+255),b
 22664  01717C  0E00               	movlw	0
 22665  01717E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22666  017180  0E00               	movlw	0
 22667  017182  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22668  017184  0E00               	movlw	0
 22669  017186  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22670                           
 22671                           ; BSR set to: 1
 22672  017188  0E80               	movlw	128
 22673  01718A  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 22674  01718C  0E7F               	movlw	127
 22675  01718E  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22676                           
 22677                           ; BSR set to: 1
 22678  017190  C13D  F13D         	movff	___fldiv@b,?___fldiv
 22679  017194  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 22680  017198  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 22681  01719C  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 22682                           
 22683                           ; BSR set to: 1
 22684  0171A0  0012               	return	
 22685  0171A2                     l2795:
 22686                           
 22687                           ; BSR set to: 1
 22688                           
 22689                           ; BSR set to: 1
 22690  0171A2  5154               	movf	___fldiv@bexp& (0+255),w,b
 22691  0171A4  A4D8               	btfss	status,2,c
 22692  0171A6  D011               	goto	l2797
 22693                           
 22694                           ; BSR set to: 1
 22695  0171A8  0E00               	movlw	0
 22696  0171AA  6F3D               	movwf	___fldiv@b& (0+255),b
 22697  0171AC  0E00               	movlw	0
 22698  0171AE  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22699  0171B0  0E00               	movlw	0
 22700  0171B2  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22701  0171B4  0E00               	movlw	0
 22702  0171B6  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22703                           
 22704                           ; BSR set to: 1
 22705  0171B8  C13D  F13D         	movff	___fldiv@b,?___fldiv
 22706  0171BC  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 22707  0171C0  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 22708  0171C4  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 22709                           
 22710                           ; BSR set to: 1
 22711  0171C8  0012               	return	
 22712  0171CA                     l2797:
 22713                           
 22714                           ; BSR set to: 1
 22715                           
 22716                           ; BSR set to: 1
 22717  0171CA  5155               	movf	___fldiv@aexp& (0+255),w,b
 22718  0171CC  6F45               	movwf	??___fldiv& (0+255),b
 22719  0171CE  6B46               	clrf	(??___fldiv+1)& (0+255),b
 22720  0171D0  1F45               	comf	??___fldiv& (0+255),f,b
 22721  0171D2  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 22722  0171D4  4B45               	infsnz	??___fldiv& (0+255),f,b
 22723  0171D6  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 22724  0171D8  5154               	movf	___fldiv@bexp& (0+255),w,b
 22725  0171DA  6F47               	movwf	(??___fldiv+2)& (0+255),b
 22726  0171DC  6B48               	clrf	(??___fldiv+3)& (0+255),b
 22727  0171DE  5145               	movf	??___fldiv& (0+255),w,b
 22728  0171E0  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 22729  0171E2  5146               	movf	(??___fldiv+1)& (0+255),w,b
 22730  0171E4  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 22731  0171E6  0E7F               	movlw	127
 22732  0171E8  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 22733  0171EA  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 22734  0171EC  0E00               	movlw	0
 22735  0171EE  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 22736  0171F0  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22737                           
 22738                           ; BSR set to: 1
 22739  0171F2  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 22740  0171F6  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 22741  0171FA  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 22742  0171FE  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 22743                           
 22744                           ; BSR set to: 1
 22745  017202  0E00               	movlw	0
 22746  017204  6F3D               	movwf	___fldiv@b& (0+255),b
 22747  017206  0E00               	movlw	0
 22748  017208  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22749  01720A  0E00               	movlw	0
 22750  01720C  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22751  01720E  0E00               	movlw	0
 22752  017210  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22753                           
 22754                           ; BSR set to: 1
 22755  017212  0E00               	movlw	0
 22756  017214  6F50               	movwf	___fldiv@grs& (0+255),b
 22757  017216  0E00               	movlw	0
 22758  017218  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 22759  01721A  0E00               	movlw	0
 22760  01721C  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 22761  01721E  0E00               	movlw	0
 22762  017220  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 22763                           
 22764                           ; BSR set to: 1
 22765  017222  0E00               	movlw	0
 22766  017224  6F55               	movwf	___fldiv@aexp& (0+255),b
 22767  017226  D028               	goto	l2798
 22768  017228                     
 22769                           ; BSR set to: 1
 22770                           
 22771                           ; BSR set to: 1
 22772  017228  5155               	movf	___fldiv@aexp& (0+255),w,b
 22773  01722A  B4D8               	btfsc	status,2,c
 22774  01722C  D011               	goto	l2800
 22775                           
 22776                           ; BSR set to: 1
 22777  01722E  90D8               	bcf	status,0,c
 22778  017230  374A               	rlcf	___fldiv@rem& (0+255),f,b
 22779  017232  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 22780  017234  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 22781  017236  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 22782  017238  90D8               	bcf	status,0,c
 22783  01723A  373D               	rlcf	___fldiv@b& (0+255),f,b
 22784  01723C  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22785  01723E  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22786  017240  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22787                           
 22788                           ; BSR set to: 1
 22789  017242  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22790                           
 22791                           ; BSR set to: 1
 22792  017244  813D               	bsf	___fldiv@b& (0+255),0,b
 22793                           
 22794                           ; BSR set to: 1
 22795  017246  90D8               	bcf	status,0,c
 22796  017248  3750               	rlcf	___fldiv@grs& (0+255),f,b
 22797  01724A  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22798  01724C  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22799  01724E  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22800  017250                     l2800:
 22801                           
 22802                           ; BSR set to: 1
 22803                           
 22804                           ; BSR set to: 1
 22805  017250  5141               	movf	___fldiv@a& (0+255),w,b
 22806  017252  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 22807  017254  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 22808  017256  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 22809  017258  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 22810  01725A  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 22811  01725C  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22812  01725E  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 22813  017260  A0D8               	btfss	status,0,c
 22814  017262  D009               	goto	l2802
 22815                           
 22816                           ; BSR set to: 1
 22817  017264  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 22818                           
 22819                           ; BSR set to: 1
 22820  017266  5141               	movf	___fldiv@a& (0+255),w,b
 22821  017268  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 22822  01726A  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 22823  01726C  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 22824  01726E  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 22825  017270  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 22826  017272  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22827  017274  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 22828  017276                     l2802:
 22829                           
 22830                           ; BSR set to: 1
 22831                           
 22832                           ; BSR set to: 1
 22833  017276  2B55               	incf	___fldiv@aexp& (0+255),f,b
 22834  017278                     l2798:
 22835                           
 22836                           ; BSR set to: 1
 22837  017278  0E19               	movlw	25
 22838  01727A  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 22839  01727C  D7D5               	goto	l2799
 22840                           
 22841                           ; BSR set to: 1
 22842                           
 22843                           ; BSR set to: 1
 22844  01727E  514A               	movf	___fldiv@rem& (0+255),w,b
 22845  017280  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 22846  017282  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 22847  017284  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 22848  017286  B4D8               	btfsc	status,2,c
 22849  017288  D011               	goto	l2805
 22850                           
 22851                           ; BSR set to: 1
 22852  01728A  8150               	bsf	___fldiv@grs& (0+255),0,b
 22853                           
 22854                           ; BSR set to: 1
 22855  01728C  D00F               	goto	l2805
 22856  01728E                     
 22857                           ; BSR set to: 1
 22858                           
 22859                           ; BSR set to: 1
 22860  01728E  90D8               	bcf	status,0,c
 22861  017290  373D               	rlcf	___fldiv@b& (0+255),f,b
 22862  017292  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22863  017294  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22864  017296  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22865                           
 22866                           ; BSR set to: 1
 22867  017298  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22868                           
 22869                           ; BSR set to: 1
 22870  01729A  813D               	bsf	___fldiv@b& (0+255),0,b
 22871                           
 22872                           ; BSR set to: 1
 22873  01729C  90D8               	bcf	status,0,c
 22874  01729E  3750               	rlcf	___fldiv@grs& (0+255),f,b
 22875  0172A0  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22876  0172A2  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22877  0172A4  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22878  0172A6  074E               	decf	___fldiv@new_exp& (0+255),f,b
 22879  0172A8  A0D8               	btfss	status,0,c
 22880  0172AA  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 22881  0172AC                     l2805:
 22882                           
 22883                           ; BSR set to: 1
 22884                           
 22885                           ; BSR set to: 1
 22886  0172AC  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 22887  0172AE  D7EF               	goto	l2806
 22888                           
 22889                           ; BSR set to: 1
 22890                           
 22891                           ; BSR set to: 1
 22892  0172B0  0E00               	movlw	0
 22893  0172B2  6F55               	movwf	___fldiv@aexp& (0+255),b
 22894                           
 22895                           ; BSR set to: 1
 22896  0172B4  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 22897  0172B6  D016               	goto	l2812
 22898                           
 22899                           ; BSR set to: 1
 22900  0172B8  0EFF               	movlw	255
 22901  0172BA  1550               	andwf	___fldiv@grs& (0+255),w,b
 22902  0172BC  6F45               	movwf	??___fldiv& (0+255),b
 22903  0172BE  0EFF               	movlw	255
 22904  0172C0  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 22905  0172C2  6F46               	movwf	(??___fldiv+1)& (0+255),b
 22906  0172C4  0EFF               	movlw	255
 22907  0172C6  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 22908  0172C8  6F47               	movwf	(??___fldiv+2)& (0+255),b
 22909  0172CA  0E7F               	movlw	127
 22910  0172CC  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 22911  0172CE  6F48               	movwf	(??___fldiv+3)& (0+255),b
 22912  0172D0  5145               	movf	??___fldiv& (0+255),w,b
 22913  0172D2  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 22914  0172D4  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 22915  0172D6  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 22916  0172D8  A4D8               	btfss	status,2,c
 22917  0172DA  D002               	goto	u21710
 22918                           
 22919                           ; BSR set to: 1
 22920                           
 22921                           ; BSR set to: 1
 22922  0172DC  A13D               	btfss	___fldiv@b& (0+255),0,b
 22923  0172DE  D002               	goto	l2812
 22924  0172E0                     u21710:
 22925                           
 22926                           ; BSR set to: 1
 22927  0172E0  0E01               	movlw	1
 22928  0172E2  6F55               	movwf	___fldiv@aexp& (0+255),b
 22929  0172E4                     l2812:
 22930                           
 22931                           ; BSR set to: 1
 22932                           
 22933                           ; BSR set to: 1
 22934                           
 22935                           ; BSR set to: 1
 22936  0172E4  5155               	movf	___fldiv@aexp& (0+255),w,b
 22937  0172E6  B4D8               	btfsc	status,2,c
 22938  0172E8  D01F               	goto	l2814
 22939                           
 22940                           ; BSR set to: 1
 22941  0172EA  0E01               	movlw	1
 22942  0172EC  273D               	addwf	___fldiv@b& (0+255),f,b
 22943  0172EE  0E00               	movlw	0
 22944  0172F0  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 22945  0172F2  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 22946  0172F4  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 22947                           
 22948                           ; BSR set to: 1
 22949  0172F6  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 22950  0172F8  D017               	goto	l2814
 22951                           
 22952                           ; BSR set to: 1
 22953  0172FA  C13D  F145         	movff	___fldiv@b,??___fldiv
 22954  0172FE  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 22955  017302  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 22956  017306  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 22957  01730A  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 22958  01730C  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 22959  01730E  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 22960  017310  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 22961  017312  3345               	rrcf	??___fldiv& (0+255),f,b
 22962  017314  C145  F13D         	movff	??___fldiv,___fldiv@b
 22963  017318  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 22964  01731C  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 22965  017320  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 22966                           
 22967                           ; BSR set to: 1
 22968  017324  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 22969  017326  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 22970  017328                     l2814:
 22971                           
 22972                           ; BSR set to: 1
 22973                           
 22974                           ; BSR set to: 1
 22975                           
 22976                           ; BSR set to: 1
 22977  017328  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 22978  01732A  D010               	goto	l2815
 22979  01732C  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 22980  01732E  E103               	bnz	u21740
 22981  017330  294E               	incf	___fldiv@new_exp& (0+255),w,b
 22982  017332  A0D8               	btfss	status,0,c
 22983  017334  D00B               	goto	l2815
 22984  017336                     u21740:
 22985                           
 22986                           ; BSR set to: 1
 22987  017336  0E00               	movlw	0
 22988  017338  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22989  01733A  694E               	setf	___fldiv@new_exp& (0+255),b
 22990  01733C  0E00               	movlw	0
 22991  01733E  6F3D               	movwf	___fldiv@b& (0+255),b
 22992  017340  0E00               	movlw	0
 22993  017342  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22994  017344  0E00               	movlw	0
 22995  017346  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22996  017348  0E00               	movlw	0
 22997  01734A  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22998  01734C                     l2815:
 22999                           
 23000                           ; BSR set to: 1
 23001                           
 23002                           ; BSR set to: 1
 23003  01734C  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 23004  01734E  D005               	goto	u21750
 23005  017350  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 23006  017352  E111               	bnz	l16699
 23007  017354  054E               	decf	___fldiv@new_exp& (0+255),w,b
 23008  017356  B0D8               	btfsc	status,0,c
 23009  017358  D00E               	goto	l2816
 23010  01735A                     u21750:
 23011                           
 23012                           ; BSR set to: 1
 23013  01735A  0E00               	movlw	0
 23014  01735C  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 23015  01735E  0E00               	movlw	0
 23016  017360  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 23017  017362  0E00               	movlw	0
 23018  017364  6F3D               	movwf	___fldiv@b& (0+255),b
 23019  017366  0E00               	movlw	0
 23020  017368  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 23021  01736A  0E00               	movlw	0
 23022  01736C  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 23023  01736E  0E00               	movlw	0
 23024  017370  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 23025  017372  0E00               	movlw	0
 23026  017374  6F49               	movwf	___fldiv@sign& (0+255),b
 23027  017376                     l2816:
 23028  017376                     l16699:
 23029                           
 23030                           ; BSR set to: 1
 23031  017376  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 23032                           
 23033                           ; BSR set to: 1
 23034  01737A  A154               	btfss	___fldiv@bexp& (0+255),0,b
 23035  01737C  D002               	goto	l2817
 23036                           
 23037                           ; BSR set to: 1
 23038  01737E  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 23039  017380  D001               	goto	l2818
 23040  017382                     l2817:
 23041                           
 23042                           ; BSR set to: 1
 23043                           
 23044                           ; BSR set to: 1
 23045  017382  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 23046  017384                     l2818:
 23047                           
 23048                           ; BSR set to: 1
 23049                           
 23050                           ; BSR set to: 1
 23051  017384  90D8               	bcf	status,0,c
 23052  017386  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 23053  017388  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 23054                           
 23055                           ; BSR set to: 1
 23056  01738A  5149               	movf	___fldiv@sign& (0+255),w,b
 23057  01738C  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 23058                           
 23059                           ; BSR set to: 1
 23060  01738E  C13D  F13D         	movff	___fldiv@b,?___fldiv
 23061  017392  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 23062  017396  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 23063  01739A  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 23064  01739E  0012               	return	
 23065  0173A0                     __end_of___fldiv:
 23066                           	opt stack 0
 23067                           tblptru	equ	0xFF8
 23068                           tblptrh	equ	0xFF7
 23069                           tblptrl	equ	0xFF6
 23070                           tablat	equ	0xFF5
 23071                           prodh	equ	0xFF4
 23072                           prodl	equ	0xFF3
 23073                           intcon	equ	0xFF2
 23074                           indf0	equ	0xFEF
 23075                           postinc0	equ	0xFEE
 23076                           fsr0h	equ	0xFEA
 23077                           fsr0l	equ	0xFE9
 23078                           wreg	equ	0xFE8
 23079                           indf1	equ	0xFE7
 23080                           postdec1	equ	0xFE5
 23081                           plusw1	equ	0xFE3
 23082                           fsr1h	equ	0xFE2
 23083                           fsr1l	equ	0xFE1
 23084                           indf2	equ	0xFDF
 23085                           postinc2	equ	0xFDE
 23086                           postdec2	equ	0xFDD
 23087                           plusw2	equ	0xFDB
 23088                           fsr2h	equ	0xFDA
 23089                           fsr2l	equ	0xFD9
 23090                           status	equ	0xFD8
 23091                           
 23092 ;; *************** function _TMR5_StopTimer *****************
 23093 ;; Defined at:
 23094 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 23095 ;; Parameters:    Size  Location     Type
 23096 ;;		None
 23097 ;; Auto vars:     Size  Location     Type
 23098 ;;		None
 23099 ;; Return value:  Size  Location     Type
 23100 ;;                  1    wreg      void 
 23101 ;; Registers used:
 23102 ;;		None
 23103 ;; Tracked objects:
 23104 ;;		On entry : 0/0
 23105 ;;		On exit  : 0/0
 23106 ;;		Unchanged: 0/0
 23107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23112 ;;Total ram usage:        0 bytes
 23113 ;; Hardware stack levels used:    1
 23114 ;; Hardware stack levels required when called:   13
 23115 ;; This function calls:
 23116 ;;		Nothing
 23117 ;; This function is called by:
 23118 ;;		_main
 23119 ;;		_ringBufferLUT
 23120 ;; This function uses a non-reentrant model
 23121 ;;
 23122                           
 23123                           	psect	text29
 23124  01B32E                     __ptext29:
 23125                           	opt stack 0
 23126  01B32E                     _TMR5_StopTimer:
 23127                           	opt stack 15
 23128                           
 23129                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 23130                           
 23131                           ; BSR set to: 1
 23132                           ;incstack = 0
 23133  01B32E  90C3               	bcf	4035,0,c	;volatile
 23134  01B330  0012               	return		;funcret
 23135  01B332                     __end_of_TMR5_StopTimer:
 23136                           	opt stack 0
 23137                           tblptru	equ	0xFF8
 23138                           tblptrh	equ	0xFF7
 23139                           tblptrl	equ	0xFF6
 23140                           tablat	equ	0xFF5
 23141                           prodh	equ	0xFF4
 23142                           prodl	equ	0xFF3
 23143                           intcon	equ	0xFF2
 23144                           indf0	equ	0xFEF
 23145                           postinc0	equ	0xFEE
 23146                           fsr0h	equ	0xFEA
 23147                           fsr0l	equ	0xFE9
 23148                           wreg	equ	0xFE8
 23149                           indf1	equ	0xFE7
 23150                           postdec1	equ	0xFE5
 23151                           plusw1	equ	0xFE3
 23152                           fsr1h	equ	0xFE2
 23153                           fsr1l	equ	0xFE1
 23154                           indf2	equ	0xFDF
 23155                           postinc2	equ	0xFDE
 23156                           postdec2	equ	0xFDD
 23157                           plusw2	equ	0xFDB
 23158                           fsr2h	equ	0xFDA
 23159                           fsr2l	equ	0xFD9
 23160                           status	equ	0xFD8
 23161                           
 23162 ;; *************** function _EUSART2_Read *****************
 23163 ;; Defined at:
 23164 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 23165 ;; Parameters:    Size  Location     Type
 23166 ;;		None
 23167 ;; Auto vars:     Size  Location     Type
 23168 ;;  readValue       1   23[BANK1 ] unsigned char 
 23169 ;; Return value:  Size  Location     Type
 23170 ;;                  1    wreg      unsigned char 
 23171 ;; Registers used:
 23172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23173 ;; Tracked objects:
 23174 ;;		On entry : 0/0
 23175 ;;		On exit  : 0/0
 23176 ;;		Unchanged: 0/0
 23177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23179 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23181 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23182 ;;Total ram usage:        1 bytes
 23183 ;; Hardware stack levels used:    1
 23184 ;; Hardware stack levels required when called:   13
 23185 ;; This function calls:
 23186 ;;		Nothing
 23187 ;; This function is called by:
 23188 ;;		_terminal_ringBufferPull
 23189 ;;		_getch
 23190 ;; This function uses a non-reentrant model
 23191 ;;
 23192                           
 23193                           	psect	text30
 23194  01A6CA                     __ptext30:
 23195                           	opt stack 0
 23196  01A6CA                     _EUSART2_Read:
 23197                           	opt stack 16
 23198                           
 23199                           ;eusart2.c: 136: uint8_t readValue = 0;
 23200                           
 23201                           ;incstack = 0
 23202  01A6CA  0E00               	movlw	0
 23203  01A6CC  0101               	movlb	1	; () banked
 23204  01A6CE  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 23205                           
 23206                           ;eusart2.c: 138: while(0 == eusart2RxCount)
 23207  01A6D0  D004               	goto	l423
 23208  01A6D2                     l424:
 23209                           
 23210                           ; BSR set to: 2
 23211  01A6D2  0004               	clrwdt		;# 
 23212                           
 23213                           ;eusart2.c: 141: error_handler.USB_UART_COMM_error_flag = 1;
 23214  01A6D4  0E01               	movlw	1
 23215  01A6D6  0102               	movlb	2	; () banked
 23216  01A6D8  6F08               	movwf	(_error_handler+8)& (0+255),b
 23217  01A6DA                     l423:
 23218  01A6DA  0102               	movlb	2	; () banked
 23219  01A6DC  5173               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 23220  01A6DE  B4D8               	btfsc	status,2,c
 23221  01A6E0  D7F8               	goto	l424
 23222                           
 23223                           ; BSR set to: 2
 23224                           ;eusart2.c: 142: }
 23225                           ;eusart2.c: 144: readValue = eusart2RxBuffer[eusart2RxTail++];
 23226                           
 23227                           ; BSR set to: 2
 23228  01A6E2  0101               	movlb	1	; () banked
 23229  01A6E4  51DE               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 23230  01A6E6  0D01               	mullw	1
 23231  01A6E8  0E00               	movlw	low _eusart2RxBuffer
 23232  01A6EA  24F3               	addwf	prodl,w,c
 23233  01A6EC  6ED9               	movwf	fsr2l,c
 23234  01A6EE  0E03               	movlw	high _eusart2RxBuffer
 23235  01A6F0  20F4               	addwfc	prodh,w,c
 23236  01A6F2  6EDA               	movwf	fsr2h,c
 23237  01A6F4  50DF               	movf	indf2,w,c
 23238  01A6F6  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 23239                           
 23240                           ; BSR set to: 1
 23241  01A6F8  2BDE               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 23242                           
 23243                           ; BSR set to: 1
 23244                           ;eusart2.c: 145: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 23245  01A6FA  0E3F               	movlw	63
 23246  01A6FC  65DE               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 23247  01A6FE  D002               	goto	l426
 23248                           
 23249                           ; BSR set to: 1
 23250                           ;eusart2.c: 146: {
 23251                           ;eusart2.c: 147: eusart2RxTail = 0;
 23252  01A700  0E00               	movlw	0
 23253  01A702  6FDE               	movwf	_eusart2RxTail& (0+255),b	;volatile
 23254  01A704                     l426:
 23255                           
 23256                           ; BSR set to: 1
 23257                           ;eusart2.c: 148: }
 23258                           ;eusart2.c: 149: PIE3bits.RC2IE = 0;
 23259                           
 23260                           ; BSR set to: 1
 23261  01A704  010E               	movlb	14	; () banked
 23262  01A706  9F2C               	bcf	44,7,b	;volatile
 23263                           
 23264                           ; BSR set to: 14
 23265                           ;eusart2.c: 150: eusart2RxCount--;
 23266  01A708  0102               	movlb	2	; () banked
 23267  01A70A  0773               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 23268                           
 23269                           ; BSR set to: 2
 23270                           ;eusart2.c: 151: PIE3bits.RC2IE = 1;
 23271  01A70C  010E               	movlb	14	; () banked
 23272  01A70E  8F2C               	bsf	44,7,b	;volatile
 23273                           
 23274                           ; BSR set to: 14
 23275                           ;eusart2.c: 152: return readValue;
 23276  01A710  0101               	movlb	1	; () banked
 23277  01A712  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 23278  01A714  0012               	return	
 23279  01A716                     __end_of_EUSART2_Read:
 23280                           	opt stack 0
 23281                           tblptru	equ	0xFF8
 23282                           tblptrh	equ	0xFF7
 23283                           tblptrl	equ	0xFF6
 23284                           tablat	equ	0xFF5
 23285                           prodh	equ	0xFF4
 23286                           prodl	equ	0xFF3
 23287                           intcon	equ	0xFF2
 23288                           indf0	equ	0xFEF
 23289                           postinc0	equ	0xFEE
 23290                           fsr0h	equ	0xFEA
 23291                           fsr0l	equ	0xFE9
 23292                           wreg	equ	0xFE8
 23293                           indf1	equ	0xFE7
 23294                           postdec1	equ	0xFE5
 23295                           plusw1	equ	0xFE3
 23296                           fsr1h	equ	0xFE2
 23297                           fsr1l	equ	0xFE1
 23298                           indf2	equ	0xFDF
 23299                           postinc2	equ	0xFDE
 23300                           postdec2	equ	0xFDD
 23301                           plusw2	equ	0xFDB
 23302                           fsr2h	equ	0xFDA
 23303                           fsr2l	equ	0xFD9
 23304                           status	equ	0xFD8
 23305                           
 23306 ;; *************** function _terminal_clearTerminal *****************
 23307 ;; Defined at:
 23308 ;;		line 80 in file "ring_buffer_interface.c"
 23309 ;; Parameters:    Size  Location     Type
 23310 ;;		None
 23311 ;; Auto vars:     Size  Location     Type
 23312 ;;		None
 23313 ;; Return value:  Size  Location     Type
 23314 ;;                  1    wreg      void 
 23315 ;; Registers used:
 23316 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23317 ;; Tracked objects:
 23318 ;;		On entry : 0/0
 23319 ;;		On exit  : 0/0
 23320 ;;		Unchanged: 0/0
 23321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23326 ;;Total ram usage:        0 bytes
 23327 ;; Hardware stack levels used:    1
 23328 ;; Hardware stack levels required when called:   17
 23329 ;; This function calls:
 23330 ;;		_printf
 23331 ;; This function is called by:
 23332 ;;		_main
 23333 ;; This function uses a non-reentrant model
 23334 ;;
 23335                           
 23336                           	psect	text31
 23337  01B22A                     __ptext31:
 23338                           	opt stack 0
 23339  01B22A                     _terminal_clearTerminal:
 23340                           	opt stack 13
 23341                           
 23342                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 23343                           
 23344                           ; BSR set to: 1
 23345                           ;incstack = 0
 23346  01B22A  0EB3               	movlw	low STR_6
 23347  01B22C  0101               	movlb	1	; () banked
 23348  01B22E  6FAC               	movwf	printf@f& (0+255),b
 23349  01B230  0EFF               	movlw	high STR_6
 23350  01B232  6FAD               	movwf	(printf@f+1)& (0+255),b
 23351  01B234  EC22  F0D5         	call	_printf	;wreg free
 23352  01B238  0012               	return		;funcret
 23353  01B23A                     __end_of_terminal_clearTerminal:
 23354                           	opt stack 0
 23355                           tblptru	equ	0xFF8
 23356                           tblptrh	equ	0xFF7
 23357                           tblptrl	equ	0xFF6
 23358                           tablat	equ	0xFF5
 23359                           prodh	equ	0xFF4
 23360                           prodl	equ	0xFF3
 23361                           intcon	equ	0xFF2
 23362                           indf0	equ	0xFEF
 23363                           postinc0	equ	0xFEE
 23364                           fsr0h	equ	0xFEA
 23365                           fsr0l	equ	0xFE9
 23366                           wreg	equ	0xFE8
 23367                           indf1	equ	0xFE7
 23368                           postdec1	equ	0xFE5
 23369                           plusw1	equ	0xFE3
 23370                           fsr1h	equ	0xFE2
 23371                           fsr1l	equ	0xFE1
 23372                           indf2	equ	0xFDF
 23373                           postinc2	equ	0xFDE
 23374                           postdec2	equ	0xFDD
 23375                           plusw2	equ	0xFDB
 23376                           fsr2h	equ	0xFDA
 23377                           fsr2l	equ	0xFD9
 23378                           status	equ	0xFD8
 23379                           
 23380 ;; *************** function _printf *****************
 23381 ;; Defined at:
 23382 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 23383 ;; Parameters:    Size  Location     Type
 23384 ;;  f               2  172[BANK1 ] PTR const unsigned char 
 23385 ;;		 -> STR_175(13), STR_174(31), STR_173(26), STR_172(28), 
 23386 ;;		 -> STR_171(426), STR_169(30), STR_168(46), STR_167(39), 
 23387 ;;		 -> STR_166(62), STR_165(55), STR_164(470), STR_162(3086), 
 23388 ;;		 -> STR_160(492), STR_158(748), STR_156(720), STR_154(974), 
 23389 ;;		 -> STR_152(54), STR_150(54), STR_148(45), STR_146(51), 
 23390 ;;		 -> STR_144(52), STR_142(46), STR_140(51), STR_138(53), 
 23391 ;;		 -> STR_136(58), STR_134(71), STR_133(63), STR_132(37), 
 23392 ;;		 -> STR_131(46), STR_130(102), STR_129(86), STR_127(25), 
 23393 ;;		 -> STR_125(42), STR_124(53), STR_123(31), STR_121(29), 
 23394 ;;		 -> STR_120(28), STR_118(42), STR_116(41), STR_114(34), 
 23395 ;;		 -> STR_112(53), STR_111(52), STR_110(105), STR_109(105), 
 23396 ;;		 -> STR_107(59), STR_105(73), STR_103(56), STR_101(34), 
 23397 ;;		 -> STR_99(34), STR_97(32), STR_95(37), STR_93(58), 
 23398 ;;		 -> STR_91(36), STR_89(36), STR_87(37), STR_85(34), 
 23399 ;;		 -> STR_83(38), STR_82(60), STR_81(32), STR_80(23), 
 23400 ;;		 -> STR_79(65), STR_77(23), STR_75(27), STR_74(48), 
 23401 ;;		 -> STR_73(15), STR_72(13), STR_71(12), STR_70(11), 
 23402 ;;		 -> STR_69(10), STR_68(11), STR_67(24), STR_66(46), 
 23403 ;;		 -> STR_65(25), STR_63(54), STR_62(64), STR_60(59), 
 23404 ;;		 -> STR_58(85), STR_56(47), STR_55(17), STR_52(52), 
 23405 ;;		 -> STR_50(4), STR_49(5), STR_47(4), STR_46(5), 
 23406 ;;		 -> STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), STR_13(4), 
 23407 ;;		 -> STR_12(4), STR_11(4), STR_10(5), STR_9(3), 
 23408 ;;		 -> STR_8(372), STR_7(4), STR_6(5), STR_1(4), 
 23409 ;; Auto vars:     Size  Location     Type
 23410 ;;  pb              5  184[BANK1 ] struct __prbuf
 23411 ;;  ap              2  182[BANK1 ] PTR void [1]
 23412 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 23413 ;; Return value:  Size  Location     Type
 23414 ;;                  2  172[BANK1 ] int 
 23415 ;; Registers used:
 23416 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23417 ;; Tracked objects:
 23418 ;;		On entry : 0/0
 23419 ;;		On exit  : 0/0
 23420 ;;		Unchanged: 0/0
 23421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23422 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23423 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23425 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23426 ;;Total ram usage:       17 bytes
 23427 ;; Hardware stack levels used:    1
 23428 ;; Hardware stack levels required when called:   16
 23429 ;; This function calls:
 23430 ;;		__doprnt
 23431 ;; This function is called by:
 23432 ;;		_terminal_clearTerminal
 23433 ;;		_terminal_setCursorHome
 23434 ;;		_terminal_textAttributes
 23435 ;;		_terminal_printNewline
 23436 ;;		_ringBufferLUT
 23437 ;;		_terminal_printResetMessage
 23438 ;;		_terminal_clearLine
 23439 ;;		_terminal_saveCursor
 23440 ;;		_terminal_returnCursor
 23441 ;; This function uses a non-reentrant model
 23442 ;;
 23443                           
 23444                           	psect	text32
 23445  01AA44                     __ptext32:
 23446                           	opt stack 0
 23447  01AA44                     _printf:
 23448                           	opt stack 12
 23449                           
 23450                           ;incstack = 0
 23451  01AA44  0E00               	movlw	0
 23452  01AA46  0101               	movlb	1	; () banked
 23453  01AA48  6FB8               	movwf	printf@pb& (0+255),b
 23454  01AA4A  0E00               	movlw	0
 23455  01AA4C  6FB9               	movwf	(printf@pb+1)& (0+255),b
 23456  01AA4E  0EAA               	movlw	low _putch
 23457  01AA50  6FBA               	movwf	(printf@pb+2)& (0+255),b
 23458  01AA52  0EB1               	movlw	high _putch
 23459  01AA54  6FBB               	movwf	(printf@pb+3)& (0+255),b
 23460  01AA56  0E01               	movlw	low (_putch shr (0+16))
 23461  01AA58  6FBC               	movwf	(printf@pb+4)& (0+255),b
 23462  01AA5A  0EAE               	movlw	low (?_printf+2)
 23463  01AA5C  6FB6               	movwf	printf@ap& (0+255),b
 23464  01AA5E  0E01               	movlw	high (?_printf+2)
 23465  01AA60  6FB7               	movwf	(printf@ap+1)& (0+255),b
 23466                           
 23467                           ; BSR set to: 1
 23468                           ;	Return value of _printf is never used
 23469  01AA62  0EB8               	movlw	low printf@pb
 23470  01AA64  6F82               	movwf	__doprnt@pb& (0+255),b
 23471  01AA66  0E01               	movlw	high printf@pb
 23472  01AA68  6F83               	movwf	(__doprnt@pb+1)& (0+255),b
 23473  01AA6A  C1AC  F184         	movff	printf@f,__doprnt@f
 23474  01AA6E  C1AD  F185         	movff	printf@f+1,__doprnt@f+1
 23475  01AA72  0EB6               	movlw	low printf@ap
 23476  01AA74  6F86               	movwf	__doprnt@ap& (0+255),b
 23477  01AA76  0E01               	movlw	high printf@ap
 23478  01AA78  6F87               	movwf	(__doprnt@ap+1)& (0+255),b
 23479  01AA7A  EC6F  F08B         	call	__doprnt	;wreg free
 23480  01AA7E  0012               	return	
 23481  01AA80                     __end_of_printf:
 23482                           	opt stack 0
 23483                           tblptru	equ	0xFF8
 23484                           tblptrh	equ	0xFF7
 23485                           tblptrl	equ	0xFF6
 23486                           tablat	equ	0xFF5
 23487                           prodh	equ	0xFF4
 23488                           prodl	equ	0xFF3
 23489                           intcon	equ	0xFF2
 23490                           indf0	equ	0xFEF
 23491                           postinc0	equ	0xFEE
 23492                           fsr0h	equ	0xFEA
 23493                           fsr0l	equ	0xFE9
 23494                           wreg	equ	0xFE8
 23495                           indf1	equ	0xFE7
 23496                           postdec1	equ	0xFE5
 23497                           plusw1	equ	0xFE3
 23498                           fsr1h	equ	0xFE2
 23499                           fsr1l	equ	0xFE1
 23500                           indf2	equ	0xFDF
 23501                           postinc2	equ	0xFDE
 23502                           postdec2	equ	0xFDD
 23503                           plusw2	equ	0xFDB
 23504                           fsr2h	equ	0xFDA
 23505                           fsr2l	equ	0xFD9
 23506                           status	equ	0xFD8
 23507                           
 23508 ;; *************** function __doprnt *****************
 23509 ;; Defined at:
 23510 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 23511 ;; Parameters:    Size  Location     Type
 23512 ;;  pb              2  130[BANK1 ] PTR struct __prbuf
 23513 ;;		 -> sprintf@pb(5), printf@pb(5), 
 23514 ;;  f               2  132[BANK1 ] PTR const unsigned char 
 23515 ;;		 -> STR_193(11), STR_175(13), STR_174(31), STR_173(26), 
 23516 ;;		 -> STR_172(28), STR_171(426), STR_169(30), STR_168(46), 
 23517 ;;		 -> STR_167(39), STR_166(62), STR_165(55), STR_164(470), 
 23518 ;;		 -> STR_162(3086), STR_160(492), STR_158(748), STR_156(720), 
 23519 ;;		 -> STR_154(974), STR_152(54), STR_150(54), STR_148(45), 
 23520 ;;		 -> STR_146(51), STR_144(52), STR_142(46), STR_140(51), 
 23521 ;;		 -> STR_138(53), STR_136(58), STR_134(71), STR_133(63), 
 23522 ;;		 -> STR_132(37), STR_131(46), STR_130(102), STR_129(86), 
 23523 ;;		 -> STR_127(25), STR_125(42), STR_124(53), STR_123(31), 
 23524 ;;		 -> STR_121(29), STR_120(28), STR_118(42), STR_116(41), 
 23525 ;;		 -> STR_114(34), STR_112(53), STR_111(52), STR_110(105), 
 23526 ;;		 -> STR_109(105), STR_107(59), STR_105(73), STR_103(56), 
 23527 ;;		 -> STR_101(34), STR_99(34), STR_97(32), STR_95(37), 
 23528 ;;		 -> STR_93(58), STR_91(36), STR_89(36), STR_87(37), 
 23529 ;;		 -> STR_85(34), STR_83(38), STR_82(60), STR_81(32), 
 23530 ;;		 -> STR_80(23), STR_79(65), STR_77(23), STR_75(27), 
 23531 ;;		 -> STR_74(48), STR_73(15), STR_72(13), STR_71(12), 
 23532 ;;		 -> STR_70(11), STR_69(10), STR_68(11), STR_67(24), 
 23533 ;;		 -> STR_66(46), STR_65(25), STR_63(54), STR_62(64), 
 23534 ;;		 -> STR_60(59), STR_58(85), STR_56(47), STR_55(17), 
 23535 ;;		 -> STR_52(52), STR_50(4), STR_49(5), STR_47(4), 
 23536 ;;		 -> STR_46(5), STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), 
 23537 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(5), 
 23538 ;;		 -> STR_9(3), STR_8(372), STR_7(4), STR_6(5), 
 23539 ;;		 -> STR_1(4), 
 23540 ;;  ap              2  134[BANK1 ] PTR PTR void 
 23541 ;;		 -> sprintf@ap(2), printf@ap(2), 
 23542 ;; Auto vars:     Size  Location     Type
 23543 ;;  idx             1  146[BANK1 ] unsigned char 
 23544 ;;  val             4  161[BANK1 ] unsigned long 
 23545 ;;  fval            4  157[BANK1 ] unsigned long 
 23546 ;;  tmpval          4  153[BANK1 ] struct .
 23547 ;;  prec            2  169[BANK1 ] int 
 23548 ;;  flag            2  167[BANK1 ] unsigned short 
 23549 ;;  width           2  165[BANK1 ] int 
 23550 ;;  exp             2  151[BANK1 ] int 
 23551 ;;  len             2  149[BANK1 ] unsigned int 
 23552 ;;  cp              2  147[BANK1 ] PTR const unsigned char 
 23553 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_191(7), 
 23554 ;;		 -> _doprnt@c(1), STR_188(16), STR_187(22), STR_186(21), 
 23555 ;;		 -> STR_185(27), STR_184(41), STR_183(32), STR_182(19), 
 23556 ;;		 -> STR_181(16), STR_180(15), STR_179(16), STR_178(10), 
 23557 ;;		 -> STR_177(13), STR_176(12), NULL(0), TRIAC_Firing_Angle(4), 
 23558 ;;  c               1  171[BANK1 ] char 
 23559 ;;  d               1    0        unsigned char 
 23560 ;; Return value:  Size  Location     Type
 23561 ;;                  2  130[BANK1 ] int 
 23562 ;; Registers used:
 23563 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23564 ;; Tracked objects:
 23565 ;;		On entry : 0/0
 23566 ;;		On exit  : 0/0
 23567 ;;		Unchanged: 0/0
 23568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23569 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23570 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23571 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23572 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23573 ;;Total ram usage:       42 bytes
 23574 ;; Hardware stack levels used:    1
 23575 ;; Hardware stack levels required when called:   15
 23576 ;; This function calls:
 23577 ;;		Absolute function
 23578 ;;		___awdiv
 23579 ;;		___fladd
 23580 ;;		___flge
 23581 ;;		___flmul
 23582 ;;		___flneg
 23583 ;;		___flsub
 23584 ;;		___fltol
 23585 ;;		___lldiv
 23586 ;;		___llmod
 23587 ;;		___wmul
 23588 ;;		___xxtofl
 23589 ;;		__div_to_l_
 23590 ;;		__tdiv_to_l_
 23591 ;;		_fround
 23592 ;;		_isdigit
 23593 ;;		_putch
 23594 ;;		_scale
 23595 ;; This function is called by:
 23596 ;;		_printf
 23597 ;; This function uses a non-reentrant model
 23598 ;;
 23599                           
 23600                           	psect	text33
 23601  0116DE                     __ptext33:
 23602                           	opt stack 0
 23603  0116DE                     __doprnt:
 23604                           	opt stack 12
 23605                           
 23606                           ;doprnt.c: 499: signed char c;
 23607                           ;doprnt.c: 501: int width;
 23608                           ;doprnt.c: 504: int prec;
 23609                           ;doprnt.c: 508: unsigned short flag;
 23610                           ;doprnt.c: 515: char d;
 23611                           ;doprnt.c: 516: double fval;
 23612                           ;doprnt.c: 517: int exp;
 23613                           ;doprnt.c: 523: union {
 23614                           ;doprnt.c: 524: unsigned long vd;
 23615                           ;doprnt.c: 525: double integ;
 23616                           ;doprnt.c: 526: } tmpval;
 23617                           ;doprnt.c: 528: unsigned long val;
 23618                           ;doprnt.c: 529: unsigned len;
 23619                           ;doprnt.c: 530: const char * cp;
 23620                           ;doprnt.c: 536: while(c = *f++) {
 23621                           
 23622                           ;incstack = 0
 23623  0116DE  EFD3  F095         	goto	u33020
 23624  0116E2                     
 23625                           ;doprnt.c: 538: if(c != '%')
 23626  0116E2  0E25               	movlw	37
 23627  0116E4  0101               	movlb	1	; () banked
 23628  0116E6  19AB               	xorwf	__doprnt@c& (0+255),w,b
 23629  0116E8  B4D8               	btfsc	status,2,c
 23630  0116EA  D036               	goto	l1961
 23631                           
 23632                           ; BSR set to: 1
 23633                           ;doprnt.c: 540: {
 23634                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 23635  0116EC  EE20 F002          	lfsr	2,2
 23636  0116F0  5182               	movf	__doprnt@pb& (0+255),w,b
 23637  0116F2  26D9               	addwf	fsr2l,f,c
 23638  0116F4  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23639  0116F6  22DA               	addwfc	fsr2h,f,c
 23640  0116F8  50DE               	movf	postinc2,w,c
 23641  0116FA  10DE               	iorwf	postinc2,w,c
 23642  0116FC  10DE               	iorwf	postinc2,w,c
 23643  0116FE  B4D8               	btfsc	status,2,c
 23644  011700  D014               	goto	l1962
 23645                           
 23646                           ; BSR set to: 1
 23647  011702  EE20 F002          	lfsr	2,2
 23648  011706  5182               	movf	__doprnt@pb& (0+255),w,b
 23649  011708  26D9               	addwf	fsr2l,f,c
 23650  01170A  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23651  01170C  22DA               	addwfc	fsr2h,f,c
 23652  01170E  D802               	call	u31928
 23653  011710  EFD3  F095         	goto	u33020
 23654  011714                     u31928:
 23655  011714  0005               	push	
 23656  011716  6EFA               	movwf	pclath,c
 23657  011718  50DE               	movf	postinc2,w,c
 23658  01171A  6EFD               	movwf	tosl,c
 23659  01171C  50DE               	movf	postinc2,w,c
 23660  01171E  6EFE               	movwf	tosh,c
 23661  011720  50DE               	movf	postinc2,w,c
 23662  011722  6EFF               	movwf	tosu,c
 23663  011724  50FA               	movf	pclath,w,c
 23664  011726  51AB               	movf	__doprnt@c& (0+255),w,b
 23665  011728  0012               	return		;indir
 23666  01172A                     l1962:
 23667  01172A  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23668  01172E  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23669  011732  CFDE F188          	movff	postinc2,??__doprnt
 23670  011736  CFDD F189          	movff	postdec2,??__doprnt+1
 23671  01173A  C188  FFD9         	movff	??__doprnt,fsr2l
 23672  01173E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23673  011742  C1AB  FFDF         	movff	__doprnt@c,indf2
 23674  011746  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23675  01174A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23676  01174E  2ADE               	incf	postinc2,f,c
 23677  011750  0E00               	movlw	0
 23678  011752  22DD               	addwfc	postdec2,f,c
 23679                           
 23680                           ;doprnt.c: 542: continue;
 23681  011754  EFD3  F095         	goto	u33020
 23682  011758                     l1961:
 23683                           
 23684                           ;doprnt.c: 543: }
 23685                           ;doprnt.c: 546: width = 0;
 23686  011758  0E00               	movlw	0
 23687  01175A  0101               	movlb	1	; () banked
 23688  01175C  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 23689  01175E  0E00               	movlw	0
 23690  011760  6FA5               	movwf	__doprnt@width& (0+255),b
 23691                           
 23692                           ;doprnt.c: 548: flag = 0;
 23693  011762  0E00               	movlw	0
 23694  011764  6FA8               	movwf	(__doprnt@flag+1)& (0+255),b
 23695  011766  0E00               	movlw	0
 23696  011768  6FA7               	movwf	__doprnt@flag& (0+255),b
 23697                           
 23698                           ; BSR set to: 1
 23699                           ;doprnt.c: 551: switch(*f) {
 23700                           
 23701                           ;doprnt.c: 550: for(;;) {
 23702  01176A  D004               	goto	l1965
 23703  01176C                     
 23704                           ;doprnt.c: 580: flag |= 0x04;
 23705                           
 23706                           ; BSR set to: 1
 23707  01176C  0101               	movlb	1	; () banked
 23708  01176E  85A7               	bsf	__doprnt@flag& (0+255),2,b
 23709                           
 23710                           ;doprnt.c: 581: f++;
 23711  011770  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23712  011772  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23713  011774                     l1965:
 23714                           
 23715                           ; BSR set to: 1
 23716  011774  C184  FFF6         	movff	__doprnt@f,tblptrl
 23717  011778  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23718  01177C  0E00               	movlw	low (__mediumconst shr (0+16))
 23719  01177E  6EF8               	movwf	tblptru,c
 23720  011780  0E0D               	movlw	(high __ramtop+-1)
 23721  011782  64F7               	cpfsgt	tblptrh,c
 23722  011784  D003               	bra	u31937
 23723  011786  0008               	tblrd		*
 23724  011788  50F5               	movf	tablat,w,c
 23725  01178A  D005               	bra	u31930
 23726  01178C                     u31937:
 23727  01178C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23728  011790  CFF7 FFEA          	movff	tblptrh,fsr0h
 23729  011794  50EF               	movf	indf0,w,c
 23730  011796                     u31930:
 23731                           
 23732                           ; Switch size 1, requested type "space"
 23733                           ; Number of cases is 1, Range of values is 48 to 48
 23734                           ; switch strategies available:
 23735                           ; Name         Instructions Cycles
 23736                           ; simple_byte            4     3 (average)
 23737                           ;	Chosen strategy is simple_byte
 23738  011796  0A30               	xorlw	48	; case 48
 23739  011798  B4D8               	btfsc	status,2,c
 23740  01179A  D7E8               	goto	l1966
 23741                           
 23742                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 23743                           
 23744                           ;doprnt.c: 586: }
 23745                           
 23746                           ;doprnt.c: 585: break;
 23747  01179C  C184  FFF6         	movff	__doprnt@f,tblptrl
 23748  0117A0  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23749  0117A4  0E00               	movlw	low (__mediumconst shr (0+16))
 23750  0117A6  6EF8               	movwf	tblptru,c
 23751  0117A8  0E0D               	movlw	(high __ramtop+-1)
 23752  0117AA  64F7               	cpfsgt	tblptrh,c
 23753  0117AC  D003               	bra	u31947
 23754  0117AE  0008               	tblrd		*
 23755  0117B0  50F5               	movf	tablat,w,c
 23756  0117B2  D005               	bra	u31940
 23757  0117B4                     u31947:
 23758  0117B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 23759  0117B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 23760  0117BC  50EF               	movf	indf0,w,c
 23761  0117BE                     u31940:
 23762  0117BE  EC08  F0D8         	call	_isdigit
 23763  0117C2  A0D8               	btfss	status,0,c
 23764  0117C4  D04C               	goto	u31980
 23765                           
 23766                           ;doprnt.c: 598: width = 0;
 23767  0117C6  0E00               	movlw	0
 23768  0117C8  0101               	movlb	1	; () banked
 23769  0117CA  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 23770  0117CC  0E00               	movlw	0
 23771  0117CE  6FA5               	movwf	__doprnt@width& (0+255),b
 23772  0117D0                     
 23773                           ;doprnt.c: 600: width *= 10;
 23774                           
 23775                           ; BSR set to: 1
 23776  0117D0  C1A5  F117         	movff	__doprnt@width,___wmul@multiplier
 23777  0117D4  C1A6  F118         	movff	__doprnt@width+1,___wmul@multiplier+1
 23778  0117D8  0E00               	movlw	0
 23779  0117DA  0101               	movlb	1	; () banked
 23780  0117DC  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23781  0117DE  0E0A               	movlw	10
 23782  0117E0  6F19               	movwf	___wmul@multiplicand& (0+255),b
 23783  0117E2  EC38  F0D7         	call	___wmul	;wreg free
 23784  0117E6  C117  F1A5         	movff	?___wmul,__doprnt@width
 23785  0117EA  C118  F1A6         	movff	?___wmul+1,__doprnt@width+1
 23786                           
 23787                           ;doprnt.c: 601: width += *f++ - '0';
 23788  0117EE  0ED0               	movlw	208
 23789  0117F0  0101               	movlb	1	; () banked
 23790  0117F2  6F88               	movwf	??__doprnt& (0+255),b
 23791  0117F4  0EFF               	movlw	255
 23792  0117F6  6F89               	movwf	(??__doprnt+1)& (0+255),b
 23793  0117F8  C184  FFF6         	movff	__doprnt@f,tblptrl
 23794  0117FC  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23795  011800  0E00               	movlw	low (__mediumconst shr (0+16))
 23796  011802  6EF8               	movwf	tblptru,c
 23797  011804  0E0D               	movlw	(high __ramtop+-1)
 23798  011806  64F7               	cpfsgt	tblptrh,c
 23799  011808  D003               	bra	u31967
 23800  01180A  0008               	tblrd		*
 23801  01180C  50F5               	movf	tablat,w,c
 23802  01180E  D005               	bra	u31960
 23803  011810                     u31967:
 23804  011810  CFF6 FFE9          	movff	tblptrl,fsr0l
 23805  011814  CFF7 FFEA          	movff	tblptrh,fsr0h
 23806  011818  50EF               	movf	indf0,w,c
 23807  01181A                     u31960:
 23808  01181A  0101               	movlb	1	; () banked
 23809  01181C  6F8A               	movwf	(??__doprnt+2)& (0+255),b
 23810  01181E  6B8B               	clrf	(??__doprnt+3)& (0+255),b
 23811  011820  5188               	movf	??__doprnt& (0+255),w,b
 23812  011822  278A               	addwf	(??__doprnt+2)& (0+255),f,b
 23813  011824  5189               	movf	(??__doprnt+1)& (0+255),w,b
 23814  011826  238B               	addwfc	(??__doprnt+3)& (0+255),f,b
 23815  011828  518A               	movf	(??__doprnt+2)& (0+255),w,b
 23816  01182A  27A5               	addwf	__doprnt@width& (0+255),f,b
 23817  01182C  518B               	movf	(??__doprnt+3)& (0+255),w,b
 23818  01182E  23A6               	addwfc	(__doprnt@width+1)& (0+255),f,b
 23819                           
 23820                           ; BSR set to: 1
 23821  011830  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23822  011832  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23823                           
 23824                           ; BSR set to: 1
 23825                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 23826  011834  C184  FFF6         	movff	__doprnt@f,tblptrl
 23827  011838  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23828  01183C  0E00               	movlw	low (__mediumconst shr (0+16))
 23829  01183E  6EF8               	movwf	tblptru,c
 23830  011840  0E0D               	movlw	(high __ramtop+-1)
 23831  011842  64F7               	cpfsgt	tblptrh,c
 23832  011844  D003               	bra	u31977
 23833  011846  0008               	tblrd		*
 23834  011848  50F5               	movf	tablat,w,c
 23835  01184A  D005               	bra	u31970
 23836  01184C                     u31977:
 23837  01184C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23838  011850  CFF7 FFEA          	movff	tblptrh,fsr0h
 23839  011854  50EF               	movf	indf0,w,c
 23840  011856                     u31970:
 23841  011856  EC08  F0D8         	call	_isdigit
 23842  01185A  B0D8               	btfsc	status,0,c
 23843  01185C  D7B9               	goto	l1971
 23844  01185E                     u31980:
 23845                           
 23846                           ;doprnt.c: 608: }
 23847                           ;doprnt.c: 611: if(*f == '.') {
 23848  01185E  C184  FFF6         	movff	__doprnt@f,tblptrl
 23849  011862  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23850  011866  0E00               	movlw	low (__mediumconst shr (0+16))
 23851  011868  6EF8               	movwf	tblptru,c
 23852  01186A  0E0D               	movlw	(high __ramtop+-1)
 23853  01186C  64F7               	cpfsgt	tblptrh,c
 23854  01186E  D003               	bra	u31997
 23855  011870  0008               	tblrd		*
 23856  011872  50F5               	movf	tablat,w,c
 23857  011874  D005               	bra	u31990
 23858  011876                     u31997:
 23859  011876  CFF6 FFE9          	movff	tblptrl,fsr0l
 23860  01187A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23861  01187E  50EF               	movf	indf0,w,c
 23862  011880                     u31990:
 23863  011880  0A2E               	xorlw	46
 23864  011882  A4D8               	btfss	status,2,c
 23865  011884  D049               	goto	l1973
 23866                           
 23867                           ;doprnt.c: 612: flag |= 0x4000;
 23868  011886  0101               	movlb	1	; () banked
 23869  011888  8DA8               	bsf	(__doprnt@flag+1)& (0+255),6,b
 23870                           
 23871                           ;doprnt.c: 613: f++;
 23872  01188A  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23873  01188C  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23874                           
 23875                           ; BSR set to: 1
 23876                           ;doprnt.c: 620: {
 23877                           ;doprnt.c: 621: prec = 0;
 23878  01188E  0E00               	movlw	0
 23879  011890  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23880  011892  0E00               	movlw	0
 23881  011894  6FA9               	movwf	__doprnt@prec& (0+255),b
 23882                           
 23883                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 23884  011896  D02A               	goto	l1974
 23885  011898                     
 23886                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 23887                           
 23888                           ; BSR set to: 1
 23889  011898  C1A9  F117         	movff	__doprnt@prec,___wmul@multiplier
 23890  01189C  C1AA  F118         	movff	__doprnt@prec+1,___wmul@multiplier+1
 23891  0118A0  0E00               	movlw	0
 23892  0118A2  0101               	movlb	1	; () banked
 23893  0118A4  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23894  0118A6  0E0A               	movlw	10
 23895  0118A8  6F19               	movwf	___wmul@multiplicand& (0+255),b
 23896  0118AA  EC38  F0D7         	call	___wmul	;wreg free
 23897  0118AE  C184  FFF6         	movff	__doprnt@f,tblptrl
 23898  0118B2  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23899  0118B6  0E00               	movlw	low (__mediumconst shr (0+16))
 23900  0118B8  6EF8               	movwf	tblptru,c
 23901  0118BA  0E0D               	movlw	(high __ramtop+-1)
 23902  0118BC  64F7               	cpfsgt	tblptrh,c
 23903  0118BE  D003               	bra	u32017
 23904  0118C0  0008               	tblrd		*
 23905  0118C2  50F5               	movf	tablat,w,c
 23906  0118C4  D005               	bra	u32010
 23907  0118C6                     u32017:
 23908  0118C6  CFF6 FFE9          	movff	tblptrl,fsr0l
 23909  0118CA  CFF7 FFEA          	movff	tblptrh,fsr0h
 23910  0118CE  50EF               	movf	indf0,w,c
 23911  0118D0                     u32010:
 23912  0118D0  0101               	movlb	1	; () banked
 23913  0118D2  6F88               	movwf	??__doprnt& (0+255),b
 23914  0118D4  5188               	movf	??__doprnt& (0+255),w,b
 23915  0118D6  2717               	addwf	?___wmul& (0+255),f,b
 23916  0118D8  0E00               	movlw	0
 23917  0118DA  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 23918  0118DC  0ED0               	movlw	208
 23919  0118DE  2517               	addwf	?___wmul& (0+255),w,b
 23920  0118E0  6FA9               	movwf	__doprnt@prec& (0+255),b
 23921  0118E2  0EFF               	movlw	255
 23922  0118E4  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 23923  0118E6  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23924                           
 23925                           ; BSR set to: 1
 23926  0118E8  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23927  0118EA  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23928  0118EC                     l1974:
 23929                           
 23930                           ; BSR set to: 1
 23931                           
 23932                           ; BSR set to: 1
 23933  0118EC  C184  FFF6         	movff	__doprnt@f,tblptrl
 23934  0118F0  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23935  0118F4  0E00               	movlw	low (__mediumconst shr (0+16))
 23936  0118F6  6EF8               	movwf	tblptru,c
 23937  0118F8  0E0D               	movlw	(high __ramtop+-1)
 23938  0118FA  64F7               	cpfsgt	tblptrh,c
 23939  0118FC  D003               	bra	u32027
 23940  0118FE  0008               	tblrd		*
 23941  011900  50F5               	movf	tablat,w,c
 23942  011902  D005               	bra	u32020
 23943  011904                     u32027:
 23944  011904  CFF6 FFE9          	movff	tblptrl,fsr0l
 23945  011908  CFF7 FFEA          	movff	tblptrh,fsr0h
 23946  01190C  50EF               	movf	indf0,w,c
 23947  01190E                     u32020:
 23948  01190E  EC08  F0D8         	call	_isdigit
 23949  011912  A0D8               	btfss	status,0,c
 23950  011914  D12A               	goto	l1979
 23951  011916  D7C0               	goto	l1975
 23952  011918                     l1973:
 23953                           
 23954                           ;doprnt.c: 626: prec = 0;
 23955  011918  0E00               	movlw	0
 23956  01191A  0101               	movlb	1	; () banked
 23957  01191C  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23958  01191E  0E00               	movlw	0
 23959  011920  6FA9               	movwf	__doprnt@prec& (0+255),b
 23960                           
 23961                           ; BSR set to: 1
 23962                           ;doprnt.c: 628: flag |= 0x1000;
 23963  011922  89A8               	bsf	(__doprnt@flag+1)& (0+255),4,b
 23964                           
 23965                           ; BSR set to: 1
 23966                           ;doprnt.c: 635: switch(c = *f++) {
 23967                           
 23968                           ;doprnt.c: 630: }
 23969                           ;doprnt.c: 633: loop:
 23970                           
 23971                           ; BSR set to: 1
 23972  011924  D122               	goto	l1979
 23973  011926                     
 23974                           ; BSR set to: 1
 23975                           ;doprnt.c: 643: flag |= 0x10;
 23976                           
 23977                           ; BSR set to: 1
 23978  011926  89A7               	bsf	__doprnt@flag& (0+255),4,b
 23979                           
 23980                           ;doprnt.c: 644: goto loop;
 23981  011928  D120               	goto	l1979
 23982  01192A                     
 23983                           ; BSR set to: 1
 23984                           ;doprnt.c: 663: flag |= 0x400;
 23985                           
 23986                           ; BSR set to: 1
 23987  01192A  85A8               	bsf	(__doprnt@flag+1)& (0+255),2,b
 23988                           
 23989                           ; BSR set to: 1
 23990                           ;doprnt.c: 698: case 'i':
 23991                           ;doprnt.c: 699: break;
 23992                           
 23993                           ; BSR set to: 1
 23994                           
 23995                           ;doprnt.c: 697: case 'd':
 23996                           
 23997                           ;doprnt.c: 664: break;
 23998  01192C  D159               	goto	l1984
 23999  01192E                     
 24000                           ; BSR set to: 1
 24001                           ;doprnt.c: 718: case 'x':
 24002                           ;doprnt.c: 721: flag |= 0x80;
 24003                           
 24004                           ; BSR set to: 1
 24005                           
 24006                           ; BSR set to: 1
 24007  01192E  8FA7               	bsf	__doprnt@flag& (0+255),7,b
 24008                           
 24009                           ;doprnt.c: 723: break;
 24010  011930  D157               	goto	l1984
 24011  011932                     
 24012                           ; BSR set to: 1
 24013                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 24014                           
 24015                           ; BSR set to: 1
 24016  011932  C186  FFD9         	movff	__doprnt@ap,fsr2l
 24017  011936  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 24018  01193A  CFDF F188          	movff	indf2,??__doprnt
 24019  01193E  0E02               	movlw	2
 24020  011940  26DE               	addwf	postinc2,f,c
 24021  011942  CFDF F189          	movff	indf2,??__doprnt+1
 24022  011946  0E00               	movlw	0
 24023  011948  22DD               	addwfc	postdec2,f,c
 24024  01194A  C188  FFD9         	movff	??__doprnt,fsr2l
 24025  01194E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24026  011952  CFDE F193          	movff	postinc2,__doprnt@cp
 24027  011956  CFDD F194          	movff	postdec2,__doprnt@cp+1
 24028                           
 24029                           ; BSR set to: 1
 24030                           ;doprnt.c: 740: if(!cp)
 24031  01195A  5193               	movf	__doprnt@cp& (0+255),w,b
 24032  01195C  1194               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 24033  01195E  A4D8               	btfss	status,2,c
 24034  011960  D004               	goto	l1990
 24035                           
 24036                           ; BSR set to: 1
 24037                           ;doprnt.c: 741: cp = "(null)";
 24038  011962  0E9B               	movlw	low STR_191
 24039  011964  6F93               	movwf	__doprnt@cp& (0+255),b
 24040  011966  0EFF               	movlw	high STR_191
 24041  011968  6F94               	movwf	(__doprnt@cp+1)& (0+255),b
 24042  01196A                     l1990:
 24043                           
 24044                           ; BSR set to: 1
 24045                           ;doprnt.c: 745: len = 0;
 24046                           
 24047                           ; BSR set to: 1
 24048  01196A  0E00               	movlw	0
 24049  01196C  6F96               	movwf	(__doprnt@len+1)& (0+255),b
 24050  01196E  0E00               	movlw	0
 24051  011970  6F95               	movwf	__doprnt@len& (0+255),b
 24052                           
 24053                           ;doprnt.c: 746: while(cp[len])
 24054  011972  D003               	goto	l1991
 24055  011974                     
 24056                           ;doprnt.c: 747: len++;
 24057                           
 24058                           ; BSR set to: 1
 24059  011974  0101               	movlb	1	; () banked
 24060  011976  4B95               	infsnz	__doprnt@len& (0+255),f,b
 24061  011978  2B96               	incf	(__doprnt@len+1)& (0+255),f,b
 24062  01197A                     l1991:
 24063                           
 24064                           ; BSR set to: 1
 24065                           
 24066                           ; BSR set to: 1
 24067  01197A  5195               	movf	__doprnt@len& (0+255),w,b
 24068  01197C  2593               	addwf	__doprnt@cp& (0+255),w,b
 24069  01197E  6F88               	movwf	??__doprnt& (0+255),b
 24070  011980  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 24071  011982  2194               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 24072  011984  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24073  011986  C188  FFF6         	movff	??__doprnt,tblptrl
 24074  01198A  C189  FFF7         	movff	??__doprnt+1,tblptrh
 24075  01198E  0E00               	movlw	low (__mediumconst shr (0+16))
 24076  011990  6EF8               	movwf	tblptru,c
 24077  011992  0E0D               	movlw	(high __ramtop+-1)
 24078  011994  64F7               	cpfsgt	tblptrh,c
 24079  011996  D003               	bra	u32057
 24080  011998  0008               	tblrd		*
 24081  01199A  50F5               	movf	tablat,w,c
 24082  01199C  D005               	bra	u32050
 24083  01199E                     u32057:
 24084  01199E  CFF6 FFE9          	movff	tblptrl,fsr0l
 24085  0119A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 24086  0119A6  50EF               	movf	indf0,w,c
 24087  0119A8                     u32050:
 24088  0119A8  0900               	iorlw	0
 24089  0119AA  A4D8               	btfss	status,2,c
 24090  0119AC  D7E3               	goto	l1992
 24091  0119AE                     u32060:
 24092                           
 24093                           ;doprnt.c: 753: if(prec && prec < len)
 24094                           
 24095                           ;doprnt.c: 750: dostring:
 24096  0119AE  0101               	movlb	1	; () banked
 24097  0119B0  51A9               	movf	__doprnt@prec& (0+255),w,b
 24098  0119B2  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24099  0119B4  B4D8               	btfsc	status,2,c
 24100  0119B6  D00A               	goto	l1995
 24101                           
 24102                           ; BSR set to: 1
 24103  0119B8  5195               	movf	__doprnt@len& (0+255),w,b
 24104  0119BA  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 24105  0119BC  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 24106  0119BE  59AA               	subwfb	(__doprnt@prec+1)& (0+255),w,b
 24107  0119C0  B0D8               	btfsc	status,0,c
 24108  0119C2  D004               	goto	l1995
 24109                           
 24110                           ; BSR set to: 1
 24111                           ;doprnt.c: 754: len = prec;
 24112  0119C4  C1A9  F195         	movff	__doprnt@prec,__doprnt@len
 24113  0119C8  C1AA  F196         	movff	__doprnt@prec+1,__doprnt@len+1
 24114  0119CC                     l1995:
 24115                           
 24116                           ; BSR set to: 1
 24117                           ;doprnt.c: 757: if(width > len)
 24118                           
 24119                           ; BSR set to: 1
 24120  0119CC  51A5               	movf	__doprnt@width& (0+255),w,b
 24121  0119CE  5D95               	subwf	__doprnt@len& (0+255),w,b
 24122  0119D0  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 24123  0119D2  5996               	subwfb	(__doprnt@len+1)& (0+255),w,b
 24124  0119D4  B0D8               	btfsc	status,0,c
 24125  0119D6  D005               	goto	l1996
 24126                           
 24127                           ; BSR set to: 1
 24128                           ;doprnt.c: 758: width -= len;
 24129  0119D8  5195               	movf	__doprnt@len& (0+255),w,b
 24130  0119DA  5FA5               	subwf	__doprnt@width& (0+255),f,b
 24131  0119DC  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 24132  0119DE  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 24133  0119E0  D038               	goto	l2001
 24134  0119E2                     l1996:
 24135                           
 24136                           ; BSR set to: 1
 24137                           ;doprnt.c: 759: else
 24138                           ;doprnt.c: 760: width = 0;
 24139                           
 24140                           ; BSR set to: 1
 24141  0119E2  0E00               	movlw	0
 24142  0119E4  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 24143  0119E6  0E00               	movlw	0
 24144  0119E8  6FA5               	movwf	__doprnt@width& (0+255),b
 24145                           
 24146                           ; BSR set to: 1
 24147                           ;doprnt.c: 764: while(width--)
 24148  0119EA  D033               	goto	l2001
 24149  0119EC                     l22151:
 24150                           
 24151                           ; BSR set to: 1
 24152                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 24153  0119EC  EE20 F002          	lfsr	2,2
 24154  0119F0  5182               	movf	__doprnt@pb& (0+255),w,b
 24155  0119F2  26D9               	addwf	fsr2l,f,c
 24156  0119F4  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24157  0119F6  22DA               	addwfc	fsr2h,f,c
 24158  0119F8  50DE               	movf	postinc2,w,c
 24159  0119FA  10DE               	iorwf	postinc2,w,c
 24160  0119FC  10DE               	iorwf	postinc2,w,c
 24161  0119FE  B4D8               	btfsc	status,2,c
 24162  011A00  D013               	goto	l2000
 24163                           
 24164                           ; BSR set to: 1
 24165  011A02  EE20 F002          	lfsr	2,2
 24166  011A06  5182               	movf	__doprnt@pb& (0+255),w,b
 24167  011A08  26D9               	addwf	fsr2l,f,c
 24168  011A0A  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24169  011A0C  22DA               	addwfc	fsr2h,f,c
 24170  011A0E  D801               	call	u32118
 24171  011A10  D020               	goto	l2001
 24172  011A12                     u32118:
 24173  011A12  0005               	push	
 24174  011A14  6EFA               	movwf	pclath,c
 24175  011A16  50DE               	movf	postinc2,w,c
 24176  011A18  6EFD               	movwf	tosl,c
 24177  011A1A  50DE               	movf	postinc2,w,c
 24178  011A1C  6EFE               	movwf	tosh,c
 24179  011A1E  50DE               	movf	postinc2,w,c
 24180  011A20  6EFF               	movwf	tosu,c
 24181  011A22  50FA               	movf	pclath,w,c
 24182  011A24  0E20               	movlw	32
 24183  011A26  0012               	return		;indir
 24184  011A28                     l2000:
 24185  011A28  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24186  011A2C  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24187  011A30  CFDE F188          	movff	postinc2,??__doprnt
 24188  011A34  CFDD F189          	movff	postdec2,??__doprnt+1
 24189  011A38  C188  FFD9         	movff	??__doprnt,fsr2l
 24190  011A3C  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24191  011A40  0E20               	movlw	32
 24192  011A42  6EDF               	movwf	indf2,c
 24193  011A44  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24194  011A48  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24195  011A4C  2ADE               	incf	postinc2,f,c
 24196  011A4E  0E00               	movlw	0
 24197  011A50  22DD               	addwfc	postdec2,f,c
 24198  011A52                     l2001:
 24199  011A52  0101               	movlb	1	; () banked
 24200  011A54  07A5               	decf	__doprnt@width& (0+255),f,b
 24201  011A56  A0D8               	btfss	status,0,c
 24202  011A58  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24203  011A5A  29A5               	incf	__doprnt@width& (0+255),w,b
 24204  011A5C  E1C7               	bnz	l22151
 24205  011A5E  29A6               	incf	(__doprnt@width+1)& (0+255),w,b
 24206  011A60  B4D8               	btfsc	status,2,c
 24207  011A62  D05B               	goto	l2006
 24208  011A64  D7C3               	goto	l1999
 24209  011A66                     l22161:
 24210                           
 24211                           ; BSR set to: 1
 24212                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 24213  011A66  EE20 F002          	lfsr	2,2
 24214  011A6A  5182               	movf	__doprnt@pb& (0+255),w,b
 24215  011A6C  26D9               	addwf	fsr2l,f,c
 24216  011A6E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24217  011A70  22DA               	addwfc	fsr2h,f,c
 24218  011A72  50DE               	movf	postinc2,w,c
 24219  011A74  10DE               	iorwf	postinc2,w,c
 24220  011A76  10DE               	iorwf	postinc2,w,c
 24221  011A78  B4D8               	btfsc	status,2,c
 24222  011A7A  D027               	goto	l2005
 24223                           
 24224                           ; BSR set to: 1
 24225  011A7C  EE20 F002          	lfsr	2,2
 24226  011A80  5182               	movf	__doprnt@pb& (0+255),w,b
 24227  011A82  26D9               	addwf	fsr2l,f,c
 24228  011A84  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24229  011A86  22DA               	addwfc	fsr2h,f,c
 24230  011A88  D801               	call	u32148
 24231  011A8A  D01B               	goto	u32149
 24232  011A8C                     u32148:
 24233  011A8C  0005               	push	
 24234  011A8E  6EFA               	movwf	pclath,c
 24235  011A90  50DE               	movf	postinc2,w,c
 24236  011A92  6EFD               	movwf	tosl,c
 24237  011A94  50DE               	movf	postinc2,w,c
 24238  011A96  6EFE               	movwf	tosh,c
 24239  011A98  50DE               	movf	postinc2,w,c
 24240  011A9A  6EFF               	movwf	tosu,c
 24241  011A9C  50FA               	movf	pclath,w,c
 24242  011A9E  C193  FFF6         	movff	__doprnt@cp,tblptrl
 24243  011AA2  C194  FFF7         	movff	__doprnt@cp+1,tblptrh
 24244  011AA6  0E00               	movlw	low (__mediumconst shr (0+16))
 24245  011AA8  6EF8               	movwf	tblptru,c
 24246  011AAA  0E0D               	movlw	(high __ramtop+-1)
 24247  011AAC  64F7               	cpfsgt	tblptrh,c
 24248  011AAE  D003               	bra	u32157
 24249  011AB0  0008               	tblrd		*
 24250  011AB2  50F5               	movf	tablat,w,c
 24251  011AB4  D005               	bra	u32150
 24252  011AB6                     u32157:
 24253  011AB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 24254  011ABA  CFF7 FFEA          	movff	tblptrh,fsr0h
 24255  011ABE  50EF               	movf	indf0,w,c
 24256  011AC0                     u32150:
 24257  011AC0  0012               	return		;indir
 24258  011AC2                     u32149:
 24259  011AC2  0101               	movlb	1	; () banked
 24260  011AC4  4B93               	infsnz	__doprnt@cp& (0+255),f,b
 24261  011AC6  2B94               	incf	(__doprnt@cp+1)& (0+255),f,b
 24262  011AC8  D028               	goto	l2006
 24263  011ACA                     l2005:
 24264                           
 24265                           ; BSR set to: 1
 24266                           
 24267                           ; BSR set to: 1
 24268  011ACA  C193  FFF6         	movff	__doprnt@cp,tblptrl
 24269  011ACE  C194  FFF7         	movff	__doprnt@cp+1,tblptrh
 24270  011AD2  0E00               	movlw	low (__mediumconst shr (0+16))
 24271  011AD4  6EF8               	movwf	tblptru,c
 24272  011AD6  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24273  011ADA  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24274  011ADE  CFDE F188          	movff	postinc2,??__doprnt
 24275  011AE2  CFDD F189          	movff	postdec2,??__doprnt+1
 24276  011AE6  C188  FFD9         	movff	??__doprnt,fsr2l
 24277  011AEA  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24278  011AEE  0E0D               	movlw	(high __ramtop+-1)
 24279  011AF0  64F7               	cpfsgt	tblptrh,c
 24280  011AF2  D003               	bra	u32167
 24281  011AF4  0008               	tblrd		*
 24282  011AF6  50F5               	movf	tablat,w,c
 24283  011AF8  D005               	bra	u32160
 24284  011AFA                     u32167:
 24285  011AFA  CFF6 FFE9          	movff	tblptrl,fsr0l
 24286  011AFE  CFF7 FFEA          	movff	tblptrh,fsr0h
 24287  011B02  50EF               	movf	indf0,w,c
 24288  011B04                     u32160:
 24289  011B04  6EDF               	movwf	indf2,c
 24290  011B06  0101               	movlb	1	; () banked
 24291  011B08  4B93               	infsnz	__doprnt@cp& (0+255),f,b
 24292  011B0A  2B94               	incf	(__doprnt@cp+1)& (0+255),f,b
 24293                           
 24294                           ; BSR set to: 1
 24295  011B0C  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24296  011B10  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24297  011B14  2ADE               	incf	postinc2,f,c
 24298  011B16  0E00               	movlw	0
 24299  011B18  22DD               	addwfc	postdec2,f,c
 24300  011B1A                     l2006:
 24301                           
 24302                           ; BSR set to: 1
 24303                           
 24304                           ; BSR set to: 1
 24305                           
 24306                           ; BSR set to: 1
 24307  011B1A  0795               	decf	__doprnt@len& (0+255),f,b
 24308  011B1C  A0D8               	btfss	status,0,c
 24309  011B1E  0796               	decf	(__doprnt@len+1)& (0+255),f,b
 24310  011B20  2995               	incf	__doprnt@len& (0+255),w,b
 24311  011B22  E1A1               	bnz	l22161
 24312  011B24  2996               	incf	(__doprnt@len+1)& (0+255),w,b
 24313  011B26  B4D8               	btfsc	status,2,c
 24314  011B28  EFD3  F095         	goto	u33020
 24315  011B2C  D79C               	goto	l2004
 24316  011B2E                     
 24317                           ; BSR set to: 1
 24318                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 24319                           
 24320                           ; BSR set to: 1
 24321  011B2E  C186  FFD9         	movff	__doprnt@ap,fsr2l
 24322  011B32  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 24323  011B36  CFDF F188          	movff	indf2,??__doprnt
 24324  011B3A  0E02               	movlw	2
 24325  011B3C  26DE               	addwf	postinc2,f,c
 24326  011B3E  CFDF F189          	movff	indf2,??__doprnt+1
 24327  011B42  0E00               	movlw	0
 24328  011B44  22DD               	addwfc	postdec2,f,c
 24329  011B46  C188  FFD9         	movff	??__doprnt,fsr2l
 24330  011B4A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24331  011B4E  50DF               	movf	indf2,w,c
 24332  011B50  6FAB               	movwf	__doprnt@c& (0+255),b
 24333  011B52                     
 24334                           ; BSR set to: 1
 24335                           ;doprnt.c: 805: cp = (char *)&c;
 24336                           
 24337                           ; BSR set to: 1
 24338  011B52  0EAB               	movlw	low __doprnt@c
 24339  011B54  6F93               	movwf	__doprnt@cp& (0+255),b
 24340  011B56  0E01               	movlw	high __doprnt@c
 24341  011B58  6F94               	movwf	(__doprnt@cp+1)& (0+255),b
 24342                           
 24343                           ; BSR set to: 1
 24344                           ;doprnt.c: 806: len = 1;
 24345  011B5A  0E00               	movlw	0
 24346  011B5C  6F96               	movwf	(__doprnt@len+1)& (0+255),b
 24347  011B5E  0E01               	movlw	1
 24348  011B60  6F95               	movwf	__doprnt@len& (0+255),b
 24349                           
 24350                           ;doprnt.c: 807: goto dostring;
 24351  011B62  D725               	goto	u32060
 24352  011B64                     
 24353                           ; BSR set to: 1
 24354                           ;doprnt.c: 818: flag |= 0xC0;
 24355                           
 24356                           ; BSR set to: 1
 24357  011B64  0EC0               	movlw	192
 24358  011B66  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 24359                           
 24360                           ; BSR set to: 1
 24361                           ;doprnt.c: 822: }
 24362                           
 24363                           ;doprnt.c: 819: break;
 24364  011B68  D03B               	goto	l1984
 24365  011B6A                     l1979:
 24366                           
 24367                           ; BSR set to: 1
 24368  011B6A  0101               	movlb	1	; () banked
 24369  011B6C  5184               	movf	__doprnt@f& (0+255),w,b
 24370  011B6E  6F88               	movwf	??__doprnt& (0+255),b
 24371  011B70  5185               	movf	(__doprnt@f+1)& (0+255),w,b
 24372  011B72  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24373  011B74  4B84               	infsnz	__doprnt@f& (0+255),f,b
 24374  011B76  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 24375  011B78  C188  FFF6         	movff	??__doprnt,tblptrl
 24376  011B7C  C189  FFF7         	movff	??__doprnt+1,tblptrh
 24377  011B80  0E00               	movlw	low (__mediumconst shr (0+16))
 24378  011B82  6EF8               	movwf	tblptru,c
 24379  011B84  0E0D               	movlw	(high __ramtop+-1)
 24380  011B86  64F7               	cpfsgt	tblptrh,c
 24381  011B88  D003               	bra	u32187
 24382  011B8A  0008               	tblrd		*
 24383  011B8C  50F5               	movf	tablat,w,c
 24384  011B8E  D005               	bra	u32180
 24385  011B90                     u32187:
 24386  011B90  CFF6 FFE9          	movff	tblptrl,fsr0l
 24387  011B94  CFF7 FFEA          	movff	tblptrh,fsr0h
 24388  011B98  50EF               	movf	indf0,w,c
 24389  011B9A                     u32180:
 24390  011B9A  0101               	movlb	1	; () banked
 24391  011B9C  6FAB               	movwf	__doprnt@c& (0+255),b
 24392  011B9E  51AB               	movf	__doprnt@c& (0+255),w,b
 24393                           
 24394                           ; Switch size 1, requested type "space"
 24395                           ; Number of cases is 10, Range of values is 0 to 120
 24396                           ; switch strategies available:
 24397                           ; Name         Instructions Cycles
 24398                           ; simple_byte           31    16 (average)
 24399                           ;	Chosen strategy is simple_byte
 24400  011BA0  0A00               	xorlw	0	; case 0
 24401  011BA2  B4D8               	btfsc	status,2,c
 24402  011BA4  EFF1  F095         	goto	u33040
 24403  011BA8  0A58               	xorlw	88	; case 88
 24404  011BAA  B4D8               	btfsc	status,2,c
 24405  011BAC  D6C0               	goto	l1987
 24406  011BAE  0A3B               	xorlw	59	; case 99
 24407  011BB0  B4D8               	btfsc	status,2,c
 24408  011BB2  D7BD               	goto	l2008
 24409  011BB4  0A07               	xorlw	7	; case 100
 24410  011BB6  B4D8               	btfsc	status,2,c
 24411  011BB8  D013               	goto	l1984
 24412  011BBA  0A02               	xorlw	2	; case 102
 24413  011BBC  B4D8               	btfsc	status,2,c
 24414  011BBE  D6B5               	goto	l1983
 24415  011BC0  0A0F               	xorlw	15	; case 105
 24416  011BC2  B4D8               	btfsc	status,2,c
 24417  011BC4  D00D               	goto	l1984
 24418  011BC6  0A05               	xorlw	5	; case 108
 24419  011BC8  B4D8               	btfsc	status,2,c
 24420  011BCA  D6AD               	goto	l1982
 24421  011BCC  0A1F               	xorlw	31	; case 115
 24422  011BCE  B4D8               	btfsc	status,2,c
 24423  011BD0  D6B0               	goto	l1989
 24424  011BD2  0A06               	xorlw	6	; case 117
 24425  011BD4  B4D8               	btfsc	status,2,c
 24426  011BD6  D7C6               	goto	l2010
 24427  011BD8  0A0D               	xorlw	13	; case 120
 24428  011BDA  B4D8               	btfsc	status,2,c
 24429  011BDC  D6A8               	goto	l1987
 24430  011BDE  D7B9               	goto	l2009
 24431  011BE0                     l1984:
 24432                           
 24433                           ; BSR set to: 1
 24434                           ;doprnt.c: 825: if(flag & (0x700)) {
 24435                           
 24436                           ; BSR set to: 1
 24437  011BE0  0E07               	movlw	7
 24438  011BE2  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24439  011BE4  B4D8               	btfsc	status,2,c
 24440  011BE6  EFE7  F092         	goto	l2011
 24441                           
 24442                           ; BSR set to: 1
 24443                           ;doprnt.c: 827: if(flag & 0x1000)
 24444  011BEA  A9A8               	btfss	(__doprnt@flag+1)& (0+255),4,b
 24445  011BEC  D004               	goto	l2012
 24446                           
 24447                           ; BSR set to: 1
 24448                           ;doprnt.c: 829: prec = 6;
 24449  011BEE  0E00               	movlw	0
 24450  011BF0  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 24451  011BF2  0E06               	movlw	6
 24452  011BF4  6FA9               	movwf	__doprnt@prec& (0+255),b
 24453  011BF6                     l2012:
 24454                           
 24455                           ; BSR set to: 1
 24456                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 24457                           
 24458                           ; BSR set to: 1
 24459  011BF6  C186  FFD9         	movff	__doprnt@ap,fsr2l
 24460  011BFA  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 24461  011BFE  CFDF F188          	movff	indf2,??__doprnt
 24462  011C02  0E04               	movlw	4
 24463  011C04  26DE               	addwf	postinc2,f,c
 24464  011C06  CFDF F189          	movff	indf2,??__doprnt+1
 24465  011C0A  0E00               	movlw	0
 24466  011C0C  22DD               	addwfc	postdec2,f,c
 24467  011C0E  C188  FFD9         	movff	??__doprnt,fsr2l
 24468  011C12  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24469  011C16  CFDE F19D          	movff	postinc2,__doprnt@fval
 24470  011C1A  CFDE F19E          	movff	postinc2,__doprnt@fval+1
 24471  011C1E  CFDE F19F          	movff	postinc2,__doprnt@fval+2
 24472  011C22  CFDE F1A0          	movff	postinc2,__doprnt@fval+3
 24473                           
 24474                           ; BSR set to: 1
 24475                           ;doprnt.c: 831: if(fval < 0.0) {
 24476  011C26  AFA0               	btfss	(__doprnt@fval+3)& (0+255),7,b
 24477  011C28  D015               	goto	l2013
 24478                           
 24479                           ; BSR set to: 1
 24480                           ;doprnt.c: 832: fval = -fval;
 24481  011C2A  C19D  F125         	movff	__doprnt@fval,___flneg@f1
 24482  011C2E  C19E  F126         	movff	__doprnt@fval+1,___flneg@f1+1
 24483  011C32  C19F  F127         	movff	__doprnt@fval+2,___flneg@f1+2
 24484  011C36  C1A0  F128         	movff	__doprnt@fval+3,___flneg@f1+3
 24485  011C3A  ECDC  F0D6         	call	___flneg
 24486  011C3E  C125  F19D         	movff	?___flneg,__doprnt@fval
 24487  011C42  C126  F19E         	movff	?___flneg+1,__doprnt@fval+1
 24488  011C46  C127  F19F         	movff	?___flneg+2,__doprnt@fval+2
 24489  011C4A  C128  F1A0         	movff	?___flneg+3,__doprnt@fval+3
 24490                           
 24491                           ;doprnt.c: 833: flag |= 0x03;
 24492  011C4E  0E03               	movlw	3
 24493  011C50  0101               	movlb	1	; () banked
 24494  011C52  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 24495  011C54                     l2013:
 24496                           
 24497                           ; BSR set to: 1
 24498                           ;doprnt.c: 834: }
 24499                           ;doprnt.c: 835: exp = 0;
 24500                           
 24501                           ; BSR set to: 1
 24502  011C54  0E00               	movlw	0
 24503  011C56  6F98               	movwf	(__doprnt@exp+1)& (0+255),b
 24504  011C58  0E00               	movlw	0
 24505  011C5A  6F97               	movwf	__doprnt@exp& (0+255),b
 24506                           
 24507                           ; BSR set to: 1
 24508                           ;doprnt.c: 836: if( fval!=0) {
 24509  011C5C  519D               	movf	__doprnt@fval& (0+255),w,b
 24510  011C5E  119E               	iorwf	(__doprnt@fval+1)& (0+255),w,b
 24511  011C60  119F               	iorwf	(__doprnt@fval+2)& (0+255),w,b
 24512  011C62  11A0               	iorwf	(__doprnt@fval+3)& (0+255),w,b
 24513  011C64  B4D8               	btfsc	status,2,c
 24514  011C66  D084               	goto	l2018
 24515                           
 24516                           ; BSR set to: 1
 24517                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 24518  011C68  359F               	rlcf	(__doprnt@fval+2)& (0+255),w,b
 24519  011C6A  35A0               	rlcf	(__doprnt@fval+3)& (0+255),w,b
 24520  011C6C  0F82               	addlw	130
 24521  011C6E  6F97               	movwf	__doprnt@exp& (0+255),b
 24522  011C70  6B98               	clrf	(__doprnt@exp+1)& (0+255),b
 24523  011C72  0EFF               	movlw	255
 24524  011C74  2398               	addwfc	(__doprnt@exp+1)& (0+255),f,b
 24525                           
 24526                           ; BSR set to: 1
 24527                           ;doprnt.c: 838: exp--;
 24528  011C76  0797               	decf	__doprnt@exp& (0+255),f,b
 24529  011C78  A0D8               	btfss	status,0,c
 24530  011C7A  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 24531                           
 24532                           ; BSR set to: 1
 24533                           ;doprnt.c: 839: exp *= 3;
 24534  011C7C  C197  F117         	movff	__doprnt@exp,___wmul@multiplier
 24535  011C80  C198  F118         	movff	__doprnt@exp+1,___wmul@multiplier+1
 24536  011C84  0E00               	movlw	0
 24537  011C86  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24538  011C88  0E03               	movlw	3
 24539  011C8A  6F19               	movwf	___wmul@multiplicand& (0+255),b
 24540  011C8C  EC38  F0D7         	call	___wmul	;wreg free
 24541  011C90  C117  F197         	movff	?___wmul,__doprnt@exp
 24542  011C94  C118  F198         	movff	?___wmul+1,__doprnt@exp+1
 24543                           
 24544                           ;doprnt.c: 840: exp /= 10;
 24545  011C98  C197  F11D         	movff	__doprnt@exp,___awdiv@dividend
 24546  011C9C  C198  F11E         	movff	__doprnt@exp+1,___awdiv@dividend+1
 24547  011CA0  0E00               	movlw	0
 24548  011CA2  0101               	movlb	1	; () banked
 24549  011CA4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 24550  011CA6  0E0A               	movlw	10
 24551  011CA8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 24552  011CAA  EC71  F0CD         	call	___awdiv	;wreg free
 24553  011CAE  C11D  F197         	movff	?___awdiv,__doprnt@exp
 24554  011CB2  C11E  F198         	movff	?___awdiv+1,__doprnt@exp+1
 24555                           
 24556                           ;doprnt.c: 841: if(exp < 0)
 24557  011CB6  0101               	movlb	1	; () banked
 24558  011CB8  AF98               	btfss	(__doprnt@exp+1)& (0+255),7,b
 24559  011CBA  D003               	goto	l2015
 24560                           
 24561                           ; BSR set to: 1
 24562                           ;doprnt.c: 842: exp--;
 24563  011CBC  0797               	decf	__doprnt@exp& (0+255),f,b
 24564  011CBE  A0D8               	btfss	status,0,c
 24565  011CC0  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 24566  011CC2                     l2015:
 24567                           
 24568                           ; BSR set to: 1
 24569                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 24570                           
 24571                           ; BSR set to: 1
 24572  011CC2  5197               	movf	__doprnt@exp& (0+255),w,b
 24573  011CC4  0800               	sublw	0
 24574  011CC6  ECDA  F0A5         	call	_scale
 24575  011CCA  C16F  F199         	movff	?_scale,__doprnt@tmpval
 24576  011CCE  C170  F19A         	movff	?_scale+1,__doprnt@tmpval+1
 24577  011CD2  C171  F19B         	movff	?_scale+2,__doprnt@tmpval+2
 24578  011CD6  C172  F19C         	movff	?_scale+3,__doprnt@tmpval+3
 24579                           
 24580                           ;doprnt.c: 847: tmpval.integ *= fval;
 24581  011CDA  C199  F156         	movff	__doprnt@tmpval,___flmul@b
 24582  011CDE  C19A  F157         	movff	__doprnt@tmpval+1,___flmul@b+1
 24583  011CE2  C19B  F158         	movff	__doprnt@tmpval+2,___flmul@b+2
 24584  011CE6  C19C  F159         	movff	__doprnt@tmpval+3,___flmul@b+3
 24585  011CEA  C19D  F15A         	movff	__doprnt@fval,___flmul@a
 24586  011CEE  C19E  F15B         	movff	__doprnt@fval+1,___flmul@a+1
 24587  011CF2  C19F  F15C         	movff	__doprnt@fval+2,___flmul@a+2
 24588  011CF6  C1A0  F15D         	movff	__doprnt@fval+3,___flmul@a+3
 24589  011CFA  EC20  F0AC         	call	___flmul	;wreg free
 24590  011CFE  C156  F199         	movff	?___flmul,__doprnt@tmpval
 24591  011D02  C157  F19A         	movff	?___flmul+1,__doprnt@tmpval+1
 24592  011D06  C158  F19B         	movff	?___flmul+2,__doprnt@tmpval+2
 24593  011D0A  C159  F19C         	movff	?___flmul+3,__doprnt@tmpval+3
 24594                           
 24595                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 24596  011D0E  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 24597  011D12  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 24598  011D16  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 24599  011D1A  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 24600  011D1E  0E00               	movlw	0
 24601  011D20  0101               	movlb	1	; () banked
 24602  011D22  6F1B               	movwf	___flge@ff2& (0+255),b
 24603  011D24  0E00               	movlw	0
 24604  011D26  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24605  011D28  0E80               	movlw	128
 24606  011D2A  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24607  011D2C  0E3F               	movlw	63
 24608  011D2E  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24609  011D30  EC8E  F0C6         	call	___flge	;wreg free
 24610  011D34  0101               	movlb	1	; () banked
 24611  011D36  B0D8               	btfsc	status,0,c
 24612  011D38  D004               	goto	l2016
 24613                           
 24614                           ; BSR set to: 1
 24615                           ;doprnt.c: 849: exp--;
 24616  011D3A  0797               	decf	__doprnt@exp& (0+255),f,b
 24617  011D3C  A0D8               	btfss	status,0,c
 24618  011D3E  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 24619  011D40  D017               	goto	l2018
 24620  011D42                     l2016:
 24621                           
 24622                           ; BSR set to: 1
 24623                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 24624                           
 24625                           ; BSR set to: 1
 24626  011D42  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 24627  011D46  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 24628  011D4A  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 24629  011D4E  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 24630  011D52  0E00               	movlw	0
 24631  011D54  6F1B               	movwf	___flge@ff2& (0+255),b
 24632  011D56  0E00               	movlw	0
 24633  011D58  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24634  011D5A  0E20               	movlw	32
 24635  011D5C  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24636  011D5E  0E41               	movlw	65
 24637  011D60  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24638  011D62  EC8E  F0C6         	call	___flge	;wreg free
 24639  011D66  0101               	movlb	1	; () banked
 24640  011D68  A0D8               	btfss	status,0,c
 24641  011D6A  D002               	goto	l2018
 24642                           
 24643                           ; BSR set to: 1
 24644                           ;doprnt.c: 851: exp++;
 24645  011D6C  4B97               	infsnz	__doprnt@exp& (0+255),f,b
 24646  011D6E  2B98               	incf	(__doprnt@exp+1)& (0+255),f,b
 24647  011D70                     l2018:
 24648                           
 24649                           ; BSR set to: 1
 24650                           ;doprnt.c: 852: }
 24651                           ;doprnt.c: 1112: if(prec <= 12)
 24652                           
 24653                           ; BSR set to: 1
 24654                           
 24655                           ; BSR set to: 1
 24656                           
 24657                           ; BSR set to: 1
 24658  011D70  BFAA               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 24659  011D72  D006               	goto	u32260
 24660  011D74  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 24661  011D76  E121               	bnz	l22233
 24662  011D78  0E0D               	movlw	13
 24663  011D7A  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 24664  011D7C  B0D8               	btfsc	status,0,c
 24665  011D7E  D01D               	goto	l2019
 24666  011D80                     u32260:
 24667                           
 24668                           ; BSR set to: 1
 24669                           ;doprnt.c: 1113: fval += fround(prec);
 24670  011D80  C19D  F129         	movff	__doprnt@fval,___fladd@b
 24671  011D84  C19E  F12A         	movff	__doprnt@fval+1,___fladd@b+1
 24672  011D88  C19F  F12B         	movff	__doprnt@fval+2,___fladd@b+2
 24673  011D8C  C1A0  F12C         	movff	__doprnt@fval+3,___fladd@b+3
 24674  011D90  51A9               	movf	__doprnt@prec& (0+255),w,b
 24675  011D92  EC12  F0B7         	call	_fround
 24676  011D96  C16F  F12D         	movff	?_fround,___fladd@a
 24677  011D9A  C170  F12E         	movff	?_fround+1,___fladd@a+1
 24678  011D9E  C171  F12F         	movff	?_fround+2,___fladd@a+2
 24679  011DA2  C172  F130         	movff	?_fround+3,___fladd@a+3
 24680  011DA6  EC71  F0AF         	call	___fladd	;wreg free
 24681  011DAA  C129  F19D         	movff	?___fladd,__doprnt@fval
 24682  011DAE  C12A  F19E         	movff	?___fladd+1,__doprnt@fval+1
 24683  011DB2  C12B  F19F         	movff	?___fladd+2,__doprnt@fval+2
 24684  011DB6  C12C  F1A0         	movff	?___fladd+3,__doprnt@fval+3
 24685  011DBA                     l2019:
 24686  011DBA                     l22233:
 24687                           
 24688                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 24689  011DBA  0101               	movlb	1	; () banked
 24690  011DBC  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 24691  011DBE  D006               	goto	u32270
 24692  011DC0  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24693  011DC2  E122               	bnz	l22241
 24694  011DC4  0E0A               	movlw	10
 24695  011DC6  5D97               	subwf	__doprnt@exp& (0+255),w,b
 24696  011DC8  B0D8               	btfsc	status,0,c
 24697  011DCA  D01E               	goto	u32300
 24698  011DCC                     u32270:
 24699                           
 24700                           ; BSR set to: 1
 24701  011DCC  519D               	movf	__doprnt@fval& (0+255),w,b
 24702  011DCE  119E               	iorwf	(__doprnt@fval+1)& (0+255),w,b
 24703  011DD0  119F               	iorwf	(__doprnt@fval+2)& (0+255),w,b
 24704  011DD2  11A0               	iorwf	(__doprnt@fval+3)& (0+255),w,b
 24705  011DD4  B4D8               	btfsc	status,2,c
 24706  011DD6  D062               	goto	l2020
 24707                           
 24708                           ; BSR set to: 1
 24709  011DD8  C19D  F178         	movff	__doprnt@fval,___fltol@f1
 24710  011DDC  C19E  F179         	movff	__doprnt@fval+1,___fltol@f1+1
 24711  011DE0  C19F  F17A         	movff	__doprnt@fval+2,___fltol@f1+2
 24712  011DE4  C1A0  F17B         	movff	__doprnt@fval+3,___fltol@f1+3
 24713  011DE8  EC3C  F0C9         	call	___fltol	;wreg free
 24714  011DEC  0101               	movlb	1	; () banked
 24715  011DEE  5178               	movf	?___fltol& (0+255),w,b
 24716  011DF0  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 24717  011DF2  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 24718  011DF4  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 24719  011DF6  B4D8               	btfsc	status,2,c
 24720                           
 24721                           ; BSR set to: 1
 24722  011DF8  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 24723  011DFA  D050               	goto	l2020
 24724  011DFC  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24725  011DFE  E104               	bnz	l22241
 24726  011E00  0E02               	movlw	2
 24727  011E02  5D97               	subwf	__doprnt@exp& (0+255),w,b
 24728  011E04  A0D8               	btfss	status,0,c
 24729  011E06  D04A               	goto	l2020
 24730  011E08                     u32300:
 24731  011E08                     l22241:
 24732                           
 24733                           ; BSR set to: 1
 24734                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 24735  011E08  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 24736  011E0C  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 24737  011E10  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 24738  011E14  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 24739  011E18  0E5F               	movlw	95
 24740  011E1A  6F1B               	movwf	___flge@ff2& (0+255),b
 24741  011E1C  0E70               	movlw	112
 24742  011E1E  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24743  011E20  0E89               	movlw	137
 24744  011E22  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24745  011E24  0E40               	movlw	64
 24746  011E26  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24747  011E28  EC8E  F0C6         	call	___flge	;wreg free
 24748  011E2C  0101               	movlb	1	; () banked
 24749  011E2E  B0D8               	btfsc	status,0,c
 24750  011E30  D002               	goto	l2023
 24751                           
 24752                           ; BSR set to: 1
 24753                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 24754  011E32  0EF7               	movlw	247
 24755  011E34  D001               	goto	L3
 24756  011E36                     l2023:
 24757                           
 24758                           ; BSR set to: 1
 24759                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 24760                           
 24761                           ; BSR set to: 1
 24762  011E36  0EF8               	movlw	248
 24763  011E38                     L3:
 24764  011E38  2797               	addwf	__doprnt@exp& (0+255),f,b
 24765  011E3A  0EFF               	movlw	255
 24766  011E3C  2398               	addwfc	(__doprnt@exp+1)& (0+255),f,b
 24767                           
 24768                           ; BSR set to: 1
 24769                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 24770                           
 24771                           ; BSR set to: 1
 24772  011E3E  5197               	movf	__doprnt@exp& (0+255),w,b
 24773  011E40  ECDA  F0A5         	call	_scale
 24774  011E44  C16F  F199         	movff	?_scale,__doprnt@tmpval
 24775  011E48  C170  F19A         	movff	?_scale+1,__doprnt@tmpval+1
 24776  011E4C  C171  F19B         	movff	?_scale+2,__doprnt@tmpval+2
 24777  011E50  C172  F19C         	movff	?_scale+3,__doprnt@tmpval+3
 24778  011E54  C19D  F117         	movff	__doprnt@fval,__div_to_l_@f1
 24779  011E58  C19E  F118         	movff	__doprnt@fval+1,__div_to_l_@f1+1
 24780  011E5C  C19F  F119         	movff	__doprnt@fval+2,__div_to_l_@f1+2
 24781  011E60  C1A0  F11A         	movff	__doprnt@fval+3,__div_to_l_@f1+3
 24782  011E64  C199  F11B         	movff	__doprnt@tmpval,__div_to_l_@f2
 24783  011E68  C19A  F11C         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
 24784  011E6C  C19B  F11D         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
 24785  011E70  C19C  F11E         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
 24786  011E74  EC40  F0C4         	call	__div_to_l_	;wreg free
 24787  011E78  C117  F1A1         	movff	?__div_to_l_,__doprnt@val
 24788  011E7C  C118  F1A2         	movff	?__div_to_l_+1,__doprnt@val+1
 24789  011E80  C119  F1A3         	movff	?__div_to_l_+2,__doprnt@val+2
 24790  011E84  C11A  F1A4         	movff	?__div_to_l_+3,__doprnt@val+3
 24791                           
 24792                           ;doprnt.c: 1129: fval = 0.0;
 24793  011E88  0E00               	movlw	0
 24794  011E8A  0101               	movlb	1	; () banked
 24795  011E8C  6F9D               	movwf	__doprnt@fval& (0+255),b
 24796  011E8E  0E00               	movlw	0
 24797  011E90  6F9E               	movwf	(__doprnt@fval+1)& (0+255),b
 24798  011E92  0E00               	movlw	0
 24799  011E94  6F9F               	movwf	(__doprnt@fval+2)& (0+255),b
 24800  011E96  0E00               	movlw	0
 24801  011E98  6FA0               	movwf	(__doprnt@fval+3)& (0+255),b
 24802                           
 24803                           ;doprnt.c: 1130: } else {
 24804  011E9A  D03C               	goto	l2029
 24805  011E9C                     l2020:
 24806                           
 24807                           ; BSR set to: 1
 24808                           ;doprnt.c: 1131: val = (unsigned long)fval;
 24809                           
 24810                           ; BSR set to: 1
 24811  011E9C  C19D  F178         	movff	__doprnt@fval,___fltol@f1
 24812  011EA0  C19E  F179         	movff	__doprnt@fval+1,___fltol@f1+1
 24813  011EA4  C19F  F17A         	movff	__doprnt@fval+2,___fltol@f1+2
 24814  011EA8  C1A0  F17B         	movff	__doprnt@fval+3,___fltol@f1+3
 24815  011EAC  EC3C  F0C9         	call	___fltol	;wreg free
 24816  011EB0  C178  F1A1         	movff	?___fltol,__doprnt@val
 24817  011EB4  C179  F1A2         	movff	?___fltol+1,__doprnt@val+1
 24818  011EB8  C17A  F1A3         	movff	?___fltol+2,__doprnt@val+2
 24819  011EBC  C17B  F1A4         	movff	?___fltol+3,__doprnt@val+3
 24820                           
 24821                           ;doprnt.c: 1132: fval -= (double)val;
 24822  011EC0  C19D  F13D         	movff	__doprnt@fval,___flsub@b
 24823  011EC4  C19E  F13E         	movff	__doprnt@fval+1,___flsub@b+1
 24824  011EC8  C19F  F13F         	movff	__doprnt@fval+2,___flsub@b+2
 24825  011ECC  C1A0  F140         	movff	__doprnt@fval+3,___flsub@b+3
 24826  011ED0  C1A1  F117         	movff	__doprnt@val,___xxtofl@val
 24827  011ED4  C1A2  F118         	movff	__doprnt@val+1,___xxtofl@val+1
 24828  011ED8  C1A3  F119         	movff	__doprnt@val+2,___xxtofl@val+2
 24829  011EDC  C1A4  F11A         	movff	__doprnt@val+3,___xxtofl@val+3
 24830  011EE0  0E00               	movlw	0
 24831  011EE2  EC20  F0C1         	call	___xxtofl
 24832  011EE6  C117  F141         	movff	?___xxtofl,___flsub@a
 24833  011EEA  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 24834  011EEE  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 24835  011EF2  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 24836  011EF6  ECD7  F0D3         	call	___flsub	;wreg free
 24837  011EFA  C13D  F19D         	movff	?___flsub,__doprnt@fval
 24838  011EFE  C13E  F19E         	movff	?___flsub+1,__doprnt@fval+1
 24839  011F02  C13F  F19F         	movff	?___flsub+2,__doprnt@fval+2
 24840  011F06  C140  F1A0         	movff	?___flsub+3,__doprnt@fval+3
 24841                           
 24842                           ;doprnt.c: 1133: exp = 0;
 24843  011F0A  0E00               	movlw	0
 24844  011F0C  0101               	movlb	1	; () banked
 24845  011F0E  6F98               	movwf	(__doprnt@exp+1)& (0+255),b
 24846  011F10  0E00               	movlw	0
 24847  011F12  6F97               	movwf	__doprnt@exp& (0+255),b
 24848  011F14                     l2029:
 24849                           
 24850                           ; BSR set to: 1
 24851                           ;doprnt.c: 1134: }
 24852                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 24853                           
 24854                           ; BSR set to: 1
 24855  011F14  0E01               	movlw	1
 24856  011F16  6FAB               	movwf	__doprnt@c& (0+255),b
 24857  011F18                     l22261:
 24858                           
 24859                           ; BSR set to: 1
 24860  011F18  0E0A               	movlw	10
 24861  011F1A  19AB               	xorwf	__doprnt@c& (0+255),w,b
 24862  011F1C  B4D8               	btfsc	status,2,c
 24863  011F1E  D01B               	goto	u32340
 24864                           
 24865                           ; BSR set to: 1
 24866                           ;doprnt.c: 1137: if(val < dpowers[c])
 24867                           
 24868                           ; BSR set to: 1
 24869                           
 24870                           ; BSR set to: 1
 24871  011F20  51AB               	movf	__doprnt@c& (0+255),w,b
 24872  011F22  0D04               	mullw	4
 24873  011F24  0E0B               	movlw	low _dpowers
 24874  011F26  24F3               	addwf	prodl,w,c
 24875  011F28  6EF6               	movwf	tblptrl,c
 24876  011F2A  0ECF               	movlw	high _dpowers
 24877  011F2C  20F4               	addwfc	prodh,w,c
 24878  011F2E  6EF7               	movwf	tblptrh,c
 24879  011F30                     	if	1	;There are 3 active tblptr bytes
 24880  011F30  6AF8               	clrf	tblptru,c
 24881  011F32  0E00               	movlw	low (__mediumconst shr (0+16))
 24882  011F34  22F8               	addwfc	tblptru,f,c
 24883  011F36                     	endif
 24884  011F36  0009               	tblrd		*+
 24885  011F38  50F5               	movf	tablat,w,c
 24886  011F3A  5DA1               	subwf	__doprnt@val& (0+255),w,b
 24887  011F3C  0009               	tblrd		*+
 24888  011F3E  50F5               	movf	tablat,w,c
 24889  011F40  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 24890  011F42  0009               	tblrd		*+
 24891  011F44  50F5               	movf	tablat,w,c
 24892  011F46  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 24893  011F48  0009               	tblrd		*+
 24894  011F4A  50F5               	movf	tablat,w,c
 24895  011F4C  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 24896  011F4E  A0D8               	btfss	status,0,c
 24897  011F50  D002               	goto	u32340
 24898                           
 24899                           ; BSR set to: 1
 24900                           
 24901                           ; BSR set to: 1
 24902                           
 24903                           ; BSR set to: 1
 24904                           ;doprnt.c: 1138: break;
 24905  011F52  2BAB               	incf	__doprnt@c& (0+255),f,b
 24906  011F54  D7E1               	goto	l22261
 24907  011F56                     u32340:
 24908                           
 24909                           ; BSR set to: 1
 24910                           ;doprnt.c: 1142: width -= prec + c + exp;
 24911                           
 24912                           ; BSR set to: 1
 24913  011F56  C1AB  F188         	movff	__doprnt@c,??__doprnt
 24914  011F5A  6B89               	clrf	(??__doprnt+1)& (0+255),b
 24915  011F5C  BF88               	btfsc	??__doprnt& (0+255),7,b
 24916  011F5E  0789               	decf	(??__doprnt+1)& (0+255),f,b
 24917  011F60  51A9               	movf	__doprnt@prec& (0+255),w,b
 24918  011F62  2788               	addwf	??__doprnt& (0+255),f,b
 24919  011F64  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 24920  011F66  2389               	addwfc	(??__doprnt+1)& (0+255),f,b
 24921  011F68  5197               	movf	__doprnt@exp& (0+255),w,b
 24922  011F6A  2788               	addwf	??__doprnt& (0+255),f,b
 24923  011F6C  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24924  011F6E  2389               	addwfc	(??__doprnt+1)& (0+255),f,b
 24925  011F70  5188               	movf	??__doprnt& (0+255),w,b
 24926  011F72  5FA5               	subwf	__doprnt@width& (0+255),f,b
 24927  011F74  5189               	movf	(??__doprnt+1)& (0+255),w,b
 24928  011F76  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 24929                           
 24930                           ;doprnt.c: 1143: if(
 24931                           ;doprnt.c: 1147: prec)
 24932  011F78  51A9               	movf	__doprnt@prec& (0+255),w,b
 24933  011F7A  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24934  011F7C  B4D8               	btfsc	status,2,c
 24935  011F7E  D003               	goto	l2033
 24936                           
 24937                           ; BSR set to: 1
 24938                           ;doprnt.c: 1148: width--;
 24939  011F80  07A5               	decf	__doprnt@width& (0+255),f,b
 24940  011F82  A0D8               	btfss	status,0,c
 24941  011F84  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24942  011F86                     l2033:
 24943                           
 24944                           ; BSR set to: 1
 24945                           ;doprnt.c: 1149: if(flag & 0x03)
 24946                           
 24947                           ; BSR set to: 1
 24948  011F86  0E03               	movlw	3
 24949  011F88  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24950  011F8A  6F88               	movwf	??__doprnt& (0+255),b
 24951  011F8C  0E00               	movlw	0
 24952  011F8E  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24953  011F90  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24954  011F92  5188               	movf	??__doprnt& (0+255),w,b
 24955  011F94  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24956  011F96  B4D8               	btfsc	status,2,c
 24957  011F98  D003               	goto	l2034
 24958                           
 24959                           ; BSR set to: 1
 24960                           ;doprnt.c: 1150: width--;
 24961  011F9A  07A5               	decf	__doprnt@width& (0+255),f,b
 24962  011F9C  A0D8               	btfss	status,0,c
 24963  011F9E  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24964  011FA0                     l2034:
 24965                           
 24966                           ; BSR set to: 1
 24967                           ;doprnt.c: 1153: if(flag & 0x04) {
 24968                           
 24969                           ; BSR set to: 1
 24970  011FA0  A5A7               	btfss	__doprnt@flag& (0+255),2,b
 24971  011FA2  D0B6               	goto	l2045
 24972                           
 24973                           ; BSR set to: 1
 24974                           ;doprnt.c: 1157: if(flag & 0x03)
 24975  011FA4  0E03               	movlw	3
 24976  011FA6  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24977  011FA8  6F88               	movwf	??__doprnt& (0+255),b
 24978  011FAA  0E00               	movlw	0
 24979  011FAC  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24980  011FAE  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24981  011FB0  5188               	movf	??__doprnt& (0+255),w,b
 24982  011FB2  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24983  011FB4  B4D8               	btfsc	status,2,c
 24984  011FB6  D06C               	goto	l2039
 24985                           
 24986                           ; BSR set to: 1
 24987                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 24988  011FB8  EE20 F002          	lfsr	2,2
 24989  011FBC  5182               	movf	__doprnt@pb& (0+255),w,b
 24990  011FBE  26D9               	addwf	fsr2l,f,c
 24991  011FC0  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24992  011FC2  22DA               	addwfc	fsr2h,f,c
 24993  011FC4  50DE               	movf	postinc2,w,c
 24994  011FC6  10DE               	iorwf	postinc2,w,c
 24995  011FC8  10DE               	iorwf	postinc2,w,c
 24996  011FCA  B4D8               	btfsc	status,2,c
 24997  011FCC  D013               	goto	l2037
 24998                           
 24999                           ; BSR set to: 1
 25000  011FCE  EE20 F002          	lfsr	2,2
 25001  011FD2  5182               	movf	__doprnt@pb& (0+255),w,b
 25002  011FD4  26D9               	addwf	fsr2l,f,c
 25003  011FD6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25004  011FD8  22DA               	addwfc	fsr2h,f,c
 25005  011FDA  D801               	call	u32408
 25006  011FDC  D059               	goto	l2039
 25007  011FDE                     u32408:
 25008  011FDE  0005               	push	
 25009  011FE0  6EFA               	movwf	pclath,c
 25010  011FE2  50DE               	movf	postinc2,w,c
 25011  011FE4  6EFD               	movwf	tosl,c
 25012  011FE6  50DE               	movf	postinc2,w,c
 25013  011FE8  6EFE               	movwf	tosh,c
 25014  011FEA  50DE               	movf	postinc2,w,c
 25015  011FEC  6EFF               	movwf	tosu,c
 25016  011FEE  50FA               	movf	pclath,w,c
 25017  011FF0  0E2D               	movlw	45
 25018  011FF2  0012               	return		;indir
 25019  011FF4                     l2037:
 25020  011FF4  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25021  011FF8  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25022  011FFC  CFDE F188          	movff	postinc2,??__doprnt
 25023  012000  CFDD F189          	movff	postdec2,??__doprnt+1
 25024  012004  C188  FFD9         	movff	??__doprnt,fsr2l
 25025  012008  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25026  01200C  0E2D               	movlw	45
 25027  01200E  6EDF               	movwf	indf2,c
 25028  012010  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25029  012014  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25030  012018  2ADE               	incf	postinc2,f,c
 25031  01201A  0E00               	movlw	0
 25032  01201C  22DD               	addwfc	postdec2,f,c
 25033                           
 25034                           ;doprnt.c: 1168: while(width > 0) {
 25035  01201E  D038               	goto	l2039
 25036  012020                     l22293:
 25037                           
 25038                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 25039  012020  0101               	movlb	1	; () banked
 25040  012022  EE20 F002          	lfsr	2,2
 25041  012026  5182               	movf	__doprnt@pb& (0+255),w,b
 25042  012028  26D9               	addwf	fsr2l,f,c
 25043  01202A  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25044  01202C  22DA               	addwfc	fsr2h,f,c
 25045  01202E  50DE               	movf	postinc2,w,c
 25046  012030  10DE               	iorwf	postinc2,w,c
 25047  012032  10DE               	iorwf	postinc2,w,c
 25048  012034  B4D8               	btfsc	status,2,c
 25049  012036  D013               	goto	l2041
 25050                           
 25051                           ; BSR set to: 1
 25052  012038  EE20 F002          	lfsr	2,2
 25053  01203C  5182               	movf	__doprnt@pb& (0+255),w,b
 25054  01203E  26D9               	addwf	fsr2l,f,c
 25055  012040  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25056  012042  22DA               	addwfc	fsr2h,f,c
 25057  012044  D801               	call	u32428
 25058  012046  D020               	goto	l2042
 25059  012048                     u32428:
 25060  012048  0005               	push	
 25061  01204A  6EFA               	movwf	pclath,c
 25062  01204C  50DE               	movf	postinc2,w,c
 25063  01204E  6EFD               	movwf	tosl,c
 25064  012050  50DE               	movf	postinc2,w,c
 25065  012052  6EFE               	movwf	tosh,c
 25066  012054  50DE               	movf	postinc2,w,c
 25067  012056  6EFF               	movwf	tosu,c
 25068  012058  50FA               	movf	pclath,w,c
 25069  01205A  0E30               	movlw	48
 25070  01205C  0012               	return		;indir
 25071  01205E                     l2041:
 25072  01205E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25073  012062  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25074  012066  CFDE F188          	movff	postinc2,??__doprnt
 25075  01206A  CFDD F189          	movff	postdec2,??__doprnt+1
 25076  01206E  C188  FFD9         	movff	??__doprnt,fsr2l
 25077  012072  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25078  012076  0E30               	movlw	48
 25079  012078  6EDF               	movwf	indf2,c
 25080  01207A  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25081  01207E  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25082  012082  2ADE               	incf	postinc2,f,c
 25083  012084  0E00               	movlw	0
 25084  012086  22DD               	addwfc	postdec2,f,c
 25085  012088                     l2042:
 25086                           
 25087                           ;doprnt.c: 1170: width--;
 25088  012088  0101               	movlb	1	; () banked
 25089  01208A  07A5               	decf	__doprnt@width& (0+255),f,b
 25090  01208C  A0D8               	btfss	status,0,c
 25091  01208E  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 25092  012090                     l2039:
 25093                           
 25094                           ; BSR set to: 1
 25095  012090  0101               	movlb	1	; () banked
 25096  012092  BFA6               	btfsc	(__doprnt@width+1)& (0+255),7,b
 25097  012094  D0F6               	goto	l2056
 25098  012096  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 25099  012098  E1C3               	bnz	l22293
 25100  01209A  05A5               	decf	__doprnt@width& (0+255),w,b
 25101  01209C  A0D8               	btfss	status,0,c
 25102  01209E  D0F1               	goto	l2056
 25103  0120A0  D7BF               	goto	l2040
 25104  0120A2                     l22305:
 25105                           
 25106                           ; BSR set to: 1
 25107                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 25108  0120A2  EE20 F002          	lfsr	2,2
 25109  0120A6  5182               	movf	__doprnt@pb& (0+255),w,b
 25110  0120A8  26D9               	addwf	fsr2l,f,c
 25111  0120AA  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25112  0120AC  22DA               	addwfc	fsr2h,f,c
 25113  0120AE  50DE               	movf	postinc2,w,c
 25114  0120B0  10DE               	iorwf	postinc2,w,c
 25115  0120B2  10DE               	iorwf	postinc2,w,c
 25116  0120B4  B4D8               	btfsc	status,2,c
 25117  0120B6  D013               	goto	l2047
 25118                           
 25119                           ; BSR set to: 1
 25120  0120B8  EE20 F002          	lfsr	2,2
 25121  0120BC  5182               	movf	__doprnt@pb& (0+255),w,b
 25122  0120BE  26D9               	addwf	fsr2l,f,c
 25123  0120C0  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25124  0120C2  22DA               	addwfc	fsr2h,f,c
 25125  0120C4  D801               	call	u32458
 25126  0120C6  D020               	goto	l2048
 25127  0120C8                     u32458:
 25128  0120C8  0005               	push	
 25129  0120CA  6EFA               	movwf	pclath,c
 25130  0120CC  50DE               	movf	postinc2,w,c
 25131  0120CE  6EFD               	movwf	tosl,c
 25132  0120D0  50DE               	movf	postinc2,w,c
 25133  0120D2  6EFE               	movwf	tosh,c
 25134  0120D4  50DE               	movf	postinc2,w,c
 25135  0120D6  6EFF               	movwf	tosu,c
 25136  0120D8  50FA               	movf	pclath,w,c
 25137  0120DA  0E20               	movlw	32
 25138  0120DC  0012               	return		;indir
 25139  0120DE                     l2047:
 25140  0120DE  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25141  0120E2  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25142  0120E6  CFDE F188          	movff	postinc2,??__doprnt
 25143  0120EA  CFDD F189          	movff	postdec2,??__doprnt+1
 25144  0120EE  C188  FFD9         	movff	??__doprnt,fsr2l
 25145  0120F2  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25146  0120F6  0E20               	movlw	32
 25147  0120F8  6EDF               	movwf	indf2,c
 25148  0120FA  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25149  0120FE  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25150  012102  2ADE               	incf	postinc2,f,c
 25151  012104  0E00               	movlw	0
 25152  012106  22DD               	addwfc	postdec2,f,c
 25153  012108                     l2048:
 25154                           
 25155                           ;doprnt.c: 1182: width--;
 25156  012108  0101               	movlb	1	; () banked
 25157  01210A  07A5               	decf	__doprnt@width& (0+255),f,b
 25158  01210C  A0D8               	btfss	status,0,c
 25159  01210E  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 25160  012110                     l2045:
 25161                           
 25162                           ; BSR set to: 1
 25163                           
 25164                           ; BSR set to: 1
 25165  012110  BFA6               	btfsc	(__doprnt@width+1)& (0+255),7,b
 25166  012112  D005               	goto	u32460
 25167  012114  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 25168  012116  E1C5               	bnz	l22305
 25169  012118  05A5               	decf	__doprnt@width& (0+255),w,b
 25170  01211A  B0D8               	btfsc	status,0,c
 25171  01211C  D7C2               	goto	l2046
 25172  01211E                     u32460:
 25173                           
 25174                           ; BSR set to: 1
 25175                           ;doprnt.c: 1183: }
 25176                           ;doprnt.c: 1188: if(flag & 0x03)
 25177                           
 25178                           ; BSR set to: 1
 25179  01211E  0E03               	movlw	3
 25180  012120  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25181  012122  6F88               	movwf	??__doprnt& (0+255),b
 25182  012124  0E00               	movlw	0
 25183  012126  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25184  012128  6F89               	movwf	(??__doprnt+1)& (0+255),b
 25185  01212A  5188               	movf	??__doprnt& (0+255),w,b
 25186  01212C  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 25187  01212E  B4D8               	btfsc	status,2,c
 25188  012130  D0A8               	goto	l2056
 25189                           
 25190                           ; BSR set to: 1
 25191                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 25192  012132  EE20 F002          	lfsr	2,2
 25193  012136  5182               	movf	__doprnt@pb& (0+255),w,b
 25194  012138  26D9               	addwf	fsr2l,f,c
 25195  01213A  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25196  01213C  22DA               	addwfc	fsr2h,f,c
 25197  01213E  50DE               	movf	postinc2,w,c
 25198  012140  10DE               	iorwf	postinc2,w,c
 25199  012142  10DE               	iorwf	postinc2,w,c
 25200  012144  B4D8               	btfsc	status,2,c
 25201  012146  D013               	goto	l2051
 25202                           
 25203                           ; BSR set to: 1
 25204  012148  EE20 F002          	lfsr	2,2
 25205  01214C  5182               	movf	__doprnt@pb& (0+255),w,b
 25206  01214E  26D9               	addwf	fsr2l,f,c
 25207  012150  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25208  012152  22DA               	addwfc	fsr2h,f,c
 25209  012154  D801               	call	u32498
 25210  012156  D095               	goto	l2056
 25211  012158                     u32498:
 25212  012158  0005               	push	
 25213  01215A  6EFA               	movwf	pclath,c
 25214  01215C  50DE               	movf	postinc2,w,c
 25215  01215E  6EFD               	movwf	tosl,c
 25216  012160  50DE               	movf	postinc2,w,c
 25217  012162  6EFE               	movwf	tosh,c
 25218  012164  50DE               	movf	postinc2,w,c
 25219  012166  6EFF               	movwf	tosu,c
 25220  012168  50FA               	movf	pclath,w,c
 25221  01216A  0E2D               	movlw	45
 25222  01216C  0012               	return		;indir
 25223  01216E                     l2051:
 25224  01216E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25225  012172  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25226  012176  CFDE F188          	movff	postinc2,??__doprnt
 25227  01217A  CFDD F189          	movff	postdec2,??__doprnt+1
 25228  01217E  C188  FFD9         	movff	??__doprnt,fsr2l
 25229  012182  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25230  012186  0E2D               	movlw	45
 25231  012188  D074               	goto	L4
 25232  01218A                     
 25233                           ;doprnt.c: 1200: {
 25234                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 25235  01218A  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 25236  01218E  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 25237  012192  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 25238  012196  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 25239  01219A  0101               	movlb	1	; () banked
 25240  01219C  51AB               	movf	__doprnt@c& (0+255),w,b
 25241  01219E  0D04               	mullw	4
 25242  0121A0  0E0B               	movlw	low _dpowers
 25243  0121A2  24F3               	addwf	prodl,w,c
 25244  0121A4  6EF6               	movwf	tblptrl,c
 25245  0121A6  0ECF               	movlw	high _dpowers
 25246  0121A8  20F4               	addwfc	prodh,w,c
 25247  0121AA  6EF7               	movwf	tblptrh,c
 25248  0121AC                     	if	1	;There are 3 active tblptr bytes
 25249  0121AC  6AF8               	clrf	tblptru,c
 25250  0121AE  0E00               	movlw	low (__mediumconst shr (0+16))
 25251  0121B0  22F8               	addwfc	tblptru,f,c
 25252  0121B2                     	endif
 25253  0121B2  0009               	tblrd		*+
 25254  0121B4  CFF5 F11B          	movff	tablat,___lldiv@divisor
 25255  0121B8  0009               	tblrd		*+
 25256  0121BA  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 25257  0121BE  0009               	tblrd		*+
 25258  0121C0  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 25259  0121C4  000A               	tblrd		*-
 25260  0121C6  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 25261  0121CA  ECB4  F0CD         	call	___lldiv
 25262  0121CE  C117  F199         	movff	?___lldiv,__doprnt@tmpval
 25263  0121D2  C118  F19A         	movff	?___lldiv+1,__doprnt@tmpval+1
 25264  0121D6  C119  F19B         	movff	?___lldiv+2,__doprnt@tmpval+2
 25265  0121DA  C11A  F19C         	movff	?___lldiv+3,__doprnt@tmpval+3
 25266                           
 25267                           ;doprnt.c: 1202: tmpval.vd %= 10;
 25268  0121DE  C199  F124         	movff	__doprnt@tmpval,___llmod@dividend
 25269  0121E2  C19A  F125         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 25270  0121E6  C19B  F126         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 25271  0121EA  C19C  F127         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 25272  0121EE  0E0A               	movlw	10
 25273  0121F0  0101               	movlb	1	; () banked
 25274  0121F2  6F28               	movwf	___llmod@divisor& (0+255),b
 25275  0121F4  0E00               	movlw	0
 25276  0121F6  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 25277  0121F8  0E00               	movlw	0
 25278  0121FA  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 25279  0121FC  0E00               	movlw	0
 25280  0121FE  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 25281  012200  ECB2  F0D0         	call	___llmod	;wreg free
 25282  012204  C124  F199         	movff	?___llmod,__doprnt@tmpval
 25283  012208  C125  F19A         	movff	?___llmod+1,__doprnt@tmpval+1
 25284  01220C  C126  F19B         	movff	?___llmod+2,__doprnt@tmpval+2
 25285  012210  C127  F19C         	movff	?___llmod+3,__doprnt@tmpval+3
 25286                           
 25287                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 25288  012214  0101               	movlb	1	; () banked
 25289  012216  EE20 F002          	lfsr	2,2
 25290  01221A  5182               	movf	__doprnt@pb& (0+255),w,b
 25291  01221C  26D9               	addwf	fsr2l,f,c
 25292  01221E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25293  012220  22DA               	addwfc	fsr2h,f,c
 25294  012222  50DE               	movf	postinc2,w,c
 25295  012224  10DE               	iorwf	postinc2,w,c
 25296  012226  10DE               	iorwf	postinc2,w,c
 25297  012228  B4D8               	btfsc	status,2,c
 25298  01222A  D014               	goto	l2055
 25299                           
 25300                           ; BSR set to: 1
 25301  01222C  EE20 F002          	lfsr	2,2
 25302  012230  5182               	movf	__doprnt@pb& (0+255),w,b
 25303  012232  26D9               	addwf	fsr2l,f,c
 25304  012234  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25305  012236  22DA               	addwfc	fsr2h,f,c
 25306  012238  D801               	call	u32518
 25307  01223A  D023               	goto	l2056
 25308  01223C                     u32518:
 25309  01223C  0005               	push	
 25310  01223E  6EFA               	movwf	pclath,c
 25311  012240  50DE               	movf	postinc2,w,c
 25312  012242  6EFD               	movwf	tosl,c
 25313  012244  50DE               	movf	postinc2,w,c
 25314  012246  6EFE               	movwf	tosh,c
 25315  012248  50DE               	movf	postinc2,w,c
 25316  01224A  6EFF               	movwf	tosu,c
 25317  01224C  50FA               	movf	pclath,w,c
 25318  01224E  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25319  012250  0F30               	addlw	48
 25320  012252  0012               	return		;indir
 25321  012254                     l2055:
 25322  012254  0101               	movlb	1	; () banked
 25323  012256  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25324  012258  0F30               	addlw	48
 25325  01225A  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25326  01225E  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25327  012262  CFDE F188          	movff	postinc2,??__doprnt
 25328  012266  CFDD F189          	movff	postdec2,??__doprnt+1
 25329  01226A  C188  FFD9         	movff	??__doprnt,fsr2l
 25330  01226E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25331  012272                     L4:
 25332  012272  6EDF               	movwf	indf2,c
 25333  012274  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25334  012278  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25335  01227C  2ADE               	incf	postinc2,f,c
 25336  01227E  0E00               	movlw	0
 25337  012280  22DD               	addwfc	postdec2,f,c
 25338  012282                     l2056:
 25339                           
 25340                           ; BSR set to: 1
 25341                           
 25342                           ; BSR set to: 1
 25343  012282  0101               	movlb	1	; () banked
 25344  012284  07AB               	decf	__doprnt@c& (0+255),f,b
 25345  012286  29AB               	incf	__doprnt@c& (0+255),w,b
 25346  012288  B4D8               	btfsc	status,2,c
 25347  01228A  D038               	goto	l2058
 25348  01228C  D77E               	goto	l2054
 25349  01228E                     l22339:
 25350                           
 25351                           ; BSR set to: 1
 25352                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 25353  01228E  EE20 F002          	lfsr	2,2
 25354  012292  5182               	movf	__doprnt@pb& (0+255),w,b
 25355  012294  26D9               	addwf	fsr2l,f,c
 25356  012296  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25357  012298  22DA               	addwfc	fsr2h,f,c
 25358  01229A  50DE               	movf	postinc2,w,c
 25359  01229C  10DE               	iorwf	postinc2,w,c
 25360  01229E  10DE               	iorwf	postinc2,w,c
 25361  0122A0  B4D8               	btfsc	status,2,c
 25362  0122A2  D013               	goto	l2060
 25363                           
 25364                           ; BSR set to: 1
 25365  0122A4  EE20 F002          	lfsr	2,2
 25366  0122A8  5182               	movf	__doprnt@pb& (0+255),w,b
 25367  0122AA  26D9               	addwf	fsr2l,f,c
 25368  0122AC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25369  0122AE  22DA               	addwfc	fsr2h,f,c
 25370  0122B0  D801               	call	u32548
 25371  0122B2  D020               	goto	l2061
 25372  0122B4                     u32548:
 25373  0122B4  0005               	push	
 25374  0122B6  6EFA               	movwf	pclath,c
 25375  0122B8  50DE               	movf	postinc2,w,c
 25376  0122BA  6EFD               	movwf	tosl,c
 25377  0122BC  50DE               	movf	postinc2,w,c
 25378  0122BE  6EFE               	movwf	tosh,c
 25379  0122C0  50DE               	movf	postinc2,w,c
 25380  0122C2  6EFF               	movwf	tosu,c
 25381  0122C4  50FA               	movf	pclath,w,c
 25382  0122C6  0E30               	movlw	48
 25383  0122C8  0012               	return		;indir
 25384  0122CA                     l2060:
 25385  0122CA  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25386  0122CE  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25387  0122D2  CFDE F188          	movff	postinc2,??__doprnt
 25388  0122D6  CFDD F189          	movff	postdec2,??__doprnt+1
 25389  0122DA  C188  FFD9         	movff	??__doprnt,fsr2l
 25390  0122DE  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25391  0122E2  0E30               	movlw	48
 25392  0122E4  6EDF               	movwf	indf2,c
 25393  0122E6  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25394  0122EA  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25395  0122EE  2ADE               	incf	postinc2,f,c
 25396  0122F0  0E00               	movlw	0
 25397  0122F2  22DD               	addwfc	postdec2,f,c
 25398  0122F4                     l2061:
 25399                           
 25400                           ;doprnt.c: 1209: exp--;
 25401  0122F4  0101               	movlb	1	; () banked
 25402  0122F6  0797               	decf	__doprnt@exp& (0+255),f,b
 25403  0122F8  A0D8               	btfss	status,0,c
 25404  0122FA  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 25405  0122FC                     l2058:
 25406                           
 25407                           ; BSR set to: 1
 25408                           
 25409                           ; BSR set to: 1
 25410  0122FC  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 25411  0122FE  D005               	goto	u32550
 25412  012300  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 25413  012302  E1C5               	bnz	l22339
 25414  012304  0597               	decf	__doprnt@exp& (0+255),w,b
 25415  012306  B0D8               	btfsc	status,0,c
 25416  012308  D7C2               	goto	l2059
 25417  01230A                     u32550:
 25418                           
 25419                           ; BSR set to: 1
 25420                           ;doprnt.c: 1210: }
 25421                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 25422                           
 25423                           ; BSR set to: 1
 25424  01230A  BFAA               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 25425  01230C  D009               	goto	l2063
 25426  01230E  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25427  012310  E104               	bnz	u32560
 25428  012312  0E09               	movlw	9
 25429  012314  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 25430  012316  A0D8               	btfss	status,0,c
 25431  012318  D003               	goto	l2063
 25432  01231A                     u32560:
 25433                           
 25434                           ; BSR set to: 1
 25435                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 25436  01231A  0E08               	movlw	8
 25437  01231C  6FAB               	movwf	__doprnt@c& (0+255),b
 25438  01231E  D002               	goto	l2064
 25439  012320                     l2063:
 25440                           
 25441                           ; BSR set to: 1
 25442                           ;doprnt.c: 1213: else
 25443                           ;doprnt.c: 1214: c = prec;
 25444  012320  C1A9  F1AB         	movff	__doprnt@prec,__doprnt@c
 25445  012324                     l2064:
 25446                           
 25447                           ; BSR set to: 1
 25448                           ;doprnt.c: 1215: prec -= c;
 25449                           
 25450                           ; BSR set to: 1
 25451  012324  51AB               	movf	__doprnt@c& (0+255),w,b
 25452  012326  5FA9               	subwf	__doprnt@prec& (0+255),f,b
 25453  012328  0E00               	movlw	0
 25454  01232A  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25455  01232C  0EFF               	movlw	255
 25456  01232E  5BAA               	subwfb	(__doprnt@prec+1)& (0+255),f,b
 25457                           
 25458                           ; BSR set to: 1
 25459                           ;doprnt.c: 1219: if(c)
 25460  012330  51AB               	movf	__doprnt@c& (0+255),w,b
 25461  012332  B4D8               	btfsc	status,2,c
 25462  012334  D033               	goto	l2067
 25463                           
 25464                           ; BSR set to: 1
 25465                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 25466  012336  EE20 F002          	lfsr	2,2
 25467  01233A  5182               	movf	__doprnt@pb& (0+255),w,b
 25468  01233C  26D9               	addwf	fsr2l,f,c
 25469  01233E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25470  012340  22DA               	addwfc	fsr2h,f,c
 25471  012342  50DE               	movf	postinc2,w,c
 25472  012344  10DE               	iorwf	postinc2,w,c
 25473  012346  10DE               	iorwf	postinc2,w,c
 25474  012348  B4D8               	btfsc	status,2,c
 25475  01234A  D013               	goto	l2066
 25476                           
 25477                           ; BSR set to: 1
 25478  01234C  EE20 F002          	lfsr	2,2
 25479  012350  5182               	movf	__doprnt@pb& (0+255),w,b
 25480  012352  26D9               	addwf	fsr2l,f,c
 25481  012354  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25482  012356  22DA               	addwfc	fsr2h,f,c
 25483  012358  D801               	call	u32598
 25484  01235A  D020               	goto	l2067
 25485  01235C                     u32598:
 25486  01235C  0005               	push	
 25487  01235E  6EFA               	movwf	pclath,c
 25488  012360  50DE               	movf	postinc2,w,c
 25489  012362  6EFD               	movwf	tosl,c
 25490  012364  50DE               	movf	postinc2,w,c
 25491  012366  6EFE               	movwf	tosh,c
 25492  012368  50DE               	movf	postinc2,w,c
 25493  01236A  6EFF               	movwf	tosu,c
 25494  01236C  50FA               	movf	pclath,w,c
 25495  01236E  0E2E               	movlw	46
 25496  012370  0012               	return		;indir
 25497  012372                     l2066:
 25498  012372  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25499  012376  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25500  01237A  CFDE F188          	movff	postinc2,??__doprnt
 25501  01237E  CFDD F189          	movff	postdec2,??__doprnt+1
 25502  012382  C188  FFD9         	movff	??__doprnt,fsr2l
 25503  012386  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25504  01238A  0E2E               	movlw	46
 25505  01238C  6EDF               	movwf	indf2,c
 25506  01238E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25507  012392  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25508  012396  2ADE               	incf	postinc2,f,c
 25509  012398  0E00               	movlw	0
 25510  01239A  22DD               	addwfc	postdec2,f,c
 25511  01239C                     l2067:
 25512                           
 25513                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25514  01239C  0101               	movlb	1	; () banked
 25515  01239E  51AB               	movf	__doprnt@c& (0+255),w,b
 25516  0123A0  ECDA  F0A5         	call	_scale
 25517  0123A4  C16F  F18E         	movff	?_scale,__doprnt$5214
 25518  0123A8  C170  F18F         	movff	?_scale+1,__doprnt$5214+1
 25519  0123AC  C171  F190         	movff	?_scale+2,__doprnt$5214+2
 25520  0123B0  C172  F191         	movff	?_scale+3,__doprnt$5214+3
 25521                           
 25522                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25523  0123B4  C19D  F15A         	movff	__doprnt@fval,___flmul@a
 25524  0123B8  C19E  F15B         	movff	__doprnt@fval+1,___flmul@a+1
 25525  0123BC  C19F  F15C         	movff	__doprnt@fval+2,___flmul@a+2
 25526  0123C0  C1A0  F15D         	movff	__doprnt@fval+3,___flmul@a+3
 25527  0123C4  C18E  F156         	movff	__doprnt$5214,___flmul@b
 25528  0123C8  C18F  F157         	movff	__doprnt$5214+1,___flmul@b+1
 25529  0123CC  C190  F158         	movff	__doprnt$5214+2,___flmul@b+2
 25530  0123D0  C191  F159         	movff	__doprnt$5214+3,___flmul@b+3
 25531  0123D4  EC20  F0AC         	call	___flmul	;wreg free
 25532  0123D8  C156  F178         	movff	?___flmul,___fltol@f1
 25533  0123DC  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 25534  0123E0  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 25535  0123E4  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 25536  0123E8  EC3C  F0C9         	call	___fltol	;wreg free
 25537  0123EC  C178  F1A1         	movff	?___fltol,__doprnt@val
 25538  0123F0  C179  F1A2         	movff	?___fltol+1,__doprnt@val+1
 25539  0123F4  C17A  F1A3         	movff	?___fltol+2,__doprnt@val+2
 25540  0123F8  C17B  F1A4         	movff	?___fltol+3,__doprnt@val+3
 25541                           
 25542                           ;doprnt.c: 1228: while(c--) {
 25543  0123FC  D0A6               	goto	l2068
 25544  0123FE                     
 25545                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 25546  0123FE  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 25547  012402  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 25548  012406  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 25549  01240A  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 25550  01240E  0101               	movlb	1	; () banked
 25551  012410  51AB               	movf	__doprnt@c& (0+255),w,b
 25552  012412  0D04               	mullw	4
 25553  012414  0E0B               	movlw	low _dpowers
 25554  012416  24F3               	addwf	prodl,w,c
 25555  012418  6EF6               	movwf	tblptrl,c
 25556  01241A  0ECF               	movlw	high _dpowers
 25557  01241C  20F4               	addwfc	prodh,w,c
 25558  01241E  6EF7               	movwf	tblptrh,c
 25559  012420                     	if	1	;There are 3 active tblptr bytes
 25560  012420  6AF8               	clrf	tblptru,c
 25561  012422  0E00               	movlw	low (__mediumconst shr (0+16))
 25562  012424  22F8               	addwfc	tblptru,f,c
 25563  012426                     	endif
 25564  012426  0009               	tblrd		*+
 25565  012428  CFF5 F11B          	movff	tablat,___lldiv@divisor
 25566  01242C  0009               	tblrd		*+
 25567  01242E  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 25568  012432  0009               	tblrd		*+
 25569  012434  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 25570  012438  000A               	tblrd		*-
 25571  01243A  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 25572  01243E  ECB4  F0CD         	call	___lldiv	;wreg free
 25573  012442  C117  F199         	movff	?___lldiv,__doprnt@tmpval
 25574  012446  C118  F19A         	movff	?___lldiv+1,__doprnt@tmpval+1
 25575  01244A  C119  F19B         	movff	?___lldiv+2,__doprnt@tmpval+2
 25576  01244E  C11A  F19C         	movff	?___lldiv+3,__doprnt@tmpval+3
 25577                           
 25578                           ;doprnt.c: 1230: tmpval.vd %= 10;
 25579  012452  C199  F124         	movff	__doprnt@tmpval,___llmod@dividend
 25580  012456  C19A  F125         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 25581  01245A  C19B  F126         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 25582  01245E  C19C  F127         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 25583  012462  0E0A               	movlw	10
 25584  012464  0101               	movlb	1	; () banked
 25585  012466  6F28               	movwf	___llmod@divisor& (0+255),b
 25586  012468  0E00               	movlw	0
 25587  01246A  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 25588  01246C  0E00               	movlw	0
 25589  01246E  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 25590  012470  0E00               	movlw	0
 25591  012472  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 25592  012474  ECB2  F0D0         	call	___llmod	;wreg free
 25593  012478  C124  F199         	movff	?___llmod,__doprnt@tmpval
 25594  01247C  C125  F19A         	movff	?___llmod+1,__doprnt@tmpval+1
 25595  012480  C126  F19B         	movff	?___llmod+2,__doprnt@tmpval+2
 25596  012484  C127  F19C         	movff	?___llmod+3,__doprnt@tmpval+3
 25597                           
 25598                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 25599  012488  0101               	movlb	1	; () banked
 25600  01248A  EE20 F002          	lfsr	2,2
 25601  01248E  5182               	movf	__doprnt@pb& (0+255),w,b
 25602  012490  26D9               	addwf	fsr2l,f,c
 25603  012492  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25604  012494  22DA               	addwfc	fsr2h,f,c
 25605  012496  50DE               	movf	postinc2,w,c
 25606  012498  10DE               	iorwf	postinc2,w,c
 25607  01249A  10DE               	iorwf	postinc2,w,c
 25608  01249C  B4D8               	btfsc	status,2,c
 25609  01249E  D014               	goto	l2070
 25610                           
 25611                           ; BSR set to: 1
 25612  0124A0  EE20 F002          	lfsr	2,2
 25613  0124A4  5182               	movf	__doprnt@pb& (0+255),w,b
 25614  0124A6  26D9               	addwf	fsr2l,f,c
 25615  0124A8  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25616  0124AA  22DA               	addwfc	fsr2h,f,c
 25617  0124AC  D801               	call	u32618
 25618  0124AE  D023               	goto	l2071
 25619  0124B0                     u32618:
 25620  0124B0  0005               	push	
 25621  0124B2  6EFA               	movwf	pclath,c
 25622  0124B4  50DE               	movf	postinc2,w,c
 25623  0124B6  6EFD               	movwf	tosl,c
 25624  0124B8  50DE               	movf	postinc2,w,c
 25625  0124BA  6EFE               	movwf	tosh,c
 25626  0124BC  50DE               	movf	postinc2,w,c
 25627  0124BE  6EFF               	movwf	tosu,c
 25628  0124C0  50FA               	movf	pclath,w,c
 25629  0124C2  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25630  0124C4  0F30               	addlw	48
 25631  0124C6  0012               	return		;indir
 25632  0124C8                     l2070:
 25633  0124C8  0101               	movlb	1	; () banked
 25634  0124CA  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25635  0124CC  0F30               	addlw	48
 25636  0124CE  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25637  0124D2  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25638  0124D6  CFDE F188          	movff	postinc2,??__doprnt
 25639  0124DA  CFDD F189          	movff	postdec2,??__doprnt+1
 25640  0124DE  C188  FFD9         	movff	??__doprnt,fsr2l
 25641  0124E2  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25642  0124E6  6EDF               	movwf	indf2,c
 25643  0124E8  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25644  0124EC  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25645  0124F0  2ADE               	incf	postinc2,f,c
 25646  0124F2  0E00               	movlw	0
 25647  0124F4  22DD               	addwfc	postdec2,f,c
 25648  0124F6                     l2071:
 25649                           
 25650                           ;doprnt.c: 1232: val %= dpowers[c];
 25651                           
 25652                           ; BSR set to: 1
 25653  0124F6  C1A1  F124         	movff	__doprnt@val,___llmod@dividend
 25654  0124FA  C1A2  F125         	movff	__doprnt@val+1,___llmod@dividend+1
 25655  0124FE  C1A3  F126         	movff	__doprnt@val+2,___llmod@dividend+2
 25656  012502  C1A4  F127         	movff	__doprnt@val+3,___llmod@dividend+3
 25657  012506  0101               	movlb	1	; () banked
 25658  012508  51AB               	movf	__doprnt@c& (0+255),w,b
 25659  01250A  0D04               	mullw	4
 25660  01250C  0E0B               	movlw	low _dpowers
 25661  01250E  24F3               	addwf	prodl,w,c
 25662  012510  6EF6               	movwf	tblptrl,c
 25663  012512  0ECF               	movlw	high _dpowers
 25664  012514  20F4               	addwfc	prodh,w,c
 25665  012516  6EF7               	movwf	tblptrh,c
 25666  012518                     	if	1	;There are 3 active tblptr bytes
 25667  012518  6AF8               	clrf	tblptru,c
 25668  01251A  0E00               	movlw	low (__mediumconst shr (0+16))
 25669  01251C  22F8               	addwfc	tblptru,f,c
 25670  01251E                     	endif
 25671  01251E  0009               	tblrd		*+
 25672  012520  CFF5 F128          	movff	tablat,___llmod@divisor
 25673  012524  0009               	tblrd		*+
 25674  012526  CFF5 F129          	movff	tablat,___llmod@divisor+1
 25675  01252A  0009               	tblrd		*+
 25676  01252C  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 25677  012530  000A               	tblrd		*-
 25678  012532  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 25679  012536  ECB2  F0D0         	call	___llmod
 25680  01253A  C124  F1A1         	movff	?___llmod,__doprnt@val
 25681  01253E  C125  F1A2         	movff	?___llmod+1,__doprnt@val+1
 25682  012542  C126  F1A3         	movff	?___llmod+2,__doprnt@val+2
 25683  012546  C127  F1A4         	movff	?___llmod+3,__doprnt@val+3
 25684  01254A                     l2068:
 25685  01254A  0101               	movlb	1	; () banked
 25686  01254C  07AB               	decf	__doprnt@c& (0+255),f,b
 25687  01254E  29AB               	incf	__doprnt@c& (0+255),w,b
 25688  012550  B4D8               	btfsc	status,2,c
 25689  012552  D038               	goto	l2073
 25690  012554  D754               	goto	l2069
 25691  012556                     
 25692                           ; BSR set to: 1
 25693                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 25694                           
 25695                           ; BSR set to: 1
 25696  012556  EE20 F002          	lfsr	2,2
 25697  01255A  5182               	movf	__doprnt@pb& (0+255),w,b
 25698  01255C  26D9               	addwf	fsr2l,f,c
 25699  01255E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25700  012560  22DA               	addwfc	fsr2h,f,c
 25701  012562  50DE               	movf	postinc2,w,c
 25702  012564  10DE               	iorwf	postinc2,w,c
 25703  012566  10DE               	iorwf	postinc2,w,c
 25704  012568  B4D8               	btfsc	status,2,c
 25705  01256A  D013               	goto	l2075
 25706                           
 25707                           ; BSR set to: 1
 25708  01256C  EE20 F002          	lfsr	2,2
 25709  012570  5182               	movf	__doprnt@pb& (0+255),w,b
 25710  012572  26D9               	addwf	fsr2l,f,c
 25711  012574  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25712  012576  22DA               	addwfc	fsr2h,f,c
 25713  012578  D801               	call	u32648
 25714  01257A  D020               	goto	l2076
 25715  01257C                     u32648:
 25716  01257C  0005               	push	
 25717  01257E  6EFA               	movwf	pclath,c
 25718  012580  50DE               	movf	postinc2,w,c
 25719  012582  6EFD               	movwf	tosl,c
 25720  012584  50DE               	movf	postinc2,w,c
 25721  012586  6EFE               	movwf	tosh,c
 25722  012588  50DE               	movf	postinc2,w,c
 25723  01258A  6EFF               	movwf	tosu,c
 25724  01258C  50FA               	movf	pclath,w,c
 25725  01258E  0E30               	movlw	48
 25726  012590  0012               	return		;indir
 25727  012592                     l2075:
 25728  012592  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25729  012596  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25730  01259A  CFDE F188          	movff	postinc2,??__doprnt
 25731  01259E  CFDD F189          	movff	postdec2,??__doprnt+1
 25732  0125A2  C188  FFD9         	movff	??__doprnt,fsr2l
 25733  0125A6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25734  0125AA  0E30               	movlw	48
 25735  0125AC  6EDF               	movwf	indf2,c
 25736  0125AE  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25737  0125B2  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25738  0125B6  2ADE               	incf	postinc2,f,c
 25739  0125B8  0E00               	movlw	0
 25740  0125BA  22DD               	addwfc	postdec2,f,c
 25741  0125BC                     l2076:
 25742                           
 25743                           ;doprnt.c: 1237: prec--;
 25744  0125BC  0101               	movlb	1	; () banked
 25745  0125BE  07A9               	decf	__doprnt@prec& (0+255),f,b
 25746  0125C0  A0D8               	btfss	status,0,c
 25747  0125C2  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 25748  0125C4                     l2073:
 25749                           
 25750                           ; BSR set to: 1
 25751                           
 25752                           ; BSR set to: 1
 25753  0125C4  51A9               	movf	__doprnt@prec& (0+255),w,b
 25754  0125C6  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25755  0125C8  B4D8               	btfsc	status,2,c
 25756  0125CA  D2ED               	goto	u33020
 25757  0125CC  D7C4               	goto	l2074
 25758  0125CE                     l2011:
 25759                           
 25760                           ; BSR set to: 1
 25761                           ;doprnt.c: 1246: }
 25762                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 25763                           
 25764                           ; BSR set to: 1
 25765  0125CE  0EC0               	movlw	192
 25766  0125D0  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25767  0125D2  6F88               	movwf	??__doprnt& (0+255),b
 25768  0125D4  0E00               	movlw	0
 25769  0125D6  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25770  0125D8  6F89               	movwf	(??__doprnt+1)& (0+255),b
 25771  0125DA  5188               	movf	??__doprnt& (0+255),w,b
 25772  0125DC  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 25773  0125DE  A4D8               	btfss	status,2,c
 25774  0125E0  D041               	goto	l2078
 25775                           
 25776                           ; BSR set to: 1
 25777                           ;doprnt.c: 1253: {
 25778                           ;doprnt.c: 1255: if(flag & 0x10)
 25779  0125E2  A9A7               	btfss	__doprnt@flag& (0+255),4,b
 25780  0125E4  D019               	goto	l2079
 25781                           
 25782                           ; BSR set to: 1
 25783                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 25784  0125E6  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25785  0125EA  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25786  0125EE  CFDF F188          	movff	indf2,??__doprnt
 25787  0125F2  0E04               	movlw	4
 25788  0125F4  26DE               	addwf	postinc2,f,c
 25789  0125F6  CFDF F189          	movff	indf2,??__doprnt+1
 25790  0125FA  0E00               	movlw	0
 25791  0125FC  22DD               	addwfc	postdec2,f,c
 25792  0125FE  C188  FFD9         	movff	??__doprnt,fsr2l
 25793  012602  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25794  012606  CFDE F1A1          	movff	postinc2,__doprnt@val
 25795  01260A  CFDE F1A2          	movff	postinc2,__doprnt@val+1
 25796  01260E  CFDE F1A3          	movff	postinc2,__doprnt@val+2
 25797  012612  CFDE F1A4          	movff	postinc2,__doprnt@val+3
 25798  012616  D019               	goto	l2080
 25799  012618                     l2079:
 25800                           
 25801                           ; BSR set to: 1
 25802                           ;doprnt.c: 1257: else
 25803                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 25804                           
 25805                           ; BSR set to: 1
 25806  012618  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25807  01261C  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25808  012620  CFDF F188          	movff	indf2,??__doprnt
 25809  012624  0E02               	movlw	2
 25810  012626  26DE               	addwf	postinc2,f,c
 25811  012628  CFDF F189          	movff	indf2,??__doprnt+1
 25812  01262C  0E00               	movlw	0
 25813  01262E  22DD               	addwfc	postdec2,f,c
 25814  012630  C188  FFD9         	movff	??__doprnt,fsr2l
 25815  012634  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25816  012638  CFDE F1A1          	movff	postinc2,__doprnt@val
 25817  01263C  CFDD F1A2          	movff	postdec2,__doprnt@val+1
 25818  012640  0E00               	movlw	0
 25819  012642  BFA2               	btfsc	(__doprnt@val+1)& (0+255),7,b
 25820  012644  0EFF               	movlw	-1
 25821  012646  6FA3               	movwf	(__doprnt@val+2)& (0+255),b
 25822  012648  6FA4               	movwf	(__doprnt@val+3)& (0+255),b
 25823  01264A                     l2080:
 25824                           
 25825                           ; BSR set to: 1
 25826                           ;doprnt.c: 1261: if((long)val < 0) {
 25827                           
 25828                           ; BSR set to: 1
 25829  01264A  AFA4               	btfss	(__doprnt@val+3)& (0+255),7,b
 25830  01264C  D040               	goto	l2084
 25831                           
 25832                           ; BSR set to: 1
 25833                           ;doprnt.c: 1262: flag |= 0x03;
 25834  01264E  0E03               	movlw	3
 25835  012650  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 25836                           
 25837                           ; BSR set to: 1
 25838                           ;doprnt.c: 1263: val = -val;
 25839  012652  1FA4               	comf	(__doprnt@val+3)& (0+255),f,b
 25840  012654  1FA3               	comf	(__doprnt@val+2)& (0+255),f,b
 25841  012656  1FA2               	comf	(__doprnt@val+1)& (0+255),f,b
 25842  012658  6DA1               	negf	__doprnt@val& (0+255),b
 25843  01265A  0E00               	movlw	0
 25844  01265C  23A2               	addwfc	(__doprnt@val+1)& (0+255),f,b
 25845  01265E  23A3               	addwfc	(__doprnt@val+2)& (0+255),f,b
 25846  012660  23A4               	addwfc	(__doprnt@val+3)& (0+255),f,b
 25847                           
 25848                           ; BSR set to: 1
 25849                           ;doprnt.c: 1264: }
 25850                           ;doprnt.c: 1266: }
 25851  012662  D035               	goto	l2084
 25852  012664                     l2078:
 25853                           
 25854                           ; BSR set to: 1
 25855                           ;doprnt.c: 1268: else
 25856                           ;doprnt.c: 1273: {
 25857                           ;doprnt.c: 1281: if(flag & 0x10)
 25858  012664  A9A7               	btfss	__doprnt@flag& (0+255),4,b
 25859  012666  D019               	goto	l2083
 25860                           
 25861                           ; BSR set to: 1
 25862                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 25863  012668  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25864  01266C  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25865  012670  CFDF F188          	movff	indf2,??__doprnt
 25866  012674  0E04               	movlw	4
 25867  012676  26DE               	addwf	postinc2,f,c
 25868  012678  CFDF F189          	movff	indf2,??__doprnt+1
 25869  01267C  0E00               	movlw	0
 25870  01267E  22DD               	addwfc	postdec2,f,c
 25871  012680  C188  FFD9         	movff	??__doprnt,fsr2l
 25872  012684  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25873  012688  CFDE F1A1          	movff	postinc2,__doprnt@val
 25874  01268C  CFDE F1A2          	movff	postinc2,__doprnt@val+1
 25875  012690  CFDE F1A3          	movff	postinc2,__doprnt@val+2
 25876  012694  CFDE F1A4          	movff	postinc2,__doprnt@val+3
 25877  012698  D01A               	goto	l2084
 25878  01269A                     l2083:
 25879                           
 25880                           ; BSR set to: 1
 25881                           ;doprnt.c: 1283: else
 25882                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 25883                           
 25884                           ; BSR set to: 1
 25885  01269A  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25886  01269E  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25887  0126A2  CFDF F188          	movff	indf2,??__doprnt
 25888  0126A6  0E02               	movlw	2
 25889  0126A8  26DE               	addwf	postinc2,f,c
 25890  0126AA  CFDF F189          	movff	indf2,??__doprnt+1
 25891  0126AE  0E00               	movlw	0
 25892  0126B0  22DD               	addwfc	postdec2,f,c
 25893  0126B2  C188  FFD9         	movff	??__doprnt,fsr2l
 25894  0126B6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25895  0126BA  CFDE F18A          	movff	postinc2,??__doprnt+2
 25896  0126BE  CFDD F18B          	movff	postdec2,??__doprnt+3
 25897  0126C2  C18A  F1A1         	movff	??__doprnt+2,__doprnt@val
 25898  0126C6  C18B  F1A2         	movff	??__doprnt+3,__doprnt@val+1
 25899  0126CA  6BA3               	clrf	(__doprnt@val+2)& (0+255),b
 25900  0126CC  6BA4               	clrf	(__doprnt@val+3)& (0+255),b
 25901  0126CE                     l2084:
 25902                           
 25903                           ; BSR set to: 1
 25904                           ;doprnt.c: 1287: }
 25905                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 25906                           
 25907                           ; BSR set to: 1
 25908                           
 25909                           ; BSR set to: 1
 25910  0126CE  51A9               	movf	__doprnt@prec& (0+255),w,b
 25911  0126D0  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25912  0126D2  A4D8               	btfss	status,2,c
 25913  0126D4  D04B               	goto	l2086
 25914                           
 25915                           ; BSR set to: 1
 25916  0126D6  51A1               	movf	__doprnt@val& (0+255),w,b
 25917  0126D8  11A2               	iorwf	(__doprnt@val+1)& (0+255),w,b
 25918  0126DA  11A3               	iorwf	(__doprnt@val+2)& (0+255),w,b
 25919  0126DC  11A4               	iorwf	(__doprnt@val+3)& (0+255),w,b
 25920  0126DE  A4D8               	btfss	status,2,c
 25921  0126E0  D045               	goto	l2086
 25922                           
 25923                           ; BSR set to: 1
 25924                           ;doprnt.c: 1291: prec++;
 25925  0126E2  4BA9               	infsnz	__doprnt@prec& (0+255),f,b
 25926  0126E4  2BAA               	incf	(__doprnt@prec+1)& (0+255),f,b
 25927                           
 25928                           ; BSR set to: 1
 25929                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 25930  0126E6  D042               	goto	l2086
 25931  0126E8                     
 25932                           ; BSR set to: 1
 25933                           ;doprnt.c: 1302: case 0xC0:
 25934                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 25935                           
 25936                           ; BSR set to: 1
 25937                           
 25938                           ; BSR set to: 1
 25939  0126E8  0E01               	movlw	1
 25940  0126EA  6FAB               	movwf	__doprnt@c& (0+255),b
 25941  0126EC                     l22423:
 25942                           
 25943                           ; BSR set to: 1
 25944  0126EC  0E0A               	movlw	10
 25945  0126EE  19AB               	xorwf	__doprnt@c& (0+255),w,b
 25946  0126F0  B4D8               	btfsc	status,2,c
 25947  0126F2  D047               	goto	l2092
 25948                           
 25949                           ; BSR set to: 1
 25950                           ;doprnt.c: 1306: if(val < dpowers[c])
 25951                           
 25952                           ; BSR set to: 1
 25953                           
 25954                           ; BSR set to: 1
 25955  0126F4  51AB               	movf	__doprnt@c& (0+255),w,b
 25956  0126F6  0D04               	mullw	4
 25957  0126F8  0E0B               	movlw	low _dpowers
 25958  0126FA  24F3               	addwf	prodl,w,c
 25959  0126FC  6EF6               	movwf	tblptrl,c
 25960  0126FE  0ECF               	movlw	high _dpowers
 25961  012700  20F4               	addwfc	prodh,w,c
 25962  012702  6EF7               	movwf	tblptrh,c
 25963  012704                     	if	1	;There are 3 active tblptr bytes
 25964  012704  6AF8               	clrf	tblptru,c
 25965  012706  0E00               	movlw	low (__mediumconst shr (0+16))
 25966  012708  22F8               	addwfc	tblptru,f,c
 25967  01270A                     	endif
 25968  01270A  0009               	tblrd		*+
 25969  01270C  50F5               	movf	tablat,w,c
 25970  01270E  5DA1               	subwf	__doprnt@val& (0+255),w,b
 25971  012710  0009               	tblrd		*+
 25972  012712  50F5               	movf	tablat,w,c
 25973  012714  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25974  012716  0009               	tblrd		*+
 25975  012718  50F5               	movf	tablat,w,c
 25976  01271A  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25977  01271C  0009               	tblrd		*+
 25978  01271E  50F5               	movf	tablat,w,c
 25979  012720  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25980  012722  A0D8               	btfss	status,0,c
 25981  012724  D02E               	goto	l2092
 25982                           
 25983                           ; BSR set to: 1
 25984                           
 25985                           ; BSR set to: 1
 25986                           
 25987                           ; BSR set to: 1
 25988                           ;doprnt.c: 1307: break;
 25989  012726  2BAB               	incf	__doprnt@c& (0+255),f,b
 25990  012728  D7E1               	goto	l22423
 25991  01272A                     
 25992                           ; BSR set to: 1
 25993                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 25994                           
 25995                           ; BSR set to: 1
 25996  01272A  0E01               	movlw	1
 25997  01272C  6FAB               	movwf	__doprnt@c& (0+255),b
 25998  01272E                     l22437:
 25999                           
 26000                           ; BSR set to: 1
 26001  01272E  0E08               	movlw	8
 26002  012730  19AB               	xorwf	__doprnt@c& (0+255),w,b
 26003  012732  B4D8               	btfsc	status,2,c
 26004  012734  D026               	goto	l2092
 26005                           
 26006                           ; BSR set to: 1
 26007                           ;doprnt.c: 1317: if(val < hexpowers[c])
 26008                           
 26009                           ; BSR set to: 1
 26010                           
 26011                           ; BSR set to: 1
 26012  012736  51AB               	movf	__doprnt@c& (0+255),w,b
 26013  012738  0D04               	mullw	4
 26014  01273A  0E33               	movlw	low _hexpowers
 26015  01273C  24F3               	addwf	prodl,w,c
 26016  01273E  6EF6               	movwf	tblptrl,c
 26017  012740  0ECF               	movlw	high _hexpowers
 26018  012742  20F4               	addwfc	prodh,w,c
 26019  012744  6EF7               	movwf	tblptrh,c
 26020  012746                     	if	1	;There are 3 active tblptr bytes
 26021  012746  6AF8               	clrf	tblptru,c
 26022  012748  0E00               	movlw	low (__mediumconst shr (0+16))
 26023  01274A  22F8               	addwfc	tblptru,f,c
 26024  01274C                     	endif
 26025  01274C  0009               	tblrd		*+
 26026  01274E  50F5               	movf	tablat,w,c
 26027  012750  5DA1               	subwf	__doprnt@val& (0+255),w,b
 26028  012752  0009               	tblrd		*+
 26029  012754  50F5               	movf	tablat,w,c
 26030  012756  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 26031  012758  0009               	tblrd		*+
 26032  01275A  50F5               	movf	tablat,w,c
 26033  01275C  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 26034  01275E  0009               	tblrd		*+
 26035  012760  50F5               	movf	tablat,w,c
 26036  012762  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 26037  012764  A0D8               	btfss	status,0,c
 26038  012766  D00D               	goto	l2092
 26039                           
 26040                           ; BSR set to: 1
 26041                           
 26042                           ; BSR set to: 1
 26043                           
 26044                           ; BSR set to: 1
 26045                           ;doprnt.c: 1318: break;
 26046  012768  2BAB               	incf	__doprnt@c& (0+255),f,b
 26047  01276A  D7E1               	goto	l22437
 26048  01276C                     l2086:
 26049                           
 26050                           ; BSR set to: 1
 26051                           
 26052                           ; BSR set to: 1
 26053  01276C  51A7               	movf	__doprnt@flag& (0+255),w,b
 26054  01276E  0BC0               	andlw	192
 26055                           
 26056                           ; Switch size 1, requested type "space"
 26057                           ; Number of cases is 3, Range of values is 0 to 192
 26058                           ; switch strategies available:
 26059                           ; Name         Instructions Cycles
 26060                           ; simple_byte           10     6 (average)
 26061                           ;	Chosen strategy is simple_byte
 26062  012770  0A00               	xorlw	0	; case 0
 26063  012772  B4D8               	btfsc	status,2,c
 26064  012774  D7B9               	goto	l2087
 26065  012776  0A80               	xorlw	128	; case 128
 26066  012778  B4D8               	btfsc	status,2,c
 26067  01277A  D7D7               	goto	l2093
 26068  01277C  0A40               	xorlw	64	; case 192
 26069  01277E  B4D8               	btfsc	status,2,c
 26070  012780  D7B3               	goto	l2087
 26071  012782                     l2092:
 26072                           
 26073                           ; BSR set to: 1
 26074                           ;doprnt.c: 1339: if(c < prec)
 26075                           
 26076                           ; BSR set to: 1
 26077  012782  0E80               	movlw	128
 26078  012784  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 26079  012786  0E7F               	movlw	127
 26080  012788  6F88               	movwf	??__doprnt& (0+255),b
 26081  01278A  51A9               	movf	__doprnt@prec& (0+255),w,b
 26082  01278C  5DAB               	subwf	__doprnt@c& (0+255),w,b
 26083  01278E  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 26084  012790  0A80               	xorlw	128
 26085  012792  5988               	subwfb	??__doprnt& (0+255),w,b
 26086  012794  B0D8               	btfsc	status,0,c
 26087  012796  D003               	goto	l2097
 26088                           
 26089                           ; BSR set to: 1
 26090                           ;doprnt.c: 1340: c = prec;
 26091  012798  C1A9  F1AB         	movff	__doprnt@prec,__doprnt@c
 26092  01279C  D010               	goto	l2099
 26093  01279E                     l2097:
 26094                           
 26095                           ; BSR set to: 1
 26096                           ;doprnt.c: 1341: else if(prec < c)
 26097                           
 26098                           ; BSR set to: 1
 26099  01279E  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 26100  0127A0  0A80               	xorlw	128
 26101  0127A2  6F88               	movwf	??__doprnt& (0+255),b
 26102  0127A4  51AB               	movf	__doprnt@c& (0+255),w,b
 26103  0127A6  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 26104  0127A8  0E80               	movlw	128
 26105  0127AA  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 26106  0127AC  0E7F               	movlw	127
 26107  0127AE  5988               	subwfb	??__doprnt& (0+255),w,b
 26108  0127B0  B0D8               	btfsc	status,0,c
 26109  0127B2  D005               	goto	l2099
 26110                           
 26111                           ; BSR set to: 1
 26112                           ;doprnt.c: 1342: prec = c;
 26113  0127B4  51AB               	movf	__doprnt@c& (0+255),w,b
 26114  0127B6  6FA9               	movwf	__doprnt@prec& (0+255),b
 26115  0127B8  6BAA               	clrf	(__doprnt@prec+1)& (0+255),b
 26116  0127BA  BFA9               	btfsc	__doprnt@prec& (0+255),7,b
 26117  0127BC  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 26118  0127BE                     l2099:
 26119                           
 26120                           ; BSR set to: 1
 26121                           ;doprnt.c: 1345: if(width && flag & 0x03)
 26122                           
 26123                           ; BSR set to: 1
 26124                           
 26125                           ; BSR set to: 1
 26126  0127BE  51A5               	movf	__doprnt@width& (0+255),w,b
 26127  0127C0  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 26128  0127C2  B4D8               	btfsc	status,2,c
 26129  0127C4  D00D               	goto	l2100
 26130                           
 26131                           ; BSR set to: 1
 26132  0127C6  0E03               	movlw	3
 26133  0127C8  15A7               	andwf	__doprnt@flag& (0+255),w,b
 26134  0127CA  6F88               	movwf	??__doprnt& (0+255),b
 26135  0127CC  0E00               	movlw	0
 26136  0127CE  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 26137  0127D0  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26138  0127D2  5188               	movf	??__doprnt& (0+255),w,b
 26139  0127D4  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 26140  0127D6  B4D8               	btfsc	status,2,c
 26141  0127D8  D003               	goto	l2100
 26142                           
 26143                           ; BSR set to: 1
 26144                           ;doprnt.c: 1346: width--;
 26145  0127DA  07A5               	decf	__doprnt@width& (0+255),f,b
 26146  0127DC  A0D8               	btfss	status,0,c
 26147  0127DE  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 26148  0127E0                     l2100:
 26149                           
 26150                           ; BSR set to: 1
 26151                           ;doprnt.c: 1348: if(flag & 0x4000) {
 26152                           
 26153                           ; BSR set to: 1
 26154  0127E0  ADA8               	btfss	(__doprnt@flag+1)& (0+255),6,b
 26155  0127E2  D013               	goto	l2103
 26156                           
 26157                           ; BSR set to: 1
 26158                           ;doprnt.c: 1349: if(width > prec)
 26159  0127E4  51A5               	movf	__doprnt@width& (0+255),w,b
 26160  0127E6  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 26161  0127E8  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 26162  0127EA  0A80               	xorlw	128
 26163  0127EC  6F88               	movwf	??__doprnt& (0+255),b
 26164  0127EE  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 26165  0127F0  0A80               	xorlw	128
 26166  0127F2  5988               	subwfb	??__doprnt& (0+255),w,b
 26167  0127F4  B0D8               	btfsc	status,0,c
 26168  0127F6  D005               	goto	l2102
 26169                           
 26170                           ; BSR set to: 1
 26171                           ;doprnt.c: 1350: width -= prec;
 26172  0127F8  51A9               	movf	__doprnt@prec& (0+255),w,b
 26173  0127FA  5FA5               	subwf	__doprnt@width& (0+255),f,b
 26174  0127FC  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 26175  0127FE  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 26176  012800  D004               	goto	l2103
 26177  012802                     l2102:
 26178                           
 26179                           ; BSR set to: 1
 26180                           ;doprnt.c: 1351: else
 26181                           ;doprnt.c: 1352: width = 0;
 26182                           
 26183                           ; BSR set to: 1
 26184  012802  0E00               	movlw	0
 26185  012804  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 26186  012806  0E00               	movlw	0
 26187  012808  6FA5               	movwf	__doprnt@width& (0+255),b
 26188  01280A                     l2103:
 26189                           
 26190                           ; BSR set to: 1
 26191                           ;doprnt.c: 1353: }
 26192                           ;doprnt.c: 1381: if(width > c)
 26193                           
 26194                           ; BSR set to: 1
 26195                           
 26196                           ; BSR set to: 1
 26197  01280A  0E80               	movlw	128
 26198  01280C  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 26199  01280E  0E7F               	movlw	127
 26200  012810  6F88               	movwf	??__doprnt& (0+255),b
 26201  012812  51A5               	movf	__doprnt@width& (0+255),w,b
 26202  012814  5DAB               	subwf	__doprnt@c& (0+255),w,b
 26203  012816  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 26204  012818  0A80               	xorlw	128
 26205  01281A  5988               	subwfb	??__doprnt& (0+255),w,b
 26206  01281C  B0D8               	btfsc	status,0,c
 26207  01281E  D007               	goto	l2104
 26208                           
 26209                           ; BSR set to: 1
 26210                           ;doprnt.c: 1382: width -= c;
 26211  012820  51AB               	movf	__doprnt@c& (0+255),w,b
 26212  012822  5FA5               	subwf	__doprnt@width& (0+255),f,b
 26213  012824  0E00               	movlw	0
 26214  012826  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 26215  012828  0EFF               	movlw	255
 26216  01282A  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 26217  01282C  D004               	goto	l2105
 26218  01282E                     l2104:
 26219                           
 26220                           ; BSR set to: 1
 26221                           ;doprnt.c: 1383: else
 26222                           ;doprnt.c: 1384: width = 0;
 26223                           
 26224                           ; BSR set to: 1
 26225  01282E  0E00               	movlw	0
 26226  012830  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 26227  012832  0E00               	movlw	0
 26228  012834  6FA5               	movwf	__doprnt@width& (0+255),b
 26229  012836                     l2105:
 26230                           
 26231                           ; BSR set to: 1
 26232                           ;doprnt.c: 1387: if(flag & 0x04) {
 26233                           
 26234                           ; BSR set to: 1
 26235  012836  A5A7               	btfss	__doprnt@flag& (0+255),2,b
 26236  012838  D07A               	goto	l2106
 26237                           
 26238                           ; BSR set to: 1
 26239                           ;doprnt.c: 1392: if(flag & 0x03)
 26240  01283A  0E03               	movlw	3
 26241  01283C  15A7               	andwf	__doprnt@flag& (0+255),w,b
 26242  01283E  6F88               	movwf	??__doprnt& (0+255),b
 26243  012840  0E00               	movlw	0
 26244  012842  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 26245  012844  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26246  012846  5188               	movf	??__doprnt& (0+255),w,b
 26247  012848  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 26248  01284A  B4D8               	btfsc	status,2,c
 26249  01284C  D033               	goto	l2109
 26250                           
 26251                           ; BSR set to: 1
 26252                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 26253  01284E  EE20 F002          	lfsr	2,2
 26254  012852  5182               	movf	__doprnt@pb& (0+255),w,b
 26255  012854  26D9               	addwf	fsr2l,f,c
 26256  012856  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26257  012858  22DA               	addwfc	fsr2h,f,c
 26258  01285A  50DE               	movf	postinc2,w,c
 26259  01285C  10DE               	iorwf	postinc2,w,c
 26260  01285E  10DE               	iorwf	postinc2,w,c
 26261  012860  B4D8               	btfsc	status,2,c
 26262  012862  D013               	goto	l2108
 26263                           
 26264                           ; BSR set to: 1
 26265  012864  EE20 F002          	lfsr	2,2
 26266  012868  5182               	movf	__doprnt@pb& (0+255),w,b
 26267  01286A  26D9               	addwf	fsr2l,f,c
 26268  01286C  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26269  01286E  22DA               	addwfc	fsr2h,f,c
 26270  012870  D801               	call	u32888
 26271  012872  D020               	goto	l2109
 26272  012874                     u32888:
 26273  012874  0005               	push	
 26274  012876  6EFA               	movwf	pclath,c
 26275  012878  50DE               	movf	postinc2,w,c
 26276  01287A  6EFD               	movwf	tosl,c
 26277  01287C  50DE               	movf	postinc2,w,c
 26278  01287E  6EFE               	movwf	tosh,c
 26279  012880  50DE               	movf	postinc2,w,c
 26280  012882  6EFF               	movwf	tosu,c
 26281  012884  50FA               	movf	pclath,w,c
 26282  012886  0E2D               	movlw	45
 26283  012888  0012               	return		;indir
 26284  01288A                     l2108:
 26285  01288A  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26286  01288E  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26287  012892  CFDE F188          	movff	postinc2,??__doprnt
 26288  012896  CFDD F189          	movff	postdec2,??__doprnt+1
 26289  01289A  C188  FFD9         	movff	??__doprnt,fsr2l
 26290  01289E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26291  0128A2  0E2D               	movlw	45
 26292  0128A4  6EDF               	movwf	indf2,c
 26293  0128A6  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26294  0128AA  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26295  0128AE  2ADE               	incf	postinc2,f,c
 26296  0128B0  0E00               	movlw	0
 26297  0128B2  22DD               	addwfc	postdec2,f,c
 26298  0128B4                     l2109:
 26299                           
 26300                           ;doprnt.c: 1415: if(width)
 26301  0128B4  0101               	movlb	1	; () banked
 26302  0128B6  51A5               	movf	__doprnt@width& (0+255),w,b
 26303  0128B8  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 26304  0128BA  B4D8               	btfsc	status,2,c
 26305  0128BC  D16B               	goto	l2132
 26306                           
 26307                           ; BSR set to: 1
 26308                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 26309                           
 26310                           ; BSR set to: 1
 26311                           
 26312                           ;doprnt.c: 1416: do
 26313  0128BE  EE20 F002          	lfsr	2,2
 26314  0128C2  5182               	movf	__doprnt@pb& (0+255),w,b
 26315  0128C4  26D9               	addwf	fsr2l,f,c
 26316  0128C6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26317  0128C8  22DA               	addwfc	fsr2h,f,c
 26318  0128CA  50DE               	movf	postinc2,w,c
 26319  0128CC  10DE               	iorwf	postinc2,w,c
 26320  0128CE  10DE               	iorwf	postinc2,w,c
 26321  0128D0  B4D8               	btfsc	status,2,c
 26322  0128D2  D013               	goto	l2112
 26323                           
 26324                           ; BSR set to: 1
 26325  0128D4  EE20 F002          	lfsr	2,2
 26326  0128D8  5182               	movf	__doprnt@pb& (0+255),w,b
 26327  0128DA  26D9               	addwf	fsr2l,f,c
 26328  0128DC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26329  0128DE  22DA               	addwfc	fsr2h,f,c
 26330  0128E0  D801               	call	u32918
 26331  0128E2  D020               	goto	l2113
 26332  0128E4                     u32918:
 26333  0128E4  0005               	push	
 26334  0128E6  6EFA               	movwf	pclath,c
 26335  0128E8  50DE               	movf	postinc2,w,c
 26336  0128EA  6EFD               	movwf	tosl,c
 26337  0128EC  50DE               	movf	postinc2,w,c
 26338  0128EE  6EFE               	movwf	tosh,c
 26339  0128F0  50DE               	movf	postinc2,w,c
 26340  0128F2  6EFF               	movwf	tosu,c
 26341  0128F4  50FA               	movf	pclath,w,c
 26342  0128F6  0E30               	movlw	48
 26343  0128F8  0012               	return		;indir
 26344  0128FA                     l2112:
 26345  0128FA  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26346  0128FE  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26347  012902  CFDE F188          	movff	postinc2,??__doprnt
 26348  012906  CFDD F189          	movff	postdec2,??__doprnt+1
 26349  01290A  C188  FFD9         	movff	??__doprnt,fsr2l
 26350  01290E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26351  012912  0E30               	movlw	48
 26352  012914  6EDF               	movwf	indf2,c
 26353  012916  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26354  01291A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26355  01291E  2ADE               	incf	postinc2,f,c
 26356  012920  0E00               	movlw	0
 26357  012922  22DD               	addwfc	postdec2,f,c
 26358  012924                     l2113:
 26359                           
 26360                           ;doprnt.c: 1418: while(--width);
 26361  012924  0101               	movlb	1	; () banked
 26362  012926  07A5               	decf	__doprnt@width& (0+255),f,b
 26363  012928  A0D8               	btfss	status,0,c
 26364  01292A  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 26365  01292C  D7C4               	goto	L33
 26366  01292E                     l2106:
 26367                           
 26368                           ; BSR set to: 1
 26369                           ;doprnt.c: 1422: {
 26370                           ;doprnt.c: 1424: if(width
 26371                           ;doprnt.c: 1428: )
 26372                           
 26373                           ; BSR set to: 1
 26374  01292E  51A5               	movf	__doprnt@width& (0+255),w,b
 26375  012930  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 26376  012932  B4D8               	btfsc	status,2,c
 26377  012934  D03B               	goto	u32960
 26378  012936                     u32930:
 26379                           
 26380                           ; BSR set to: 1
 26381                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 26382                           
 26383                           ; BSR set to: 1
 26384                           
 26385                           ;doprnt.c: 1429: do
 26386  012936  EE20 F002          	lfsr	2,2
 26387  01293A  5182               	movf	__doprnt@pb& (0+255),w,b
 26388  01293C  26D9               	addwf	fsr2l,f,c
 26389  01293E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26390  012940  22DA               	addwfc	fsr2h,f,c
 26391  012942  50DE               	movf	postinc2,w,c
 26392  012944  10DE               	iorwf	postinc2,w,c
 26393  012946  10DE               	iorwf	postinc2,w,c
 26394  012948  B4D8               	btfsc	status,2,c
 26395  01294A  D013               	goto	l2118
 26396                           
 26397                           ; BSR set to: 1
 26398  01294C  EE20 F002          	lfsr	2,2
 26399  012950  5182               	movf	__doprnt@pb& (0+255),w,b
 26400  012952  26D9               	addwf	fsr2l,f,c
 26401  012954  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26402  012956  22DA               	addwfc	fsr2h,f,c
 26403  012958  D801               	call	u32958
 26404  01295A  D020               	goto	l2119
 26405  01295C                     u32958:
 26406  01295C  0005               	push	
 26407  01295E  6EFA               	movwf	pclath,c
 26408  012960  50DE               	movf	postinc2,w,c
 26409  012962  6EFD               	movwf	tosl,c
 26410  012964  50DE               	movf	postinc2,w,c
 26411  012966  6EFE               	movwf	tosh,c
 26412  012968  50DE               	movf	postinc2,w,c
 26413  01296A  6EFF               	movwf	tosu,c
 26414  01296C  50FA               	movf	pclath,w,c
 26415  01296E  0E20               	movlw	32
 26416  012970  0012               	return		;indir
 26417  012972                     l2118:
 26418  012972  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26419  012976  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26420  01297A  CFDE F188          	movff	postinc2,??__doprnt
 26421  01297E  CFDD F189          	movff	postdec2,??__doprnt+1
 26422  012982  C188  FFD9         	movff	??__doprnt,fsr2l
 26423  012986  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26424  01298A  0E20               	movlw	32
 26425  01298C  6EDF               	movwf	indf2,c
 26426  01298E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26427  012992  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26428  012996  2ADE               	incf	postinc2,f,c
 26429  012998  0E00               	movlw	0
 26430  01299A  22DD               	addwfc	postdec2,f,c
 26431  01299C                     l2119:
 26432                           
 26433                           ;doprnt.c: 1431: while(--width);
 26434  01299C  0101               	movlb	1	; () banked
 26435  01299E  07A5               	decf	__doprnt@width& (0+255),f,b
 26436  0129A0  A0D8               	btfss	status,0,c
 26437  0129A2  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 26438  0129A4  51A5               	movf	__doprnt@width& (0+255),w,b
 26439  0129A6  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 26440  0129A8  A4D8               	btfss	status,2,c
 26441  0129AA  D7C5               	goto	u32930
 26442  0129AC                     u32960:
 26443                           
 26444                           ; BSR set to: 1
 26445                           ;doprnt.c: 1438: if(flag & 0x03)
 26446                           
 26447                           ; BSR set to: 1
 26448                           
 26449                           ; BSR set to: 1
 26450  0129AC  0E03               	movlw	3
 26451  0129AE  15A7               	andwf	__doprnt@flag& (0+255),w,b
 26452  0129B0  6F88               	movwf	??__doprnt& (0+255),b
 26453  0129B2  0E00               	movlw	0
 26454  0129B4  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 26455  0129B6  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26456  0129B8  5188               	movf	??__doprnt& (0+255),w,b
 26457  0129BA  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 26458  0129BC  B4D8               	btfsc	status,2,c
 26459  0129BE  D0EA               	goto	l2132
 26460                           
 26461                           ; BSR set to: 1
 26462                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 26463  0129C0  EE20 F002          	lfsr	2,2
 26464  0129C4  5182               	movf	__doprnt@pb& (0+255),w,b
 26465  0129C6  26D9               	addwf	fsr2l,f,c
 26466  0129C8  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26467  0129CA  22DA               	addwfc	fsr2h,f,c
 26468  0129CC  50DE               	movf	postinc2,w,c
 26469  0129CE  10DE               	iorwf	postinc2,w,c
 26470  0129D0  10DE               	iorwf	postinc2,w,c
 26471  0129D2  B4D8               	btfsc	status,2,c
 26472  0129D4  D013               	goto	l2122
 26473                           
 26474                           ; BSR set to: 1
 26475  0129D6  EE20 F002          	lfsr	2,2
 26476  0129DA  5182               	movf	__doprnt@pb& (0+255),w,b
 26477  0129DC  26D9               	addwf	fsr2l,f,c
 26478  0129DE  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26479  0129E0  22DA               	addwfc	fsr2h,f,c
 26480  0129E2  D801               	call	u32998
 26481  0129E4  D0D7               	goto	l2132
 26482  0129E6                     u32998:
 26483  0129E6  0005               	push	
 26484  0129E8  6EFA               	movwf	pclath,c
 26485  0129EA  50DE               	movf	postinc2,w,c
 26486  0129EC  6EFD               	movwf	tosl,c
 26487  0129EE  50DE               	movf	postinc2,w,c
 26488  0129F0  6EFE               	movwf	tosh,c
 26489  0129F2  50DE               	movf	postinc2,w,c
 26490  0129F4  6EFF               	movwf	tosu,c
 26491  0129F6  50FA               	movf	pclath,w,c
 26492  0129F8  0E2D               	movlw	45
 26493  0129FA  0012               	return		;indir
 26494  0129FC                     l2122:
 26495  0129FC  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26496  012A00  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26497  012A04  CFDE F188          	movff	postinc2,??__doprnt
 26498  012A08  CFDD F189          	movff	postdec2,??__doprnt+1
 26499  012A0C  C188  FFD9         	movff	??__doprnt,fsr2l
 26500  012A10  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26501  012A14  0E2D               	movlw	45
 26502  012A16  6EDF               	movwf	indf2,c
 26503  012A18  D0B6               	goto	l22543
 26504  012A1A                     
 26505                           ;doprnt.c: 1486: case 0xC0:
 26506                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 26507  012A1A  C1A9  F188         	movff	__doprnt@prec,??__doprnt
 26508  012A1E  C1AA  F189         	movff	__doprnt@prec+1,??__doprnt+1
 26509  012A22  0101               	movlb	1	; () banked
 26510  012A24  90D8               	bcf	status,0,c
 26511  012A26  3788               	rlcf	??__doprnt& (0+255),f,b
 26512  012A28  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26513  012A2A  90D8               	bcf	status,0,c
 26514  012A2C  3788               	rlcf	??__doprnt& (0+255),f,b
 26515  012A2E  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26516  012A30  0E0B               	movlw	low _dpowers
 26517  012A32  2588               	addwf	??__doprnt& (0+255),w,b
 26518  012A34  6EF6               	movwf	tblptrl,c
 26519  012A36  0ECF               	movlw	high _dpowers
 26520  012A38  2189               	addwfc	(??__doprnt+1)& (0+255),w,b
 26521  012A3A  6EF7               	movwf	tblptrh,c
 26522  012A3C                     	if	1	;There are 3 active tblptr bytes
 26523  012A3C  6AF8               	clrf	tblptru,c
 26524  012A3E  0E00               	movlw	low (__mediumconst shr (0+16))
 26525  012A40  22F8               	addwfc	tblptru,f,c
 26526  012A42                     	endif
 26527  012A42  0009               	tblrd		*+
 26528  012A44  CFF5 F11B          	movff	tablat,___lldiv@divisor
 26529  012A48  0009               	tblrd		*+
 26530  012A4A  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 26531  012A4E  0009               	tblrd		*+
 26532  012A50  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 26533  012A54  000A               	tblrd		*-
 26534  012A56  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 26535  012A5A  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 26536  012A5E  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 26537  012A62  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 26538  012A66  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 26539  012A6A  ECB4  F0CD         	call	___lldiv
 26540  012A6E  C117  F124         	movff	?___lldiv,___llmod@dividend
 26541  012A72  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 26542  012A76  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 26543  012A7A  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 26544  012A7E  0E0A               	movlw	10
 26545  012A80  0101               	movlb	1	; () banked
 26546  012A82  6F28               	movwf	___llmod@divisor& (0+255),b
 26547  012A84  0E00               	movlw	0
 26548  012A86  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 26549  012A88  0E00               	movlw	0
 26550  012A8A  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 26551  012A8C  0E00               	movlw	0
 26552  012A8E  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 26553  012A90  ECB2  F0D0         	call	___llmod	;wreg free
 26554  012A94  0101               	movlb	1	; () banked
 26555  012A96  5124               	movf	?___llmod& (0+255),w,b
 26556  012A98  0F30               	addlw	48
 26557  012A9A  6FAB               	movwf	__doprnt@c& (0+255),b
 26558                           
 26559                           ;doprnt.c: 1491: break;
 26560  012A9C  D048               	goto	l2129
 26561  012A9E                     
 26562                           ; BSR set to: 1
 26563                           ;doprnt.c: 1499: {
 26564                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26565                           
 26566                           ; BSR set to: 1
 26567  012A9E  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 26568  012AA2  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 26569  012AA6  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 26570  012AAA  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 26571  012AAE  C1A9  F188         	movff	__doprnt@prec,??__doprnt
 26572  012AB2  C1AA  F189         	movff	__doprnt@prec+1,??__doprnt+1
 26573  012AB6  90D8               	bcf	status,0,c
 26574  012AB8  3788               	rlcf	??__doprnt& (0+255),f,b
 26575  012ABA  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26576  012ABC  90D8               	bcf	status,0,c
 26577  012ABE  3788               	rlcf	??__doprnt& (0+255),f,b
 26578  012AC0  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26579  012AC2  0E33               	movlw	low _hexpowers
 26580  012AC4  2588               	addwf	??__doprnt& (0+255),w,b
 26581  012AC6  6EF6               	movwf	tblptrl,c
 26582  012AC8  0ECF               	movlw	high _hexpowers
 26583  012ACA  2189               	addwfc	(??__doprnt+1)& (0+255),w,b
 26584  012ACC  6EF7               	movwf	tblptrh,c
 26585  012ACE                     	if	1	;There are 3 active tblptr bytes
 26586  012ACE  6AF8               	clrf	tblptru,c
 26587  012AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 26588  012AD2  22F8               	addwfc	tblptru,f,c
 26589  012AD4                     	endif
 26590  012AD4  0009               	tblrd		*+
 26591  012AD6  CFF5 F11B          	movff	tablat,___lldiv@divisor
 26592  012ADA  0009               	tblrd		*+
 26593  012ADC  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 26594  012AE0  0009               	tblrd		*+
 26595  012AE2  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 26596  012AE6  000A               	tblrd		*-
 26597  012AE8  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 26598  012AEC  ECB4  F0CD         	call	___lldiv	;wreg free
 26599  012AF0  0101               	movlb	1	; () banked
 26600  012AF2  5117               	movf	?___lldiv& (0+255),w,b
 26601  012AF4  0B0F               	andlw	15
 26602  012AF6  6F92               	movwf	__doprnt@idx& (0+255),b
 26603                           
 26604                           ; BSR set to: 1
 26605                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 26606  012AF8  5192               	movf	__doprnt@idx& (0+255),w,b
 26607  012AFA  0D01               	mullw	1
 26608  012AFC  0EEA               	movlw	low STR_192
 26609  012AFE  24F3               	addwf	prodl,w,c
 26610  012B00  6EF6               	movwf	tblptrl,c
 26611  012B02  0EFC               	movlw	high STR_192
 26612  012B04  20F4               	addwfc	prodh,w,c
 26613  012B06  6EF7               	movwf	tblptrh,c
 26614  012B08                     	if	1	;There are 3 active tblptr bytes
 26615  012B08  6AF8               	clrf	tblptru,c
 26616  012B0A  0E00               	movlw	low (__mediumconst shr (0+16))
 26617  012B0C  22F8               	addwfc	tblptru,f,c
 26618  012B0E                     	endif
 26619  012B0E  0008               	tblrd		*
 26620  012B10  CFF5 F1AB          	movff	tablat,__doprnt@c
 26621                           
 26622                           ; BSR set to: 1
 26623                           ;doprnt.c: 1523: }
 26624                           
 26625                           ;doprnt.c: 1508: }
 26626                           ;doprnt.c: 1510: break;
 26627  012B14  D00C               	goto	l2129
 26628  012B16                     l22535:
 26629  012B16  0101               	movlb	1	; () banked
 26630  012B18  51A7               	movf	__doprnt@flag& (0+255),w,b
 26631  012B1A  0BC0               	andlw	192
 26632                           
 26633                           ; Switch size 1, requested type "space"
 26634                           ; Number of cases is 3, Range of values is 0 to 192
 26635                           ; switch strategies available:
 26636                           ; Name         Instructions Cycles
 26637                           ; simple_byte           10     6 (average)
 26638                           ;	Chosen strategy is simple_byte
 26639  012B1C  0A00               	xorlw	0	; case 0
 26640  012B1E  B4D8               	btfsc	status,2,c
 26641  012B20  D77C               	goto	l2127
 26642  012B22  0A80               	xorlw	128	; case 128
 26643  012B24  B4D8               	btfsc	status,2,c
 26644  012B26  D7BB               	goto	l2130
 26645  012B28  0A40               	xorlw	64	; case 192
 26646  012B2A  B4D8               	btfsc	status,2,c
 26647  012B2C  D776               	goto	l2127
 26648  012B2E                     l2129:
 26649                           
 26650                           ; BSR set to: 1
 26651                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 26652                           
 26653                           ; BSR set to: 1
 26654  012B2E  EE20 F002          	lfsr	2,2
 26655  012B32  5182               	movf	__doprnt@pb& (0+255),w,b
 26656  012B34  26D9               	addwf	fsr2l,f,c
 26657  012B36  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26658  012B38  22DA               	addwfc	fsr2h,f,c
 26659  012B3A  50DE               	movf	postinc2,w,c
 26660  012B3C  10DE               	iorwf	postinc2,w,c
 26661  012B3E  10DE               	iorwf	postinc2,w,c
 26662  012B40  B4D8               	btfsc	status,2,c
 26663  012B42  D013               	goto	l2131
 26664                           
 26665                           ; BSR set to: 1
 26666  012B44  EE20 F002          	lfsr	2,2
 26667  012B48  5182               	movf	__doprnt@pb& (0+255),w,b
 26668  012B4A  26D9               	addwf	fsr2l,f,c
 26669  012B4C  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26670  012B4E  22DA               	addwfc	fsr2h,f,c
 26671  012B50  D801               	call	u33018
 26672  012B52  D020               	goto	l2132
 26673  012B54                     u33018:
 26674  012B54  0005               	push	
 26675  012B56  6EFA               	movwf	pclath,c
 26676  012B58  50DE               	movf	postinc2,w,c
 26677  012B5A  6EFD               	movwf	tosl,c
 26678  012B5C  50DE               	movf	postinc2,w,c
 26679  012B5E  6EFE               	movwf	tosh,c
 26680  012B60  50DE               	movf	postinc2,w,c
 26681  012B62  6EFF               	movwf	tosu,c
 26682  012B64  50FA               	movf	pclath,w,c
 26683  012B66  51AB               	movf	__doprnt@c& (0+255),w,b
 26684  012B68  0012               	return		;indir
 26685  012B6A                     l2131:
 26686  012B6A  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26687  012B6E  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26688  012B72  CFDE F188          	movff	postinc2,??__doprnt
 26689  012B76  CFDD F189          	movff	postdec2,??__doprnt+1
 26690  012B7A  C188  FFD9         	movff	??__doprnt,fsr2l
 26691  012B7E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26692  012B82  C1AB  FFDF         	movff	__doprnt@c,indf2
 26693  012B86                     l22543:
 26694  012B86  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26695  012B8A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26696  012B8E  2ADE               	incf	postinc2,f,c
 26697  012B90  0E00               	movlw	0
 26698  012B92  22DD               	addwfc	postdec2,f,c
 26699  012B94                     l2132:
 26700  012B94  0101               	movlb	1	; () banked
 26701  012B96  07A9               	decf	__doprnt@prec& (0+255),f,b
 26702  012B98  A0D8               	btfss	status,0,c
 26703  012B9A  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 26704  012B9C  29A9               	incf	__doprnt@prec& (0+255),w,b
 26705  012B9E  E1BB               	bnz	l22535
 26706  012BA0  29AA               	incf	(__doprnt@prec+1)& (0+255),w,b
 26707  012BA2  A4D8               	btfss	status,2,c
 26708  012BA4  D7B8               	goto	l2126
 26709  012BA6                     u33020:
 26710                           
 26711                           ; BSR set to: 1
 26712                           
 26713                           ; BSR set to: 1
 26714  012BA6  0101               	movlb	1	; () banked
 26715  012BA8  5184               	movf	__doprnt@f& (0+255),w,b
 26716  012BAA  6F88               	movwf	??__doprnt& (0+255),b
 26717  012BAC  5185               	movf	(__doprnt@f+1)& (0+255),w,b
 26718  012BAE  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26719  012BB0  4B84               	infsnz	__doprnt@f& (0+255),f,b
 26720  012BB2  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 26721  012BB4  C188  FFF6         	movff	??__doprnt,tblptrl
 26722  012BB8  C189  FFF7         	movff	??__doprnt+1,tblptrh
 26723  012BBC  0E00               	movlw	low (__mediumconst shr (0+16))
 26724  012BBE  6EF8               	movwf	tblptru,c
 26725  012BC0  0E0D               	movlw	(high __ramtop+-1)
 26726  012BC2  64F7               	cpfsgt	tblptrh,c
 26727  012BC4  D003               	bra	u33037
 26728  012BC6  0008               	tblrd		*
 26729  012BC8  50F5               	movf	tablat,w,c
 26730  012BCA  D005               	bra	u33030
 26731  012BCC                     u33037:
 26732  012BCC  CFF6 FFE9          	movff	tblptrl,fsr0l
 26733  012BD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 26734  012BD4  50EF               	movf	indf0,w,c
 26735  012BD6                     u33030:
 26736  012BD6  0101               	movlb	1	; () banked
 26737  012BD8  6FAB               	movwf	__doprnt@c& (0+255),b
 26738  012BDA  51AB               	movf	__doprnt@c& (0+255),w,b
 26739  012BDC  A4D8               	btfss	status,2,c
 26740  012BDE  EF71  F08B         	goto	l1960
 26741  012BE2                     u33040:
 26742                           
 26743                           ; BSR set to: 1
 26744                           ;doprnt.c: 1540: return 0;
 26745                           
 26746                           ; BSR set to: 1
 26747                           
 26748                           ;doprnt.c: 1525: }
 26749                           ;doprnt.c: 1533: }
 26750                           ;doprnt.c: 1535: alldone:
 26751                           
 26752                           ; BSR set to: 1
 26753  012BE2  0E00               	movlw	0
 26754  012BE4  6F83               	movwf	(?__doprnt+1)& (0+255),b
 26755  012BE6  0E00               	movlw	0
 26756  012BE8  6F82               	movwf	?__doprnt& (0+255),b
 26757  012BEA  0012               	return	
 26758  012BEC                     __end_of__doprnt:
 26759                           	opt stack 0
 26760                           tosu	equ	0xFFF
 26761                           tosh	equ	0xFFE
 26762                           tosl	equ	0xFFD
 26763                           pclath	equ	0xFFA
 26764                           tblptru	equ	0xFF8
 26765                           tblptrh	equ	0xFF7
 26766                           tblptrl	equ	0xFF6
 26767                           tablat	equ	0xFF5
 26768                           prodh	equ	0xFF4
 26769                           prodl	equ	0xFF3
 26770                           intcon	equ	0xFF2
 26771                           indf0	equ	0xFEF
 26772                           postinc0	equ	0xFEE
 26773                           fsr0h	equ	0xFEA
 26774                           fsr0l	equ	0xFE9
 26775                           wreg	equ	0xFE8
 26776                           indf1	equ	0xFE7
 26777                           postdec1	equ	0xFE5
 26778                           plusw1	equ	0xFE3
 26779                           fsr1h	equ	0xFE2
 26780                           fsr1l	equ	0xFE1
 26781                           indf2	equ	0xFDF
 26782                           postinc2	equ	0xFDE
 26783                           postdec2	equ	0xFDD
 26784                           plusw2	equ	0xFDB
 26785                           fsr2h	equ	0xFDA
 26786                           fsr2l	equ	0xFD9
 26787                           status	equ	0xFD8
 26788                           
 26789 ;; *************** function _scale *****************
 26790 ;; Defined at:
 26791 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26792 ;; Parameters:    Size  Location     Type
 26793 ;;  scl             1    wreg     char 
 26794 ;; Auto vars:     Size  Location     Type
 26795 ;;  scl             1  119[BANK1 ] char 
 26796 ;; Return value:  Size  Location     Type
 26797 ;;                  4  111[BANK1 ] char 
 26798 ;; Registers used:
 26799 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26800 ;; Tracked objects:
 26801 ;;		On entry : 0/0
 26802 ;;		On exit  : 0/0
 26803 ;;		Unchanged: 0/0
 26804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26805 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26806 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26808 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26809 ;;Total ram usage:        9 bytes
 26810 ;; Hardware stack levels used:    1
 26811 ;; Hardware stack levels required when called:   14
 26812 ;; This function calls:
 26813 ;;		___awdiv
 26814 ;;		___awmod
 26815 ;;		___flmul
 26816 ;; This function is called by:
 26817 ;;		__doprnt
 26818 ;; This function uses a non-reentrant model
 26819 ;;
 26820                           
 26821                           	psect	text34
 26822  014BB4                     __ptext34:
 26823                           	opt stack 0
 26824  014BB4                     _scale:
 26825                           	opt stack 12
 26826                           
 26827                           ; BSR set to: 1
 26828                           ;incstack = 0
 26829                           ;scale@scl stored from wreg
 26830  014BB4  0101               	movlb	1	; () banked
 26831  014BB6  6F77               	movwf	scale@scl& (0+255),b
 26832                           
 26833                           ;doprnt.c: 428: if(scl < 0) {
 26834  014BB8  0101               	movlb	1	; () banked
 26835  014BBA  AF77               	btfss	scale@scl& (0+255),7,b
 26836  014BBC  D127               	goto	l1949
 26837                           
 26838                           ; BSR set to: 1
 26839                           ;doprnt.c: 429: scl = -scl;
 26840  014BBE  6D77               	negf	scale@scl& (0+255),b
 26841                           
 26842                           ;doprnt.c: 430: if(scl>=110)
 26843  014BC0  5177               	movf	scale@scl& (0+255),w,b
 26844  014BC2  0A80               	xorlw	128
 26845  014BC4  0F12               	addlw	-238
 26846  014BC6  A0D8               	btfss	status,0,c
 26847  014BC8  D0A5               	goto	l1950
 26848                           
 26849                           ; BSR set to: 1
 26850                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26851  014BCA  0E00               	movlw	0
 26852  014BCC  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26853  014BCE  0E0A               	movlw	10
 26854  014BD0  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26855  014BD2  0E00               	movlw	0
 26856  014BD4  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26857  014BD6  0E64               	movlw	100
 26858  014BD8  6F19               	movwf	___awmod@divisor& (0+255),b
 26859  014BDA  5177               	movf	scale@scl& (0+255),w,b
 26860  014BDC  6F17               	movwf	___awmod@dividend& (0+255),b
 26861  014BDE  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26862  014BE0  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26863  014BE2  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26864  014BE4  EC35  F0CF         	call	___awmod
 26865  014BE8  C117  F11D         	movff	?___awmod,___awdiv@dividend
 26866  014BEC  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 26867  014BF0  EC71  F0CD         	call	___awdiv	;wreg free
 26868  014BF4  0101               	movlb	1	; () banked
 26869  014BF6  90D8               	bcf	status,0,c
 26870  014BF8  371D               	rlcf	?___awdiv& (0+255),f,b
 26871  014BFA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26872  014BFC  90D8               	bcf	status,0,c
 26873  014BFE  371D               	rlcf	?___awdiv& (0+255),f,b
 26874  014C00  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26875  014C02  0E24               	movlw	36
 26876  014C04  271D               	addwf	?___awdiv& (0+255),f,b
 26877  014C06  0E00               	movlw	0
 26878  014C08  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26879  014C0A  0ED7               	movlw	low __npowers_
 26880  014C0C  251D               	addwf	?___awdiv& (0+255),w,b
 26881  014C0E  6EF6               	movwf	tblptrl,c
 26882  014C10  0ECE               	movlw	high __npowers_
 26883  014C12  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26884  014C14  6EF7               	movwf	tblptrh,c
 26885  014C16                     	if	1	;There are 3 active tblptr bytes
 26886  014C16  6AF8               	clrf	tblptru,c
 26887  014C18  0E00               	movlw	low (__mediumconst shr (0+16))
 26888  014C1A  22F8               	addwfc	tblptru,f,c
 26889  014C1C                     	endif
 26890  014C1C  0009               	tblrd		*+
 26891  014C1E  CFF5 F15A          	movff	tablat,___flmul@a
 26892  014C22  0009               	tblrd		*+
 26893  014C24  CFF5 F15B          	movff	tablat,___flmul@a+1
 26894  014C28  0009               	tblrd		*+
 26895  014C2A  CFF5 F15C          	movff	tablat,___flmul@a+2
 26896  014C2E  000A               	tblrd		*-
 26897  014C30  CFF5 F15D          	movff	tablat,___flmul@a+3
 26898  014C34  0E00               	movlw	0
 26899  014C36  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26900  014C38  0E64               	movlw	100
 26901  014C3A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26902  014C3C  5177               	movf	scale@scl& (0+255),w,b
 26903  014C3E  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26904  014C40  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26905  014C42  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26906  014C44  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26907  014C46  EC71  F0CD         	call	___awdiv	;wreg free
 26908  014C4A  0101               	movlb	1	; () banked
 26909  014C4C  90D8               	bcf	status,0,c
 26910  014C4E  371D               	rlcf	?___awdiv& (0+255),f,b
 26911  014C50  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26912  014C52  90D8               	bcf	status,0,c
 26913  014C54  371D               	rlcf	?___awdiv& (0+255),f,b
 26914  014C56  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26915  014C58  0E48               	movlw	72
 26916  014C5A  271D               	addwf	?___awdiv& (0+255),f,b
 26917  014C5C  0E00               	movlw	0
 26918  014C5E  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26919  014C60  0ED7               	movlw	low __npowers_
 26920  014C62  251D               	addwf	?___awdiv& (0+255),w,b
 26921  014C64  6EF6               	movwf	tblptrl,c
 26922  014C66  0ECE               	movlw	high __npowers_
 26923  014C68  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26924  014C6A  6EF7               	movwf	tblptrh,c
 26925  014C6C                     	if	1	;There are 3 active tblptr bytes
 26926  014C6C  6AF8               	clrf	tblptru,c
 26927  014C6E  0E00               	movlw	low (__mediumconst shr (0+16))
 26928  014C70  22F8               	addwfc	tblptru,f,c
 26929  014C72                     	endif
 26930  014C72  0009               	tblrd		*+
 26931  014C74  CFF5 F156          	movff	tablat,___flmul@b
 26932  014C78  0009               	tblrd		*+
 26933  014C7A  CFF5 F157          	movff	tablat,___flmul@b+1
 26934  014C7E  0009               	tblrd		*+
 26935  014C80  CFF5 F158          	movff	tablat,___flmul@b+2
 26936  014C84  000A               	tblrd		*-
 26937  014C86  CFF5 F159          	movff	tablat,___flmul@b+3
 26938  014C8A  EC20  F0AC         	call	___flmul	;wreg free
 26939  014C8E  C156  F173         	movff	?___flmul,_scale$5213
 26940  014C92  C157  F174         	movff	?___flmul+1,_scale$5213+1
 26941  014C96  C158  F175         	movff	?___flmul+2,_scale$5213+2
 26942  014C9A  C159  F176         	movff	?___flmul+3,_scale$5213+3
 26943                           
 26944                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26945  014C9E  C173  F156         	movff	_scale$5213,___flmul@b
 26946  014CA2  C174  F157         	movff	_scale$5213+1,___flmul@b+1
 26947  014CA6  C175  F158         	movff	_scale$5213+2,___flmul@b+2
 26948  014CAA  C176  F159         	movff	_scale$5213+3,___flmul@b+3
 26949  014CAE  0E00               	movlw	0
 26950  014CB0  0101               	movlb	1	; () banked
 26951  014CB2  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26952  014CB4  0E0A               	movlw	10
 26953  014CB6  6F19               	movwf	___awmod@divisor& (0+255),b
 26954  014CB8  5177               	movf	scale@scl& (0+255),w,b
 26955  014CBA  6F17               	movwf	___awmod@dividend& (0+255),b
 26956  014CBC  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26957  014CBE  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26958  014CC0  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26959  014CC2  EC35  F0CF         	call	___awmod	;wreg free
 26960  014CC6  0101               	movlb	1	; () banked
 26961  014CC8  90D8               	bcf	status,0,c
 26962  014CCA  3717               	rlcf	?___awmod& (0+255),f,b
 26963  014CCC  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26964  014CCE  90D8               	bcf	status,0,c
 26965  014CD0  3717               	rlcf	?___awmod& (0+255),f,b
 26966  014CD2  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26967  014CD4  0ED7               	movlw	low __npowers_
 26968  014CD6  2517               	addwf	?___awmod& (0+255),w,b
 26969  014CD8  6EF6               	movwf	tblptrl,c
 26970  014CDA  0ECE               	movlw	high __npowers_
 26971  014CDC  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 26972  014CDE  6EF7               	movwf	tblptrh,c
 26973  014CE0                     	if	1	;There are 3 active tblptr bytes
 26974  014CE0  6AF8               	clrf	tblptru,c
 26975  014CE2  0E00               	movlw	low (__mediumconst shr (0+16))
 26976  014CE4  22F8               	addwfc	tblptru,f,c
 26977  014CE6                     	endif
 26978  014CE6  0009               	tblrd		*+
 26979  014CE8  CFF5 F15A          	movff	tablat,___flmul@a
 26980  014CEC  0009               	tblrd		*+
 26981  014CEE  CFF5 F15B          	movff	tablat,___flmul@a+1
 26982  014CF2  0009               	tblrd		*+
 26983  014CF4  CFF5 F15C          	movff	tablat,___flmul@a+2
 26984  014CF8  000A               	tblrd		*-
 26985  014CFA  CFF5 F15D          	movff	tablat,___flmul@a+3
 26986  014CFE  EC20  F0AC         	call	___flmul	;wreg free
 26987  014D02  C156  F16F         	movff	?___flmul,?_scale
 26988  014D06  C157  F170         	movff	?___flmul+1,?_scale+1
 26989  014D0A  C158  F171         	movff	?___flmul+2,?_scale+2
 26990  014D0E  C159  F172         	movff	?___flmul+3,?_scale+3
 26991  014D12  0012               	return	
 26992  014D14                     l1950:
 26993                           
 26994                           ;doprnt.c: 432: else if(scl > 10)
 26995  014D14  0101               	movlb	1	; () banked
 26996  014D16  5177               	movf	scale@scl& (0+255),w,b
 26997  014D18  0A80               	xorlw	128
 26998  014D1A  0F75               	addlw	-139
 26999  014D1C  A0D8               	btfss	status,0,c
 27000  014D1E  D05D               	goto	l1953
 27001                           
 27002                           ; BSR set to: 1
 27003                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 27004  014D20  0E00               	movlw	0
 27005  014D22  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27006  014D24  0E0A               	movlw	10
 27007  014D26  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27008  014D28  5177               	movf	scale@scl& (0+255),w,b
 27009  014D2A  6F1D               	movwf	___awdiv@dividend& (0+255),b
 27010  014D2C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27011  014D2E  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 27012  014D30  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27013  014D32  EC71  F0CD         	call	___awdiv	;wreg free
 27014  014D36  0101               	movlb	1	; () banked
 27015  014D38  90D8               	bcf	status,0,c
 27016  014D3A  371D               	rlcf	?___awdiv& (0+255),f,b
 27017  014D3C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27018  014D3E  90D8               	bcf	status,0,c
 27019  014D40  371D               	rlcf	?___awdiv& (0+255),f,b
 27020  014D42  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27021  014D44  0E24               	movlw	36
 27022  014D46  271D               	addwf	?___awdiv& (0+255),f,b
 27023  014D48  0E00               	movlw	0
 27024  014D4A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27025  014D4C  0ED7               	movlw	low __npowers_
 27026  014D4E  251D               	addwf	?___awdiv& (0+255),w,b
 27027  014D50  6EF6               	movwf	tblptrl,c
 27028  014D52  0ECE               	movlw	high __npowers_
 27029  014D54  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27030  014D56  6EF7               	movwf	tblptrh,c
 27031  014D58                     	if	1	;There are 3 active tblptr bytes
 27032  014D58  6AF8               	clrf	tblptru,c
 27033  014D5A  0E00               	movlw	low (__mediumconst shr (0+16))
 27034  014D5C  22F8               	addwfc	tblptru,f,c
 27035  014D5E                     	endif
 27036  014D5E  0009               	tblrd		*+
 27037  014D60  CFF5 F156          	movff	tablat,___flmul@b
 27038  014D64  0009               	tblrd		*+
 27039  014D66  CFF5 F157          	movff	tablat,___flmul@b+1
 27040  014D6A  0009               	tblrd		*+
 27041  014D6C  CFF5 F158          	movff	tablat,___flmul@b+2
 27042  014D70  000A               	tblrd		*-
 27043  014D72  CFF5 F159          	movff	tablat,___flmul@b+3
 27044  014D76  0E00               	movlw	0
 27045  014D78  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27046  014D7A  0E0A               	movlw	10
 27047  014D7C  6F19               	movwf	___awmod@divisor& (0+255),b
 27048  014D7E  5177               	movf	scale@scl& (0+255),w,b
 27049  014D80  6F17               	movwf	___awmod@dividend& (0+255),b
 27050  014D82  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27051  014D84  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 27052  014D86  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 27053  014D88  EC35  F0CF         	call	___awmod	;wreg free
 27054  014D8C  0101               	movlb	1	; () banked
 27055  014D8E  90D8               	bcf	status,0,c
 27056  014D90  3717               	rlcf	?___awmod& (0+255),f,b
 27057  014D92  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27058  014D94  90D8               	bcf	status,0,c
 27059  014D96  3717               	rlcf	?___awmod& (0+255),f,b
 27060  014D98  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27061  014D9A  0ED7               	movlw	low __npowers_
 27062  014D9C  2517               	addwf	?___awmod& (0+255),w,b
 27063  014D9E  6EF6               	movwf	tblptrl,c
 27064  014DA0  0ECE               	movlw	high __npowers_
 27065  014DA2  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27066  014DA4  6EF7               	movwf	tblptrh,c
 27067  014DA6                     	if	1	;There are 3 active tblptr bytes
 27068  014DA6  6AF8               	clrf	tblptru,c
 27069  014DA8  0E00               	movlw	low (__mediumconst shr (0+16))
 27070  014DAA  22F8               	addwfc	tblptru,f,c
 27071  014DAC                     	endif
 27072  014DAC  0009               	tblrd		*+
 27073  014DAE  CFF5 F15A          	movff	tablat,___flmul@a
 27074  014DB2  0009               	tblrd		*+
 27075  014DB4  CFF5 F15B          	movff	tablat,___flmul@a+1
 27076  014DB8  0009               	tblrd		*+
 27077  014DBA  CFF5 F15C          	movff	tablat,___flmul@a+2
 27078  014DBE  000A               	tblrd		*-
 27079  014DC0  CFF5 F15D          	movff	tablat,___flmul@a+3
 27080  014DC4  EC20  F0AC         	call	___flmul	;wreg free
 27081  014DC8  C156  F16F         	movff	?___flmul,?_scale
 27082  014DCC  C157  F170         	movff	?___flmul+1,?_scale+1
 27083  014DD0  C158  F171         	movff	?___flmul+2,?_scale+2
 27084  014DD4  C159  F172         	movff	?___flmul+3,?_scale+3
 27085  014DD8  0012               	return	
 27086  014DDA                     l1953:
 27087                           
 27088                           ;doprnt.c: 434: return _npowers_[scl];
 27089  014DDA  0101               	movlb	1	; () banked
 27090  014DDC  5177               	movf	scale@scl& (0+255),w,b
 27091  014DDE  0D04               	mullw	4
 27092  014DE0  0ED7               	movlw	low __npowers_
 27093  014DE2  24F3               	addwf	prodl,w,c
 27094  014DE4  6EF6               	movwf	tblptrl,c
 27095  014DE6  0ECE               	movlw	high __npowers_
 27096  014DE8  20F4               	addwfc	prodh,w,c
 27097  014DEA  6EF7               	movwf	tblptrh,c
 27098  014DEC                     	if	1	;There are 3 active tblptr bytes
 27099  014DEC  6AF8               	clrf	tblptru,c
 27100  014DEE  0E00               	movlw	low (__mediumconst shr (0+16))
 27101  014DF0  22F8               	addwfc	tblptru,f,c
 27102  014DF2                     	endif
 27103  014DF2  0009               	tblrd		*+
 27104  014DF4  CFF5 F16F          	movff	tablat,?_scale
 27105  014DF8  0009               	tblrd		*+
 27106  014DFA  CFF5 F170          	movff	tablat,?_scale+1
 27107  014DFE  0009               	tblrd		*+
 27108  014E00  CFF5 F171          	movff	tablat,?_scale+2
 27109  014E04  000A               	tblrd		*-
 27110  014E06  CFF5 F172          	movff	tablat,?_scale+3
 27111                           
 27112                           ; BSR set to: 1
 27113  014E0A  0012               	return	
 27114  014E0C                     l1949:
 27115                           
 27116                           ; BSR set to: 1
 27117                           ;doprnt.c: 435: }
 27118                           ;doprnt.c: 436: if(scl>=110)
 27119                           
 27120                           ; BSR set to: 1
 27121  014E0C  5177               	movf	scale@scl& (0+255),w,b
 27122  014E0E  0A80               	xorlw	128
 27123  014E10  0F12               	addlw	-238
 27124  014E12  A0D8               	btfss	status,0,c
 27125  014E14  D0A5               	goto	l1954
 27126                           
 27127                           ; BSR set to: 1
 27128                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27129  014E16  0E00               	movlw	0
 27130  014E18  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27131  014E1A  0E0A               	movlw	10
 27132  014E1C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27133  014E1E  0E00               	movlw	0
 27134  014E20  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27135  014E22  0E64               	movlw	100
 27136  014E24  6F19               	movwf	___awmod@divisor& (0+255),b
 27137  014E26  5177               	movf	scale@scl& (0+255),w,b
 27138  014E28  6F17               	movwf	___awmod@dividend& (0+255),b
 27139  014E2A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27140  014E2C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 27141  014E2E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 27142  014E30  EC35  F0CF         	call	___awmod	;wreg free
 27143  014E34  C117  F11D         	movff	?___awmod,___awdiv@dividend
 27144  014E38  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 27145  014E3C  EC71  F0CD         	call	___awdiv	;wreg free
 27146  014E40  0101               	movlb	1	; () banked
 27147  014E42  90D8               	bcf	status,0,c
 27148  014E44  371D               	rlcf	?___awdiv& (0+255),f,b
 27149  014E46  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27150  014E48  90D8               	bcf	status,0,c
 27151  014E4A  371D               	rlcf	?___awdiv& (0+255),f,b
 27152  014E4C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27153  014E4E  0E24               	movlw	36
 27154  014E50  271D               	addwf	?___awdiv& (0+255),f,b
 27155  014E52  0E00               	movlw	0
 27156  014E54  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27157  014E56  0EA3               	movlw	low __powers_
 27158  014E58  251D               	addwf	?___awdiv& (0+255),w,b
 27159  014E5A  6EF6               	movwf	tblptrl,c
 27160  014E5C  0ECE               	movlw	high __powers_
 27161  014E5E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27162  014E60  6EF7               	movwf	tblptrh,c
 27163  014E62                     	if	1	;There are 3 active tblptr bytes
 27164  014E62  6AF8               	clrf	tblptru,c
 27165  014E64  0E00               	movlw	low (__mediumconst shr (0+16))
 27166  014E66  22F8               	addwfc	tblptru,f,c
 27167  014E68                     	endif
 27168  014E68  0009               	tblrd		*+
 27169  014E6A  CFF5 F15A          	movff	tablat,___flmul@a
 27170  014E6E  0009               	tblrd		*+
 27171  014E70  CFF5 F15B          	movff	tablat,___flmul@a+1
 27172  014E74  0009               	tblrd		*+
 27173  014E76  CFF5 F15C          	movff	tablat,___flmul@a+2
 27174  014E7A  000A               	tblrd		*-
 27175  014E7C  CFF5 F15D          	movff	tablat,___flmul@a+3
 27176  014E80  0E00               	movlw	0
 27177  014E82  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27178  014E84  0E64               	movlw	100
 27179  014E86  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27180  014E88  5177               	movf	scale@scl& (0+255),w,b
 27181  014E8A  6F1D               	movwf	___awdiv@dividend& (0+255),b
 27182  014E8C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27183  014E8E  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 27184  014E90  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27185  014E92  EC71  F0CD         	call	___awdiv	;wreg free
 27186  014E96  0101               	movlb	1	; () banked
 27187  014E98  90D8               	bcf	status,0,c
 27188  014E9A  371D               	rlcf	?___awdiv& (0+255),f,b
 27189  014E9C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27190  014E9E  90D8               	bcf	status,0,c
 27191  014EA0  371D               	rlcf	?___awdiv& (0+255),f,b
 27192  014EA2  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27193  014EA4  0E48               	movlw	72
 27194  014EA6  271D               	addwf	?___awdiv& (0+255),f,b
 27195  014EA8  0E00               	movlw	0
 27196  014EAA  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27197  014EAC  0EA3               	movlw	low __powers_
 27198  014EAE  251D               	addwf	?___awdiv& (0+255),w,b
 27199  014EB0  6EF6               	movwf	tblptrl,c
 27200  014EB2  0ECE               	movlw	high __powers_
 27201  014EB4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27202  014EB6  6EF7               	movwf	tblptrh,c
 27203  014EB8                     	if	1	;There are 3 active tblptr bytes
 27204  014EB8  6AF8               	clrf	tblptru,c
 27205  014EBA  0E00               	movlw	low (__mediumconst shr (0+16))
 27206  014EBC  22F8               	addwfc	tblptru,f,c
 27207  014EBE                     	endif
 27208  014EBE  0009               	tblrd		*+
 27209  014EC0  CFF5 F156          	movff	tablat,___flmul@b
 27210  014EC4  0009               	tblrd		*+
 27211  014EC6  CFF5 F157          	movff	tablat,___flmul@b+1
 27212  014ECA  0009               	tblrd		*+
 27213  014ECC  CFF5 F158          	movff	tablat,___flmul@b+2
 27214  014ED0  000A               	tblrd		*-
 27215  014ED2  CFF5 F159          	movff	tablat,___flmul@b+3
 27216  014ED6  EC20  F0AC         	call	___flmul	;wreg free
 27217  014EDA  C156  F173         	movff	?___flmul,_scale$5213
 27218  014EDE  C157  F174         	movff	?___flmul+1,_scale$5213+1
 27219  014EE2  C158  F175         	movff	?___flmul+2,_scale$5213+2
 27220  014EE6  C159  F176         	movff	?___flmul+3,_scale$5213+3
 27221                           
 27222                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27223  014EEA  C173  F156         	movff	_scale$5213,___flmul@b
 27224  014EEE  C174  F157         	movff	_scale$5213+1,___flmul@b+1
 27225  014EF2  C175  F158         	movff	_scale$5213+2,___flmul@b+2
 27226  014EF6  C176  F159         	movff	_scale$5213+3,___flmul@b+3
 27227  014EFA  0E00               	movlw	0
 27228  014EFC  0101               	movlb	1	; () banked
 27229  014EFE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27230  014F00  0E0A               	movlw	10
 27231  014F02  6F19               	movwf	___awmod@divisor& (0+255),b
 27232  014F04  5177               	movf	scale@scl& (0+255),w,b
 27233  014F06  6F17               	movwf	___awmod@dividend& (0+255),b
 27234  014F08  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27235  014F0A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 27236  014F0C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 27237  014F0E  EC35  F0CF         	call	___awmod	;wreg free
 27238  014F12  0101               	movlb	1	; () banked
 27239  014F14  90D8               	bcf	status,0,c
 27240  014F16  3717               	rlcf	?___awmod& (0+255),f,b
 27241  014F18  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27242  014F1A  90D8               	bcf	status,0,c
 27243  014F1C  3717               	rlcf	?___awmod& (0+255),f,b
 27244  014F1E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27245  014F20  0EA3               	movlw	low __powers_
 27246  014F22  2517               	addwf	?___awmod& (0+255),w,b
 27247  014F24  6EF6               	movwf	tblptrl,c
 27248  014F26  0ECE               	movlw	high __powers_
 27249  014F28  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27250  014F2A  6EF7               	movwf	tblptrh,c
 27251  014F2C                     	if	1	;There are 3 active tblptr bytes
 27252  014F2C  6AF8               	clrf	tblptru,c
 27253  014F2E  0E00               	movlw	low (__mediumconst shr (0+16))
 27254  014F30  22F8               	addwfc	tblptru,f,c
 27255  014F32                     	endif
 27256  014F32  0009               	tblrd		*+
 27257  014F34  CFF5 F15A          	movff	tablat,___flmul@a
 27258  014F38  0009               	tblrd		*+
 27259  014F3A  CFF5 F15B          	movff	tablat,___flmul@a+1
 27260  014F3E  0009               	tblrd		*+
 27261  014F40  CFF5 F15C          	movff	tablat,___flmul@a+2
 27262  014F44  000A               	tblrd		*-
 27263  014F46  CFF5 F15D          	movff	tablat,___flmul@a+3
 27264  014F4A  EC20  F0AC         	call	___flmul	;wreg free
 27265  014F4E  C156  F16F         	movff	?___flmul,?_scale
 27266  014F52  C157  F170         	movff	?___flmul+1,?_scale+1
 27267  014F56  C158  F171         	movff	?___flmul+2,?_scale+2
 27268  014F5A  C159  F172         	movff	?___flmul+3,?_scale+3
 27269  014F5E  0012               	return	
 27270  014F60                     l1954:
 27271                           
 27272                           ;doprnt.c: 438: else if(scl > 10)
 27273  014F60  0101               	movlb	1	; () banked
 27274  014F62  5177               	movf	scale@scl& (0+255),w,b
 27275  014F64  0A80               	xorlw	128
 27276  014F66  0F75               	addlw	-139
 27277  014F68  A0D8               	btfss	status,0,c
 27278  014F6A  D05D               	goto	l1956
 27279                           
 27280                           ; BSR set to: 1
 27281                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 27282  014F6C  0E00               	movlw	0
 27283  014F6E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27284  014F70  0E0A               	movlw	10
 27285  014F72  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27286  014F74  5177               	movf	scale@scl& (0+255),w,b
 27287  014F76  6F1D               	movwf	___awdiv@dividend& (0+255),b
 27288  014F78  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27289  014F7A  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 27290  014F7C  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27291  014F7E  EC71  F0CD         	call	___awdiv	;wreg free
 27292  014F82  0101               	movlb	1	; () banked
 27293  014F84  90D8               	bcf	status,0,c
 27294  014F86  371D               	rlcf	?___awdiv& (0+255),f,b
 27295  014F88  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27296  014F8A  90D8               	bcf	status,0,c
 27297  014F8C  371D               	rlcf	?___awdiv& (0+255),f,b
 27298  014F8E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27299  014F90  0E24               	movlw	36
 27300  014F92  271D               	addwf	?___awdiv& (0+255),f,b
 27301  014F94  0E00               	movlw	0
 27302  014F96  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27303  014F98  0EA3               	movlw	low __powers_
 27304  014F9A  251D               	addwf	?___awdiv& (0+255),w,b
 27305  014F9C  6EF6               	movwf	tblptrl,c
 27306  014F9E  0ECE               	movlw	high __powers_
 27307  014FA0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27308  014FA2  6EF7               	movwf	tblptrh,c
 27309  014FA4                     	if	1	;There are 3 active tblptr bytes
 27310  014FA4  6AF8               	clrf	tblptru,c
 27311  014FA6  0E00               	movlw	low (__mediumconst shr (0+16))
 27312  014FA8  22F8               	addwfc	tblptru,f,c
 27313  014FAA                     	endif
 27314  014FAA  0009               	tblrd		*+
 27315  014FAC  CFF5 F156          	movff	tablat,___flmul@b
 27316  014FB0  0009               	tblrd		*+
 27317  014FB2  CFF5 F157          	movff	tablat,___flmul@b+1
 27318  014FB6  0009               	tblrd		*+
 27319  014FB8  CFF5 F158          	movff	tablat,___flmul@b+2
 27320  014FBC  000A               	tblrd		*-
 27321  014FBE  CFF5 F159          	movff	tablat,___flmul@b+3
 27322  014FC2  0E00               	movlw	0
 27323  014FC4  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27324  014FC6  0E0A               	movlw	10
 27325  014FC8  6F19               	movwf	___awmod@divisor& (0+255),b
 27326  014FCA  5177               	movf	scale@scl& (0+255),w,b
 27327  014FCC  6F17               	movwf	___awmod@dividend& (0+255),b
 27328  014FCE  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27329  014FD0  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 27330  014FD2  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 27331  014FD4  EC35  F0CF         	call	___awmod	;wreg free
 27332  014FD8  0101               	movlb	1	; () banked
 27333  014FDA  90D8               	bcf	status,0,c
 27334  014FDC  3717               	rlcf	?___awmod& (0+255),f,b
 27335  014FDE  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27336  014FE0  90D8               	bcf	status,0,c
 27337  014FE2  3717               	rlcf	?___awmod& (0+255),f,b
 27338  014FE4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27339  014FE6  0EA3               	movlw	low __powers_
 27340  014FE8  2517               	addwf	?___awmod& (0+255),w,b
 27341  014FEA  6EF6               	movwf	tblptrl,c
 27342  014FEC  0ECE               	movlw	high __powers_
 27343  014FEE  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27344  014FF0  6EF7               	movwf	tblptrh,c
 27345  014FF2                     	if	1	;There are 3 active tblptr bytes
 27346  014FF2  6AF8               	clrf	tblptru,c
 27347  014FF4  0E00               	movlw	low (__mediumconst shr (0+16))
 27348  014FF6  22F8               	addwfc	tblptru,f,c
 27349  014FF8                     	endif
 27350  014FF8  0009               	tblrd		*+
 27351  014FFA  CFF5 F15A          	movff	tablat,___flmul@a
 27352  014FFE  0009               	tblrd		*+
 27353  015000  CFF5 F15B          	movff	tablat,___flmul@a+1
 27354  015004  0009               	tblrd		*+
 27355  015006  CFF5 F15C          	movff	tablat,___flmul@a+2
 27356  01500A  000A               	tblrd		*-
 27357  01500C  CFF5 F15D          	movff	tablat,___flmul@a+3
 27358  015010  EC20  F0AC         	call	___flmul	;wreg free
 27359  015014  C156  F16F         	movff	?___flmul,?_scale
 27360  015018  C157  F170         	movff	?___flmul+1,?_scale+1
 27361  01501C  C158  F171         	movff	?___flmul+2,?_scale+2
 27362  015020  C159  F172         	movff	?___flmul+3,?_scale+3
 27363  015024  0012               	return	
 27364  015026                     l1956:
 27365                           
 27366                           ;doprnt.c: 440: return _powers_[scl];
 27367  015026  0101               	movlb	1	; () banked
 27368  015028  5177               	movf	scale@scl& (0+255),w,b
 27369  01502A  0D04               	mullw	4
 27370  01502C  0EA3               	movlw	low __powers_
 27371  01502E  24F3               	addwf	prodl,w,c
 27372  015030  6EF6               	movwf	tblptrl,c
 27373  015032  0ECE               	movlw	high __powers_
 27374  015034  20F4               	addwfc	prodh,w,c
 27375  015036  6EF7               	movwf	tblptrh,c
 27376  015038                     	if	1	;There are 3 active tblptr bytes
 27377  015038  6AF8               	clrf	tblptru,c
 27378  01503A  0E00               	movlw	low (__mediumconst shr (0+16))
 27379  01503C  22F8               	addwfc	tblptru,f,c
 27380  01503E                     	endif
 27381  01503E  0009               	tblrd		*+
 27382  015040  CFF5 F16F          	movff	tablat,?_scale
 27383  015044  0009               	tblrd		*+
 27384  015046  CFF5 F170          	movff	tablat,?_scale+1
 27385  01504A  0009               	tblrd		*+
 27386  01504C  CFF5 F171          	movff	tablat,?_scale+2
 27387  015050  000A               	tblrd		*-
 27388  015052  CFF5 F172          	movff	tablat,?_scale+3
 27389  015056  0012               	return	
 27390  015058                     __end_of_scale:
 27391                           	opt stack 0
 27392                           tosu	equ	0xFFF
 27393                           tosh	equ	0xFFE
 27394                           tosl	equ	0xFFD
 27395                           pclath	equ	0xFFA
 27396                           tblptru	equ	0xFF8
 27397                           tblptrh	equ	0xFF7
 27398                           tblptrl	equ	0xFF6
 27399                           tablat	equ	0xFF5
 27400                           prodh	equ	0xFF4
 27401                           prodl	equ	0xFF3
 27402                           intcon	equ	0xFF2
 27403                           indf0	equ	0xFEF
 27404                           postinc0	equ	0xFEE
 27405                           fsr0h	equ	0xFEA
 27406                           fsr0l	equ	0xFE9
 27407                           wreg	equ	0xFE8
 27408                           indf1	equ	0xFE7
 27409                           postdec1	equ	0xFE5
 27410                           plusw1	equ	0xFE3
 27411                           fsr1h	equ	0xFE2
 27412                           fsr1l	equ	0xFE1
 27413                           indf2	equ	0xFDF
 27414                           postinc2	equ	0xFDE
 27415                           postdec2	equ	0xFDD
 27416                           plusw2	equ	0xFDB
 27417                           fsr2h	equ	0xFDA
 27418                           fsr2l	equ	0xFD9
 27419                           status	equ	0xFD8
 27420                           
 27421 ;; *************** function _putch *****************
 27422 ;; Defined at:
 27423 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 27424 ;; Parameters:    Size  Location     Type
 27425 ;;  txData          1    wreg     unsigned char 
 27426 ;; Auto vars:     Size  Location     Type
 27427 ;;  txData          1   24[BANK1 ] unsigned char 
 27428 ;; Return value:  Size  Location     Type
 27429 ;;                  1    wreg      void 
 27430 ;; Registers used:
 27431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27432 ;; Tracked objects:
 27433 ;;		On entry : 0/0
 27434 ;;		On exit  : 0/0
 27435 ;;		Unchanged: 0/0
 27436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27438 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27440 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27441 ;;Total ram usage:        1 bytes
 27442 ;; Hardware stack levels used:    1
 27443 ;; Hardware stack levels required when called:   14
 27444 ;; This function calls:
 27445 ;;		_EUSART2_Write
 27446 ;; This function is called by:
 27447 ;;		_printf
 27448 ;;		__doprnt
 27449 ;;		i2__doprnt
 27450 ;; This function uses a non-reentrant model
 27451 ;;
 27452                           
 27453                           	psect	text35
 27454  01B1AA                     __ptext35:
 27455                           	opt stack 0
 27456  01B1AA                     _putch:
 27457                           	opt stack 0
 27458                           
 27459                           ;Skip over the trampoline to the duplicate function for level 2
 27460  01B1AA  B25F               	btfsc	btemp,1,c
 27461  01B1AC  EF81  F0D9         	goto	i2_putch
 27462  01B1B0                     _putch$intlevel0:
 27463                           	opt stack 12
 27464                           
 27465                           ;incstack = 0
 27466                           ;putch@txData stored from wreg
 27467  01B1B0  0101               	movlb	1	; () banked
 27468  01B1B2  6F18               	movwf	putch@txData& (0+255),b
 27469                           
 27470                           ;eusart2.c: 187: EUSART2_Write(txData);
 27471  01B1B4  0101               	movlb	1	; () banked
 27472  01B1B6  5118               	movf	putch@txData& (0+255),w,b
 27473  01B1B8  ECF1  F0D2         	call	_EUSART2_Write
 27474  01B1BC  0012               	return		;funcret
 27475  01B1BE                     __end_of_putch:
 27476                           	opt stack 0
 27477                           tosu	equ	0xFFF
 27478                           tosh	equ	0xFFE
 27479                           tosl	equ	0xFFD
 27480                           pclath	equ	0xFFA
 27481                           tblptru	equ	0xFF8
 27482                           tblptrh	equ	0xFF7
 27483                           tblptrl	equ	0xFF6
 27484                           tablat	equ	0xFF5
 27485                           prodh	equ	0xFF4
 27486                           prodl	equ	0xFF3
 27487                           intcon	equ	0xFF2
 27488                           indf0	equ	0xFEF
 27489                           postinc0	equ	0xFEE
 27490                           fsr0h	equ	0xFEA
 27491                           fsr0l	equ	0xFE9
 27492                           wreg	equ	0xFE8
 27493                           indf1	equ	0xFE7
 27494                           postdec1	equ	0xFE5
 27495                           plusw1	equ	0xFE3
 27496                           fsr1h	equ	0xFE2
 27497                           fsr1l	equ	0xFE1
 27498                           indf2	equ	0xFDF
 27499                           postinc2	equ	0xFDE
 27500                           postdec2	equ	0xFDD
 27501                           plusw2	equ	0xFDB
 27502                           fsr2h	equ	0xFDA
 27503                           fsr2l	equ	0xFD9
 27504                           status	equ	0xFD8
 27505                           
 27506 ;; *************** function _EUSART2_Write *****************
 27507 ;; Defined at:
 27508 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 27509 ;; Parameters:    Size  Location     Type
 27510 ;;  txData          1    wreg     unsigned char 
 27511 ;; Auto vars:     Size  Location     Type
 27512 ;;  txData          1   23[BANK1 ] unsigned char 
 27513 ;; Return value:  Size  Location     Type
 27514 ;;                  1    wreg      void 
 27515 ;; Registers used:
 27516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27517 ;; Tracked objects:
 27518 ;;		On entry : 0/0
 27519 ;;		On exit  : 0/0
 27520 ;;		Unchanged: 0/0
 27521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27523 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27525 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27526 ;;Total ram usage:        1 bytes
 27527 ;; Hardware stack levels used:    1
 27528 ;; Hardware stack levels required when called:   13
 27529 ;; This function calls:
 27530 ;;		Nothing
 27531 ;; This function is called by:
 27532 ;;		_putch
 27533 ;; This function uses a non-reentrant model
 27534 ;;
 27535                           
 27536                           	psect	text36
 27537  01A5E2                     __ptext36:
 27538                           	opt stack 0
 27539  01A5E2                     _EUSART2_Write:
 27540                           	opt stack 12
 27541                           
 27542                           ;incstack = 0
 27543                           ;EUSART2_Write@txData stored from wreg
 27544  01A5E2  0101               	movlb	1	; () banked
 27545  01A5E4  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 27546                           
 27547                           ;eusart2.c: 157: while(0 == eusart2TxBufferRemaining)
 27548  01A5E6  D004               	goto	l430
 27549  01A5E8                     l431:
 27550                           
 27551                           ; BSR set to: 1
 27552  01A5E8  0004               	clrwdt		;# 
 27553                           
 27554                           ;eusart2.c: 160: error_handler.USB_UART_COMM_error_flag = 1;
 27555  01A5EA  0E01               	movlw	1
 27556  01A5EC  0102               	movlb	2	; () banked
 27557  01A5EE  6F08               	movwf	(_error_handler+8)& (0+255),b
 27558  01A5F0                     l430:
 27559                           
 27560                           ; BSR set to: 2
 27561  01A5F0  0101               	movlb	1	; () banked
 27562  01A5F2  51DF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 27563  01A5F4  B4D8               	btfsc	status,2,c
 27564  01A5F6  D7F8               	goto	l431
 27565                           
 27566                           ; BSR set to: 1
 27567                           ;eusart2.c: 161: }
 27568                           ;eusart2.c: 163: if(0 == PIE3bits.TX2IE)
 27569  01A5F8  010E               	movlb	14	; () banked
 27570  01A5FA  BD2C               	btfsc	44,6,b	;volatile
 27571  01A5FC  D003               	goto	l433
 27572                           
 27573                           ; BSR set to: 14
 27574                           ;eusart2.c: 164: {
 27575                           ;eusart2.c: 165: TX2REG = txData;
 27576  01A5FE  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 27577                           
 27578                           ;eusart2.c: 166: }
 27579  01A602  D013               	goto	l434
 27580  01A604                     l433:
 27581                           
 27582                           ; BSR set to: 14
 27583                           ;eusart2.c: 167: else
 27584                           ;eusart2.c: 168: {
 27585                           ;eusart2.c: 169: PIE3bits.TX2IE = 0;
 27586  01A604  9D2C               	bcf	44,6,b	;volatile
 27587                           
 27588                           ; BSR set to: 14
 27589                           ;eusart2.c: 170: eusart2TxBuffer[eusart2TxHead++] = txData;
 27590  01A606  0101               	movlb	1	; () banked
 27591  01A608  51E1               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 27592  01A60A  0D01               	mullw	1
 27593  01A60C  0E00               	movlw	low _eusart2TxBuffer
 27594  01A60E  24F3               	addwf	prodl,w,c
 27595  01A610  6ED9               	movwf	fsr2l,c
 27596  01A612  0E04               	movlw	high _eusart2TxBuffer
 27597  01A614  20F4               	addwfc	prodh,w,c
 27598  01A616  6EDA               	movwf	fsr2h,c
 27599  01A618  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 27600                           
 27601                           ; BSR set to: 1
 27602  01A61C  2BE1               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 27603                           
 27604                           ; BSR set to: 1
 27605                           ;eusart2.c: 171: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 27606  01A61E  0E7F               	movlw	127
 27607  01A620  65E1               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 27608  01A622  D002               	goto	l435
 27609                           
 27610                           ; BSR set to: 1
 27611                           ;eusart2.c: 172: {
 27612                           ;eusart2.c: 173: eusart2TxHead = 0;
 27613  01A624  0E00               	movlw	0
 27614  01A626  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 27615  01A628                     l435:
 27616                           
 27617                           ; BSR set to: 1
 27618                           ;eusart2.c: 174: }
 27619                           ;eusart2.c: 175: eusart2TxBufferRemaining--;
 27620                           
 27621                           ; BSR set to: 1
 27622  01A628  07DF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 27623  01A62A                     l434:
 27624                           
 27625                           ;eusart2.c: 176: }
 27626                           ;eusart2.c: 177: PIE3bits.TX2IE = 1;
 27627                           
 27628                           ; BSR set to: 1
 27629  01A62A  010E               	movlb	14	; () banked
 27630  01A62C  8D2C               	bsf	44,6,b	;volatile
 27631                           
 27632                           ; BSR set to: 14
 27633  01A62E  0012               	return		;funcret
 27634  01A630                     __end_of_EUSART2_Write:
 27635                           	opt stack 0
 27636                           tosu	equ	0xFFF
 27637                           tosh	equ	0xFFE
 27638                           tosl	equ	0xFFD
 27639                           pclath	equ	0xFFA
 27640                           tblptru	equ	0xFF8
 27641                           tblptrh	equ	0xFF7
 27642                           tblptrl	equ	0xFF6
 27643                           tablat	equ	0xFF5
 27644                           prodh	equ	0xFF4
 27645                           prodl	equ	0xFF3
 27646                           intcon	equ	0xFF2
 27647                           indf0	equ	0xFEF
 27648                           postinc0	equ	0xFEE
 27649                           fsr0h	equ	0xFEA
 27650                           fsr0l	equ	0xFE9
 27651                           wreg	equ	0xFE8
 27652                           indf1	equ	0xFE7
 27653                           postdec1	equ	0xFE5
 27654                           plusw1	equ	0xFE3
 27655                           fsr1h	equ	0xFE2
 27656                           fsr1l	equ	0xFE1
 27657                           indf2	equ	0xFDF
 27658                           postinc2	equ	0xFDE
 27659                           postdec2	equ	0xFDD
 27660                           plusw2	equ	0xFDB
 27661                           fsr2h	equ	0xFDA
 27662                           fsr2l	equ	0xFD9
 27663                           status	equ	0xFD8
 27664                           
 27665 ;; *************** function _isdigit *****************
 27666 ;; Defined at:
 27667 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 27668 ;; Parameters:    Size  Location     Type
 27669 ;;  c               1    wreg     unsigned char 
 27670 ;; Auto vars:     Size  Location     Type
 27671 ;;  c               1   25[BANK1 ] unsigned char 
 27672 ;; Return value:  Size  Location     Type
 27673 ;;		None               void
 27674 ;; Registers used:
 27675 ;;		wreg, status,2, status,0
 27676 ;; Tracked objects:
 27677 ;;		On entry : 0/0
 27678 ;;		On exit  : 0/0
 27679 ;;		Unchanged: 0/0
 27680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27682 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27683 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27684 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27685 ;;Total ram usage:        3 bytes
 27686 ;; Hardware stack levels used:    1
 27687 ;; Hardware stack levels required when called:   13
 27688 ;; This function calls:
 27689 ;;		Nothing
 27690 ;; This function is called by:
 27691 ;;		__doprnt
 27692 ;;		_atoi
 27693 ;; This function uses a non-reentrant model
 27694 ;;
 27695                           
 27696                           	psect	text37
 27697  01B010                     __ptext37:
 27698                           	opt stack 0
 27699  01B010                     _isdigit:
 27700                           	opt stack 13
 27701                           
 27702                           ; BSR set to: 14
 27703                           ;incstack = 0
 27704                           ;isdigit@c stored from wreg
 27705  01B010  0101               	movlb	1	; () banked
 27706  01B012  6F19               	movwf	isdigit@c& (0+255),b
 27707  01B014  0E00               	movlw	0
 27708  01B016  0101               	movlb	1	; () banked
 27709  01B018  6F18               	movwf	_isdigit$4353& (0+255),b
 27710                           
 27711                           ; BSR set to: 1
 27712  01B01A  0E3A               	movlw	58
 27713  01B01C  6119               	cpfslt	isdigit@c& (0+255),b
 27714  01B01E  D005               	goto	l2575
 27715                           
 27716                           ; BSR set to: 1
 27717  01B020  0E2F               	movlw	47
 27718  01B022  6519               	cpfsgt	isdigit@c& (0+255),b
 27719  01B024  D002               	goto	l2575
 27720                           
 27721                           ; BSR set to: 1
 27722  01B026  0E01               	movlw	1
 27723  01B028  6F18               	movwf	_isdigit$4353& (0+255),b
 27724  01B02A                     l2575:
 27725                           
 27726                           ; BSR set to: 1
 27727                           
 27728                           ; BSR set to: 1
 27729  01B02A  C118  F117         	movff	_isdigit$4353,??_isdigit
 27730  01B02E  3117               	rrcf	??_isdigit& (0+255),w,b
 27731  01B030  0012               	return	
 27732  01B032                     __end_of_isdigit:
 27733                           	opt stack 0
 27734                           tosu	equ	0xFFF
 27735                           tosh	equ	0xFFE
 27736                           tosl	equ	0xFFD
 27737                           pclath	equ	0xFFA
 27738                           tblptru	equ	0xFF8
 27739                           tblptrh	equ	0xFF7
 27740                           tblptrl	equ	0xFF6
 27741                           tablat	equ	0xFF5
 27742                           prodh	equ	0xFF4
 27743                           prodl	equ	0xFF3
 27744                           intcon	equ	0xFF2
 27745                           indf0	equ	0xFEF
 27746                           postinc0	equ	0xFEE
 27747                           fsr0h	equ	0xFEA
 27748                           fsr0l	equ	0xFE9
 27749                           wreg	equ	0xFE8
 27750                           indf1	equ	0xFE7
 27751                           postdec1	equ	0xFE5
 27752                           plusw1	equ	0xFE3
 27753                           fsr1h	equ	0xFE2
 27754                           fsr1l	equ	0xFE1
 27755                           indf2	equ	0xFDF
 27756                           postinc2	equ	0xFDE
 27757                           postdec2	equ	0xFDD
 27758                           plusw2	equ	0xFDB
 27759                           fsr2h	equ	0xFDA
 27760                           fsr2l	equ	0xFD9
 27761                           status	equ	0xFD8
 27762                           
 27763 ;; *************** function _fround *****************
 27764 ;; Defined at:
 27765 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 27766 ;; Parameters:    Size  Location     Type
 27767 ;;  prec            1    wreg     unsigned char 
 27768 ;; Auto vars:     Size  Location     Type
 27769 ;;  prec            1  123[BANK1 ] unsigned char 
 27770 ;; Return value:  Size  Location     Type
 27771 ;;                  4  111[BANK1 ] unsigned char 
 27772 ;; Registers used:
 27773 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27774 ;; Tracked objects:
 27775 ;;		On entry : 0/0
 27776 ;;		On exit  : 0/0
 27777 ;;		Unchanged: 0/0
 27778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27779 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27780 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27782 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27783 ;;Total ram usage:       13 bytes
 27784 ;; Hardware stack levels used:    1
 27785 ;; Hardware stack levels required when called:   14
 27786 ;; This function calls:
 27787 ;;		___awdiv
 27788 ;;		___awmod
 27789 ;;		___flmul
 27790 ;; This function is called by:
 27791 ;;		__doprnt
 27792 ;; This function uses a non-reentrant model
 27793 ;;
 27794                           
 27795                           	psect	text38
 27796  016E24                     __ptext38:
 27797                           	opt stack 0
 27798  016E24                     _fround:
 27799                           	opt stack 12
 27800                           
 27801                           ; BSR set to: 1
 27802                           ;incstack = 0
 27803                           ;fround@prec stored from wreg
 27804  016E24  0101               	movlb	1	; () banked
 27805  016E26  6F7B               	movwf	fround@prec& (0+255),b
 27806                           
 27807                           ;doprnt.c: 413: if(prec>=110)
 27808  016E28  0E6D               	movlw	109
 27809  016E2A  0101               	movlb	1	; () banked
 27810  016E2C  657B               	cpfsgt	fround@prec& (0+255),b
 27811  016E2E  D0BA               	goto	l1943
 27812                           
 27813                           ; BSR set to: 1
 27814                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27815  016E30  0E00               	movlw	0
 27816  016E32  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27817  016E34  0E0A               	movlw	10
 27818  016E36  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27819  016E38  0E00               	movlw	0
 27820  016E3A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27821  016E3C  0E64               	movlw	100
 27822  016E3E  6F19               	movwf	___awmod@divisor& (0+255),b
 27823  016E40  C17B  F117         	movff	fround@prec,___awmod@dividend
 27824  016E44  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27825  016E46  EC35  F0CF         	call	___awmod	;wreg free
 27826  016E4A  C117  F11D         	movff	?___awmod,___awdiv@dividend
 27827  016E4E  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 27828  016E52  EC71  F0CD         	call	___awdiv	;wreg free
 27829  016E56  0101               	movlb	1	; () banked
 27830  016E58  90D8               	bcf	status,0,c
 27831  016E5A  371D               	rlcf	?___awdiv& (0+255),f,b
 27832  016E5C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27833  016E5E  90D8               	bcf	status,0,c
 27834  016E60  371D               	rlcf	?___awdiv& (0+255),f,b
 27835  016E62  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27836  016E64  0E24               	movlw	36
 27837  016E66  271D               	addwf	?___awdiv& (0+255),f,b
 27838  016E68  0E00               	movlw	0
 27839  016E6A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27840  016E6C  0ED7               	movlw	low __npowers_
 27841  016E6E  251D               	addwf	?___awdiv& (0+255),w,b
 27842  016E70  6EF6               	movwf	tblptrl,c
 27843  016E72  0ECE               	movlw	high __npowers_
 27844  016E74  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27845  016E76  6EF7               	movwf	tblptrh,c
 27846  016E78                     	if	1	;There are 3 active tblptr bytes
 27847  016E78  6AF8               	clrf	tblptru,c
 27848  016E7A  0E00               	movlw	low (__mediumconst shr (0+16))
 27849  016E7C  22F8               	addwfc	tblptru,f,c
 27850  016E7E                     	endif
 27851  016E7E  0009               	tblrd		*+
 27852  016E80  CFF5 F15A          	movff	tablat,___flmul@a
 27853  016E84  0009               	tblrd		*+
 27854  016E86  CFF5 F15B          	movff	tablat,___flmul@a+1
 27855  016E8A  0009               	tblrd		*+
 27856  016E8C  CFF5 F15C          	movff	tablat,___flmul@a+2
 27857  016E90  000A               	tblrd		*-
 27858  016E92  CFF5 F15D          	movff	tablat,___flmul@a+3
 27859  016E96  0E00               	movlw	0
 27860  016E98  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27861  016E9A  0E64               	movlw	100
 27862  016E9C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27863  016E9E  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 27864  016EA2  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27865  016EA4  EC71  F0CD         	call	___awdiv	;wreg free
 27866  016EA8  0101               	movlb	1	; () banked
 27867  016EAA  90D8               	bcf	status,0,c
 27868  016EAC  371D               	rlcf	?___awdiv& (0+255),f,b
 27869  016EAE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27870  016EB0  90D8               	bcf	status,0,c
 27871  016EB2  371D               	rlcf	?___awdiv& (0+255),f,b
 27872  016EB4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27873  016EB6  0E48               	movlw	72
 27874  016EB8  271D               	addwf	?___awdiv& (0+255),f,b
 27875  016EBA  0E00               	movlw	0
 27876  016EBC  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27877  016EBE  0ED7               	movlw	low __npowers_
 27878  016EC0  251D               	addwf	?___awdiv& (0+255),w,b
 27879  016EC2  6EF6               	movwf	tblptrl,c
 27880  016EC4  0ECE               	movlw	high __npowers_
 27881  016EC6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27882  016EC8  6EF7               	movwf	tblptrh,c
 27883  016ECA                     	if	1	;There are 3 active tblptr bytes
 27884  016ECA  6AF8               	clrf	tblptru,c
 27885  016ECC  0E00               	movlw	low (__mediumconst shr (0+16))
 27886  016ECE  22F8               	addwfc	tblptru,f,c
 27887  016ED0                     	endif
 27888  016ED0  0009               	tblrd		*+
 27889  016ED2  CFF5 F156          	movff	tablat,___flmul@b
 27890  016ED6  0009               	tblrd		*+
 27891  016ED8  CFF5 F157          	movff	tablat,___flmul@b+1
 27892  016EDC  0009               	tblrd		*+
 27893  016EDE  CFF5 F158          	movff	tablat,___flmul@b+2
 27894  016EE2  000A               	tblrd		*-
 27895  016EE4  CFF5 F159          	movff	tablat,___flmul@b+3
 27896  016EE8  EC20  F0AC         	call	___flmul	;wreg free
 27897  016EEC  C156  F177         	movff	?___flmul,_fround$5211
 27898  016EF0  C157  F178         	movff	?___flmul+1,_fround$5211+1
 27899  016EF4  C158  F179         	movff	?___flmul+2,_fround$5211+2
 27900  016EF8  C159  F17A         	movff	?___flmul+3,_fround$5211+3
 27901                           
 27902                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27903  016EFC  0E00               	movlw	0
 27904  016EFE  0101               	movlb	1	; () banked
 27905  016F00  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27906  016F02  0E0A               	movlw	10
 27907  016F04  6F19               	movwf	___awmod@divisor& (0+255),b
 27908  016F06  C17B  F117         	movff	fround@prec,___awmod@dividend
 27909  016F0A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27910  016F0C  EC35  F0CF         	call	___awmod	;wreg free
 27911  016F10  0101               	movlb	1	; () banked
 27912  016F12  90D8               	bcf	status,0,c
 27913  016F14  3717               	rlcf	?___awmod& (0+255),f,b
 27914  016F16  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27915  016F18  90D8               	bcf	status,0,c
 27916  016F1A  3717               	rlcf	?___awmod& (0+255),f,b
 27917  016F1C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27918  016F1E  0ED7               	movlw	low __npowers_
 27919  016F20  2517               	addwf	?___awmod& (0+255),w,b
 27920  016F22  6EF6               	movwf	tblptrl,c
 27921  016F24  0ECE               	movlw	high __npowers_
 27922  016F26  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27923  016F28  6EF7               	movwf	tblptrh,c
 27924  016F2A                     	if	1	;There are 3 active tblptr bytes
 27925  016F2A  6AF8               	clrf	tblptru,c
 27926  016F2C  0E00               	movlw	low (__mediumconst shr (0+16))
 27927  016F2E  22F8               	addwfc	tblptru,f,c
 27928  016F30                     	endif
 27929  016F30  0009               	tblrd		*+
 27930  016F32  CFF5 F15A          	movff	tablat,___flmul@a
 27931  016F36  0009               	tblrd		*+
 27932  016F38  CFF5 F15B          	movff	tablat,___flmul@a+1
 27933  016F3C  0009               	tblrd		*+
 27934  016F3E  CFF5 F15C          	movff	tablat,___flmul@a+2
 27935  016F42  000A               	tblrd		*-
 27936  016F44  CFF5 F15D          	movff	tablat,___flmul@a+3
 27937  016F48  C177  F156         	movff	_fround$5211,___flmul@b
 27938  016F4C  C178  F157         	movff	_fround$5211+1,___flmul@b+1
 27939  016F50  C179  F158         	movff	_fround$5211+2,___flmul@b+2
 27940  016F54  C17A  F159         	movff	_fround$5211+3,___flmul@b+3
 27941  016F58  EC20  F0AC         	call	___flmul	;wreg free
 27942  016F5C  C156  F173         	movff	?___flmul,_fround$5212
 27943  016F60  C157  F174         	movff	?___flmul+1,_fround$5212+1
 27944  016F64  C158  F175         	movff	?___flmul+2,_fround$5212+2
 27945  016F68  C159  F176         	movff	?___flmul+3,_fround$5212+3
 27946                           
 27947                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27948  016F6C  C173  F156         	movff	_fround$5212,___flmul@b
 27949  016F70  C174  F157         	movff	_fround$5212+1,___flmul@b+1
 27950  016F74  C175  F158         	movff	_fround$5212+2,___flmul@b+2
 27951  016F78  C176  F159         	movff	_fround$5212+3,___flmul@b+3
 27952  016F7C  0E00               	movlw	0
 27953  016F7E  0101               	movlb	1	; () banked
 27954  016F80  6F5A               	movwf	___flmul@a& (0+255),b
 27955  016F82  0E00               	movlw	0
 27956  016F84  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27957  016F86  0E00               	movlw	0
 27958  016F88  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27959  016F8A  0E3F               	movlw	63
 27960  016F8C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27961  016F8E  EC20  F0AC         	call	___flmul	;wreg free
 27962  016F92  C156  F16F         	movff	?___flmul,?_fround
 27963  016F96  C157  F170         	movff	?___flmul+1,?_fround+1
 27964  016F9A  C158  F171         	movff	?___flmul+2,?_fround+2
 27965  016F9E  C159  F172         	movff	?___flmul+3,?_fround+3
 27966  016FA2  0012               	return	
 27967  016FA4                     l1943:
 27968                           
 27969                           ;doprnt.c: 415: else if(prec > 10)
 27970  016FA4  0E0A               	movlw	10
 27971  016FA6  0101               	movlb	1	; () banked
 27972  016FA8  657B               	cpfsgt	fround@prec& (0+255),b
 27973  016FAA  D074               	goto	l1946
 27974                           
 27975                           ; BSR set to: 1
 27976                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27977  016FAC  0E00               	movlw	0
 27978  016FAE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27979  016FB0  0E0A               	movlw	10
 27980  016FB2  6F19               	movwf	___awmod@divisor& (0+255),b
 27981  016FB4  C17B  F117         	movff	fround@prec,___awmod@dividend
 27982  016FB8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27983  016FBA  EC35  F0CF         	call	___awmod	;wreg free
 27984  016FBE  0101               	movlb	1	; () banked
 27985  016FC0  90D8               	bcf	status,0,c
 27986  016FC2  3717               	rlcf	?___awmod& (0+255),f,b
 27987  016FC4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27988  016FC6  90D8               	bcf	status,0,c
 27989  016FC8  3717               	rlcf	?___awmod& (0+255),f,b
 27990  016FCA  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27991  016FCC  0ED7               	movlw	low __npowers_
 27992  016FCE  2517               	addwf	?___awmod& (0+255),w,b
 27993  016FD0  6EF6               	movwf	tblptrl,c
 27994  016FD2  0ECE               	movlw	high __npowers_
 27995  016FD4  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27996  016FD6  6EF7               	movwf	tblptrh,c
 27997  016FD8                     	if	1	;There are 3 active tblptr bytes
 27998  016FD8  6AF8               	clrf	tblptru,c
 27999  016FDA  0E00               	movlw	low (__mediumconst shr (0+16))
 28000  016FDC  22F8               	addwfc	tblptru,f,c
 28001  016FDE                     	endif
 28002  016FDE  0009               	tblrd		*+
 28003  016FE0  CFF5 F15A          	movff	tablat,___flmul@a
 28004  016FE4  0009               	tblrd		*+
 28005  016FE6  CFF5 F15B          	movff	tablat,___flmul@a+1
 28006  016FEA  0009               	tblrd		*+
 28007  016FEC  CFF5 F15C          	movff	tablat,___flmul@a+2
 28008  016FF0  000A               	tblrd		*-
 28009  016FF2  CFF5 F15D          	movff	tablat,___flmul@a+3
 28010  016FF6  0E00               	movlw	0
 28011  016FF8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 28012  016FFA  0E0A               	movlw	10
 28013  016FFC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 28014  016FFE  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 28015  017002  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 28016  017004  EC71  F0CD         	call	___awdiv	;wreg free
 28017  017008  0101               	movlb	1	; () banked
 28018  01700A  90D8               	bcf	status,0,c
 28019  01700C  371D               	rlcf	?___awdiv& (0+255),f,b
 28020  01700E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 28021  017010  90D8               	bcf	status,0,c
 28022  017012  371D               	rlcf	?___awdiv& (0+255),f,b
 28023  017014  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 28024  017016  0E24               	movlw	36
 28025  017018  271D               	addwf	?___awdiv& (0+255),f,b
 28026  01701A  0E00               	movlw	0
 28027  01701C  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 28028  01701E  0ED7               	movlw	low __npowers_
 28029  017020  251D               	addwf	?___awdiv& (0+255),w,b
 28030  017022  6EF6               	movwf	tblptrl,c
 28031  017024  0ECE               	movlw	high __npowers_
 28032  017026  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 28033  017028  6EF7               	movwf	tblptrh,c
 28034  01702A                     	if	1	;There are 3 active tblptr bytes
 28035  01702A  6AF8               	clrf	tblptru,c
 28036  01702C  0E00               	movlw	low (__mediumconst shr (0+16))
 28037  01702E  22F8               	addwfc	tblptru,f,c
 28038  017030                     	endif
 28039  017030  0009               	tblrd		*+
 28040  017032  CFF5 F156          	movff	tablat,___flmul@b
 28041  017036  0009               	tblrd		*+
 28042  017038  CFF5 F157          	movff	tablat,___flmul@b+1
 28043  01703C  0009               	tblrd		*+
 28044  01703E  CFF5 F158          	movff	tablat,___flmul@b+2
 28045  017042  000A               	tblrd		*-
 28046  017044  CFF5 F159          	movff	tablat,___flmul@b+3
 28047  017048  EC20  F0AC         	call	___flmul	;wreg free
 28048  01704C  C156  F177         	movff	?___flmul,_fround$5211
 28049  017050  C157  F178         	movff	?___flmul+1,_fround$5211+1
 28050  017054  C158  F179         	movff	?___flmul+2,_fround$5211+2
 28051  017058  C159  F17A         	movff	?___flmul+3,_fround$5211+3
 28052                           
 28053                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28054  01705C  C177  F156         	movff	_fround$5211,___flmul@b
 28055  017060  C178  F157         	movff	_fround$5211+1,___flmul@b+1
 28056  017064  C179  F158         	movff	_fround$5211+2,___flmul@b+2
 28057  017068  C17A  F159         	movff	_fround$5211+3,___flmul@b+3
 28058  01706C  0E00               	movlw	0
 28059  01706E  0101               	movlb	1	; () banked
 28060  017070  6F5A               	movwf	___flmul@a& (0+255),b
 28061  017072  0E00               	movlw	0
 28062  017074  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 28063  017076  0E00               	movlw	0
 28064  017078  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 28065  01707A  0E3F               	movlw	63
 28066  01707C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 28067  01707E  EC20  F0AC         	call	___flmul	;wreg free
 28068  017082  C156  F16F         	movff	?___flmul,?_fround
 28069  017086  C157  F170         	movff	?___flmul+1,?_fround+1
 28070  01708A  C158  F171         	movff	?___flmul+2,?_fround+2
 28071  01708E  C159  F172         	movff	?___flmul+3,?_fround+3
 28072  017092  0012               	return	
 28073  017094                     l1946:
 28074                           
 28075                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 28076  017094  0101               	movlb	1	; () banked
 28077  017096  517B               	movf	fround@prec& (0+255),w,b
 28078  017098  0D04               	mullw	4
 28079  01709A  0ED7               	movlw	low __npowers_
 28080  01709C  24F3               	addwf	prodl,w,c
 28081  01709E  6EF6               	movwf	tblptrl,c
 28082  0170A0  0ECE               	movlw	high __npowers_
 28083  0170A2  20F4               	addwfc	prodh,w,c
 28084  0170A4  6EF7               	movwf	tblptrh,c
 28085  0170A6                     	if	1	;There are 3 active tblptr bytes
 28086  0170A6  6AF8               	clrf	tblptru,c
 28087  0170A8  0E00               	movlw	low (__mediumconst shr (0+16))
 28088  0170AA  22F8               	addwfc	tblptru,f,c
 28089  0170AC                     	endif
 28090  0170AC  0009               	tblrd		*+
 28091  0170AE  CFF5 F156          	movff	tablat,___flmul@b
 28092  0170B2  0009               	tblrd		*+
 28093  0170B4  CFF5 F157          	movff	tablat,___flmul@b+1
 28094  0170B8  0009               	tblrd		*+
 28095  0170BA  CFF5 F158          	movff	tablat,___flmul@b+2
 28096  0170BE  000A               	tblrd		*-
 28097  0170C0  CFF5 F159          	movff	tablat,___flmul@b+3
 28098  0170C4  0E00               	movlw	0
 28099  0170C6  6F5A               	movwf	___flmul@a& (0+255),b
 28100  0170C8  0E00               	movlw	0
 28101  0170CA  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 28102  0170CC  0E00               	movlw	0
 28103  0170CE  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 28104  0170D0  0E3F               	movlw	63
 28105  0170D2  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 28106  0170D4  EC20  F0AC         	call	___flmul	;wreg free
 28107  0170D8  C156  F16F         	movff	?___flmul,?_fround
 28108  0170DC  C157  F170         	movff	?___flmul+1,?_fround+1
 28109  0170E0  C158  F171         	movff	?___flmul+2,?_fround+2
 28110  0170E4  C159  F172         	movff	?___flmul+3,?_fround+3
 28111  0170E8  0012               	return	
 28112  0170EA                     __end_of_fround:
 28113                           	opt stack 0
 28114                           tosu	equ	0xFFF
 28115                           tosh	equ	0xFFE
 28116                           tosl	equ	0xFFD
 28117                           pclath	equ	0xFFA
 28118                           tblptru	equ	0xFF8
 28119                           tblptrh	equ	0xFF7
 28120                           tblptrl	equ	0xFF6
 28121                           tablat	equ	0xFF5
 28122                           prodh	equ	0xFF4
 28123                           prodl	equ	0xFF3
 28124                           intcon	equ	0xFF2
 28125                           indf0	equ	0xFEF
 28126                           postinc0	equ	0xFEE
 28127                           fsr0h	equ	0xFEA
 28128                           fsr0l	equ	0xFE9
 28129                           wreg	equ	0xFE8
 28130                           indf1	equ	0xFE7
 28131                           postdec1	equ	0xFE5
 28132                           plusw1	equ	0xFE3
 28133                           fsr1h	equ	0xFE2
 28134                           fsr1l	equ	0xFE1
 28135                           indf2	equ	0xFDF
 28136                           postinc2	equ	0xFDE
 28137                           postdec2	equ	0xFDD
 28138                           plusw2	equ	0xFDB
 28139                           fsr2h	equ	0xFDA
 28140                           fsr2l	equ	0xFD9
 28141                           status	equ	0xFD8
 28142                           
 28143 ;; *************** function ___flmul *****************
 28144 ;; Defined at:
 28145 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 28146 ;; Parameters:    Size  Location     Type
 28147 ;;  b               4   86[BANK1 ] unsigned char 
 28148 ;;  a               4   90[BANK1 ] unsigned char 
 28149 ;; Auto vars:     Size  Location     Type
 28150 ;;  prod            4  105[BANK1 ] struct .
 28151 ;;  grs             4  100[BANK1 ] unsigned long 
 28152 ;;  temp            2  109[BANK1 ] struct .
 28153 ;;  bexp            1  104[BANK1 ] unsigned char 
 28154 ;;  aexp            1   99[BANK1 ] unsigned char 
 28155 ;;  sign            1   98[BANK1 ] unsigned char 
 28156 ;; Return value:  Size  Location     Type
 28157 ;;                  4   86[BANK1 ] unsigned char 
 28158 ;; Registers used:
 28159 ;;		wreg, status,2, status,0, prodl, prodh
 28160 ;; Tracked objects:
 28161 ;;		On entry : 0/0
 28162 ;;		On exit  : 0/0
 28163 ;;		Unchanged: 0/0
 28164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28165 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28166 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28167 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28168 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28169 ;;Total ram usage:       25 bytes
 28170 ;; Hardware stack levels used:    1
 28171 ;; Hardware stack levels required when called:   13
 28172 ;; This function calls:
 28173 ;;		Nothing
 28174 ;; This function is called by:
 28175 ;;		_ringBufferLUT
 28176 ;;		_fround
 28177 ;;		_scale
 28178 ;;		__doprnt
 28179 ;;		_ftoa
 28180 ;; This function uses a non-reentrant model
 28181 ;;
 28182                           
 28183                           	psect	text39
 28184  015840                     __ptext39:
 28185                           	opt stack 0
 28186  015840                     ___flmul:
 28187                           	opt stack 12
 28188                           
 28189                           ;incstack = 0
 28190  015840  0101               	movlb	1	; () banked
 28191  015842  5159               	movf	(___flmul@b+3)& (0+255),w,b
 28192  015844  0B80               	andlw	128
 28193  015846  6F62               	movwf	___flmul@sign& (0+255),b
 28194  015848  5159               	movf	(___flmul@b+3)& (0+255),w,b
 28195  01584A  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 28196  01584C  6F68               	movwf	___flmul@bexp& (0+255),b
 28197                           
 28198                           ; BSR set to: 1
 28199  01584E  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 28200                           
 28201                           ; BSR set to: 1
 28202  015850  8168               	bsf	___flmul@bexp& (0+255),0,b
 28203                           
 28204                           ; BSR set to: 1
 28205                           
 28206                           ; BSR set to: 1
 28207  015852  5168               	movf	___flmul@bexp& (0+255),w,b
 28208  015854  B4D8               	btfsc	status,2,c
 28209  015856  D00D               	goto	l2822
 28210                           
 28211                           ; BSR set to: 1
 28212  015858  2968               	incf	___flmul@bexp& (0+255),w,b
 28213  01585A  A4D8               	btfss	status,2,c
 28214  01585C  D008               	goto	l2823
 28215                           
 28216                           ; BSR set to: 1
 28217  01585E  0E00               	movlw	0
 28218  015860  6F56               	movwf	___flmul@b& (0+255),b
 28219  015862  0E00               	movlw	0
 28220  015864  6F57               	movwf	(___flmul@b+1)& (0+255),b
 28221  015866  0E00               	movlw	0
 28222  015868  6F58               	movwf	(___flmul@b+2)& (0+255),b
 28223  01586A  0E00               	movlw	0
 28224  01586C  6F59               	movwf	(___flmul@b+3)& (0+255),b
 28225  01586E                     l2823:
 28226                           
 28227                           ; BSR set to: 1
 28228                           
 28229                           ; BSR set to: 1
 28230  01586E  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 28231  015870  D008               	goto	l2824
 28232  015872                     l2822:
 28233                           
 28234                           ; BSR set to: 1
 28235                           
 28236                           ; BSR set to: 1
 28237  015872  0E00               	movlw	0
 28238  015874  6F56               	movwf	___flmul@b& (0+255),b
 28239  015876  0E00               	movlw	0
 28240  015878  6F57               	movwf	(___flmul@b+1)& (0+255),b
 28241  01587A  0E00               	movlw	0
 28242  01587C  6F58               	movwf	(___flmul@b+2)& (0+255),b
 28243  01587E  0E00               	movlw	0
 28244  015880  6F59               	movwf	(___flmul@b+3)& (0+255),b
 28245  015882                     l2824:
 28246                           
 28247                           ; BSR set to: 1
 28248                           
 28249                           ; BSR set to: 1
 28250  015882  515D               	movf	(___flmul@a+3)& (0+255),w,b
 28251  015884  0B80               	andlw	128
 28252  015886  1B62               	xorwf	___flmul@sign& (0+255),f,b
 28253                           
 28254                           ; BSR set to: 1
 28255  015888  515D               	movf	(___flmul@a+3)& (0+255),w,b
 28256  01588A  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 28257  01588C  6F63               	movwf	___flmul@aexp& (0+255),b
 28258                           
 28259                           ; BSR set to: 1
 28260  01588E  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 28261                           
 28262                           ; BSR set to: 1
 28263  015890  8163               	bsf	___flmul@aexp& (0+255),0,b
 28264                           
 28265                           ; BSR set to: 1
 28266                           
 28267                           ; BSR set to: 1
 28268  015892  5163               	movf	___flmul@aexp& (0+255),w,b
 28269  015894  B4D8               	btfsc	status,2,c
 28270  015896  D00D               	goto	l2826
 28271                           
 28272                           ; BSR set to: 1
 28273  015898  2963               	incf	___flmul@aexp& (0+255),w,b
 28274  01589A  A4D8               	btfss	status,2,c
 28275  01589C  D008               	goto	l2827
 28276                           
 28277                           ; BSR set to: 1
 28278  01589E  0E00               	movlw	0
 28279  0158A0  6F5A               	movwf	___flmul@a& (0+255),b
 28280  0158A2  0E00               	movlw	0
 28281  0158A4  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 28282  0158A6  0E00               	movlw	0
 28283  0158A8  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 28284  0158AA  0E00               	movlw	0
 28285  0158AC  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 28286  0158AE                     l2827:
 28287                           
 28288                           ; BSR set to: 1
 28289                           
 28290                           ; BSR set to: 1
 28291  0158AE  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 28292  0158B0  D008               	goto	l2828
 28293  0158B2                     l2826:
 28294                           
 28295                           ; BSR set to: 1
 28296                           
 28297                           ; BSR set to: 1
 28298  0158B2  0E00               	movlw	0
 28299  0158B4  6F5A               	movwf	___flmul@a& (0+255),b
 28300  0158B6  0E00               	movlw	0
 28301  0158B8  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 28302  0158BA  0E00               	movlw	0
 28303  0158BC  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 28304  0158BE  0E00               	movlw	0
 28305  0158C0  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 28306  0158C2                     l2828:
 28307                           
 28308                           ; BSR set to: 1
 28309  0158C2  5163               	movf	___flmul@aexp& (0+255),w,b
 28310  0158C4  B4D8               	btfsc	status,2,c
 28311  0158C6  D003               	goto	u17460
 28312                           
 28313                           ; BSR set to: 1
 28314  0158C8  5168               	movf	___flmul@bexp& (0+255),w,b
 28315  0158CA  A4D8               	btfss	status,2,c
 28316  0158CC  D009               	goto	l2829
 28317  0158CE                     u17460:
 28318                           
 28319                           ; BSR set to: 1
 28320                           
 28321                           ; BSR set to: 1
 28322  0158CE  0E00               	movlw	0
 28323  0158D0  6F56               	movwf	?___flmul& (0+255),b
 28324  0158D2  0E00               	movlw	0
 28325  0158D4  6F57               	movwf	(?___flmul+1)& (0+255),b
 28326  0158D6  0E00               	movlw	0
 28327  0158D8  6F58               	movwf	(?___flmul+2)& (0+255),b
 28328  0158DA  0E00               	movlw	0
 28329  0158DC  6F59               	movwf	(?___flmul+3)& (0+255),b
 28330                           
 28331                           ; BSR set to: 1
 28332  0158DE  0012               	return	
 28333  0158E0                     l2829:
 28334                           
 28335                           ; BSR set to: 1
 28336                           
 28337                           ; BSR set to: 1
 28338  0158E0  515C               	movf	(___flmul@a+2)& (0+255),w,b
 28339  0158E2  0356               	mulwf	___flmul@b& (0+255),b
 28340  0158E4  CFF3 F16D          	movff	prodl,___flmul@temp
 28341  0158E8  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28342                           
 28343                           ; BSR set to: 1
 28344  0158EC  516D               	movf	___flmul@temp& (0+255),w,b
 28345  0158EE  6F64               	movwf	___flmul@grs& (0+255),b
 28346  0158F0  6B65               	clrf	(___flmul@grs+1)& (0+255),b
 28347  0158F2  6B66               	clrf	(___flmul@grs+2)& (0+255),b
 28348  0158F4  6B67               	clrf	(___flmul@grs+3)& (0+255),b
 28349                           
 28350                           ; BSR set to: 1
 28351  0158F6  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28352  0158F8  6F69               	movwf	___flmul@prod& (0+255),b
 28353  0158FA  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 28354  0158FC  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 28355  0158FE  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 28356  015900  515B               	movf	(___flmul@a+1)& (0+255),w,b
 28357  015902  0357               	mulwf	(___flmul@b+1)& (0+255),b
 28358  015904  CFF3 F16D          	movff	prodl,___flmul@temp
 28359  015908  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28360                           
 28361                           ; BSR set to: 1
 28362  01590C  516D               	movf	___flmul@temp& (0+255),w,b
 28363  01590E  2764               	addwf	___flmul@grs& (0+255),f,b
 28364  015910  0E00               	movlw	0
 28365  015912  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28366  015914  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28367  015916  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28368                           
 28369                           ; BSR set to: 1
 28370  015918  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28371  01591A  2769               	addwf	___flmul@prod& (0+255),f,b
 28372  01591C  0E00               	movlw	0
 28373  01591E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28374  015920  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28375  015922  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28376  015924  515A               	movf	___flmul@a& (0+255),w,b
 28377  015926  0358               	mulwf	(___flmul@b+2)& (0+255),b
 28378  015928  CFF3 F16D          	movff	prodl,___flmul@temp
 28379  01592C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28380                           
 28381                           ; BSR set to: 1
 28382  015930  516D               	movf	___flmul@temp& (0+255),w,b
 28383  015932  2764               	addwf	___flmul@grs& (0+255),f,b
 28384  015934  0E00               	movlw	0
 28385  015936  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28386  015938  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28387  01593A  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28388                           
 28389                           ; BSR set to: 1
 28390  01593C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28391  01593E  2769               	addwf	___flmul@prod& (0+255),f,b
 28392  015940  0E00               	movlw	0
 28393  015942  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28394  015944  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28395  015946  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28396                           
 28397                           ; BSR set to: 1
 28398  015948  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 28399  01594C  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 28400  015950  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 28401  015954  6B64               	clrf	___flmul@grs& (0+255),b
 28402                           
 28403                           ; BSR set to: 1
 28404  015956  515A               	movf	___flmul@a& (0+255),w,b
 28405  015958  0357               	mulwf	(___flmul@b+1)& (0+255),b
 28406  01595A  CFF3 F16D          	movff	prodl,___flmul@temp
 28407  01595E  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28408                           
 28409                           ; BSR set to: 1
 28410  015962  516D               	movf	___flmul@temp& (0+255),w,b
 28411  015964  2764               	addwf	___flmul@grs& (0+255),f,b
 28412  015966  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28413  015968  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28414  01596A  0E00               	movlw	0
 28415  01596C  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28416  01596E  0E00               	movlw	0
 28417  015970  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28418                           
 28419                           ; BSR set to: 1
 28420  015972  515B               	movf	(___flmul@a+1)& (0+255),w,b
 28421  015974  0356               	mulwf	___flmul@b& (0+255),b
 28422  015976  CFF3 F16D          	movff	prodl,___flmul@temp
 28423  01597A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28424                           
 28425                           ; BSR set to: 1
 28426  01597E  516D               	movf	___flmul@temp& (0+255),w,b
 28427  015980  2764               	addwf	___flmul@grs& (0+255),f,b
 28428  015982  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28429  015984  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28430  015986  0E00               	movlw	0
 28431  015988  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28432  01598A  0E00               	movlw	0
 28433  01598C  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28434                           
 28435                           ; BSR set to: 1
 28436  01598E  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 28437  015992  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 28438  015996  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 28439  01599A  6B64               	clrf	___flmul@grs& (0+255),b
 28440  01599C  515A               	movf	___flmul@a& (0+255),w,b
 28441  01599E  0356               	mulwf	___flmul@b& (0+255),b
 28442  0159A0  CFF3 F16D          	movff	prodl,___flmul@temp
 28443  0159A4  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28444                           
 28445                           ; BSR set to: 1
 28446  0159A8  516D               	movf	___flmul@temp& (0+255),w,b
 28447  0159AA  2764               	addwf	___flmul@grs& (0+255),f,b
 28448  0159AC  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28449  0159AE  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28450  0159B0  0E00               	movlw	0
 28451  0159B2  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28452  0159B4  0E00               	movlw	0
 28453  0159B6  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28454                           
 28455                           ; BSR set to: 1
 28456  0159B8  515C               	movf	(___flmul@a+2)& (0+255),w,b
 28457  0159BA  0357               	mulwf	(___flmul@b+1)& (0+255),b
 28458  0159BC  CFF3 F16D          	movff	prodl,___flmul@temp
 28459  0159C0  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28460  0159C4  516D               	movf	___flmul@temp& (0+255),w,b
 28461  0159C6  2769               	addwf	___flmul@prod& (0+255),f,b
 28462  0159C8  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28463  0159CA  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28464  0159CC  0E00               	movlw	0
 28465  0159CE  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28466  0159D0  0E00               	movlw	0
 28467  0159D2  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28468                           
 28469                           ; BSR set to: 1
 28470  0159D4  515B               	movf	(___flmul@a+1)& (0+255),w,b
 28471  0159D6  0358               	mulwf	(___flmul@b+2)& (0+255),b
 28472  0159D8  CFF3 F16D          	movff	prodl,___flmul@temp
 28473  0159DC  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28474                           
 28475                           ; BSR set to: 1
 28476  0159E0  516D               	movf	___flmul@temp& (0+255),w,b
 28477  0159E2  2769               	addwf	___flmul@prod& (0+255),f,b
 28478  0159E4  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28479  0159E6  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28480  0159E8  0E00               	movlw	0
 28481  0159EA  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28482  0159EC  0E00               	movlw	0
 28483  0159EE  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28484  0159F0  515C               	movf	(___flmul@a+2)& (0+255),w,b
 28485  0159F2  0358               	mulwf	(___flmul@b+2)& (0+255),b
 28486  0159F4  CFF3 F16D          	movff	prodl,___flmul@temp
 28487  0159F8  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28488                           
 28489                           ; BSR set to: 1
 28490  0159FC  516D               	movf	___flmul@temp& (0+255),w,b
 28491  0159FE  6F5E               	movwf	??___flmul& (0+255),b
 28492  015A00  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28493  015A02  6F5F               	movwf	(??___flmul+1)& (0+255),b
 28494  015A04  6B60               	clrf	(??___flmul+2)& (0+255),b
 28495  015A06  6B61               	clrf	(??___flmul+3)& (0+255),b
 28496  015A08  C160  F161         	movff	??___flmul+2,??___flmul+3
 28497  015A0C  C15F  F160         	movff	??___flmul+1,??___flmul+2
 28498  015A10  C15E  F15F         	movff	??___flmul,??___flmul+1
 28499  015A14  6B5E               	clrf	??___flmul& (0+255),b
 28500  015A16  515E               	movf	??___flmul& (0+255),w,b
 28501  015A18  2769               	addwf	___flmul@prod& (0+255),f,b
 28502  015A1A  515F               	movf	(??___flmul+1)& (0+255),w,b
 28503  015A1C  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28504  015A1E  5160               	movf	(??___flmul+2)& (0+255),w,b
 28505  015A20  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28506  015A22  5161               	movf	(??___flmul+3)& (0+255),w,b
 28507  015A24  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28508                           
 28509                           ; BSR set to: 1
 28510  015A26  C164  F15E         	movff	___flmul@grs,??___flmul
 28511  015A2A  C165  F15F         	movff	___flmul@grs+1,??___flmul+1
 28512  015A2E  C166  F160         	movff	___flmul@grs+2,??___flmul+2
 28513  015A32  C167  F161         	movff	___flmul@grs+3,??___flmul+3
 28514  015A36  0E19               	movlw	25
 28515  015A38  D005               	goto	u17470
 28516  015A3A                     u17475:
 28517  015A3A  90D8               	bcf	status,0,c
 28518  015A3C  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 28519  015A3E  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 28520  015A40  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 28521  015A42  335E               	rrcf	??___flmul& (0+255),f,b
 28522  015A44                     u17470:
 28523  015A44  2EE8               	decfsz	wreg,f,c
 28524  015A46  D7F9               	goto	u17475
 28525  015A48  515E               	movf	??___flmul& (0+255),w,b
 28526  015A4A  2769               	addwf	___flmul@prod& (0+255),f,b
 28527  015A4C  515F               	movf	(??___flmul+1)& (0+255),w,b
 28528  015A4E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28529  015A50  5160               	movf	(??___flmul+2)& (0+255),w,b
 28530  015A52  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28531  015A54  5161               	movf	(??___flmul+3)& (0+255),w,b
 28532  015A56  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28533                           
 28534                           ; BSR set to: 1
 28535  015A58  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 28536  015A5C  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 28537  015A60  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 28538  015A64  6B64               	clrf	___flmul@grs& (0+255),b
 28539                           
 28540                           ; BSR set to: 1
 28541  015A66  5163               	movf	___flmul@aexp& (0+255),w,b
 28542  015A68  C168  F15E         	movff	___flmul@bexp,??___flmul
 28543  015A6C  6B5F               	clrf	(??___flmul+1)& (0+255),b
 28544  015A6E  275E               	addwf	??___flmul& (0+255),f,b
 28545  015A70  0E00               	movlw	0
 28546  015A72  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 28547  015A74  0E82               	movlw	130
 28548  015A76  255E               	addwf	??___flmul& (0+255),w,b
 28549  015A78  6F6D               	movwf	___flmul@temp& (0+255),b
 28550  015A7A  0EFF               	movlw	255
 28551  015A7C  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 28552  015A7E  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 28553  015A80  D00F               	goto	l2833
 28554  015A82                     
 28555                           ; BSR set to: 1
 28556                           
 28557                           ; BSR set to: 1
 28558  015A82  90D8               	bcf	status,0,c
 28559  015A84  3769               	rlcf	___flmul@prod& (0+255),f,b
 28560  015A86  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 28561  015A88  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 28562  015A8A  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 28563                           
 28564                           ; BSR set to: 1
 28565  015A8C  BF67               	btfsc	(___flmul@grs+3)& (0+255),7,b
 28566                           
 28567                           ; BSR set to: 1
 28568  015A8E  8169               	bsf	___flmul@prod& (0+255),0,b
 28569                           
 28570                           ; BSR set to: 1
 28571  015A90  90D8               	bcf	status,0,c
 28572  015A92  3764               	rlcf	___flmul@grs& (0+255),f,b
 28573  015A94  3765               	rlcf	(___flmul@grs+1)& (0+255),f,b
 28574  015A96  3766               	rlcf	(___flmul@grs+2)& (0+255),f,b
 28575  015A98  3767               	rlcf	(___flmul@grs+3)& (0+255),f,b
 28576  015A9A  076D               	decf	___flmul@temp& (0+255),f,b
 28577  015A9C  A0D8               	btfss	status,0,c
 28578  015A9E  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 28579  015AA0                     l2833:
 28580                           
 28581                           ; BSR set to: 1
 28582                           
 28583                           ; BSR set to: 1
 28584  015AA0  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 28585  015AA2  D7EF               	goto	l2834
 28586                           
 28587                           ; BSR set to: 1
 28588                           
 28589                           ; BSR set to: 1
 28590  015AA4  0E00               	movlw	0
 28591  015AA6  6F63               	movwf	___flmul@aexp& (0+255),b
 28592                           
 28593                           ; BSR set to: 1
 28594  015AA8  AF67               	btfss	(___flmul@grs+3)& (0+255),7,b
 28595  015AAA  D016               	goto	l2840
 28596                           
 28597                           ; BSR set to: 1
 28598  015AAC  0EFF               	movlw	255
 28599  015AAE  1564               	andwf	___flmul@grs& (0+255),w,b
 28600  015AB0  6F5E               	movwf	??___flmul& (0+255),b
 28601  015AB2  0EFF               	movlw	255
 28602  015AB4  1565               	andwf	(___flmul@grs+1)& (0+255),w,b
 28603  015AB6  6F5F               	movwf	(??___flmul+1)& (0+255),b
 28604  015AB8  0EFF               	movlw	255
 28605  015ABA  1566               	andwf	(___flmul@grs+2)& (0+255),w,b
 28606  015ABC  6F60               	movwf	(??___flmul+2)& (0+255),b
 28607  015ABE  0E7F               	movlw	127
 28608  015AC0  1567               	andwf	(___flmul@grs+3)& (0+255),w,b
 28609  015AC2  6F61               	movwf	(??___flmul+3)& (0+255),b
 28610  015AC4  515E               	movf	??___flmul& (0+255),w,b
 28611  015AC6  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 28612  015AC8  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 28613  015ACA  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 28614  015ACC  A4D8               	btfss	status,2,c
 28615  015ACE  D002               	goto	u17520
 28616                           
 28617                           ; BSR set to: 1
 28618                           
 28619                           ; BSR set to: 1
 28620  015AD0  A169               	btfss	___flmul@prod& (0+255),0,b
 28621  015AD2  D002               	goto	l2840
 28622  015AD4                     u17520:
 28623                           
 28624                           ; BSR set to: 1
 28625  015AD4  0E01               	movlw	1
 28626  015AD6  6F63               	movwf	___flmul@aexp& (0+255),b
 28627  015AD8                     l2840:
 28628                           
 28629                           ; BSR set to: 1
 28630                           
 28631                           ; BSR set to: 1
 28632                           
 28633                           ; BSR set to: 1
 28634  015AD8  5163               	movf	___flmul@aexp& (0+255),w,b
 28635  015ADA  B4D8               	btfsc	status,2,c
 28636  015ADC  D01F               	goto	l2842
 28637                           
 28638                           ; BSR set to: 1
 28639  015ADE  0E01               	movlw	1
 28640  015AE0  2769               	addwf	___flmul@prod& (0+255),f,b
 28641  015AE2  0E00               	movlw	0
 28642  015AE4  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28643  015AE6  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28644  015AE8  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28645                           
 28646                           ; BSR set to: 1
 28647  015AEA  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 28648  015AEC  D017               	goto	l2842
 28649                           
 28650                           ; BSR set to: 1
 28651  015AEE  C169  F15E         	movff	___flmul@prod,??___flmul
 28652  015AF2  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 28653  015AF6  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 28654  015AFA  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 28655  015AFE  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 28656  015B00  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 28657  015B02  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 28658  015B04  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 28659  015B06  335E               	rrcf	??___flmul& (0+255),f,b
 28660  015B08  C15E  F169         	movff	??___flmul,___flmul@prod
 28661  015B0C  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 28662  015B10  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 28663  015B14  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 28664                           
 28665                           ; BSR set to: 1
 28666  015B18  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 28667  015B1A  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 28668  015B1C                     l2842:
 28669                           
 28670                           ; BSR set to: 1
 28671                           
 28672                           ; BSR set to: 1
 28673                           
 28674                           ; BSR set to: 1
 28675  015B1C  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 28676  015B1E  D00D               	goto	l2843
 28677  015B20  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28678  015B22  E103               	bnz	u17550
 28679  015B24  296D               	incf	___flmul@temp& (0+255),w,b
 28680  015B26  A0D8               	btfss	status,0,c
 28681  015B28  D008               	goto	l2843
 28682  015B2A                     u17550:
 28683                           
 28684                           ; BSR set to: 1
 28685  015B2A  0E00               	movlw	0
 28686  015B2C  6F69               	movwf	___flmul@prod& (0+255),b
 28687  015B2E  0E00               	movlw	0
 28688  015B30  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 28689  015B32  0E80               	movlw	128
 28690  015B34  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 28691  015B36  0E7F               	movlw	127
 28692  015B38  D020               	goto	L5
 28693  015B3A                     l2843:
 28694                           
 28695                           ; BSR set to: 1
 28696                           
 28697                           ; BSR set to: 1
 28698  015B3A  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 28699  015B3C  D005               	goto	u17560
 28700  015B3E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28701  015B40  E10E               	bnz	l2845
 28702  015B42  056D               	decf	___flmul@temp& (0+255),w,b
 28703  015B44  B0D8               	btfsc	status,0,c
 28704  015B46  D00B               	goto	l2845
 28705  015B48                     u17560:
 28706                           
 28707                           ; BSR set to: 1
 28708  015B48  0E00               	movlw	0
 28709  015B4A  6F69               	movwf	___flmul@prod& (0+255),b
 28710  015B4C  0E00               	movlw	0
 28711  015B4E  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 28712  015B50  0E00               	movlw	0
 28713  015B52  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 28714  015B54  0E00               	movlw	0
 28715  015B56  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 28716  015B58  0E00               	movlw	0
 28717  015B5A  6F62               	movwf	___flmul@sign& (0+255),b
 28718  015B5C  D00F               	goto	l2846
 28719  015B5E                     l2845:
 28720                           
 28721                           ; BSR set to: 1
 28722  015B5E  C16D  F168         	movff	___flmul@temp,___flmul@bexp
 28723                           
 28724                           ; BSR set to: 1
 28725  015B62  0EFF               	movlw	255
 28726  015B64  1769               	andwf	___flmul@prod& (0+255),f,b
 28727  015B66  0EFF               	movlw	255
 28728  015B68  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 28729  015B6A  0E7F               	movlw	127
 28730  015B6C  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 28731  015B6E  0E00               	movlw	0
 28732  015B70  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 28733                           
 28734                           ; BSR set to: 1
 28735  015B72  B168               	btfsc	___flmul@bexp& (0+255),0,b
 28736                           
 28737                           ; BSR set to: 1
 28738  015B74  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 28739                           
 28740                           ; BSR set to: 1
 28741                           
 28742                           ; BSR set to: 1
 28743  015B76  90D8               	bcf	status,0,c
 28744  015B78  3168               	rrcf	___flmul@bexp& (0+255),w,b
 28745  015B7A                     L5:
 28746  015B7A  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 28747  015B7C                     l2846:
 28748                           
 28749                           ; BSR set to: 1
 28750                           
 28751                           ; BSR set to: 1
 28752                           
 28753                           ; BSR set to: 1
 28754  015B7C  5162               	movf	___flmul@sign& (0+255),w,b
 28755  015B7E  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 28756                           
 28757                           ; BSR set to: 1
 28758  015B80  C169  F156         	movff	___flmul@prod,?___flmul
 28759  015B84  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 28760  015B88  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 28761  015B8C  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 28762  015B90  0012               	return	
 28763  015B92                     __end_of___flmul:
 28764                           	opt stack 0
 28765                           tosu	equ	0xFFF
 28766                           tosh	equ	0xFFE
 28767                           tosl	equ	0xFFD
 28768                           pclath	equ	0xFFA
 28769                           tblptru	equ	0xFF8
 28770                           tblptrh	equ	0xFF7
 28771                           tblptrl	equ	0xFF6
 28772                           tablat	equ	0xFF5
 28773                           prodh	equ	0xFF4
 28774                           prodl	equ	0xFF3
 28775                           intcon	equ	0xFF2
 28776                           indf0	equ	0xFEF
 28777                           postinc0	equ	0xFEE
 28778                           fsr0h	equ	0xFEA
 28779                           fsr0l	equ	0xFE9
 28780                           wreg	equ	0xFE8
 28781                           indf1	equ	0xFE7
 28782                           postdec1	equ	0xFE5
 28783                           plusw1	equ	0xFE3
 28784                           fsr1h	equ	0xFE2
 28785                           fsr1l	equ	0xFE1
 28786                           indf2	equ	0xFDF
 28787                           postinc2	equ	0xFDE
 28788                           postdec2	equ	0xFDD
 28789                           plusw2	equ	0xFDB
 28790                           fsr2h	equ	0xFDA
 28791                           fsr2l	equ	0xFD9
 28792                           status	equ	0xFD8
 28793                           
 28794 ;; *************** function ___awmod *****************
 28795 ;; Defined at:
 28796 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 28797 ;; Parameters:    Size  Location     Type
 28798 ;;  dividend        2   23[BANK1 ] int 
 28799 ;;  divisor         2   25[BANK1 ] int 
 28800 ;; Auto vars:     Size  Location     Type
 28801 ;;  sign            1   28[BANK1 ] unsigned char 
 28802 ;;  counter         1   27[BANK1 ] unsigned char 
 28803 ;; Return value:  Size  Location     Type
 28804 ;;                  2   23[BANK1 ] int 
 28805 ;; Registers used:
 28806 ;;		wreg, status,2, status,0
 28807 ;; Tracked objects:
 28808 ;;		On entry : 0/0
 28809 ;;		On exit  : 0/0
 28810 ;;		Unchanged: 0/0
 28811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28812 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28813 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28815 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28816 ;;Total ram usage:        6 bytes
 28817 ;; Hardware stack levels used:    1
 28818 ;; Hardware stack levels required when called:   13
 28819 ;; This function calls:
 28820 ;;		Nothing
 28821 ;; This function is called by:
 28822 ;;		_fround
 28823 ;;		_scale
 28824 ;; This function uses a non-reentrant model
 28825 ;;
 28826                           
 28827                           	psect	text40
 28828  019E6A                     __ptext40:
 28829                           	opt stack 0
 28830  019E6A                     ___awmod:
 28831                           	opt stack 12
 28832                           
 28833                           ; BSR set to: 1
 28834                           ;incstack = 0
 28835  019E6A  0E00               	movlw	0
 28836  019E6C  0101               	movlb	1	; () banked
 28837  019E6E  6F1C               	movwf	___awmod@sign& (0+255),b
 28838                           
 28839                           ; BSR set to: 1
 28840  019E70  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 28841  019E72  D006               	goto	l2372
 28842                           
 28843                           ; BSR set to: 1
 28844  019E74  6D17               	negf	___awmod@dividend& (0+255),b
 28845  019E76  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 28846  019E78  B0D8               	btfsc	status,0,c
 28847  019E7A  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 28848                           
 28849                           ; BSR set to: 1
 28850  019E7C  0E01               	movlw	1
 28851  019E7E  6F1C               	movwf	___awmod@sign& (0+255),b
 28852  019E80                     l2372:
 28853                           
 28854                           ; BSR set to: 1
 28855                           
 28856                           ; BSR set to: 1
 28857  019E80  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28858  019E82  D004               	goto	l2373
 28859                           
 28860                           ; BSR set to: 1
 28861  019E84  6D19               	negf	___awmod@divisor& (0+255),b
 28862  019E86  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 28863  019E88  B0D8               	btfsc	status,0,c
 28864  019E8A  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 28865  019E8C                     l2373:
 28866                           
 28867                           ; BSR set to: 1
 28868                           
 28869                           ; BSR set to: 1
 28870  019E8C  5119               	movf	___awmod@divisor& (0+255),w,b
 28871  019E8E  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 28872  019E90  B4D8               	btfsc	status,2,c
 28873  019E92  D018               	goto	l2380
 28874                           
 28875                           ; BSR set to: 1
 28876  019E94  0E01               	movlw	1
 28877  019E96  6F1B               	movwf	___awmod@counter& (0+255),b
 28878  019E98  D004               	goto	l2375
 28879  019E9A                     
 28880                           ; BSR set to: 1
 28881                           
 28882                           ; BSR set to: 1
 28883  019E9A  90D8               	bcf	status,0,c
 28884  019E9C  3719               	rlcf	___awmod@divisor& (0+255),f,b
 28885  019E9E  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 28886  019EA0  2B1B               	incf	___awmod@counter& (0+255),f,b
 28887  019EA2                     l2375:
 28888                           
 28889                           ; BSR set to: 1
 28890                           
 28891                           ; BSR set to: 1
 28892  019EA2  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28893  019EA4  D7FA               	goto	l2376
 28894  019EA6                     u17670:
 28895                           
 28896                           ; BSR set to: 1
 28897                           
 28898                           ; BSR set to: 1
 28899                           
 28900                           ; BSR set to: 1
 28901  019EA6  5119               	movf	___awmod@divisor& (0+255),w,b
 28902  019EA8  5D17               	subwf	___awmod@dividend& (0+255),w,b
 28903  019EAA  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 28904  019EAC  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 28905  019EAE  A0D8               	btfss	status,0,c
 28906  019EB0  D004               	goto	l2379
 28907                           
 28908                           ; BSR set to: 1
 28909  019EB2  5119               	movf	___awmod@divisor& (0+255),w,b
 28910  019EB4  5F17               	subwf	___awmod@dividend& (0+255),f,b
 28911  019EB6  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 28912  019EB8  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 28913  019EBA                     l2379:
 28914                           
 28915                           ; BSR set to: 1
 28916                           
 28917                           ; BSR set to: 1
 28918  019EBA  90D8               	bcf	status,0,c
 28919  019EBC  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 28920  019EBE  3319               	rrcf	___awmod@divisor& (0+255),f,b
 28921                           
 28922                           ; BSR set to: 1
 28923  019EC0  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 28924  019EC2  D7F1               	goto	u17670
 28925  019EC4                     l2380:
 28926                           
 28927                           ; BSR set to: 1
 28928                           
 28929                           ; BSR set to: 1
 28930                           
 28931                           ; BSR set to: 1
 28932  019EC4  511C               	movf	___awmod@sign& (0+255),w,b
 28933  019EC6  B4D8               	btfsc	status,2,c
 28934  019EC8  D004               	goto	l2381
 28935                           
 28936                           ; BSR set to: 1
 28937  019ECA  6D17               	negf	___awmod@dividend& (0+255),b
 28938  019ECC  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 28939  019ECE  B0D8               	btfsc	status,0,c
 28940  019ED0  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 28941  019ED2                     l2381:
 28942                           
 28943                           ; BSR set to: 1
 28944                           
 28945                           ; BSR set to: 1
 28946  019ED2  C117  F117         	movff	___awmod@dividend,?___awmod
 28947  019ED6  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 28948  019EDA  0012               	return	
 28949  019EDC                     __end_of___awmod:
 28950                           	opt stack 0
 28951                           tosu	equ	0xFFF
 28952                           tosh	equ	0xFFE
 28953                           tosl	equ	0xFFD
 28954                           pclath	equ	0xFFA
 28955                           tblptru	equ	0xFF8
 28956                           tblptrh	equ	0xFF7
 28957                           tblptrl	equ	0xFF6
 28958                           tablat	equ	0xFF5
 28959                           prodh	equ	0xFF4
 28960                           prodl	equ	0xFF3
 28961                           intcon	equ	0xFF2
 28962                           indf0	equ	0xFEF
 28963                           postinc0	equ	0xFEE
 28964                           fsr0h	equ	0xFEA
 28965                           fsr0l	equ	0xFE9
 28966                           wreg	equ	0xFE8
 28967                           indf1	equ	0xFE7
 28968                           postdec1	equ	0xFE5
 28969                           plusw1	equ	0xFE3
 28970                           fsr1h	equ	0xFE2
 28971                           fsr1l	equ	0xFE1
 28972                           indf2	equ	0xFDF
 28973                           postinc2	equ	0xFDE
 28974                           postdec2	equ	0xFDD
 28975                           plusw2	equ	0xFDB
 28976                           fsr2h	equ	0xFDA
 28977                           fsr2l	equ	0xFD9
 28978                           status	equ	0xFD8
 28979                           
 28980 ;; *************** function ___awdiv *****************
 28981 ;; Defined at:
 28982 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 28983 ;; Parameters:    Size  Location     Type
 28984 ;;  dividend        2   29[BANK1 ] int 
 28985 ;;  divisor         2   31[BANK1 ] int 
 28986 ;; Auto vars:     Size  Location     Type
 28987 ;;  quotient        2   35[BANK1 ] int 
 28988 ;;  sign            1   34[BANK1 ] unsigned char 
 28989 ;;  counter         1   33[BANK1 ] unsigned char 
 28990 ;; Return value:  Size  Location     Type
 28991 ;;                  2   29[BANK1 ] int 
 28992 ;; Registers used:
 28993 ;;		wreg, status,2, status,0
 28994 ;; Tracked objects:
 28995 ;;		On entry : 0/0
 28996 ;;		On exit  : 0/0
 28997 ;;		Unchanged: 0/0
 28998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28999 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29000 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29002 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29003 ;;Total ram usage:        8 bytes
 29004 ;; Hardware stack levels used:    1
 29005 ;; Hardware stack levels required when called:   13
 29006 ;; This function calls:
 29007 ;;		Nothing
 29008 ;; This function is called by:
 29009 ;;		_fround
 29010 ;;		_scale
 29011 ;;		__doprnt
 29012 ;; This function uses a non-reentrant model
 29013 ;;
 29014                           
 29015                           	psect	text41
 29016  019AE2                     __ptext41:
 29017                           	opt stack 0
 29018  019AE2                     ___awdiv:
 29019                           	opt stack 12
 29020                           
 29021                           ; BSR set to: 1
 29022                           ;incstack = 0
 29023  019AE2  0E00               	movlw	0
 29024  019AE4  0101               	movlb	1	; () banked
 29025  019AE6  6F22               	movwf	___awdiv@sign& (0+255),b
 29026                           
 29027                           ; BSR set to: 1
 29028  019AE8  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 29029  019AEA  D006               	goto	l2359
 29030                           
 29031                           ; BSR set to: 1
 29032  019AEC  6D1F               	negf	___awdiv@divisor& (0+255),b
 29033  019AEE  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 29034  019AF0  B0D8               	btfsc	status,0,c
 29035  019AF2  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 29036                           
 29037                           ; BSR set to: 1
 29038  019AF4  0E01               	movlw	1
 29039  019AF6  6F22               	movwf	___awdiv@sign& (0+255),b
 29040  019AF8                     l2359:
 29041                           
 29042                           ; BSR set to: 1
 29043                           
 29044                           ; BSR set to: 1
 29045  019AF8  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 29046  019AFA  D006               	goto	l2360
 29047                           
 29048                           ; BSR set to: 1
 29049  019AFC  6D1D               	negf	___awdiv@dividend& (0+255),b
 29050  019AFE  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 29051  019B00  B0D8               	btfsc	status,0,c
 29052  019B02  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 29053                           
 29054                           ; BSR set to: 1
 29055  019B04  0E01               	movlw	1
 29056  019B06  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 29057  019B08                     l2360:
 29058                           
 29059                           ; BSR set to: 1
 29060                           
 29061                           ; BSR set to: 1
 29062  019B08  0E00               	movlw	0
 29063  019B0A  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 29064  019B0C  0E00               	movlw	0
 29065  019B0E  6F23               	movwf	___awdiv@quotient& (0+255),b
 29066                           
 29067                           ; BSR set to: 1
 29068  019B10  511F               	movf	___awdiv@divisor& (0+255),w,b
 29069  019B12  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 29070  019B14  B4D8               	btfsc	status,2,c
 29071  019B16  D01C               	goto	l2367
 29072                           
 29073                           ; BSR set to: 1
 29074  019B18  0E01               	movlw	1
 29075  019B1A  6F21               	movwf	___awdiv@counter& (0+255),b
 29076  019B1C  D004               	goto	l2362
 29077  019B1E                     
 29078                           ; BSR set to: 1
 29079                           
 29080                           ; BSR set to: 1
 29081  019B1E  90D8               	bcf	status,0,c
 29082  019B20  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 29083  019B22  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 29084  019B24  2B21               	incf	___awdiv@counter& (0+255),f,b
 29085  019B26                     l2362:
 29086                           
 29087                           ; BSR set to: 1
 29088                           
 29089                           ; BSR set to: 1
 29090  019B26  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 29091  019B28  D7FA               	goto	l2363
 29092  019B2A                     u17610:
 29093                           
 29094                           ; BSR set to: 1
 29095                           
 29096                           ; BSR set to: 1
 29097                           
 29098                           ; BSR set to: 1
 29099  019B2A  90D8               	bcf	status,0,c
 29100  019B2C  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 29101  019B2E  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 29102                           
 29103                           ; BSR set to: 1
 29104  019B30  511F               	movf	___awdiv@divisor& (0+255),w,b
 29105  019B32  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 29106  019B34  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 29107  019B36  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 29108  019B38  A0D8               	btfss	status,0,c
 29109  019B3A  D005               	goto	l2366
 29110                           
 29111                           ; BSR set to: 1
 29112  019B3C  511F               	movf	___awdiv@divisor& (0+255),w,b
 29113  019B3E  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 29114  019B40  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 29115  019B42  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 29116                           
 29117                           ; BSR set to: 1
 29118  019B44  8123               	bsf	___awdiv@quotient& (0+255),0,b
 29119  019B46                     l2366:
 29120                           
 29121                           ; BSR set to: 1
 29122                           
 29123                           ; BSR set to: 1
 29124  019B46  90D8               	bcf	status,0,c
 29125  019B48  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 29126  019B4A  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 29127                           
 29128                           ; BSR set to: 1
 29129  019B4C  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 29130  019B4E  D7ED               	goto	u17610
 29131  019B50                     l2367:
 29132                           
 29133                           ; BSR set to: 1
 29134                           
 29135                           ; BSR set to: 1
 29136                           
 29137                           ; BSR set to: 1
 29138  019B50  5122               	movf	___awdiv@sign& (0+255),w,b
 29139  019B52  B4D8               	btfsc	status,2,c
 29140  019B54  D004               	goto	l2368
 29141                           
 29142                           ; BSR set to: 1
 29143  019B56  6D23               	negf	___awdiv@quotient& (0+255),b
 29144  019B58  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 29145  019B5A  B0D8               	btfsc	status,0,c
 29146  019B5C  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 29147  019B5E                     l2368:
 29148                           
 29149                           ; BSR set to: 1
 29150                           
 29151                           ; BSR set to: 1
 29152  019B5E  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 29153  019B62  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 29154  019B66  0012               	return	
 29155  019B68                     __end_of___awdiv:
 29156                           	opt stack 0
 29157                           tosu	equ	0xFFF
 29158                           tosh	equ	0xFFE
 29159                           tosl	equ	0xFFD
 29160                           pclath	equ	0xFFA
 29161                           tblptru	equ	0xFF8
 29162                           tblptrh	equ	0xFF7
 29163                           tblptrl	equ	0xFF6
 29164                           tablat	equ	0xFF5
 29165                           prodh	equ	0xFF4
 29166                           prodl	equ	0xFF3
 29167                           intcon	equ	0xFF2
 29168                           indf0	equ	0xFEF
 29169                           postinc0	equ	0xFEE
 29170                           fsr0h	equ	0xFEA
 29171                           fsr0l	equ	0xFE9
 29172                           wreg	equ	0xFE8
 29173                           indf1	equ	0xFE7
 29174                           postdec1	equ	0xFE5
 29175                           plusw1	equ	0xFE3
 29176                           fsr1h	equ	0xFE2
 29177                           fsr1l	equ	0xFE1
 29178                           indf2	equ	0xFDF
 29179                           postinc2	equ	0xFDE
 29180                           postdec2	equ	0xFDD
 29181                           plusw2	equ	0xFDB
 29182                           fsr2h	equ	0xFDA
 29183                           fsr2l	equ	0xFD9
 29184                           status	equ	0xFD8
 29185                           
 29186 ;; *************** function __tdiv_to_l_ *****************
 29187 ;; Defined at:
 29188 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 29189 ;; Parameters:    Size  Location     Type
 29190 ;;  f1              3   23[BANK1 ] float 
 29191 ;;  f2              3   26[BANK1 ] float 
 29192 ;; Auto vars:     Size  Location     Type
 29193 ;;  quot            4   32[BANK1 ] unsigned long 
 29194 ;;  exp1            1   37[BANK1 ] unsigned char 
 29195 ;;  cntr            1   36[BANK1 ] unsigned char 
 29196 ;; Return value:  Size  Location     Type
 29197 ;;                  4   23[BANK1 ] unsigned long 
 29198 ;; Registers used:
 29199 ;;		wreg, status,2, status,0
 29200 ;; Tracked objects:
 29201 ;;		On entry : 0/0
 29202 ;;		On exit  : 0/0
 29203 ;;		Unchanged: 0/0
 29204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29205 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29206 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29207 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29208 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29209 ;;Total ram usage:       15 bytes
 29210 ;; Hardware stack levels used:    1
 29211 ;; Hardware stack levels required when called:   13
 29212 ;; This function calls:
 29213 ;;		Nothing
 29214 ;; This function is called by:
 29215 ;;		__doprnt
 29216 ;; This function uses a non-reentrant model
 29217 ;;
 29218                           
 29219                           	psect	text42
 29220  01861A                     __ptext42:
 29221                           	opt stack 0
 29222  01861A                     __tdiv_to_l_:
 29223                           	opt stack 13
 29224                           
 29225                           ; BSR set to: 1
 29226                           ;incstack = 0
 29227  01861A  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 29228  01861E  0101               	movlb	1	; () banked
 29229  018620  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29230  018622  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29231  018624  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29232  018626  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29233  018628  E301               	bnc	u18381
 29234  01862A  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29235  01862C                     u18381:
 29236  01862C  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 29237  01862E  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 29238  018630  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29239  018632  A4D8               	btfss	status,2,c
 29240  018634  D009               	goto	l2507
 29241                           
 29242                           ; BSR set to: 1
 29243  018636  0E00               	movlw	0
 29244  018638  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29245  01863A  0E00               	movlw	0
 29246  01863C  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29247  01863E  0E00               	movlw	0
 29248  018640  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29249  018642  0E00               	movlw	0
 29250  018644  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29251                           
 29252                           ; BSR set to: 1
 29253  018646  0012               	return	
 29254  018648                     l2507:
 29255                           
 29256                           ; BSR set to: 1
 29257                           
 29258                           ; BSR set to: 1
 29259  018648  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 29260  01864C  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29261  01864E  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29262  018650  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29263  018652  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29264  018654  E301               	bnc	u18401
 29265  018656  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29266  018658                     u18401:
 29267  018658  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 29268  01865A  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29269  01865C  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29270  01865E  A4D8               	btfss	status,2,c
 29271  018660  D009               	goto	l2509
 29272                           
 29273                           ; BSR set to: 1
 29274  018662  0E00               	movlw	0
 29275  018664  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29276  018666  0E00               	movlw	0
 29277  018668  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29278  01866A  0E00               	movlw	0
 29279  01866C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29280  01866E  0E00               	movlw	0
 29281  018670  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29282                           
 29283                           ; BSR set to: 1
 29284  018672  0012               	return	
 29285  018674                     l2509:
 29286                           
 29287                           ; BSR set to: 1
 29288                           
 29289                           ; BSR set to: 1
 29290  018674  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 29291                           
 29292                           ; BSR set to: 1
 29293  018676  0EFF               	movlw	255
 29294  018678  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 29295  01867A  0EFF               	movlw	255
 29296  01867C  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29297  01867E  0E00               	movlw	0
 29298  018680  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29299  018682  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 29300                           
 29301                           ; BSR set to: 1
 29302  018684  0EFF               	movlw	255
 29303  018686  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 29304  018688  0EFF               	movlw	255
 29305  01868A  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 29306  01868C  0E00               	movlw	0
 29307  01868E  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 29308                           
 29309                           ; BSR set to: 1
 29310  018690  0E00               	movlw	0
 29311  018692  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 29312  018694  0E00               	movlw	0
 29313  018696  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 29314  018698  0E00               	movlw	0
 29315  01869A  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 29316  01869C  0E00               	movlw	0
 29317  01869E  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 29318                           
 29319                           ; BSR set to: 1
 29320  0186A0  0E7F               	movlw	127
 29321  0186A2  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29322                           
 29323                           ; BSR set to: 1
 29324  0186A4  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29325  0186A6  0F98               	addlw	152
 29326  0186A8  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29327                           
 29328                           ; BSR set to: 1
 29329  0186AA  0E18               	movlw	24
 29330  0186AC  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29331  0186AE                     l2510:
 29332                           
 29333                           ; BSR set to: 1
 29334  0186AE  90D8               	bcf	status,0,c
 29335  0186B0  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29336  0186B2  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29337  0186B4  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29338  0186B6  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29339                           
 29340                           ; BSR set to: 1
 29341  0186B8  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29342  0186BA  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 29343  0186BC  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29344  0186BE  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29345  0186C0  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29346  0186C2  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 29347  0186C4  A0D8               	btfss	status,0,c
 29348  0186C6  D007               	goto	l2511
 29349                           
 29350                           ; BSR set to: 1
 29351  0186C8  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29352  0186CA  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 29353  0186CC  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29354  0186CE  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29355  0186D0  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29356  0186D2  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29357                           
 29358                           ; BSR set to: 1
 29359  0186D4  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 29360  0186D6                     l2511:
 29361                           
 29362                           ; BSR set to: 1
 29363  0186D6  90D8               	bcf	status,0,c
 29364  0186D8  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 29365  0186DA  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29366  0186DC  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29367                           
 29368                           ; BSR set to: 1
 29369  0186DE  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 29370  0186E0  D7E6               	goto	l2510
 29371                           
 29372                           ; BSR set to: 1
 29373                           
 29374                           ; BSR set to: 1
 29375  0186E2  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 29376  0186E4  D016               	goto	l2513
 29377                           
 29378                           ; BSR set to: 1
 29379  0186E6  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29380  0186E8  0A80               	xorlw	128
 29381  0186EA  0F97               	addlw	151
 29382  0186EC  B0D8               	btfsc	status,0,c
 29383  0186EE  D009               	goto	l2514
 29384                           
 29385                           ; BSR set to: 1
 29386  0186F0  0E00               	movlw	0
 29387  0186F2  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29388  0186F4  0E00               	movlw	0
 29389  0186F6  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29390  0186F8  0E00               	movlw	0
 29391  0186FA  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29392  0186FC  0E00               	movlw	0
 29393  0186FE  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29394                           
 29395                           ; BSR set to: 1
 29396  018700  0012               	return	
 29397  018702                     l2514:
 29398                           
 29399                           ; BSR set to: 1
 29400                           
 29401                           ; BSR set to: 1
 29402                           
 29403                           ; BSR set to: 1
 29404  018702  90D8               	bcf	status,0,c
 29405  018704  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29406  018706  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29407  018708  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29408  01870A  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 29409                           
 29410                           ; BSR set to: 1
 29411  01870C  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 29412  01870E  D7F9               	goto	l2514
 29413                           
 29414                           ; BSR set to: 1
 29415  018710  D015               	goto	u18460
 29416  018712                     l2513:
 29417                           
 29418                           ; BSR set to: 1
 29419                           
 29420                           ; BSR set to: 1
 29421  018712  0E17               	movlw	23
 29422  018714  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 29423  018716  D00F               	goto	l2519
 29424                           
 29425                           ; BSR set to: 1
 29426  018718  0E00               	movlw	0
 29427  01871A  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29428  01871C  0E00               	movlw	0
 29429  01871E  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29430  018720  0E00               	movlw	0
 29431  018722  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29432  018724  0E00               	movlw	0
 29433  018726  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29434                           
 29435                           ; BSR set to: 1
 29436  018728  0012               	return	
 29437  01872A                     
 29438                           ; BSR set to: 1
 29439                           
 29440                           ; BSR set to: 1
 29441  01872A  90D8               	bcf	status,0,c
 29442  01872C  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29443  01872E  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29444  018730  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29445  018732  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29446  018734  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 29447  018736                     l2519:
 29448                           
 29449                           ; BSR set to: 1
 29450                           
 29451                           ; BSR set to: 1
 29452  018736  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29453  018738  A4D8               	btfss	status,2,c
 29454  01873A  D7F7               	goto	l2520
 29455  01873C                     u18460:
 29456                           
 29457                           ; BSR set to: 1
 29458                           
 29459                           ; BSR set to: 1
 29460  01873C  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 29461  018740  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 29462  018744  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 29463  018748  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 29464                           
 29465                           ; BSR set to: 1
 29466  01874C  0012               	return		;funcret
 29467  01874E                     __end_of__tdiv_to_l_:
 29468                           	opt stack 0
 29469                           tosu	equ	0xFFF
 29470                           tosh	equ	0xFFE
 29471                           tosl	equ	0xFFD
 29472                           pclath	equ	0xFFA
 29473                           tblptru	equ	0xFF8
 29474                           tblptrh	equ	0xFF7
 29475                           tblptrl	equ	0xFF6
 29476                           tablat	equ	0xFF5
 29477                           prodh	equ	0xFF4
 29478                           prodl	equ	0xFF3
 29479                           intcon	equ	0xFF2
 29480                           indf0	equ	0xFEF
 29481                           postinc0	equ	0xFEE
 29482                           fsr0h	equ	0xFEA
 29483                           fsr0l	equ	0xFE9
 29484                           wreg	equ	0xFE8
 29485                           indf1	equ	0xFE7
 29486                           postdec1	equ	0xFE5
 29487                           plusw1	equ	0xFE3
 29488                           fsr1h	equ	0xFE2
 29489                           fsr1l	equ	0xFE1
 29490                           indf2	equ	0xFDF
 29491                           postinc2	equ	0xFDE
 29492                           postdec2	equ	0xFDD
 29493                           plusw2	equ	0xFDB
 29494                           fsr2h	equ	0xFDA
 29495                           fsr2l	equ	0xFD9
 29496                           status	equ	0xFD8
 29497                           
 29498 ;; *************** function __div_to_l_ *****************
 29499 ;; Defined at:
 29500 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 29501 ;; Parameters:    Size  Location     Type
 29502 ;;  f1              4   23[BANK1 ] unsigned long 
 29503 ;;  f2              4   27[BANK1 ] unsigned long 
 29504 ;; Auto vars:     Size  Location     Type
 29505 ;;  quot            4   31[BANK1 ] unsigned long 
 29506 ;;  exp1            1   36[BANK1 ] unsigned char 
 29507 ;;  cntr            1   35[BANK1 ] unsigned char 
 29508 ;; Return value:  Size  Location     Type
 29509 ;;                  4   23[BANK1 ] unsigned long 
 29510 ;; Registers used:
 29511 ;;		wreg, status,2, status,0
 29512 ;; Tracked objects:
 29513 ;;		On entry : 0/0
 29514 ;;		On exit  : 0/0
 29515 ;;		Unchanged: 0/0
 29516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29517 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29518 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29520 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29521 ;;Total ram usage:       14 bytes
 29522 ;; Hardware stack levels used:    1
 29523 ;; Hardware stack levels required when called:   13
 29524 ;; This function calls:
 29525 ;;		Nothing
 29526 ;; This function is called by:
 29527 ;;		__doprnt
 29528 ;; This function uses a non-reentrant model
 29529 ;;
 29530                           
 29531                           	psect	text43
 29532  018880                     __ptext43:
 29533                           	opt stack 0
 29534  018880                     __div_to_l_:
 29535                           	opt stack 13
 29536                           
 29537                           ; BSR set to: 1
 29538                           ;incstack = 0
 29539  018880  0101               	movlb	1	; () banked
 29540  018882  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 29541  018884  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 29542  018886  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 29543  018888  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 29544  01888A  A4D8               	btfss	status,2,c
 29545  01888C  D009               	goto	l2403
 29546                           
 29547                           ; BSR set to: 1
 29548  01888E  0E00               	movlw	0
 29549  018890  6F17               	movwf	?__div_to_l_& (0+255),b
 29550  018892  0E00               	movlw	0
 29551  018894  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29552  018896  0E00               	movlw	0
 29553  018898  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29554  01889A  0E00               	movlw	0
 29555  01889C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29556                           
 29557                           ; BSR set to: 1
 29558  01889E  0012               	return	
 29559  0188A0                     l2403:
 29560                           
 29561                           ; BSR set to: 1
 29562                           
 29563                           ; BSR set to: 1
 29564  0188A0  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 29565  0188A2  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 29566  0188A4  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 29567  0188A6  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 29568  0188A8  A4D8               	btfss	status,2,c
 29569  0188AA  D009               	goto	l2405
 29570                           
 29571                           ; BSR set to: 1
 29572  0188AC  0E00               	movlw	0
 29573  0188AE  6F17               	movwf	?__div_to_l_& (0+255),b
 29574  0188B0  0E00               	movlw	0
 29575  0188B2  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29576  0188B4  0E00               	movlw	0
 29577  0188B6  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29578  0188B8  0E00               	movlw	0
 29579  0188BA  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29580                           
 29581                           ; BSR set to: 1
 29582  0188BC  0012               	return	
 29583  0188BE                     l2405:
 29584                           
 29585                           ; BSR set to: 1
 29586                           
 29587                           ; BSR set to: 1
 29588  0188BE  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 29589                           
 29590                           ; BSR set to: 1
 29591  0188C0  0EFF               	movlw	255
 29592  0188C2  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 29593  0188C4  0EFF               	movlw	255
 29594  0188C6  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 29595  0188C8  0EFF               	movlw	255
 29596  0188CA  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 29597  0188CC  0E00               	movlw	0
 29598  0188CE  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 29599                           
 29600                           ; BSR set to: 1
 29601  0188D0  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 29602  0188D2  0EFF               	movlw	255
 29603  0188D4  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 29604  0188D6  0EFF               	movlw	255
 29605  0188D8  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 29606  0188DA  0EFF               	movlw	255
 29607  0188DC  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 29608  0188DE  0E00               	movlw	0
 29609  0188E0  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 29610                           
 29611                           ; BSR set to: 1
 29612  0188E2  0E00               	movlw	0
 29613  0188E4  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 29614  0188E6  0E00               	movlw	0
 29615  0188E8  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 29616  0188EA  0E00               	movlw	0
 29617  0188EC  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 29618  0188EE  0E00               	movlw	0
 29619  0188F0  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 29620                           
 29621                           ; BSR set to: 1
 29622  0188F2  0E7F               	movlw	127
 29623  0188F4  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 29624                           
 29625                           ; BSR set to: 1
 29626  0188F6  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 29627  0188F8  0FA0               	addlw	160
 29628  0188FA  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 29629                           
 29630                           ; BSR set to: 1
 29631  0188FC  0E20               	movlw	32
 29632  0188FE  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 29633  018900                     
 29634                           ; BSR set to: 1
 29635                           
 29636                           ; BSR set to: 1
 29637  018900  90D8               	bcf	status,0,c
 29638  018902  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29639  018904  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29640  018906  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29641  018908  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29642                           
 29643                           ; BSR set to: 1
 29644  01890A  511B               	movf	__div_to_l_@f2& (0+255),w,b
 29645  01890C  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 29646  01890E  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29647  018910  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 29648  018912  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29649  018914  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 29650  018916  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29651  018918  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 29652  01891A  A0D8               	btfss	status,0,c
 29653  01891C  D009               	goto	l2407
 29654                           
 29655                           ; BSR set to: 1
 29656  01891E  511B               	movf	__div_to_l_@f2& (0+255),w,b
 29657  018920  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 29658  018922  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29659  018924  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 29660  018926  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29661  018928  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 29662  01892A  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29663  01892C  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 29664                           
 29665                           ; BSR set to: 1
 29666  01892E  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 29667  018930                     l2407:
 29668                           
 29669                           ; BSR set to: 1
 29670                           
 29671                           ; BSR set to: 1
 29672  018930  90D8               	bcf	status,0,c
 29673  018932  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 29674  018934  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 29675  018936  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 29676  018938  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 29677                           
 29678                           ; BSR set to: 1
 29679  01893A  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 29680  01893C  D7E1               	goto	l2406
 29681                           
 29682                           ; BSR set to: 1
 29683                           
 29684                           ; BSR set to: 1
 29685  01893E  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 29686  018940  D016               	goto	l2409
 29687                           
 29688                           ; BSR set to: 1
 29689  018942  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 29690  018944  0A80               	xorlw	128
 29691  018946  0F9F               	addlw	159
 29692  018948  B0D8               	btfsc	status,0,c
 29693  01894A  D009               	goto	l2410
 29694                           
 29695                           ; BSR set to: 1
 29696  01894C  0E00               	movlw	0
 29697  01894E  6F17               	movwf	?__div_to_l_& (0+255),b
 29698  018950  0E00               	movlw	0
 29699  018952  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29700  018954  0E00               	movlw	0
 29701  018956  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29702  018958  0E00               	movlw	0
 29703  01895A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29704                           
 29705                           ; BSR set to: 1
 29706  01895C  0012               	return	
 29707  01895E                     l2410:
 29708                           
 29709                           ; BSR set to: 1
 29710                           
 29711                           ; BSR set to: 1
 29712                           
 29713                           ; BSR set to: 1
 29714  01895E  90D8               	bcf	status,0,c
 29715  018960  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 29716  018962  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 29717  018964  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 29718  018966  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 29719                           
 29720                           ; BSR set to: 1
 29721  018968  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 29722  01896A  D7F9               	goto	l2410
 29723                           
 29724                           ; BSR set to: 1
 29725  01896C  D015               	goto	u18530
 29726  01896E                     l2409:
 29727                           
 29728                           ; BSR set to: 1
 29729                           
 29730                           ; BSR set to: 1
 29731  01896E  0E1F               	movlw	31
 29732  018970  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 29733  018972  D00F               	goto	l2415
 29734                           
 29735                           ; BSR set to: 1
 29736  018974  0E00               	movlw	0
 29737  018976  6F17               	movwf	?__div_to_l_& (0+255),b
 29738  018978  0E00               	movlw	0
 29739  01897A  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29740  01897C  0E00               	movlw	0
 29741  01897E  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29742  018980  0E00               	movlw	0
 29743  018982  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29744                           
 29745                           ; BSR set to: 1
 29746  018984  0012               	return	
 29747  018986                     
 29748                           ; BSR set to: 1
 29749                           
 29750                           ; BSR set to: 1
 29751  018986  90D8               	bcf	status,0,c
 29752  018988  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29753  01898A  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29754  01898C  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29755  01898E  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29756  018990  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 29757  018992                     l2415:
 29758                           
 29759                           ; BSR set to: 1
 29760                           
 29761                           ; BSR set to: 1
 29762  018992  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 29763  018994  A4D8               	btfss	status,2,c
 29764  018996  D7F7               	goto	l2416
 29765  018998                     u18530:
 29766                           
 29767                           ; BSR set to: 1
 29768                           
 29769                           ; BSR set to: 1
 29770  018998  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 29771  01899C  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 29772  0189A0  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 29773  0189A4  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 29774                           
 29775                           ; BSR set to: 1
 29776  0189A8  0012               	return		;funcret
 29777  0189AA                     __end_of__div_to_l_:
 29778                           	opt stack 0
 29779                           tosu	equ	0xFFF
 29780                           tosh	equ	0xFFE
 29781                           tosl	equ	0xFFD
 29782                           pclath	equ	0xFFA
 29783                           tblptru	equ	0xFF8
 29784                           tblptrh	equ	0xFF7
 29785                           tblptrl	equ	0xFF6
 29786                           tablat	equ	0xFF5
 29787                           prodh	equ	0xFF4
 29788                           prodl	equ	0xFF3
 29789                           intcon	equ	0xFF2
 29790                           indf0	equ	0xFEF
 29791                           postinc0	equ	0xFEE
 29792                           fsr0h	equ	0xFEA
 29793                           fsr0l	equ	0xFE9
 29794                           wreg	equ	0xFE8
 29795                           indf1	equ	0xFE7
 29796                           postdec1	equ	0xFE5
 29797                           plusw1	equ	0xFE3
 29798                           fsr1h	equ	0xFE2
 29799                           fsr1l	equ	0xFE1
 29800                           indf2	equ	0xFDF
 29801                           postinc2	equ	0xFDE
 29802                           postdec2	equ	0xFDD
 29803                           plusw2	equ	0xFDB
 29804                           fsr2h	equ	0xFDA
 29805                           fsr2l	equ	0xFD9
 29806                           status	equ	0xFD8
 29807                           
 29808 ;; *************** function ___xxtofl *****************
 29809 ;; Defined at:
 29810 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 29811 ;; Parameters:    Size  Location     Type
 29812 ;;  sign            1    wreg     unsigned char 
 29813 ;;  val             4   23[BANK1 ] long 
 29814 ;; Auto vars:     Size  Location     Type
 29815 ;;  sign            1   31[BANK1 ] unsigned char 
 29816 ;;  arg             4   33[BANK1 ] unsigned long 
 29817 ;;  exp             1   32[BANK1 ] unsigned char 
 29818 ;; Return value:  Size  Location     Type
 29819 ;;                  4   23[BANK1 ] unsigned char 
 29820 ;; Registers used:
 29821 ;;		wreg, status,2, status,0
 29822 ;; Tracked objects:
 29823 ;;		On entry : 0/0
 29824 ;;		On exit  : 0/0
 29825 ;;		Unchanged: 0/0
 29826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29827 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29828 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29829 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29830 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29831 ;;Total ram usage:       14 bytes
 29832 ;; Hardware stack levels used:    1
 29833 ;; Hardware stack levels required when called:   13
 29834 ;; This function calls:
 29835 ;;		Nothing
 29836 ;; This function is called by:
 29837 ;;		_ringBufferLUT
 29838 ;;		__doprnt
 29839 ;; This function uses a non-reentrant model
 29840 ;;
 29841                           
 29842                           	psect	text44
 29843  018240                     __ptext44:
 29844                           	opt stack 0
 29845  018240                     ___xxtofl:
 29846                           	opt stack 13
 29847                           
 29848                           ; BSR set to: 1
 29849                           ;incstack = 0
 29850                           ;___xxtofl@sign stored from wreg
 29851  018240  0101               	movlb	1	; () banked
 29852  018242  6F1F               	movwf	___xxtofl@sign& (0+255),b
 29853  018244  0101               	movlb	1	; () banked
 29854  018246  511F               	movf	___xxtofl@sign& (0+255),w,b
 29855  018248  A4D8               	btfss	status,2,c
 29856                           
 29857                           ; BSR set to: 1
 29858  01824A  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 29859  01824C  D01A               	goto	l2931
 29860                           
 29861                           ; BSR set to: 1
 29862  01824E  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 29863  018252  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 29864  018256  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 29865  01825A  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 29866  01825E  1F1B               	comf	??___xxtofl& (0+255),f,b
 29867  018260  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 29868  018262  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 29869  018264  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 29870  018266  2B1B               	incf	??___xxtofl& (0+255),f,b
 29871  018268  0E00               	movlw	0
 29872  01826A  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 29873  01826C  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 29874  01826E  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 29875  018270  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 29876  018274  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 29877  018278  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 29878  01827C  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 29879  018280  D008               	goto	l2932
 29880  018282                     l2931:
 29881                           
 29882                           ; BSR set to: 1
 29883  018282  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 29884  018286  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 29885  01828A  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 29886  01828E  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 29887  018292                     l2932:
 29888                           
 29889                           ; BSR set to: 1
 29890                           
 29891                           ; BSR set to: 1
 29892  018292  5117               	movf	___xxtofl@val& (0+255),w,b
 29893  018294  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 29894  018296  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 29895  018298  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 29896  01829A  A4D8               	btfss	status,2,c
 29897  01829C  D009               	goto	l2933
 29898                           
 29899                           ; BSR set to: 1
 29900  01829E  0E00               	movlw	0
 29901  0182A0  6F17               	movwf	?___xxtofl& (0+255),b
 29902  0182A2  0E00               	movlw	0
 29903  0182A4  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 29904  0182A6  0E00               	movlw	0
 29905  0182A8  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 29906  0182AA  0E00               	movlw	0
 29907  0182AC  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 29908                           
 29909                           ; BSR set to: 1
 29910  0182AE  0012               	return	
 29911  0182B0                     l2933:
 29912                           
 29913                           ; BSR set to: 1
 29914                           
 29915                           ; BSR set to: 1
 29916  0182B0  0E96               	movlw	150
 29917  0182B2  6F20               	movwf	___xxtofl@exp& (0+255),b
 29918  0182B4  D006               	goto	l2935
 29919  0182B6                     
 29920                           ; BSR set to: 1
 29921                           
 29922                           ; BSR set to: 1
 29923  0182B6  2B20               	incf	___xxtofl@exp& (0+255),f,b
 29924  0182B8  90D8               	bcf	status,0,c
 29925  0182BA  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 29926  0182BC  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 29927  0182BE  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 29928  0182C0  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 29929  0182C2                     l2935:
 29930                           
 29931                           ; BSR set to: 1
 29932                           
 29933                           ; BSR set to: 1
 29934  0182C2  0E00               	movlw	0
 29935  0182C4  1521               	andwf	___xxtofl@arg& (0+255),w,b
 29936  0182C6  6F1B               	movwf	??___xxtofl& (0+255),b
 29937  0182C8  0E00               	movlw	0
 29938  0182CA  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 29939  0182CC  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 29940  0182CE  0E00               	movlw	0
 29941  0182D0  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 29942  0182D2  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 29943  0182D4  0EFE               	movlw	254
 29944  0182D6  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 29945  0182D8  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 29946  0182DA  511B               	movf	??___xxtofl& (0+255),w,b
 29947  0182DC  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 29948  0182DE  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 29949  0182E0  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 29950  0182E2  B4D8               	btfsc	status,2,c
 29951  0182E4  D00D               	goto	l2938
 29952  0182E6  D7E7               	goto	l2936
 29953  0182E8                     
 29954                           ; BSR set to: 1
 29955                           
 29956                           ; BSR set to: 1
 29957  0182E8  2B20               	incf	___xxtofl@exp& (0+255),f,b
 29958                           
 29959                           ; BSR set to: 1
 29960  0182EA  0E01               	movlw	1
 29961  0182EC  2721               	addwf	___xxtofl@arg& (0+255),f,b
 29962  0182EE  0E00               	movlw	0
 29963  0182F0  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 29964  0182F2  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 29965  0182F4  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 29966                           
 29967                           ; BSR set to: 1
 29968  0182F6  90D8               	bcf	status,0,c
 29969  0182F8  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 29970  0182FA  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 29971  0182FC  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 29972  0182FE  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 29973  018300                     l2938:
 29974                           
 29975                           ; BSR set to: 1
 29976  018300  0E00               	movlw	0
 29977  018302  1521               	andwf	___xxtofl@arg& (0+255),w,b
 29978  018304  6F1B               	movwf	??___xxtofl& (0+255),b
 29979  018306  0E00               	movlw	0
 29980  018308  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 29981  01830A  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 29982  01830C  0E00               	movlw	0
 29983  01830E  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 29984  018310  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 29985  018312  0EFF               	movlw	255
 29986  018314  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 29987  018316  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 29988  018318  511B               	movf	??___xxtofl& (0+255),w,b
 29989  01831A  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 29990  01831C  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 29991  01831E  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 29992  018320  B4D8               	btfsc	status,2,c
 29993  018322  D007               	goto	l2941
 29994  018324  D7E1               	goto	l2939
 29995  018326                     
 29996                           ; BSR set to: 1
 29997                           
 29998                           ; BSR set to: 1
 29999  018326  0720               	decf	___xxtofl@exp& (0+255),f,b
 30000  018328  90D8               	bcf	status,0,c
 30001  01832A  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 30002  01832C  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 30003  01832E  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 30004  018330  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 30005  018332                     l2941:
 30006                           
 30007                           ; BSR set to: 1
 30008                           
 30009                           ; BSR set to: 1
 30010  018332  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 30011  018334  D003               	goto	u18810
 30012                           
 30013                           ; BSR set to: 1
 30014  018336  0E02               	movlw	2
 30015  018338  6120               	cpfslt	___xxtofl@exp& (0+255),b
 30016  01833A  D7F5               	goto	l2942
 30017  01833C                     u18810:
 30018                           
 30019                           ; BSR set to: 1
 30020                           
 30021                           ; BSR set to: 1
 30022  01833C  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 30023  01833E  D008               	goto	l2946
 30024                           
 30025                           ; BSR set to: 1
 30026  018340  0EFF               	movlw	255
 30027  018342  1721               	andwf	___xxtofl@arg& (0+255),f,b
 30028  018344  0EFF               	movlw	255
 30029  018346  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 30030  018348  0E7F               	movlw	127
 30031  01834A  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 30032  01834C  0EFF               	movlw	255
 30033  01834E  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 30034  018350                     l2946:
 30035                           
 30036                           ; BSR set to: 1
 30037  018350  90D8               	bcf	status,0,c
 30038  018352  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 30039  018354  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 30040  018358  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 30041  01835A  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 30042  01835C  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 30043  01835E  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 30044  018362  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 30045  018364  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 30046  018366  6B1B               	clrf	??___xxtofl& (0+255),b
 30047  018368  511B               	movf	??___xxtofl& (0+255),w,b
 30048  01836A  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 30049  01836C  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 30050  01836E  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 30051  018370  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 30052  018372  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 30053  018374  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 30054  018376  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 30055                           
 30056                           ; BSR set to: 1
 30057  018378  511F               	movf	___xxtofl@sign& (0+255),w,b
 30058  01837A  A4D8               	btfss	status,2,c
 30059                           
 30060                           ; BSR set to: 1
 30061  01837C  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 30062  01837E  D001               	goto	l2947
 30063                           
 30064                           ; BSR set to: 1
 30065  018380  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 30066  018382                     l2947:
 30067                           
 30068                           ; BSR set to: 1
 30069                           
 30070                           ; BSR set to: 1
 30071  018382  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 30072  018386  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 30073  01838A  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 30074  01838E  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 30075  018392  0012               	return	
 30076  018394                     __end_of___xxtofl:
 30077                           	opt stack 0
 30078                           tosu	equ	0xFFF
 30079                           tosh	equ	0xFFE
 30080                           tosl	equ	0xFFD
 30081                           pclath	equ	0xFFA
 30082                           tblptru	equ	0xFF8
 30083                           tblptrh	equ	0xFF7
 30084                           tblptrl	equ	0xFF6
 30085                           tablat	equ	0xFF5
 30086                           prodh	equ	0xFF4
 30087                           prodl	equ	0xFF3
 30088                           intcon	equ	0xFF2
 30089                           indf0	equ	0xFEF
 30090                           postinc0	equ	0xFEE
 30091                           fsr0h	equ	0xFEA
 30092                           fsr0l	equ	0xFE9
 30093                           wreg	equ	0xFE8
 30094                           indf1	equ	0xFE7
 30095                           postdec1	equ	0xFE5
 30096                           plusw1	equ	0xFE3
 30097                           fsr1h	equ	0xFE2
 30098                           fsr1l	equ	0xFE1
 30099                           indf2	equ	0xFDF
 30100                           postinc2	equ	0xFDE
 30101                           postdec2	equ	0xFDD
 30102                           plusw2	equ	0xFDB
 30103                           fsr2h	equ	0xFDA
 30104                           fsr2l	equ	0xFD9
 30105                           status	equ	0xFD8
 30106                           
 30107 ;; *************** function ___wmul *****************
 30108 ;; Defined at:
 30109 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 30110 ;; Parameters:    Size  Location     Type
 30111 ;;  multiplier      2   23[BANK1 ] unsigned int 
 30112 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 30113 ;; Auto vars:     Size  Location     Type
 30114 ;;  product         2   27[BANK1 ] unsigned int 
 30115 ;; Return value:  Size  Location     Type
 30116 ;;                  2   23[BANK1 ] unsigned int 
 30117 ;; Registers used:
 30118 ;;		wreg, status,2, status,0, prodl, prodh
 30119 ;; Tracked objects:
 30120 ;;		On entry : 0/0
 30121 ;;		On exit  : 0/0
 30122 ;;		Unchanged: 0/0
 30123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30124 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30125 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30127 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30128 ;;Total ram usage:        6 bytes
 30129 ;; Hardware stack levels used:    1
 30130 ;; Hardware stack levels required when called:   13
 30131 ;; This function calls:
 30132 ;;		Nothing
 30133 ;; This function is called by:
 30134 ;;		_ringBufferLUT
 30135 ;;		__doprnt
 30136 ;;		_atoi
 30137 ;; This function uses a non-reentrant model
 30138 ;;
 30139                           
 30140                           	psect	text45
 30141  01AE70                     __ptext45:
 30142                           	opt stack 0
 30143  01AE70                     ___wmul:
 30144                           	opt stack 13
 30145                           
 30146                           ; BSR set to: 1
 30147                           ;incstack = 0
 30148  01AE70  0101               	movlb	1	; () banked
 30149  01AE72  5117               	movf	___wmul@multiplier& (0+255),w,b
 30150  01AE74  0319               	mulwf	___wmul@multiplicand& (0+255),b
 30151  01AE76  CFF3 F11B          	movff	prodl,___wmul@product
 30152  01AE7A  CFF4 F11C          	movff	prodh,___wmul@product+1
 30153  01AE7E  5117               	movf	___wmul@multiplier& (0+255),w,b
 30154  01AE80  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 30155  01AE82  50F3               	movf	prodl,w,c
 30156  01AE84  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 30157  01AE86  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 30158  01AE88  0319               	mulwf	___wmul@multiplicand& (0+255),b
 30159  01AE8A  50F3               	movf	prodl,w,c
 30160  01AE8C  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 30161                           
 30162                           ; BSR set to: 1
 30163  01AE8E  C11B  F117         	movff	___wmul@product,?___wmul
 30164  01AE92  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 30165  01AE96  0012               	return	
 30166  01AE98                     __end_of___wmul:
 30167                           	opt stack 0
 30168                           tosu	equ	0xFFF
 30169                           tosh	equ	0xFFE
 30170                           tosl	equ	0xFFD
 30171                           pclath	equ	0xFFA
 30172                           tblptru	equ	0xFF8
 30173                           tblptrh	equ	0xFF7
 30174                           tblptrl	equ	0xFF6
 30175                           tablat	equ	0xFF5
 30176                           prodh	equ	0xFF4
 30177                           prodl	equ	0xFF3
 30178                           intcon	equ	0xFF2
 30179                           indf0	equ	0xFEF
 30180                           postinc0	equ	0xFEE
 30181                           fsr0h	equ	0xFEA
 30182                           fsr0l	equ	0xFE9
 30183                           wreg	equ	0xFE8
 30184                           indf1	equ	0xFE7
 30185                           postdec1	equ	0xFE5
 30186                           plusw1	equ	0xFE3
 30187                           fsr1h	equ	0xFE2
 30188                           fsr1l	equ	0xFE1
 30189                           indf2	equ	0xFDF
 30190                           postinc2	equ	0xFDE
 30191                           postdec2	equ	0xFDD
 30192                           plusw2	equ	0xFDB
 30193                           fsr2h	equ	0xFDA
 30194                           fsr2l	equ	0xFD9
 30195                           status	equ	0xFD8
 30196                           
 30197 ;; *************** function ___llmod *****************
 30198 ;; Defined at:
 30199 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 30200 ;; Parameters:    Size  Location     Type
 30201 ;;  dividend        4   36[BANK1 ] unsigned long 
 30202 ;;  divisor         4   40[BANK1 ] unsigned long 
 30203 ;; Auto vars:     Size  Location     Type
 30204 ;;  counter         1   44[BANK1 ] unsigned char 
 30205 ;; Return value:  Size  Location     Type
 30206 ;;                  4   36[BANK1 ] unsigned long 
 30207 ;; Registers used:
 30208 ;;		wreg, status,2, status,0
 30209 ;; Tracked objects:
 30210 ;;		On entry : 0/0
 30211 ;;		On exit  : 0/0
 30212 ;;		Unchanged: 0/0
 30213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30214 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30215 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30217 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30218 ;;Total ram usage:        9 bytes
 30219 ;; Hardware stack levels used:    1
 30220 ;; Hardware stack levels required when called:   13
 30221 ;; This function calls:
 30222 ;;		Nothing
 30223 ;; This function is called by:
 30224 ;;		__doprnt
 30225 ;; This function uses a non-reentrant model
 30226 ;;
 30227                           
 30228                           	psect	text46
 30229  01A164                     __ptext46:
 30230                           	opt stack 0
 30231  01A164                     ___llmod:
 30232                           	opt stack 13
 30233                           
 30234                           ; BSR set to: 1
 30235                           ;incstack = 0
 30236  01A164  0101               	movlb	1	; () banked
 30237  01A166  5128               	movf	___llmod@divisor& (0+255),w,b
 30238  01A168  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 30239  01A16A  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 30240  01A16C  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 30241  01A16E  B4D8               	btfsc	status,2,c
 30242  01A170  D024               	goto	l2630
 30243                           
 30244                           ; BSR set to: 1
 30245  01A172  0E01               	movlw	1
 30246  01A174  6F2C               	movwf	___llmod@counter& (0+255),b
 30247  01A176  D006               	goto	l2625
 30248  01A178                     
 30249                           ; BSR set to: 1
 30250                           
 30251                           ; BSR set to: 1
 30252  01A178  90D8               	bcf	status,0,c
 30253  01A17A  3728               	rlcf	___llmod@divisor& (0+255),f,b
 30254  01A17C  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 30255  01A17E  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 30256  01A180  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 30257  01A182  2B2C               	incf	___llmod@counter& (0+255),f,b
 30258  01A184                     l2625:
 30259                           
 30260                           ; BSR set to: 1
 30261                           
 30262                           ; BSR set to: 1
 30263  01A184  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 30264  01A186  D7F8               	goto	l2626
 30265  01A188                     u18730:
 30266                           
 30267                           ; BSR set to: 1
 30268                           
 30269                           ; BSR set to: 1
 30270                           
 30271                           ; BSR set to: 1
 30272  01A188  5128               	movf	___llmod@divisor& (0+255),w,b
 30273  01A18A  5D24               	subwf	___llmod@dividend& (0+255),w,b
 30274  01A18C  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 30275  01A18E  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 30276  01A190  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 30277  01A192  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 30278  01A194  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 30279  01A196  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 30280  01A198  A0D8               	btfss	status,0,c
 30281  01A19A  D008               	goto	l2629
 30282                           
 30283                           ; BSR set to: 1
 30284  01A19C  5128               	movf	___llmod@divisor& (0+255),w,b
 30285  01A19E  5F24               	subwf	___llmod@dividend& (0+255),f,b
 30286  01A1A0  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 30287  01A1A2  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 30288  01A1A4  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 30289  01A1A6  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 30290  01A1A8  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 30291  01A1AA  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 30292  01A1AC                     l2629:
 30293                           
 30294                           ; BSR set to: 1
 30295                           
 30296                           ; BSR set to: 1
 30297  01A1AC  90D8               	bcf	status,0,c
 30298  01A1AE  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 30299  01A1B0  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 30300  01A1B2  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 30301  01A1B4  3328               	rrcf	___llmod@divisor& (0+255),f,b
 30302                           
 30303                           ; BSR set to: 1
 30304  01A1B6  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 30305  01A1B8  D7E7               	goto	u18730
 30306  01A1BA                     l2630:
 30307                           
 30308                           ; BSR set to: 1
 30309                           
 30310                           ; BSR set to: 1
 30311  01A1BA  C124  F124         	movff	___llmod@dividend,?___llmod
 30312  01A1BE  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 30313  01A1C2  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 30314  01A1C6  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 30315                           
 30316                           ; BSR set to: 1
 30317  01A1CA  0012               	return		;funcret
 30318  01A1CC                     __end_of___llmod:
 30319                           	opt stack 0
 30320                           tosu	equ	0xFFF
 30321                           tosh	equ	0xFFE
 30322                           tosl	equ	0xFFD
 30323                           pclath	equ	0xFFA
 30324                           tblptru	equ	0xFF8
 30325                           tblptrh	equ	0xFF7
 30326                           tblptrl	equ	0xFF6
 30327                           tablat	equ	0xFF5
 30328                           prodh	equ	0xFF4
 30329                           prodl	equ	0xFF3
 30330                           intcon	equ	0xFF2
 30331                           indf0	equ	0xFEF
 30332                           postinc0	equ	0xFEE
 30333                           fsr0h	equ	0xFEA
 30334                           fsr0l	equ	0xFE9
 30335                           wreg	equ	0xFE8
 30336                           indf1	equ	0xFE7
 30337                           postdec1	equ	0xFE5
 30338                           plusw1	equ	0xFE3
 30339                           fsr1h	equ	0xFE2
 30340                           fsr1l	equ	0xFE1
 30341                           indf2	equ	0xFDF
 30342                           postinc2	equ	0xFDE
 30343                           postdec2	equ	0xFDD
 30344                           plusw2	equ	0xFDB
 30345                           fsr2h	equ	0xFDA
 30346                           fsr2l	equ	0xFD9
 30347                           status	equ	0xFD8
 30348                           
 30349 ;; *************** function ___lldiv *****************
 30350 ;; Defined at:
 30351 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 30352 ;; Parameters:    Size  Location     Type
 30353 ;;  dividend        4   23[BANK1 ] unsigned long 
 30354 ;;  divisor         4   27[BANK1 ] unsigned long 
 30355 ;; Auto vars:     Size  Location     Type
 30356 ;;  quotient        4   31[BANK1 ] unsigned long 
 30357 ;;  counter         1   35[BANK1 ] unsigned char 
 30358 ;; Return value:  Size  Location     Type
 30359 ;;                  4   23[BANK1 ] unsigned long 
 30360 ;; Registers used:
 30361 ;;		wreg, status,2, status,0
 30362 ;; Tracked objects:
 30363 ;;		On entry : 0/0
 30364 ;;		On exit  : 0/0
 30365 ;;		Unchanged: 0/0
 30366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30367 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30368 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30370 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30371 ;;Total ram usage:       13 bytes
 30372 ;; Hardware stack levels used:    1
 30373 ;; Hardware stack levels required when called:   13
 30374 ;; This function calls:
 30375 ;;		Nothing
 30376 ;; This function is called by:
 30377 ;;		__doprnt
 30378 ;; This function uses a non-reentrant model
 30379 ;;
 30380                           
 30381                           	psect	text47
 30382  019B68                     __ptext47:
 30383                           	opt stack 0
 30384  019B68                     ___lldiv:
 30385                           	opt stack 13
 30386                           
 30387                           ; BSR set to: 1
 30388                           ;incstack = 0
 30389  019B68  0E00               	movlw	0
 30390  019B6A  0101               	movlb	1	; () banked
 30391  019B6C  6F1F               	movwf	___lldiv@quotient& (0+255),b
 30392  019B6E  0E00               	movlw	0
 30393  019B70  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 30394  019B72  0E00               	movlw	0
 30395  019B74  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 30396  019B76  0E00               	movlw	0
 30397  019B78  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 30398                           
 30399                           ; BSR set to: 1
 30400  019B7A  511B               	movf	___lldiv@divisor& (0+255),w,b
 30401  019B7C  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30402  019B7E  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30403  019B80  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30404  019B82  B4D8               	btfsc	status,2,c
 30405  019B84  D02A               	goto	l2620
 30406                           
 30407                           ; BSR set to: 1
 30408  019B86  0E01               	movlw	1
 30409  019B88  6F23               	movwf	___lldiv@counter& (0+255),b
 30410  019B8A  D006               	goto	l2615
 30411  019B8C                     
 30412                           ; BSR set to: 1
 30413                           
 30414                           ; BSR set to: 1
 30415  019B8C  90D8               	bcf	status,0,c
 30416  019B8E  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 30417  019B90  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30418  019B92  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30419  019B94  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30420  019B96  2B23               	incf	___lldiv@counter& (0+255),f,b
 30421  019B98                     l2615:
 30422                           
 30423                           ; BSR set to: 1
 30424                           
 30425                           ; BSR set to: 1
 30426  019B98  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30427  019B9A  D7F8               	goto	l2616
 30428  019B9C                     u18700:
 30429                           
 30430                           ; BSR set to: 1
 30431                           
 30432                           ; BSR set to: 1
 30433                           
 30434                           ; BSR set to: 1
 30435  019B9C  90D8               	bcf	status,0,c
 30436  019B9E  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 30437  019BA0  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30438  019BA2  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30439  019BA4  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30440                           
 30441                           ; BSR set to: 1
 30442  019BA6  511B               	movf	___lldiv@divisor& (0+255),w,b
 30443  019BA8  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 30444  019BAA  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30445  019BAC  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30446  019BAE  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30447  019BB0  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30448  019BB2  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30449  019BB4  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30450  019BB6  A0D8               	btfss	status,0,c
 30451  019BB8  D009               	goto	l2619
 30452                           
 30453                           ; BSR set to: 1
 30454  019BBA  511B               	movf	___lldiv@divisor& (0+255),w,b
 30455  019BBC  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 30456  019BBE  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30457  019BC0  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30458  019BC2  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30459  019BC4  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30460  019BC6  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30461  019BC8  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30462                           
 30463                           ; BSR set to: 1
 30464  019BCA  811F               	bsf	___lldiv@quotient& (0+255),0,b
 30465  019BCC                     l2619:
 30466                           
 30467                           ; BSR set to: 1
 30468                           
 30469                           ; BSR set to: 1
 30470  019BCC  90D8               	bcf	status,0,c
 30471  019BCE  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30472  019BD0  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30473  019BD2  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30474  019BD4  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 30475                           
 30476                           ; BSR set to: 1
 30477  019BD6  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 30478  019BD8  D7E1               	goto	u18700
 30479  019BDA                     l2620:
 30480                           
 30481                           ; BSR set to: 1
 30482                           
 30483                           ; BSR set to: 1
 30484  019BDA  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 30485  019BDE  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 30486  019BE2  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 30487  019BE6  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 30488                           
 30489                           ; BSR set to: 1
 30490  019BEA  0012               	return		;funcret
 30491  019BEC                     __end_of___lldiv:
 30492                           	opt stack 0
 30493                           tosu	equ	0xFFF
 30494                           tosh	equ	0xFFE
 30495                           tosl	equ	0xFFD
 30496                           pclath	equ	0xFFA
 30497                           tblptru	equ	0xFF8
 30498                           tblptrh	equ	0xFF7
 30499                           tblptrl	equ	0xFF6
 30500                           tablat	equ	0xFF5
 30501                           prodh	equ	0xFF4
 30502                           prodl	equ	0xFF3
 30503                           intcon	equ	0xFF2
 30504                           indf0	equ	0xFEF
 30505                           postinc0	equ	0xFEE
 30506                           fsr0h	equ	0xFEA
 30507                           fsr0l	equ	0xFE9
 30508                           wreg	equ	0xFE8
 30509                           indf1	equ	0xFE7
 30510                           postdec1	equ	0xFE5
 30511                           plusw1	equ	0xFE3
 30512                           fsr1h	equ	0xFE2
 30513                           fsr1l	equ	0xFE1
 30514                           indf2	equ	0xFDF
 30515                           postinc2	equ	0xFDE
 30516                           postdec2	equ	0xFDD
 30517                           plusw2	equ	0xFDB
 30518                           fsr2h	equ	0xFDA
 30519                           fsr2l	equ	0xFD9
 30520                           status	equ	0xFD8
 30521                           
 30522 ;; *************** function ___fltol *****************
 30523 ;; Defined at:
 30524 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 30525 ;; Parameters:    Size  Location     Type
 30526 ;;  f1              4  120[BANK1 ] unsigned long 
 30527 ;; Auto vars:     Size  Location     Type
 30528 ;;  exp1            1  129[BANK1 ] unsigned char 
 30529 ;;  sign1           1  128[BANK1 ] unsigned char 
 30530 ;; Return value:  Size  Location     Type
 30531 ;;                  4  120[BANK1 ] long 
 30532 ;; Registers used:
 30533 ;;		wreg, status,2, status,0
 30534 ;; Tracked objects:
 30535 ;;		On entry : 0/0
 30536 ;;		On exit  : 0/0
 30537 ;;		Unchanged: 0/0
 30538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30539 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30540 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30541 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30542 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30543 ;;Total ram usage:       10 bytes
 30544 ;; Hardware stack levels used:    1
 30545 ;; Hardware stack levels required when called:   13
 30546 ;; This function calls:
 30547 ;;		Nothing
 30548 ;; This function is called by:
 30549 ;;		__doprnt
 30550 ;;		_ftoa
 30551 ;; This function uses a non-reentrant model
 30552 ;;
 30553                           
 30554                           	psect	text48
 30555  019278                     __ptext48:
 30556                           	opt stack 0
 30557  019278                     ___fltol:
 30558                           	opt stack 13
 30559                           
 30560                           ; BSR set to: 1
 30561                           ;incstack = 0
 30562  019278  0101               	movlb	1	; () banked
 30563  01927A  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 30564  01927C  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 30565  01927E  6F81               	movwf	___fltol@exp1& (0+255),b
 30566  019280  5181               	movf	___fltol@exp1& (0+255),w,b
 30567  019282  A4D8               	btfss	status,2,c
 30568  019284  D009               	goto	l2450
 30569                           
 30570                           ; BSR set to: 1
 30571  019286  0E00               	movlw	0
 30572  019288  6F78               	movwf	?___fltol& (0+255),b
 30573  01928A  0E00               	movlw	0
 30574  01928C  6F79               	movwf	(?___fltol+1)& (0+255),b
 30575  01928E  0E00               	movlw	0
 30576  019290  6F7A               	movwf	(?___fltol+2)& (0+255),b
 30577  019292  0E00               	movlw	0
 30578  019294  6F7B               	movwf	(?___fltol+3)& (0+255),b
 30579                           
 30580                           ; BSR set to: 1
 30581  019296  0012               	return	
 30582  019298                     l2450:
 30583                           
 30584                           ; BSR set to: 1
 30585                           
 30586                           ; BSR set to: 1
 30587  019298  C178  F17C         	movff	___fltol@f1,??___fltol
 30588  01929C  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 30589  0192A0  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 30590  0192A4  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 30591  0192A8  0E20               	movlw	32
 30592  0192AA  D005               	goto	u18630
 30593  0192AC                     u18635:
 30594  0192AC  90D8               	bcf	status,0,c
 30595  0192AE  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 30596  0192B0  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 30597  0192B2  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 30598  0192B4  337C               	rrcf	??___fltol& (0+255),f,b
 30599  0192B6                     u18630:
 30600  0192B6  2EE8               	decfsz	wreg,f,c
 30601  0192B8  D7F9               	goto	u18635
 30602  0192BA  517C               	movf	??___fltol& (0+255),w,b
 30603  0192BC  6F80               	movwf	___fltol@sign1& (0+255),b
 30604                           
 30605                           ; BSR set to: 1
 30606  0192BE  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 30607                           
 30608                           ; BSR set to: 1
 30609  0192C0  0EFF               	movlw	255
 30610  0192C2  1778               	andwf	___fltol@f1& (0+255),f,b
 30611  0192C4  0EFF               	movlw	255
 30612  0192C6  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 30613  0192C8  0EFF               	movlw	255
 30614  0192CA  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 30615  0192CC  0E00               	movlw	0
 30616  0192CE  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 30617                           
 30618                           ; BSR set to: 1
 30619  0192D0  0E96               	movlw	150
 30620  0192D2  5F81               	subwf	___fltol@exp1& (0+255),f,b
 30621                           
 30622                           ; BSR set to: 1
 30623  0192D4  AF81               	btfss	___fltol@exp1& (0+255),7,b
 30624  0192D6  D016               	goto	l2452
 30625                           
 30626                           ; BSR set to: 1
 30627  0192D8  5181               	movf	___fltol@exp1& (0+255),w,b
 30628  0192DA  0A80               	xorlw	128
 30629  0192DC  0F97               	addlw	151
 30630  0192DE  B0D8               	btfsc	status,0,c
 30631  0192E0  D009               	goto	l2453
 30632                           
 30633                           ; BSR set to: 1
 30634  0192E2  0E00               	movlw	0
 30635  0192E4  6F78               	movwf	?___fltol& (0+255),b
 30636  0192E6  0E00               	movlw	0
 30637  0192E8  6F79               	movwf	(?___fltol+1)& (0+255),b
 30638  0192EA  0E00               	movlw	0
 30639  0192EC  6F7A               	movwf	(?___fltol+2)& (0+255),b
 30640  0192EE  0E00               	movlw	0
 30641  0192F0  6F7B               	movwf	(?___fltol+3)& (0+255),b
 30642                           
 30643                           ; BSR set to: 1
 30644  0192F2  0012               	return	
 30645  0192F4                     l2453:
 30646                           
 30647                           ; BSR set to: 1
 30648                           
 30649                           ; BSR set to: 1
 30650                           
 30651                           ; BSR set to: 1
 30652  0192F4  90D8               	bcf	status,0,c
 30653  0192F6  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 30654  0192F8  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 30655  0192FA  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 30656  0192FC  3378               	rrcf	___fltol@f1& (0+255),f,b
 30657                           
 30658                           ; BSR set to: 1
 30659  0192FE  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 30660  019300  D7F9               	goto	l2453
 30661                           
 30662                           ; BSR set to: 1
 30663  019302  D015               	goto	u18670
 30664  019304                     l2452:
 30665                           
 30666                           ; BSR set to: 1
 30667                           
 30668                           ; BSR set to: 1
 30669  019304  0E1F               	movlw	31
 30670  019306  6581               	cpfsgt	___fltol@exp1& (0+255),b
 30671  019308  D00F               	goto	l2458
 30672                           
 30673                           ; BSR set to: 1
 30674  01930A  0E00               	movlw	0
 30675  01930C  6F78               	movwf	?___fltol& (0+255),b
 30676  01930E  0E00               	movlw	0
 30677  019310  6F79               	movwf	(?___fltol+1)& (0+255),b
 30678  019312  0E00               	movlw	0
 30679  019314  6F7A               	movwf	(?___fltol+2)& (0+255),b
 30680  019316  0E00               	movlw	0
 30681  019318  6F7B               	movwf	(?___fltol+3)& (0+255),b
 30682                           
 30683                           ; BSR set to: 1
 30684  01931A  0012               	return	
 30685  01931C                     
 30686                           ; BSR set to: 1
 30687                           
 30688                           ; BSR set to: 1
 30689  01931C  90D8               	bcf	status,0,c
 30690  01931E  3778               	rlcf	___fltol@f1& (0+255),f,b
 30691  019320  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 30692  019322  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 30693  019324  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 30694  019326  0781               	decf	___fltol@exp1& (0+255),f,b
 30695  019328                     l2458:
 30696                           
 30697                           ; BSR set to: 1
 30698                           
 30699                           ; BSR set to: 1
 30700  019328  5181               	movf	___fltol@exp1& (0+255),w,b
 30701  01932A  A4D8               	btfss	status,2,c
 30702  01932C  D7F7               	goto	l2459
 30703  01932E                     u18670:
 30704                           
 30705                           ; BSR set to: 1
 30706                           
 30707                           ; BSR set to: 1
 30708                           
 30709                           ; BSR set to: 1
 30710  01932E  5180               	movf	___fltol@sign1& (0+255),w,b
 30711  019330  B4D8               	btfsc	status,2,c
 30712  019332  D008               	goto	l2461
 30713                           
 30714                           ; BSR set to: 1
 30715  019334  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 30716  019336  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 30717  019338  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 30718  01933A  6D78               	negf	___fltol@f1& (0+255),b
 30719  01933C  0E00               	movlw	0
 30720  01933E  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 30721  019340  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 30722  019342  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 30723  019344                     l2461:
 30724                           
 30725                           ; BSR set to: 1
 30726                           
 30727                           ; BSR set to: 1
 30728  019344  C178  F178         	movff	___fltol@f1,?___fltol
 30729  019348  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 30730  01934C  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 30731  019350  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 30732  019354  0012               	return	
 30733  019356                     __end_of___fltol:
 30734                           	opt stack 0
 30735                           tosu	equ	0xFFF
 30736                           tosh	equ	0xFFE
 30737                           tosl	equ	0xFFD
 30738                           pclath	equ	0xFFA
 30739                           tblptru	equ	0xFF8
 30740                           tblptrh	equ	0xFF7
 30741                           tblptrl	equ	0xFF6
 30742                           tablat	equ	0xFF5
 30743                           prodh	equ	0xFF4
 30744                           prodl	equ	0xFF3
 30745                           intcon	equ	0xFF2
 30746                           indf0	equ	0xFEF
 30747                           postinc0	equ	0xFEE
 30748                           fsr0h	equ	0xFEA
 30749                           fsr0l	equ	0xFE9
 30750                           wreg	equ	0xFE8
 30751                           indf1	equ	0xFE7
 30752                           postdec1	equ	0xFE5
 30753                           plusw1	equ	0xFE3
 30754                           fsr1h	equ	0xFE2
 30755                           fsr1l	equ	0xFE1
 30756                           indf2	equ	0xFDF
 30757                           postinc2	equ	0xFDE
 30758                           postdec2	equ	0xFDD
 30759                           plusw2	equ	0xFDB
 30760                           fsr2h	equ	0xFDA
 30761                           fsr2l	equ	0xFD9
 30762                           status	equ	0xFD8
 30763                           
 30764 ;; *************** function ___flsub *****************
 30765 ;; Defined at:
 30766 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 30767 ;; Parameters:    Size  Location     Type
 30768 ;;  b               4   61[BANK1 ] long 
 30769 ;;  a               4   65[BANK1 ] long 
 30770 ;; Auto vars:     Size  Location     Type
 30771 ;;		None
 30772 ;; Return value:  Size  Location     Type
 30773 ;;                  4   61[BANK1 ] long 
 30774 ;; Registers used:
 30775 ;;		wreg, status,2, status,0, cstack
 30776 ;; Tracked objects:
 30777 ;;		On entry : 0/0
 30778 ;;		On exit  : 0/0
 30779 ;;		Unchanged: 0/0
 30780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30781 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30784 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30785 ;;Total ram usage:        8 bytes
 30786 ;; Hardware stack levels used:    1
 30787 ;; Hardware stack levels required when called:   14
 30788 ;; This function calls:
 30789 ;;		___fladd
 30790 ;; This function is called by:
 30791 ;;		__doprnt
 30792 ;; This function uses a non-reentrant model
 30793 ;;
 30794                           
 30795                           	psect	text49
 30796  01A7AE                     __ptext49:
 30797                           	opt stack 0
 30798  01A7AE                     ___flsub:
 30799                           	opt stack 12
 30800                           
 30801                           ; BSR set to: 1
 30802                           ;incstack = 0
 30803  01A7AE  0E00               	movlw	0
 30804  01A7B0  0101               	movlb	1	; () banked
 30805  01A7B2  1B41               	xorwf	___flsub@a& (0+255),f,b
 30806  01A7B4  0E00               	movlw	0
 30807  01A7B6  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 30808  01A7B8  0E00               	movlw	0
 30809  01A7BA  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 30810  01A7BC  0E80               	movlw	128
 30811  01A7BE  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 30812                           
 30813                           ; BSR set to: 1
 30814  01A7C0  C13D  F129         	movff	___flsub@b,___fladd@b
 30815  01A7C4  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 30816  01A7C8  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 30817  01A7CC  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 30818  01A7D0  C141  F12D         	movff	___flsub@a,___fladd@a
 30819  01A7D4  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 30820  01A7D8  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 30821  01A7DC  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 30822  01A7E0  EC71  F0AF         	call	___fladd	;wreg free
 30823  01A7E4  C129  F13D         	movff	?___fladd,?___flsub
 30824  01A7E8  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 30825  01A7EC  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 30826  01A7F0  C12C  F140         	movff	?___fladd+3,?___flsub+3
 30827  01A7F4  0012               	return	
 30828  01A7F6                     __end_of___flsub:
 30829                           	opt stack 0
 30830                           tosu	equ	0xFFF
 30831                           tosh	equ	0xFFE
 30832                           tosl	equ	0xFFD
 30833                           pclath	equ	0xFFA
 30834                           tblptru	equ	0xFF8
 30835                           tblptrh	equ	0xFF7
 30836                           tblptrl	equ	0xFF6
 30837                           tablat	equ	0xFF5
 30838                           prodh	equ	0xFF4
 30839                           prodl	equ	0xFF3
 30840                           intcon	equ	0xFF2
 30841                           indf0	equ	0xFEF
 30842                           postinc0	equ	0xFEE
 30843                           fsr0h	equ	0xFEA
 30844                           fsr0l	equ	0xFE9
 30845                           wreg	equ	0xFE8
 30846                           indf1	equ	0xFE7
 30847                           postdec1	equ	0xFE5
 30848                           plusw1	equ	0xFE3
 30849                           fsr1h	equ	0xFE2
 30850                           fsr1l	equ	0xFE1
 30851                           indf2	equ	0xFDF
 30852                           postinc2	equ	0xFDE
 30853                           postdec2	equ	0xFDD
 30854                           plusw2	equ	0xFDB
 30855                           fsr2h	equ	0xFDA
 30856                           fsr2l	equ	0xFD9
 30857                           status	equ	0xFD8
 30858                           
 30859 ;; *************** function ___fladd *****************
 30860 ;; Defined at:
 30861 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 30862 ;; Parameters:    Size  Location     Type
 30863 ;;  b               4   41[BANK1 ] long 
 30864 ;;  a               4   45[BANK1 ] long 
 30865 ;; Auto vars:     Size  Location     Type
 30866 ;;  grs             1   60[BANK1 ] unsigned char 
 30867 ;;  bexp            1   59[BANK1 ] unsigned char 
 30868 ;;  aexp            1   58[BANK1 ] unsigned char 
 30869 ;;  signs           1   57[BANK1 ] unsigned char 
 30870 ;; Return value:  Size  Location     Type
 30871 ;;                  4   41[BANK1 ] unsigned char 
 30872 ;; Registers used:
 30873 ;;		wreg, status,2, status,0
 30874 ;; Tracked objects:
 30875 ;;		On entry : 0/0
 30876 ;;		On exit  : 0/0
 30877 ;;		Unchanged: 0/0
 30878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30879 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30880 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30881 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30882 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30883 ;;Total ram usage:       20 bytes
 30884 ;; Hardware stack levels used:    1
 30885 ;; Hardware stack levels required when called:   13
 30886 ;; This function calls:
 30887 ;;		Nothing
 30888 ;; This function is called by:
 30889 ;;		_ringBufferLUT
 30890 ;;		__doprnt
 30891 ;;		___flsub
 30892 ;; This function uses a non-reentrant model
 30893 ;;
 30894                           
 30895                           	psect	text50
 30896  015EE2                     __ptext50:
 30897                           	opt stack 0
 30898  015EE2                     ___fladd:
 30899                           	opt stack 12
 30900                           
 30901                           ;incstack = 0
 30902  015EE2  0101               	movlb	1	; () banked
 30903  015EE4  512C               	movf	(___fladd@b+3)& (0+255),w,b
 30904  015EE6  0B80               	andlw	128
 30905  015EE8  6F39               	movwf	___fladd@signs& (0+255),b
 30906  015EEA  512C               	movf	(___fladd@b+3)& (0+255),w,b
 30907  015EEC  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 30908  015EEE  6F3B               	movwf	___fladd@bexp& (0+255),b
 30909                           
 30910                           ; BSR set to: 1
 30911  015EF0  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 30912                           
 30913                           ; BSR set to: 1
 30914  015EF2  813B               	bsf	___fladd@bexp& (0+255),0,b
 30915                           
 30916                           ; BSR set to: 1
 30917                           
 30918                           ; BSR set to: 1
 30919  015EF4  513B               	movf	___fladd@bexp& (0+255),w,b
 30920  015EF6  B4D8               	btfsc	status,2,c
 30921  015EF8  D00D               	goto	l2731
 30922                           
 30923                           ; BSR set to: 1
 30924  015EFA  293B               	incf	___fladd@bexp& (0+255),w,b
 30925  015EFC  A4D8               	btfss	status,2,c
 30926  015EFE  D008               	goto	l2732
 30927                           
 30928                           ; BSR set to: 1
 30929  015F00  0E00               	movlw	0
 30930  015F02  6F29               	movwf	___fladd@b& (0+255),b
 30931  015F04  0E00               	movlw	0
 30932  015F06  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30933  015F08  0E00               	movlw	0
 30934  015F0A  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30935  015F0C  0E00               	movlw	0
 30936  015F0E  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30937  015F10                     l2732:
 30938                           
 30939                           ; BSR set to: 1
 30940                           
 30941                           ; BSR set to: 1
 30942  015F10  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 30943  015F12  D006               	goto	L6
 30944  015F14                     l2731:
 30945                           
 30946                           ; BSR set to: 1
 30947                           
 30948                           ; BSR set to: 1
 30949  015F14  0E00               	movlw	0
 30950  015F16  6F29               	movwf	___fladd@b& (0+255),b
 30951  015F18  0E00               	movlw	0
 30952  015F1A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30953  015F1C  0E00               	movlw	0
 30954  015F1E  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30955  015F20                     L6:
 30956  015F20  0E00               	movlw	0
 30957  015F22  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30958                           
 30959                           ; BSR set to: 1
 30960                           
 30961                           ; BSR set to: 1
 30962  015F24  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30963  015F26  0B80               	andlw	128
 30964  015F28  6F3A               	movwf	___fladd@aexp& (0+255),b
 30965                           
 30966                           ; BSR set to: 1
 30967  015F2A  5139               	movf	___fladd@signs& (0+255),w,b
 30968  015F2C  193A               	xorwf	___fladd@aexp& (0+255),w,b
 30969  015F2E  A4D8               	btfss	status,2,c
 30970                           
 30971                           ; BSR set to: 1
 30972  015F30  8D39               	bsf	___fladd@signs& (0+255),6,b
 30973                           
 30974                           ; BSR set to: 1
 30975                           
 30976                           ; BSR set to: 1
 30977  015F32  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30978  015F34  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 30979  015F36  6F3A               	movwf	___fladd@aexp& (0+255),b
 30980                           
 30981                           ; BSR set to: 1
 30982  015F38  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 30983                           
 30984                           ; BSR set to: 1
 30985  015F3A  813A               	bsf	___fladd@aexp& (0+255),0,b
 30986                           
 30987                           ; BSR set to: 1
 30988                           
 30989                           ; BSR set to: 1
 30990  015F3C  513A               	movf	___fladd@aexp& (0+255),w,b
 30991  015F3E  B4D8               	btfsc	status,2,c
 30992  015F40  D00D               	goto	l2736
 30993                           
 30994                           ; BSR set to: 1
 30995  015F42  293A               	incf	___fladd@aexp& (0+255),w,b
 30996  015F44  A4D8               	btfss	status,2,c
 30997  015F46  D008               	goto	l2737
 30998                           
 30999                           ; BSR set to: 1
 31000  015F48  0E00               	movlw	0
 31001  015F4A  6F2D               	movwf	___fladd@a& (0+255),b
 31002  015F4C  0E00               	movlw	0
 31003  015F4E  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 31004  015F50  0E00               	movlw	0
 31005  015F52  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 31006  015F54  0E00               	movlw	0
 31007  015F56  6F30               	movwf	(___fladd@a+3)& (0+255),b
 31008  015F58                     l2737:
 31009                           
 31010                           ; BSR set to: 1
 31011                           
 31012                           ; BSR set to: 1
 31013  015F58  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 31014  015F5A  D006               	goto	L7
 31015  015F5C                     l2736:
 31016                           
 31017                           ; BSR set to: 1
 31018                           
 31019                           ; BSR set to: 1
 31020  015F5C  0E00               	movlw	0
 31021  015F5E  6F2D               	movwf	___fladd@a& (0+255),b
 31022  015F60  0E00               	movlw	0
 31023  015F62  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 31024  015F64  0E00               	movlw	0
 31025  015F66  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 31026  015F68                     L7:
 31027  015F68  0E00               	movlw	0
 31028  015F6A  6F30               	movwf	(___fladd@a+3)& (0+255),b
 31029                           
 31030                           ; BSR set to: 1
 31031                           
 31032                           ; BSR set to: 1
 31033  015F6C  513B               	movf	___fladd@bexp& (0+255),w,b
 31034  015F6E  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 31035  015F70  B0D8               	btfsc	status,0,c
 31036  015F72  D022               	goto	l2739
 31037                           
 31038                           ; BSR set to: 1
 31039  015F74  AD39               	btfss	___fladd@signs& (0+255),6,b
 31040  015F76  D002               	goto	l2740
 31041                           
 31042                           ; BSR set to: 1
 31043  015F78  0E80               	movlw	128
 31044  015F7A  1B39               	xorwf	___fladd@signs& (0+255),f,b
 31045  015F7C                     l2740:
 31046                           
 31047                           ; BSR set to: 1
 31048                           
 31049                           ; BSR set to: 1
 31050  015F7C  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 31051                           
 31052                           ; BSR set to: 1
 31053  015F80  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 31054                           
 31055                           ; BSR set to: 1
 31056  015F84  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 31057                           
 31058                           ; BSR set to: 1
 31059  015F88  C129  F13C         	movff	___fladd@b,___fladd@grs
 31060                           
 31061                           ; BSR set to: 1
 31062  015F8C  C12D  F129         	movff	___fladd@a,___fladd@b
 31063                           
 31064                           ; BSR set to: 1
 31065  015F90  C13C  F12D         	movff	___fladd@grs,___fladd@a
 31066                           
 31067                           ; BSR set to: 1
 31068  015F94  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 31069                           
 31070                           ; BSR set to: 1
 31071  015F98  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 31072                           
 31073                           ; BSR set to: 1
 31074  015F9C  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 31075                           
 31076                           ; BSR set to: 1
 31077  015FA0  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 31078                           
 31079                           ; BSR set to: 1
 31080  015FA4  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 31081                           
 31082                           ; BSR set to: 1
 31083  015FA8  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 31084                           
 31085                           ; BSR set to: 1
 31086  015FAC  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 31087                           
 31088                           ; BSR set to: 1
 31089  015FB0  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 31090                           
 31091                           ; BSR set to: 1
 31092  015FB4  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 31093  015FB8                     l2739:
 31094                           
 31095                           ; BSR set to: 1
 31096                           
 31097                           ; BSR set to: 1
 31098  015FB8  0E00               	movlw	0
 31099  015FBA  6F3C               	movwf	___fladd@grs& (0+255),b
 31100                           
 31101                           ; BSR set to: 1
 31102  015FBC  513B               	movf	___fladd@bexp& (0+255),w,b
 31103  015FBE  6F31               	movwf	??___fladd& (0+255),b
 31104  015FC0  6B32               	clrf	(??___fladd+1)& (0+255),b
 31105  015FC2  1F31               	comf	??___fladd& (0+255),f,b
 31106  015FC4  1F32               	comf	(??___fladd+1)& (0+255),f,b
 31107  015FC6  4B31               	infsnz	??___fladd& (0+255),f,b
 31108  015FC8  2B32               	incf	(??___fladd+1)& (0+255),f,b
 31109  015FCA  513A               	movf	___fladd@aexp& (0+255),w,b
 31110  015FCC  6F33               	movwf	(??___fladd+2)& (0+255),b
 31111  015FCE  6B34               	clrf	(??___fladd+3)& (0+255),b
 31112  015FD0  5131               	movf	??___fladd& (0+255),w,b
 31113  015FD2  2733               	addwf	(??___fladd+2)& (0+255),f,b
 31114  015FD4  5132               	movf	(??___fladd+1)& (0+255),w,b
 31115  015FD6  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 31116  015FD8  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 31117  015FDA  D02C               	goto	l2743
 31118  015FDC  5134               	movf	(??___fladd+3)& (0+255),w,b
 31119  015FDE  E104               	bnz	u17090
 31120  015FE0  0E1A               	movlw	26
 31121  015FE2  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 31122  015FE4  A0D8               	btfss	status,0,c
 31123  015FE6  D026               	goto	l2743
 31124  015FE8                     u17090:
 31125                           
 31126                           ; BSR set to: 1
 31127  015FE8  5129               	movf	___fladd@b& (0+255),w,b
 31128  015FEA  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 31129  015FEC  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 31130  015FEE  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 31131  015FF0  B4D8               	btfsc	status,2,c
 31132  015FF2  D002               	goto	u17100
 31133  015FF4  0E01               	movlw	1
 31134  015FF6  D001               	goto	u17110
 31135  015FF8                     u17100:
 31136  015FF8  0E00               	movlw	0
 31137  015FFA                     u17110:
 31138  015FFA  6F3C               	movwf	___fladd@grs& (0+255),b
 31139                           
 31140                           ; BSR set to: 1
 31141  015FFC  0E00               	movlw	0
 31142  015FFE  6F29               	movwf	___fladd@b& (0+255),b
 31143  016000  0E00               	movlw	0
 31144  016002  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 31145  016004  0E00               	movlw	0
 31146  016006  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 31147  016008  0E00               	movlw	0
 31148  01600A  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 31149                           
 31150                           ; BSR set to: 1
 31151  01600C  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 31152  016010  D015               	goto	u17140
 31153  016012                     l2744:
 31154                           
 31155                           ; BSR set to: 1
 31156  016012  A13C               	btfss	___fladd@grs& (0+255),0,b
 31157  016014  D005               	goto	l2745
 31158                           
 31159                           ; BSR set to: 1
 31160  016016  90D8               	bcf	status,0,c
 31161  016018  313C               	rrcf	___fladd@grs& (0+255),w,b
 31162  01601A  0901               	iorlw	1
 31163  01601C  6F3C               	movwf	___fladd@grs& (0+255),b
 31164  01601E  D002               	goto	l2746
 31165  016020                     l2745:
 31166                           
 31167                           ; BSR set to: 1
 31168                           
 31169                           ; BSR set to: 1
 31170  016020  90D8               	bcf	status,0,c
 31171  016022  333C               	rrcf	___fladd@grs& (0+255),f,b
 31172  016024                     l2746:
 31173                           
 31174                           ; BSR set to: 1
 31175                           
 31176                           ; BSR set to: 1
 31177  016024  B129               	btfsc	___fladd@b& (0+255),0,b
 31178                           
 31179                           ; BSR set to: 1
 31180  016026  8F3C               	bsf	___fladd@grs& (0+255),7,b
 31181                           
 31182                           ; BSR set to: 1
 31183                           
 31184                           ; BSR set to: 1
 31185  016028  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 31186  01602A  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 31187  01602C  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 31188  01602E  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 31189  016030  3329               	rrcf	___fladd@b& (0+255),f,b
 31190                           
 31191                           ; BSR set to: 1
 31192  016032  2B3B               	incf	___fladd@bexp& (0+255),f,b
 31193  016034                     l2743:
 31194                           
 31195                           ; BSR set to: 1
 31196  016034  513A               	movf	___fladd@aexp& (0+255),w,b
 31197  016036  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 31198  016038  A0D8               	btfss	status,0,c
 31199  01603A  D7EB               	goto	l2744
 31200  01603C                     u17140:
 31201                           
 31202                           ; BSR set to: 1
 31203                           
 31204                           ; BSR set to: 1
 31205  01603C  BD39               	btfsc	___fladd@signs& (0+255),6,b
 31206  01603E  D029               	goto	l2749
 31207                           
 31208                           ; BSR set to: 1
 31209  016040  513B               	movf	___fladd@bexp& (0+255),w,b
 31210  016042  A4D8               	btfss	status,2,c
 31211  016044  D009               	goto	l2750
 31212                           
 31213                           ; BSR set to: 1
 31214  016046  0E00               	movlw	0
 31215  016048  6F29               	movwf	?___fladd& (0+255),b
 31216  01604A  0E00               	movlw	0
 31217  01604C  6F2A               	movwf	(?___fladd+1)& (0+255),b
 31218  01604E  0E00               	movlw	0
 31219  016050  6F2B               	movwf	(?___fladd+2)& (0+255),b
 31220  016052  0E00               	movlw	0
 31221  016054  6F2C               	movwf	(?___fladd+3)& (0+255),b
 31222                           
 31223                           ; BSR set to: 1
 31224  016056  0012               	return	
 31225  016058                     l2750:
 31226                           
 31227                           ; BSR set to: 1
 31228                           
 31229                           ; BSR set to: 1
 31230  016058  512D               	movf	___fladd@a& (0+255),w,b
 31231  01605A  2729               	addwf	___fladd@b& (0+255),f,b
 31232  01605C  512E               	movf	(___fladd@a+1)& (0+255),w,b
 31233  01605E  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 31234  016060  512F               	movf	(___fladd@a+2)& (0+255),w,b
 31235  016062  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 31236  016064  5130               	movf	(___fladd@a+3)& (0+255),w,b
 31237  016066  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 31238                           
 31239                           ; BSR set to: 1
 31240  016068  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 31241  01606A  D083               	goto	u17270
 31242                           
 31243                           ; BSR set to: 1
 31244  01606C  A13C               	btfss	___fladd@grs& (0+255),0,b
 31245  01606E  D006               	goto	l2753
 31246                           
 31247                           ; BSR set to: 1
 31248  016070  90D8               	bcf	status,0,c
 31249  016072  333C               	rrcf	___fladd@grs& (0+255),f,b
 31250  016074  513C               	movf	___fladd@grs& (0+255),w,b
 31251  016076  0901               	iorlw	1
 31252  016078  6F3C               	movwf	___fladd@grs& (0+255),b
 31253  01607A  D002               	goto	l2754
 31254  01607C                     l2753:
 31255                           
 31256                           ; BSR set to: 1
 31257                           
 31258                           ; BSR set to: 1
 31259  01607C  90D8               	bcf	status,0,c
 31260  01607E  333C               	rrcf	___fladd@grs& (0+255),f,b
 31261  016080                     l2754:
 31262                           
 31263                           ; BSR set to: 1
 31264                           
 31265                           ; BSR set to: 1
 31266  016080  B129               	btfsc	___fladd@b& (0+255),0,b
 31267                           
 31268                           ; BSR set to: 1
 31269  016082  8F3C               	bsf	___fladd@grs& (0+255),7,b
 31270                           
 31271                           ; BSR set to: 1
 31272                           
 31273                           ; BSR set to: 1
 31274  016084  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 31275  016086  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 31276  016088  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 31277  01608A  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 31278  01608C  3329               	rrcf	___fladd@b& (0+255),f,b
 31279                           
 31280                           ; BSR set to: 1
 31281  01608E  2B3B               	incf	___fladd@bexp& (0+255),f,b
 31282                           
 31283                           ; BSR set to: 1
 31284  016090  D070               	goto	u17270
 31285  016092                     l2749:
 31286                           
 31287                           ; BSR set to: 1
 31288                           
 31289                           ; BSR set to: 1
 31290  016092  512D               	movf	___fladd@a& (0+255),w,b
 31291  016094  5D29               	subwf	___fladd@b& (0+255),w,b
 31292  016096  512E               	movf	(___fladd@a+1)& (0+255),w,b
 31293  016098  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 31294  01609A  512F               	movf	(___fladd@a+2)& (0+255),w,b
 31295  01609C  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 31296  01609E  512C               	movf	(___fladd@b+3)& (0+255),w,b
 31297  0160A0  0A80               	xorlw	128
 31298  0160A2  6F31               	movwf	??___fladd& (0+255),b
 31299  0160A4  5130               	movf	(___fladd@a+3)& (0+255),w,b
 31300  0160A6  0A80               	xorlw	128
 31301  0160A8  5931               	subwfb	??___fladd& (0+255),w,b
 31302  0160AA  B0D8               	btfsc	status,0,c
 31303  0160AC  D036               	goto	l2757
 31304                           
 31305                           ; BSR set to: 1
 31306  0160AE  C129  F131         	movff	___fladd@b,??___fladd
 31307  0160B2  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 31308  0160B6  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 31309  0160BA  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 31310  0160BE  1F31               	comf	??___fladd& (0+255),f,b
 31311  0160C0  1F32               	comf	(??___fladd+1)& (0+255),f,b
 31312  0160C2  1F33               	comf	(??___fladd+2)& (0+255),f,b
 31313  0160C4  1F34               	comf	(??___fladd+3)& (0+255),f,b
 31314  0160C6  2B31               	incf	??___fladd& (0+255),f,b
 31315  0160C8  0E00               	movlw	0
 31316  0160CA  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 31317  0160CC  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 31318  0160CE  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 31319  0160D0  512D               	movf	___fladd@a& (0+255),w,b
 31320  0160D2  2531               	addwf	??___fladd& (0+255),w,b
 31321  0160D4  6F35               	movwf	(??___fladd+4)& (0+255),b
 31322  0160D6  512E               	movf	(___fladd@a+1)& (0+255),w,b
 31323  0160D8  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 31324  0160DA  6F36               	movwf	(??___fladd+5)& (0+255),b
 31325  0160DC  512F               	movf	(___fladd@a+2)& (0+255),w,b
 31326  0160DE  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 31327  0160E0  6F37               	movwf	(??___fladd+6)& (0+255),b
 31328  0160E2  5130               	movf	(___fladd@a+3)& (0+255),w,b
 31329  0160E4  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 31330  0160E6  6F38               	movwf	(??___fladd+7)& (0+255),b
 31331  0160E8  0EFF               	movlw	255
 31332  0160EA  2535               	addwf	(??___fladd+4)& (0+255),w,b
 31333  0160EC  6F29               	movwf	___fladd@b& (0+255),b
 31334  0160EE  0EFF               	movlw	255
 31335  0160F0  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 31336  0160F2  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 31337  0160F4  0EFF               	movlw	255
 31338  0160F6  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 31339  0160F8  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 31340  0160FA  0EFF               	movlw	255
 31341  0160FC  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 31342  0160FE  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 31343  016100  0E80               	movlw	128
 31344  016102  1B39               	xorwf	___fladd@signs& (0+255),f,b
 31345                           
 31346                           ; BSR set to: 1
 31347  016104  6D3C               	negf	___fladd@grs& (0+255),b
 31348                           
 31349                           ; BSR set to: 1
 31350  016106  513C               	movf	___fladd@grs& (0+255),w,b
 31351  016108  A4D8               	btfss	status,2,c
 31352  01610A  D00F               	goto	l2759
 31353                           
 31354                           ; BSR set to: 1
 31355  01610C  0E01               	movlw	1
 31356  01610E  2729               	addwf	___fladd@b& (0+255),f,b
 31357  016110  0E00               	movlw	0
 31358  016112  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 31359  016114  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 31360  016116  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 31361                           
 31362                           ; BSR set to: 1
 31363  016118  D008               	goto	l2759
 31364  01611A                     l2757:
 31365                           
 31366                           ; BSR set to: 1
 31367                           
 31368                           ; BSR set to: 1
 31369  01611A  512D               	movf	___fladd@a& (0+255),w,b
 31370  01611C  5F29               	subwf	___fladd@b& (0+255),f,b
 31371  01611E  512E               	movf	(___fladd@a+1)& (0+255),w,b
 31372  016120  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 31373  016122  512F               	movf	(___fladd@a+2)& (0+255),w,b
 31374  016124  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 31375  016126  5130               	movf	(___fladd@a+3)& (0+255),w,b
 31376  016128  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 31377  01612A                     l2759:
 31378                           
 31379                           ; BSR set to: 1
 31380  01612A  5129               	movf	___fladd@b& (0+255),w,b
 31381  01612C  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 31382  01612E  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 31383  016130  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 31384  016132  A4D8               	btfss	status,2,c
 31385  016134  D01C               	goto	l2766
 31386                           
 31387                           ; BSR set to: 1
 31388  016136  513C               	movf	___fladd@grs& (0+255),w,b
 31389  016138  A4D8               	btfss	status,2,c
 31390  01613A  D019               	goto	l2766
 31391                           
 31392                           ; BSR set to: 1
 31393  01613C  0E00               	movlw	0
 31394  01613E  6F29               	movwf	?___fladd& (0+255),b
 31395  016140  0E00               	movlw	0
 31396  016142  6F2A               	movwf	(?___fladd+1)& (0+255),b
 31397  016144  0E00               	movlw	0
 31398  016146  6F2B               	movwf	(?___fladd+2)& (0+255),b
 31399  016148  0E00               	movlw	0
 31400  01614A  6F2C               	movwf	(?___fladd+3)& (0+255),b
 31401                           
 31402                           ; BSR set to: 1
 31403  01614C  0012               	return	
 31404  01614E                     
 31405                           ; BSR set to: 1
 31406                           
 31407                           ; BSR set to: 1
 31408  01614E  90D8               	bcf	status,0,c
 31409  016150  3729               	rlcf	___fladd@b& (0+255),f,b
 31410  016152  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 31411  016154  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 31412  016156  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 31413                           
 31414                           ; BSR set to: 1
 31415  016158  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 31416                           
 31417                           ; BSR set to: 1
 31418  01615A  8129               	bsf	___fladd@b& (0+255),0,b
 31419                           
 31420                           ; BSR set to: 1
 31421                           
 31422                           ; BSR set to: 1
 31423  01615C  A13C               	btfss	___fladd@grs& (0+255),0,b
 31424  01615E  D002               	goto	l2764
 31425                           
 31426                           ; BSR set to: 1
 31427  016160  80D8               	bsf	status,0,c
 31428  016162  D001               	goto	L8
 31429  016164                     l2764:
 31430                           
 31431                           ; BSR set to: 1
 31432                           
 31433                           ; BSR set to: 1
 31434  016164  90D8               	bcf	status,0,c
 31435  016166                     L8:
 31436  016166  373C               	rlcf	___fladd@grs& (0+255),f,b
 31437                           
 31438                           ; BSR set to: 1
 31439                           
 31440                           ; BSR set to: 1
 31441  016168  513B               	movf	___fladd@bexp& (0+255),w,b
 31442  01616A  A4D8               	btfss	status,2,c
 31443                           
 31444                           ; BSR set to: 1
 31445  01616C  073B               	decf	___fladd@bexp& (0+255),f,b
 31446  01616E                     l2766:
 31447                           
 31448                           ; BSR set to: 1
 31449                           
 31450                           ; BSR set to: 1
 31451                           
 31452                           ; BSR set to: 1
 31453  01616E  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 31454  016170  D7EE               	goto	l2762
 31455  016172                     u17270:
 31456                           
 31457                           ; BSR set to: 1
 31458                           
 31459                           ; BSR set to: 1
 31460                           
 31461                           ; BSR set to: 1
 31462  016172  0E00               	movlw	0
 31463  016174  6F3A               	movwf	___fladd@aexp& (0+255),b
 31464                           
 31465                           ; BSR set to: 1
 31466  016176  AF3C               	btfss	___fladd@grs& (0+255),7,b
 31467  016178  D00A               	goto	l2771
 31468                           
 31469                           ; BSR set to: 1
 31470  01617A  C13C  F131         	movff	___fladd@grs,??___fladd
 31471  01617E  0E7F               	movlw	127
 31472  016180  1731               	andwf	??___fladd& (0+255),f,b
 31473  016182  A4D8               	btfss	status,2,c
 31474  016184  D002               	goto	u17300
 31475                           
 31476                           ; BSR set to: 1
 31477                           
 31478                           ; BSR set to: 1
 31479  016186  A129               	btfss	___fladd@b& (0+255),0,b
 31480  016188  D002               	goto	l2771
 31481  01618A                     u17300:
 31482                           
 31483                           ; BSR set to: 1
 31484  01618A  0E01               	movlw	1
 31485  01618C  6F3A               	movwf	___fladd@aexp& (0+255),b
 31486  01618E                     l2771:
 31487                           
 31488                           ; BSR set to: 1
 31489                           
 31490                           ; BSR set to: 1
 31491                           
 31492                           ; BSR set to: 1
 31493  01618E  513A               	movf	___fladd@aexp& (0+255),w,b
 31494  016190  B4D8               	btfsc	status,2,c
 31495  016192  D020               	goto	l2774
 31496                           
 31497                           ; BSR set to: 1
 31498  016194  0E01               	movlw	1
 31499  016196  2729               	addwf	___fladd@b& (0+255),f,b
 31500  016198  0E00               	movlw	0
 31501  01619A  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 31502  01619C  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 31503  01619E  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 31504                           
 31505                           ; BSR set to: 1
 31506  0161A0  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 31507  0161A2  D018               	goto	l2774
 31508                           
 31509                           ; BSR set to: 1
 31510  0161A4  C129  F131         	movff	___fladd@b,??___fladd
 31511  0161A8  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 31512  0161AC  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 31513  0161B0  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 31514  0161B4  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 31515  0161B6  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 31516  0161B8  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 31517  0161BA  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 31518  0161BC  3331               	rrcf	??___fladd& (0+255),f,b
 31519  0161BE  C131  F129         	movff	??___fladd,___fladd@b
 31520  0161C2  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 31521  0161C6  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 31522  0161CA  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 31523  0161CE  293B               	incf	___fladd@bexp& (0+255),w,b
 31524  0161D0  A4D8               	btfss	status,2,c
 31525                           
 31526                           ; BSR set to: 1
 31527  0161D2  2B3B               	incf	___fladd@bexp& (0+255),f,b
 31528  0161D4                     l2774:
 31529                           
 31530                           ; BSR set to: 1
 31531                           
 31532                           ; BSR set to: 1
 31533                           
 31534                           ; BSR set to: 1
 31535                           
 31536                           ; BSR set to: 1
 31537  0161D4  293B               	incf	___fladd@bexp& (0+255),w,b
 31538  0161D6  B4D8               	btfsc	status,2,c
 31539  0161D8  D003               	goto	u17350
 31540                           
 31541                           ; BSR set to: 1
 31542  0161DA  513B               	movf	___fladd@bexp& (0+255),w,b
 31543  0161DC  A4D8               	btfss	status,2,c
 31544  0161DE  D00D               	goto	l2778
 31545  0161E0                     u17350:
 31546                           
 31547                           ; BSR set to: 1
 31548                           
 31549                           ; BSR set to: 1
 31550  0161E0  0E00               	movlw	0
 31551  0161E2  6F29               	movwf	___fladd@b& (0+255),b
 31552  0161E4  0E00               	movlw	0
 31553  0161E6  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 31554  0161E8  0E00               	movlw	0
 31555  0161EA  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 31556  0161EC  0E00               	movlw	0
 31557  0161EE  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 31558  0161F0  513B               	movf	___fladd@bexp& (0+255),w,b
 31559  0161F2  A4D8               	btfss	status,2,c
 31560  0161F4  D002               	goto	l2778
 31561                           
 31562                           ; BSR set to: 1
 31563  0161F6  0E00               	movlw	0
 31564  0161F8  6F39               	movwf	___fladd@signs& (0+255),b
 31565  0161FA                     l2778:
 31566                           
 31567                           ; BSR set to: 1
 31568                           
 31569                           ; BSR set to: 1
 31570                           
 31571                           ; BSR set to: 1
 31572  0161FA  A13B               	btfss	___fladd@bexp& (0+255),0,b
 31573  0161FC  D002               	goto	l2779
 31574                           
 31575                           ; BSR set to: 1
 31576  0161FE  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 31577  016200  D001               	goto	l2780
 31578  016202                     l2779:
 31579                           
 31580                           ; BSR set to: 1
 31581                           
 31582                           ; BSR set to: 1
 31583  016202  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 31584  016204                     l2780:
 31585                           
 31586                           ; BSR set to: 1
 31587                           
 31588                           ; BSR set to: 1
 31589  016204  90D8               	bcf	status,0,c
 31590  016206  313B               	rrcf	___fladd@bexp& (0+255),w,b
 31591  016208  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 31592                           
 31593                           ; BSR set to: 1
 31594  01620A  BF39               	btfsc	___fladd@signs& (0+255),7,b
 31595                           
 31596                           ; BSR set to: 1
 31597  01620C  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 31598                           
 31599                           ; BSR set to: 1
 31600                           
 31601                           ; BSR set to: 1
 31602  01620E  C129  F129         	movff	___fladd@b,?___fladd
 31603  016212  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 31604  016216  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 31605  01621A  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 31606  01621E  0012               	return	
 31607  016220                     __end_of___fladd:
 31608                           	opt stack 0
 31609                           tosu	equ	0xFFF
 31610                           tosh	equ	0xFFE
 31611                           tosl	equ	0xFFD
 31612                           pclath	equ	0xFFA
 31613                           tblptru	equ	0xFF8
 31614                           tblptrh	equ	0xFF7
 31615                           tblptrl	equ	0xFF6
 31616                           tablat	equ	0xFF5
 31617                           prodh	equ	0xFF4
 31618                           prodl	equ	0xFF3
 31619                           intcon	equ	0xFF2
 31620                           indf0	equ	0xFEF
 31621                           postinc0	equ	0xFEE
 31622                           fsr0h	equ	0xFEA
 31623                           fsr0l	equ	0xFE9
 31624                           wreg	equ	0xFE8
 31625                           indf1	equ	0xFE7
 31626                           postdec1	equ	0xFE5
 31627                           plusw1	equ	0xFE3
 31628                           fsr1h	equ	0xFE2
 31629                           fsr1l	equ	0xFE1
 31630                           indf2	equ	0xFDF
 31631                           postinc2	equ	0xFDE
 31632                           postdec2	equ	0xFDD
 31633                           plusw2	equ	0xFDB
 31634                           fsr2h	equ	0xFDA
 31635                           fsr2l	equ	0xFD9
 31636                           status	equ	0xFD8
 31637                           
 31638 ;; *************** function ___flneg *****************
 31639 ;; Defined at:
 31640 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 31641 ;; Parameters:    Size  Location     Type
 31642 ;;  f1              4   37[BANK1 ] unsigned char 
 31643 ;; Auto vars:     Size  Location     Type
 31644 ;;		None
 31645 ;; Return value:  Size  Location     Type
 31646 ;;                  4   37[BANK1 ] unsigned char 
 31647 ;; Registers used:
 31648 ;;		wreg, status,2, status,0
 31649 ;; Tracked objects:
 31650 ;;		On entry : 0/0
 31651 ;;		On exit  : 0/0
 31652 ;;		Unchanged: 0/0
 31653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31654 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31657 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31658 ;;Total ram usage:        4 bytes
 31659 ;; Hardware stack levels used:    1
 31660 ;; Hardware stack levels required when called:   13
 31661 ;; This function calls:
 31662 ;;		Nothing
 31663 ;; This function is called by:
 31664 ;;		_ringBufferLUT
 31665 ;;		__doprnt
 31666 ;; This function uses a non-reentrant model
 31667 ;;
 31668                           
 31669                           	psect	text51
 31670  01ADB8                     __ptext51:
 31671                           	opt stack 0
 31672  01ADB8                     ___flneg:
 31673                           	opt stack 13
 31674                           
 31675                           ; BSR set to: 1
 31676                           ;incstack = 0
 31677  01ADB8  0101               	movlb	1	; () banked
 31678  01ADBA  5125               	movf	___flneg@f1& (0+255),w,b
 31679  01ADBC  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 31680  01ADBE  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 31681  01ADC0  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 31682  01ADC2  B4D8               	btfsc	status,2,c
 31683  01ADC4  D008               	goto	l2427
 31684                           
 31685                           ; BSR set to: 1
 31686  01ADC6  0E00               	movlw	0
 31687  01ADC8  1B25               	xorwf	___flneg@f1& (0+255),f,b
 31688  01ADCA  0E00               	movlw	0
 31689  01ADCC  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 31690  01ADCE  0E00               	movlw	0
 31691  01ADD0  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 31692  01ADD2  0E80               	movlw	128
 31693  01ADD4  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 31694  01ADD6                     l2427:
 31695                           
 31696                           ; BSR set to: 1
 31697                           
 31698                           ; BSR set to: 1
 31699  01ADD6  C125  F125         	movff	___flneg@f1,?___flneg
 31700  01ADDA  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 31701  01ADDE  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 31702  01ADE2  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 31703  01ADE6  0012               	return	
 31704  01ADE8                     __end_of___flneg:
 31705                           	opt stack 0
 31706                           tosu	equ	0xFFF
 31707                           tosh	equ	0xFFE
 31708                           tosl	equ	0xFFD
 31709                           pclath	equ	0xFFA
 31710                           tblptru	equ	0xFF8
 31711                           tblptrh	equ	0xFF7
 31712                           tblptrl	equ	0xFF6
 31713                           tablat	equ	0xFF5
 31714                           prodh	equ	0xFF4
 31715                           prodl	equ	0xFF3
 31716                           intcon	equ	0xFF2
 31717                           indf0	equ	0xFEF
 31718                           postinc0	equ	0xFEE
 31719                           fsr0h	equ	0xFEA
 31720                           fsr0l	equ	0xFE9
 31721                           wreg	equ	0xFE8
 31722                           indf1	equ	0xFE7
 31723                           postdec1	equ	0xFE5
 31724                           plusw1	equ	0xFE3
 31725                           fsr1h	equ	0xFE2
 31726                           fsr1l	equ	0xFE1
 31727                           indf2	equ	0xFDF
 31728                           postinc2	equ	0xFDE
 31729                           postdec2	equ	0xFDD
 31730                           plusw2	equ	0xFDB
 31731                           fsr2h	equ	0xFDA
 31732                           fsr2l	equ	0xFD9
 31733                           status	equ	0xFD8
 31734                           
 31735 ;; *************** function _strcpy *****************
 31736 ;; Defined at:
 31737 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 31738 ;; Parameters:    Size  Location     Type
 31739 ;;  to              2   23[BANK1 ] PTR unsigned char 
 31740 ;;		 -> OLED_RAM_Buffer(64), 
 31741 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 31742 ;;		 -> STR_5(14), STR_4(14), STR_3(10), STR_2(15), 
 31743 ;; Auto vars:     Size  Location     Type
 31744 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 31745 ;;		 -> OLED_RAM_Buffer(64), 
 31746 ;; Return value:  Size  Location     Type
 31747 ;;                  2   23[BANK1 ] PTR unsigned char 
 31748 ;; Registers used:
 31749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31750 ;; Tracked objects:
 31751 ;;		On entry : 0/0
 31752 ;;		On exit  : 0/0
 31753 ;;		Unchanged: 0/0
 31754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31755 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31756 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31758 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31759 ;;Total ram usage:        6 bytes
 31760 ;; Hardware stack levels used:    1
 31761 ;; Hardware stack levels required when called:   13
 31762 ;; This function calls:
 31763 ;;		Nothing
 31764 ;; This function is called by:
 31765 ;;		_main
 31766 ;; This function uses a non-reentrant model
 31767 ;;
 31768                           
 31769                           	psect	text52
 31770  01AC18                     __ptext52:
 31771                           	opt stack 0
 31772  01AC18                     _strcpy:
 31773                           	opt stack 17
 31774                           
 31775                           ; BSR set to: 1
 31776                           ;incstack = 0
 31777  01AC18  C117  F11B         	movff	strcpy@to,strcpy@cp
 31778  01AC1C  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 31779  01AC20  D005               	goto	l2894
 31780  01AC22  0101               	movlb	1	; () banked
 31781  01AC24  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 31782  01AC26  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 31783  01AC28  4B19               	infsnz	strcpy@from& (0+255),f,b
 31784  01AC2A  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 31785  01AC2C                     l2894:
 31786                           
 31787                           ; BSR set to: 1
 31788  01AC2C  C119  FFF6         	movff	strcpy@from,tblptrl
 31789  01AC30  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 31790  01AC34                     	if	0	;tblptru may be non-zero
 31791  01AC34                     	endif
 31792  01AC34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31793  01AC34  0E00               	movlw	low (__mediumconst shr (0+16))
 31794  01AC36  6EF8               	movwf	tblptru,c
 31795  01AC38                     	endif
 31796  01AC38  C11B  FFD9         	movff	strcpy@cp,fsr2l
 31797  01AC3C  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 31798  01AC40  0008               	tblrd		*
 31799  01AC42  CFF5 FFDF          	movff	tablat,indf2
 31800  01AC46  50DF               	movf	indf2,w,c
 31801  01AC48  B4D8               	btfsc	status,2,c
 31802  01AC4A  0012               	return	
 31803  01AC4C  D7EA               	goto	l2895
 31804  01AC4E                     __end_of_strcpy:
 31805                           	opt stack 0
 31806                           tosu	equ	0xFFF
 31807                           tosh	equ	0xFFE
 31808                           tosl	equ	0xFFD
 31809                           pclath	equ	0xFFA
 31810                           tblptru	equ	0xFF8
 31811                           tblptrh	equ	0xFF7
 31812                           tblptrl	equ	0xFF6
 31813                           tablat	equ	0xFF5
 31814                           prodh	equ	0xFF4
 31815                           prodl	equ	0xFF3
 31816                           intcon	equ	0xFF2
 31817                           indf0	equ	0xFEF
 31818                           postinc0	equ	0xFEE
 31819                           fsr0h	equ	0xFEA
 31820                           fsr0l	equ	0xFE9
 31821                           wreg	equ	0xFE8
 31822                           indf1	equ	0xFE7
 31823                           postdec1	equ	0xFE5
 31824                           plusw1	equ	0xFE3
 31825                           fsr1h	equ	0xFE2
 31826                           fsr1l	equ	0xFE1
 31827                           indf2	equ	0xFDF
 31828                           postinc2	equ	0xFDE
 31829                           postdec2	equ	0xFDD
 31830                           plusw2	equ	0xFDB
 31831                           fsr2h	equ	0xFDA
 31832                           fsr2l	equ	0xFD9
 31833                           status	equ	0xFD8
 31834                           
 31835 ;; *************** function _saveSRAMMaxToEEPROM *****************
 31836 ;; Defined at:
 31837 ;;		line 155 in file "main.c"
 31838 ;; Parameters:    Size  Location     Type
 31839 ;;		None
 31840 ;; Auto vars:     Size  Location     Type
 31841 ;;		None
 31842 ;; Return value:  Size  Location     Type
 31843 ;;                  1    wreg      void 
 31844 ;; Registers used:
 31845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31846 ;; Tracked objects:
 31847 ;;		On entry : 0/0
 31848 ;;		On exit  : 0/0
 31849 ;;		Unchanged: 0/0
 31850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31855 ;;Total ram usage:        0 bytes
 31856 ;; Hardware stack levels used:    1
 31857 ;; Hardware stack levels required when called:   15
 31858 ;; This function calls:
 31859 ;;		___flge
 31860 ;;		_writeDoubleToEEPROM
 31861 ;; This function is called by:
 31862 ;;		_main
 31863 ;; This function uses a non-reentrant model
 31864 ;;
 31865                           
 31866                           	psect	text53
 31867  017902                     __ptext53:
 31868                           	opt stack 0
 31869  017902                     _saveSRAMMaxToEEPROM:
 31870                           	opt stack 15
 31871                           
 31872                           ;main.c: 159: if (Irms > max_Irms) {
 31873                           
 31874                           ;incstack = 0
 31875  017902  C224  F117         	movff	_max_Irms,___flge@ff1	;volatile
 31876  017906  C225  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
 31877  01790A  C226  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
 31878  01790E  C227  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
 31879  017912  C1CA  F11B         	movff	_Irms,___flge@ff2	;volatile
 31880  017916  C1CB  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
 31881  01791A  C1CC  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
 31882  01791E  C1CD  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
 31883  017922  EC8E  F0C6         	call	___flge	;wreg free
 31884  017926  0101               	movlb	1	; () banked
 31885  017928  B0D8               	btfsc	status,0,c
 31886  01792A  D01E               	goto	l1174
 31887                           
 31888                           ; BSR set to: 1
 31889                           ;main.c: 160: writeDoubleToEEPROM(Irms, max_Irms_address);
 31890  01792C  C1CA  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
 31891  017930  C1CB  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
 31892  017934  C1CC  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
 31893  017938  C1CD  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
 31894  01793C  0E5D               	movlw	low _max_Irms_address
 31895  01793E  6EF6               	movwf	tblptrl,c
 31896  017940                     	if	1	;There is more than 1 active tblptr byte
 31897  017940  0ECF               	movlw	high _max_Irms_address
 31898  017942  6EF7               	movwf	tblptrh,c
 31899  017944                     	endif
 31900  017944                     	if	1	;There are 3 active tblptr bytes
 31901  017944  0E00               	movlw	low (_max_Irms_address shr (0+16))
 31902  017946  6EF8               	movwf	tblptru,c
 31903  017948                     	endif
 31904  017948  0009               	tblrd		*+
 31905  01794A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31906  01794E  000A               	tblrd		*-
 31907  017950  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31908  017954  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 31909                           
 31910                           ;main.c: 161: max_Irms = Irms;
 31911  017958  C1CA  F224         	movff	_Irms,_max_Irms	;volatile
 31912  01795C  C1CB  F225         	movff	_Irms+1,_max_Irms+1	;volatile
 31913  017960  C1CC  F226         	movff	_Irms+2,_max_Irms+2	;volatile
 31914  017964  C1CD  F227         	movff	_Irms+3,_max_Irms+3	;volatile
 31915  017968                     l1174:
 31916                           
 31917                           ;main.c: 162: }
 31918                           ;main.c: 164: if (Avg_Power > max_Power) {
 31919  017968  C220  F117         	movff	_max_Power,___flge@ff1	;volatile
 31920  01796C  C221  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
 31921  017970  C222  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
 31922  017974  C223  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
 31923  017978  C1C6  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
 31924  01797C  C1C7  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
 31925  017980  C1C8  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
 31926  017984  C1C9  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
 31927  017988  EC8E  F0C6         	call	___flge	;wreg free
 31928  01798C  0101               	movlb	1	; () banked
 31929  01798E  B0D8               	btfsc	status,0,c
 31930  017990  D01E               	goto	l1175
 31931                           
 31932                           ; BSR set to: 1
 31933                           ;main.c: 165: writeDoubleToEEPROM(Avg_Power, max_Power_address);
 31934  017992  C1C6  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
 31935  017996  C1C7  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
 31936  01799A  C1C8  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
 31937  01799E  C1C9  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
 31938  0179A2  0E5B               	movlw	low _max_Power_address
 31939  0179A4  6EF6               	movwf	tblptrl,c
 31940  0179A6                     	if	1	;There is more than 1 active tblptr byte
 31941  0179A6  0ECF               	movlw	high _max_Power_address
 31942  0179A8  6EF7               	movwf	tblptrh,c
 31943  0179AA                     	endif
 31944  0179AA                     	if	1	;There are 3 active tblptr bytes
 31945  0179AA  0E00               	movlw	low (_max_Power_address shr (0+16))
 31946  0179AC  6EF8               	movwf	tblptru,c
 31947  0179AE                     	endif
 31948  0179AE  0009               	tblrd		*+
 31949  0179B0  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31950  0179B4  000A               	tblrd		*-
 31951  0179B6  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31952  0179BA  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 31953                           
 31954                           ;main.c: 166: max_Power = Avg_Power;
 31955  0179BE  C1C6  F220         	movff	_Avg_Power,_max_Power	;volatile
 31956  0179C2  C1C7  F221         	movff	_Avg_Power+1,_max_Power+1	;volatile
 31957  0179C6  C1C8  F222         	movff	_Avg_Power+2,_max_Power+2	;volatile
 31958  0179CA  C1C9  F223         	movff	_Avg_Power+3,_max_Power+3	;volatile
 31959  0179CE                     l1175:
 31960                           
 31961                           ;main.c: 167: }
 31962                           ;main.c: 169: if (POS3P3_ADC_Result > max_POS3P3_ADC_Result) {
 31963  0179CE  C21C  F117         	movff	_max_POS3P3_ADC_Result,___flge@ff1	;volatile
 31964  0179D2  C21D  F118         	movff	_max_POS3P3_ADC_Result+1,___flge@ff1+1	;volatile
 31965  0179D6  C21E  F119         	movff	_max_POS3P3_ADC_Result+2,___flge@ff1+2	;volatile
 31966  0179DA  C21F  F11A         	movff	_max_POS3P3_ADC_Result+3,___flge@ff1+3	;volatile
 31967  0179DE  C1DA  F11B         	movff	_POS3P3_ADC_Result,___flge@ff2	;volatile
 31968  0179E2  C1DB  F11C         	movff	_POS3P3_ADC_Result+1,___flge@ff2+1	;volatile
 31969  0179E6  C1DC  F11D         	movff	_POS3P3_ADC_Result+2,___flge@ff2+2	;volatile
 31970  0179EA  C1DD  F11E         	movff	_POS3P3_ADC_Result+3,___flge@ff2+3	;volatile
 31971  0179EE  EC8E  F0C6         	call	___flge	;wreg free
 31972  0179F2  0101               	movlb	1	; () banked
 31973  0179F4  B0D8               	btfsc	status,0,c
 31974  0179F6  D01E               	goto	l1176
 31975                           
 31976                           ; BSR set to: 1
 31977                           ;main.c: 170: writeDoubleToEEPROM(POS3P3_ADC_Result, max_POS3P3_ADC_Result_address);
 31978  0179F8  C1DA  F11B         	movff	_POS3P3_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31979  0179FC  C1DB  F11C         	movff	_POS3P3_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31980  017A00  C1DC  F11D         	movff	_POS3P3_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31981  017A04  C1DD  F11E         	movff	_POS3P3_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31982  017A08  0E59               	movlw	low _max_POS3P3_ADC_Result_address
 31983  017A0A  6EF6               	movwf	tblptrl,c
 31984  017A0C                     	if	1	;There is more than 1 active tblptr byte
 31985  017A0C  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 31986  017A0E  6EF7               	movwf	tblptrh,c
 31987  017A10                     	endif
 31988  017A10                     	if	1	;There are 3 active tblptr bytes
 31989  017A10  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 31990  017A12  6EF8               	movwf	tblptru,c
 31991  017A14                     	endif
 31992  017A14  0009               	tblrd		*+
 31993  017A16  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31994  017A1A  000A               	tblrd		*-
 31995  017A1C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31996  017A20  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 31997                           
 31998                           ;main.c: 171: max_POS3P3_ADC_Result = POS3P3_ADC_Result;
 31999  017A24  C1DA  F21C         	movff	_POS3P3_ADC_Result,_max_POS3P3_ADC_Result	;volatile
 32000  017A28  C1DB  F21D         	movff	_POS3P3_ADC_Result+1,_max_POS3P3_ADC_Result+1	;volatile
 32001  017A2C  C1DC  F21E         	movff	_POS3P3_ADC_Result+2,_max_POS3P3_ADC_Result+2	;volatile
 32002  017A30  C1DD  F21F         	movff	_POS3P3_ADC_Result+3,_max_POS3P3_ADC_Result+3	;volatile
 32003  017A34                     l1176:
 32004                           
 32005                           ;main.c: 172: }
 32006                           ;main.c: 174: if (POS12_ADC_Result > max_POS12_ADC_Result) {
 32007  017A34  C218  F117         	movff	_max_POS12_ADC_Result,___flge@ff1	;volatile
 32008  017A38  C219  F118         	movff	_max_POS12_ADC_Result+1,___flge@ff1+1	;volatile
 32009  017A3C  C21A  F119         	movff	_max_POS12_ADC_Result+2,___flge@ff1+2	;volatile
 32010  017A40  C21B  F11A         	movff	_max_POS12_ADC_Result+3,___flge@ff1+3	;volatile
 32011  017A44  C1D6  F11B         	movff	_POS12_ADC_Result,___flge@ff2	;volatile
 32012  017A48  C1D7  F11C         	movff	_POS12_ADC_Result+1,___flge@ff2+1	;volatile
 32013  017A4C  C1D8  F11D         	movff	_POS12_ADC_Result+2,___flge@ff2+2	;volatile
 32014  017A50  C1D9  F11E         	movff	_POS12_ADC_Result+3,___flge@ff2+3	;volatile
 32015  017A54  EC8E  F0C6         	call	___flge	;wreg free
 32016  017A58  0101               	movlb	1	; () banked
 32017  017A5A  B0D8               	btfsc	status,0,c
 32018  017A5C  D01E               	goto	l1177
 32019                           
 32020                           ; BSR set to: 1
 32021                           ;main.c: 175: writeDoubleToEEPROM(POS12_ADC_Result, max_POS12_ADC_Result_address);
 32022  017A5E  C1D6  F11B         	movff	_POS12_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 32023  017A62  C1D7  F11C         	movff	_POS12_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 32024  017A66  C1D8  F11D         	movff	_POS12_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 32025  017A6A  C1D9  F11E         	movff	_POS12_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 32026  017A6E  0E57               	movlw	low _max_POS12_ADC_Result_address
 32027  017A70  6EF6               	movwf	tblptrl,c
 32028  017A72                     	if	1	;There is more than 1 active tblptr byte
 32029  017A72  0ECF               	movlw	high _max_POS12_ADC_Result_address
 32030  017A74  6EF7               	movwf	tblptrh,c
 32031  017A76                     	endif
 32032  017A76                     	if	1	;There are 3 active tblptr bytes
 32033  017A76  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 32034  017A78  6EF8               	movwf	tblptru,c
 32035  017A7A                     	endif
 32036  017A7A  0009               	tblrd		*+
 32037  017A7C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 32038  017A80  000A               	tblrd		*-
 32039  017A82  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 32040  017A86  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 32041                           
 32042                           ;main.c: 176: max_POS12_ADC_Result = POS12_ADC_Result;
 32043  017A8A  C1D6  F218         	movff	_POS12_ADC_Result,_max_POS12_ADC_Result	;volatile
 32044  017A8E  C1D7  F219         	movff	_POS12_ADC_Result+1,_max_POS12_ADC_Result+1	;volatile
 32045  017A92  C1D8  F21A         	movff	_POS12_ADC_Result+2,_max_POS12_ADC_Result+2	;volatile
 32046  017A96  C1D9  F21B         	movff	_POS12_ADC_Result+3,_max_POS12_ADC_Result+3	;volatile
 32047  017A9A                     l1177:
 32048                           
 32049                           ;main.c: 177: }
 32050                           ;main.c: 179: if (Temp_ADC_Result > max_Temp_ADC_Result) {
 32051  017A9A  C214  F117         	movff	_max_Temp_ADC_Result,___flge@ff1	;volatile
 32052  017A9E  C215  F118         	movff	_max_Temp_ADC_Result+1,___flge@ff1+1	;volatile
 32053  017AA2  C216  F119         	movff	_max_Temp_ADC_Result+2,___flge@ff1+2	;volatile
 32054  017AA6  C217  F11A         	movff	_max_Temp_ADC_Result+3,___flge@ff1+3	;volatile
 32055  017AAA  C1D2  F11B         	movff	_Temp_ADC_Result,___flge@ff2	;volatile
 32056  017AAE  C1D3  F11C         	movff	_Temp_ADC_Result+1,___flge@ff2+1	;volatile
 32057  017AB2  C1D4  F11D         	movff	_Temp_ADC_Result+2,___flge@ff2+2	;volatile
 32058  017AB6  C1D5  F11E         	movff	_Temp_ADC_Result+3,___flge@ff2+3	;volatile
 32059  017ABA  EC8E  F0C6         	call	___flge	;wreg free
 32060  017ABE  0101               	movlb	1	; () banked
 32061  017AC0  B0D8               	btfsc	status,0,c
 32062  017AC2  D01E               	goto	l1178
 32063                           
 32064                           ; BSR set to: 1
 32065                           ;main.c: 180: writeDoubleToEEPROM(Temp_ADC_Result, max_Temp_ADC_Result_address);
 32066  017AC4  C1D2  F11B         	movff	_Temp_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 32067  017AC8  C1D3  F11C         	movff	_Temp_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 32068  017ACC  C1D4  F11D         	movff	_Temp_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 32069  017AD0  C1D5  F11E         	movff	_Temp_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 32070  017AD4  0E55               	movlw	low _max_Temp_ADC_Result_address
 32071  017AD6  6EF6               	movwf	tblptrl,c
 32072  017AD8                     	if	1	;There is more than 1 active tblptr byte
 32073  017AD8  0ECF               	movlw	high _max_Temp_ADC_Result_address
 32074  017ADA  6EF7               	movwf	tblptrh,c
 32075  017ADC                     	endif
 32076  017ADC                     	if	1	;There are 3 active tblptr bytes
 32077  017ADC  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 32078  017ADE  6EF8               	movwf	tblptru,c
 32079  017AE0                     	endif
 32080  017AE0  0009               	tblrd		*+
 32081  017AE2  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 32082  017AE6  000A               	tblrd		*-
 32083  017AE8  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 32084  017AEC  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 32085                           
 32086                           ;main.c: 181: max_Temp_ADC_Result = Temp_ADC_Result;
 32087  017AF0  C1D2  F214         	movff	_Temp_ADC_Result,_max_Temp_ADC_Result	;volatile
 32088  017AF4  C1D3  F215         	movff	_Temp_ADC_Result+1,_max_Temp_ADC_Result+1	;volatile
 32089  017AF8  C1D4  F216         	movff	_Temp_ADC_Result+2,_max_Temp_ADC_Result+2	;volatile
 32090  017AFC  C1D5  F217         	movff	_Temp_ADC_Result+3,_max_Temp_ADC_Result+3	;volatile
 32091  017B00                     l1178:
 32092                           
 32093                           ;main.c: 182: }
 32094                           ;main.c: 184: if (FVR_ADC_Result > max_FVR_ADC_Result) {
 32095  017B00  C210  F117         	movff	_max_FVR_ADC_Result,___flge@ff1	;volatile
 32096  017B04  C211  F118         	movff	_max_FVR_ADC_Result+1,___flge@ff1+1	;volatile
 32097  017B08  C212  F119         	movff	_max_FVR_ADC_Result+2,___flge@ff1+2	;volatile
 32098  017B0C  C213  F11A         	movff	_max_FVR_ADC_Result+3,___flge@ff1+3	;volatile
 32099  017B10  C1E2  F11B         	movff	_FVR_ADC_Result,___flge@ff2	;volatile
 32100  017B14  C1E3  F11C         	movff	_FVR_ADC_Result+1,___flge@ff2+1	;volatile
 32101  017B18  C1E4  F11D         	movff	_FVR_ADC_Result+2,___flge@ff2+2	;volatile
 32102  017B1C  C1E5  F11E         	movff	_FVR_ADC_Result+3,___flge@ff2+3	;volatile
 32103  017B20  EC8E  F0C6         	call	___flge	;wreg free
 32104  017B24  0101               	movlb	1	; () banked
 32105  017B26  B0D8               	btfsc	status,0,c
 32106  017B28  0012               	return	
 32107                           
 32108                           ; BSR set to: 1
 32109                           ;main.c: 185: writeDoubleToEEPROM(FVR_ADC_Result, max_FVR_ADC_Result_address);
 32110  017B2A  C1E2  F11B         	movff	_FVR_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 32111  017B2E  C1E3  F11C         	movff	_FVR_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 32112  017B32  C1E4  F11D         	movff	_FVR_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 32113  017B36  C1E5  F11E         	movff	_FVR_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 32114  017B3A  0E53               	movlw	low _max_FVR_ADC_Result_address
 32115  017B3C  6EF6               	movwf	tblptrl,c
 32116  017B3E                     	if	1	;There is more than 1 active tblptr byte
 32117  017B3E  0ECF               	movlw	high _max_FVR_ADC_Result_address
 32118  017B40  6EF7               	movwf	tblptrh,c
 32119  017B42                     	endif
 32120  017B42                     	if	1	;There are 3 active tblptr bytes
 32121  017B42  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 32122  017B44  6EF8               	movwf	tblptru,c
 32123  017B46                     	endif
 32124  017B46  0009               	tblrd		*+
 32125  017B48  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 32126  017B4C  000A               	tblrd		*-
 32127  017B4E  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 32128  017B52  EC79  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 32129                           
 32130                           ;main.c: 186: max_FVR_ADC_Result = FVR_ADC_Result;
 32131  017B56  C1E2  F210         	movff	_FVR_ADC_Result,_max_FVR_ADC_Result	;volatile
 32132  017B5A  C1E3  F211         	movff	_FVR_ADC_Result+1,_max_FVR_ADC_Result+1	;volatile
 32133  017B5E  C1E4  F212         	movff	_FVR_ADC_Result+2,_max_FVR_ADC_Result+2	;volatile
 32134  017B62  C1E5  F213         	movff	_FVR_ADC_Result+3,_max_FVR_ADC_Result+3	;volatile
 32135  017B66  0012               	return	
 32136  017B68                     __end_of_saveSRAMMaxToEEPROM:
 32137                           	opt stack 0
 32138                           tosu	equ	0xFFF
 32139                           tosh	equ	0xFFE
 32140                           tosl	equ	0xFFD
 32141                           pclath	equ	0xFFA
 32142                           tblptru	equ	0xFF8
 32143                           tblptrh	equ	0xFF7
 32144                           tblptrl	equ	0xFF6
 32145                           tablat	equ	0xFF5
 32146                           prodh	equ	0xFF4
 32147                           prodl	equ	0xFF3
 32148                           intcon	equ	0xFF2
 32149                           indf0	equ	0xFEF
 32150                           postinc0	equ	0xFEE
 32151                           fsr0h	equ	0xFEA
 32152                           fsr0l	equ	0xFE9
 32153                           wreg	equ	0xFE8
 32154                           indf1	equ	0xFE7
 32155                           postdec1	equ	0xFE5
 32156                           plusw1	equ	0xFE3
 32157                           fsr1h	equ	0xFE2
 32158                           fsr1l	equ	0xFE1
 32159                           indf2	equ	0xFDF
 32160                           postinc2	equ	0xFDE
 32161                           postdec2	equ	0xFDD
 32162                           plusw2	equ	0xFDB
 32163                           fsr2h	equ	0xFDA
 32164                           fsr2l	equ	0xFD9
 32165                           status	equ	0xFD8
 32166                           
 32167 ;; *************** function _writeDoubleToEEPROM *****************
 32168 ;; Defined at:
 32169 ;;		line 6 in file "double_to_EEPROM.c"
 32170 ;; Parameters:    Size  Location     Type
 32171 ;;  input_double    4   27[BANK1 ] void 
 32172 ;;  starting_add    2   31[BANK1 ] unsigned int 
 32173 ;; Auto vars:     Size  Location     Type
 32174 ;;  byte_index      2   37[BANK1 ] int 
 32175 ;;  input_data      4   33[BANK1 ] struct .
 32176 ;; Return value:  Size  Location     Type
 32177 ;;                  1    wreg      void 
 32178 ;; Registers used:
 32179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32180 ;; Tracked objects:
 32181 ;;		On entry : 0/0
 32182 ;;		On exit  : 0/0
 32183 ;;		Unchanged: 0/0
 32184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32185 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32186 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32188 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32189 ;;Total ram usage:       12 bytes
 32190 ;; Hardware stack levels used:    1
 32191 ;; Hardware stack levels required when called:   14
 32192 ;; This function calls:
 32193 ;;		_DATAEE_WriteByte
 32194 ;; This function is called by:
 32195 ;;		_saveSRAMMaxToEEPROM
 32196 ;;		_ringBufferLUT
 32197 ;; This function uses a non-reentrant model
 32198 ;;
 32199                           
 32200                           	psect	text54
 32201  01A4F2                     __ptext54:
 32202                           	opt stack 0
 32203  01A4F2                     _writeDoubleToEEPROM:
 32204                           	opt stack 14
 32205                           
 32206                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 32207                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 32208                           
 32209                           ;incstack = 0
 32210  01A4F2  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 32211  01A4F6  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 32212  01A4FA  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 32213  01A4FE  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 32214                           
 32215                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 32216  01A502  0E00               	movlw	0
 32217  01A504  0101               	movlb	1	; () banked
 32218  01A506  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 32219  01A508  0E00               	movlw	0
 32220  01A50A  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 32221  01A50C                     l16289:
 32222                           
 32223                           ; BSR set to: 1
 32224  01A50C  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 32225  01A50E  E118               	bnz	l1654
 32226  01A510  0E04               	movlw	4
 32227  01A512  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 32228  01A514  B0D8               	btfsc	status,0,c
 32229  01A516  0012               	return	
 32230                           
 32231                           ; BSR set to: 1
 32232                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 32233                           
 32234                           ; BSR set to: 1
 32235                           
 32236                           ; BSR set to: 1
 32237  01A518  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 32238  01A51A  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 32239  01A51C  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 32240  01A51E  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 32241  01A520  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 32242  01A522  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 32243  01A524  0E21               	movlw	low writeDoubleToEEPROM@input_data
 32244  01A526  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 32245  01A528  6ED9               	movwf	fsr2l,c
 32246  01A52A  0E01               	movlw	high writeDoubleToEEPROM@input_data
 32247  01A52C  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 32248  01A52E  6EDA               	movwf	fsr2h,c
 32249  01A530  50DF               	movf	indf2,w,c
 32250  01A532  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
 32251  01A534  ECE5  F0D4         	call	_DATAEE_WriteByte	;wreg free
 32252  01A538  0101               	movlb	1	; () banked
 32253  01A53A  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 32254  01A53C  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 32255  01A53E  D7E6               	goto	l16289
 32256  01A540                     l1654:
 32257                           
 32258                           ; BSR set to: 1
 32259  01A540  0012               	return		;funcret
 32260  01A542                     __end_of_writeDoubleToEEPROM:
 32261                           	opt stack 0
 32262                           tosu	equ	0xFFF
 32263                           tosh	equ	0xFFE
 32264                           tosl	equ	0xFFD
 32265                           pclath	equ	0xFFA
 32266                           tblptru	equ	0xFF8
 32267                           tblptrh	equ	0xFF7
 32268                           tblptrl	equ	0xFF6
 32269                           tablat	equ	0xFF5
 32270                           prodh	equ	0xFF4
 32271                           prodl	equ	0xFF3
 32272                           intcon	equ	0xFF2
 32273                           indf0	equ	0xFEF
 32274                           postinc0	equ	0xFEE
 32275                           fsr0h	equ	0xFEA
 32276                           fsr0l	equ	0xFE9
 32277                           wreg	equ	0xFE8
 32278                           indf1	equ	0xFE7
 32279                           postdec1	equ	0xFE5
 32280                           plusw1	equ	0xFE3
 32281                           fsr1h	equ	0xFE2
 32282                           fsr1l	equ	0xFE1
 32283                           indf2	equ	0xFDF
 32284                           postinc2	equ	0xFDE
 32285                           postdec2	equ	0xFDD
 32286                           plusw2	equ	0xFDB
 32287                           fsr2h	equ	0xFDA
 32288                           fsr2l	equ	0xFD9
 32289                           status	equ	0xFD8
 32290                           
 32291 ;; *************** function _DATAEE_WriteByte *****************
 32292 ;; Defined at:
 32293 ;;		line 168 in file "mcc_generated_files/memory.c"
 32294 ;; Parameters:    Size  Location     Type
 32295 ;;  bAdd            2   23[BANK1 ] unsigned int 
 32296 ;;  bData           1   25[BANK1 ] unsigned char 
 32297 ;; Auto vars:     Size  Location     Type
 32298 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
 32299 ;; Return value:  Size  Location     Type
 32300 ;;                  1    wreg      void 
 32301 ;; Registers used:
 32302 ;;		wreg, status,2, status,0
 32303 ;; Tracked objects:
 32304 ;;		On entry : 0/0
 32305 ;;		On exit  : 0/0
 32306 ;;		Unchanged: 0/0
 32307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32308 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32309 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32311 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32312 ;;Total ram usage:        4 bytes
 32313 ;; Hardware stack levels used:    1
 32314 ;; Hardware stack levels required when called:   13
 32315 ;; This function calls:
 32316 ;;		Nothing
 32317 ;; This function is called by:
 32318 ;;		_writeDoubleToEEPROM
 32319 ;; This function uses a non-reentrant model
 32320 ;;
 32321                           
 32322                           	psect	text55
 32323  01A9CA                     __ptext55:
 32324                           	opt stack 0
 32325  01A9CA                     _DATAEE_WriteByte:
 32326                           	opt stack 14
 32327                           
 32328                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 32329                           
 32330                           ; BSR set to: 1
 32331                           ;incstack = 0
 32332  01A9CA  0E00               	movlw	0
 32333  01A9CC  BEF2               	btfsc	intcon,7,c	;volatile
 32334  01A9CE  0E01               	movlw	1
 32335  01A9D0  0101               	movlb	1	; () banked
 32336  01A9D2  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 32337                           
 32338                           ; BSR set to: 1
 32339                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 32340  01A9D4  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 32341  01A9D6  0B03               	andlw	3
 32342  01A9D8  6E75               	movwf	3957,c	;volatile
 32343                           
 32344                           ; BSR set to: 1
 32345                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 32346  01A9DA  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 32347                           
 32348                           ; BSR set to: 1
 32349                           ;memory.c: 174: NVMDAT = bData;
 32350  01A9DE  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 32351                           
 32352                           ; BSR set to: 1
 32353                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 32354  01A9E2  0E3F               	movlw	-193
 32355  01A9E4  1677               	andwf	3959,f,c	;volsfr
 32356                           
 32357                           ; BSR set to: 1
 32358                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 32359  01A9E6  8477               	bsf	3959,2,c	;volsfr
 32360                           
 32361                           ; BSR set to: 1
 32362                           ;memory.c: 177: INTCONbits.GIE = 0;
 32363  01A9E8  9EF2               	bcf	intcon,7,c	;volatile
 32364                           
 32365                           ; BSR set to: 1
 32366                           ;memory.c: 178: NVMCON2 = 0x55;
 32367  01A9EA  0E55               	movlw	85
 32368  01A9EC  6E78               	movwf	3960,c	;volsfr
 32369                           
 32370                           ; BSR set to: 1
 32371                           ;memory.c: 179: NVMCON2 = 0xAA;
 32372  01A9EE  0EAA               	movlw	170
 32373  01A9F0  6E78               	movwf	3960,c	;volsfr
 32374                           
 32375                           ; BSR set to: 1
 32376                           ;memory.c: 180: NVMCON1bits.WR = 1;
 32377  01A9F2  8277               	bsf	3959,1,c	;volsfr
 32378  01A9F4                     
 32379                           ; BSR set to: 1
 32380                           ;memory.c: 183: {
 32381  01A9F4  B277               	btfsc	3959,1,c	;volsfr
 32382  01A9F6  D7FE               	goto	l837
 32383                           
 32384                           ;memory.c: 184: }
 32385                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 32386  01A9F8  9477               	bcf	3959,2,c	;volsfr
 32387                           
 32388                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 32389  01A9FA  0101               	movlb	1	; () banked
 32390  01A9FC  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 32391  01A9FE  D002               	bra	u20615
 32392  01AA00  9EF2               	bcf	intcon,7,c	;volatile
 32393  01AA02  D001               	bra	u20616
 32394  01AA04                     u20615:
 32395  01AA04  8EF2               	bsf	intcon,7,c	;volatile
 32396  01AA06                     u20616:
 32397  01AA06  0012               	return		;funcret
 32398  01AA08                     __end_of_DATAEE_WriteByte:
 32399                           	opt stack 0
 32400                           tosu	equ	0xFFF
 32401                           tosh	equ	0xFFE
 32402                           tosl	equ	0xFFD
 32403                           pclath	equ	0xFFA
 32404                           tblptru	equ	0xFF8
 32405                           tblptrh	equ	0xFF7
 32406                           tblptrl	equ	0xFF6
 32407                           tablat	equ	0xFF5
 32408                           prodh	equ	0xFF4
 32409                           prodl	equ	0xFF3
 32410                           intcon	equ	0xFF2
 32411                           indf0	equ	0xFEF
 32412                           postinc0	equ	0xFEE
 32413                           fsr0h	equ	0xFEA
 32414                           fsr0l	equ	0xFE9
 32415                           wreg	equ	0xFE8
 32416                           indf1	equ	0xFE7
 32417                           postdec1	equ	0xFE5
 32418                           plusw1	equ	0xFE3
 32419                           fsr1h	equ	0xFE2
 32420                           fsr1l	equ	0xFE1
 32421                           indf2	equ	0xFDF
 32422                           postinc2	equ	0xFDE
 32423                           postdec2	equ	0xFDD
 32424                           plusw2	equ	0xFDB
 32425                           fsr2h	equ	0xFDA
 32426                           fsr2l	equ	0xFD9
 32427                           status	equ	0xFD8
 32428                           
 32429 ;; *************** function ___flge *****************
 32430 ;; Defined at:
 32431 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 32432 ;; Parameters:    Size  Location     Type
 32433 ;;  ff1             4   23[BANK1 ] void 
 32434 ;;  ff2             4   27[BANK1 ] void 
 32435 ;; Auto vars:     Size  Location     Type
 32436 ;;		None
 32437 ;; Return value:  Size  Location     Type
 32438 ;;		None               void
 32439 ;; Registers used:
 32440 ;;		wreg, status,2, status,0
 32441 ;; Tracked objects:
 32442 ;;		On entry : 0/0
 32443 ;;		On exit  : 0/0
 32444 ;;		Unchanged: 0/0
 32445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32446 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32448 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32449 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32450 ;;Total ram usage:       12 bytes
 32451 ;; Hardware stack levels used:    1
 32452 ;; Hardware stack levels required when called:   13
 32453 ;; This function calls:
 32454 ;;		Nothing
 32455 ;; This function is called by:
 32456 ;;		_saveSRAMMaxToEEPROM
 32457 ;;		__doprnt
 32458 ;; This function uses a non-reentrant model
 32459 ;;
 32460                           
 32461                           	psect	text56
 32462  018D1C                     __ptext56:
 32463                           	opt stack 0
 32464  018D1C                     ___flge:
 32465                           	opt stack 13
 32466                           
 32467                           ;incstack = 0
 32468  018D1C  0E00               	movlw	0
 32469  018D1E  0101               	movlb	1	; () banked
 32470  018D20  1517               	andwf	___flge@ff1& (0+255),w,b
 32471  018D22  6F1F               	movwf	??___flge& (0+255),b
 32472  018D24  0E00               	movlw	0
 32473  018D26  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 32474  018D28  6F20               	movwf	(??___flge+1)& (0+255),b
 32475  018D2A  0E80               	movlw	128
 32476  018D2C  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 32477  018D2E  6F21               	movwf	(??___flge+2)& (0+255),b
 32478  018D30  0E7F               	movlw	127
 32479  018D32  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 32480  018D34  6F22               	movwf	(??___flge+3)& (0+255),b
 32481  018D36  511F               	movf	??___flge& (0+255),w,b
 32482  018D38  1120               	iorwf	(??___flge+1)& (0+255),w,b
 32483  018D3A  1121               	iorwf	(??___flge+2)& (0+255),w,b
 32484  018D3C  1122               	iorwf	(??___flge+3)& (0+255),w,b
 32485  018D3E  A4D8               	btfss	status,2,c
 32486  018D40  D008               	goto	l2420
 32487                           
 32488                           ; BSR set to: 1
 32489  018D42  0E00               	movlw	0
 32490  018D44  6F17               	movwf	___flge@ff1& (0+255),b
 32491  018D46  0E00               	movlw	0
 32492  018D48  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 32493  018D4A  0E00               	movlw	0
 32494  018D4C  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 32495  018D4E  0E00               	movlw	0
 32496  018D50  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 32497  018D52                     l2420:
 32498                           
 32499                           ; BSR set to: 1
 32500                           
 32501                           ; BSR set to: 1
 32502  018D52  0E00               	movlw	0
 32503  018D54  151B               	andwf	___flge@ff2& (0+255),w,b
 32504  018D56  6F1F               	movwf	??___flge& (0+255),b
 32505  018D58  0E00               	movlw	0
 32506  018D5A  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 32507  018D5C  6F20               	movwf	(??___flge+1)& (0+255),b
 32508  018D5E  0E80               	movlw	128
 32509  018D60  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 32510  018D62  6F21               	movwf	(??___flge+2)& (0+255),b
 32511  018D64  0E7F               	movlw	127
 32512  018D66  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 32513  018D68  6F22               	movwf	(??___flge+3)& (0+255),b
 32514  018D6A  511F               	movf	??___flge& (0+255),w,b
 32515  018D6C  1120               	iorwf	(??___flge+1)& (0+255),w,b
 32516  018D6E  1121               	iorwf	(??___flge+2)& (0+255),w,b
 32517  018D70  1122               	iorwf	(??___flge+3)& (0+255),w,b
 32518  018D72  A4D8               	btfss	status,2,c
 32519  018D74  D008               	goto	l2421
 32520                           
 32521                           ; BSR set to: 1
 32522  018D76  0E00               	movlw	0
 32523  018D78  6F1B               	movwf	___flge@ff2& (0+255),b
 32524  018D7A  0E00               	movlw	0
 32525  018D7C  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 32526  018D7E  0E00               	movlw	0
 32527  018D80  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 32528  018D82  0E00               	movlw	0
 32529  018D84  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 32530  018D86                     l2421:
 32531                           
 32532                           ; BSR set to: 1
 32533                           
 32534                           ; BSR set to: 1
 32535  018D86  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 32536  018D88  D01D               	goto	l2422
 32537                           
 32538                           ; BSR set to: 1
 32539  018D8A  C117  F11F         	movff	___flge@ff1,??___flge
 32540  018D8E  C118  F120         	movff	___flge@ff1+1,??___flge+1
 32541  018D92  C119  F121         	movff	___flge@ff1+2,??___flge+2
 32542  018D96  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 32543  018D9A  1F1F               	comf	??___flge& (0+255),f,b
 32544  018D9C  1F20               	comf	(??___flge+1)& (0+255),f,b
 32545  018D9E  1F21               	comf	(??___flge+2)& (0+255),f,b
 32546  018DA0  1F22               	comf	(??___flge+3)& (0+255),f,b
 32547  018DA2  2B1F               	incf	??___flge& (0+255),f,b
 32548  018DA4  0E00               	movlw	0
 32549  018DA6  2320               	addwfc	(??___flge+1)& (0+255),f,b
 32550  018DA8  2321               	addwfc	(??___flge+2)& (0+255),f,b
 32551  018DAA  2322               	addwfc	(??___flge+3)& (0+255),f,b
 32552  018DAC  0E00               	movlw	0
 32553  018DAE  251F               	addwf	??___flge& (0+255),w,b
 32554  018DB0  6F17               	movwf	___flge@ff1& (0+255),b
 32555  018DB2  0E00               	movlw	0
 32556  018DB4  2120               	addwfc	(??___flge+1)& (0+255),w,b
 32557  018DB6  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 32558  018DB8  0E00               	movlw	0
 32559  018DBA  2121               	addwfc	(??___flge+2)& (0+255),w,b
 32560  018DBC  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 32561  018DBE  0E80               	movlw	128
 32562  018DC0  2122               	addwfc	(??___flge+3)& (0+255),w,b
 32563  018DC2  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 32564  018DC4                     l2422:
 32565                           
 32566                           ; BSR set to: 1
 32567                           
 32568                           ; BSR set to: 1
 32569  018DC4  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 32570  018DC6  D01D               	goto	l2423
 32571                           
 32572                           ; BSR set to: 1
 32573  018DC8  C11B  F11F         	movff	___flge@ff2,??___flge
 32574  018DCC  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 32575  018DD0  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 32576  018DD4  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 32577  018DD8  1F1F               	comf	??___flge& (0+255),f,b
 32578  018DDA  1F20               	comf	(??___flge+1)& (0+255),f,b
 32579  018DDC  1F21               	comf	(??___flge+2)& (0+255),f,b
 32580  018DDE  1F22               	comf	(??___flge+3)& (0+255),f,b
 32581  018DE0  2B1F               	incf	??___flge& (0+255),f,b
 32582  018DE2  0E00               	movlw	0
 32583  018DE4  2320               	addwfc	(??___flge+1)& (0+255),f,b
 32584  018DE6  2321               	addwfc	(??___flge+2)& (0+255),f,b
 32585  018DE8  2322               	addwfc	(??___flge+3)& (0+255),f,b
 32586  018DEA  0E00               	movlw	0
 32587  018DEC  251F               	addwf	??___flge& (0+255),w,b
 32588  018DEE  6F1B               	movwf	___flge@ff2& (0+255),b
 32589  018DF0  0E00               	movlw	0
 32590  018DF2  2120               	addwfc	(??___flge+1)& (0+255),w,b
 32591  018DF4  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 32592  018DF6  0E00               	movlw	0
 32593  018DF8  2121               	addwfc	(??___flge+2)& (0+255),w,b
 32594  018DFA  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 32595  018DFC  0E80               	movlw	128
 32596  018DFE  2122               	addwfc	(??___flge+3)& (0+255),w,b
 32597  018E00  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 32598  018E02                     l2423:
 32599                           
 32600                           ; BSR set to: 1
 32601  018E02  0E00               	movlw	0
 32602  018E04  1B17               	xorwf	___flge@ff1& (0+255),f,b
 32603  018E06  0E00               	movlw	0
 32604  018E08  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 32605  018E0A  0E00               	movlw	0
 32606  018E0C  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 32607  018E0E  0E80               	movlw	128
 32608  018E10  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 32609  018E12  0E00               	movlw	0
 32610  018E14  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 32611  018E16  0E00               	movlw	0
 32612  018E18  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 32613  018E1A  0E00               	movlw	0
 32614  018E1C  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 32615  018E1E  0E80               	movlw	128
 32616  018E20  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 32617  018E22  511B               	movf	___flge@ff2& (0+255),w,b
 32618  018E24  5D17               	subwf	___flge@ff1& (0+255),w,b
 32619  018E26  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 32620  018E28  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 32621  018E2A  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 32622  018E2C  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 32623  018E2E  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 32624  018E30  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 32625  018E32  B0D8               	btfsc	status,0,c
 32626  018E34  D002               	goto	l13797
 32627                           
 32628                           ; BSR set to: 1
 32629  018E36  90D8               	bcf	status,0,c
 32630  018E38  0012               	return	
 32631  018E3A                     l13797:
 32632                           
 32633                           ; BSR set to: 1
 32634                           
 32635                           ; BSR set to: 1
 32636  018E3A  80D8               	bsf	status,0,c
 32637                           
 32638                           ; BSR set to: 1
 32639  018E3C  0012               	return	
 32640  018E3E                     __end_of___flge:
 32641                           	opt stack 0
 32642                           tosu	equ	0xFFF
 32643                           tosh	equ	0xFFE
 32644                           tosl	equ	0xFFD
 32645                           pclath	equ	0xFFA
 32646                           tblptru	equ	0xFF8
 32647                           tblptrh	equ	0xFF7
 32648                           tblptrl	equ	0xFF6
 32649                           tablat	equ	0xFF5
 32650                           prodh	equ	0xFF4
 32651                           prodl	equ	0xFF3
 32652                           intcon	equ	0xFF2
 32653                           indf0	equ	0xFEF
 32654                           postinc0	equ	0xFEE
 32655                           fsr0h	equ	0xFEA
 32656                           fsr0l	equ	0xFE9
 32657                           wreg	equ	0xFE8
 32658                           indf1	equ	0xFE7
 32659                           postdec1	equ	0xFE5
 32660                           plusw1	equ	0xFE3
 32661                           fsr1h	equ	0xFE2
 32662                           fsr1l	equ	0xFE1
 32663                           indf2	equ	0xFDF
 32664                           postinc2	equ	0xFDE
 32665                           postdec2	equ	0xFDD
 32666                           plusw2	equ	0xFDB
 32667                           fsr2h	equ	0xFDA
 32668                           fsr2l	equ	0xFD9
 32669                           status	equ	0xFD8
 32670                           
 32671 ;; *************** function _recoverSRAMMaxFromEEPROM *****************
 32672 ;; Defined at:
 32673 ;;		line 192 in file "main.c"
 32674 ;; Parameters:    Size  Location     Type
 32675 ;;		None
 32676 ;; Auto vars:     Size  Location     Type
 32677 ;;		None
 32678 ;; Return value:  Size  Location     Type
 32679 ;;                  1    wreg      void 
 32680 ;; Registers used:
 32681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32682 ;; Tracked objects:
 32683 ;;		On entry : 0/0
 32684 ;;		On exit  : 0/0
 32685 ;;		Unchanged: 0/0
 32686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32691 ;;Total ram usage:        0 bytes
 32692 ;; Hardware stack levels used:    1
 32693 ;; Hardware stack levels required when called:   15
 32694 ;; This function calls:
 32695 ;;		_readDoubleFromEEPROM
 32696 ;; This function is called by:
 32697 ;;		_main
 32698 ;; This function uses a non-reentrant model
 32699 ;;
 32700                           
 32701                           	psect	text57
 32702  0184E4                     __ptext57:
 32703                           	opt stack 0
 32704  0184E4                     _recoverSRAMMaxFromEEPROM:
 32705                           	opt stack 15
 32706                           
 32707                           ;main.c: 194: max_Irms = readDoubleFromEEPROM(max_Irms_address);
 32708                           
 32709                           ; BSR set to: 1
 32710                           ;incstack = 0
 32711  0184E4  0E5D               	movlw	low _max_Irms_address
 32712  0184E6  6EF6               	movwf	tblptrl,c
 32713  0184E8                     	if	1	;There is more than 1 active tblptr byte
 32714  0184E8  0ECF               	movlw	high _max_Irms_address
 32715  0184EA  6EF7               	movwf	tblptrh,c
 32716  0184EC                     	endif
 32717  0184EC                     	if	1	;There are 3 active tblptr bytes
 32718  0184EC  0E00               	movlw	low (_max_Irms_address shr (0+16))
 32719  0184EE  6EF8               	movwf	tblptru,c
 32720  0184F0                     	endif
 32721  0184F0  0009               	tblrd		*+
 32722  0184F2  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32723  0184F6  000A               	tblrd		*-
 32724  0184F8  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32725  0184FC  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32726  018500  C119  F224         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
 32727  018504  C11A  F225         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
 32728  018508  C11B  F226         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
 32729  01850C  C11C  F227         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
 32730                           
 32731                           ;main.c: 195: max_Power = readDoubleFromEEPROM(max_Power_address);
 32732  018510  0E5B               	movlw	low _max_Power_address
 32733  018512  6EF6               	movwf	tblptrl,c
 32734  018514                     	if	1	;There is more than 1 active tblptr byte
 32735  018514  0ECF               	movlw	high _max_Power_address
 32736  018516  6EF7               	movwf	tblptrh,c
 32737  018518                     	endif
 32738  018518                     	if	1	;There are 3 active tblptr bytes
 32739  018518  0E00               	movlw	low (_max_Power_address shr (0+16))
 32740  01851A  6EF8               	movwf	tblptru,c
 32741  01851C                     	endif
 32742  01851C  0009               	tblrd		*+
 32743  01851E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32744  018522  000A               	tblrd		*-
 32745  018524  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32746  018528  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32747  01852C  C119  F220         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
 32748  018530  C11A  F221         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
 32749  018534  C11B  F222         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
 32750  018538  C11C  F223         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
 32751                           
 32752                           ;main.c: 196: max_POS3P3_ADC_Result = readDoubleFromEEPROM(max_POS3P3_ADC_Result_address
      +                          );
 32753  01853C  0E59               	movlw	low _max_POS3P3_ADC_Result_address
 32754  01853E  6EF6               	movwf	tblptrl,c
 32755  018540                     	if	1	;There is more than 1 active tblptr byte
 32756  018540  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 32757  018542  6EF7               	movwf	tblptrh,c
 32758  018544                     	endif
 32759  018544                     	if	1	;There are 3 active tblptr bytes
 32760  018544  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 32761  018546  6EF8               	movwf	tblptru,c
 32762  018548                     	endif
 32763  018548  0009               	tblrd		*+
 32764  01854A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32765  01854E  000A               	tblrd		*-
 32766  018550  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32767  018554  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32768  018558  C119  F21C         	movff	?_readDoubleFromEEPROM,_max_POS3P3_ADC_Result	;volatile
 32769  01855C  C11A  F21D         	movff	?_readDoubleFromEEPROM+1,_max_POS3P3_ADC_Result+1	;volatile
 32770  018560  C11B  F21E         	movff	?_readDoubleFromEEPROM+2,_max_POS3P3_ADC_Result+2	;volatile
 32771  018564  C11C  F21F         	movff	?_readDoubleFromEEPROM+3,_max_POS3P3_ADC_Result+3	;volatile
 32772                           
 32773                           ;main.c: 197: max_POS12_ADC_Result = readDoubleFromEEPROM(max_POS12_ADC_Result_address);
 32774  018568  0E57               	movlw	low _max_POS12_ADC_Result_address
 32775  01856A  6EF6               	movwf	tblptrl,c
 32776  01856C                     	if	1	;There is more than 1 active tblptr byte
 32777  01856C  0ECF               	movlw	high _max_POS12_ADC_Result_address
 32778  01856E  6EF7               	movwf	tblptrh,c
 32779  018570                     	endif
 32780  018570                     	if	1	;There are 3 active tblptr bytes
 32781  018570  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 32782  018572  6EF8               	movwf	tblptru,c
 32783  018574                     	endif
 32784  018574  0009               	tblrd		*+
 32785  018576  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32786  01857A  000A               	tblrd		*-
 32787  01857C  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32788  018580  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32789  018584  C119  F218         	movff	?_readDoubleFromEEPROM,_max_POS12_ADC_Result	;volatile
 32790  018588  C11A  F219         	movff	?_readDoubleFromEEPROM+1,_max_POS12_ADC_Result+1	;volatile
 32791  01858C  C11B  F21A         	movff	?_readDoubleFromEEPROM+2,_max_POS12_ADC_Result+2	;volatile
 32792  018590  C11C  F21B         	movff	?_readDoubleFromEEPROM+3,_max_POS12_ADC_Result+3	;volatile
 32793                           
 32794                           ;main.c: 198: max_Temp_ADC_Result = readDoubleFromEEPROM(max_Temp_ADC_Result_address);
 32795  018594  0E55               	movlw	low _max_Temp_ADC_Result_address
 32796  018596  6EF6               	movwf	tblptrl,c
 32797  018598                     	if	1	;There is more than 1 active tblptr byte
 32798  018598  0ECF               	movlw	high _max_Temp_ADC_Result_address
 32799  01859A  6EF7               	movwf	tblptrh,c
 32800  01859C                     	endif
 32801  01859C                     	if	1	;There are 3 active tblptr bytes
 32802  01859C  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 32803  01859E  6EF8               	movwf	tblptru,c
 32804  0185A0                     	endif
 32805  0185A0  0009               	tblrd		*+
 32806  0185A2  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32807  0185A6  000A               	tblrd		*-
 32808  0185A8  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32809  0185AC  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32810  0185B0  C119  F214         	movff	?_readDoubleFromEEPROM,_max_Temp_ADC_Result	;volatile
 32811  0185B4  C11A  F215         	movff	?_readDoubleFromEEPROM+1,_max_Temp_ADC_Result+1	;volatile
 32812  0185B8  C11B  F216         	movff	?_readDoubleFromEEPROM+2,_max_Temp_ADC_Result+2	;volatile
 32813  0185BC  C11C  F217         	movff	?_readDoubleFromEEPROM+3,_max_Temp_ADC_Result+3	;volatile
 32814                           
 32815                           ;main.c: 199: max_FVR_ADC_Result = readDoubleFromEEPROM(max_FVR_ADC_Result_address);
 32816  0185C0  0E53               	movlw	low _max_FVR_ADC_Result_address
 32817  0185C2  6EF6               	movwf	tblptrl,c
 32818  0185C4                     	if	1	;There is more than 1 active tblptr byte
 32819  0185C4  0ECF               	movlw	high _max_FVR_ADC_Result_address
 32820  0185C6  6EF7               	movwf	tblptrh,c
 32821  0185C8                     	endif
 32822  0185C8                     	if	1	;There are 3 active tblptr bytes
 32823  0185C8  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 32824  0185CA  6EF8               	movwf	tblptru,c
 32825  0185CC                     	endif
 32826  0185CC  0009               	tblrd		*+
 32827  0185CE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32828  0185D2  000A               	tblrd		*-
 32829  0185D4  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32830  0185D8  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32831  0185DC  C119  F210         	movff	?_readDoubleFromEEPROM,_max_FVR_ADC_Result	;volatile
 32832  0185E0  C11A  F211         	movff	?_readDoubleFromEEPROM+1,_max_FVR_ADC_Result+1	;volatile
 32833  0185E4  C11B  F212         	movff	?_readDoubleFromEEPROM+2,_max_FVR_ADC_Result+2	;volatile
 32834  0185E8  C11C  F213         	movff	?_readDoubleFromEEPROM+3,_max_FVR_ADC_Result+3	;volatile
 32835                           
 32836                           ;main.c: 200: Total_Energy = readDoubleFromEEPROM(Total_Energy_address);
 32837  0185EC  0E5F               	movlw	low _Total_Energy_address
 32838  0185EE  6EF6               	movwf	tblptrl,c
 32839  0185F0                     	if	1	;There is more than 1 active tblptr byte
 32840  0185F0  0ECF               	movlw	high _Total_Energy_address
 32841  0185F2  6EF7               	movwf	tblptrh,c
 32842  0185F4                     	endif
 32843  0185F4                     	if	1	;There are 3 active tblptr bytes
 32844  0185F4  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 32845  0185F6  6EF8               	movwf	tblptru,c
 32846  0185F8                     	endif
 32847  0185F8  0009               	tblrd		*+
 32848  0185FA  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32849  0185FE  000A               	tblrd		*-
 32850  018600  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32851  018604  ECFF  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32852  018608  C119  F0F6         	movff	?_readDoubleFromEEPROM,_Total_Energy	;volatile
 32853  01860C  C11A  F0F7         	movff	?_readDoubleFromEEPROM+1,_Total_Energy+1	;volatile
 32854  018610  C11B  F0F8         	movff	?_readDoubleFromEEPROM+2,_Total_Energy+2	;volatile
 32855  018614  C11C  F0F9         	movff	?_readDoubleFromEEPROM+3,_Total_Energy+3	;volatile
 32856  018618  0012               	return		;funcret
 32857  01861A                     __end_of_recoverSRAMMaxFromEEPROM:
 32858                           	opt stack 0
 32859                           tosu	equ	0xFFF
 32860                           tosh	equ	0xFFE
 32861                           tosl	equ	0xFFD
 32862                           pclath	equ	0xFFA
 32863                           tblptru	equ	0xFF8
 32864                           tblptrh	equ	0xFF7
 32865                           tblptrl	equ	0xFF6
 32866                           tablat	equ	0xFF5
 32867                           prodh	equ	0xFF4
 32868                           prodl	equ	0xFF3
 32869                           intcon	equ	0xFF2
 32870                           indf0	equ	0xFEF
 32871                           postinc0	equ	0xFEE
 32872                           fsr0h	equ	0xFEA
 32873                           fsr0l	equ	0xFE9
 32874                           wreg	equ	0xFE8
 32875                           indf1	equ	0xFE7
 32876                           postdec1	equ	0xFE5
 32877                           plusw1	equ	0xFE3
 32878                           fsr1h	equ	0xFE2
 32879                           fsr1l	equ	0xFE1
 32880                           indf2	equ	0xFDF
 32881                           postinc2	equ	0xFDE
 32882                           postdec2	equ	0xFDD
 32883                           plusw2	equ	0xFDB
 32884                           fsr2h	equ	0xFDA
 32885                           fsr2l	equ	0xFD9
 32886                           status	equ	0xFD8
 32887                           
 32888 ;; *************** function _readDoubleFromEEPROM *****************
 32889 ;; Defined at:
 32890 ;;		line 22 in file "double_to_EEPROM.c"
 32891 ;; Parameters:    Size  Location     Type
 32892 ;;  starting_add    2   25[BANK1 ] unsigned int 
 32893 ;; Auto vars:     Size  Location     Type
 32894 ;;  byte_index      2   33[BANK1 ] int 
 32895 ;;  output_data     4   29[BANK1 ] struct .
 32896 ;; Return value:  Size  Location     Type
 32897 ;;                  4   25[BANK1 ] struct .
 32898 ;; Registers used:
 32899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32900 ;; Tracked objects:
 32901 ;;		On entry : 0/0
 32902 ;;		On exit  : 0/0
 32903 ;;		Unchanged: 0/0
 32904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32905 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32906 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32908 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32909 ;;Total ram usage:       10 bytes
 32910 ;; Hardware stack levels used:    1
 32911 ;; Hardware stack levels required when called:   14
 32912 ;; This function calls:
 32913 ;;		_DATAEE_ReadByte
 32914 ;; This function is called by:
 32915 ;;		_recoverSRAMMaxFromEEPROM
 32916 ;;		_ringBufferLUT
 32917 ;; This function uses a non-reentrant model
 32918 ;;
 32919                           
 32920                           	psect	text58
 32921  01A3FE                     __ptext58:
 32922                           	opt stack 0
 32923  01A3FE                     _readDoubleFromEEPROM:
 32924                           	opt stack 14
 32925                           
 32926                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 32927                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 32928                           
 32929                           ;incstack = 0
 32930  01A3FE  0E00               	movlw	0
 32931  01A400  0101               	movlb	1	; () banked
 32932  01A402  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 32933  01A404  0E00               	movlw	0
 32934  01A406  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 32935                           
 32936                           ; BSR set to: 1
 32937  01A408  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32938  01A40A  E119               	bnz	l1658
 32939  01A40C  D014               	goto	L9
 32940  01A40E                     
 32941                           ; BSR set to: 1
 32942                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 32943                           
 32944                           ; BSR set to: 1
 32945  01A40E  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 32946  01A410  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32947  01A412  6ED9               	movwf	fsr2l,c
 32948  01A414  0E01               	movlw	high readDoubleFromEEPROM@output_data
 32949  01A416  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32950  01A418  6EDA               	movwf	fsr2h,c
 32951  01A41A  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 32952  01A41C  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32953  01A41E  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 32954  01A420  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 32955  01A422  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32956  01A424  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 32957  01A426  EC8C  F0D8         	call	_DATAEE_ReadByte	;wreg free
 32958  01A42A  6EDF               	movwf	indf2,c
 32959  01A42C  0101               	movlb	1	; () banked
 32960  01A42E  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 32961  01A430  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 32962                           
 32963                           ; BSR set to: 1
 32964  01A432  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32965  01A434  E104               	bnz	u21150
 32966  01A436                     L9:
 32967  01A436  0E04               	movlw	4
 32968  01A438  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32969  01A43A  A0D8               	btfss	status,0,c
 32970  01A43C  D7E8               	goto	l1657
 32971  01A43E                     u21150:
 32972  01A43E                     l1658:
 32973                           
 32974                           ; BSR set to: 1
 32975                           ;double_to_EEPROM.c: 32: }
 32976                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 32977  01A43E  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 32978  01A442  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 32979  01A446  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 32980  01A44A  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 32981                           
 32982                           ; BSR set to: 1
 32983  01A44E  0012               	return		;funcret
 32984  01A450                     __end_of_readDoubleFromEEPROM:
 32985                           	opt stack 0
 32986                           tosu	equ	0xFFF
 32987                           tosh	equ	0xFFE
 32988                           tosl	equ	0xFFD
 32989                           pclath	equ	0xFFA
 32990                           tblptru	equ	0xFF8
 32991                           tblptrh	equ	0xFF7
 32992                           tblptrl	equ	0xFF6
 32993                           tablat	equ	0xFF5
 32994                           prodh	equ	0xFF4
 32995                           prodl	equ	0xFF3
 32996                           intcon	equ	0xFF2
 32997                           indf0	equ	0xFEF
 32998                           postinc0	equ	0xFEE
 32999                           fsr0h	equ	0xFEA
 33000                           fsr0l	equ	0xFE9
 33001                           wreg	equ	0xFE8
 33002                           indf1	equ	0xFE7
 33003                           postdec1	equ	0xFE5
 33004                           plusw1	equ	0xFE3
 33005                           fsr1h	equ	0xFE2
 33006                           fsr1l	equ	0xFE1
 33007                           indf2	equ	0xFDF
 33008                           postinc2	equ	0xFDE
 33009                           postdec2	equ	0xFDD
 33010                           plusw2	equ	0xFDB
 33011                           fsr2h	equ	0xFDA
 33012                           fsr2l	equ	0xFD9
 33013                           status	equ	0xFD8
 33014                           
 33015 ;; *************** function _DATAEE_ReadByte *****************
 33016 ;; Defined at:
 33017 ;;		line 190 in file "mcc_generated_files/memory.c"
 33018 ;; Parameters:    Size  Location     Type
 33019 ;;  bAdd            2   23[BANK1 ] unsigned int 
 33020 ;; Auto vars:     Size  Location     Type
 33021 ;;		None
 33022 ;; Return value:  Size  Location     Type
 33023 ;;                  1    wreg      unsigned char 
 33024 ;; Registers used:
 33025 ;;		wreg, status,2, status,0
 33026 ;; Tracked objects:
 33027 ;;		On entry : 0/0
 33028 ;;		On exit  : 0/0
 33029 ;;		Unchanged: 0/0
 33030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33031 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33034 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33035 ;;Total ram usage:        2 bytes
 33036 ;; Hardware stack levels used:    1
 33037 ;; Hardware stack levels required when called:   13
 33038 ;; This function calls:
 33039 ;;		Nothing
 33040 ;; This function is called by:
 33041 ;;		_readDoubleFromEEPROM
 33042 ;; This function uses a non-reentrant model
 33043 ;;
 33044                           
 33045                           	psect	text59
 33046  01B118                     __ptext59:
 33047                           	opt stack 0
 33048  01B118                     _DATAEE_ReadByte:
 33049                           	opt stack 14
 33050                           
 33051                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 33052                           
 33053                           ; BSR set to: 1
 33054                           ;incstack = 0
 33055  01B118  0101               	movlb	1	; () banked
 33056  01B11A  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 33057  01B11C  0B03               	andlw	3
 33058  01B11E  6E75               	movwf	3957,c	;volatile
 33059                           
 33060                           ; BSR set to: 1
 33061                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 33062  01B120  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 33063                           
 33064                           ; BSR set to: 1
 33065                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 33066  01B124  0E3F               	movlw	-193
 33067  01B126  1677               	andwf	3959,f,c	;volsfr
 33068                           
 33069                           ; BSR set to: 1
 33070                           ;memory.c: 195: NVMCON1bits.RD = 1;
 33071  01B128  8077               	bsf	3959,0,c	;volsfr
 33072                           
 33073                           ; BSR set to: 1
 33074                           ;memory.c: 196: __nop();
 33075  01B12A  F000               	nop	
 33076                           
 33077                           ;memory.c: 197: __nop();
 33078  01B12C  F000               	nop	
 33079                           
 33080                           ;memory.c: 199: return (NVMDAT);
 33081  01B12E  5076               	movf	3958,w,c	;volatile
 33082  01B130  0012               	return	
 33083  01B132                     __end_of_DATAEE_ReadByte:
 33084                           	opt stack 0
 33085                           tosu	equ	0xFFF
 33086                           tosh	equ	0xFFE
 33087                           tosl	equ	0xFFD
 33088                           pclath	equ	0xFFA
 33089                           tblptru	equ	0xFF8
 33090                           tblptrh	equ	0xFF7
 33091                           tblptrl	equ	0xFF6
 33092                           tablat	equ	0xFF5
 33093                           prodh	equ	0xFF4
 33094                           prodl	equ	0xFF3
 33095                           intcon	equ	0xFF2
 33096                           indf0	equ	0xFEF
 33097                           postinc0	equ	0xFEE
 33098                           fsr0h	equ	0xFEA
 33099                           fsr0l	equ	0xFE9
 33100                           wreg	equ	0xFE8
 33101                           indf1	equ	0xFE7
 33102                           postdec1	equ	0xFE5
 33103                           plusw1	equ	0xFE3
 33104                           fsr1h	equ	0xFE2
 33105                           fsr1l	equ	0xFE1
 33106                           indf2	equ	0xFDF
 33107                           postinc2	equ	0xFDE
 33108                           postdec2	equ	0xFDD
 33109                           plusw2	equ	0xFDB
 33110                           fsr2h	equ	0xFDA
 33111                           fsr2l	equ	0xFD9
 33112                           status	equ	0xFD8
 33113                           
 33114 ;; *************** function _getCauseOfReset *****************
 33115 ;; Defined at:
 33116 ;;		line 11 in file "cause_of_reset.c"
 33117 ;; Parameters:    Size  Location     Type
 33118 ;;		None
 33119 ;; Auto vars:     Size  Location     Type
 33120 ;;  return_reset    1   23[BANK1 ] enum E17455
 33121 ;; Return value:  Size  Location     Type
 33122 ;;                  1    wreg      enum E18124
 33123 ;; Registers used:
 33124 ;;		wreg, status,2
 33125 ;; Tracked objects:
 33126 ;;		On entry : 0/0
 33127 ;;		On exit  : 0/0
 33128 ;;		Unchanged: 0/0
 33129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33131 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33133 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33134 ;;Total ram usage:        1 bytes
 33135 ;; Hardware stack levels used:    1
 33136 ;; Hardware stack levels required when called:   13
 33137 ;; This function calls:
 33138 ;;		Nothing
 33139 ;; This function is called by:
 33140 ;;		_main
 33141 ;; This function uses a non-reentrant model
 33142 ;;
 33143                           
 33144                           	psect	text60
 33145  01A450                     __ptext60:
 33146                           	opt stack 0
 33147  01A450                     _getCauseOfReset:
 33148                           	opt stack 17
 33149                           
 33150                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 33151                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 33152                           
 33153                           ;incstack = 0
 33154  01A450  AED7               	btfss	4055,7,c	;volatile
 33155  01A452  D002               	goto	l1624
 33156                           
 33157                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 33158  01A454  0E07               	movlw	7
 33159  01A456  D019               	goto	L16
 33160  01A458                     l1624:
 33161                           
 33162                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 33163  01A458  ACD7               	btfss	4055,6,c	;volatile
 33164  01A45A  D002               	goto	l1626
 33165                           
 33166                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 33167  01A45C  0E08               	movlw	8
 33168  01A45E  D015               	goto	L16
 33169  01A460                     l1626:
 33170                           
 33171                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 33172  01A460  BAD7               	btfsc	4055,5,c	;volatile
 33173  01A462  D002               	goto	l1628
 33174                           
 33175                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 33176  01A464  0E05               	movlw	5
 33177  01A466  D011               	goto	L16
 33178  01A468                     l1628:
 33179                           
 33180                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 33181  01A468  B6D7               	btfsc	4055,3,c	;volatile
 33182  01A46A  D002               	goto	l1630
 33183                           
 33184                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 33185  01A46C  0E03               	movlw	3
 33186  01A46E  D00D               	goto	L16
 33187  01A470                     l1630:
 33188                           
 33189                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 33190  01A470  B4D7               	btfsc	4055,2,c	;volatile
 33191  01A472  D002               	goto	l1632
 33192                           
 33193                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 33194  01A474  0E06               	movlw	6
 33195  01A476  D009               	goto	L16
 33196  01A478                     l1632:
 33197                           
 33198                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 33199  01A478  B2D7               	btfsc	4055,1,c	;volatile
 33200  01A47A  D002               	goto	l1634
 33201                           
 33202                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 33203  01A47C  0E01               	movlw	1
 33204  01A47E  D005               	goto	L16
 33205  01A480                     l1634:
 33206                           
 33207                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 33208  01A480  B0D7               	btfsc	4055,0,c	;volatile
 33209  01A482  D002               	goto	l1636
 33210                           
 33211                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 33212  01A484  0E02               	movlw	2
 33213  01A486  D001               	goto	L16
 33214  01A488                     l1636:
 33215                           
 33216                           ;cause_of_reset.c: 60: else {
 33217                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 33218                           
 33219                           ; BSR set to: 1
 33220  01A488  0E00               	movlw	0
 33221  01A48A                     L16:
 33222  01A48A  0101               	movlb	1	; () banked
 33223  01A48C  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 33224                           
 33225                           ; BSR set to: 1
 33226                           ;cause_of_reset.c: 64: }
 33227                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 33228                           
 33229                           ; BSR set to: 1
 33230                           
 33231                           ; BSR set to: 1
 33232                           
 33233                           ; BSR set to: 1
 33234                           
 33235                           ; BSR set to: 1
 33236                           
 33237                           ; BSR set to: 1
 33238                           
 33239                           ; BSR set to: 1
 33240                           
 33241                           ; BSR set to: 1
 33242  01A48E  9ED7               	bcf	4055,7,c	;volatile
 33243                           
 33244                           ; BSR set to: 1
 33245                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 33246  01A490  9CD7               	bcf	4055,6,c	;volatile
 33247                           
 33248                           ; BSR set to: 1
 33249                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 33250  01A492  8AD7               	bsf	4055,5,c	;volatile
 33251                           
 33252                           ; BSR set to: 1
 33253                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 33254  01A494  88D7               	bsf	4055,4,c	;volatile
 33255                           
 33256                           ; BSR set to: 1
 33257                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 33258  01A496  86D7               	bsf	4055,3,c	;volatile
 33259                           
 33260                           ; BSR set to: 1
 33261                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 33262  01A498  84D7               	bsf	4055,2,c	;volatile
 33263                           
 33264                           ; BSR set to: 1
 33265                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 33266  01A49A  82D7               	bsf	4055,1,c	;volatile
 33267                           
 33268                           ; BSR set to: 1
 33269                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 33270  01A49C  80D7               	bsf	4055,0,c	;volatile
 33271                           
 33272                           ;cause_of_reset.c: 76: return return_reset_cause;
 33273  01A49E  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 33274  01A4A0  0012               	return	
 33275  01A4A2                     __end_of_getCauseOfReset:
 33276                           	opt stack 0
 33277                           tosu	equ	0xFFF
 33278                           tosh	equ	0xFFE
 33279                           tosl	equ	0xFFD
 33280                           pclath	equ	0xFFA
 33281                           tblptru	equ	0xFF8
 33282                           tblptrh	equ	0xFF7
 33283                           tblptrl	equ	0xFF6
 33284                           tablat	equ	0xFF5
 33285                           prodh	equ	0xFF4
 33286                           prodl	equ	0xFF3
 33287                           intcon	equ	0xFF2
 33288                           indf0	equ	0xFEF
 33289                           postinc0	equ	0xFEE
 33290                           fsr0h	equ	0xFEA
 33291                           fsr0l	equ	0xFE9
 33292                           wreg	equ	0xFE8
 33293                           indf1	equ	0xFE7
 33294                           postdec1	equ	0xFE5
 33295                           plusw1	equ	0xFE3
 33296                           fsr1h	equ	0xFE2
 33297                           fsr1l	equ	0xFE1
 33298                           indf2	equ	0xFDF
 33299                           postinc2	equ	0xFDE
 33300                           postdec2	equ	0xFDD
 33301                           plusw2	equ	0xFDB
 33302                           fsr2h	equ	0xFDA
 33303                           fsr2l	equ	0xFD9
 33304                           status	equ	0xFD8
 33305                           
 33306 ;; *************** function _SYSTEM_Initialize *****************
 33307 ;; Defined at:
 33308 ;;		line 50 in file "mcc_generated_files/mcc.c"
 33309 ;; Parameters:    Size  Location     Type
 33310 ;;		None
 33311 ;; Auto vars:     Size  Location     Type
 33312 ;;		None
 33313 ;; Return value:  Size  Location     Type
 33314 ;;                  1    wreg      void 
 33315 ;; Registers used:
 33316 ;;		wreg, status,2, status,0, cstack
 33317 ;; Tracked objects:
 33318 ;;		On entry : 0/0
 33319 ;;		On exit  : 0/0
 33320 ;;		Unchanged: 0/0
 33321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33326 ;;Total ram usage:        0 bytes
 33327 ;; Hardware stack levels used:    1
 33328 ;; Hardware stack levels required when called:   15
 33329 ;; This function calls:
 33330 ;;		_ADCC_Initialize
 33331 ;;		_EUSART2_Initialize
 33332 ;;		_EXT_INT_Initialize
 33333 ;;		_FVR_Initialize
 33334 ;;		_HLVD_Initialize
 33335 ;;		_I2C1_Initialize
 33336 ;;		_INTERRUPT_Initialize
 33337 ;;		_OSCILLATOR_Initialize
 33338 ;;		_PIN_MANAGER_Initialize
 33339 ;;		_PMD_Initialize
 33340 ;;		_TMR4_Initialize
 33341 ;;		_TMR5_Initialize
 33342 ;;		_TMR6_Initialize
 33343 ;;		_TMR7_Initialize
 33344 ;; This function is called by:
 33345 ;;		_main
 33346 ;; This function uses a non-reentrant model
 33347 ;;
 33348                           
 33349                           	psect	text61
 33350  01AB34                     __ptext61:
 33351                           	opt stack 0
 33352  01AB34                     _SYSTEM_Initialize:
 33353                           	opt stack 15
 33354                           
 33355                           ;mcc.c: 52: INTERRUPT_Initialize();
 33356                           
 33357                           ; BSR set to: 1
 33358                           ;incstack = 0
 33359  01AB34  EC63  F0D8         	call	_INTERRUPT_Initialize	;wreg free
 33360                           
 33361                           ;mcc.c: 53: PMD_Initialize();
 33362  01AB38  EC47  F0D8         	call	_PMD_Initialize	;wreg free
 33363                           
 33364                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 33365  01AB3C  EC86  F0CA         	call	_PIN_MANAGER_Initialize	;wreg free
 33366                           
 33367                           ;mcc.c: 55: OSCILLATOR_Initialize();
 33368  01AB40  EC55  F0D8         	call	_OSCILLATOR_Initialize	;wreg free
 33369                           
 33370                           ;mcc.c: 56: I2C1_Initialize();
 33371  01AB44  EC27  F0D6         	call	_I2C1_Initialize	;wreg free
 33372                           
 33373                           ;mcc.c: 57: HLVD_Initialize();
 33374  01AB48  EC1D  F0D9         	call	_HLVD_Initialize	;wreg free
 33375                           
 33376                           ;mcc.c: 58: FVR_Initialize();
 33377  01AB4C  EC86  F0D9         	call	_FVR_Initialize	;wreg free
 33378                           
 33379                           ;mcc.c: 59: TMR7_Initialize();
 33380  01AB50  ECD5  F0D1         	call	_TMR7_Initialize	;wreg free
 33381                           
 33382                           ;mcc.c: 60: ADCC_Initialize();
 33383  01AB54  EC14  F0D0         	call	_ADCC_Initialize	;wreg free
 33384                           
 33385                           ;mcc.c: 61: TMR4_Initialize();
 33386  01AB58  ECF4  F0D6         	call	_TMR4_Initialize	;wreg free
 33387                           
 33388                           ;mcc.c: 62: EXT_INT_Initialize();
 33389  01AB5C  EC29  F0D8         	call	_EXT_INT_Initialize	;wreg free
 33390                           
 33391                           ;mcc.c: 63: TMR6_Initialize();
 33392  01AB60  ECAB  F0D6         	call	_TMR6_Initialize	;wreg free
 33393                           
 33394                           ;mcc.c: 64: TMR5_Initialize();
 33395  01AB64  ECA1  F0D2         	call	_TMR5_Initialize	;wreg free
 33396                           
 33397                           ;mcc.c: 65: EUSART2_Initialize();
 33398  01AB68  ECE6  F0D0         	call	_EUSART2_Initialize	;wreg free
 33399  01AB6C  0012               	return		;funcret
 33400  01AB6E                     __end_of_SYSTEM_Initialize:
 33401                           	opt stack 0
 33402                           tosu	equ	0xFFF
 33403                           tosh	equ	0xFFE
 33404                           tosl	equ	0xFFD
 33405                           pclath	equ	0xFFA
 33406                           tblptru	equ	0xFF8
 33407                           tblptrh	equ	0xFF7
 33408                           tblptrl	equ	0xFF6
 33409                           tablat	equ	0xFF5
 33410                           prodh	equ	0xFF4
 33411                           prodl	equ	0xFF3
 33412                           intcon	equ	0xFF2
 33413                           indf0	equ	0xFEF
 33414                           postinc0	equ	0xFEE
 33415                           fsr0h	equ	0xFEA
 33416                           fsr0l	equ	0xFE9
 33417                           wreg	equ	0xFE8
 33418                           indf1	equ	0xFE7
 33419                           postdec1	equ	0xFE5
 33420                           plusw1	equ	0xFE3
 33421                           fsr1h	equ	0xFE2
 33422                           fsr1l	equ	0xFE1
 33423                           indf2	equ	0xFDF
 33424                           postinc2	equ	0xFDE
 33425                           postdec2	equ	0xFDD
 33426                           plusw2	equ	0xFDB
 33427                           fsr2h	equ	0xFDA
 33428                           fsr2l	equ	0xFD9
 33429                           status	equ	0xFD8
 33430                           
 33431 ;; *************** function _TMR7_Initialize *****************
 33432 ;; Defined at:
 33433 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 33434 ;; Parameters:    Size  Location     Type
 33435 ;;		None
 33436 ;; Auto vars:     Size  Location     Type
 33437 ;;		None
 33438 ;; Return value:  Size  Location     Type
 33439 ;;                  1    wreg      void 
 33440 ;; Registers used:
 33441 ;;		wreg, status,2, status,0, cstack
 33442 ;; Tracked objects:
 33443 ;;		On entry : 0/0
 33444 ;;		On exit  : 0/0
 33445 ;;		Unchanged: 0/0
 33446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33449 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33450 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33451 ;;Total ram usage:        2 bytes
 33452 ;; Hardware stack levels used:    1
 33453 ;; Hardware stack levels required when called:   14
 33454 ;; This function calls:
 33455 ;;		_TMR7_SetInterruptHandler
 33456 ;; This function is called by:
 33457 ;;		_SYSTEM_Initialize
 33458 ;; This function uses a non-reentrant model
 33459 ;;
 33460                           
 33461                           	psect	text62
 33462  01A3AA                     __ptext62:
 33463                           	opt stack 0
 33464  01A3AA                     _TMR7_Initialize:
 33465                           	opt stack 15
 33466                           
 33467                           ;tmr7.c: 69: T7GCON = 0x00;
 33468                           
 33469                           ;incstack = 0
 33470  01A3AA  0E00               	movlw	0
 33471  01A3AC  010F               	movlb	15	; () banked
 33472  01A3AE  6F31               	movwf	49,b	;volatile
 33473                           
 33474                           ;tmr7.c: 72: T7GATE = 0x00;
 33475  01A3B0  0E00               	movlw	0
 33476  01A3B2  6F32               	movwf	50,b	;volatile
 33477                           
 33478                           ;tmr7.c: 75: T7CLK = 0x03;
 33479  01A3B4  0E03               	movlw	3
 33480  01A3B6  6F33               	movwf	51,b	;volatile
 33481                           
 33482                           ;tmr7.c: 78: TMR7H = 0xEC;
 33483  01A3B8  0EEC               	movlw	236
 33484  01A3BA  6F2F               	movwf	47,b	;volatile
 33485                           
 33486                           ;tmr7.c: 81: TMR7L = 0x78;
 33487  01A3BC  0E78               	movlw	120
 33488  01A3BE  6F2E               	movwf	46,b	;volatile
 33489                           
 33490                           ; BSR set to: 15
 33491                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 33492  01A3C0  512E               	movf	46,w,b	;volatile
 33493  01A3C2  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 33494  01A3C6  0101               	movlb	1	; () banked
 33495  01A3C8  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 33496  01A3CA  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 33497  01A3CE  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 33498  01A3D0  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 33499  01A3D2  0102               	movlb	2	; () banked
 33500  01A3D4  6F68               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 33501  01A3D6  0101               	movlb	1	; () banked
 33502  01A3D8  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 33503  01A3DA  0102               	movlb	2	; () banked
 33504  01A3DC  6F69               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 33505                           
 33506                           ; BSR set to: 2
 33507                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 33508  01A3DE  010E               	movlb	14	; () banked
 33509  01A3E0  9D38               	bcf	56,6,b	;volatile
 33510                           
 33511                           ; BSR set to: 14
 33512                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 33513  01A3E2  8D2E               	bsf	46,6,b	;volatile
 33514                           
 33515                           ; BSR set to: 14
 33516                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 33517  01A3E4  0E42               	movlw	low _TMR7_DefaultInterruptHandler
 33518  01A3E6  0101               	movlb	1	; () banked
 33519  01A3E8  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 33520  01A3EA  0EB3               	movlw	high _TMR7_DefaultInterruptHandler
 33521  01A3EC  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33522  01A3EE  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 33523  01A3F0  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33524  01A3F2  EC2C  F0D9         	call	_TMR7_SetInterruptHandler	;wreg free
 33525                           
 33526                           ;tmr7.c: 96: T7CON = 0x31;
 33527  01A3F6  0E31               	movlw	49
 33528  01A3F8  010F               	movlb	15	; () banked
 33529  01A3FA  6F30               	movwf	48,b	;volatile
 33530                           
 33531                           ; BSR set to: 15
 33532  01A3FC  0012               	return		;funcret
 33533  01A3FE                     __end_of_TMR7_Initialize:
 33534                           	opt stack 0
 33535                           tosu	equ	0xFFF
 33536                           tosh	equ	0xFFE
 33537                           tosl	equ	0xFFD
 33538                           pclath	equ	0xFFA
 33539                           tblptru	equ	0xFF8
 33540                           tblptrh	equ	0xFF7
 33541                           tblptrl	equ	0xFF6
 33542                           tablat	equ	0xFF5
 33543                           prodh	equ	0xFF4
 33544                           prodl	equ	0xFF3
 33545                           intcon	equ	0xFF2
 33546                           indf0	equ	0xFEF
 33547                           postinc0	equ	0xFEE
 33548                           fsr0h	equ	0xFEA
 33549                           fsr0l	equ	0xFE9
 33550                           wreg	equ	0xFE8
 33551                           indf1	equ	0xFE7
 33552                           postdec1	equ	0xFE5
 33553                           plusw1	equ	0xFE3
 33554                           fsr1h	equ	0xFE2
 33555                           fsr1l	equ	0xFE1
 33556                           indf2	equ	0xFDF
 33557                           postinc2	equ	0xFDE
 33558                           postdec2	equ	0xFDD
 33559                           plusw2	equ	0xFDB
 33560                           fsr2h	equ	0xFDA
 33561                           fsr2l	equ	0xFD9
 33562                           status	equ	0xFD8
 33563                           
 33564 ;; *************** function _TMR7_SetInterruptHandler *****************
 33565 ;; Defined at:
 33566 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 33567 ;; Parameters:    Size  Location     Type
 33568 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33569 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 33570 ;; Auto vars:     Size  Location     Type
 33571 ;;		None
 33572 ;; Return value:  Size  Location     Type
 33573 ;;                  1    wreg      void 
 33574 ;; Registers used:
 33575 ;;		wreg, status,2, status,0
 33576 ;; Tracked objects:
 33577 ;;		On entry : 0/0
 33578 ;;		On exit  : 0/0
 33579 ;;		Unchanged: 0/0
 33580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33581 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33584 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33585 ;;Total ram usage:        3 bytes
 33586 ;; Hardware stack levels used:    1
 33587 ;; Hardware stack levels required when called:   13
 33588 ;; This function calls:
 33589 ;;		Nothing
 33590 ;; This function is called by:
 33591 ;;		_TMR7_Initialize
 33592 ;;		_main
 33593 ;; This function uses a non-reentrant model
 33594 ;;
 33595                           
 33596                           	psect	text63
 33597  01B258                     __ptext63:
 33598                           	opt stack 0
 33599  01B258                     _TMR7_SetInterruptHandler:
 33600                           	opt stack 17
 33601                           
 33602                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 33603                           
 33604                           ; BSR set to: 15
 33605                           ;incstack = 0
 33606  01B258  C117  F24D         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 33607  01B25C  C118  F24E         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 33608  01B260  C119  F24F         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 33609  01B264  0012               	return		;funcret
 33610  01B266                     __end_of_TMR7_SetInterruptHandler:
 33611                           	opt stack 0
 33612                           tosu	equ	0xFFF
 33613                           tosh	equ	0xFFE
 33614                           tosl	equ	0xFFD
 33615                           pclath	equ	0xFFA
 33616                           tblptru	equ	0xFF8
 33617                           tblptrh	equ	0xFF7
 33618                           tblptrl	equ	0xFF6
 33619                           tablat	equ	0xFF5
 33620                           prodh	equ	0xFF4
 33621                           prodl	equ	0xFF3
 33622                           intcon	equ	0xFF2
 33623                           indf0	equ	0xFEF
 33624                           postinc0	equ	0xFEE
 33625                           fsr0h	equ	0xFEA
 33626                           fsr0l	equ	0xFE9
 33627                           wreg	equ	0xFE8
 33628                           indf1	equ	0xFE7
 33629                           postdec1	equ	0xFE5
 33630                           plusw1	equ	0xFE3
 33631                           fsr1h	equ	0xFE2
 33632                           fsr1l	equ	0xFE1
 33633                           indf2	equ	0xFDF
 33634                           postinc2	equ	0xFDE
 33635                           postdec2	equ	0xFDD
 33636                           plusw2	equ	0xFDB
 33637                           fsr2h	equ	0xFDA
 33638                           fsr2l	equ	0xFD9
 33639                           status	equ	0xFD8
 33640                           
 33641 ;; *************** function _TMR6_Initialize *****************
 33642 ;; Defined at:
 33643 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 33644 ;; Parameters:    Size  Location     Type
 33645 ;;		None
 33646 ;; Auto vars:     Size  Location     Type
 33647 ;;		None
 33648 ;; Return value:  Size  Location     Type
 33649 ;;                  1    wreg      void 
 33650 ;; Registers used:
 33651 ;;		wreg, status,2, status,0, cstack
 33652 ;; Tracked objects:
 33653 ;;		On entry : 0/0
 33654 ;;		On exit  : 0/0
 33655 ;;		Unchanged: 0/0
 33656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33661 ;;Total ram usage:        0 bytes
 33662 ;; Hardware stack levels used:    1
 33663 ;; Hardware stack levels required when called:   14
 33664 ;; This function calls:
 33665 ;;		_TMR6_SetInterruptHandler
 33666 ;; This function is called by:
 33667 ;;		_SYSTEM_Initialize
 33668 ;; This function uses a non-reentrant model
 33669 ;;
 33670                           
 33671                           	psect	text64
 33672  01AD56                     __ptext64:
 33673                           	opt stack 0
 33674  01AD56                     _TMR6_Initialize:
 33675                           	opt stack 15
 33676                           
 33677                           ;tmr6.c: 69: T6CLKCON = 0x04;
 33678                           
 33679                           ;incstack = 0
 33680  01AD56  0E04               	movlw	4
 33681  01AD58  6EB3               	movwf	4019,c	;volatile
 33682                           
 33683                           ;tmr6.c: 72: T6HLT = 0x20;
 33684  01AD5A  0E20               	movlw	32
 33685  01AD5C  6EB2               	movwf	4018,c	;volatile
 33686                           
 33687                           ;tmr6.c: 75: T6RST = 0x00;
 33688  01AD5E  0E00               	movlw	0
 33689  01AD60  6EB4               	movwf	4020,c	;volatile
 33690                           
 33691                           ;tmr6.c: 78: T6PR = 0xF1;
 33692  01AD62  0EF1               	movlw	241
 33693  01AD64  6EB0               	movwf	4016,c	;volatile
 33694                           
 33695                           ;tmr6.c: 81: T6TMR = 0x00;
 33696  01AD66  0E00               	movlw	0
 33697  01AD68  6EAF               	movwf	4015,c	;volatile
 33698                           
 33699                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 33700  01AD6A  010E               	movlb	14	; () banked
 33701  01AD6C  9B38               	bcf	56,5,b	;volatile
 33702                           
 33703                           ; BSR set to: 14
 33704                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 33705  01AD6E  8B2E               	bsf	46,5,b	;volatile
 33706                           
 33707                           ; BSR set to: 14
 33708                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 33709  01AD70  0E44               	movlw	low _TMR6_DefaultInterruptHandler
 33710  01AD72  0101               	movlb	1	; () banked
 33711  01AD74  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 33712  01AD76  0EB3               	movlw	high _TMR6_DefaultInterruptHandler
 33713  01AD78  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33714  01AD7A  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 33715  01AD7C  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33716  01AD7E  EC33  F0D9         	call	_TMR6_SetInterruptHandler	;wreg free
 33717                           
 33718                           ;tmr6.c: 93: T6CON = 0xBF;
 33719  01AD82  0EBF               	movlw	191
 33720  01AD84  6EB1               	movwf	4017,c	;volatile
 33721  01AD86  0012               	return		;funcret
 33722  01AD88                     __end_of_TMR6_Initialize:
 33723                           	opt stack 0
 33724                           tosu	equ	0xFFF
 33725                           tosh	equ	0xFFE
 33726                           tosl	equ	0xFFD
 33727                           pclath	equ	0xFFA
 33728                           tblptru	equ	0xFF8
 33729                           tblptrh	equ	0xFF7
 33730                           tblptrl	equ	0xFF6
 33731                           tablat	equ	0xFF5
 33732                           prodh	equ	0xFF4
 33733                           prodl	equ	0xFF3
 33734                           intcon	equ	0xFF2
 33735                           indf0	equ	0xFEF
 33736                           postinc0	equ	0xFEE
 33737                           fsr0h	equ	0xFEA
 33738                           fsr0l	equ	0xFE9
 33739                           wreg	equ	0xFE8
 33740                           indf1	equ	0xFE7
 33741                           postdec1	equ	0xFE5
 33742                           plusw1	equ	0xFE3
 33743                           fsr1h	equ	0xFE2
 33744                           fsr1l	equ	0xFE1
 33745                           indf2	equ	0xFDF
 33746                           postinc2	equ	0xFDE
 33747                           postdec2	equ	0xFDD
 33748                           plusw2	equ	0xFDB
 33749                           fsr2h	equ	0xFDA
 33750                           fsr2l	equ	0xFD9
 33751                           status	equ	0xFD8
 33752                           
 33753 ;; *************** function _TMR6_SetInterruptHandler *****************
 33754 ;; Defined at:
 33755 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 33756 ;; Parameters:    Size  Location     Type
 33757 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33758 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 33759 ;; Auto vars:     Size  Location     Type
 33760 ;;		None
 33761 ;; Return value:  Size  Location     Type
 33762 ;;                  1    wreg      void 
 33763 ;; Registers used:
 33764 ;;		wreg, status,2, status,0
 33765 ;; Tracked objects:
 33766 ;;		On entry : 0/0
 33767 ;;		On exit  : 0/0
 33768 ;;		Unchanged: 0/0
 33769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33770 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33773 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33774 ;;Total ram usage:        3 bytes
 33775 ;; Hardware stack levels used:    1
 33776 ;; Hardware stack levels required when called:   13
 33777 ;; This function calls:
 33778 ;;		Nothing
 33779 ;; This function is called by:
 33780 ;;		_TMR6_Initialize
 33781 ;;		_main
 33782 ;; This function uses a non-reentrant model
 33783 ;;
 33784                           
 33785                           	psect	text65
 33786  01B266                     __ptext65:
 33787                           	opt stack 0
 33788  01B266                     _TMR6_SetInterruptHandler:
 33789                           	opt stack 17
 33790                           
 33791                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 33792                           
 33793                           ;incstack = 0
 33794  01B266  C117  F253         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 33795  01B26A  C118  F254         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 33796  01B26E  C119  F255         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 33797  01B272  0012               	return		;funcret
 33798  01B274                     __end_of_TMR6_SetInterruptHandler:
 33799                           	opt stack 0
 33800                           tosu	equ	0xFFF
 33801                           tosh	equ	0xFFE
 33802                           tosl	equ	0xFFD
 33803                           pclath	equ	0xFFA
 33804                           tblptru	equ	0xFF8
 33805                           tblptrh	equ	0xFF7
 33806                           tblptrl	equ	0xFF6
 33807                           tablat	equ	0xFF5
 33808                           prodh	equ	0xFF4
 33809                           prodl	equ	0xFF3
 33810                           intcon	equ	0xFF2
 33811                           indf0	equ	0xFEF
 33812                           postinc0	equ	0xFEE
 33813                           fsr0h	equ	0xFEA
 33814                           fsr0l	equ	0xFE9
 33815                           wreg	equ	0xFE8
 33816                           indf1	equ	0xFE7
 33817                           postdec1	equ	0xFE5
 33818                           plusw1	equ	0xFE3
 33819                           fsr1h	equ	0xFE2
 33820                           fsr1l	equ	0xFE1
 33821                           indf2	equ	0xFDF
 33822                           postinc2	equ	0xFDE
 33823                           postdec2	equ	0xFDD
 33824                           plusw2	equ	0xFDB
 33825                           fsr2h	equ	0xFDA
 33826                           fsr2l	equ	0xFD9
 33827                           status	equ	0xFD8
 33828                           
 33829 ;; *************** function _TMR5_Initialize *****************
 33830 ;; Defined at:
 33831 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 33832 ;; Parameters:    Size  Location     Type
 33833 ;;		None
 33834 ;; Auto vars:     Size  Location     Type
 33835 ;;		None
 33836 ;; Return value:  Size  Location     Type
 33837 ;;                  1    wreg      void 
 33838 ;; Registers used:
 33839 ;;		wreg, status,2, status,0, cstack
 33840 ;; Tracked objects:
 33841 ;;		On entry : 0/0
 33842 ;;		On exit  : 0/0
 33843 ;;		Unchanged: 0/0
 33844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33847 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33848 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33849 ;;Total ram usage:        2 bytes
 33850 ;; Hardware stack levels used:    1
 33851 ;; Hardware stack levels required when called:   14
 33852 ;; This function calls:
 33853 ;;		_TMR5_SetInterruptHandler
 33854 ;; This function is called by:
 33855 ;;		_SYSTEM_Initialize
 33856 ;; This function uses a non-reentrant model
 33857 ;;
 33858                           
 33859                           	psect	text66
 33860  01A542                     __ptext66:
 33861                           	opt stack 0
 33862  01A542                     _TMR5_Initialize:
 33863                           	opt stack 15
 33864                           
 33865                           ;tmr5.c: 69: T5GCON = 0x00;
 33866                           
 33867                           ;incstack = 0
 33868  01A542  0E00               	movlw	0
 33869  01A544  6EC4               	movwf	4036,c	;volatile
 33870                           
 33871                           ;tmr5.c: 72: T5GATE = 0x00;
 33872  01A546  0E00               	movlw	0
 33873  01A548  6EC5               	movwf	4037,c	;volatile
 33874                           
 33875                           ;tmr5.c: 75: T5CLK = 0x01;
 33876  01A54A  0E01               	movlw	1
 33877  01A54C  6EC6               	movwf	4038,c	;volatile
 33878                           
 33879                           ;tmr5.c: 78: TMR5H = 0x00;
 33880  01A54E  0E00               	movlw	0
 33881  01A550  6EC2               	movwf	4034,c	;volatile
 33882                           
 33883                           ;tmr5.c: 81: TMR5L = 0x00;
 33884  01A552  0E00               	movlw	0
 33885  01A554  6EC1               	movwf	4033,c	;volatile
 33886                           
 33887                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 33888  01A556  50C1               	movf	4033,w,c	;volatile
 33889  01A558  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 33890  01A55C  0101               	movlb	1	; () banked
 33891  01A55E  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 33892  01A560  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 33893  01A564  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 33894  01A566  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 33895  01A568  0102               	movlb	2	; () banked
 33896  01A56A  6F66               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 33897  01A56C  0101               	movlb	1	; () banked
 33898  01A56E  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 33899  01A570  0102               	movlb	2	; () banked
 33900  01A572  6F67               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 33901                           
 33902                           ; BSR set to: 2
 33903                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 33904  01A574  010E               	movlb	14	; () banked
 33905  01A576  9938               	bcf	56,4,b	;volatile
 33906                           
 33907                           ; BSR set to: 14
 33908                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 33909  01A578  892E               	bsf	46,4,b	;volatile
 33910                           
 33911                           ; BSR set to: 14
 33912                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 33913  01A57A  0E46               	movlw	low _TMR5_DefaultInterruptHandler
 33914  01A57C  0101               	movlb	1	; () banked
 33915  01A57E  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 33916  01A580  0EB3               	movlw	high _TMR5_DefaultInterruptHandler
 33917  01A582  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33918  01A584  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 33919  01A586  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33920  01A588  EC3A  F0D9         	call	_TMR5_SetInterruptHandler	;wreg free
 33921                           
 33922                           ;tmr5.c: 96: T5CON = 0x13;
 33923  01A58C  0E13               	movlw	19
 33924  01A58E  6EC3               	movwf	4035,c	;volatile
 33925  01A590  0012               	return		;funcret
 33926  01A592                     __end_of_TMR5_Initialize:
 33927                           	opt stack 0
 33928                           tosu	equ	0xFFF
 33929                           tosh	equ	0xFFE
 33930                           tosl	equ	0xFFD
 33931                           pclath	equ	0xFFA
 33932                           tblptru	equ	0xFF8
 33933                           tblptrh	equ	0xFF7
 33934                           tblptrl	equ	0xFF6
 33935                           tablat	equ	0xFF5
 33936                           prodh	equ	0xFF4
 33937                           prodl	equ	0xFF3
 33938                           intcon	equ	0xFF2
 33939                           indf0	equ	0xFEF
 33940                           postinc0	equ	0xFEE
 33941                           fsr0h	equ	0xFEA
 33942                           fsr0l	equ	0xFE9
 33943                           wreg	equ	0xFE8
 33944                           indf1	equ	0xFE7
 33945                           postdec1	equ	0xFE5
 33946                           plusw1	equ	0xFE3
 33947                           fsr1h	equ	0xFE2
 33948                           fsr1l	equ	0xFE1
 33949                           indf2	equ	0xFDF
 33950                           postinc2	equ	0xFDE
 33951                           postdec2	equ	0xFDD
 33952                           plusw2	equ	0xFDB
 33953                           fsr2h	equ	0xFDA
 33954                           fsr2l	equ	0xFD9
 33955                           status	equ	0xFD8
 33956                           
 33957 ;; *************** function _TMR5_SetInterruptHandler *****************
 33958 ;; Defined at:
 33959 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 33960 ;; Parameters:    Size  Location     Type
 33961 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33962 ;;		 -> dimmingOnTimeCallback(1), TMR5_DefaultInterruptHandler(1), 
 33963 ;; Auto vars:     Size  Location     Type
 33964 ;;		None
 33965 ;; Return value:  Size  Location     Type
 33966 ;;                  1    wreg      void 
 33967 ;; Registers used:
 33968 ;;		wreg, status,2, status,0
 33969 ;; Tracked objects:
 33970 ;;		On entry : 0/0
 33971 ;;		On exit  : 0/0
 33972 ;;		Unchanged: 0/0
 33973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33974 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33977 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33978 ;;Total ram usage:        3 bytes
 33979 ;; Hardware stack levels used:    1
 33980 ;; Hardware stack levels required when called:   13
 33981 ;; This function calls:
 33982 ;;		Nothing
 33983 ;; This function is called by:
 33984 ;;		_TMR5_Initialize
 33985 ;;		_main
 33986 ;; This function uses a non-reentrant model
 33987 ;;
 33988                           
 33989                           	psect	text67
 33990  01B274                     __ptext67:
 33991                           	opt stack 0
 33992  01B274                     _TMR5_SetInterruptHandler:
 33993                           	opt stack 17
 33994                           
 33995                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 33996                           
 33997                           ;incstack = 0
 33998  01B274  C117  F24A         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 33999  01B278  C118  F24B         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 34000  01B27C  C119  F24C         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 34001  01B280  0012               	return		;funcret
 34002  01B282                     __end_of_TMR5_SetInterruptHandler:
 34003                           	opt stack 0
 34004                           tosu	equ	0xFFF
 34005                           tosh	equ	0xFFE
 34006                           tosl	equ	0xFFD
 34007                           pclath	equ	0xFFA
 34008                           tblptru	equ	0xFF8
 34009                           tblptrh	equ	0xFF7
 34010                           tblptrl	equ	0xFF6
 34011                           tablat	equ	0xFF5
 34012                           prodh	equ	0xFF4
 34013                           prodl	equ	0xFF3
 34014                           intcon	equ	0xFF2
 34015                           indf0	equ	0xFEF
 34016                           postinc0	equ	0xFEE
 34017                           fsr0h	equ	0xFEA
 34018                           fsr0l	equ	0xFE9
 34019                           wreg	equ	0xFE8
 34020                           indf1	equ	0xFE7
 34021                           postdec1	equ	0xFE5
 34022                           plusw1	equ	0xFE3
 34023                           fsr1h	equ	0xFE2
 34024                           fsr1l	equ	0xFE1
 34025                           indf2	equ	0xFDF
 34026                           postinc2	equ	0xFDE
 34027                           postdec2	equ	0xFDD
 34028                           plusw2	equ	0xFDB
 34029                           fsr2h	equ	0xFDA
 34030                           fsr2l	equ	0xFD9
 34031                           status	equ	0xFD8
 34032                           
 34033 ;; *************** function _TMR4_Initialize *****************
 34034 ;; Defined at:
 34035 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 34036 ;; Parameters:    Size  Location     Type
 34037 ;;		None
 34038 ;; Auto vars:     Size  Location     Type
 34039 ;;		None
 34040 ;; Return value:  Size  Location     Type
 34041 ;;                  1    wreg      void 
 34042 ;; Registers used:
 34043 ;;		wreg, status,2, status,0, cstack
 34044 ;; Tracked objects:
 34045 ;;		On entry : 0/0
 34046 ;;		On exit  : 0/0
 34047 ;;		Unchanged: 0/0
 34048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34053 ;;Total ram usage:        0 bytes
 34054 ;; Hardware stack levels used:    1
 34055 ;; Hardware stack levels required when called:   14
 34056 ;; This function calls:
 34057 ;;		_TMR4_SetInterruptHandler
 34058 ;; This function is called by:
 34059 ;;		_SYSTEM_Initialize
 34060 ;; This function uses a non-reentrant model
 34061 ;;
 34062                           
 34063                           	psect	text68
 34064  01ADE8                     __ptext68:
 34065                           	opt stack 0
 34066  01ADE8                     _TMR4_Initialize:
 34067                           	opt stack 15
 34068                           
 34069                           ;tmr4.c: 69: T4CLKCON = 0x04;
 34070                           
 34071                           ;incstack = 0
 34072  01ADE8  0E04               	movlw	4
 34073  01ADEA  6EB9               	movwf	4025,c	;volatile
 34074                           
 34075                           ;tmr4.c: 72: T4HLT = 0xA0;
 34076  01ADEC  0EA0               	movlw	160
 34077  01ADEE  6EB8               	movwf	4024,c	;volatile
 34078                           
 34079                           ;tmr4.c: 75: T4RST = 0x00;
 34080  01ADF0  0E00               	movlw	0
 34081  01ADF2  6EBA               	movwf	4026,c	;volatile
 34082                           
 34083                           ;tmr4.c: 78: T4PR = 0xE2;
 34084  01ADF4  0EE2               	movlw	226
 34085  01ADF6  6EB6               	movwf	4022,c	;volatile
 34086                           
 34087                           ;tmr4.c: 81: T4TMR = 0x00;
 34088  01ADF8  0E00               	movlw	0
 34089  01ADFA  6EB5               	movwf	4021,c	;volatile
 34090                           
 34091                           ;tmr4.c: 84: PIR5bits.TMR4IF = 0;
 34092  01ADFC  010E               	movlb	14	; () banked
 34093  01ADFE  9738               	bcf	56,3,b	;volatile
 34094                           
 34095                           ; BSR set to: 14
 34096                           ;tmr4.c: 87: PIE5bits.TMR4IE = 1;
 34097  01AE00  872E               	bsf	46,3,b	;volatile
 34098                           
 34099                           ; BSR set to: 14
 34100                           ;tmr4.c: 90: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
 34101  01AE02  0E48               	movlw	low _TMR4_DefaultInterruptHandler
 34102  01AE04  0101               	movlb	1	; () banked
 34103  01AE06  6F17               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 34104  01AE08  0EB3               	movlw	high _TMR4_DefaultInterruptHandler
 34105  01AE0A  6F18               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 34106  01AE0C  0E01               	movlw	low (_TMR4_DefaultInterruptHandler shr (0+16))
 34107  01AE0E  6F19               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 34108  01AE10  EC41  F0D9         	call	_TMR4_SetInterruptHandler	;wreg free
 34109                           
 34110                           ;tmr4.c: 93: T4CON = 0xFF;
 34111  01AE14  68B7               	setf	4023,c	;volatile
 34112  01AE16  0012               	return		;funcret
 34113  01AE18                     __end_of_TMR4_Initialize:
 34114                           	opt stack 0
 34115                           tosu	equ	0xFFF
 34116                           tosh	equ	0xFFE
 34117                           tosl	equ	0xFFD
 34118                           pclath	equ	0xFFA
 34119                           tblptru	equ	0xFF8
 34120                           tblptrh	equ	0xFF7
 34121                           tblptrl	equ	0xFF6
 34122                           tablat	equ	0xFF5
 34123                           prodh	equ	0xFF4
 34124                           prodl	equ	0xFF3
 34125                           intcon	equ	0xFF2
 34126                           indf0	equ	0xFEF
 34127                           postinc0	equ	0xFEE
 34128                           fsr0h	equ	0xFEA
 34129                           fsr0l	equ	0xFE9
 34130                           wreg	equ	0xFE8
 34131                           indf1	equ	0xFE7
 34132                           postdec1	equ	0xFE5
 34133                           plusw1	equ	0xFE3
 34134                           fsr1h	equ	0xFE2
 34135                           fsr1l	equ	0xFE1
 34136                           indf2	equ	0xFDF
 34137                           postinc2	equ	0xFDE
 34138                           postdec2	equ	0xFDD
 34139                           plusw2	equ	0xFDB
 34140                           fsr2h	equ	0xFDA
 34141                           fsr2l	equ	0xFD9
 34142                           status	equ	0xFD8
 34143                           
 34144 ;; *************** function _TMR4_SetInterruptHandler *****************
 34145 ;; Defined at:
 34146 ;;		line 193 in file "mcc_generated_files/tmr4.c"
 34147 ;; Parameters:    Size  Location     Type
 34148 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 34149 ;;		 -> writeEnergyToEEPROMCallback(1), TMR4_DefaultInterruptHandler(1), 
 34150 ;; Auto vars:     Size  Location     Type
 34151 ;;		None
 34152 ;; Return value:  Size  Location     Type
 34153 ;;                  1    wreg      void 
 34154 ;; Registers used:
 34155 ;;		wreg, status,2, status,0
 34156 ;; Tracked objects:
 34157 ;;		On entry : 0/0
 34158 ;;		On exit  : 0/0
 34159 ;;		Unchanged: 0/0
 34160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34161 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34164 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34165 ;;Total ram usage:        3 bytes
 34166 ;; Hardware stack levels used:    1
 34167 ;; Hardware stack levels required when called:   13
 34168 ;; This function calls:
 34169 ;;		Nothing
 34170 ;; This function is called by:
 34171 ;;		_TMR4_Initialize
 34172 ;;		_main
 34173 ;; This function uses a non-reentrant model
 34174 ;;
 34175                           
 34176                           	psect	text69
 34177  01B282                     __ptext69:
 34178                           	opt stack 0
 34179  01B282                     _TMR4_SetInterruptHandler:
 34180                           	opt stack 17
 34181                           
 34182                           ;tmr4.c: 194: TMR4_InterruptHandler = InterruptHandler;
 34183                           
 34184                           ;incstack = 0
 34185  01B282  C117  F244         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 34186  01B286  C118  F245         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 34187  01B28A  C119  F246         	movff	TMR4_SetInterruptHandler@InterruptHandler+2,_TMR4_InterruptHandler+2
 34188  01B28E  0012               	return		;funcret
 34189  01B290                     __end_of_TMR4_SetInterruptHandler:
 34190                           	opt stack 0
 34191                           tosu	equ	0xFFF
 34192                           tosh	equ	0xFFE
 34193                           tosl	equ	0xFFD
 34194                           pclath	equ	0xFFA
 34195                           tblptru	equ	0xFF8
 34196                           tblptrh	equ	0xFF7
 34197                           tblptrl	equ	0xFF6
 34198                           tablat	equ	0xFF5
 34199                           prodh	equ	0xFF4
 34200                           prodl	equ	0xFF3
 34201                           intcon	equ	0xFF2
 34202                           indf0	equ	0xFEF
 34203                           postinc0	equ	0xFEE
 34204                           fsr0h	equ	0xFEA
 34205                           fsr0l	equ	0xFE9
 34206                           wreg	equ	0xFE8
 34207                           indf1	equ	0xFE7
 34208                           postdec1	equ	0xFE5
 34209                           plusw1	equ	0xFE3
 34210                           fsr1h	equ	0xFE2
 34211                           fsr1l	equ	0xFE1
 34212                           indf2	equ	0xFDF
 34213                           postinc2	equ	0xFDE
 34214                           postdec2	equ	0xFDD
 34215                           plusw2	equ	0xFDB
 34216                           fsr2h	equ	0xFDA
 34217                           fsr2l	equ	0xFD9
 34218                           status	equ	0xFD8
 34219                           
 34220 ;; *************** function _PMD_Initialize *****************
 34221 ;; Defined at:
 34222 ;;		line 86 in file "mcc_generated_files/mcc.c"
 34223 ;; Parameters:    Size  Location     Type
 34224 ;;		None
 34225 ;; Auto vars:     Size  Location     Type
 34226 ;;		None
 34227 ;; Return value:  Size  Location     Type
 34228 ;;                  1    wreg      void 
 34229 ;; Registers used:
 34230 ;;		wreg, status,2
 34231 ;; Tracked objects:
 34232 ;;		On entry : 0/0
 34233 ;;		On exit  : 0/0
 34234 ;;		Unchanged: 0/0
 34235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34240 ;;Total ram usage:        0 bytes
 34241 ;; Hardware stack levels used:    1
 34242 ;; Hardware stack levels required when called:   13
 34243 ;; This function calls:
 34244 ;;		Nothing
 34245 ;; This function is called by:
 34246 ;;		_SYSTEM_Initialize
 34247 ;; This function uses a non-reentrant model
 34248 ;;
 34249                           
 34250                           	psect	text70
 34251  01B08E                     __ptext70:
 34252                           	opt stack 0
 34253  01B08E                     _PMD_Initialize:
 34254                           	opt stack 16
 34255                           
 34256                           ;mcc.c: 89: PMD0 = 0x1A;
 34257                           
 34258                           ;incstack = 0
 34259  01B08E  0E1A               	movlw	26
 34260  01B090  010E               	movlb	14	; () banked
 34261  01B092  6F4C               	movwf	76,b	;volatile
 34262                           
 34263                           ;mcc.c: 91: PMD1 = 0x00;
 34264  01B094  0E00               	movlw	0
 34265  01B096  6F4D               	movwf	77,b	;volatile
 34266                           
 34267                           ;mcc.c: 93: PMD2 = 0x2E;
 34268  01B098  0E2E               	movlw	46
 34269  01B09A  6F4E               	movwf	78,b	;volatile
 34270                           
 34271                           ;mcc.c: 95: PMD3 = 0x4F;
 34272  01B09C  0E4F               	movlw	79
 34273  01B09E  6F4F               	movwf	79,b	;volatile
 34274                           
 34275                           ;mcc.c: 97: PMD4 = 0x7F;
 34276  01B0A0  0E7F               	movlw	127
 34277  01B0A2  6F50               	movwf	80,b	;volatile
 34278                           
 34279                           ;mcc.c: 99: PMD5 = 0x74;
 34280  01B0A4  0E74               	movlw	116
 34281  01B0A6  6F51               	movwf	81,b	;volatile
 34282                           
 34283                           ; BSR set to: 14
 34284  01B0A8  0012               	return		;funcret
 34285  01B0AA                     __end_of_PMD_Initialize:
 34286                           	opt stack 0
 34287                           tosu	equ	0xFFF
 34288                           tosh	equ	0xFFE
 34289                           tosl	equ	0xFFD
 34290                           pclath	equ	0xFFA
 34291                           tblptru	equ	0xFF8
 34292                           tblptrh	equ	0xFF7
 34293                           tblptrl	equ	0xFF6
 34294                           tablat	equ	0xFF5
 34295                           prodh	equ	0xFF4
 34296                           prodl	equ	0xFF3
 34297                           intcon	equ	0xFF2
 34298                           indf0	equ	0xFEF
 34299                           postinc0	equ	0xFEE
 34300                           fsr0h	equ	0xFEA
 34301                           fsr0l	equ	0xFE9
 34302                           wreg	equ	0xFE8
 34303                           indf1	equ	0xFE7
 34304                           postdec1	equ	0xFE5
 34305                           plusw1	equ	0xFE3
 34306                           fsr1h	equ	0xFE2
 34307                           fsr1l	equ	0xFE1
 34308                           indf2	equ	0xFDF
 34309                           postinc2	equ	0xFDE
 34310                           postdec2	equ	0xFDD
 34311                           plusw2	equ	0xFDB
 34312                           fsr2h	equ	0xFDA
 34313                           fsr2l	equ	0xFD9
 34314                           status	equ	0xFD8
 34315                           
 34316 ;; *************** function _PIN_MANAGER_Initialize *****************
 34317 ;; Defined at:
 34318 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 34319 ;; Parameters:    Size  Location     Type
 34320 ;;		None
 34321 ;; Auto vars:     Size  Location     Type
 34322 ;;		None
 34323 ;; Return value:  Size  Location     Type
 34324 ;;                  1    wreg      void 
 34325 ;; Registers used:
 34326 ;;		wreg, status,2
 34327 ;; Tracked objects:
 34328 ;;		On entry : 0/0
 34329 ;;		On exit  : 0/0
 34330 ;;		Unchanged: 0/0
 34331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34336 ;;Total ram usage:        0 bytes
 34337 ;; Hardware stack levels used:    1
 34338 ;; Hardware stack levels required when called:   13
 34339 ;; This function calls:
 34340 ;;		Nothing
 34341 ;; This function is called by:
 34342 ;;		_SYSTEM_Initialize
 34343 ;; This function uses a non-reentrant model
 34344 ;;
 34345                           
 34346                           	psect	text71
 34347  01950C                     __ptext71:
 34348                           	opt stack 0
 34349  01950C                     _PIN_MANAGER_Initialize:
 34350                           	opt stack 16
 34351                           
 34352                           ;pin_manager.c: 62: LATE = 0x00;
 34353                           
 34354                           ; BSR set to: 14
 34355                           ;incstack = 0
 34356  01950C  0E00               	movlw	0
 34357  01950E  6E7D               	movwf	3965,c	;volatile
 34358                           
 34359                           ;pin_manager.c: 63: LATD = 0x00;
 34360  019510  0E00               	movlw	0
 34361  019512  6E7C               	movwf	3964,c	;volatile
 34362                           
 34363                           ;pin_manager.c: 64: LATA = 0x00;
 34364  019514  0E00               	movlw	0
 34365  019516  6E79               	movwf	3961,c	;volatile
 34366                           
 34367                           ;pin_manager.c: 65: LATF = 0x00;
 34368  019518  0E00               	movlw	0
 34369  01951A  6E7E               	movwf	3966,c	;volatile
 34370                           
 34371                           ;pin_manager.c: 66: LATB = 0x00;
 34372  01951C  0E00               	movlw	0
 34373  01951E  6E7A               	movwf	3962,c	;volatile
 34374                           
 34375                           ;pin_manager.c: 67: LATG = 0x00;
 34376  019520  0E00               	movlw	0
 34377  019522  6E7F               	movwf	3967,c	;volatile
 34378                           
 34379                           ;pin_manager.c: 68: LATC = 0x00;
 34380  019524  0E00               	movlw	0
 34381  019526  6E7B               	movwf	3963,c	;volatile
 34382                           
 34383                           ;pin_manager.c: 69: LATH = 0x00;
 34384  019528  0E00               	movlw	0
 34385  01952A  6E80               	movwf	3968,c	;volatile
 34386                           
 34387                           ;pin_manager.c: 74: TRISE = 0x04;
 34388  01952C  0E04               	movlw	4
 34389  01952E  6E85               	movwf	3973,c	;volatile
 34390                           
 34391                           ;pin_manager.c: 75: TRISF = 0x00;
 34392  019530  0E00               	movlw	0
 34393  019532  6E86               	movwf	3974,c	;volatile
 34394                           
 34395                           ;pin_manager.c: 76: TRISA = 0xBD;
 34396  019534  0EBD               	movlw	189
 34397  019536  6E81               	movwf	3969,c	;volatile
 34398                           
 34399                           ;pin_manager.c: 77: TRISG = 0x40;
 34400  019538  0E40               	movlw	64
 34401  01953A  6E87               	movwf	3975,c	;volatile
 34402                           
 34403                           ;pin_manager.c: 78: TRISB = 0x00;
 34404  01953C  0E00               	movlw	0
 34405  01953E  6E82               	movwf	3970,c	;volatile
 34406                           
 34407                           ;pin_manager.c: 79: TRISH = 0x00;
 34408  019540  0E00               	movlw	0
 34409  019542  6E88               	movwf	3976,c	;volatile
 34410                           
 34411                           ;pin_manager.c: 80: TRISC = 0xC0;
 34412  019544  0EC0               	movlw	192
 34413  019546  6E83               	movwf	3971,c	;volatile
 34414                           
 34415                           ;pin_manager.c: 81: TRISD = 0x00;
 34416  019548  0E00               	movlw	0
 34417  01954A  6E84               	movwf	3972,c	;volatile
 34418                           
 34419                           ;pin_manager.c: 86: ANSELD = 0x00;
 34420  01954C  0E00               	movlw	0
 34421  01954E  010E               	movlb	14	; () banked
 34422  019550  6FA7               	movwf	167,b	;volatile
 34423                           
 34424                           ;pin_manager.c: 87: ANSELB = 0x00;
 34425  019552  0E00               	movlw	0
 34426  019554  6F9A               	movwf	154,b	;volatile
 34427                           
 34428                           ;pin_manager.c: 88: ANSELE = 0x04;
 34429  019556  0E04               	movlw	4
 34430  019558  6FAF               	movwf	175,b	;volatile
 34431                           
 34432                           ;pin_manager.c: 89: ANSELG = 0x20;
 34433  01955A  0E20               	movlw	32
 34434  01955C  6FBC               	movwf	188,b	;volatile
 34435                           
 34436                           ;pin_manager.c: 90: ANSELF = 0x00;
 34437  01955E  0E00               	movlw	0
 34438  019560  6FB4               	movwf	180,b	;volatile
 34439                           
 34440                           ;pin_manager.c: 91: ANSELA = 0x9D;
 34441  019562  0E9D               	movlw	157
 34442  019564  6F92               	movwf	146,b	;volatile
 34443                           
 34444                           ;pin_manager.c: 96: WPUD = 0x00;
 34445  019566  0E00               	movlw	0
 34446  019568  6FA6               	movwf	166,b	;volatile
 34447                           
 34448                           ;pin_manager.c: 97: WPUF = 0x00;
 34449  01956A  0E00               	movlw	0
 34450  01956C  6FB3               	movwf	179,b	;volatile
 34451                           
 34452                           ;pin_manager.c: 98: WPUE = 0x00;
 34453  01956E  0E00               	movlw	0
 34454  019570  6FAE               	movwf	174,b	;volatile
 34455                           
 34456                           ;pin_manager.c: 99: WPUB = 0x00;
 34457  019572  0E00               	movlw	0
 34458  019574  6F99               	movwf	153,b	;volatile
 34459                           
 34460                           ;pin_manager.c: 100: WPUG = 0x00;
 34461  019576  0E00               	movlw	0
 34462  019578  6FBB               	movwf	187,b	;volatile
 34463                           
 34464                           ;pin_manager.c: 101: WPUA = 0x00;
 34465  01957A  0E00               	movlw	0
 34466  01957C  6F91               	movwf	145,b	;volatile
 34467                           
 34468                           ;pin_manager.c: 102: WPUC = 0x00;
 34469  01957E  0E00               	movlw	0
 34470  019580  6FA1               	movwf	161,b	;volatile
 34471                           
 34472                           ;pin_manager.c: 103: WPUH = 0x00;
 34473  019582  0E00               	movlw	0
 34474  019584  6FC0               	movwf	192,b	;volatile
 34475                           
 34476                           ;pin_manager.c: 108: ODCONE = 0x00;
 34477  019586  0E00               	movlw	0
 34478  019588  6FAD               	movwf	173,b	;volatile
 34479                           
 34480                           ;pin_manager.c: 109: ODCONF = 0x01;
 34481  01958A  0E01               	movlw	1
 34482  01958C  6FB2               	movwf	178,b	;volatile
 34483                           
 34484                           ;pin_manager.c: 110: ODCONA = 0x00;
 34485  01958E  0E00               	movlw	0
 34486  019590  6F90               	movwf	144,b	;volatile
 34487                           
 34488                           ;pin_manager.c: 111: ODCONG = 0x00;
 34489  019592  0E00               	movlw	0
 34490  019594  6FBA               	movwf	186,b	;volatile
 34491                           
 34492                           ;pin_manager.c: 112: ODCONB = 0x00;
 34493  019596  0E00               	movlw	0
 34494  019598  6F98               	movwf	152,b	;volatile
 34495                           
 34496                           ;pin_manager.c: 113: ODCONH = 0x00;
 34497  01959A  0E00               	movlw	0
 34498  01959C  6FBF               	movwf	191,b	;volatile
 34499                           
 34500                           ;pin_manager.c: 114: ODCONC = 0x00;
 34501  01959E  0E00               	movlw	0
 34502  0195A0  6FA0               	movwf	160,b	;volatile
 34503                           
 34504                           ;pin_manager.c: 115: ODCOND = 0x00;
 34505  0195A2  0E00               	movlw	0
 34506  0195A4  6FA5               	movwf	165,b	;volatile
 34507                           
 34508                           ; BSR set to: 14
 34509                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 34510  0195A6  698F               	setf	143,b	;volatile
 34511                           
 34512                           ; BSR set to: 14
 34513                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 34514  0195A8  6997               	setf	151,b	;volatile
 34515                           
 34516                           ; BSR set to: 14
 34517                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 34518  0195AA  699F               	setf	159,b	;volatile
 34519                           
 34520                           ; BSR set to: 14
 34521                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 34522  0195AC  69A4               	setf	164,b	;volatile
 34523                           
 34524                           ; BSR set to: 14
 34525                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 34526  0195AE  69AC               	setf	172,b	;volatile
 34527                           
 34528                           ; BSR set to: 14
 34529                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 34530  0195B0  69B1               	setf	177,b	;volatile
 34531                           
 34532                           ; BSR set to: 14
 34533                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 34534  0195B2  69B9               	setf	185,b	;volatile
 34535                           
 34536                           ; BSR set to: 14
 34537                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 34538  0195B4  69BE               	setf	190,b	;volatile
 34539                           
 34540                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 34541  0195B6  0E0E               	movlw	14
 34542  0195B8  6F89               	movwf	137,b	;volatile
 34543                           
 34544                           ;pin_manager.c: 137: SSP1CLKPPS = 0x17;
 34545  0195BA  0E17               	movlw	23
 34546  0195BC  6F19               	movwf	25,b	;volatile
 34547                           
 34548                           ;pin_manager.c: 138: INT0PPS = 0x05;
 34549  0195BE  0E05               	movlw	5
 34550  0195C0  010D               	movlb	13	; () banked
 34551  0195C2  6FF0               	movwf	240,b	;volatile
 34552                           
 34553                           ;pin_manager.c: 139: RC6PPS = 0x1A;
 34554  0195C4  0E1A               	movlw	26
 34555  0195C6  010E               	movlb	14	; () banked
 34556  0195C8  6F68               	movwf	104,b	;volatile
 34557                           
 34558                           ;pin_manager.c: 140: RX2PPS = 0x36;
 34559  0195CA  0E36               	movlw	54
 34560  0195CC  6F11               	movwf	17,b	;volatile
 34561                           
 34562                           ;pin_manager.c: 141: RC7PPS = 0x19;
 34563  0195CE  0E19               	movlw	25
 34564  0195D0  6F69               	movwf	105,b	;volatile
 34565                           
 34566                           ;pin_manager.c: 142: SSP1DATPPS = 0x16;
 34567  0195D2  0E16               	movlw	22
 34568  0195D4  6F1A               	movwf	26,b	;volatile
 34569                           
 34570                           ; BSR set to: 14
 34571  0195D6  0012               	return		;funcret
 34572  0195D8                     __end_of_PIN_MANAGER_Initialize:
 34573                           	opt stack 0
 34574                           tosu	equ	0xFFF
 34575                           tosh	equ	0xFFE
 34576                           tosl	equ	0xFFD
 34577                           pclath	equ	0xFFA
 34578                           tblptru	equ	0xFF8
 34579                           tblptrh	equ	0xFF7
 34580                           tblptrl	equ	0xFF6
 34581                           tablat	equ	0xFF5
 34582                           prodh	equ	0xFF4
 34583                           prodl	equ	0xFF3
 34584                           intcon	equ	0xFF2
 34585                           indf0	equ	0xFEF
 34586                           postinc0	equ	0xFEE
 34587                           fsr0h	equ	0xFEA
 34588                           fsr0l	equ	0xFE9
 34589                           wreg	equ	0xFE8
 34590                           indf1	equ	0xFE7
 34591                           postdec1	equ	0xFE5
 34592                           plusw1	equ	0xFE3
 34593                           fsr1h	equ	0xFE2
 34594                           fsr1l	equ	0xFE1
 34595                           indf2	equ	0xFDF
 34596                           postinc2	equ	0xFDE
 34597                           postdec2	equ	0xFDD
 34598                           plusw2	equ	0xFDB
 34599                           fsr2h	equ	0xFDA
 34600                           fsr2l	equ	0xFD9
 34601                           status	equ	0xFD8
 34602                           
 34603 ;; *************** function _OSCILLATOR_Initialize *****************
 34604 ;; Defined at:
 34605 ;;		line 68 in file "mcc_generated_files/mcc.c"
 34606 ;; Parameters:    Size  Location     Type
 34607 ;;		None
 34608 ;; Auto vars:     Size  Location     Type
 34609 ;;		None
 34610 ;; Return value:  Size  Location     Type
 34611 ;;                  1    wreg      void 
 34612 ;; Registers used:
 34613 ;;		wreg, status,2
 34614 ;; Tracked objects:
 34615 ;;		On entry : 0/0
 34616 ;;		On exit  : 0/0
 34617 ;;		Unchanged: 0/0
 34618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34623 ;;Total ram usage:        0 bytes
 34624 ;; Hardware stack levels used:    1
 34625 ;; Hardware stack levels required when called:   13
 34626 ;; This function calls:
 34627 ;;		Nothing
 34628 ;; This function is called by:
 34629 ;;		_SYSTEM_Initialize
 34630 ;; This function uses a non-reentrant model
 34631 ;;
 34632                           
 34633                           	psect	text72
 34634  01B0AA                     __ptext72:
 34635                           	opt stack 0
 34636  01B0AA                     _OSCILLATOR_Initialize:
 34637                           	opt stack 16
 34638                           
 34639                           ;mcc.c: 71: OSCCON1 = 0x20;
 34640                           
 34641                           ; BSR set to: 14
 34642                           ;incstack = 0
 34643  01B0AA  0E20               	movlw	32
 34644  01B0AC  010E               	movlb	14	; () banked
 34645  01B0AE  6F43               	movwf	67,b	;volatile
 34646                           
 34647                           ;mcc.c: 73: OSCCON3 = 0x00;
 34648  01B0B0  0E00               	movlw	0
 34649  01B0B2  6F45               	movwf	69,b	;volatile
 34650                           
 34651                           ;mcc.c: 75: OSCEN = 0x00;
 34652  01B0B4  0E00               	movlw	0
 34653  01B0B6  6F47               	movwf	71,b	;volatile
 34654                           
 34655                           ;mcc.c: 77: OSCFRQ = 0x02;
 34656  01B0B8  0E02               	movlw	2
 34657  01B0BA  6F49               	movwf	73,b	;volatile
 34658                           
 34659                           ;mcc.c: 79: OSCTUNE = 0x00;
 34660  01B0BC  0E00               	movlw	0
 34661  01B0BE  6F48               	movwf	72,b	;volatile
 34662  01B0C0                     
 34663                           ; BSR set to: 14
 34664                           
 34665                           ; BSR set to: 14
 34666                           ;mcc.c: 82: {
 34667  01B0C0  B146               	btfsc	70,0,b	;volatile
 34668  01B0C2  0012               	return	
 34669  01B0C4  D7FD               	goto	l65
 34670  01B0C6                     __end_of_OSCILLATOR_Initialize:
 34671                           	opt stack 0
 34672                           tosu	equ	0xFFF
 34673                           tosh	equ	0xFFE
 34674                           tosl	equ	0xFFD
 34675                           pclath	equ	0xFFA
 34676                           tblptru	equ	0xFF8
 34677                           tblptrh	equ	0xFF7
 34678                           tblptrl	equ	0xFF6
 34679                           tablat	equ	0xFF5
 34680                           prodh	equ	0xFF4
 34681                           prodl	equ	0xFF3
 34682                           intcon	equ	0xFF2
 34683                           indf0	equ	0xFEF
 34684                           postinc0	equ	0xFEE
 34685                           fsr0h	equ	0xFEA
 34686                           fsr0l	equ	0xFE9
 34687                           wreg	equ	0xFE8
 34688                           indf1	equ	0xFE7
 34689                           postdec1	equ	0xFE5
 34690                           plusw1	equ	0xFE3
 34691                           fsr1h	equ	0xFE2
 34692                           fsr1l	equ	0xFE1
 34693                           indf2	equ	0xFDF
 34694                           postinc2	equ	0xFDE
 34695                           postdec2	equ	0xFDD
 34696                           plusw2	equ	0xFDB
 34697                           fsr2h	equ	0xFDA
 34698                           fsr2l	equ	0xFD9
 34699                           status	equ	0xFD8
 34700                           
 34701 ;; *************** function _INTERRUPT_Initialize *****************
 34702 ;; Defined at:
 34703 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 34704 ;; Parameters:    Size  Location     Type
 34705 ;;		None
 34706 ;; Auto vars:     Size  Location     Type
 34707 ;;		None
 34708 ;; Return value:  Size  Location     Type
 34709 ;;                  1    wreg      void 
 34710 ;; Registers used:
 34711 ;;		None
 34712 ;; Tracked objects:
 34713 ;;		On entry : 0/0
 34714 ;;		On exit  : 0/0
 34715 ;;		Unchanged: 0/0
 34716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34721 ;;Total ram usage:        0 bytes
 34722 ;; Hardware stack levels used:    1
 34723 ;; Hardware stack levels required when called:   13
 34724 ;; This function calls:
 34725 ;;		Nothing
 34726 ;; This function is called by:
 34727 ;;		_SYSTEM_Initialize
 34728 ;; This function uses a non-reentrant model
 34729 ;;
 34730                           
 34731                           	psect	text73
 34732  01B0C6                     __ptext73:
 34733                           	opt stack 0
 34734  01B0C6                     _INTERRUPT_Initialize:
 34735                           	opt stack 16
 34736                           
 34737                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 34738                           
 34739                           ; BSR set to: 14
 34740                           ;incstack = 0
 34741  01B0C6  8AF2               	bsf	intcon,5,c	;volatile
 34742                           
 34743                           ;interrupt_manager.c: 60: IPR3bits.BCL1IP = 1;
 34744  01B0C8  010E               	movlb	14	; () banked
 34745  01B0CA  8322               	bsf	34,1,b	;volatile
 34746                           
 34747                           ;interrupt_manager.c: 63: IPR3bits.SSP1IP = 1;
 34748  01B0CC  8122               	bsf	34,0,b	;volatile
 34749                           
 34750                           ;interrupt_manager.c: 66: IPR5bits.TMR4IP = 1;
 34751  01B0CE  8724               	bsf	36,3,b	;volatile
 34752                           
 34753                           ;interrupt_manager.c: 69: IPR2bits.HLVDIP = 1;
 34754  01B0D0  8F21               	bsf	33,7,b	;volatile
 34755                           
 34756                           ;interrupt_manager.c: 72: IPR0bits.INT0IP = 1;
 34757  01B0D2  811F               	bsf	31,0,b	;volatile
 34758                           
 34759                           ;interrupt_manager.c: 75: IPR3bits.RC2IP = 1;
 34760  01B0D4  8F22               	bsf	34,7,b	;volatile
 34761                           
 34762                           ;interrupt_manager.c: 78: IPR5bits.TMR5IP = 1;
 34763  01B0D6  8924               	bsf	36,4,b	;volatile
 34764                           
 34765                           ;interrupt_manager.c: 81: IPR1bits.ADTIP = 1;
 34766  01B0D8  8320               	bsf	32,1,b	;volatile
 34767                           
 34768                           ;interrupt_manager.c: 85: IPR5bits.TMR6IP = 0;
 34769  01B0DA  9B24               	bcf	36,5,b	;volatile
 34770                           
 34771                           ;interrupt_manager.c: 88: IPR3bits.TX2IP = 0;
 34772  01B0DC  9D22               	bcf	34,6,b	;volatile
 34773                           
 34774                           ;interrupt_manager.c: 91: IPR5bits.TMR7IP = 0;
 34775  01B0DE  9D24               	bcf	36,6,b	;volatile
 34776                           
 34777                           ; BSR set to: 14
 34778  01B0E0  0012               	return		;funcret
 34779  01B0E2                     __end_of_INTERRUPT_Initialize:
 34780                           	opt stack 0
 34781                           tosu	equ	0xFFF
 34782                           tosh	equ	0xFFE
 34783                           tosl	equ	0xFFD
 34784                           pclath	equ	0xFFA
 34785                           tblptru	equ	0xFF8
 34786                           tblptrh	equ	0xFF7
 34787                           tblptrl	equ	0xFF6
 34788                           tablat	equ	0xFF5
 34789                           prodh	equ	0xFF4
 34790                           prodl	equ	0xFF3
 34791                           intcon	equ	0xFF2
 34792                           indf0	equ	0xFEF
 34793                           postinc0	equ	0xFEE
 34794                           fsr0h	equ	0xFEA
 34795                           fsr0l	equ	0xFE9
 34796                           wreg	equ	0xFE8
 34797                           indf1	equ	0xFE7
 34798                           postdec1	equ	0xFE5
 34799                           plusw1	equ	0xFE3
 34800                           fsr1h	equ	0xFE2
 34801                           fsr1l	equ	0xFE1
 34802                           indf2	equ	0xFDF
 34803                           postinc2	equ	0xFDE
 34804                           postdec2	equ	0xFDD
 34805                           plusw2	equ	0xFDB
 34806                           fsr2h	equ	0xFDA
 34807                           fsr2l	equ	0xFD9
 34808                           status	equ	0xFD8
 34809                           
 34810 ;; *************** function _I2C1_Initialize *****************
 34811 ;; Defined at:
 34812 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 34813 ;; Parameters:    Size  Location     Type
 34814 ;;		None
 34815 ;; Auto vars:     Size  Location     Type
 34816 ;;		None
 34817 ;; Return value:  Size  Location     Type
 34818 ;;                  1    wreg      void 
 34819 ;; Registers used:
 34820 ;;		wreg, status,2, status,0
 34821 ;; Tracked objects:
 34822 ;;		On entry : 0/0
 34823 ;;		On exit  : 0/0
 34824 ;;		Unchanged: 0/0
 34825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34830 ;;Total ram usage:        0 bytes
 34831 ;; Hardware stack levels used:    1
 34832 ;; Hardware stack levels required when called:   13
 34833 ;; This function calls:
 34834 ;;		Nothing
 34835 ;; This function is called by:
 34836 ;;		_SYSTEM_Initialize
 34837 ;; This function uses a non-reentrant model
 34838 ;;
 34839                           
 34840                           	psect	text74
 34841  01AC4E                     __ptext74:
 34842                           	opt stack 0
 34843  01AC4E                     _I2C1_Initialize:
 34844                           	opt stack 16
 34845                           
 34846                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
 34847                           
 34848                           ; BSR set to: 14
 34849                           ;incstack = 0
 34850  01AC4E  0E8F               	movlw	low _i2c1_tr_queue
 34851  01AC50  0102               	movlb	2	; () banked
 34852  01AC52  6F0B               	movwf	(_i2c1_object+2)& (0+255),b
 34853  01AC54  0E02               	movlw	high _i2c1_tr_queue
 34854  01AC56  6F0C               	movwf	(_i2c1_object+3)& (0+255),b
 34855                           
 34856                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
 34857  01AC58  0E8F               	movlw	low _i2c1_tr_queue
 34858  01AC5A  6F09               	movwf	_i2c1_object& (0+255),b
 34859  01AC5C  0E02               	movlw	high _i2c1_tr_queue
 34860  01AC5E  6F0A               	movwf	(_i2c1_object+1)& (0+255),b
 34861                           
 34862                           ; BSR set to: 2
 34863                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
 34864  01AC60  830D               	bsf	(_i2c1_object+4)& (0+255),1,b
 34865                           
 34866                           ; BSR set to: 2
 34867                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
 34868  01AC62  910D               	bcf	(_i2c1_object+4)& (0+255),0,b
 34869                           
 34870                           ; BSR set to: 2
 34871                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
 34872  01AC64  0E00               	movlw	0
 34873  01AC66  6F0F               	movwf	(_i2c1_object+6)& (0+255),b
 34874                           
 34875                           ; BSR set to: 2
 34876                           ;i2c1.c: 208: SSP1STAT = 0x00;
 34877  01AC68  0E00               	movlw	0
 34878  01AC6A  6E94               	movwf	3988,c	;volatile
 34879                           
 34880                           ; BSR set to: 2
 34881                           ;i2c1.c: 210: SSP1CON1 = 0x28;
 34882  01AC6C  0E28               	movlw	40
 34883  01AC6E  6E95               	movwf	3989,c	;volatile
 34884                           
 34885                           ; BSR set to: 2
 34886                           ;i2c1.c: 212: SSP1CON3 = 0x00;
 34887  01AC70  0E00               	movlw	0
 34888  01AC72  6E97               	movwf	3991,c	;volatile
 34889                           
 34890                           ; BSR set to: 2
 34891                           ;i2c1.c: 214: SSP1ADD = 0x3F;
 34892  01AC74  0E3F               	movlw	63
 34893  01AC76  6E92               	movwf	3986,c	;volatile
 34894                           
 34895                           ; BSR set to: 2
 34896                           ;i2c1.c: 217: PIR3bits.SSP1IF = 0;
 34897  01AC78  010E               	movlb	14	; () banked
 34898  01AC7A  9136               	bcf	54,0,b	;volatile
 34899                           
 34900                           ; BSR set to: 14
 34901                           ;i2c1.c: 218: PIR3bits.BCL1IF = 0;
 34902  01AC7C  9336               	bcf	54,1,b	;volatile
 34903                           
 34904                           ; BSR set to: 14
 34905                           ;i2c1.c: 221: PIE3bits.SSP1IE = 1;
 34906  01AC7E  812C               	bsf	44,0,b	;volatile
 34907                           
 34908                           ; BSR set to: 14
 34909                           ;i2c1.c: 222: PIE3bits.BCL1IE = 1;
 34910  01AC80  832C               	bsf	44,1,b	;volatile
 34911                           
 34912                           ; BSR set to: 14
 34913  01AC82  0012               	return		;funcret
 34914  01AC84                     __end_of_I2C1_Initialize:
 34915                           	opt stack 0
 34916                           tosu	equ	0xFFF
 34917                           tosh	equ	0xFFE
 34918                           tosl	equ	0xFFD
 34919                           pclath	equ	0xFFA
 34920                           tblptru	equ	0xFF8
 34921                           tblptrh	equ	0xFF7
 34922                           tblptrl	equ	0xFF6
 34923                           tablat	equ	0xFF5
 34924                           prodh	equ	0xFF4
 34925                           prodl	equ	0xFF3
 34926                           intcon	equ	0xFF2
 34927                           indf0	equ	0xFEF
 34928                           postinc0	equ	0xFEE
 34929                           fsr0h	equ	0xFEA
 34930                           fsr0l	equ	0xFE9
 34931                           wreg	equ	0xFE8
 34932                           indf1	equ	0xFE7
 34933                           postdec1	equ	0xFE5
 34934                           plusw1	equ	0xFE3
 34935                           fsr1h	equ	0xFE2
 34936                           fsr1l	equ	0xFE1
 34937                           indf2	equ	0xFDF
 34938                           postinc2	equ	0xFDE
 34939                           postdec2	equ	0xFDD
 34940                           plusw2	equ	0xFDB
 34941                           fsr2h	equ	0xFDA
 34942                           fsr2l	equ	0xFD9
 34943                           status	equ	0xFD8
 34944                           
 34945 ;; *************** function _HLVD_Initialize *****************
 34946 ;; Defined at:
 34947 ;;		line 60 in file "mcc_generated_files/hlvd.c"
 34948 ;; Parameters:    Size  Location     Type
 34949 ;;		None
 34950 ;; Auto vars:     Size  Location     Type
 34951 ;;		None
 34952 ;; Return value:  Size  Location     Type
 34953 ;;                  1    wreg      void 
 34954 ;; Registers used:
 34955 ;;		wreg, status,2
 34956 ;; Tracked objects:
 34957 ;;		On entry : 0/0
 34958 ;;		On exit  : 0/0
 34959 ;;		Unchanged: 0/0
 34960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34965 ;;Total ram usage:        0 bytes
 34966 ;; Hardware stack levels used:    1
 34967 ;; Hardware stack levels required when called:   13
 34968 ;; This function calls:
 34969 ;;		Nothing
 34970 ;; This function is called by:
 34971 ;;		_SYSTEM_Initialize
 34972 ;; This function uses a non-reentrant model
 34973 ;;
 34974                           
 34975                           	psect	text75
 34976  01B23A                     __ptext75:
 34977                           	opt stack 0
 34978  01B23A                     _HLVD_Initialize:
 34979                           	opt stack 16
 34980                           
 34981                           ;hlvd.c: 64: HLVDCON1 = 0x07;
 34982                           
 34983                           ; BSR set to: 14
 34984                           ;incstack = 0
 34985  01B23A  0E07               	movlw	7
 34986  01B23C  010E               	movlb	14	; () banked
 34987  01B23E  6FC3               	movwf	195,b	;volatile
 34988                           
 34989                           ;hlvd.c: 66: HLVDCON0 = 0x81;
 34990  01B240  0E81               	movlw	129
 34991  01B242  6FC2               	movwf	194,b	;volatile
 34992                           
 34993                           ; BSR set to: 14
 34994                           ;hlvd.c: 68: PIR2bits.HLVDIF = 0;
 34995  01B244  9F35               	bcf	53,7,b	;volatile
 34996                           
 34997                           ; BSR set to: 14
 34998                           ;hlvd.c: 70: PIE2bits.HLVDIE = 1;
 34999  01B246  8F2B               	bsf	43,7,b	;volatile
 35000                           
 35001                           ; BSR set to: 14
 35002  01B248  0012               	return		;funcret
 35003  01B24A                     __end_of_HLVD_Initialize:
 35004                           	opt stack 0
 35005                           tosu	equ	0xFFF
 35006                           tosh	equ	0xFFE
 35007                           tosl	equ	0xFFD
 35008                           pclath	equ	0xFFA
 35009                           tblptru	equ	0xFF8
 35010                           tblptrh	equ	0xFF7
 35011                           tblptrl	equ	0xFF6
 35012                           tablat	equ	0xFF5
 35013                           prodh	equ	0xFF4
 35014                           prodl	equ	0xFF3
 35015                           intcon	equ	0xFF2
 35016                           indf0	equ	0xFEF
 35017                           postinc0	equ	0xFEE
 35018                           fsr0h	equ	0xFEA
 35019                           fsr0l	equ	0xFE9
 35020                           wreg	equ	0xFE8
 35021                           indf1	equ	0xFE7
 35022                           postdec1	equ	0xFE5
 35023                           plusw1	equ	0xFE3
 35024                           fsr1h	equ	0xFE2
 35025                           fsr1l	equ	0xFE1
 35026                           indf2	equ	0xFDF
 35027                           postinc2	equ	0xFDE
 35028                           postdec2	equ	0xFDD
 35029                           plusw2	equ	0xFDB
 35030                           fsr2h	equ	0xFDA
 35031                           fsr2l	equ	0xFD9
 35032                           status	equ	0xFD8
 35033                           
 35034 ;; *************** function _FVR_Initialize *****************
 35035 ;; Defined at:
 35036 ;;		line 58 in file "mcc_generated_files/fvr.c"
 35037 ;; Parameters:    Size  Location     Type
 35038 ;;		None
 35039 ;; Auto vars:     Size  Location     Type
 35040 ;;		None
 35041 ;; Return value:  Size  Location     Type
 35042 ;;                  1    wreg      void 
 35043 ;; Registers used:
 35044 ;;		wreg, status,2
 35045 ;; Tracked objects:
 35046 ;;		On entry : 0/0
 35047 ;;		On exit  : 0/0
 35048 ;;		Unchanged: 0/0
 35049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35054 ;;Total ram usage:        0 bytes
 35055 ;; Hardware stack levels used:    1
 35056 ;; Hardware stack levels required when called:   13
 35057 ;; This function calls:
 35058 ;;		Nothing
 35059 ;; This function is called by:
 35060 ;;		_SYSTEM_Initialize
 35061 ;; This function uses a non-reentrant model
 35062 ;;
 35063                           
 35064                           	psect	text76
 35065  01B30C                     __ptext76:
 35066                           	opt stack 0
 35067  01B30C                     _FVR_Initialize:
 35068                           	opt stack 16
 35069                           
 35070                           ;fvr.c: 61: FVRCON = 0xA6;
 35071                           
 35072                           ; BSR set to: 14
 35073                           ;incstack = 0
 35074  01B30C  0EA6               	movlw	166
 35075  01B30E  010E               	movlb	14	; () banked
 35076  01B310  6FC4               	movwf	196,b	;volatile
 35077                           
 35078                           ; BSR set to: 14
 35079  01B312  0012               	return		;funcret
 35080  01B314                     __end_of_FVR_Initialize:
 35081                           	opt stack 0
 35082                           tosu	equ	0xFFF
 35083                           tosh	equ	0xFFE
 35084                           tosl	equ	0xFFD
 35085                           pclath	equ	0xFFA
 35086                           tblptru	equ	0xFF8
 35087                           tblptrh	equ	0xFF7
 35088                           tblptrl	equ	0xFF6
 35089                           tablat	equ	0xFF5
 35090                           prodh	equ	0xFF4
 35091                           prodl	equ	0xFF3
 35092                           intcon	equ	0xFF2
 35093                           indf0	equ	0xFEF
 35094                           postinc0	equ	0xFEE
 35095                           fsr0h	equ	0xFEA
 35096                           fsr0l	equ	0xFE9
 35097                           wreg	equ	0xFE8
 35098                           indf1	equ	0xFE7
 35099                           postdec1	equ	0xFE5
 35100                           plusw1	equ	0xFE3
 35101                           fsr1h	equ	0xFE2
 35102                           fsr1l	equ	0xFE1
 35103                           indf2	equ	0xFDF
 35104                           postinc2	equ	0xFDE
 35105                           postdec2	equ	0xFDD
 35106                           plusw2	equ	0xFDB
 35107                           fsr2h	equ	0xFDA
 35108                           fsr2l	equ	0xFD9
 35109                           status	equ	0xFD8
 35110                           
 35111 ;; *************** function _EXT_INT_Initialize *****************
 35112 ;; Defined at:
 35113 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 35114 ;; Parameters:    Size  Location     Type
 35115 ;;		None
 35116 ;; Auto vars:     Size  Location     Type
 35117 ;;		None
 35118 ;; Return value:  Size  Location     Type
 35119 ;;                  1    wreg      void 
 35120 ;; Registers used:
 35121 ;;		wreg, status,2, status,0, cstack
 35122 ;; Tracked objects:
 35123 ;;		On entry : 0/0
 35124 ;;		On exit  : 0/0
 35125 ;;		Unchanged: 0/0
 35126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35131 ;;Total ram usage:        0 bytes
 35132 ;; Hardware stack levels used:    1
 35133 ;; Hardware stack levels required when called:   14
 35134 ;; This function calls:
 35135 ;;		_INT0_SetInterruptHandler
 35136 ;; This function is called by:
 35137 ;;		_SYSTEM_Initialize
 35138 ;; This function uses a non-reentrant model
 35139 ;;
 35140                           
 35141                           	psect	text77
 35142  01B052                     __ptext77:
 35143                           	opt stack 0
 35144  01B052                     _EXT_INT_Initialize:
 35145                           	opt stack 15
 35146                           
 35147                           ;ext_int.c: 64: (PIR0bits.INT0IF = 0);
 35148                           
 35149                           ; BSR set to: 14
 35150                           ;incstack = 0
 35151  01B052  010E               	movlb	14	; () banked
 35152  01B054  9133               	bcf	51,0,b	;volatile
 35153                           
 35154                           ;ext_int.c: 65: (INTCONbits.INT0EDG = 1);
 35155  01B056  80F2               	bsf	intcon,0,c	;volatile
 35156                           
 35157                           ; BSR set to: 14
 35158                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 35159  01B058  0E4A               	movlw	low _INT0_DefaultInterruptHandler
 35160  01B05A  0101               	movlb	1	; () banked
 35161  01B05C  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 35162  01B05E  0EB3               	movlw	high _INT0_DefaultInterruptHandler
 35163  01B060  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 35164  01B062  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 35165  01B064  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 35166  01B066  EC48  F0D9         	call	_INT0_SetInterruptHandler	;wreg free
 35167                           
 35168                           ;ext_int.c: 68: (PIE0bits.INT0IE = 1);
 35169  01B06A  010E               	movlb	14	; () banked
 35170  01B06C  8129               	bsf	41,0,b	;volatile
 35171                           
 35172                           ; BSR set to: 14
 35173  01B06E  0012               	return		;funcret
 35174  01B070                     __end_of_EXT_INT_Initialize:
 35175                           	opt stack 0
 35176                           tosu	equ	0xFFF
 35177                           tosh	equ	0xFFE
 35178                           tosl	equ	0xFFD
 35179                           pclath	equ	0xFFA
 35180                           tblptru	equ	0xFF8
 35181                           tblptrh	equ	0xFF7
 35182                           tblptrl	equ	0xFF6
 35183                           tablat	equ	0xFF5
 35184                           prodh	equ	0xFF4
 35185                           prodl	equ	0xFF3
 35186                           intcon	equ	0xFF2
 35187                           indf0	equ	0xFEF
 35188                           postinc0	equ	0xFEE
 35189                           fsr0h	equ	0xFEA
 35190                           fsr0l	equ	0xFE9
 35191                           wreg	equ	0xFE8
 35192                           indf1	equ	0xFE7
 35193                           postdec1	equ	0xFE5
 35194                           plusw1	equ	0xFE3
 35195                           fsr1h	equ	0xFE2
 35196                           fsr1l	equ	0xFE1
 35197                           indf2	equ	0xFDF
 35198                           postinc2	equ	0xFDE
 35199                           postdec2	equ	0xFDD
 35200                           plusw2	equ	0xFDB
 35201                           fsr2h	equ	0xFDA
 35202                           fsr2l	equ	0xFD9
 35203                           status	equ	0xFD8
 35204                           
 35205 ;; *************** function _INT0_SetInterruptHandler *****************
 35206 ;; Defined at:
 35207 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 35208 ;; Parameters:    Size  Location     Type
 35209 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 35210 ;;		 -> dimmingOffTimeCallback(1), INT0_DefaultInterruptHandler(1), 
 35211 ;; Auto vars:     Size  Location     Type
 35212 ;;		None
 35213 ;; Return value:  Size  Location     Type
 35214 ;;                  1    wreg      void 
 35215 ;; Registers used:
 35216 ;;		wreg, status,2, status,0
 35217 ;; Tracked objects:
 35218 ;;		On entry : 0/0
 35219 ;;		On exit  : 0/0
 35220 ;;		Unchanged: 0/0
 35221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35222 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35225 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35226 ;;Total ram usage:        3 bytes
 35227 ;; Hardware stack levels used:    1
 35228 ;; Hardware stack levels required when called:   13
 35229 ;; This function calls:
 35230 ;;		Nothing
 35231 ;; This function is called by:
 35232 ;;		_EXT_INT_Initialize
 35233 ;;		_main
 35234 ;; This function uses a non-reentrant model
 35235 ;;
 35236                           
 35237                           	psect	text78
 35238  01B290                     __ptext78:
 35239                           	opt stack 0
 35240  01B290                     _INT0_SetInterruptHandler:
 35241                           	opt stack 15
 35242                           
 35243                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
 35244                           
 35245                           ; BSR set to: 14
 35246                           ;incstack = 0
 35247  01B290  C117  F247         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 35248  01B294  C118  F248         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 35249  01B298  C119  F249         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 35250  01B29C  0012               	return		;funcret
 35251  01B29E                     __end_of_INT0_SetInterruptHandler:
 35252                           	opt stack 0
 35253                           tosu	equ	0xFFF
 35254                           tosh	equ	0xFFE
 35255                           tosl	equ	0xFFD
 35256                           pclath	equ	0xFFA
 35257                           tblptru	equ	0xFF8
 35258                           tblptrh	equ	0xFF7
 35259                           tblptrl	equ	0xFF6
 35260                           tablat	equ	0xFF5
 35261                           prodh	equ	0xFF4
 35262                           prodl	equ	0xFF3
 35263                           intcon	equ	0xFF2
 35264                           indf0	equ	0xFEF
 35265                           postinc0	equ	0xFEE
 35266                           fsr0h	equ	0xFEA
 35267                           fsr0l	equ	0xFE9
 35268                           wreg	equ	0xFE8
 35269                           indf1	equ	0xFE7
 35270                           postdec1	equ	0xFE5
 35271                           plusw1	equ	0xFE3
 35272                           fsr1h	equ	0xFE2
 35273                           fsr1l	equ	0xFE1
 35274                           indf2	equ	0xFDF
 35275                           postinc2	equ	0xFDE
 35276                           postdec2	equ	0xFDD
 35277                           plusw2	equ	0xFDB
 35278                           fsr2h	equ	0xFDA
 35279                           fsr2l	equ	0xFD9
 35280                           status	equ	0xFD8
 35281                           
 35282 ;; *************** function _EUSART2_Initialize *****************
 35283 ;; Defined at:
 35284 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 35285 ;; Parameters:    Size  Location     Type
 35286 ;;		None
 35287 ;; Auto vars:     Size  Location     Type
 35288 ;;		None
 35289 ;; Return value:  Size  Location     Type
 35290 ;;                  1    wreg      void 
 35291 ;; Registers used:
 35292 ;;		wreg, status,2, status,0, cstack
 35293 ;; Tracked objects:
 35294 ;;		On entry : 0/0
 35295 ;;		On exit  : 0/0
 35296 ;;		Unchanged: 0/0
 35297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35302 ;;Total ram usage:        0 bytes
 35303 ;; Hardware stack levels used:    1
 35304 ;; Hardware stack levels required when called:   14
 35305 ;; This function calls:
 35306 ;;		_EUSART2_SetRxInterruptHandler
 35307 ;;		_EUSART2_SetTxInterruptHandler
 35308 ;; This function is called by:
 35309 ;;		_SYSTEM_Initialize
 35310 ;; This function uses a non-reentrant model
 35311 ;;
 35312                           
 35313                           	psect	text79
 35314  01A1CC                     __ptext79:
 35315                           	opt stack 0
 35316  01A1CC                     _EUSART2_Initialize:
 35317                           	opt stack 15
 35318                           
 35319                           ;eusart2.c: 83: PIE3bits.RC2IE = 0;
 35320                           
 35321                           ;incstack = 0
 35322  01A1CC  010E               	movlb	14	; () banked
 35323  01A1CE  9F2C               	bcf	44,7,b	;volatile
 35324                           
 35325                           ; BSR set to: 14
 35326                           ;eusart2.c: 84: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 35327  01A1D0  0EA0               	movlw	low _EUSART2_Receive_ISR
 35328  01A1D2  0101               	movlb	1	; () banked
 35329  01A1D4  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 35330  01A1D6  0E96               	movlw	high _EUSART2_Receive_ISR
 35331  01A1D8  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 35332  01A1DA  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 35333  01A1DC  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 35334  01A1DE  EC56  F0D9         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 35335                           
 35336                           ;eusart2.c: 85: PIE3bits.TX2IE = 0;
 35337  01A1E2  010E               	movlb	14	; () banked
 35338  01A1E4  9D2C               	bcf	44,6,b	;volatile
 35339                           
 35340                           ;eusart2.c: 86: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 35341  01A1E6  0E84               	movlw	low _EUSART2_Transmit_ISR
 35342  01A1E8  0101               	movlb	1	; () banked
 35343  01A1EA  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 35344  01A1EC  0EAC               	movlw	high _EUSART2_Transmit_ISR
 35345  01A1EE  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 35346  01A1F0  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 35347  01A1F2  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 35348  01A1F4  EC4F  F0D9         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 35349                           
 35350                           ;eusart2.c: 90: BAUD2CON = 0x08;
 35351  01A1F8  0E08               	movlw	8
 35352  01A1FA  010E               	movlb	14	; () banked
 35353  01A1FC  6FF7               	movwf	247,b	;volatile
 35354                           
 35355                           ; BSR set to: 14
 35356                           ;eusart2.c: 93: RC2STA = 0x90;
 35357  01A1FE  0E90               	movlw	144
 35358  01A200  6FF5               	movwf	245,b	;volatile
 35359                           
 35360                           ; BSR set to: 14
 35361                           ;eusart2.c: 96: TX2STA = 0x24;
 35362  01A202  0E24               	movlw	36
 35363  01A204  6FF6               	movwf	246,b	;volatile
 35364                           
 35365                           ; BSR set to: 14
 35366                           ;eusart2.c: 99: SP2BRGL = 0x8A;
 35367  01A206  0E8A               	movlw	138
 35368  01A208  6FF3               	movwf	243,b	;volatile
 35369                           
 35370                           ; BSR set to: 14
 35371                           ;eusart2.c: 102: SP2BRGH = 0x00;
 35372  01A20A  0E00               	movlw	0
 35373  01A20C  6FF4               	movwf	244,b	;volatile
 35374                           
 35375                           ; BSR set to: 14
 35376                           ;eusart2.c: 106: eusart2TxHead = 0;
 35377  01A20E  0E00               	movlw	0
 35378  01A210  0101               	movlb	1	; () banked
 35379  01A212  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 35380                           
 35381                           ; BSR set to: 1
 35382                           ;eusart2.c: 107: eusart2TxTail = 0;
 35383  01A214  0E00               	movlw	0
 35384  01A216  6FE0               	movwf	_eusart2TxTail& (0+255),b	;volatile
 35385                           
 35386                           ; BSR set to: 1
 35387                           ;eusart2.c: 108: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 35388  01A218  0E80               	movlw	128
 35389  01A21A  6FDF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 35390                           
 35391                           ; BSR set to: 1
 35392                           ;eusart2.c: 110: eusart2RxHead = 0;
 35393  01A21C  0E00               	movlw	0
 35394  01A21E  0100               	movlb	0	; () banked
 35395  01A220  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 35396                           
 35397                           ; BSR set to: 0
 35398                           ;eusart2.c: 111: eusart2RxTail = 0;
 35399  01A222  0E00               	movlw	0
 35400  01A224  0101               	movlb	1	; () banked
 35401  01A226  6FDE               	movwf	_eusart2RxTail& (0+255),b	;volatile
 35402                           
 35403                           ; BSR set to: 1
 35404                           ;eusart2.c: 112: eusart2RxCount = 0;
 35405  01A228  0E00               	movlw	0
 35406  01A22A  0102               	movlb	2	; () banked
 35407  01A22C  6F73               	movwf	_eusart2RxCount& (0+255),b	;volatile
 35408                           
 35409                           ; BSR set to: 2
 35410                           ;eusart2.c: 115: PIE3bits.RC2IE = 1;
 35411  01A22E  010E               	movlb	14	; () banked
 35412  01A230  8F2C               	bsf	44,7,b	;volatile
 35413                           
 35414                           ; BSR set to: 14
 35415  01A232  0012               	return		;funcret
 35416  01A234                     __end_of_EUSART2_Initialize:
 35417                           	opt stack 0
 35418                           tosu	equ	0xFFF
 35419                           tosh	equ	0xFFE
 35420                           tosl	equ	0xFFD
 35421                           pclath	equ	0xFFA
 35422                           tblptru	equ	0xFF8
 35423                           tblptrh	equ	0xFF7
 35424                           tblptrl	equ	0xFF6
 35425                           tablat	equ	0xFF5
 35426                           prodh	equ	0xFF4
 35427                           prodl	equ	0xFF3
 35428                           intcon	equ	0xFF2
 35429                           indf0	equ	0xFEF
 35430                           postinc0	equ	0xFEE
 35431                           fsr0h	equ	0xFEA
 35432                           fsr0l	equ	0xFE9
 35433                           wreg	equ	0xFE8
 35434                           indf1	equ	0xFE7
 35435                           postdec1	equ	0xFE5
 35436                           plusw1	equ	0xFE3
 35437                           fsr1h	equ	0xFE2
 35438                           fsr1l	equ	0xFE1
 35439                           indf2	equ	0xFDF
 35440                           postinc2	equ	0xFDE
 35441                           postdec2	equ	0xFDD
 35442                           plusw2	equ	0xFDB
 35443                           fsr2h	equ	0xFDA
 35444                           fsr2l	equ	0xFD9
 35445                           status	equ	0xFD8
 35446                           
 35447 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 35448 ;; Defined at:
 35449 ;;		line 270 in file "mcc_generated_files/eusart2.c"
 35450 ;; Parameters:    Size  Location     Type
 35451 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 35452 ;;		 -> EUSART2_Transmit_ISR(1), 
 35453 ;; Auto vars:     Size  Location     Type
 35454 ;;		None
 35455 ;; Return value:  Size  Location     Type
 35456 ;;                  1    wreg      void 
 35457 ;; Registers used:
 35458 ;;		wreg, status,2, status,0
 35459 ;; Tracked objects:
 35460 ;;		On entry : 0/0
 35461 ;;		On exit  : 0/0
 35462 ;;		Unchanged: 0/0
 35463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35464 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35467 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35468 ;;Total ram usage:        3 bytes
 35469 ;; Hardware stack levels used:    1
 35470 ;; Hardware stack levels required when called:   13
 35471 ;; This function calls:
 35472 ;;		Nothing
 35473 ;; This function is called by:
 35474 ;;		_EUSART2_Initialize
 35475 ;; This function uses a non-reentrant model
 35476 ;;
 35477                           
 35478                           	psect	text80
 35479  01B29E                     __ptext80:
 35480                           	opt stack 0
 35481  01B29E                     _EUSART2_SetTxInterruptHandler:
 35482                           	opt stack 15
 35483                           
 35484                           ;eusart2.c: 271: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 35485                           
 35486                           ; BSR set to: 14
 35487                           ;incstack = 0
 35488  01B29E  C117  F259         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 35489  01B2A2  C118  F25A         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 35490  01B2A6  C119  F25B         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 35491  01B2AA  0012               	return		;funcret
 35492  01B2AC                     __end_of_EUSART2_SetTxInterruptHandler:
 35493                           	opt stack 0
 35494                           tosu	equ	0xFFF
 35495                           tosh	equ	0xFFE
 35496                           tosl	equ	0xFFD
 35497                           pclath	equ	0xFFA
 35498                           tblptru	equ	0xFF8
 35499                           tblptrh	equ	0xFF7
 35500                           tblptrl	equ	0xFF6
 35501                           tablat	equ	0xFF5
 35502                           prodh	equ	0xFF4
 35503                           prodl	equ	0xFF3
 35504                           intcon	equ	0xFF2
 35505                           indf0	equ	0xFEF
 35506                           postinc0	equ	0xFEE
 35507                           fsr0h	equ	0xFEA
 35508                           fsr0l	equ	0xFE9
 35509                           wreg	equ	0xFE8
 35510                           indf1	equ	0xFE7
 35511                           postdec1	equ	0xFE5
 35512                           plusw1	equ	0xFE3
 35513                           fsr1h	equ	0xFE2
 35514                           fsr1l	equ	0xFE1
 35515                           indf2	equ	0xFDF
 35516                           postinc2	equ	0xFDE
 35517                           postdec2	equ	0xFDD
 35518                           plusw2	equ	0xFDB
 35519                           fsr2h	equ	0xFDA
 35520                           fsr2l	equ	0xFD9
 35521                           status	equ	0xFD8
 35522                           
 35523 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 35524 ;; Defined at:
 35525 ;;		line 274 in file "mcc_generated_files/eusart2.c"
 35526 ;; Parameters:    Size  Location     Type
 35527 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 35528 ;;		 -> EUSART2_Receive_ISR(1), 
 35529 ;; Auto vars:     Size  Location     Type
 35530 ;;		None
 35531 ;; Return value:  Size  Location     Type
 35532 ;;                  1    wreg      void 
 35533 ;; Registers used:
 35534 ;;		wreg, status,2, status,0
 35535 ;; Tracked objects:
 35536 ;;		On entry : 0/0
 35537 ;;		On exit  : 0/0
 35538 ;;		Unchanged: 0/0
 35539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35540 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35543 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35544 ;;Total ram usage:        3 bytes
 35545 ;; Hardware stack levels used:    1
 35546 ;; Hardware stack levels required when called:   13
 35547 ;; This function calls:
 35548 ;;		Nothing
 35549 ;; This function is called by:
 35550 ;;		_EUSART2_Initialize
 35551 ;; This function uses a non-reentrant model
 35552 ;;
 35553                           
 35554                           	psect	text81
 35555  01B2AC                     __ptext81:
 35556                           	opt stack 0
 35557  01B2AC                     _EUSART2_SetRxInterruptHandler:
 35558                           	opt stack 15
 35559                           
 35560                           ;eusart2.c: 275: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 35561                           
 35562                           ;incstack = 0
 35563  01B2AC  C117  F256         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 35564  01B2B0  C118  F257         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 35565  01B2B4  C119  F258         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 35566  01B2B8  0012               	return		;funcret
 35567  01B2BA                     __end_of_EUSART2_SetRxInterruptHandler:
 35568                           	opt stack 0
 35569                           tosu	equ	0xFFF
 35570                           tosh	equ	0xFFE
 35571                           tosl	equ	0xFFD
 35572                           pclath	equ	0xFFA
 35573                           tblptru	equ	0xFF8
 35574                           tblptrh	equ	0xFF7
 35575                           tblptrl	equ	0xFF6
 35576                           tablat	equ	0xFF5
 35577                           prodh	equ	0xFF4
 35578                           prodl	equ	0xFF3
 35579                           intcon	equ	0xFF2
 35580                           indf0	equ	0xFEF
 35581                           postinc0	equ	0xFEE
 35582                           fsr0h	equ	0xFEA
 35583                           fsr0l	equ	0xFE9
 35584                           wreg	equ	0xFE8
 35585                           indf1	equ	0xFE7
 35586                           postdec1	equ	0xFE5
 35587                           plusw1	equ	0xFE3
 35588                           fsr1h	equ	0xFE2
 35589                           fsr1l	equ	0xFE1
 35590                           indf2	equ	0xFDF
 35591                           postinc2	equ	0xFDE
 35592                           postdec2	equ	0xFDD
 35593                           plusw2	equ	0xFDB
 35594                           fsr2h	equ	0xFDA
 35595                           fsr2l	equ	0xFD9
 35596                           status	equ	0xFD8
 35597                           
 35598 ;; *************** function _ADCC_Initialize *****************
 35599 ;; Defined at:
 35600 ;;		line 63 in file "mcc_generated_files/adcc.c"
 35601 ;; Parameters:    Size  Location     Type
 35602 ;;		None
 35603 ;; Auto vars:     Size  Location     Type
 35604 ;;		None
 35605 ;; Return value:  Size  Location     Type
 35606 ;;                  1    wreg      void 
 35607 ;; Registers used:
 35608 ;;		wreg, status,2, status,0, cstack
 35609 ;; Tracked objects:
 35610 ;;		On entry : 0/0
 35611 ;;		On exit  : 0/0
 35612 ;;		Unchanged: 0/0
 35613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35618 ;;Total ram usage:        0 bytes
 35619 ;; Hardware stack levels used:    1
 35620 ;; Hardware stack levels required when called:   14
 35621 ;; This function calls:
 35622 ;;		_ADCC_SetADTIInterruptHandler
 35623 ;; This function is called by:
 35624 ;;		_SYSTEM_Initialize
 35625 ;; This function uses a non-reentrant model
 35626 ;;
 35627                           
 35628                           	psect	text82
 35629  01A028                     __ptext82:
 35630                           	opt stack 0
 35631  01A028                     _ADCC_Initialize:
 35632                           	opt stack 15
 35633                           
 35634                           ;adcc.c: 67: ADLTHL = 0x00;
 35635                           
 35636                           ;incstack = 0
 35637  01A028  0E00               	movlw	0
 35638  01A02A  6E6A               	movwf	3946,c	;volatile
 35639                           
 35640                           ;adcc.c: 69: ADLTHH = 0x00;
 35641  01A02C  0E00               	movlw	0
 35642  01A02E  6E6B               	movwf	3947,c	;volatile
 35643                           
 35644                           ;adcc.c: 71: ADUTHL = 0x00;
 35645  01A030  0E00               	movlw	0
 35646  01A032  6E6C               	movwf	3948,c	;volatile
 35647                           
 35648                           ;adcc.c: 73: ADUTHH = 0x00;
 35649  01A034  0E00               	movlw	0
 35650  01A036  6E6D               	movwf	3949,c	;volatile
 35651                           
 35652                           ;adcc.c: 75: ADSTPTL = 0x00;
 35653  01A038  0E00               	movlw	0
 35654  01A03A  6E68               	movwf	3944,c	;volatile
 35655                           
 35656                           ;adcc.c: 77: ADSTPTH = 0x00;
 35657  01A03C  0E00               	movlw	0
 35658  01A03E  6E69               	movwf	3945,c	;volatile
 35659                           
 35660                           ;adcc.c: 79: ADRPT = 0xFF;
 35661  01A040  6866               	setf	3942,c	;volatile
 35662                           
 35663                           ;adcc.c: 81: ADPCH = 0x00;
 35664  01A042  0E00               	movlw	0
 35665  01A044  010F               	movlb	15	; () banked
 35666  01A046  6F5F               	movwf	95,b	;volatile
 35667                           
 35668                           ;adcc.c: 83: ADCAP = 0x00;
 35669  01A048  0E00               	movlw	0
 35670  01A04A  6F5D               	movwf	93,b	;volatile
 35671                           
 35672                           ;adcc.c: 85: ADCON1 = 0x00;
 35673  01A04C  0E00               	movlw	0
 35674  01A04E  6F59               	movwf	89,b	;volatile
 35675                           
 35676                           ;adcc.c: 87: ADCON2 = 0x04;
 35677  01A050  0E04               	movlw	4
 35678  01A052  6F5A               	movwf	90,b	;volatile
 35679                           
 35680                           ;adcc.c: 89: ADCON3 = 0x5F;
 35681  01A054  0E5F               	movlw	95
 35682  01A056  6F5B               	movwf	91,b	;volatile
 35683                           
 35684                           ;adcc.c: 91: ADSTAT = 0x00;
 35685  01A058  0E00               	movlw	0
 35686  01A05A  6E65               	movwf	3941,c	;volatile
 35687                           
 35688                           ;adcc.c: 93: ADREF = 0x12;
 35689  01A05C  0E12               	movlw	18
 35690  01A05E  6F58               	movwf	88,b	;volatile
 35691                           
 35692                           ;adcc.c: 95: ADACT = 0x00;
 35693  01A060  0E00               	movlw	0
 35694  01A062  6F56               	movwf	86,b	;volatile
 35695                           
 35696                           ;adcc.c: 97: ADCLK = 0x1F;
 35697  01A064  0E1F               	movlw	31
 35698  01A066  6F57               	movwf	87,b	;volatile
 35699                           
 35700                           ;adcc.c: 99: ADCON0 = 0xC4;
 35701  01A068  0EC4               	movlw	196
 35702  01A06A  6E60               	movwf	3936,c	;volatile
 35703                           
 35704                           ; BSR set to: 15
 35705                           ;adcc.c: 101: ADACQ = 0xFF;
 35706  01A06C  695C               	setf	92,b	;volatile
 35707                           
 35708                           ; BSR set to: 15
 35709                           ;adcc.c: 104: ADCON2bits.ADCRS = 7;
 35710  01A06E  895A               	bsf	90,4,b	;volatile
 35711  01A070  8B5A               	bsf	90,5,b	;volatile
 35712  01A072  8D5A               	bsf	90,6,b	;volatile
 35713                           
 35714                           ;adcc.c: 105: ADCAP = 20;
 35715  01A074  0E14               	movlw	20
 35716  01A076  6F5D               	movwf	93,b	;volatile
 35717                           
 35718                           ; BSR set to: 15
 35719                           ;adcc.c: 108: PIR1bits.ADTIF = 0;
 35720  01A078  010E               	movlb	14	; () banked
 35721  01A07A  9334               	bcf	52,1,b	;volatile
 35722                           
 35723                           ; BSR set to: 14
 35724                           ;adcc.c: 110: PIE1bits.ADTIE = 1;
 35725  01A07C  832A               	bsf	42,1,b	;volatile
 35726                           
 35727                           ; BSR set to: 14
 35728                           ;adcc.c: 112: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 35729  01A07E  0E4C               	movlw	low _ADCC_DefaultInterruptHandler
 35730  01A080  0101               	movlb	1	; () banked
 35731  01A082  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 35732  01A084  0EB3               	movlw	high _ADCC_DefaultInterruptHandler
 35733  01A086  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 35734  01A088  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35735  01A08A  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 35736  01A08C  EC5D  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 35737  01A090  0012               	return		;funcret
 35738  01A092                     __end_of_ADCC_Initialize:
 35739                           	opt stack 0
 35740                           tosu	equ	0xFFF
 35741                           tosh	equ	0xFFE
 35742                           tosl	equ	0xFFD
 35743                           pclath	equ	0xFFA
 35744                           tblptru	equ	0xFF8
 35745                           tblptrh	equ	0xFF7
 35746                           tblptrl	equ	0xFF6
 35747                           tablat	equ	0xFF5
 35748                           prodh	equ	0xFF4
 35749                           prodl	equ	0xFF3
 35750                           intcon	equ	0xFF2
 35751                           indf0	equ	0xFEF
 35752                           postinc0	equ	0xFEE
 35753                           fsr0h	equ	0xFEA
 35754                           fsr0l	equ	0xFE9
 35755                           wreg	equ	0xFE8
 35756                           indf1	equ	0xFE7
 35757                           postdec1	equ	0xFE5
 35758                           plusw1	equ	0xFE3
 35759                           fsr1h	equ	0xFE2
 35760                           fsr1l	equ	0xFE1
 35761                           indf2	equ	0xFDF
 35762                           postinc2	equ	0xFDE
 35763                           postdec2	equ	0xFDD
 35764                           plusw2	equ	0xFDB
 35765                           fsr2h	equ	0xFDA
 35766                           fsr2l	equ	0xFD9
 35767                           status	equ	0xFD8
 35768                           
 35769 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 35770 ;; Defined at:
 35771 ;;		line 310 in file "mcc_generated_files/adcc.c"
 35772 ;; Parameters:    Size  Location     Type
 35773 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 35774 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 35775 ;; Auto vars:     Size  Location     Type
 35776 ;;		None
 35777 ;; Return value:  Size  Location     Type
 35778 ;;                  1    wreg      void 
 35779 ;; Registers used:
 35780 ;;		wreg, status,2, status,0
 35781 ;; Tracked objects:
 35782 ;;		On entry : 0/0
 35783 ;;		On exit  : 0/0
 35784 ;;		Unchanged: 0/0
 35785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35786 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35789 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35790 ;;Total ram usage:        3 bytes
 35791 ;; Hardware stack levels used:    1
 35792 ;; Hardware stack levels required when called:   13
 35793 ;; This function calls:
 35794 ;;		Nothing
 35795 ;; This function is called by:
 35796 ;;		_ADCC_Initialize
 35797 ;;		_main
 35798 ;; This function uses a non-reentrant model
 35799 ;;
 35800                           
 35801                           	psect	text83
 35802  01B2BA                     __ptext83:
 35803                           	opt stack 0
 35804  01B2BA                     _ADCC_SetADTIInterruptHandler:
 35805                           	opt stack 15
 35806                           
 35807                           ;adcc.c: 311: ADCC_ADTI_InterruptHandler = InterruptHandler;
 35808                           
 35809                           ;incstack = 0
 35810  01B2BA  C117  F250         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 35811  01B2BE  C118  F251         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 35812  01B2C2  C119  F252         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 35813  01B2C6  0012               	return		;funcret
 35814  01B2C8                     __end_of_ADCC_SetADTIInterruptHandler:
 35815                           	opt stack 0
 35816                           tosu	equ	0xFFF
 35817                           tosh	equ	0xFFE
 35818                           tosl	equ	0xFFD
 35819                           pclath	equ	0xFFA
 35820                           tblptru	equ	0xFF8
 35821                           tblptrh	equ	0xFF7
 35822                           tblptrl	equ	0xFF6
 35823                           tablat	equ	0xFF5
 35824                           prodh	equ	0xFF4
 35825                           prodl	equ	0xFF3
 35826                           intcon	equ	0xFF2
 35827                           indf0	equ	0xFEF
 35828                           postinc0	equ	0xFEE
 35829                           fsr0h	equ	0xFEA
 35830                           fsr0l	equ	0xFE9
 35831                           wreg	equ	0xFE8
 35832                           indf1	equ	0xFE7
 35833                           postdec1	equ	0xFE5
 35834                           plusw1	equ	0xFE3
 35835                           fsr1h	equ	0xFE2
 35836                           fsr1l	equ	0xFE1
 35837                           indf2	equ	0xFDF
 35838                           postinc2	equ	0xFDE
 35839                           postdec2	equ	0xFDD
 35840                           plusw2	equ	0xFDB
 35841                           fsr2h	equ	0xFDA
 35842                           fsr2l	equ	0xFD9
 35843                           status	equ	0xFD8
 35844                           
 35845 ;; *************** function _OLED_UpdateFromRAMBuffer *****************
 35846 ;; Defined at:
 35847 ;;		line 313 in file "oled.c"
 35848 ;; Parameters:    Size  Location     Type
 35849 ;;		None
 35850 ;; Auto vars:     Size  Location     Type
 35851 ;;		None
 35852 ;; Return value:  Size  Location     Type
 35853 ;;                  1    wreg      void 
 35854 ;; Registers used:
 35855 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35856 ;; Tracked objects:
 35857 ;;		On entry : 0/0
 35858 ;;		On exit  : 0/0
 35859 ;;		Unchanged: 0/0
 35860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35865 ;;Total ram usage:        0 bytes
 35866 ;; Hardware stack levels used:    1
 35867 ;; Hardware stack levels required when called:   18
 35868 ;; This function calls:
 35869 ;;		_OLED_Clear
 35870 ;;		_OLED_WriteString
 35871 ;;		_OLED_YX
 35872 ;; This function is called by:
 35873 ;;		_main
 35874 ;; This function uses a non-reentrant model
 35875 ;;
 35876                           
 35877                           	psect	text84
 35878  019F4C                     __ptext84:
 35879                           	opt stack 0
 35880  019F4C                     _OLED_UpdateFromRAMBuffer:
 35881                           	opt stack 12
 35882                           
 35883                           ;oled.c: 315: OLED_Clear();
 35884                           
 35885                           ;incstack = 0
 35886  019F4C  EC85  F0D4         	call	_OLED_Clear	;wreg free
 35887                           
 35888                           ;oled.c: 316: OLED_YX(0,0);
 35889  019F50  0E00               	movlw	0
 35890  019F52  0101               	movlb	1	; () banked
 35891  019F54  6F2B               	movwf	OLED_YX@Column& (0+255),b
 35892  019F56  0E00               	movlw	0
 35893  019F58  EC40  F0D5         	call	_OLED_YX
 35894                           
 35895                           ;oled.c: 317: OLED_WriteString(OLED_RAM_Buffer.line0);
 35896  019F5C  0E40               	movlw	low _OLED_RAM_Buffer
 35897  019F5E  0101               	movlb	1	; () banked
 35898  019F60  6F38               	movwf	OLED_WriteString@s& (0+255),b
 35899  019F62  0E03               	movlw	high _OLED_RAM_Buffer
 35900  019F64  6F39               	movwf	(OLED_WriteString@s+1)& (0+255),b
 35901  019F66  ECA9  F0D1         	call	_OLED_WriteString	;wreg free
 35902                           
 35903                           ;oled.c: 318: OLED_YX(1,0);
 35904  019F6A  0E00               	movlw	0
 35905  019F6C  0101               	movlb	1	; () banked
 35906  019F6E  6F2B               	movwf	OLED_YX@Column& (0+255),b
 35907  019F70  0E01               	movlw	1
 35908  019F72  EC40  F0D5         	call	_OLED_YX
 35909                           
 35910                           ;oled.c: 319: OLED_WriteString(OLED_RAM_Buffer.line1);
 35911  019F76  0E50               	movlw	low (_OLED_RAM_Buffer+16)
 35912  019F78  0101               	movlb	1	; () banked
 35913  019F7A  6F38               	movwf	OLED_WriteString@s& (0+255),b
 35914  019F7C  0E03               	movlw	high (_OLED_RAM_Buffer+16)
 35915  019F7E  6F39               	movwf	(OLED_WriteString@s+1)& (0+255),b
 35916  019F80  ECA9  F0D1         	call	_OLED_WriteString	;wreg free
 35917                           
 35918                           ;oled.c: 320: OLED_YX(2,0);
 35919  019F84  0E00               	movlw	0
 35920  019F86  0101               	movlb	1	; () banked
 35921  019F88  6F2B               	movwf	OLED_YX@Column& (0+255),b
 35922  019F8A  0E02               	movlw	2
 35923  019F8C  EC40  F0D5         	call	_OLED_YX
 35924                           
 35925                           ;oled.c: 321: OLED_WriteString(OLED_RAM_Buffer.line2);
 35926  019F90  0E60               	movlw	low (_OLED_RAM_Buffer+32)
 35927  019F92  0101               	movlb	1	; () banked
 35928  019F94  6F38               	movwf	OLED_WriteString@s& (0+255),b
 35929  019F96  0E03               	movlw	high (_OLED_RAM_Buffer+32)
 35930  019F98  6F39               	movwf	(OLED_WriteString@s+1)& (0+255),b
 35931  019F9A  ECA9  F0D1         	call	_OLED_WriteString	;wreg free
 35932                           
 35933                           ;oled.c: 322: OLED_YX(3,0);
 35934  019F9E  0E00               	movlw	0
 35935  019FA0  0101               	movlb	1	; () banked
 35936  019FA2  6F2B               	movwf	OLED_YX@Column& (0+255),b
 35937  019FA4  0E03               	movlw	3
 35938  019FA6  EC40  F0D5         	call	_OLED_YX
 35939                           
 35940                           ;oled.c: 323: OLED_WriteString(OLED_RAM_Buffer.line3);
 35941  019FAA  0E70               	movlw	low (_OLED_RAM_Buffer+48)
 35942  019FAC  0101               	movlb	1	; () banked
 35943  019FAE  6F38               	movwf	OLED_WriteString@s& (0+255),b
 35944  019FB0  0E03               	movlw	high (_OLED_RAM_Buffer+48)
 35945  019FB2  6F39               	movwf	(OLED_WriteString@s+1)& (0+255),b
 35946  019FB4  ECA9  F0D1         	call	_OLED_WriteString	;wreg free
 35947  019FB8  0012               	return		;funcret
 35948  019FBA                     __end_of_OLED_UpdateFromRAMBuffer:
 35949                           	opt stack 0
 35950                           tosu	equ	0xFFF
 35951                           tosh	equ	0xFFE
 35952                           tosl	equ	0xFFD
 35953                           pclath	equ	0xFFA
 35954                           tblptru	equ	0xFF8
 35955                           tblptrh	equ	0xFF7
 35956                           tblptrl	equ	0xFF6
 35957                           tablat	equ	0xFF5
 35958                           prodh	equ	0xFF4
 35959                           prodl	equ	0xFF3
 35960                           intcon	equ	0xFF2
 35961                           indf0	equ	0xFEF
 35962                           postinc0	equ	0xFEE
 35963                           fsr0h	equ	0xFEA
 35964                           fsr0l	equ	0xFE9
 35965                           wreg	equ	0xFE8
 35966                           indf1	equ	0xFE7
 35967                           postdec1	equ	0xFE5
 35968                           plusw1	equ	0xFE3
 35969                           fsr1h	equ	0xFE2
 35970                           fsr1l	equ	0xFE1
 35971                           indf2	equ	0xFDF
 35972                           postinc2	equ	0xFDE
 35973                           postdec2	equ	0xFDD
 35974                           plusw2	equ	0xFDB
 35975                           fsr2h	equ	0xFDA
 35976                           fsr2l	equ	0xFD9
 35977                           status	equ	0xFD8
 35978                           
 35979 ;; *************** function _OLED_YX *****************
 35980 ;; Defined at:
 35981 ;;		line 220 in file "oled.c"
 35982 ;; Parameters:    Size  Location     Type
 35983 ;;  Row             1    wreg     unsigned char 
 35984 ;;  Column          1   43[BANK1 ] unsigned char 
 35985 ;; Auto vars:     Size  Location     Type
 35986 ;;  Row             1   45[BANK1 ] unsigned char 
 35987 ;; Return value:  Size  Location     Type
 35988 ;;                  1    wreg      void 
 35989 ;; Registers used:
 35990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35991 ;; Tracked objects:
 35992 ;;		On entry : 0/0
 35993 ;;		On exit  : 0/0
 35994 ;;		Unchanged: 0/0
 35995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35996 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35997 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35998 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35999 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36000 ;;Total ram usage:        3 bytes
 36001 ;; Hardware stack levels used:    1
 36002 ;; Hardware stack levels required when called:   17
 36003 ;; This function calls:
 36004 ;;		_OLED_Command
 36005 ;; This function is called by:
 36006 ;;		_OLED_UpdateFromRAMBuffer
 36007 ;; This function uses a non-reentrant model
 36008 ;;
 36009                           
 36010                           	psect	text85
 36011  01AA80                     __ptext85:
 36012                           	opt stack 0
 36013  01AA80                     _OLED_YX:
 36014                           	opt stack 12
 36015                           
 36016                           ;incstack = 0
 36017                           ;OLED_YX@Row stored from wreg
 36018  01AA80  0101               	movlb	1	; () banked
 36019  01AA82  6F2D               	movwf	OLED_YX@Row& (0+255),b
 36020                           
 36021                           ;oled.c: 222: OLED_Command(0xB0 + Row);
 36022  01AA84  0101               	movlb	1	; () banked
 36023  01AA86  512D               	movf	OLED_YX@Row& (0+255),w,b
 36024  01AA88  0FB0               	addlw	176
 36025  01AA8A  EC49  F0D0         	call	_OLED_Command
 36026                           
 36027                           ;oled.c: 224: OLED_Command(0x00 + (8 * Column & 0x0F));
 36028  01AA8E  0101               	movlb	1	; () banked
 36029  01AA90  512B               	movf	OLED_YX@Column& (0+255),w,b
 36030  01AA92  0D08               	mullw	8
 36031  01AA94  50F3               	movf	prodl,w,c
 36032  01AA96  0B0F               	andlw	15
 36033  01AA98  EC49  F0D0         	call	_OLED_Command
 36034                           
 36035                           ;oled.c: 226: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 36036  01AA9C  0101               	movlb	1	; () banked
 36037  01AA9E  512B               	movf	OLED_YX@Column& (0+255),w,b
 36038  01AAA0  0D08               	mullw	8
 36039  01AAA2  0E04               	movlw	4
 36040  01AAA4  6F2C               	movwf	??_OLED_YX& (0+255),b
 36041  01AAA6                     u23955:
 36042  01AAA6  34F4               	rlcf	prodh,w,c
 36043  01AAA8  32F4               	rrcf	prodh,f,c
 36044  01AAAA  32F3               	rrcf	prodl,f,c
 36045  01AAAC  2F2C               	decfsz	??_OLED_YX& (0+255),f,b
 36046  01AAAE  D7FB               	goto	u23955
 36047  01AAB0  50F3               	movf	prodl,w,c
 36048  01AAB2  0B0F               	andlw	15
 36049  01AAB4  0F10               	addlw	16
 36050  01AAB6  EC49  F0D0         	call	_OLED_Command
 36051  01AABA  0012               	return		;funcret
 36052  01AABC                     __end_of_OLED_YX:
 36053                           	opt stack 0
 36054                           tosu	equ	0xFFF
 36055                           tosh	equ	0xFFE
 36056                           tosl	equ	0xFFD
 36057                           pclath	equ	0xFFA
 36058                           tblptru	equ	0xFF8
 36059                           tblptrh	equ	0xFF7
 36060                           tblptrl	equ	0xFF6
 36061                           tablat	equ	0xFF5
 36062                           prodh	equ	0xFF4
 36063                           prodl	equ	0xFF3
 36064                           intcon	equ	0xFF2
 36065                           indf0	equ	0xFEF
 36066                           postinc0	equ	0xFEE
 36067                           fsr0h	equ	0xFEA
 36068                           fsr0l	equ	0xFE9
 36069                           wreg	equ	0xFE8
 36070                           indf1	equ	0xFE7
 36071                           postdec1	equ	0xFE5
 36072                           plusw1	equ	0xFE3
 36073                           fsr1h	equ	0xFE2
 36074                           fsr1l	equ	0xFE1
 36075                           indf2	equ	0xFDF
 36076                           postinc2	equ	0xFDE
 36077                           postdec2	equ	0xFDD
 36078                           plusw2	equ	0xFDB
 36079                           fsr2h	equ	0xFDA
 36080                           fsr2l	equ	0xFD9
 36081                           status	equ	0xFD8
 36082                           
 36083 ;; *************** function _OLED_WriteString *****************
 36084 ;; Defined at:
 36085 ;;		line 281 in file "oled.c"
 36086 ;; Parameters:    Size  Location     Type
 36087 ;;  s               2   56[BANK1 ] PTR unsigned char 
 36088 ;;		 -> ftoa@buf(17), STR_190(1), STR_189(1), OLED_WriteInteger@s(20), 
 36089 ;;		 -> OLED_RAM_Buffer(64), 
 36090 ;; Auto vars:     Size  Location     Type
 36091 ;;		None
 36092 ;; Return value:  Size  Location     Type
 36093 ;;                  1    wreg      void 
 36094 ;; Registers used:
 36095 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36096 ;; Tracked objects:
 36097 ;;		On entry : 0/0
 36098 ;;		On exit  : 0/0
 36099 ;;		Unchanged: 0/0
 36100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36101 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36104 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36105 ;;Total ram usage:        2 bytes
 36106 ;; Hardware stack levels used:    1
 36107 ;; Hardware stack levels required when called:   17
 36108 ;; This function calls:
 36109 ;;		_OLED_PutChar
 36110 ;; This function is called by:
 36111 ;;		_OLED_UpdateFromRAMBuffer
 36112 ;;		_OLED_WriteInteger
 36113 ;;		_OLED_WriteFloat
 36114 ;; This function uses a non-reentrant model
 36115 ;;
 36116                           
 36117                           	psect	text86
 36118  01A352                     __ptext86:
 36119                           	opt stack 0
 36120  01A352                     _OLED_WriteString:
 36121                           	opt stack 12
 36122                           
 36123                           ;oled.c: 283: while(*s) {
 36124                           
 36125                           ;incstack = 0
 36126  01A352  D016               	goto	l1729
 36127  01A354                     
 36128                           ;oled.c: 285: OLED_PutChar(*s++);
 36129  01A354  C138  FFF6         	movff	OLED_WriteString@s,tblptrl
 36130  01A358  C139  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 36131  01A35C  0E00               	movlw	low (__mediumconst shr (0+16))
 36132  01A35E  6EF8               	movwf	tblptru,c
 36133  01A360  0E0D               	movlw	(high __ramtop+-1)
 36134  01A362  64F7               	cpfsgt	tblptrh,c
 36135  01A364  D003               	bra	u24007
 36136  01A366  0008               	tblrd		*
 36137  01A368  50F5               	movf	tablat,w,c
 36138  01A36A  D005               	bra	u24000
 36139  01A36C                     u24007:
 36140  01A36C  CFF6 FFE9          	movff	tblptrl,fsr0l
 36141  01A370  CFF7 FFEA          	movff	tblptrh,fsr0h
 36142  01A374  50EF               	movf	indf0,w,c
 36143  01A376                     u24000:
 36144  01A376  ECEC  F0CA         	call	_OLED_PutChar
 36145  01A37A  0101               	movlb	1	; () banked
 36146  01A37C  4B38               	infsnz	OLED_WriteString@s& (0+255),f,b
 36147  01A37E  2B39               	incf	(OLED_WriteString@s+1)& (0+255),f,b
 36148  01A380                     l1729:
 36149                           
 36150                           ; BSR set to: 1
 36151  01A380  C138  FFF6         	movff	OLED_WriteString@s,tblptrl
 36152  01A384  C139  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 36153  01A388  0E00               	movlw	low (__mediumconst shr (0+16))
 36154  01A38A  6EF8               	movwf	tblptru,c
 36155  01A38C  0E0D               	movlw	(high __ramtop+-1)
 36156  01A38E  64F7               	cpfsgt	tblptrh,c
 36157  01A390  D003               	bra	u24017
 36158  01A392  0008               	tblrd		*
 36159  01A394  50F5               	movf	tablat,w,c
 36160  01A396  D005               	bra	u24010
 36161  01A398                     u24017:
 36162  01A398  CFF6 FFE9          	movff	tblptrl,fsr0l
 36163  01A39C  CFF7 FFEA          	movff	tblptrh,fsr0h
 36164  01A3A0  50EF               	movf	indf0,w,c
 36165  01A3A2                     u24010:
 36166  01A3A2  0900               	iorlw	0
 36167  01A3A4  B4D8               	btfsc	status,2,c
 36168  01A3A6  0012               	return	
 36169  01A3A8  D7D5               	goto	l1730
 36170  01A3AA                     __end_of_OLED_WriteString:
 36171                           	opt stack 0
 36172                           tosu	equ	0xFFF
 36173                           tosh	equ	0xFFE
 36174                           tosl	equ	0xFFD
 36175                           pclath	equ	0xFFA
 36176                           tblptru	equ	0xFF8
 36177                           tblptrh	equ	0xFF7
 36178                           tblptrl	equ	0xFF6
 36179                           tablat	equ	0xFF5
 36180                           prodh	equ	0xFF4
 36181                           prodl	equ	0xFF3
 36182                           intcon	equ	0xFF2
 36183                           indf0	equ	0xFEF
 36184                           postinc0	equ	0xFEE
 36185                           fsr0h	equ	0xFEA
 36186                           fsr0l	equ	0xFE9
 36187                           wreg	equ	0xFE8
 36188                           indf1	equ	0xFE7
 36189                           postdec1	equ	0xFE5
 36190                           plusw1	equ	0xFE3
 36191                           fsr1h	equ	0xFE2
 36192                           fsr1l	equ	0xFE1
 36193                           indf2	equ	0xFDF
 36194                           postinc2	equ	0xFDE
 36195                           postdec2	equ	0xFDD
 36196                           plusw2	equ	0xFDB
 36197                           fsr2h	equ	0xFDA
 36198                           fsr2l	equ	0xFD9
 36199                           status	equ	0xFD8
 36200                           
 36201 ;; *************** function _OLED_Clear *****************
 36202 ;; Defined at:
 36203 ;;		line 266 in file "oled.c"
 36204 ;; Parameters:    Size  Location     Type
 36205 ;;		None
 36206 ;; Auto vars:     Size  Location     Type
 36207 ;;  col             2   58[BANK1 ] unsigned int 
 36208 ;;  row             2   56[BANK1 ] unsigned int 
 36209 ;; Return value:  Size  Location     Type
 36210 ;;                  1    wreg      void 
 36211 ;; Registers used:
 36212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36213 ;; Tracked objects:
 36214 ;;		On entry : 0/0
 36215 ;;		On exit  : 0/0
 36216 ;;		Unchanged: 0/0
 36217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36219 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36221 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36222 ;;Total ram usage:        4 bytes
 36223 ;; Hardware stack levels used:    1
 36224 ;; Hardware stack levels required when called:   17
 36225 ;; This function calls:
 36226 ;;		_OLED_PutChar
 36227 ;; This function is called by:
 36228 ;;		_OLED_UpdateFromRAMBuffer
 36229 ;; This function uses a non-reentrant model
 36230 ;;
 36231                           
 36232                           	psect	text87
 36233  01A90A                     __ptext87:
 36234                           	opt stack 0
 36235  01A90A                     _OLED_Clear:
 36236                           	opt stack 12
 36237                           
 36238                           ;oled.c: 268: for(uint16_t row = 0; row < 8; row++) {
 36239                           
 36240                           ;incstack = 0
 36241  01A90A  0E00               	movlw	0
 36242  01A90C  0101               	movlb	1	; () banked
 36243  01A90E  6F39               	movwf	(OLED_Clear@row+1)& (0+255),b
 36244  01A910  0E00               	movlw	0
 36245  01A912  6F38               	movwf	OLED_Clear@row& (0+255),b
 36246  01A914                     l17941:
 36247                           
 36248                           ; BSR set to: 1
 36249  01A914  5139               	movf	(OLED_Clear@row+1)& (0+255),w,b
 36250  01A916  E118               	bnz	l1726
 36251  01A918  0E08               	movlw	8
 36252  01A91A  5D38               	subwf	OLED_Clear@row& (0+255),w,b
 36253  01A91C  B0D8               	btfsc	status,0,c
 36254  01A91E  0012               	return	
 36255                           
 36256                           ; BSR set to: 1
 36257                           ;oled.c: 270: for(uint16_t col = 0; col < 16; col++) {
 36258                           
 36259                           ; BSR set to: 1
 36260                           
 36261                           ; BSR set to: 1
 36262  01A920  0E00               	movlw	0
 36263  01A922  6F3B               	movwf	(OLED_Clear@col+1)& (0+255),b
 36264  01A924  0E00               	movlw	0
 36265  01A926  6F3A               	movwf	OLED_Clear@col& (0+255),b
 36266  01A928                     l17947:
 36267                           
 36268                           ; BSR set to: 1
 36269  01A928  513B               	movf	(OLED_Clear@col+1)& (0+255),w,b
 36270  01A92A  E10B               	bnz	l17957
 36271  01A92C  0E10               	movlw	16
 36272  01A92E  5D3A               	subwf	OLED_Clear@col& (0+255),w,b
 36273  01A930  B0D8               	btfsc	status,0,c
 36274  01A932  D007               	goto	u23980
 36275                           
 36276                           ; BSR set to: 1
 36277                           ;oled.c: 272: OLED_PutChar('\0');
 36278                           
 36279                           ; BSR set to: 1
 36280                           
 36281                           ; BSR set to: 1
 36282  01A934  0E00               	movlw	0
 36283  01A936  ECEC  F0CA         	call	_OLED_PutChar
 36284  01A93A  0101               	movlb	1	; () banked
 36285  01A93C  4B3A               	infsnz	OLED_Clear@col& (0+255),f,b
 36286  01A93E  2B3B               	incf	(OLED_Clear@col+1)& (0+255),f,b
 36287  01A940  D7F3               	goto	l17947
 36288  01A942                     u23980:
 36289  01A942                     l17957:
 36290                           
 36291                           ; BSR set to: 1
 36292  01A942  4B38               	infsnz	OLED_Clear@row& (0+255),f,b
 36293  01A944  2B39               	incf	(OLED_Clear@row+1)& (0+255),f,b
 36294  01A946  D7E6               	goto	l17941
 36295  01A948                     l1726:
 36296                           
 36297                           ; BSR set to: 1
 36298  01A948  0012               	return		;funcret
 36299  01A94A                     __end_of_OLED_Clear:
 36300                           	opt stack 0
 36301                           tosu	equ	0xFFF
 36302                           tosh	equ	0xFFE
 36303                           tosl	equ	0xFFD
 36304                           pclath	equ	0xFFA
 36305                           tblptru	equ	0xFF8
 36306                           tblptrh	equ	0xFF7
 36307                           tblptrl	equ	0xFF6
 36308                           tablat	equ	0xFF5
 36309                           prodh	equ	0xFF4
 36310                           prodl	equ	0xFF3
 36311                           intcon	equ	0xFF2
 36312                           indf0	equ	0xFEF
 36313                           postinc0	equ	0xFEE
 36314                           fsr0h	equ	0xFEA
 36315                           fsr0l	equ	0xFE9
 36316                           wreg	equ	0xFE8
 36317                           indf1	equ	0xFE7
 36318                           postdec1	equ	0xFE5
 36319                           plusw1	equ	0xFE3
 36320                           fsr1h	equ	0xFE2
 36321                           fsr1l	equ	0xFE1
 36322                           indf2	equ	0xFDF
 36323                           postinc2	equ	0xFDE
 36324                           postdec2	equ	0xFDD
 36325                           plusw2	equ	0xFDB
 36326                           fsr2h	equ	0xFDA
 36327                           fsr2l	equ	0xFD9
 36328                           status	equ	0xFD8
 36329                           
 36330 ;; *************** function _OLED_PutChar *****************
 36331 ;; Defined at:
 36332 ;;		line 231 in file "oled.c"
 36333 ;; Parameters:    Size  Location     Type
 36334 ;;  ch              1    wreg     unsigned char 
 36335 ;; Auto vars:     Size  Location     Type
 36336 ;;  ch              1   55[BANK1 ] unsigned char 
 36337 ;;  data_array      9   43[BANK1 ] unsigned char [9]
 36338 ;;  input_base      2   52[BANK1 ] PTR const unsigned char 
 36339 ;;		 -> OledFont(768), 
 36340 ;;  length          1   54[BANK1 ] unsigned char 
 36341 ;; Return value:  Size  Location     Type
 36342 ;;                  1    wreg      void 
 36343 ;; Registers used:
 36344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36345 ;; Tracked objects:
 36346 ;;		On entry : 0/0
 36347 ;;		On exit  : 0/0
 36348 ;;		Unchanged: 0/0
 36349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36351 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36352 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36353 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36354 ;;Total ram usage:       17 bytes
 36355 ;; Hardware stack levels used:    1
 36356 ;; Hardware stack levels required when called:   16
 36357 ;; This function calls:
 36358 ;;		_I2C1_MasterWrite
 36359 ;;		_memmove
 36360 ;; This function is called by:
 36361 ;;		_OLED_Clear
 36362 ;;		_OLED_WriteString
 36363 ;; This function uses a non-reentrant model
 36364 ;;
 36365                           
 36366                           	psect	text88
 36367  0195D8                     __ptext88:
 36368                           	opt stack 0
 36369  0195D8                     _OLED_PutChar:
 36370                           	opt stack 12
 36371                           
 36372                           ; BSR set to: 1
 36373                           ;incstack = 0
 36374                           ;OLED_PutChar@ch stored from wreg
 36375  0195D8  0101               	movlb	1	; () banked
 36376  0195DA  6F37               	movwf	OLED_PutChar@ch& (0+255),b
 36377                           
 36378                           ;oled.c: 233: if((ch < 32) || (ch > 127)) {
 36379  0195DC  0E1F               	movlw	31
 36380  0195DE  0101               	movlb	1	; () banked
 36381  0195E0  6537               	cpfsgt	OLED_PutChar@ch& (0+255),b
 36382  0195E2  D003               	goto	u21470
 36383                           
 36384                           ; BSR set to: 1
 36385  0195E4  0E7F               	movlw	127
 36386  0195E6  6537               	cpfsgt	OLED_PutChar@ch& (0+255),b
 36387  0195E8  D002               	goto	l1710
 36388  0195EA                     u21470:
 36389                           
 36390                           ; BSR set to: 1
 36391                           ;oled.c: 235: ch = ' ';
 36392                           
 36393                           ; BSR set to: 1
 36394  0195EA  0E20               	movlw	32
 36395  0195EC  6F37               	movwf	OLED_PutChar@ch& (0+255),b
 36396  0195EE                     l1710:
 36397                           
 36398                           ; BSR set to: 1
 36399                           ;oled.c: 237: }
 36400                           ;oled.c: 239: uint8_t length;
 36401                           ;oled.c: 241: uint8_t data_array[9];
 36402                           ;oled.c: 243: data_array[0] = 0x40;
 36403  0195EE  0E40               	movlw	64
 36404  0195F0  6F2B               	movwf	OLED_PutChar@data_array& (0+255),b
 36405                           
 36406                           ; BSR set to: 1
 36407                           ;oled.c: 245: const uint8_t *input_base = &OledFont[ch - 32][0];
 36408  0195F2  0E00               	movlw	0
 36409  0195F4  6F27               	movwf	??_OLED_PutChar& (0+255),b
 36410  0195F6  0EFF               	movlw	255
 36411  0195F8  6F28               	movwf	(??_OLED_PutChar+1)& (0+255),b
 36412  0195FA  5137               	movf	OLED_PutChar@ch& (0+255),w,b
 36413  0195FC  6F29               	movwf	(??_OLED_PutChar+2)& (0+255),b
 36414  0195FE  6B2A               	clrf	(??_OLED_PutChar+3)& (0+255),b
 36415  019600  90D8               	bcf	status,0,c
 36416  019602  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 36417  019604  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 36418  019606  90D8               	bcf	status,0,c
 36419  019608  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 36420  01960A  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 36421  01960C  90D8               	bcf	status,0,c
 36422  01960E  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 36423  019610  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 36424  019612  5127               	movf	??_OLED_PutChar& (0+255),w,b
 36425  019614  2729               	addwf	(??_OLED_PutChar+2)& (0+255),f,b
 36426  019616  5128               	movf	(??_OLED_PutChar+1)& (0+255),w,b
 36427  019618  232A               	addwfc	(??_OLED_PutChar+3)& (0+255),f,b
 36428  01961A  0E61               	movlw	low _OledFont
 36429  01961C  2529               	addwf	(??_OLED_PutChar+2)& (0+255),w,b
 36430  01961E  6F34               	movwf	OLED_PutChar@input_base& (0+255),b
 36431  019620  0ECF               	movlw	high _OledFont
 36432  019622  212A               	addwfc	(??_OLED_PutChar+3)& (0+255),w,b
 36433  019624  6F35               	movwf	(OLED_PutChar@input_base+1)& (0+255),b
 36434                           
 36435                           ; BSR set to: 1
 36436                           ;oled.c: 247: memmove(data_array + 1, input_base, 8);
 36437  019626  0E2C               	movlw	low (OLED_PutChar@data_array+1)
 36438  019628  6F17               	movwf	memmove@d1& (0+255),b
 36439  01962A  0E01               	movlw	high (OLED_PutChar@data_array+1)
 36440  01962C  6F18               	movwf	(memmove@d1+1)& (0+255),b
 36441  01962E  C134  F119         	movff	OLED_PutChar@input_base,memmove@s1
 36442  019632  C135  F11A         	movff	OLED_PutChar@input_base+1,memmove@s1+1
 36443  019636  0E00               	movlw	0
 36444  019638  6F1C               	movwf	(memmove@n+1)& (0+255),b
 36445  01963A  0E08               	movlw	8
 36446  01963C  6F1B               	movwf	memmove@n& (0+255),b
 36447  01963E  ECA8  F0CB         	call	_memmove	;wreg free
 36448                           
 36449                           ;oled.c: 250: length = 9;
 36450  019642  0E09               	movlw	9
 36451  019644  0101               	movlb	1	; () banked
 36452  019646  6F36               	movwf	OLED_PutChar@length& (0+255),b
 36453                           
 36454                           ; BSR set to: 1
 36455                           ;oled.c: 252: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 36456  019648  0E2B               	movlw	low OLED_PutChar@data_array
 36457  01964A  6F20               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 36458  01964C  0E01               	movlw	high OLED_PutChar@data_array
 36459  01964E  6F21               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 36460  019650  C136  F122         	movff	OLED_PutChar@length,I2C1_MasterWrite@length
 36461  019654  0E00               	movlw	0
 36462  019656  6F24               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
 36463  019658  0E3C               	movlw	60
 36464  01965A  6F23               	movwf	I2C1_MasterWrite@address& (0+255),b
 36465  01965C  0EE8               	movlw	low _OLED_I2C_Status
 36466  01965E  6F25               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 36467  019660  0E01               	movlw	high _OLED_I2C_Status
 36468  019662  6F26               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 36469  019664  ECC9  F0D2         	call	_I2C1_MasterWrite	;wreg free
 36470  019668  0E02               	movlw	2
 36471  01966A  0101               	movlb	1	; () banked
 36472  01966C  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 36473  01966E  B4D8               	btfsc	status,2,c
 36474  019670  D7FB               	goto	l1714
 36475                           
 36476                           ; BSR set to: 1
 36477                           ;oled.c: 256: if ( OLED_I2C_Status == I2C1_MESSAGE_FAIL ||
 36478                           ;oled.c: 257: OLED_I2C_Status == I2C1_STUCK_START ||
 36479                           ;oled.c: 258: OLED_I2C_Status == I2C1_MESSAGE_ADDRESS_NO_ACK ||
 36480                           ;oled.c: 259: OLED_I2C_Status == I2C1_DATA_NO_ACK ||
 36481                           ;oled.c: 260: OLED_I2C_Status == I2C1_LOST_STATE ) {
 36482                           
 36483                           ; BSR set to: 1
 36484  019672  05E8               	decf	_OLED_I2C_Status& (0+255),w,b
 36485  019674  B4D8               	btfsc	status,2,c
 36486  019676  D010               	goto	u21530
 36487                           
 36488                           ; BSR set to: 1
 36489  019678  0E03               	movlw	3
 36490  01967A  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 36491  01967C  B4D8               	btfsc	status,2,c
 36492  01967E  D00C               	goto	u21530
 36493                           
 36494                           ; BSR set to: 1
 36495  019680  0E04               	movlw	4
 36496  019682  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 36497  019684  B4D8               	btfsc	status,2,c
 36498  019686  D008               	goto	u21530
 36499                           
 36500                           ; BSR set to: 1
 36501  019688  0E05               	movlw	5
 36502  01968A  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 36503  01968C  B4D8               	btfsc	status,2,c
 36504  01968E  D004               	goto	u21530
 36505                           
 36506                           ; BSR set to: 1
 36507  019690  0E06               	movlw	6
 36508  019692  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 36509  019694  A4D8               	btfss	status,2,c
 36510  019696  0012               	return	
 36511  019698                     u21530:
 36512                           
 36513                           ; BSR set to: 1
 36514                           ;oled.c: 261: error_handler.I2C_COMM_error_flag = 1;
 36515                           
 36516                           ; BSR set to: 1
 36517  019698  0E01               	movlw	1
 36518  01969A  0102               	movlb	2	; () banked
 36519  01969C  6F07               	movwf	(_error_handler+7)& (0+255),b
 36520  01969E  0012               	return	
 36521  0196A0                     __end_of_OLED_PutChar:
 36522                           	opt stack 0
 36523                           tosu	equ	0xFFF
 36524                           tosh	equ	0xFFE
 36525                           tosl	equ	0xFFD
 36526                           pclath	equ	0xFFA
 36527                           tblptru	equ	0xFF8
 36528                           tblptrh	equ	0xFF7
 36529                           tblptrl	equ	0xFF6
 36530                           tablat	equ	0xFF5
 36531                           prodh	equ	0xFF4
 36532                           prodl	equ	0xFF3
 36533                           intcon	equ	0xFF2
 36534                           indf0	equ	0xFEF
 36535                           postinc0	equ	0xFEE
 36536                           fsr0h	equ	0xFEA
 36537                           fsr0l	equ	0xFE9
 36538                           wreg	equ	0xFE8
 36539                           indf1	equ	0xFE7
 36540                           postdec1	equ	0xFE5
 36541                           plusw1	equ	0xFE3
 36542                           fsr1h	equ	0xFE2
 36543                           fsr1l	equ	0xFE1
 36544                           indf2	equ	0xFDF
 36545                           postinc2	equ	0xFDE
 36546                           postdec2	equ	0xFDD
 36547                           plusw2	equ	0xFDB
 36548                           fsr2h	equ	0xFDA
 36549                           fsr2l	equ	0xFD9
 36550                           status	equ	0xFD8
 36551                           
 36552 ;; *************** function _memmove *****************
 36553 ;; Defined at:
 36554 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memmove.c"
 36555 ;; Parameters:    Size  Location     Type
 36556 ;;  d1              2   23[BANK1 ] PTR void 
 36557 ;;		 -> OLED_PutChar@data_array(9), 
 36558 ;;  s1              2   25[BANK1 ] PTR const void 
 36559 ;;		 -> OledFont(768), 
 36560 ;;  n               2   27[BANK1 ] unsigned int 
 36561 ;; Auto vars:     Size  Location     Type
 36562 ;;  s               2   33[BANK1 ] PTR const unsigned char 
 36563 ;;		 -> OledFont(768), 
 36564 ;;  d               2   31[BANK1 ] PTR unsigned char 
 36565 ;;		 -> OLED_PutChar@data_array(9), 
 36566 ;; Return value:  Size  Location     Type
 36567 ;;                  2   23[BANK1 ] PTR void 
 36568 ;; Registers used:
 36569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36570 ;; Tracked objects:
 36571 ;;		On entry : 0/0
 36572 ;;		On exit  : 0/0
 36573 ;;		Unchanged: 0/0
 36574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36575 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36576 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36577 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36578 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36579 ;;Total ram usage:       12 bytes
 36580 ;; Hardware stack levels used:    1
 36581 ;; Hardware stack levels required when called:   13
 36582 ;; This function calls:
 36583 ;;		Nothing
 36584 ;; This function is called by:
 36585 ;;		_OLED_PutChar
 36586 ;; This function uses a non-reentrant model
 36587 ;;
 36588                           
 36589                           	psect	text89
 36590  019750                     __ptext89:
 36591                           	opt stack 0
 36592  019750                     _memmove:
 36593                           	opt stack 14
 36594                           
 36595                           ;incstack = 0
 36596  019750  C119  F121         	movff	memmove@s1,memmove@s
 36597  019754  C11A  F122         	movff	memmove@s1+1,memmove@s+1
 36598  019758  C117  F11F         	movff	memmove@d1,memmove@d
 36599  01975C  C118  F120         	movff	memmove@d1+1,memmove@d+1
 36600  019760  0101               	movlb	1	; () banked
 36601  019762  511F               	movf	memmove@d& (0+255),w,b
 36602  019764  5D21               	subwf	memmove@s& (0+255),w,b
 36603  019766  5120               	movf	(memmove@d+1)& (0+255),w,b
 36604  019768  5922               	subwfb	(memmove@s+1)& (0+255),w,b
 36605  01976A  B0D8               	btfsc	status,0,c
 36606  01976C  D02F               	goto	l2692
 36607                           
 36608                           ; BSR set to: 1
 36609  01976E  511B               	movf	memmove@n& (0+255),w,b
 36610  019770  2521               	addwf	memmove@s& (0+255),w,b
 36611  019772  6F1D               	movwf	??_memmove& (0+255),b
 36612  019774  511C               	movf	(memmove@n+1)& (0+255),w,b
 36613  019776  2122               	addwfc	(memmove@s+1)& (0+255),w,b
 36614  019778  6F1E               	movwf	(??_memmove+1)& (0+255),b
 36615  01977A  511D               	movf	??_memmove& (0+255),w,b
 36616  01977C  5D1F               	subwf	memmove@d& (0+255),w,b
 36617  01977E  511E               	movf	(??_memmove+1)& (0+255),w,b
 36618  019780  5920               	subwfb	(memmove@d+1)& (0+255),w,b
 36619  019782  B0D8               	btfsc	status,0,c
 36620  019784  D023               	goto	l2692
 36621                           
 36622                           ; BSR set to: 1
 36623  019786  511B               	movf	memmove@n& (0+255),w,b
 36624  019788  2721               	addwf	memmove@s& (0+255),f,b
 36625  01978A  511C               	movf	(memmove@n+1)& (0+255),w,b
 36626  01978C  2322               	addwfc	(memmove@s+1)& (0+255),f,b
 36627  01978E  511B               	movf	memmove@n& (0+255),w,b
 36628  019790  271F               	addwf	memmove@d& (0+255),f,b
 36629  019792  511C               	movf	(memmove@n+1)& (0+255),w,b
 36630  019794  2320               	addwfc	(memmove@d+1)& (0+255),f,b
 36631  019796                     
 36632                           ; BSR set to: 1
 36633                           
 36634                           ; BSR set to: 1
 36635  019796  0721               	decf	memmove@s& (0+255),f,b
 36636  019798  A0D8               	btfss	status,0,c
 36637  01979A  0722               	decf	(memmove@s+1)& (0+255),f,b
 36638  01979C  C121  FFF6         	movff	memmove@s,tblptrl
 36639  0197A0  C122  FFF7         	movff	memmove@s+1,tblptrh
 36640  0197A4                     	if	0	;tblptru may be non-zero
 36641  0197A4                     	endif
 36642  0197A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36643  0197A4  0E00               	movlw	low (__mediumconst shr (0+16))
 36644  0197A6  6EF8               	movwf	tblptru,c
 36645  0197A8                     	endif
 36646  0197A8  071F               	decf	memmove@d& (0+255),f,b
 36647  0197AA  A0D8               	btfss	status,0,c
 36648  0197AC  0720               	decf	(memmove@d+1)& (0+255),f,b
 36649  0197AE  C11F  FFD9         	movff	memmove@d,fsr2l
 36650  0197B2  C120  FFDA         	movff	memmove@d+1,fsr2h
 36651  0197B6  0008               	tblrd		*
 36652  0197B8  CFF5 FFDF          	movff	tablat,indf2
 36653                           
 36654                           ; BSR set to: 1
 36655  0197BC  071B               	decf	memmove@n& (0+255),f,b
 36656  0197BE  A0D8               	btfss	status,0,c
 36657  0197C0  071C               	decf	(memmove@n+1)& (0+255),f,b
 36658  0197C2  511B               	movf	memmove@n& (0+255),w,b
 36659  0197C4  111C               	iorwf	(memmove@n+1)& (0+255),w,b
 36660  0197C6  B4D8               	btfsc	status,2,c
 36661  0197C8  0012               	return	
 36662  0197CA  D7E5               	goto	l2693
 36663  0197CC                     l2692:
 36664                           
 36665                           ; BSR set to: 1
 36666                           
 36667                           ; BSR set to: 1
 36668  0197CC  511B               	movf	memmove@n& (0+255),w,b
 36669  0197CE  111C               	iorwf	(memmove@n+1)& (0+255),w,b
 36670  0197D0  B4D8               	btfsc	status,2,c
 36671  0197D2  0012               	return	
 36672                           
 36673                           ; BSR set to: 1
 36674                           
 36675                           ; BSR set to: 1
 36676  0197D4  C121  FFF6         	movff	memmove@s,tblptrl
 36677  0197D8  C122  FFF7         	movff	memmove@s+1,tblptrh
 36678  0197DC                     	if	0	;tblptru may be non-zero
 36679  0197DC                     	endif
 36680  0197DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36681  0197DC  0E00               	movlw	low (__mediumconst shr (0+16))
 36682  0197DE  6EF8               	movwf	tblptru,c
 36683  0197E0                     	endif
 36684  0197E0  C11F  FFD9         	movff	memmove@d,fsr2l
 36685  0197E4  C120  FFDA         	movff	memmove@d+1,fsr2h
 36686  0197E8  0008               	tblrd		*
 36687  0197EA  CFF5 FFDF          	movff	tablat,indf2
 36688                           
 36689                           ; BSR set to: 1
 36690  0197EE  4B21               	infsnz	memmove@s& (0+255),f,b
 36691  0197F0  2B22               	incf	(memmove@s+1)& (0+255),f,b
 36692                           
 36693                           ; BSR set to: 1
 36694  0197F2  4B1F               	infsnz	memmove@d& (0+255),f,b
 36695  0197F4  2B20               	incf	(memmove@d+1)& (0+255),f,b
 36696                           
 36697                           ; BSR set to: 1
 36698  0197F6  071B               	decf	memmove@n& (0+255),f,b
 36699  0197F8  A0D8               	btfss	status,0,c
 36700  0197FA  071C               	decf	(memmove@n+1)& (0+255),f,b
 36701  0197FC  D7E7               	goto	l2692
 36702  0197FE                     __end_of_memmove:
 36703                           	opt stack 0
 36704                           tosu	equ	0xFFF
 36705                           tosh	equ	0xFFE
 36706                           tosl	equ	0xFFD
 36707                           pclath	equ	0xFFA
 36708                           tblptru	equ	0xFF8
 36709                           tblptrh	equ	0xFF7
 36710                           tblptrl	equ	0xFF6
 36711                           tablat	equ	0xFF5
 36712                           prodh	equ	0xFF4
 36713                           prodl	equ	0xFF3
 36714                           intcon	equ	0xFF2
 36715                           indf0	equ	0xFEF
 36716                           postinc0	equ	0xFEE
 36717                           fsr0h	equ	0xFEA
 36718                           fsr0l	equ	0xFE9
 36719                           wreg	equ	0xFE8
 36720                           indf1	equ	0xFE7
 36721                           postdec1	equ	0xFE5
 36722                           plusw1	equ	0xFE3
 36723                           fsr1h	equ	0xFE2
 36724                           fsr1l	equ	0xFE1
 36725                           indf2	equ	0xFDF
 36726                           postinc2	equ	0xFDE
 36727                           postdec2	equ	0xFDD
 36728                           plusw2	equ	0xFDB
 36729                           fsr2h	equ	0xFDA
 36730                           fsr2l	equ	0xFD9
 36731                           status	equ	0xFD8
 36732                           
 36733 ;; *************** function _OLED_Init *****************
 36734 ;; Defined at:
 36735 ;;		line 162 in file "oled.c"
 36736 ;; Parameters:    Size  Location     Type
 36737 ;;		None
 36738 ;; Auto vars:     Size  Location     Type
 36739 ;;		None
 36740 ;; Return value:  Size  Location     Type
 36741 ;;                  1    wreg      void 
 36742 ;; Registers used:
 36743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36744 ;; Tracked objects:
 36745 ;;		On entry : 0/0
 36746 ;;		On exit  : 0/0
 36747 ;;		Unchanged: 0/0
 36748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36753 ;;Total ram usage:        0 bytes
 36754 ;; Hardware stack levels used:    1
 36755 ;; Hardware stack levels required when called:   17
 36756 ;; This function calls:
 36757 ;;		_OLED_Command
 36758 ;; This function is called by:
 36759 ;;		_main
 36760 ;; This function uses a non-reentrant model
 36761 ;;
 36762                           
 36763                           	psect	text90
 36764  0198A0                     __ptext90:
 36765                           	opt stack 0
 36766  0198A0                     _OLED_Init:
 36767                           	opt stack 13
 36768                           
 36769                           ;oled.c: 164: OLED_Command(0xAE);
 36770                           
 36771                           ; BSR set to: 1
 36772                           ;incstack = 0
 36773  0198A0  0EAE               	movlw	174
 36774  0198A2  EC49  F0D0         	call	_OLED_Command
 36775                           
 36776                           ;oled.c: 166: OLED_Command(0xD5);
 36777  0198A6  0ED5               	movlw	213
 36778  0198A8  EC49  F0D0         	call	_OLED_Command
 36779                           
 36780                           ;oled.c: 168: OLED_Command(0x80);
 36781  0198AC  0E80               	movlw	128
 36782  0198AE  EC49  F0D0         	call	_OLED_Command
 36783                           
 36784                           ;oled.c: 170: OLED_Command(0xA8);
 36785  0198B2  0EA8               	movlw	168
 36786  0198B4  EC49  F0D0         	call	_OLED_Command
 36787                           
 36788                           ;oled.c: 172: OLED_Command(0x1F);
 36789  0198B8  0E1F               	movlw	31
 36790  0198BA  EC49  F0D0         	call	_OLED_Command
 36791                           
 36792                           ;oled.c: 174: OLED_Command(0xD3);
 36793  0198BE  0ED3               	movlw	211
 36794  0198C0  EC49  F0D0         	call	_OLED_Command
 36795                           
 36796                           ;oled.c: 176: OLED_Command(0x0);
 36797  0198C4  0E00               	movlw	0
 36798  0198C6  EC49  F0D0         	call	_OLED_Command
 36799                           
 36800                           ;oled.c: 178: OLED_Command(0x40 | 0x0);
 36801  0198CA  0E40               	movlw	64
 36802  0198CC  EC49  F0D0         	call	_OLED_Command
 36803                           
 36804                           ;oled.c: 180: OLED_Command(0x8D);
 36805  0198D0  0E8D               	movlw	141
 36806  0198D2  EC49  F0D0         	call	_OLED_Command
 36807                           
 36808                           ;oled.c: 182: OLED_Command(0xAF);
 36809  0198D6  0EAF               	movlw	175
 36810  0198D8  EC49  F0D0         	call	_OLED_Command
 36811                           
 36812                           ;oled.c: 184: OLED_Command(0x20);
 36813  0198DC  0E20               	movlw	32
 36814  0198DE  EC49  F0D0         	call	_OLED_Command
 36815                           
 36816                           ;oled.c: 186: OLED_Command(0x00);
 36817  0198E2  0E00               	movlw	0
 36818  0198E4  EC49  F0D0         	call	_OLED_Command
 36819                           
 36820                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
 36821  0198E8  0EA1               	movlw	161
 36822  0198EA  EC49  F0D0         	call	_OLED_Command
 36823                           
 36824                           ;oled.c: 190: OLED_Command(0xC8);
 36825  0198EE  0EC8               	movlw	200
 36826  0198F0  EC49  F0D0         	call	_OLED_Command
 36827                           
 36828                           ;oled.c: 192: OLED_Command(0xDA);
 36829  0198F4  0EDA               	movlw	218
 36830  0198F6  EC49  F0D0         	call	_OLED_Command
 36831                           
 36832                           ;oled.c: 194: OLED_Command(0x02);
 36833  0198FA  0E02               	movlw	2
 36834  0198FC  EC49  F0D0         	call	_OLED_Command
 36835                           
 36836                           ;oled.c: 196: OLED_Command(0x81);
 36837  019900  0E81               	movlw	129
 36838  019902  EC49  F0D0         	call	_OLED_Command
 36839                           
 36840                           ;oled.c: 198: OLED_Command(0x8F);
 36841  019906  0E8F               	movlw	143
 36842  019908  EC49  F0D0         	call	_OLED_Command
 36843                           
 36844                           ;oled.c: 200: OLED_Command(0xD9);
 36845  01990C  0ED9               	movlw	217
 36846  01990E  EC49  F0D0         	call	_OLED_Command
 36847                           
 36848                           ;oled.c: 202: OLED_Command(0xF1);
 36849  019912  0EF1               	movlw	241
 36850  019914  EC49  F0D0         	call	_OLED_Command
 36851                           
 36852                           ;oled.c: 204: OLED_Command(0xDB);
 36853  019918  0EDB               	movlw	219
 36854  01991A  EC49  F0D0         	call	_OLED_Command
 36855                           
 36856                           ;oled.c: 206: OLED_Command(0x40);
 36857  01991E  0E40               	movlw	64
 36858  019920  EC49  F0D0         	call	_OLED_Command
 36859                           
 36860                           ;oled.c: 208: OLED_Command(0xA4);
 36861  019924  0EA4               	movlw	164
 36862  019926  EC49  F0D0         	call	_OLED_Command
 36863                           
 36864                           ;oled.c: 210: OLED_Command(0xA6);
 36865  01992A  0EA6               	movlw	166
 36866  01992C  EC49  F0D0         	call	_OLED_Command
 36867                           
 36868                           ;oled.c: 212: OLED_Command(0xAF);
 36869  019930  0EAF               	movlw	175
 36870  019932  EC49  F0D0         	call	_OLED_Command
 36871                           
 36872                           ;oled.c: 215: __nop();
 36873  019936  F000               	nop	
 36874  019938  0012               	return		;funcret
 36875  01993A                     __end_of_OLED_Init:
 36876                           	opt stack 0
 36877                           tosu	equ	0xFFF
 36878                           tosh	equ	0xFFE
 36879                           tosl	equ	0xFFD
 36880                           pclath	equ	0xFFA
 36881                           tblptru	equ	0xFF8
 36882                           tblptrh	equ	0xFF7
 36883                           tblptrl	equ	0xFF6
 36884                           tablat	equ	0xFF5
 36885                           prodh	equ	0xFF4
 36886                           prodl	equ	0xFF3
 36887                           intcon	equ	0xFF2
 36888                           indf0	equ	0xFEF
 36889                           postinc0	equ	0xFEE
 36890                           fsr0h	equ	0xFEA
 36891                           fsr0l	equ	0xFE9
 36892                           wreg	equ	0xFE8
 36893                           indf1	equ	0xFE7
 36894                           postdec1	equ	0xFE5
 36895                           plusw1	equ	0xFE3
 36896                           fsr1h	equ	0xFE2
 36897                           fsr1l	equ	0xFE1
 36898                           indf2	equ	0xFDF
 36899                           postinc2	equ	0xFDE
 36900                           postdec2	equ	0xFDD
 36901                           plusw2	equ	0xFDB
 36902                           fsr2h	equ	0xFDA
 36903                           fsr2l	equ	0xFD9
 36904                           status	equ	0xFD8
 36905                           
 36906 ;; *************** function _OLED_Command *****************
 36907 ;; Defined at:
 36908 ;;		line 110 in file "oled.c"
 36909 ;; Parameters:    Size  Location     Type
 36910 ;;  temp            1    wreg     unsigned char 
 36911 ;; Auto vars:     Size  Location     Type
 36912 ;;  temp            1   39[BANK1 ] unsigned char 
 36913 ;;  data_array      2   41[BANK1 ] unsigned char [2]
 36914 ;;  length          1   40[BANK1 ] unsigned char 
 36915 ;; Return value:  Size  Location     Type
 36916 ;;                  1    wreg      void 
 36917 ;; Registers used:
 36918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36919 ;; Tracked objects:
 36920 ;;		On entry : 0/0
 36921 ;;		On exit  : 0/0
 36922 ;;		Unchanged: 0/0
 36923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36925 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36927 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36928 ;;Total ram usage:        4 bytes
 36929 ;; Hardware stack levels used:    1
 36930 ;; Hardware stack levels required when called:   16
 36931 ;; This function calls:
 36932 ;;		_I2C1_MasterWrite
 36933 ;; This function is called by:
 36934 ;;		_OLED_Init
 36935 ;;		_OLED_YX
 36936 ;; This function uses a non-reentrant model
 36937 ;;
 36938                           
 36939                           	psect	text91
 36940  01A092                     __ptext91:
 36941                           	opt stack 0
 36942  01A092                     _OLED_Command:
 36943                           	opt stack 12
 36944                           
 36945                           ;incstack = 0
 36946                           ;OLED_Command@temp stored from wreg
 36947  01A092  0101               	movlb	1	; () banked
 36948  01A094  6F27               	movwf	OLED_Command@temp& (0+255),b
 36949                           
 36950                           ;oled.c: 112: uint8_t length;
 36951                           ;oled.c: 114: uint8_t data_array[2];
 36952                           ;oled.c: 115: data_array[0] = 0x00;
 36953  01A096  0E00               	movlw	0
 36954  01A098  0101               	movlb	1	; () banked
 36955  01A09A  6F29               	movwf	OLED_Command@data_array& (0+255),b
 36956                           
 36957                           ; BSR set to: 1
 36958                           ;oled.c: 116: data_array[1] = temp;
 36959  01A09C  C127  F12A         	movff	OLED_Command@temp,OLED_Command@data_array+1
 36960                           
 36961                           ; BSR set to: 1
 36962                           ;oled.c: 119: length = 2;
 36963  01A0A0  0E02               	movlw	2
 36964  01A0A2  6F28               	movwf	OLED_Command@length& (0+255),b
 36965                           
 36966                           ; BSR set to: 1
 36967                           ;oled.c: 121: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 36968  01A0A4  0E29               	movlw	low OLED_Command@data_array
 36969  01A0A6  6F20               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 36970  01A0A8  0E01               	movlw	high OLED_Command@data_array
 36971  01A0AA  6F21               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 36972  01A0AC  C128  F122         	movff	OLED_Command@length,I2C1_MasterWrite@length
 36973  01A0B0  0E00               	movlw	0
 36974  01A0B2  6F24               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
 36975  01A0B4  0E3C               	movlw	60
 36976  01A0B6  6F23               	movwf	I2C1_MasterWrite@address& (0+255),b
 36977  01A0B8  0EE8               	movlw	low _OLED_I2C_Status
 36978  01A0BA  6F25               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 36979  01A0BC  0E01               	movlw	high _OLED_I2C_Status
 36980  01A0BE  6F26               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 36981  01A0C0  ECC9  F0D2         	call	_I2C1_MasterWrite	;wreg free
 36982  01A0C4  0E02               	movlw	2
 36983  01A0C6  0101               	movlb	1	; () banked
 36984  01A0C8  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 36985  01A0CA  B4D8               	btfsc	status,2,c
 36986  01A0CC  D7FB               	goto	l1687
 36987                           
 36988                           ; BSR set to: 1
 36989                           ;oled.c: 125: if ( OLED_I2C_Status == I2C1_MESSAGE_FAIL ||
 36990                           ;oled.c: 126: OLED_I2C_Status == I2C1_STUCK_START ||
 36991                           ;oled.c: 127: OLED_I2C_Status == I2C1_MESSAGE_ADDRESS_NO_ACK ||
 36992                           ;oled.c: 128: OLED_I2C_Status == I2C1_DATA_NO_ACK ||
 36993                           ;oled.c: 129: OLED_I2C_Status == I2C1_LOST_STATE ) {
 36994                           
 36995                           ; BSR set to: 1
 36996  01A0CE  05E8               	decf	_OLED_I2C_Status& (0+255),w,b
 36997  01A0D0  B4D8               	btfsc	status,2,c
 36998  01A0D2  D010               	goto	u21450
 36999                           
 37000                           ; BSR set to: 1
 37001  01A0D4  0E03               	movlw	3
 37002  01A0D6  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 37003  01A0D8  B4D8               	btfsc	status,2,c
 37004  01A0DA  D00C               	goto	u21450
 37005                           
 37006                           ; BSR set to: 1
 37007  01A0DC  0E04               	movlw	4
 37008  01A0DE  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 37009  01A0E0  B4D8               	btfsc	status,2,c
 37010  01A0E2  D008               	goto	u21450
 37011                           
 37012                           ; BSR set to: 1
 37013  01A0E4  0E05               	movlw	5
 37014  01A0E6  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 37015  01A0E8  B4D8               	btfsc	status,2,c
 37016  01A0EA  D004               	goto	u21450
 37017                           
 37018                           ; BSR set to: 1
 37019  01A0EC  0E06               	movlw	6
 37020  01A0EE  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 37021  01A0F0  A4D8               	btfss	status,2,c
 37022  01A0F2  0012               	return	
 37023  01A0F4                     u21450:
 37024                           
 37025                           ; BSR set to: 1
 37026                           ;oled.c: 130: error_handler.I2C_COMM_error_flag = 1;
 37027                           
 37028                           ; BSR set to: 1
 37029  01A0F4  0E01               	movlw	1
 37030  01A0F6  0102               	movlb	2	; () banked
 37031  01A0F8  6F07               	movwf	(_error_handler+7)& (0+255),b
 37032  01A0FA  0012               	return	
 37033  01A0FC                     __end_of_OLED_Command:
 37034                           	opt stack 0
 37035                           tosu	equ	0xFFF
 37036                           tosh	equ	0xFFE
 37037                           tosl	equ	0xFFD
 37038                           pclath	equ	0xFFA
 37039                           tblptru	equ	0xFF8
 37040                           tblptrh	equ	0xFF7
 37041                           tblptrl	equ	0xFF6
 37042                           tablat	equ	0xFF5
 37043                           prodh	equ	0xFF4
 37044                           prodl	equ	0xFF3
 37045                           intcon	equ	0xFF2
 37046                           indf0	equ	0xFEF
 37047                           postinc0	equ	0xFEE
 37048                           fsr0h	equ	0xFEA
 37049                           fsr0l	equ	0xFE9
 37050                           wreg	equ	0xFE8
 37051                           indf1	equ	0xFE7
 37052                           postdec1	equ	0xFE5
 37053                           plusw1	equ	0xFE3
 37054                           fsr1h	equ	0xFE2
 37055                           fsr1l	equ	0xFE1
 37056                           indf2	equ	0xFDF
 37057                           postinc2	equ	0xFDE
 37058                           postdec2	equ	0xFDD
 37059                           plusw2	equ	0xFDB
 37060                           fsr2h	equ	0xFDA
 37061                           fsr2l	equ	0xFD9
 37062                           status	equ	0xFD8
 37063                           
 37064 ;; *************** function _I2C1_MasterWrite *****************
 37065 ;; Defined at:
 37066 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 37067 ;; Parameters:    Size  Location     Type
 37068 ;;  pdata           2   32[BANK1 ] PTR unsigned char 
 37069 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 37070 ;;  length          1   34[BANK1 ] unsigned char 
 37071 ;;  address         2   35[BANK1 ] unsigned int 
 37072 ;;  pflag           2   37[BANK1 ] PTR enum E17311
 37073 ;;		 -> OLED_I2C_Status(1), 
 37074 ;; Auto vars:     Size  Location     Type
 37075 ;;		None
 37076 ;; Return value:  Size  Location     Type
 37077 ;;                  1    wreg      void 
 37078 ;; Registers used:
 37079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37080 ;; Tracked objects:
 37081 ;;		On entry : 0/0
 37082 ;;		On exit  : 0/0
 37083 ;;		Unchanged: 0/0
 37084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37085 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37088 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37089 ;;Total ram usage:        7 bytes
 37090 ;; Hardware stack levels used:    1
 37091 ;; Hardware stack levels required when called:   15
 37092 ;; This function calls:
 37093 ;;		_I2C1_MasterTRBInsert
 37094 ;;		_I2C1_MasterWriteTRBBuild
 37095 ;; This function is called by:
 37096 ;;		_OLED_Command
 37097 ;;		_OLED_PutChar
 37098 ;;		_OLED_Data
 37099 ;; This function uses a non-reentrant model
 37100 ;;
 37101                           
 37102                           	psect	text92
 37103  01A592                     __ptext92:
 37104                           	opt stack 0
 37105  01A592                     _I2C1_MasterWrite:
 37106                           	opt stack 12
 37107                           
 37108                           ;i2c1.c: 606: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 37109                           ;i2c1.c: 609: if (i2c1_object.trStatus.s.full != 1)
 37110                           
 37111                           ;incstack = 0
 37112  01A592  0102               	movlb	2	; () banked
 37113  01A594  B10D               	btfsc	(_i2c1_object+4)& (0+255),0,b
 37114  01A596  D01E               	goto	l1853
 37115                           
 37116                           ; BSR set to: 2
 37117                           ;i2c1.c: 610: {
 37118                           ;i2c1.c: 611: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 37119  01A598  0E8A               	movlw	low I2C1_MasterWrite@trBlock
 37120  01A59A  0101               	movlb	1	; () banked
 37121  01A59C  6F17               	movwf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),b
 37122  01A59E  0E02               	movlw	high I2C1_MasterWrite@trBlock
 37123  01A5A0  6F18               	movwf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 37124  01A5A2  C120  F119         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 37125  01A5A6  C121  F11A         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 37126  01A5AA  C122  F11B         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 37127  01A5AE  C123  F11C         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 37128  01A5B2  C124  F11D         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 37129  01A5B6  EC1F  F0D4         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 37130                           
 37131                           ;i2c1.c: 612: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 37132  01A5BA  0E8A               	movlw	low I2C1_MasterWrite@trBlock
 37133  01A5BC  0101               	movlb	1	; () banked
 37134  01A5BE  6F17               	movwf	I2C1_MasterTRBInsert@ptrb_list& (0+255),b
 37135  01A5C0  0E02               	movlw	high I2C1_MasterWrite@trBlock
 37136  01A5C2  6F18               	movwf	(I2C1_MasterTRBInsert@ptrb_list+1)& (0+255),b
 37137  01A5C4  C125  F119         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 37138  01A5C8  C126  F11A         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 37139  01A5CC  0E01               	movlw	1
 37140  01A5CE  ECFF  F0CB         	call	_I2C1_MasterTRBInsert
 37141                           
 37142                           ;i2c1.c: 613: }
 37143  01A5D2  0012               	return	
 37144  01A5D4                     l1853:
 37145                           
 37146                           ;i2c1.c: 614: else
 37147                           ;i2c1.c: 615: {
 37148                           ;i2c1.c: 616: *pflag = I2C1_MESSAGE_FAIL;
 37149  01A5D4  C125  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 37150  01A5D8  C126  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 37151  01A5DC  0E01               	movlw	1
 37152  01A5DE  6EDF               	movwf	indf2,c
 37153  01A5E0  0012               	return	
 37154  01A5E2                     __end_of_I2C1_MasterWrite:
 37155                           	opt stack 0
 37156                           tosu	equ	0xFFF
 37157                           tosh	equ	0xFFE
 37158                           tosl	equ	0xFFD
 37159                           pclath	equ	0xFFA
 37160                           tblptru	equ	0xFF8
 37161                           tblptrh	equ	0xFF7
 37162                           tblptrl	equ	0xFF6
 37163                           tablat	equ	0xFF5
 37164                           prodh	equ	0xFF4
 37165                           prodl	equ	0xFF3
 37166                           intcon	equ	0xFF2
 37167                           indf0	equ	0xFEF
 37168                           postinc0	equ	0xFEE
 37169                           fsr0h	equ	0xFEA
 37170                           fsr0l	equ	0xFE9
 37171                           wreg	equ	0xFE8
 37172                           indf1	equ	0xFE7
 37173                           postdec1	equ	0xFE5
 37174                           plusw1	equ	0xFE3
 37175                           fsr1h	equ	0xFE2
 37176                           fsr1l	equ	0xFE1
 37177                           indf2	equ	0xFDF
 37178                           postinc2	equ	0xFDE
 37179                           postdec2	equ	0xFDD
 37180                           plusw2	equ	0xFDB
 37181                           fsr2h	equ	0xFDA
 37182                           fsr2l	equ	0xFD9
 37183                           status	equ	0xFD8
 37184                           
 37185 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 37186 ;; Defined at:
 37187 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 37188 ;; Parameters:    Size  Location     Type
 37189 ;;  ptrb            2   23[BANK1 ] PTR struct .
 37190 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 37191 ;;  pdata           2   25[BANK1 ] PTR unsigned char 
 37192 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 37193 ;;  length          1   27[BANK1 ] unsigned char 
 37194 ;;  address         2   28[BANK1 ] unsigned int 
 37195 ;; Auto vars:     Size  Location     Type
 37196 ;;		None
 37197 ;; Return value:  Size  Location     Type
 37198 ;;                  1    wreg      void 
 37199 ;; Registers used:
 37200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37201 ;; Tracked objects:
 37202 ;;		On entry : 0/0
 37203 ;;		On exit  : 0/0
 37204 ;;		Unchanged: 0/0
 37205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37206 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37208 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37209 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37210 ;;Total ram usage:        9 bytes
 37211 ;; Hardware stack levels used:    1
 37212 ;; Hardware stack levels required when called:   13
 37213 ;; This function calls:
 37214 ;;		Nothing
 37215 ;; This function is called by:
 37216 ;;		_I2C1_MasterWrite
 37217 ;; This function uses a non-reentrant model
 37218 ;;
 37219                           
 37220                           	psect	text93
 37221  01A83E                     __ptext93:
 37222                           	opt stack 0
 37223  01A83E                     _I2C1_MasterWriteTRBBuild:
 37224                           	opt stack 13
 37225                           
 37226                           ;i2c1.c: 727: ptrb->address = address << 1;
 37227                           
 37228                           ;incstack = 0
 37229  01A83E  C11C  F11E         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 37230  01A842  C11D  F11F         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 37231  01A846  90D8               	bcf	status,0,c
 37232  01A848  0101               	movlb	1	; () banked
 37233  01A84A  371E               	rlcf	??_I2C1_MasterWriteTRBBuild& (0+255),f,b
 37234  01A84C  371F               	rlcf	(??_I2C1_MasterWriteTRBBuild+1)& (0+255),f,b
 37235  01A84E  C117  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 37236  01A852  C118  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 37237  01A856  C11E  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 37238  01A85A  C11F  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 37239                           
 37240                           ; BSR set to: 1
 37241                           ;i2c1.c: 728: ptrb->length = length;
 37242  01A85E  EE20 F002          	lfsr	2,2
 37243  01A862  5117               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 37244  01A864  26D9               	addwf	fsr2l,f,c
 37245  01A866  5118               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 37246  01A868  22DA               	addwfc	fsr2h,f,c
 37247  01A86A  C11B  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 37248                           
 37249                           ; BSR set to: 1
 37250                           ;i2c1.c: 729: ptrb->pbuffer = pdata;
 37251  01A86E  EE20 F003          	lfsr	2,3
 37252  01A872  5117               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 37253  01A874  26D9               	addwf	fsr2l,f,c
 37254  01A876  5118               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 37255  01A878  22DA               	addwfc	fsr2h,f,c
 37256  01A87A  C119  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 37257  01A87E  C11A  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 37258                           
 37259                           ; BSR set to: 1
 37260  01A882  0012               	return		;funcret
 37261  01A884                     __end_of_I2C1_MasterWriteTRBBuild:
 37262                           	opt stack 0
 37263                           tosu	equ	0xFFF
 37264                           tosh	equ	0xFFE
 37265                           tosl	equ	0xFFD
 37266                           pclath	equ	0xFFA
 37267                           tblptru	equ	0xFF8
 37268                           tblptrh	equ	0xFF7
 37269                           tblptrl	equ	0xFF6
 37270                           tablat	equ	0xFF5
 37271                           prodh	equ	0xFF4
 37272                           prodl	equ	0xFF3
 37273                           intcon	equ	0xFF2
 37274                           indf0	equ	0xFEF
 37275                           postinc0	equ	0xFEE
 37276                           fsr0h	equ	0xFEA
 37277                           fsr0l	equ	0xFE9
 37278                           wreg	equ	0xFE8
 37279                           indf1	equ	0xFE7
 37280                           postdec1	equ	0xFE5
 37281                           plusw1	equ	0xFE3
 37282                           fsr1h	equ	0xFE2
 37283                           fsr1l	equ	0xFE1
 37284                           indf2	equ	0xFDF
 37285                           postinc2	equ	0xFDE
 37286                           postdec2	equ	0xFDD
 37287                           plusw2	equ	0xFDB
 37288                           fsr2h	equ	0xFDA
 37289                           fsr2l	equ	0xFD9
 37290                           status	equ	0xFD8
 37291                           
 37292 ;; *************** function _I2C1_MasterTRBInsert *****************
 37293 ;; Defined at:
 37294 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 37295 ;; Parameters:    Size  Location     Type
 37296 ;;  count           1    wreg     unsigned char 
 37297 ;;  ptrb_list       2   23[BANK1 ] PTR struct .
 37298 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 37299 ;;  pflag           2   25[BANK1 ] PTR enum E17311
 37300 ;;		 -> OLED_I2C_Status(1), 
 37301 ;; Auto vars:     Size  Location     Type
 37302 ;;  count           1   28[BANK1 ] unsigned char 
 37303 ;; Return value:  Size  Location     Type
 37304 ;;                  1    wreg      void 
 37305 ;; Registers used:
 37306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37307 ;; Tracked objects:
 37308 ;;		On entry : 0/0
 37309 ;;		On exit  : 0/0
 37310 ;;		Unchanged: 0/0
 37311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37312 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37313 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37314 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37315 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37316 ;;Total ram usage:        6 bytes
 37317 ;; Hardware stack levels used:    1
 37318 ;; Hardware stack levels required when called:   14
 37319 ;; This function calls:
 37320 ;;		_I2C1_WaitForLastPacketToComplete
 37321 ;; This function is called by:
 37322 ;;		_I2C1_MasterWrite
 37323 ;;		_I2C1_MasterRead
 37324 ;; This function uses a non-reentrant model
 37325 ;;
 37326                           
 37327                           	psect	text94
 37328  0197FE                     __ptext94:
 37329                           	opt stack 0
 37330  0197FE                     _I2C1_MasterTRBInsert:
 37331                           	opt stack 12
 37332                           
 37333                           ; BSR set to: 1
 37334                           ;incstack = 0
 37335                           ;I2C1_MasterTRBInsert@count stored from wreg
 37336  0197FE  0101               	movlb	1	; () banked
 37337  019800  6F1C               	movwf	I2C1_MasterTRBInsert@count& (0+255),b
 37338                           
 37339                           ;i2c1.c: 661: if (i2c1_object.trStatus.s.full != 1)
 37340  019802  0102               	movlb	2	; () banked
 37341  019804  B10D               	btfsc	(_i2c1_object+4)& (0+255),0,b
 37342  019806  D039               	goto	l1871
 37343                           
 37344                           ; BSR set to: 2
 37345                           ;i2c1.c: 662: {
 37346                           ;i2c1.c: 663: *pflag = I2C1_MESSAGE_PENDING;
 37347  019808  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 37348  01980C  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 37349  019810  0E02               	movlw	2
 37350  019812  6EDF               	movwf	indf2,c
 37351                           
 37352                           ; BSR set to: 2
 37353                           ;i2c1.c: 665: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 37354  019814  EE20 F001          	lfsr	2,1
 37355  019818  5109               	movf	_i2c1_object& (0+255),w,b
 37356  01981A  26D9               	addwf	fsr2l,f,c
 37357  01981C  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 37358  01981E  22DA               	addwfc	fsr2h,f,c
 37359  019820  C117  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 37360  019824  C118  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 37361                           
 37362                           ; BSR set to: 2
 37363                           ;i2c1.c: 666: i2c1_object.pTrTail->count = count;
 37364  019828  C209  FFD9         	movff	_i2c1_object,fsr2l
 37365  01982C  C20A  FFDA         	movff	_i2c1_object+1,fsr2h
 37366  019830  C11C  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 37367                           
 37368                           ; BSR set to: 2
 37369                           ;i2c1.c: 667: i2c1_object.pTrTail->pTrFlag = pflag;
 37370  019834  EE20 F003          	lfsr	2,3
 37371  019838  5109               	movf	_i2c1_object& (0+255),w,b
 37372  01983A  26D9               	addwf	fsr2l,f,c
 37373  01983C  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 37374  01983E  22DA               	addwfc	fsr2h,f,c
 37375  019840  C119  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 37376  019844  C11A  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 37377                           
 37378                           ; BSR set to: 2
 37379                           ;i2c1.c: 668: i2c1_object.pTrTail++;
 37380  019848  0E05               	movlw	5
 37381  01984A  2709               	addwf	_i2c1_object& (0+255),f,b
 37382  01984C  0E00               	movlw	0
 37383  01984E  230A               	addwfc	(_i2c1_object+1)& (0+255),f,b
 37384                           
 37385                           ; BSR set to: 2
 37386                           ;i2c1.c: 671: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 37387  019850  0E94               	movlw	low (_i2c1_tr_queue+5)
 37388  019852  1909               	xorwf	_i2c1_object& (0+255),w,b
 37389  019854  E108               	bnz	l15631
 37390  019856  0E02               	movlw	high (_i2c1_tr_queue+5)
 37391  019858  190A               	xorwf	(_i2c1_object+1)& (0+255),w,b
 37392  01985A  A4D8               	btfss	status,2,c
 37393  01985C  D004               	goto	l1872
 37394                           
 37395                           ; BSR set to: 2
 37396                           ;i2c1.c: 672: {
 37397                           ;i2c1.c: 674: i2c1_object.pTrTail = i2c1_tr_queue;
 37398  01985E  0E8F               	movlw	low _i2c1_tr_queue
 37399  019860  6F09               	movwf	_i2c1_object& (0+255),b
 37400  019862  0E02               	movlw	high _i2c1_tr_queue
 37401  019864  6F0A               	movwf	(_i2c1_object+1)& (0+255),b
 37402  019866                     l1872:
 37403  019866                     l15631:
 37404                           
 37405                           ; BSR set to: 2
 37406                           ;i2c1.c: 675: }
 37407                           ;i2c1.c: 679: i2c1_object.trStatus.s.empty = 0;
 37408  019866  930D               	bcf	(_i2c1_object+4)& (0+255),1,b
 37409                           
 37410                           ;i2c1.c: 682: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 37411  019868  5109               	movf	_i2c1_object& (0+255),w,b
 37412  01986A  190B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 37413  01986C  E10C               	bnz	l15637
 37414  01986E  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 37415  019870  190C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 37416  019872  A4D8               	btfss	status,2,c
 37417  019874  D008               	goto	l1874
 37418                           
 37419                           ; BSR set to: 2
 37420                           ;i2c1.c: 683: {
 37421                           ;i2c1.c: 685: i2c1_object.trStatus.s.full = 1;
 37422  019876  810D               	bsf	(_i2c1_object+4)& (0+255),0,b
 37423                           
 37424                           ; BSR set to: 2
 37425                           ;i2c1.c: 686: }
 37426                           ;i2c1.c: 688: }
 37427  019878  D006               	goto	l1874
 37428  01987A                     l1871:
 37429                           
 37430                           ; BSR set to: 2
 37431                           ;i2c1.c: 689: else
 37432                           ;i2c1.c: 690: {
 37433                           ;i2c1.c: 691: *pflag = I2C1_MESSAGE_FAIL;
 37434                           
 37435                           ; BSR set to: 2
 37436  01987A  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 37437  01987E  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 37438  019882  0E01               	movlw	1
 37439  019884  6EDF               	movwf	indf2,c
 37440  019886                     l1874:
 37441  019886                     l15637:
 37442                           
 37443                           ; BSR set to: 2
 37444                           ;i2c1.c: 692: }
 37445                           ;i2c1.c: 695: if (*pflag == I2C1_MESSAGE_PENDING)
 37446  019886  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 37447  01988A  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 37448  01988E  0E02               	movlw	2
 37449  019890  18DE               	xorwf	postinc2,w,c
 37450  019892  A4D8               	btfss	status,2,c
 37451  019894  0012               	return	
 37452                           
 37453                           ; BSR set to: 2
 37454                           ;i2c1.c: 696: {
 37455                           ;i2c1.c: 697: I2C1_WaitForLastPacketToComplete();
 37456  019896  EC77  F0D9         	call	_I2C1_WaitForLastPacketToComplete	;wreg free
 37457                           
 37458                           ;i2c1.c: 702: PIR3bits.SSP1IF = 1;
 37459  01989A  010E               	movlb	14	; () banked
 37460  01989C  8136               	bsf	54,0,b	;volatile
 37461  01989E  0012               	return	
 37462  0198A0                     __end_of_I2C1_MasterTRBInsert:
 37463                           	opt stack 0
 37464                           tosu	equ	0xFFF
 37465                           tosh	equ	0xFFE
 37466                           tosl	equ	0xFFD
 37467                           pclath	equ	0xFFA
 37468                           tblptru	equ	0xFF8
 37469                           tblptrh	equ	0xFF7
 37470                           tblptrl	equ	0xFF6
 37471                           tablat	equ	0xFF5
 37472                           prodh	equ	0xFF4
 37473                           prodl	equ	0xFF3
 37474                           intcon	equ	0xFF2
 37475                           indf0	equ	0xFEF
 37476                           postinc0	equ	0xFEE
 37477                           fsr0h	equ	0xFEA
 37478                           fsr0l	equ	0xFE9
 37479                           wreg	equ	0xFE8
 37480                           indf1	equ	0xFE7
 37481                           postdec1	equ	0xFE5
 37482                           plusw1	equ	0xFE3
 37483                           fsr1h	equ	0xFE2
 37484                           fsr1l	equ	0xFE1
 37485                           indf2	equ	0xFDF
 37486                           postinc2	equ	0xFDE
 37487                           postdec2	equ	0xFDD
 37488                           plusw2	equ	0xFDB
 37489                           fsr2h	equ	0xFDA
 37490                           fsr2l	equ	0xFD9
 37491                           status	equ	0xFD8
 37492                           
 37493 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 37494 ;; Defined at:
 37495 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 37496 ;; Parameters:    Size  Location     Type
 37497 ;;		None
 37498 ;; Auto vars:     Size  Location     Type
 37499 ;;		None
 37500 ;; Return value:  Size  Location     Type
 37501 ;;                  1    wreg      void 
 37502 ;; Registers used:
 37503 ;;		wreg, status,2
 37504 ;; Tracked objects:
 37505 ;;		On entry : 0/0
 37506 ;;		On exit  : 0/0
 37507 ;;		Unchanged: 0/0
 37508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37513 ;;Total ram usage:        0 bytes
 37514 ;; Hardware stack levels used:    1
 37515 ;; Hardware stack levels required when called:   13
 37516 ;; This function calls:
 37517 ;;		Nothing
 37518 ;; This function is called by:
 37519 ;;		_I2C1_MasterTRBInsert
 37520 ;; This function uses a non-reentrant model
 37521 ;;
 37522                           
 37523                           	psect	text95
 37524  01B2EE                     __ptext95:
 37525                           	opt stack 0
 37526  01B2EE                     _I2C1_WaitForLastPacketToComplete:
 37527                           	opt stack 12
 37528                           
 37529                           ;i2c1.c: 647: {
 37530                           
 37531                           ;i2c1.c: 646: while(i2c1_state != S_MASTER_IDLE)
 37532                           
 37533                           ;incstack = 0
 37534  01B2EE  0102               	movlb	2	; () banked
 37535  01B2F0  516D               	movf	_i2c1_state& (0+255),w,b
 37536  01B2F2  B4D8               	btfsc	status,2,c
 37537  01B2F4  0012               	return	
 37538  01B2F6  D7FB               	goto	_I2C1_WaitForLastPacketToComplete
 37539  01B2F8                     __end_of_I2C1_WaitForLastPacketToComplete:
 37540                           	opt stack 0
 37541                           tosu	equ	0xFFF
 37542                           tosh	equ	0xFFE
 37543                           tosl	equ	0xFFD
 37544                           pclath	equ	0xFFA
 37545                           tblptru	equ	0xFF8
 37546                           tblptrh	equ	0xFF7
 37547                           tblptrl	equ	0xFF6
 37548                           tablat	equ	0xFF5
 37549                           prodh	equ	0xFF4
 37550                           prodl	equ	0xFF3
 37551                           intcon	equ	0xFF2
 37552                           indf0	equ	0xFEF
 37553                           postinc0	equ	0xFEE
 37554                           fsr0h	equ	0xFEA
 37555                           fsr0l	equ	0xFE9
 37556                           wreg	equ	0xFE8
 37557                           indf1	equ	0xFE7
 37558                           postdec1	equ	0xFE5
 37559                           plusw1	equ	0xFE3
 37560                           fsr1h	equ	0xFE2
 37561                           fsr1l	equ	0xFE1
 37562                           indf2	equ	0xFDF
 37563                           postinc2	equ	0xFDE
 37564                           postdec2	equ	0xFDD
 37565                           plusw2	equ	0xFDB
 37566                           fsr2h	equ	0xFDA
 37567                           fsr2l	equ	0xFD9
 37568                           status	equ	0xFD8
 37569                           
 37570 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 37571 ;; Defined at:
 37572 ;;		line 136 in file "mcc_generated_files/interrupt_manager.c"
 37573 ;; Parameters:    Size  Location     Type
 37574 ;;		None
 37575 ;; Auto vars:     Size  Location     Type
 37576 ;;		None
 37577 ;; Return value:  Size  Location     Type
 37578 ;;                  1    wreg      void 
 37579 ;; Registers used:
 37580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37581 ;; Tracked objects:
 37582 ;;		On entry : 0/0
 37583 ;;		On exit  : 0/0
 37584 ;;		Unchanged: 0/0
 37585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37588 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37589 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37590 ;;Total ram usage:       21 bytes
 37591 ;; Hardware stack levels used:    1
 37592 ;; Hardware stack levels required when called:   12
 37593 ;; This function calls:
 37594 ;;		Absolute function
 37595 ;;		_EUSART2_Transmit_ISR
 37596 ;;		_TMR6_ISR
 37597 ;;		_TMR7_ISR
 37598 ;; This function is called by:
 37599 ;;		Interrupt level 1
 37600 ;; This function uses a non-reentrant model
 37601 ;;
 37602                           
 37603                           	psect	intcodelo
 37604  000018                     __pintcodelo:
 37605                           	opt stack 0
 37606  000018                     _INTERRUPT_InterruptManagerLow:
 37607                           	opt stack 10
 37608                           
 37609                           ; BSR set to: 2
 37610                           ;incstack = 0
 37611  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 37612  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 37613  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 37614  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 37615  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 37616  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 37617  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 37618  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 37619  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 37620  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 37621  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 37622  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 37623  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 37624  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 37625  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 37626  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 37627  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 37628  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 37629  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 37630  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 37631  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 37632  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 37633                           
 37634                           ;interrupt_manager.c: 139: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 37635  00006E  010E               	movlb	14	; () banked
 37636  000070  BB2E               	btfsc	46,5,b	;volatile
 37637                           
 37638                           ; BSR set to: 14
 37639  000072  AB38               	btfss	56,5,b	;volatile
 37640  000074  D003               	goto	i1l267
 37641                           
 37642                           ; BSR set to: 14
 37643                           ;interrupt_manager.c: 140: {
 37644                           ;interrupt_manager.c: 141: TMR6_ISR();
 37645  000076  EC4C  F0D7         	call	_TMR6_ISR	;wreg free
 37646                           
 37647                           ;interrupt_manager.c: 142: }
 37648  00007A  D015               	goto	i1l271
 37649  00007C                     i1l267:
 37650                           
 37651                           ; BSR set to: 14
 37652                           ;interrupt_manager.c: 143: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 37653  00007C  BD2C               	btfsc	44,6,b	;volatile
 37654                           
 37655                           ; BSR set to: 14
 37656  00007E  AD36               	btfss	54,6,b	;volatile
 37657  000080  D00D               	goto	i1l269
 37658                           
 37659                           ; BSR set to: 14
 37660                           ;interrupt_manager.c: 144: {
 37661                           ;interrupt_manager.c: 145: EUSART2_TxDefaultInterruptHandler();
 37662  000082  D801               	call	i1u3543_28
 37663  000084  D010               	goto	i1l271
 37664  000086                     i1u3543_28:
 37665  000086  0005               	push	
 37666  000088  6EFA               	movwf	pclath,c
 37667  00008A  0102               	movlb	2	; () banked
 37668  00008C  5159               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 37669  00008E  6EFD               	movwf	tosl,c
 37670  000090  515A               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 37671  000092  6EFE               	movwf	tosh,c
 37672  000094  515B               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 37673  000096  6EFF               	movwf	tosu,c
 37674  000098  50FA               	movf	pclath,w,c
 37675  00009A  0012               	return		;indir
 37676  00009C                     i1l269:
 37677                           
 37678                           ; BSR set to: 14
 37679                           ;interrupt_manager.c: 147: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 37680  00009C  BD2E               	btfsc	46,6,b	;volatile
 37681                           
 37682                           ; BSR set to: 14
 37683  00009E  AD38               	btfss	56,6,b	;volatile
 37684  0000A0  D002               	goto	i1l271
 37685                           
 37686                           ; BSR set to: 14
 37687                           ;interrupt_manager.c: 148: {
 37688                           ;interrupt_manager.c: 149: TMR7_ISR();
 37689  0000A2  EC77  F0D6         	call	_TMR7_ISR	;wreg free
 37690  0000A6                     i1l271:
 37691                           
 37692                           ;interrupt_manager.c: 151: else
 37693                           ;interrupt_manager.c: 152: {
 37694  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 37695  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 37696  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 37697  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 37698  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 37699  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 37700  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 37701  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 37702  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 37703  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 37704  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 37705  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 37706  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 37707  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 37708  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 37709  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 37710  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 37711  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 37712  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 37713  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 37714  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 37715  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 37716  0000FC  0010               	retfie	
 37717  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 37718                           	opt stack 0
 37719                           tosu	equ	0xFFF
 37720                           tosh	equ	0xFFE
 37721                           tosl	equ	0xFFD
 37722                           pclatu	equ	0xFFB
 37723                           pclath	equ	0xFFA
 37724                           tblptru	equ	0xFF8
 37725                           tblptrh	equ	0xFF7
 37726                           tblptrl	equ	0xFF6
 37727                           tablat	equ	0xFF5
 37728                           prodh	equ	0xFF4
 37729                           prodl	equ	0xFF3
 37730                           intcon	equ	0xFF2
 37731                           indf0	equ	0xFEF
 37732                           postinc0	equ	0xFEE
 37733                           fsr0h	equ	0xFEA
 37734                           fsr0l	equ	0xFE9
 37735                           wreg	equ	0xFE8
 37736                           indf1	equ	0xFE7
 37737                           postdec1	equ	0xFE5
 37738                           plusw1	equ	0xFE3
 37739                           fsr1h	equ	0xFE2
 37740                           fsr1l	equ	0xFE1
 37741                           bsr	equ	0xFE0
 37742                           indf2	equ	0xFDF
 37743                           postinc2	equ	0xFDE
 37744                           postdec2	equ	0xFDD
 37745                           plusw2	equ	0xFDB
 37746                           fsr2h	equ	0xFDA
 37747                           fsr2l	equ	0xFD9
 37748                           status	equ	0xFD8
 37749                           
 37750 ;; *************** function _TMR7_ISR *****************
 37751 ;; Defined at:
 37752 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 37753 ;; Parameters:    Size  Location     Type
 37754 ;;		None
 37755 ;; Auto vars:     Size  Location     Type
 37756 ;;		None
 37757 ;; Return value:  Size  Location     Type
 37758 ;;                  1    wreg      void 
 37759 ;; Registers used:
 37760 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 37761 ;; Tracked objects:
 37762 ;;		On entry : 0/0
 37763 ;;		On exit  : 0/0
 37764 ;;		Unchanged: 0/0
 37765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37770 ;;Total ram usage:        0 bytes
 37771 ;; Hardware stack levels used:    1
 37772 ;; Hardware stack levels required when called:   11
 37773 ;; This function calls:
 37774 ;;		Absolute function
 37775 ;;		_TMR7_DefaultInterruptHandler
 37776 ;;		_TMR7_WriteTimer
 37777 ;;		_acquisitionTimerCallback
 37778 ;; This function is called by:
 37779 ;;		_INTERRUPT_InterruptManagerLow
 37780 ;; This function uses a non-reentrant model
 37781 ;;
 37782                           
 37783                           	psect	text97
 37784  01ACEE                     __ptext97:
 37785                           	opt stack 0
 37786  01ACEE                     _TMR7_ISR:
 37787                           	opt stack 10
 37788                           
 37789                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 37790                           
 37791                           ;incstack = 0
 37792  01ACEE  010E               	movlb	14	; () banked
 37793  01ACF0  9D38               	bcf	56,6,b	;volatile
 37794                           
 37795                           ; BSR set to: 14
 37796                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 37797  01ACF2  C268  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 37798  01ACF6  C269  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 37799  01ACFA  EC87  F0D7         	call	_TMR7_WriteTimer	;wreg free
 37800                           
 37801                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 37802  01ACFE  0102               	movlb	2	; () banked
 37803  01AD00  514D               	movf	_TMR7_InterruptHandler& (0+255),w,b
 37804  01AD02  114E               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 37805  01AD04  114F               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 37806  01AD06  B4D8               	btfsc	status,2,c
 37807  01AD08  0012               	return	
 37808                           
 37809                           ; BSR set to: 2
 37810                           ;tmr7.c: 172: {
 37811                           ;tmr7.c: 173: TMR7_InterruptHandler();
 37812  01AD0A  D801               	call	i1u3510_28
 37813  01AD0C  0012               	return	
 37814  01AD0E                     i1u3510_28:
 37815  01AD0E  0005               	push	
 37816  01AD10  6EFA               	movwf	pclath,c
 37817  01AD12  514D               	movf	_TMR7_InterruptHandler& (0+255),w,b
 37818  01AD14  6EFD               	movwf	tosl,c
 37819  01AD16  514E               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 37820  01AD18  6EFE               	movwf	tosh,c
 37821  01AD1A  514F               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 37822  01AD1C  6EFF               	movwf	tosu,c
 37823  01AD1E  50FA               	movf	pclath,w,c
 37824  01AD20  0012               	return		;indir
 37825  01AD22                     __end_of_TMR7_ISR:
 37826                           	opt stack 0
 37827                           tosu	equ	0xFFF
 37828                           tosh	equ	0xFFE
 37829                           tosl	equ	0xFFD
 37830                           pclatu	equ	0xFFB
 37831                           pclath	equ	0xFFA
 37832                           tblptru	equ	0xFF8
 37833                           tblptrh	equ	0xFF7
 37834                           tblptrl	equ	0xFF6
 37835                           tablat	equ	0xFF5
 37836                           prodh	equ	0xFF4
 37837                           prodl	equ	0xFF3
 37838                           intcon	equ	0xFF2
 37839                           indf0	equ	0xFEF
 37840                           postinc0	equ	0xFEE
 37841                           fsr0h	equ	0xFEA
 37842                           fsr0l	equ	0xFE9
 37843                           wreg	equ	0xFE8
 37844                           indf1	equ	0xFE7
 37845                           postdec1	equ	0xFE5
 37846                           plusw1	equ	0xFE3
 37847                           fsr1h	equ	0xFE2
 37848                           fsr1l	equ	0xFE1
 37849                           bsr	equ	0xFE0
 37850                           indf2	equ	0xFDF
 37851                           postinc2	equ	0xFDE
 37852                           postdec2	equ	0xFDD
 37853                           plusw2	equ	0xFDB
 37854                           fsr2h	equ	0xFDA
 37855                           fsr2l	equ	0xFD9
 37856                           status	equ	0xFD8
 37857                           
 37858 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 37859 ;; Defined at:
 37860 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 37861 ;; Parameters:    Size  Location     Type
 37862 ;;		None
 37863 ;; Auto vars:     Size  Location     Type
 37864 ;;		None
 37865 ;; Return value:  Size  Location     Type
 37866 ;;                  1    wreg      void 
 37867 ;; Registers used:
 37868 ;;		None
 37869 ;; Tracked objects:
 37870 ;;		On entry : 0/0
 37871 ;;		On exit  : 0/0
 37872 ;;		Unchanged: 0/0
 37873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37878 ;;Total ram usage:        0 bytes
 37879 ;; Hardware stack levels used:    1
 37880 ;; Hardware stack levels required when called:    9
 37881 ;; This function calls:
 37882 ;;		Nothing
 37883 ;; This function is called by:
 37884 ;;		_TMR7_Initialize
 37885 ;;		_TMR7_ISR
 37886 ;; This function uses a non-reentrant model
 37887 ;;
 37888                           
 37889                           	psect	text98
 37890  01B342                     __ptext98:
 37891                           	opt stack 0
 37892  01B342                     _TMR7_DefaultInterruptHandler:
 37893                           	opt stack 11
 37894                           
 37895                           ;incstack = 0
 37896  01B342  0012               	return		;funcret
 37897  01B344                     __end_of_TMR7_DefaultInterruptHandler:
 37898                           	opt stack 0
 37899                           tosu	equ	0xFFF
 37900                           tosh	equ	0xFFE
 37901                           tosl	equ	0xFFD
 37902                           pclatu	equ	0xFFB
 37903                           pclath	equ	0xFFA
 37904                           tblptru	equ	0xFF8
 37905                           tblptrh	equ	0xFF7
 37906                           tblptrl	equ	0xFF6
 37907                           tablat	equ	0xFF5
 37908                           prodh	equ	0xFF4
 37909                           prodl	equ	0xFF3
 37910                           intcon	equ	0xFF2
 37911                           indf0	equ	0xFEF
 37912                           postinc0	equ	0xFEE
 37913                           fsr0h	equ	0xFEA
 37914                           fsr0l	equ	0xFE9
 37915                           wreg	equ	0xFE8
 37916                           indf1	equ	0xFE7
 37917                           postdec1	equ	0xFE5
 37918                           plusw1	equ	0xFE3
 37919                           fsr1h	equ	0xFE2
 37920                           fsr1l	equ	0xFE1
 37921                           bsr	equ	0xFE0
 37922                           indf2	equ	0xFDF
 37923                           postinc2	equ	0xFDE
 37924                           postdec2	equ	0xFDD
 37925                           plusw2	equ	0xFDB
 37926                           fsr2h	equ	0xFDA
 37927                           fsr2l	equ	0xFD9
 37928                           status	equ	0xFD8
 37929                           
 37930 ;; *************** function _acquisitionTimerCallback *****************
 37931 ;; Defined at:
 37932 ;;		line 411 in file "main.c"
 37933 ;; Parameters:    Size  Location     Type
 37934 ;;		None
 37935 ;; Auto vars:     Size  Location     Type
 37936 ;;		None
 37937 ;; Return value:  Size  Location     Type
 37938 ;;                  1    wreg      void 
 37939 ;; Registers used:
 37940 ;;		wreg, status,2, cstack
 37941 ;; Tracked objects:
 37942 ;;		On entry : 0/0
 37943 ;;		On exit  : 0/0
 37944 ;;		Unchanged: 0/0
 37945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37950 ;;Total ram usage:        0 bytes
 37951 ;; Hardware stack levels used:    1
 37952 ;; Hardware stack levels required when called:   10
 37953 ;; This function calls:
 37954 ;;		_ADCC_ClearAccumulator
 37955 ;;		_ADCC_DischargeSampleCapacitor
 37956 ;;		_ADCC_StartConversion
 37957 ;; This function is called by:
 37958 ;;		_main
 37959 ;;		_TMR7_ISR
 37960 ;; This function uses a non-reentrant model
 37961 ;;
 37962                           
 37963                           	psect	text99
 37964  01B1F8                     __ptext99:
 37965                           	opt stack 0
 37966  01B1F8                     _acquisitionTimerCallback:
 37967                           	opt stack 10
 37968                           
 37969                           ;main.c: 414: ADCC_DischargeSampleCapacitor();
 37970                           
 37971                           ;incstack = 0
 37972  01B1F8  EC8A  F0D9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 37973                           
 37974                           ;main.c: 417: ADCC_ClearAccumulator();
 37975  01B1FC  EC91  F0D9         	call	_ADCC_ClearAccumulator	;wreg free
 37976                           
 37977                           ;main.c: 420: ADCC_StartConversion(next_channel);
 37978  01B200  0102               	movlb	2	; () banked
 37979  01B202  51F5               	movf	_next_channel& (0+255),w,b
 37980  01B204  EC64  F0D9         	call	_ADCC_StartConversion
 37981  01B208  0012               	return		;funcret
 37982  01B20A                     __end_of_acquisitionTimerCallback:
 37983                           	opt stack 0
 37984                           tosu	equ	0xFFF
 37985                           tosh	equ	0xFFE
 37986                           tosl	equ	0xFFD
 37987                           pclatu	equ	0xFFB
 37988                           pclath	equ	0xFFA
 37989                           tblptru	equ	0xFF8
 37990                           tblptrh	equ	0xFF7
 37991                           tblptrl	equ	0xFF6
 37992                           tablat	equ	0xFF5
 37993                           prodh	equ	0xFF4
 37994                           prodl	equ	0xFF3
 37995                           intcon	equ	0xFF2
 37996                           indf0	equ	0xFEF
 37997                           postinc0	equ	0xFEE
 37998                           fsr0h	equ	0xFEA
 37999                           fsr0l	equ	0xFE9
 38000                           wreg	equ	0xFE8
 38001                           indf1	equ	0xFE7
 38002                           postdec1	equ	0xFE5
 38003                           plusw1	equ	0xFE3
 38004                           fsr1h	equ	0xFE2
 38005                           fsr1l	equ	0xFE1
 38006                           bsr	equ	0xFE0
 38007                           indf2	equ	0xFDF
 38008                           postinc2	equ	0xFDE
 38009                           postdec2	equ	0xFDD
 38010                           plusw2	equ	0xFDB
 38011                           fsr2h	equ	0xFDA
 38012                           fsr2l	equ	0xFD9
 38013                           status	equ	0xFD8
 38014                           
 38015 ;; *************** function _ADCC_StartConversion *****************
 38016 ;; Defined at:
 38017 ;;		line 115 in file "mcc_generated_files/adcc.c"
 38018 ;; Parameters:    Size  Location     Type
 38019 ;;  channel         1    wreg     enum E17782
 38020 ;; Auto vars:     Size  Location     Type
 38021 ;;  channel         1    0[BANK1 ] enum E17782
 38022 ;; Return value:  Size  Location     Type
 38023 ;;                  1    wreg      void 
 38024 ;; Registers used:
 38025 ;;		wreg
 38026 ;; Tracked objects:
 38027 ;;		On entry : 0/0
 38028 ;;		On exit  : 0/0
 38029 ;;		Unchanged: 0/0
 38030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38032 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38034 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38035 ;;Total ram usage:        1 bytes
 38036 ;; Hardware stack levels used:    1
 38037 ;; Hardware stack levels required when called:    9
 38038 ;; This function calls:
 38039 ;;		Nothing
 38040 ;; This function is called by:
 38041 ;;		_acquisitionTimerCallback
 38042 ;; This function uses a non-reentrant model
 38043 ;;
 38044                           
 38045                           	psect	text100
 38046  01B2C8                     __ptext100:
 38047                           	opt stack 0
 38048  01B2C8                     _ADCC_StartConversion:
 38049                           	opt stack 10
 38050                           
 38051                           ;incstack = 0
 38052                           ;ADCC_StartConversion@channel stored from wreg
 38053  01B2C8  0101               	movlb	1	; () banked
 38054  01B2CA  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 38055                           
 38056                           ;adcc.c: 118: ADPCH = channel;
 38057  01B2CC  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 38058                           
 38059                           ;adcc.c: 121: ADCON0bits.ADON = 1;
 38060  01B2D0  8E60               	bsf	3936,7,c	;volatile
 38061                           
 38062                           ;adcc.c: 124: ADCON0bits.ADGO = 1;
 38063  01B2D2  8060               	bsf	3936,0,c	;volatile
 38064  01B2D4  0012               	return		;funcret
 38065  01B2D6                     __end_of_ADCC_StartConversion:
 38066                           	opt stack 0
 38067                           tosu	equ	0xFFF
 38068                           tosh	equ	0xFFE
 38069                           tosl	equ	0xFFD
 38070                           pclatu	equ	0xFFB
 38071                           pclath	equ	0xFFA
 38072                           tblptru	equ	0xFF8
 38073                           tblptrh	equ	0xFF7
 38074                           tblptrl	equ	0xFF6
 38075                           tablat	equ	0xFF5
 38076                           prodh	equ	0xFF4
 38077                           prodl	equ	0xFF3
 38078                           intcon	equ	0xFF2
 38079                           indf0	equ	0xFEF
 38080                           postinc0	equ	0xFEE
 38081                           fsr0h	equ	0xFEA
 38082                           fsr0l	equ	0xFE9
 38083                           wreg	equ	0xFE8
 38084                           indf1	equ	0xFE7
 38085                           postdec1	equ	0xFE5
 38086                           plusw1	equ	0xFE3
 38087                           fsr1h	equ	0xFE2
 38088                           fsr1l	equ	0xFE1
 38089                           bsr	equ	0xFE0
 38090                           indf2	equ	0xFDF
 38091                           postinc2	equ	0xFDE
 38092                           postdec2	equ	0xFDD
 38093                           plusw2	equ	0xFDB
 38094                           fsr2h	equ	0xFDA
 38095                           fsr2l	equ	0xFD9
 38096                           status	equ	0xFD8
 38097                           
 38098 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 38099 ;; Defined at:
 38100 ;;		line 177 in file "mcc_generated_files/adcc.c"
 38101 ;; Parameters:    Size  Location     Type
 38102 ;;		None
 38103 ;; Auto vars:     Size  Location     Type
 38104 ;;		None
 38105 ;; Return value:  Size  Location     Type
 38106 ;;                  1    wreg      void 
 38107 ;; Registers used:
 38108 ;;		wreg, status,2
 38109 ;; Tracked objects:
 38110 ;;		On entry : 0/0
 38111 ;;		On exit  : 0/0
 38112 ;;		Unchanged: 0/0
 38113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38118 ;;Total ram usage:        0 bytes
 38119 ;; Hardware stack levels used:    1
 38120 ;; Hardware stack levels required when called:    9
 38121 ;; This function calls:
 38122 ;;		Nothing
 38123 ;; This function is called by:
 38124 ;;		_acquisitionTimerCallback
 38125 ;; This function uses a non-reentrant model
 38126 ;;
 38127                           
 38128                           	psect	text101
 38129  01B314                     __ptext101:
 38130                           	opt stack 0
 38131  01B314                     _ADCC_DischargeSampleCapacitor:
 38132                           	opt stack 10
 38133                           
 38134                           ;adcc.c: 180: ADPCH = 0x3c;
 38135                           
 38136                           ;incstack = 0
 38137  01B314  0E3C               	movlw	60
 38138  01B316  010F               	movlb	15	; () banked
 38139  01B318  6F5F               	movwf	95,b	;volatile
 38140                           
 38141                           ; BSR set to: 15
 38142  01B31A  0012               	return		;funcret
 38143  01B31C                     __end_of_ADCC_DischargeSampleCapacitor:
 38144                           	opt stack 0
 38145                           tosu	equ	0xFFF
 38146                           tosh	equ	0xFFE
 38147                           tosl	equ	0xFFD
 38148                           pclatu	equ	0xFFB
 38149                           pclath	equ	0xFFA
 38150                           tblptru	equ	0xFF8
 38151                           tblptrh	equ	0xFF7
 38152                           tblptrl	equ	0xFF6
 38153                           tablat	equ	0xFF5
 38154                           prodh	equ	0xFF4
 38155                           prodl	equ	0xFF3
 38156                           intcon	equ	0xFF2
 38157                           indf0	equ	0xFEF
 38158                           postinc0	equ	0xFEE
 38159                           fsr0h	equ	0xFEA
 38160                           fsr0l	equ	0xFE9
 38161                           wreg	equ	0xFE8
 38162                           indf1	equ	0xFE7
 38163                           postdec1	equ	0xFE5
 38164                           plusw1	equ	0xFE3
 38165                           fsr1h	equ	0xFE2
 38166                           fsr1l	equ	0xFE1
 38167                           bsr	equ	0xFE0
 38168                           indf2	equ	0xFDF
 38169                           postinc2	equ	0xFDE
 38170                           postdec2	equ	0xFDD
 38171                           plusw2	equ	0xFDB
 38172                           fsr2h	equ	0xFDA
 38173                           fsr2l	equ	0xFD9
 38174                           status	equ	0xFD8
 38175                           
 38176 ;; *************** function _ADCC_ClearAccumulator *****************
 38177 ;; Defined at:
 38178 ;;		line 207 in file "mcc_generated_files/adcc.c"
 38179 ;; Parameters:    Size  Location     Type
 38180 ;;		None
 38181 ;; Auto vars:     Size  Location     Type
 38182 ;;		None
 38183 ;; Return value:  Size  Location     Type
 38184 ;;                  1    wreg      void 
 38185 ;; Registers used:
 38186 ;;		None
 38187 ;; Tracked objects:
 38188 ;;		On entry : 0/0
 38189 ;;		On exit  : 0/0
 38190 ;;		Unchanged: 0/0
 38191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38196 ;;Total ram usage:        0 bytes
 38197 ;; Hardware stack levels used:    1
 38198 ;; Hardware stack levels required when called:    9
 38199 ;; This function calls:
 38200 ;;		Nothing
 38201 ;; This function is called by:
 38202 ;;		_acquisitionTimerCallback
 38203 ;; This function uses a non-reentrant model
 38204 ;;
 38205                           
 38206                           	psect	text102
 38207  01B322                     __ptext102:
 38208                           	opt stack 0
 38209  01B322                     _ADCC_ClearAccumulator:
 38210                           	opt stack 10
 38211                           
 38212                           ;adcc.c: 210: ADCON2bits.ADACLR = 1;
 38213                           
 38214                           ; BSR set to: 15
 38215                           ;incstack = 0
 38216  01B322  010F               	movlb	15	; () banked
 38217  01B324  875A               	bsf	90,3,b	;volatile
 38218                           
 38219                           ; BSR set to: 15
 38220  01B326  0012               	return		;funcret
 38221  01B328                     __end_of_ADCC_ClearAccumulator:
 38222                           	opt stack 0
 38223                           tosu	equ	0xFFF
 38224                           tosh	equ	0xFFE
 38225                           tosl	equ	0xFFD
 38226                           pclatu	equ	0xFFB
 38227                           pclath	equ	0xFFA
 38228                           tblptru	equ	0xFF8
 38229                           tblptrh	equ	0xFF7
 38230                           tblptrl	equ	0xFF6
 38231                           tablat	equ	0xFF5
 38232                           prodh	equ	0xFF4
 38233                           prodl	equ	0xFF3
 38234                           intcon	equ	0xFF2
 38235                           indf0	equ	0xFEF
 38236                           postinc0	equ	0xFEE
 38237                           fsr0h	equ	0xFEA
 38238                           fsr0l	equ	0xFE9
 38239                           wreg	equ	0xFE8
 38240                           indf1	equ	0xFE7
 38241                           postdec1	equ	0xFE5
 38242                           plusw1	equ	0xFE3
 38243                           fsr1h	equ	0xFE2
 38244                           fsr1l	equ	0xFE1
 38245                           bsr	equ	0xFE0
 38246                           indf2	equ	0xFDF
 38247                           postinc2	equ	0xFDE
 38248                           postdec2	equ	0xFDD
 38249                           plusw2	equ	0xFDB
 38250                           fsr2h	equ	0xFDA
 38251                           fsr2l	equ	0xFD9
 38252                           status	equ	0xFD8
 38253                           
 38254 ;; *************** function _TMR7_WriteTimer *****************
 38255 ;; Defined at:
 38256 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 38257 ;; Parameters:    Size  Location     Type
 38258 ;;  timerVal        2    0[BANK1 ] unsigned int 
 38259 ;; Auto vars:     Size  Location     Type
 38260 ;;		None
 38261 ;; Return value:  Size  Location     Type
 38262 ;;                  1    wreg      void 
 38263 ;; Registers used:
 38264 ;;		wreg, status,2
 38265 ;; Tracked objects:
 38266 ;;		On entry : 0/0
 38267 ;;		On exit  : 0/0
 38268 ;;		Unchanged: 0/0
 38269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38270 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38273 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38274 ;;Total ram usage:        2 bytes
 38275 ;; Hardware stack levels used:    1
 38276 ;; Hardware stack levels required when called:    9
 38277 ;; This function calls:
 38278 ;;		Nothing
 38279 ;; This function is called by:
 38280 ;;		_TMR7_ISR
 38281 ;;		_TMR7_Reload
 38282 ;; This function uses a non-reentrant model
 38283 ;;
 38284                           
 38285                           	psect	text103
 38286  01AF0E                     __ptext103:
 38287                           	opt stack 0
 38288  01AF0E                     _TMR7_WriteTimer:
 38289                           	opt stack 11
 38290                           
 38291                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 38292                           
 38293                           ; BSR set to: 15
 38294                           ;incstack = 0
 38295  01AF0E  010F               	movlb	15	; () banked
 38296  01AF10  A530               	btfss	48,2,b	;volatile
 38297  01AF12  D009               	goto	i1l688
 38298                           
 38299                           ; BSR set to: 15
 38300                           ;tmr7.c: 130: {
 38301                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 38302  01AF14  9130               	bcf	48,0,b	;volatile
 38303                           
 38304                           ; BSR set to: 15
 38305                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 38306  01AF16  0101               	movlb	1	; () banked
 38307  01AF18  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 38308  01AF1A  010F               	movlb	15	; () banked
 38309  01AF1C  6F2F               	movwf	47,b	;volatile
 38310                           
 38311                           ; BSR set to: 15
 38312                           ;tmr7.c: 136: TMR7L = timerVal;
 38313  01AF1E  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 38314                           
 38315                           ; BSR set to: 15
 38316                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 38317  01AF22  8130               	bsf	48,0,b	;volatile
 38318                           
 38319                           ;tmr7.c: 140: }
 38320  01AF24  0012               	return	
 38321  01AF26                     i1l688:
 38322                           
 38323                           ; BSR set to: 15
 38324                           ;tmr7.c: 141: else
 38325                           ;tmr7.c: 142: {
 38326                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 38327                           
 38328                           ; BSR set to: 15
 38329  01AF26  0101               	movlb	1	; () banked
 38330  01AF28  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 38331  01AF2A  010F               	movlb	15	; () banked
 38332  01AF2C  6F2F               	movwf	47,b	;volatile
 38333                           
 38334                           ; BSR set to: 15
 38335                           ;tmr7.c: 145: TMR7L = timerVal;
 38336  01AF2E  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 38337  01AF32  0012               	return	
 38338  01AF34                     __end_of_TMR7_WriteTimer:
 38339                           	opt stack 0
 38340                           tosu	equ	0xFFF
 38341                           tosh	equ	0xFFE
 38342                           tosl	equ	0xFFD
 38343                           pclatu	equ	0xFFB
 38344                           pclath	equ	0xFFA
 38345                           tblptru	equ	0xFF8
 38346                           tblptrh	equ	0xFF7
 38347                           tblptrl	equ	0xFF6
 38348                           tablat	equ	0xFF5
 38349                           prodh	equ	0xFF4
 38350                           prodl	equ	0xFF3
 38351                           intcon	equ	0xFF2
 38352                           indf0	equ	0xFEF
 38353                           postinc0	equ	0xFEE
 38354                           fsr0h	equ	0xFEA
 38355                           fsr0l	equ	0xFE9
 38356                           wreg	equ	0xFE8
 38357                           indf1	equ	0xFE7
 38358                           postdec1	equ	0xFE5
 38359                           plusw1	equ	0xFE3
 38360                           fsr1h	equ	0xFE2
 38361                           fsr1l	equ	0xFE1
 38362                           bsr	equ	0xFE0
 38363                           indf2	equ	0xFDF
 38364                           postinc2	equ	0xFDE
 38365                           postdec2	equ	0xFDD
 38366                           plusw2	equ	0xFDB
 38367                           fsr2h	equ	0xFDA
 38368                           fsr2l	equ	0xFD9
 38369                           status	equ	0xFD8
 38370                           
 38371 ;; *************** function _TMR6_ISR *****************
 38372 ;; Defined at:
 38373 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 38374 ;; Parameters:    Size  Location     Type
 38375 ;;		None
 38376 ;; Auto vars:     Size  Location     Type
 38377 ;;		None
 38378 ;; Return value:  Size  Location     Type
 38379 ;;                  1    wreg      void 
 38380 ;; Registers used:
 38381 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38382 ;; Tracked objects:
 38383 ;;		On entry : 0/0
 38384 ;;		On exit  : 0/0
 38385 ;;		Unchanged: 0/0
 38386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38391 ;;Total ram usage:        0 bytes
 38392 ;; Hardware stack levels used:    1
 38393 ;; Hardware stack levels required when called:   10
 38394 ;; This function calls:
 38395 ;;		Absolute function
 38396 ;;		_TMR6_DefaultInterruptHandler
 38397 ;;		_heartbeatTimerCallback
 38398 ;; This function is called by:
 38399 ;;		_INTERRUPT_InterruptManagerLow
 38400 ;; This function uses a non-reentrant model
 38401 ;;
 38402                           
 38403                           	psect	text104
 38404  01AE98                     __ptext104:
 38405                           	opt stack 0
 38406  01AE98                     _TMR6_ISR:
 38407                           	opt stack 11
 38408                           
 38409                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 38410                           
 38411                           ; BSR set to: 15
 38412                           ;incstack = 0
 38413  01AE98  010E               	movlb	14	; () banked
 38414  01AE9A  9B38               	bcf	56,5,b	;volatile
 38415                           
 38416                           ; BSR set to: 14
 38417                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 38418  01AE9C  0102               	movlb	2	; () banked
 38419  01AE9E  5153               	movf	_TMR6_InterruptHandler& (0+255),w,b
 38420  01AEA0  1154               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 38421  01AEA2  1155               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 38422  01AEA4  B4D8               	btfsc	status,2,c
 38423  01AEA6  0012               	return	
 38424                           
 38425                           ; BSR set to: 2
 38426                           ;tmr6.c: 172: {
 38427                           ;tmr6.c: 173: TMR6_InterruptHandler();
 38428  01AEA8  D801               	call	i1u3508_28
 38429  01AEAA  0012               	return	
 38430  01AEAC                     i1u3508_28:
 38431  01AEAC  0005               	push	
 38432  01AEAE  6EFA               	movwf	pclath,c
 38433  01AEB0  5153               	movf	_TMR6_InterruptHandler& (0+255),w,b
 38434  01AEB2  6EFD               	movwf	tosl,c
 38435  01AEB4  5154               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 38436  01AEB6  6EFE               	movwf	tosh,c
 38437  01AEB8  5155               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 38438  01AEBA  6EFF               	movwf	tosu,c
 38439  01AEBC  50FA               	movf	pclath,w,c
 38440  01AEBE  0012               	return		;indir
 38441  01AEC0                     __end_of_TMR6_ISR:
 38442                           	opt stack 0
 38443                           tosu	equ	0xFFF
 38444                           tosh	equ	0xFFE
 38445                           tosl	equ	0xFFD
 38446                           pclatu	equ	0xFFB
 38447                           pclath	equ	0xFFA
 38448                           tblptru	equ	0xFF8
 38449                           tblptrh	equ	0xFF7
 38450                           tblptrl	equ	0xFF6
 38451                           tablat	equ	0xFF5
 38452                           prodh	equ	0xFF4
 38453                           prodl	equ	0xFF3
 38454                           intcon	equ	0xFF2
 38455                           indf0	equ	0xFEF
 38456                           postinc0	equ	0xFEE
 38457                           fsr0h	equ	0xFEA
 38458                           fsr0l	equ	0xFE9
 38459                           wreg	equ	0xFE8
 38460                           indf1	equ	0xFE7
 38461                           postdec1	equ	0xFE5
 38462                           plusw1	equ	0xFE3
 38463                           fsr1h	equ	0xFE2
 38464                           fsr1l	equ	0xFE1
 38465                           bsr	equ	0xFE0
 38466                           indf2	equ	0xFDF
 38467                           postinc2	equ	0xFDE
 38468                           postdec2	equ	0xFDD
 38469                           plusw2	equ	0xFDB
 38470                           fsr2h	equ	0xFDA
 38471                           fsr2l	equ	0xFD9
 38472                           status	equ	0xFD8
 38473                           
 38474 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 38475 ;; Defined at:
 38476 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 38477 ;; Parameters:    Size  Location     Type
 38478 ;;		None
 38479 ;; Auto vars:     Size  Location     Type
 38480 ;;		None
 38481 ;; Return value:  Size  Location     Type
 38482 ;;                  1    wreg      void 
 38483 ;; Registers used:
 38484 ;;		None
 38485 ;; Tracked objects:
 38486 ;;		On entry : 0/0
 38487 ;;		On exit  : 0/0
 38488 ;;		Unchanged: 0/0
 38489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38494 ;;Total ram usage:        0 bytes
 38495 ;; Hardware stack levels used:    1
 38496 ;; Hardware stack levels required when called:    9
 38497 ;; This function calls:
 38498 ;;		Nothing
 38499 ;; This function is called by:
 38500 ;;		_TMR6_Initialize
 38501 ;;		_TMR6_ISR
 38502 ;; This function uses a non-reentrant model
 38503 ;;
 38504                           
 38505                           	psect	text105
 38506  01B344                     __ptext105:
 38507                           	opt stack 0
 38508  01B344                     _TMR6_DefaultInterruptHandler:
 38509                           	opt stack 11
 38510                           
 38511                           ;incstack = 0
 38512  01B344  0012               	return		;funcret
 38513  01B346                     __end_of_TMR6_DefaultInterruptHandler:
 38514                           	opt stack 0
 38515                           tosu	equ	0xFFF
 38516                           tosh	equ	0xFFE
 38517                           tosl	equ	0xFFD
 38518                           pclatu	equ	0xFFB
 38519                           pclath	equ	0xFFA
 38520                           tblptru	equ	0xFF8
 38521                           tblptrh	equ	0xFF7
 38522                           tblptrl	equ	0xFF6
 38523                           tablat	equ	0xFF5
 38524                           prodh	equ	0xFF4
 38525                           prodl	equ	0xFF3
 38526                           intcon	equ	0xFF2
 38527                           indf0	equ	0xFEF
 38528                           postinc0	equ	0xFEE
 38529                           fsr0h	equ	0xFEA
 38530                           fsr0l	equ	0xFE9
 38531                           wreg	equ	0xFE8
 38532                           indf1	equ	0xFE7
 38533                           postdec1	equ	0xFE5
 38534                           plusw1	equ	0xFE3
 38535                           fsr1h	equ	0xFE2
 38536                           fsr1l	equ	0xFE1
 38537                           bsr	equ	0xFE0
 38538                           indf2	equ	0xFDF
 38539                           postinc2	equ	0xFDE
 38540                           postdec2	equ	0xFDD
 38541                           plusw2	equ	0xFDB
 38542                           fsr2h	equ	0xFDA
 38543                           fsr2l	equ	0xFD9
 38544                           status	equ	0xFD8
 38545                           
 38546 ;; *************** function _heartbeatTimerCallback *****************
 38547 ;; Defined at:
 38548 ;;		line 210 in file "main.c"
 38549 ;; Parameters:    Size  Location     Type
 38550 ;;		None
 38551 ;; Auto vars:     Size  Location     Type
 38552 ;;		None
 38553 ;; Return value:  Size  Location     Type
 38554 ;;                  1    wreg      void 
 38555 ;; Registers used:
 38556 ;;		wreg, status,2, status,0
 38557 ;; Tracked objects:
 38558 ;;		On entry : 0/0
 38559 ;;		On exit  : 0/0
 38560 ;;		Unchanged: 0/0
 38561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38564 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38565 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38566 ;;Total ram usage:        1 bytes
 38567 ;; Hardware stack levels used:    1
 38568 ;; Hardware stack levels required when called:    9
 38569 ;; This function calls:
 38570 ;;		Nothing
 38571 ;; This function is called by:
 38572 ;;		_main
 38573 ;;		_TMR6_ISR
 38574 ;; This function uses a non-reentrant model
 38575 ;;
 38576                           
 38577                           	psect	text106
 38578  01A94A                     __ptext106:
 38579                           	opt stack 0
 38580  01A94A                     _heartbeatTimerCallback:
 38581                           	opt stack 11
 38582                           
 38583                           ;main.c: 213: LATFbits.LATF2 = !LATFbits.LATF2;
 38584                           
 38585                           ;incstack = 0
 38586  01A94A  B47E               	btfsc	3966,2,c	;volatile
 38587  01A94C  D004               	goto	i1u1501_20
 38588  01A94E  0101               	movlb	1	; () banked
 38589  01A950  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 38590  01A952  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 38591  01A954  D002               	goto	i1u1502_28
 38592  01A956                     i1u1501_20:
 38593  01A956  0101               	movlb	1	; () banked
 38594  01A958  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 38595  01A95A                     i1u1502_28:
 38596  01A95A  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 38597  01A95C  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 38598  01A95E  507E               	movf	3966,w,c	;volatile
 38599  01A960  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 38600  01A962  0BFB               	andlw	-5
 38601  01A964  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 38602  01A966  6E7E               	movwf	3966,c	;volatile
 38603                           
 38604                           ;main.c: 216: dev_on_time++;
 38605  01A968  0E01               	movlw	1
 38606  01A96A  0102               	movlb	2	; () banked
 38607  01A96C  272C               	addwf	_dev_on_time& (0+255),f,b	;volatile
 38608  01A96E  0E00               	movlw	0
 38609  01A970  232D               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 38610  01A972  232E               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 38611  01A974  232F               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 38612                           
 38613                           ; BSR set to: 2
 38614                           ;main.c: 219: if (load_enable) {
 38615  01A976  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 38616  01A978  D006               	goto	i1l1186
 38617                           
 38618                           ; BSR set to: 2
 38619                           ;main.c: 221: load_on_time++;
 38620  01A97A  0E01               	movlw	1
 38621  01A97C  2728               	addwf	_load_on_time& (0+255),f,b	;volatile
 38622  01A97E  0E00               	movlw	0
 38623  01A980  2329               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 38624  01A982  232A               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 38625  01A984  232B               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 38626  01A986                     i1l1186:
 38627                           
 38628                           ; BSR set to: 2
 38629  01A986  0004               	clrwdt		;# 
 38630  01A988  0012               	return		;funcret
 38631  01A98A                     __end_of_heartbeatTimerCallback:
 38632                           	opt stack 0
 38633                           tosu	equ	0xFFF
 38634                           tosh	equ	0xFFE
 38635                           tosl	equ	0xFFD
 38636                           pclatu	equ	0xFFB
 38637                           pclath	equ	0xFFA
 38638                           tblptru	equ	0xFF8
 38639                           tblptrh	equ	0xFF7
 38640                           tblptrl	equ	0xFF6
 38641                           tablat	equ	0xFF5
 38642                           prodh	equ	0xFF4
 38643                           prodl	equ	0xFF3
 38644                           intcon	equ	0xFF2
 38645                           indf0	equ	0xFEF
 38646                           postinc0	equ	0xFEE
 38647                           fsr0h	equ	0xFEA
 38648                           fsr0l	equ	0xFE9
 38649                           wreg	equ	0xFE8
 38650                           indf1	equ	0xFE7
 38651                           postdec1	equ	0xFE5
 38652                           plusw1	equ	0xFE3
 38653                           fsr1h	equ	0xFE2
 38654                           fsr1l	equ	0xFE1
 38655                           bsr	equ	0xFE0
 38656                           indf2	equ	0xFDF
 38657                           postinc2	equ	0xFDE
 38658                           postdec2	equ	0xFDD
 38659                           plusw2	equ	0xFDB
 38660                           fsr2h	equ	0xFDA
 38661                           fsr2l	equ	0xFD9
 38662                           status	equ	0xFD8
 38663                           
 38664 ;; *************** function _EUSART2_Transmit_ISR *****************
 38665 ;; Defined at:
 38666 ;;		line 190 in file "mcc_generated_files/eusart2.c"
 38667 ;; Parameters:    Size  Location     Type
 38668 ;;		None
 38669 ;; Auto vars:     Size  Location     Type
 38670 ;;		None
 38671 ;; Return value:  Size  Location     Type
 38672 ;;                  1    wreg      void 
 38673 ;; Registers used:
 38674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38675 ;; Tracked objects:
 38676 ;;		On entry : 0/0
 38677 ;;		On exit  : 0/0
 38678 ;;		Unchanged: 0/0
 38679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38684 ;;Total ram usage:        0 bytes
 38685 ;; Hardware stack levels used:    1
 38686 ;; Hardware stack levels required when called:    9
 38687 ;; This function calls:
 38688 ;;		Nothing
 38689 ;; This function is called by:
 38690 ;;		_EUSART2_Initialize
 38691 ;;		_INTERRUPT_InterruptManagerLow
 38692 ;; This function uses a non-reentrant model
 38693 ;;
 38694                           
 38695                           	psect	text107
 38696  01AC84                     __ptext107:
 38697                           	opt stack 0
 38698  01AC84                     _EUSART2_Transmit_ISR:
 38699                           	opt stack 12
 38700                           
 38701                           ;eusart2.c: 194: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 38702                           
 38703                           ;incstack = 0
 38704  01AC84  0E80               	movlw	128
 38705  01AC86  0101               	movlb	1	; () banked
 38706  01AC88  61DF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 38707  01AC8A  D014               	goto	i1l445
 38708                           
 38709                           ; BSR set to: 1
 38710                           ;eusart2.c: 195: {
 38711                           ;eusart2.c: 196: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 38712  01AC8C  51E0               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 38713  01AC8E  0D01               	mullw	1
 38714  01AC90  0E00               	movlw	low _eusart2TxBuffer
 38715  01AC92  24F3               	addwf	prodl,w,c
 38716  01AC94  6ED9               	movwf	fsr2l,c
 38717  01AC96  0E04               	movlw	high _eusart2TxBuffer
 38718  01AC98  20F4               	addwfc	prodh,w,c
 38719  01AC9A  6EDA               	movwf	fsr2h,c
 38720  01AC9C  50DF               	movf	indf2,w,c
 38721  01AC9E  010E               	movlb	14	; () banked
 38722  01ACA0  6FF2               	movwf	242,b	;volatile
 38723                           
 38724                           ; BSR set to: 14
 38725  01ACA2  0101               	movlb	1	; () banked
 38726  01ACA4  2BE0               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 38727                           
 38728                           ; BSR set to: 1
 38729                           ;eusart2.c: 197: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 38730  01ACA6  0E7F               	movlw	127
 38731  01ACA8  65E0               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 38732  01ACAA  D002               	goto	i1l446
 38733                           
 38734                           ; BSR set to: 1
 38735                           ;eusart2.c: 198: {
 38736                           ;eusart2.c: 199: eusart2TxTail = 0;
 38737  01ACAC  0E00               	movlw	0
 38738  01ACAE  6FE0               	movwf	_eusart2TxTail& (0+255),b	;volatile
 38739  01ACB0                     i1l446:
 38740                           
 38741                           ; BSR set to: 1
 38742                           ;eusart2.c: 200: }
 38743                           ;eusart2.c: 201: eusart2TxBufferRemaining++;
 38744                           
 38745                           ; BSR set to: 1
 38746  01ACB0  2BDF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 38747                           
 38748                           ;eusart2.c: 202: }
 38749  01ACB2  0012               	return	
 38750  01ACB4                     i1l445:
 38751                           
 38752                           ; BSR set to: 1
 38753                           ;eusart2.c: 203: else
 38754                           ;eusart2.c: 204: {
 38755                           ;eusart2.c: 205: PIE3bits.TX2IE = 0;
 38756  01ACB4  010E               	movlb	14	; () banked
 38757  01ACB6  9D2C               	bcf	44,6,b	;volatile
 38758  01ACB8  0012               	return	
 38759  01ACBA                     __end_of_EUSART2_Transmit_ISR:
 38760                           	opt stack 0
 38761                           tosu	equ	0xFFF
 38762                           tosh	equ	0xFFE
 38763                           tosl	equ	0xFFD
 38764                           pclatu	equ	0xFFB
 38765                           pclath	equ	0xFFA
 38766                           tblptru	equ	0xFF8
 38767                           tblptrh	equ	0xFF7
 38768                           tblptrl	equ	0xFF6
 38769                           tablat	equ	0xFF5
 38770                           prodh	equ	0xFF4
 38771                           prodl	equ	0xFF3
 38772                           intcon	equ	0xFF2
 38773                           indf0	equ	0xFEF
 38774                           postinc0	equ	0xFEE
 38775                           fsr0h	equ	0xFEA
 38776                           fsr0l	equ	0xFE9
 38777                           wreg	equ	0xFE8
 38778                           indf1	equ	0xFE7
 38779                           postdec1	equ	0xFE5
 38780                           plusw1	equ	0xFE3
 38781                           fsr1h	equ	0xFE2
 38782                           fsr1l	equ	0xFE1
 38783                           bsr	equ	0xFE0
 38784                           indf2	equ	0xFDF
 38785                           postinc2	equ	0xFDE
 38786                           postdec2	equ	0xFDD
 38787                           plusw2	equ	0xFDB
 38788                           fsr2h	equ	0xFDA
 38789                           fsr2l	equ	0xFD9
 38790                           status	equ	0xFD8
 38791                           
 38792 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 38793 ;; Defined at:
 38794 ;;		line 95 in file "mcc_generated_files/interrupt_manager.c"
 38795 ;; Parameters:    Size  Location     Type
 38796 ;;		None
 38797 ;; Auto vars:     Size  Location     Type
 38798 ;;		None
 38799 ;; Return value:  Size  Location     Type
 38800 ;;                  1    wreg      void 
 38801 ;; Registers used:
 38802 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38803 ;; Tracked objects:
 38804 ;;		On entry : 0/0
 38805 ;;		On exit  : 0/0
 38806 ;;		Unchanged: 0/0
 38807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38810 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38811 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38812 ;;Total ram usage:       18 bytes
 38813 ;; Hardware stack levels used:    1
 38814 ;; Hardware stack levels required when called:    8
 38815 ;; This function calls:
 38816 ;;		Absolute function
 38817 ;;		_ADCC_ThresholdISR
 38818 ;;		_EUSART2_Receive_ISR
 38819 ;;		_HLVD_ISR
 38820 ;;		_I2C1_BusCollisionISR
 38821 ;;		_I2C1_ISR
 38822 ;;		_INT0_ISR
 38823 ;;		_TMR4_ISR
 38824 ;;		_TMR5_ISR
 38825 ;; This function is called by:
 38826 ;;		Interrupt level 2
 38827 ;; This function uses a non-reentrant model
 38828 ;;
 38829                           
 38830                           	psect	intcode
 38831  000008                     __pintcode:
 38832                           	opt stack 0
 38833  000008                     _INTERRUPT_InterruptManagerHigh:
 38834                           	opt stack 10
 38835                           
 38836                           ;incstack = 0
 38837  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 38838  00000A  EF38  F0C8         	goto	int_func
 38839                           tosu	equ	0xFFF
 38840                           tosh	equ	0xFFE
 38841                           tosl	equ	0xFFD
 38842                           pclatu	equ	0xFFB
 38843                           pclath	equ	0xFFA
 38844                           tblptru	equ	0xFF8
 38845                           tblptrh	equ	0xFF7
 38846                           tblptrl	equ	0xFF6
 38847                           tablat	equ	0xFF5
 38848                           prodh	equ	0xFF4
 38849                           prodl	equ	0xFF3
 38850                           intcon	equ	0xFF2
 38851                           indf0	equ	0xFEF
 38852                           postinc0	equ	0xFEE
 38853                           fsr0h	equ	0xFEA
 38854                           fsr0l	equ	0xFE9
 38855                           wreg	equ	0xFE8
 38856                           indf1	equ	0xFE7
 38857                           postdec1	equ	0xFE5
 38858                           plusw1	equ	0xFE3
 38859                           fsr1h	equ	0xFE2
 38860                           fsr1l	equ	0xFE1
 38861                           bsr	equ	0xFE0
 38862                           indf2	equ	0xFDF
 38863                           postinc2	equ	0xFDE
 38864                           postdec2	equ	0xFDD
 38865                           plusw2	equ	0xFDB
 38866                           fsr2h	equ	0xFDA
 38867                           fsr2l	equ	0xFD9
 38868                           status	equ	0xFD8
 38869                           
 38870                           	psect	intcode_body
 38871  019070                     __pintcode_body:
 38872                           	opt stack 10
 38873  019070                     int_func:
 38874                           	opt stack 10
 38875  019070  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 38876  019074  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 38877  019078  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 38878  01907C  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 38879  019080  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 38880  019084  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 38881  019088  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 38882  01908C  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 38883  019090  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 38884  019094  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 38885  019098  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 38886  01909C  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 38887  0190A0  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 38888  0190A4  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 38889  0190A8  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 38890  0190AC  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 38891  0190B0  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 38892  0190B4  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 38893                           
 38894                           ;interrupt_manager.c: 98: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 38895  0190B8  010E               	movlb	14	; () banked
 38896  0190BA  B32C               	btfsc	44,1,b	;volatile
 38897                           
 38898                           ; BSR set to: 14
 38899  0190BC  A336               	btfss	54,1,b	;volatile
 38900  0190BE  D003               	goto	i2l246
 38901                           
 38902                           ; BSR set to: 14
 38903                           ;interrupt_manager.c: 99: {
 38904                           ;interrupt_manager.c: 100: I2C1_BusCollisionISR();
 38905  0190C0  EC94  F0D9         	call	_I2C1_BusCollisionISR	;wreg free
 38906                           
 38907                           ;interrupt_manager.c: 101: }
 38908  0190C4  D033               	goto	i2l260
 38909  0190C6                     i2l246:
 38910                           
 38911                           ; BSR set to: 14
 38912                           ;interrupt_manager.c: 102: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 38913  0190C6  B12C               	btfsc	44,0,b	;volatile
 38914                           
 38915                           ; BSR set to: 14
 38916  0190C8  A136               	btfss	54,0,b	;volatile
 38917  0190CA  D003               	goto	i2l248
 38918                           
 38919                           ; BSR set to: 14
 38920                           ;interrupt_manager.c: 103: {
 38921                           ;interrupt_manager.c: 104: I2C1_ISR();
 38922  0190CC  ECB4  F0BD         	call	_I2C1_ISR	;wreg free
 38923                           
 38924                           ;interrupt_manager.c: 105: }
 38925  0190D0  D02D               	goto	i2l260
 38926  0190D2                     i2l248:
 38927                           
 38928                           ; BSR set to: 14
 38929                           ;interrupt_manager.c: 106: else if(PIE5bits.TMR4IE == 1 && PIR5bits.TMR4IF == 1)
 38930  0190D2  B72E               	btfsc	46,3,b	;volatile
 38931                           
 38932                           ; BSR set to: 14
 38933  0190D4  A738               	btfss	56,3,b	;volatile
 38934  0190D6  D003               	goto	i2l250
 38935                           
 38936                           ; BSR set to: 14
 38937                           ;interrupt_manager.c: 107: {
 38938                           ;interrupt_manager.c: 108: TMR4_ISR();
 38939  0190D8  EC9A  F0D7         	call	_TMR4_ISR	;wreg free
 38940                           
 38941                           ;interrupt_manager.c: 109: }
 38942  0190DC  D027               	goto	i2l260
 38943  0190DE                     i2l250:
 38944                           
 38945                           ; BSR set to: 14
 38946                           ;interrupt_manager.c: 110: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 38947  0190DE  BF2B               	btfsc	43,7,b	;volatile
 38948                           
 38949                           ; BSR set to: 14
 38950  0190E0  AF35               	btfss	53,7,b	;volatile
 38951  0190E2  D003               	goto	i2l252
 38952                           
 38953                           ; BSR set to: 14
 38954                           ;interrupt_manager.c: 111: {
 38955                           ;interrupt_manager.c: 112: HLVD_ISR();
 38956  0190E4  ECF0  F0D5         	call	_HLVD_ISR	;wreg free
 38957                           
 38958                           ;interrupt_manager.c: 113: }
 38959  0190E8  D021               	goto	i2l260
 38960  0190EA                     i2l252:
 38961                           
 38962                           ; BSR set to: 14
 38963                           ;interrupt_manager.c: 114: else if(PIE0bits.INT0IE == 1 && PIR0bits.INT0IF == 1)
 38964  0190EA  B129               	btfsc	41,0,b	;volatile
 38965                           
 38966                           ; BSR set to: 14
 38967  0190EC  A133               	btfss	51,0,b	;volatile
 38968  0190EE  D003               	goto	i2l254
 38969                           
 38970                           ; BSR set to: 14
 38971                           ;interrupt_manager.c: 115: {
 38972                           ;interrupt_manager.c: 116: INT0_ISR();
 38973  0190F0  EC7C  F0D9         	call	_INT0_ISR	;wreg free
 38974                           
 38975                           ;interrupt_manager.c: 117: }
 38976  0190F4  D01B               	goto	i2l260
 38977  0190F6                     i2l254:
 38978                           
 38979                           ; BSR set to: 14
 38980                           ;interrupt_manager.c: 118: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 38981  0190F6  BF2C               	btfsc	44,7,b	;volatile
 38982                           
 38983                           ; BSR set to: 14
 38984  0190F8  AF36               	btfss	54,7,b	;volatile
 38985  0190FA  D00D               	goto	i2l256
 38986                           
 38987                           ; BSR set to: 14
 38988                           ;interrupt_manager.c: 119: {
 38989                           ;interrupt_manager.c: 120: EUSART2_RxDefaultInterruptHandler();
 38990  0190FC  D801               	call	i2u3534_48
 38991  0190FE  D016               	goto	i2l260
 38992  019100                     i2u3534_48:
 38993  019100  0005               	push	
 38994  019102  6EFA               	movwf	pclath,c
 38995  019104  0102               	movlb	2	; () banked
 38996  019106  5156               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 38997  019108  6EFD               	movwf	tosl,c
 38998  01910A  5157               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 38999  01910C  6EFE               	movwf	tosh,c
 39000  01910E  5158               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 39001  019110  6EFF               	movwf	tosu,c
 39002  019112  50FA               	movf	pclath,w,c
 39003  019114  0012               	return		;indir
 39004  019116                     i2l256:
 39005                           
 39006                           ; BSR set to: 14
 39007                           ;interrupt_manager.c: 122: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 39008  019116  B92E               	btfsc	46,4,b	;volatile
 39009                           
 39010                           ; BSR set to: 14
 39011  019118  A938               	btfss	56,4,b	;volatile
 39012  01911A  D003               	goto	i2l258
 39013                           
 39014                           ; BSR set to: 14
 39015                           ;interrupt_manager.c: 123: {
 39016                           ;interrupt_manager.c: 124: TMR5_ISR();
 39017  01911C  EC91  F0D6         	call	_TMR5_ISR	;wreg free
 39018                           
 39019                           ;interrupt_manager.c: 125: }
 39020  019120  D005               	goto	i2l260
 39021  019122                     i2l258:
 39022                           
 39023                           ; BSR set to: 14
 39024                           ;interrupt_manager.c: 126: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 39025  019122  B32A               	btfsc	42,1,b	;volatile
 39026                           
 39027                           ; BSR set to: 14
 39028  019124  A334               	btfss	52,1,b	;volatile
 39029  019126  D002               	goto	i2l260
 39030                           
 39031                           ; BSR set to: 14
 39032                           ;interrupt_manager.c: 127: {
 39033                           ;interrupt_manager.c: 128: ADCC_ThresholdISR();
 39034  019128  EC60  F0D7         	call	_ADCC_ThresholdISR	;wreg free
 39035  01912C                     i2l260:
 39036                           
 39037                           ;interrupt_manager.c: 130: else
 39038                           ;interrupt_manager.c: 131: {
 39039  01912C  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 39040  019130  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 39041  019134  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 39042  019138  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 39043  01913C  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 39044  019140  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 39045  019144  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 39046  019148  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 39047  01914C  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 39048  019150  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 39049  019154  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 39050  019158  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 39051  01915C  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 39052  019160  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 39053  019164  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 39054  019168  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 39055  01916C  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 39056  019170  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 39057  019174  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 39058  019176  0011               	retfie		f
 39059  019178                     __end_of_INTERRUPT_InterruptManagerHigh:
 39060                           	opt stack 0
 39061                           tosu	equ	0xFFF
 39062                           tosh	equ	0xFFE
 39063                           tosl	equ	0xFFD
 39064                           pclatu	equ	0xFFB
 39065                           pclath	equ	0xFFA
 39066                           tblptru	equ	0xFF8
 39067                           tblptrh	equ	0xFF7
 39068                           tblptrl	equ	0xFF6
 39069                           tablat	equ	0xFF5
 39070                           prodh	equ	0xFF4
 39071                           prodl	equ	0xFF3
 39072                           intcon	equ	0xFF2
 39073                           indf0	equ	0xFEF
 39074                           postinc0	equ	0xFEE
 39075                           fsr0h	equ	0xFEA
 39076                           fsr0l	equ	0xFE9
 39077                           wreg	equ	0xFE8
 39078                           indf1	equ	0xFE7
 39079                           postdec1	equ	0xFE5
 39080                           plusw1	equ	0xFE3
 39081                           fsr1h	equ	0xFE2
 39082                           fsr1l	equ	0xFE1
 39083                           bsr	equ	0xFE0
 39084                           indf2	equ	0xFDF
 39085                           postinc2	equ	0xFDE
 39086                           postdec2	equ	0xFDD
 39087                           plusw2	equ	0xFDB
 39088                           fsr2h	equ	0xFDA
 39089                           fsr2l	equ	0xFD9
 39090                           status	equ	0xFD8
 39091                           
 39092 ;; *************** function _TMR5_ISR *****************
 39093 ;; Defined at:
 39094 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 39095 ;; Parameters:    Size  Location     Type
 39096 ;;		None
 39097 ;; Auto vars:     Size  Location     Type
 39098 ;;		None
 39099 ;; Return value:  Size  Location     Type
 39100 ;;                  1    wreg      void 
 39101 ;; Registers used:
 39102 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39103 ;; Tracked objects:
 39104 ;;		On entry : 0/0
 39105 ;;		On exit  : 0/0
 39106 ;;		Unchanged: 0/0
 39107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39112 ;;Total ram usage:        0 bytes
 39113 ;; Hardware stack levels used:    1
 39114 ;; Hardware stack levels required when called:    2
 39115 ;; This function calls:
 39116 ;;		Absolute function
 39117 ;;		_TMR5_DefaultInterruptHandler
 39118 ;;		_TMR5_WriteTimer
 39119 ;;		_dimmingOnTimeCallback
 39120 ;; This function is called by:
 39121 ;;		_INTERRUPT_InterruptManagerHigh
 39122 ;; This function uses a non-reentrant model
 39123 ;;
 39124                           
 39125                           	psect	text109
 39126  01AD22                     __ptext109:
 39127                           	opt stack 0
 39128  01AD22                     _TMR5_ISR:
 39129                           	opt stack 15
 39130                           
 39131                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 39132                           
 39133                           ;incstack = 0
 39134  01AD22  010E               	movlb	14	; () banked
 39135  01AD24  9938               	bcf	56,4,b	;volatile
 39136                           
 39137                           ; BSR set to: 14
 39138                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 39139  01AD26  C266  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 39140  01AD2A  C267  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 39141  01AD2E  EC71  F0D8         	call	_TMR5_WriteTimer	;wreg free
 39142                           
 39143                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 39144  01AD32  0102               	movlb	2	; () banked
 39145  01AD34  514A               	movf	_TMR5_InterruptHandler& (0+255),w,b
 39146  01AD36  114B               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 39147  01AD38  114C               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 39148  01AD3A  B4D8               	btfsc	status,2,c
 39149  01AD3C  0012               	return	
 39150                           
 39151                           ; BSR set to: 2
 39152                           ;tmr5.c: 172: {
 39153                           ;tmr5.c: 173: TMR5_InterruptHandler();
 39154  01AD3E  D801               	call	i2u3504_48
 39155  01AD40  0012               	return	
 39156  01AD42                     i2u3504_48:
 39157  01AD42  0005               	push	
 39158  01AD44  6EFA               	movwf	pclath,c
 39159  01AD46  514A               	movf	_TMR5_InterruptHandler& (0+255),w,b
 39160  01AD48  6EFD               	movwf	tosl,c
 39161  01AD4A  514B               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 39162  01AD4C  6EFE               	movwf	tosh,c
 39163  01AD4E  514C               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 39164  01AD50  6EFF               	movwf	tosu,c
 39165  01AD52  50FA               	movf	pclath,w,c
 39166  01AD54  0012               	return		;indir
 39167  01AD56                     __end_of_TMR5_ISR:
 39168                           	opt stack 0
 39169                           tosu	equ	0xFFF
 39170                           tosh	equ	0xFFE
 39171                           tosl	equ	0xFFD
 39172                           pclatu	equ	0xFFB
 39173                           pclath	equ	0xFFA
 39174                           tblptru	equ	0xFF8
 39175                           tblptrh	equ	0xFF7
 39176                           tblptrl	equ	0xFF6
 39177                           tablat	equ	0xFF5
 39178                           prodh	equ	0xFF4
 39179                           prodl	equ	0xFF3
 39180                           intcon	equ	0xFF2
 39181                           indf0	equ	0xFEF
 39182                           postinc0	equ	0xFEE
 39183                           fsr0h	equ	0xFEA
 39184                           fsr0l	equ	0xFE9
 39185                           wreg	equ	0xFE8
 39186                           indf1	equ	0xFE7
 39187                           postdec1	equ	0xFE5
 39188                           plusw1	equ	0xFE3
 39189                           fsr1h	equ	0xFE2
 39190                           fsr1l	equ	0xFE1
 39191                           bsr	equ	0xFE0
 39192                           indf2	equ	0xFDF
 39193                           postinc2	equ	0xFDE
 39194                           postdec2	equ	0xFDD
 39195                           plusw2	equ	0xFDB
 39196                           fsr2h	equ	0xFDA
 39197                           fsr2l	equ	0xFD9
 39198                           status	equ	0xFD8
 39199                           
 39200 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 39201 ;; Defined at:
 39202 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 39203 ;; Parameters:    Size  Location     Type
 39204 ;;		None
 39205 ;; Auto vars:     Size  Location     Type
 39206 ;;		None
 39207 ;; Return value:  Size  Location     Type
 39208 ;;                  1    wreg      void 
 39209 ;; Registers used:
 39210 ;;		None
 39211 ;; Tracked objects:
 39212 ;;		On entry : 0/0
 39213 ;;		On exit  : 0/0
 39214 ;;		Unchanged: 0/0
 39215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39220 ;;Total ram usage:        0 bytes
 39221 ;; Hardware stack levels used:    1
 39222 ;; This function calls:
 39223 ;;		Nothing
 39224 ;; This function is called by:
 39225 ;;		_TMR5_Initialize
 39226 ;;		_TMR5_ISR
 39227 ;; This function uses a non-reentrant model
 39228 ;;
 39229                           
 39230                           	psect	text110
 39231  01B346                     __ptext110:
 39232                           	opt stack 0
 39233  01B346                     _TMR5_DefaultInterruptHandler:
 39234                           	opt stack 16
 39235                           
 39236                           ;incstack = 0
 39237  01B346  0012               	return		;funcret
 39238  01B348                     __end_of_TMR5_DefaultInterruptHandler:
 39239                           	opt stack 0
 39240                           tosu	equ	0xFFF
 39241                           tosh	equ	0xFFE
 39242                           tosl	equ	0xFFD
 39243                           pclatu	equ	0xFFB
 39244                           pclath	equ	0xFFA
 39245                           tblptru	equ	0xFF8
 39246                           tblptrh	equ	0xFF7
 39247                           tblptrl	equ	0xFF6
 39248                           tablat	equ	0xFF5
 39249                           prodh	equ	0xFF4
 39250                           prodl	equ	0xFF3
 39251                           intcon	equ	0xFF2
 39252                           indf0	equ	0xFEF
 39253                           postinc0	equ	0xFEE
 39254                           fsr0h	equ	0xFEA
 39255                           fsr0l	equ	0xFE9
 39256                           wreg	equ	0xFE8
 39257                           indf1	equ	0xFE7
 39258                           postdec1	equ	0xFE5
 39259                           plusw1	equ	0xFE3
 39260                           fsr1h	equ	0xFE2
 39261                           fsr1l	equ	0xFE1
 39262                           bsr	equ	0xFE0
 39263                           indf2	equ	0xFDF
 39264                           postinc2	equ	0xFDE
 39265                           postdec2	equ	0xFDD
 39266                           plusw2	equ	0xFDB
 39267                           fsr2h	equ	0xFDA
 39268                           fsr2l	equ	0xFD9
 39269                           status	equ	0xFD8
 39270                           
 39271 ;; *************** function _dimmingOnTimeCallback *****************
 39272 ;; Defined at:
 39273 ;;		line 440 in file "main.c"
 39274 ;; Parameters:    Size  Location     Type
 39275 ;;		None
 39276 ;; Auto vars:     Size  Location     Type
 39277 ;;		None
 39278 ;; Return value:  Size  Location     Type
 39279 ;;                  1    wreg      void 
 39280 ;; Registers used:
 39281 ;;		cstack
 39282 ;; Tracked objects:
 39283 ;;		On entry : 0/0
 39284 ;;		On exit  : 0/0
 39285 ;;		Unchanged: 0/0
 39286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39291 ;;Total ram usage:        0 bytes
 39292 ;; Hardware stack levels used:    1
 39293 ;; Hardware stack levels required when called:    1
 39294 ;; This function calls:
 39295 ;;		i2_TMR5_StopTimer
 39296 ;; This function is called by:
 39297 ;;		_main
 39298 ;;		_TMR5_ISR
 39299 ;; This function uses a non-reentrant model
 39300 ;;
 39301                           
 39302                           	psect	text111
 39303  01B2D6                     __ptext111:
 39304                           	opt stack 0
 39305  01B2D6                     _dimmingOnTimeCallback:
 39306                           	opt stack 15
 39307                           
 39308                           ;main.c: 443: LATGbits.LATG1 = 1;
 39309                           
 39310                           ;incstack = 0
 39311  01B2D6  827F               	bsf	3967,1,c	;volatile
 39312                           
 39313                           ;main.c: 446: TMR5_StopTimer();
 39314  01B2D8  EC99  F0D9         	call	i2_TMR5_StopTimer	;wreg free
 39315                           
 39316                           ;main.c: 449: PIE5bits.TMR5IE = 0;
 39317  01B2DC  010E               	movlb	14	; () banked
 39318  01B2DE  992E               	bcf	46,4,b	;volatile
 39319                           
 39320                           ; BSR set to: 14
 39321  01B2E0  0012               	return		;funcret
 39322  01B2E2                     __end_of_dimmingOnTimeCallback:
 39323                           	opt stack 0
 39324                           tosu	equ	0xFFF
 39325                           tosh	equ	0xFFE
 39326                           tosl	equ	0xFFD
 39327                           pclatu	equ	0xFFB
 39328                           pclath	equ	0xFFA
 39329                           tblptru	equ	0xFF8
 39330                           tblptrh	equ	0xFF7
 39331                           tblptrl	equ	0xFF6
 39332                           tablat	equ	0xFF5
 39333                           prodh	equ	0xFF4
 39334                           prodl	equ	0xFF3
 39335                           intcon	equ	0xFF2
 39336                           indf0	equ	0xFEF
 39337                           postinc0	equ	0xFEE
 39338                           fsr0h	equ	0xFEA
 39339                           fsr0l	equ	0xFE9
 39340                           wreg	equ	0xFE8
 39341                           indf1	equ	0xFE7
 39342                           postdec1	equ	0xFE5
 39343                           plusw1	equ	0xFE3
 39344                           fsr1h	equ	0xFE2
 39345                           fsr1l	equ	0xFE1
 39346                           bsr	equ	0xFE0
 39347                           indf2	equ	0xFDF
 39348                           postinc2	equ	0xFDE
 39349                           postdec2	equ	0xFDD
 39350                           plusw2	equ	0xFDB
 39351                           fsr2h	equ	0xFDA
 39352                           fsr2l	equ	0xFD9
 39353                           status	equ	0xFD8
 39354                           
 39355 ;; *************** function i2_TMR5_StopTimer *****************
 39356 ;; Defined at:
 39357 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 39358 ;; Parameters:    Size  Location     Type
 39359 ;;		None
 39360 ;; Auto vars:     Size  Location     Type
 39361 ;;		None
 39362 ;; Return value:  Size  Location     Type
 39363 ;;                  1    wreg      void 
 39364 ;; Registers used:
 39365 ;;		None
 39366 ;; Tracked objects:
 39367 ;;		On entry : 0/0
 39368 ;;		On exit  : 0/0
 39369 ;;		Unchanged: 0/0
 39370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39375 ;;Total ram usage:        0 bytes
 39376 ;; Hardware stack levels used:    1
 39377 ;; This function calls:
 39378 ;;		Nothing
 39379 ;; This function is called by:
 39380 ;;		_dimmingOnTimeCallback
 39381 ;; This function uses a non-reentrant model
 39382 ;;
 39383                           
 39384                           	psect	text112
 39385  01B332                     __ptext112:
 39386                           	opt stack 0
 39387  01B332                     i2_TMR5_StopTimer:
 39388                           	opt stack 15
 39389                           
 39390                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 39391                           
 39392                           ; BSR set to: 14
 39393                           ;incstack = 0
 39394  01B332  90C3               	bcf	4035,0,c	;volatile
 39395  01B334  0012               	return		;funcret
 39396  01B336                     __end_ofi2_TMR5_StopTimer:
 39397                           	opt stack 0
 39398                           tosu	equ	0xFFF
 39399                           tosh	equ	0xFFE
 39400                           tosl	equ	0xFFD
 39401                           pclatu	equ	0xFFB
 39402                           pclath	equ	0xFFA
 39403                           tblptru	equ	0xFF8
 39404                           tblptrh	equ	0xFF7
 39405                           tblptrl	equ	0xFF6
 39406                           tablat	equ	0xFF5
 39407                           prodh	equ	0xFF4
 39408                           prodl	equ	0xFF3
 39409                           intcon	equ	0xFF2
 39410                           indf0	equ	0xFEF
 39411                           postinc0	equ	0xFEE
 39412                           fsr0h	equ	0xFEA
 39413                           fsr0l	equ	0xFE9
 39414                           wreg	equ	0xFE8
 39415                           indf1	equ	0xFE7
 39416                           postdec1	equ	0xFE5
 39417                           plusw1	equ	0xFE3
 39418                           fsr1h	equ	0xFE2
 39419                           fsr1l	equ	0xFE1
 39420                           bsr	equ	0xFE0
 39421                           indf2	equ	0xFDF
 39422                           postinc2	equ	0xFDE
 39423                           postdec2	equ	0xFDD
 39424                           plusw2	equ	0xFDB
 39425                           fsr2h	equ	0xFDA
 39426                           fsr2l	equ	0xFD9
 39427                           status	equ	0xFD8
 39428                           
 39429 ;; *************** function _TMR4_ISR *****************
 39430 ;; Defined at:
 39431 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 39432 ;; Parameters:    Size  Location     Type
 39433 ;;		None
 39434 ;; Auto vars:     Size  Location     Type
 39435 ;;		None
 39436 ;; Return value:  Size  Location     Type
 39437 ;;                  1    wreg      void 
 39438 ;; Registers used:
 39439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 39440 ;; Tracked objects:
 39441 ;;		On entry : 0/0
 39442 ;;		On exit  : 0/0
 39443 ;;		Unchanged: 0/0
 39444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39449 ;;Total ram usage:        0 bytes
 39450 ;; Hardware stack levels used:    1
 39451 ;; Hardware stack levels required when called:    4
 39452 ;; This function calls:
 39453 ;;		_TMR4_CallBack
 39454 ;; This function is called by:
 39455 ;;		_INTERRUPT_InterruptManagerHigh
 39456 ;; This function uses a non-reentrant model
 39457 ;;
 39458                           
 39459                           	psect	text113
 39460  01AF34                     __ptext113:
 39461                           	opt stack 0
 39462  01AF34                     _TMR4_ISR:
 39463                           	opt stack 13
 39464                           
 39465                           ;tmr4.c: 167: static volatile unsigned int CountCallBack = 0;
 39466                           ;tmr4.c: 170: PIR5bits.TMR4IF = 0;
 39467                           
 39468                           ;incstack = 0
 39469  01AF34  010E               	movlb	14	; () banked
 39470  01AF36  9738               	bcf	56,3,b	;volatile
 39471                           
 39472                           ; BSR set to: 14
 39473                           ;tmr4.c: 173: if (++CountCallBack >= 8)
 39474  01AF38  0102               	movlb	2	; () banked
 39475  01AF3A  4B64               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 39476  01AF3C  2B65               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 39477  01AF3E  5165               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 39478  01AF40  E104               	bnz	i2u3502_40
 39479  01AF42  0E08               	movlw	8
 39480  01AF44  5D64               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 39481  01AF46  A0D8               	btfss	status,0,c
 39482  01AF48  0012               	return	
 39483  01AF4A                     i2u3502_40:
 39484                           
 39485                           ; BSR set to: 2
 39486                           ;tmr4.c: 174: {
 39487                           ;tmr4.c: 176: TMR4_CallBack();
 39488  01AF4A  ECD3  F0D7         	call	_TMR4_CallBack	;wreg free
 39489                           
 39490                           ;tmr4.c: 179: CountCallBack = 0;
 39491  01AF4E  0E00               	movlw	0
 39492  01AF50  0102               	movlb	2	; () banked
 39493  01AF52  6F65               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 39494  01AF54  0E00               	movlw	0
 39495  01AF56  6F64               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 39496  01AF58  0012               	return	
 39497  01AF5A                     __end_of_TMR4_ISR:
 39498                           	opt stack 0
 39499                           tosu	equ	0xFFF
 39500                           tosh	equ	0xFFE
 39501                           tosl	equ	0xFFD
 39502                           pclatu	equ	0xFFB
 39503                           pclath	equ	0xFFA
 39504                           tblptru	equ	0xFF8
 39505                           tblptrh	equ	0xFF7
 39506                           tblptrl	equ	0xFF6
 39507                           tablat	equ	0xFF5
 39508                           prodh	equ	0xFF4
 39509                           prodl	equ	0xFF3
 39510                           intcon	equ	0xFF2
 39511                           indf0	equ	0xFEF
 39512                           postinc0	equ	0xFEE
 39513                           fsr0h	equ	0xFEA
 39514                           fsr0l	equ	0xFE9
 39515                           wreg	equ	0xFE8
 39516                           indf1	equ	0xFE7
 39517                           postdec1	equ	0xFE5
 39518                           plusw1	equ	0xFE3
 39519                           fsr1h	equ	0xFE2
 39520                           fsr1l	equ	0xFE1
 39521                           bsr	equ	0xFE0
 39522                           indf2	equ	0xFDF
 39523                           postinc2	equ	0xFDE
 39524                           postdec2	equ	0xFDD
 39525                           plusw2	equ	0xFDB
 39526                           fsr2h	equ	0xFDA
 39527                           fsr2l	equ	0xFD9
 39528                           status	equ	0xFD8
 39529                           
 39530 ;; *************** function _TMR4_CallBack *****************
 39531 ;; Defined at:
 39532 ;;		line 183 in file "mcc_generated_files/tmr4.c"
 39533 ;; Parameters:    Size  Location     Type
 39534 ;;		None
 39535 ;; Auto vars:     Size  Location     Type
 39536 ;;		None
 39537 ;; Return value:  Size  Location     Type
 39538 ;;                  1    wreg      void 
 39539 ;; Registers used:
 39540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 39541 ;; Tracked objects:
 39542 ;;		On entry : 0/0
 39543 ;;		On exit  : 0/0
 39544 ;;		Unchanged: 0/0
 39545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39550 ;;Total ram usage:        0 bytes
 39551 ;; Hardware stack levels used:    1
 39552 ;; Hardware stack levels required when called:    3
 39553 ;; This function calls:
 39554 ;;		Absolute function
 39555 ;;		_TMR4_DefaultInterruptHandler
 39556 ;;		_writeEnergyToEEPROMCallback
 39557 ;; This function is called by:
 39558 ;;		_TMR4_ISR
 39559 ;; This function uses a non-reentrant model
 39560 ;;
 39561                           
 39562                           	psect	text114
 39563  01AFA6                     __ptext114:
 39564                           	opt stack 0
 39565  01AFA6                     _TMR4_CallBack:
 39566                           	opt stack 13
 39567                           
 39568                           ;tmr4.c: 187: if(TMR4_InterruptHandler)
 39569                           
 39570                           ; BSR set to: 2
 39571                           ;incstack = 0
 39572  01AFA6  0102               	movlb	2	; () banked
 39573  01AFA8  5144               	movf	_TMR4_InterruptHandler& (0+255),w,b
 39574  01AFAA  1145               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 39575  01AFAC  1146               	iorwf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 39576  01AFAE  B4D8               	btfsc	status,2,c
 39577  01AFB0  0012               	return	
 39578                           
 39579                           ; BSR set to: 2
 39580                           ;tmr4.c: 188: {
 39581                           ;tmr4.c: 189: TMR4_InterruptHandler();
 39582  01AFB2  D801               	call	i2u3423_48
 39583  01AFB4  0012               	return	
 39584  01AFB6                     i2u3423_48:
 39585  01AFB6  0005               	push	
 39586  01AFB8  6EFA               	movwf	pclath,c
 39587  01AFBA  5144               	movf	_TMR4_InterruptHandler& (0+255),w,b
 39588  01AFBC  6EFD               	movwf	tosl,c
 39589  01AFBE  5145               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 39590  01AFC0  6EFE               	movwf	tosh,c
 39591  01AFC2  5146               	movf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 39592  01AFC4  6EFF               	movwf	tosu,c
 39593  01AFC6  50FA               	movf	pclath,w,c
 39594  01AFC8  0012               	return		;indir
 39595  01AFCA                     __end_of_TMR4_CallBack:
 39596                           	opt stack 0
 39597                           tosu	equ	0xFFF
 39598                           tosh	equ	0xFFE
 39599                           tosl	equ	0xFFD
 39600                           pclatu	equ	0xFFB
 39601                           pclath	equ	0xFFA
 39602                           tblptru	equ	0xFF8
 39603                           tblptrh	equ	0xFF7
 39604                           tblptrl	equ	0xFF6
 39605                           tablat	equ	0xFF5
 39606                           prodh	equ	0xFF4
 39607                           prodl	equ	0xFF3
 39608                           intcon	equ	0xFF2
 39609                           indf0	equ	0xFEF
 39610                           postinc0	equ	0xFEE
 39611                           fsr0h	equ	0xFEA
 39612                           fsr0l	equ	0xFE9
 39613                           wreg	equ	0xFE8
 39614                           indf1	equ	0xFE7
 39615                           postdec1	equ	0xFE5
 39616                           plusw1	equ	0xFE3
 39617                           fsr1h	equ	0xFE2
 39618                           fsr1l	equ	0xFE1
 39619                           bsr	equ	0xFE0
 39620                           indf2	equ	0xFDF
 39621                           postinc2	equ	0xFDE
 39622                           postdec2	equ	0xFDD
 39623                           plusw2	equ	0xFDB
 39624                           fsr2h	equ	0xFDA
 39625                           fsr2l	equ	0xFD9
 39626                           status	equ	0xFD8
 39627                           
 39628 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 39629 ;; Defined at:
 39630 ;;		line 197 in file "mcc_generated_files/tmr4.c"
 39631 ;; Parameters:    Size  Location     Type
 39632 ;;		None
 39633 ;; Auto vars:     Size  Location     Type
 39634 ;;		None
 39635 ;; Return value:  Size  Location     Type
 39636 ;;                  1    wreg      void 
 39637 ;; Registers used:
 39638 ;;		None
 39639 ;; Tracked objects:
 39640 ;;		On entry : 0/0
 39641 ;;		On exit  : 0/0
 39642 ;;		Unchanged: 0/0
 39643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39648 ;;Total ram usage:        0 bytes
 39649 ;; Hardware stack levels used:    1
 39650 ;; This function calls:
 39651 ;;		Nothing
 39652 ;; This function is called by:
 39653 ;;		_TMR4_Initialize
 39654 ;;		_TMR4_CallBack
 39655 ;; This function uses a non-reentrant model
 39656 ;;
 39657                           
 39658                           	psect	text115
 39659  01B348                     __ptext115:
 39660                           	opt stack 0
 39661  01B348                     _TMR4_DefaultInterruptHandler:
 39662                           	opt stack 15
 39663                           
 39664                           ;incstack = 0
 39665  01B348  0012               	return		;funcret
 39666  01B34A                     __end_of_TMR4_DefaultInterruptHandler:
 39667                           	opt stack 0
 39668                           tosu	equ	0xFFF
 39669                           tosh	equ	0xFFE
 39670                           tosl	equ	0xFFD
 39671                           pclatu	equ	0xFFB
 39672                           pclath	equ	0xFFA
 39673                           tblptru	equ	0xFF8
 39674                           tblptrh	equ	0xFF7
 39675                           tblptrl	equ	0xFF6
 39676                           tablat	equ	0xFF5
 39677                           prodh	equ	0xFF4
 39678                           prodl	equ	0xFF3
 39679                           intcon	equ	0xFF2
 39680                           indf0	equ	0xFEF
 39681                           postinc0	equ	0xFEE
 39682                           fsr0h	equ	0xFEA
 39683                           fsr0l	equ	0xFE9
 39684                           wreg	equ	0xFE8
 39685                           indf1	equ	0xFE7
 39686                           postdec1	equ	0xFE5
 39687                           plusw1	equ	0xFE3
 39688                           fsr1h	equ	0xFE2
 39689                           fsr1l	equ	0xFE1
 39690                           bsr	equ	0xFE0
 39691                           indf2	equ	0xFDF
 39692                           postinc2	equ	0xFDE
 39693                           postdec2	equ	0xFDD
 39694                           plusw2	equ	0xFDB
 39695                           fsr2h	equ	0xFDA
 39696                           fsr2l	equ	0xFD9
 39697                           status	equ	0xFD8
 39698                           
 39699 ;; *************** function _writeEnergyToEEPROMCallback *****************
 39700 ;; Defined at:
 39701 ;;		line 457 in file "main.c"
 39702 ;; Parameters:    Size  Location     Type
 39703 ;;		None
 39704 ;; Auto vars:     Size  Location     Type
 39705 ;;  current_valu    4   63[COMRAM] void 
 39706 ;; Return value:  Size  Location     Type
 39707 ;;                  1    wreg      void 
 39708 ;; Registers used:
 39709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39710 ;; Tracked objects:
 39711 ;;		On entry : 0/0
 39712 ;;		On exit  : 0/0
 39713 ;;		Unchanged: 0/0
 39714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39716 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39719 ;;Total ram usage:        4 bytes
 39720 ;; Hardware stack levels used:    1
 39721 ;; Hardware stack levels required when called:    2
 39722 ;; This function calls:
 39723 ;;		i2___flge
 39724 ;;		i2_readDoubleFromEEPROM
 39725 ;;		i2_writeDoubleToEEPROM
 39726 ;; This function is called by:
 39727 ;;		_main
 39728 ;;		_TMR4_CallBack
 39729 ;; This function uses a non-reentrant model
 39730 ;;
 39731                           
 39732                           	psect	text116
 39733  019C70                     __ptext116:
 39734                           	opt stack 0
 39735  019C70                     _writeEnergyToEEPROMCallback:
 39736                           	opt stack 13
 39737                           
 39738                           ;main.c: 459: double current_value = readDoubleFromEEPROM(Total_Energy_address);
 39739                           
 39740                           ;incstack = 0
 39741  019C70  0E5F               	movlw	low _Total_Energy_address
 39742  019C72  6EF6               	movwf	tblptrl,c
 39743  019C74                     	if	1	;There is more than 1 active tblptr byte
 39744  019C74  0ECF               	movlw	high _Total_Energy_address
 39745  019C76  6EF7               	movwf	tblptrh,c
 39746  019C78                     	endif
 39747  019C78                     	if	1	;There are 3 active tblptr bytes
 39748  019C78  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 39749  019C7A  6EF8               	movwf	tblptru,c
 39750  019C7C                     	endif
 39751  019C7C  0009               	tblrd		*+
 39752  019C7E  CFF5 F003          	movff	tablat,i2readDoubleFromEEPROM@starting_address
 39753  019C82  000A               	tblrd		*-
 39754  019C84  CFF5 F004          	movff	tablat,i2readDoubleFromEEPROM@starting_address+1
 39755  019C88  EC18  F0D3         	call	i2_readDoubleFromEEPROM	;wreg free
 39756  019C8C  C003  F040         	movff	?i2_readDoubleFromEEPROM,writeEnergyToEEPROMCallback@current_value
 39757  019C90  C004  F041         	movff	?i2_readDoubleFromEEPROM+1,writeEnergyToEEPROMCallback@current_value+1
 39758  019C94  C005  F042         	movff	?i2_readDoubleFromEEPROM+2,writeEnergyToEEPROMCallback@current_value+2
 39759  019C98  C006  F043         	movff	?i2_readDoubleFromEEPROM+3,writeEnergyToEEPROMCallback@current_value+3
 39760                           
 39761                           ;main.c: 461: if (Total_Energy > current_value) {
 39762  019C9C  C040  F034         	movff	writeEnergyToEEPROMCallback@current_value,i2___flge@ff1
 39763  019CA0  C041  F035         	movff	writeEnergyToEEPROMCallback@current_value+1,i2___flge@ff1+1
 39764  019CA4  C042  F036         	movff	writeEnergyToEEPROMCallback@current_value+2,i2___flge@ff1+2
 39765  019CA8  C043  F037         	movff	writeEnergyToEEPROMCallback@current_value+3,i2___flge@ff1+3
 39766  019CAC  C0F6  F038         	movff	_Total_Energy,i2___flge@ff2	;volatile
 39767  019CB0  C0F7  F039         	movff	_Total_Energy+1,i2___flge@ff2+1	;volatile
 39768  019CB4  C0F8  F03A         	movff	_Total_Energy+2,i2___flge@ff2+2	;volatile
 39769  019CB8  C0F9  F03B         	movff	_Total_Energy+3,i2___flge@ff2+3	;volatile
 39770  019CBC  EC1F  F0C7         	call	i2___flge	;wreg free
 39771  019CC0  B0D8               	btfsc	status,0,c
 39772  019CC2  0012               	return	
 39773                           
 39774                           ;main.c: 463: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 39775  019CC4  C0F6  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 39776  019CC8  C0F7  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 39777  019CCC  C0F8  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 39778  019CD0  C0F9  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 39779  019CD4  0E5F               	movlw	low _Total_Energy_address
 39780  019CD6  6EF6               	movwf	tblptrl,c
 39781  019CD8                     	if	1	;There is more than 1 active tblptr byte
 39782  019CD8  0ECF               	movlw	high _Total_Energy_address
 39783  019CDA  6EF7               	movwf	tblptrh,c
 39784  019CDC                     	endif
 39785  019CDC                     	if	1	;There are 3 active tblptr bytes
 39786  019CDC  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 39787  019CDE  6EF8               	movwf	tblptru,c
 39788  019CE0                     	endif
 39789  019CE0  0009               	tblrd		*+
 39790  019CE2  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 39791  019CE6  000A               	tblrd		*-
 39792  019CE8  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 39793  019CEC  EC8B  F0D3         	call	i2_writeDoubleToEEPROM	;wreg free
 39794  019CF0  0012               	return	
 39795  019CF2                     __end_of_writeEnergyToEEPROMCallback:
 39796                           	opt stack 0
 39797                           tosu	equ	0xFFF
 39798                           tosh	equ	0xFFE
 39799                           tosl	equ	0xFFD
 39800                           pclatu	equ	0xFFB
 39801                           pclath	equ	0xFFA
 39802                           tblptru	equ	0xFF8
 39803                           tblptrh	equ	0xFF7
 39804                           tblptrl	equ	0xFF6
 39805                           tablat	equ	0xFF5
 39806                           prodh	equ	0xFF4
 39807                           prodl	equ	0xFF3
 39808                           intcon	equ	0xFF2
 39809                           indf0	equ	0xFEF
 39810                           postinc0	equ	0xFEE
 39811                           fsr0h	equ	0xFEA
 39812                           fsr0l	equ	0xFE9
 39813                           wreg	equ	0xFE8
 39814                           indf1	equ	0xFE7
 39815                           postdec1	equ	0xFE5
 39816                           plusw1	equ	0xFE3
 39817                           fsr1h	equ	0xFE2
 39818                           fsr1l	equ	0xFE1
 39819                           bsr	equ	0xFE0
 39820                           indf2	equ	0xFDF
 39821                           postinc2	equ	0xFDE
 39822                           postdec2	equ	0xFDD
 39823                           plusw2	equ	0xFDB
 39824                           fsr2h	equ	0xFDA
 39825                           fsr2l	equ	0xFD9
 39826                           status	equ	0xFD8
 39827                           
 39828 ;; *************** function i2_readDoubleFromEEPROM *****************
 39829 ;; Defined at:
 39830 ;;		line 22 in file "double_to_EEPROM.c"
 39831 ;; Parameters:    Size  Location     Type
 39832 ;;  starting_add    2    2[COMRAM] unsigned int 
 39833 ;; Auto vars:     Size  Location     Type
 39834 ;;  readDoubleFr    4    6[COMRAM] struct .
 39835 ;;  readDoubleFr    2   10[COMRAM] int 
 39836 ;; Return value:  Size  Location     Type
 39837 ;;                  4    2[COMRAM] int 
 39838 ;; Registers used:
 39839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39840 ;; Tracked objects:
 39841 ;;		On entry : 0/0
 39842 ;;		On exit  : 0/0
 39843 ;;		Unchanged: 0/0
 39844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39846 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39848 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39849 ;;Total ram usage:       10 bytes
 39850 ;; Hardware stack levels used:    1
 39851 ;; Hardware stack levels required when called:    1
 39852 ;; This function calls:
 39853 ;;		i2_DATAEE_ReadByte
 39854 ;; This function is called by:
 39855 ;;		_writeEnergyToEEPROMCallback
 39856 ;; This function uses a non-reentrant model
 39857 ;;
 39858                           
 39859                           	psect	text117
 39860  01A630                     __ptext117:
 39861                           	opt stack 0
 39862  01A630                     i2_readDoubleFromEEPROM:
 39863                           	opt stack 13
 39864                           
 39865                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 39866                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 39867                           
 39868                           ;incstack = 0
 39869  01A630  0E00               	movlw	0
 39870  01A632  6E0C               	movwf	i2readDoubleFromEEPROM@byte_index+1,c
 39871  01A634  0E00               	movlw	0
 39872  01A636  6E0B               	movwf	i2readDoubleFromEEPROM@byte_index,c
 39873  01A638  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 39874  01A63A  E118               	bnz	i2l1658
 39875  01A63C  D013               	goto	L17
 39876  01A63E                     
 39877                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 39878  01A63E  0E07               	movlw	low i2readDoubleFromEEPROM@output_data
 39879  01A640  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 39880  01A642  6ED9               	movwf	fsr2l,c
 39881  01A644  0E00               	movlw	high i2readDoubleFromEEPROM@output_data
 39882  01A646  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 39883  01A648  6EDA               	movwf	fsr2h,c
 39884  01A64A  5003               	movf	i2readDoubleFromEEPROM@starting_address,w,c
 39885  01A64C  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 39886  01A64E  6E01               	movwf	i2DATAEE_ReadByte@bAdd,c
 39887  01A650  5004               	movf	i2readDoubleFromEEPROM@starting_address+1,w,c
 39888  01A652  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 39889  01A654  6E02               	movwf	i2DATAEE_ReadByte@bAdd+1,c
 39890  01A656  ECB2  F0D8         	call	i2_DATAEE_ReadByte	;wreg free
 39891  01A65A  6EDF               	movwf	indf2,c
 39892  01A65C  4A0B               	infsnz	i2readDoubleFromEEPROM@byte_index,f,c
 39893  01A65E  2A0C               	incf	i2readDoubleFromEEPROM@byte_index+1,f,c
 39894  01A660  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 39895  01A662  E104               	bnz	i2u1279_40
 39896  01A664                     L17:
 39897  01A664  0E04               	movlw	4
 39898  01A666  5C0B               	subwf	i2readDoubleFromEEPROM@byte_index,w,c
 39899  01A668  A0D8               	btfss	status,0,c
 39900  01A66A  D7E9               	goto	i2l1657
 39901  01A66C                     i2u1279_40:
 39902  01A66C                     i2l1658:
 39903                           
 39904                           ;double_to_EEPROM.c: 32: }
 39905                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 39906  01A66C  C007  F003         	movff	i2readDoubleFromEEPROM@output_data,?i2_readDoubleFromEEPROM
 39907  01A670  C008  F004         	movff	i2readDoubleFromEEPROM@output_data+1,?i2_readDoubleFromEEPROM+1
 39908  01A674  C009  F005         	movff	i2readDoubleFromEEPROM@output_data+2,?i2_readDoubleFromEEPROM+2
 39909  01A678  C00A  F006         	movff	i2readDoubleFromEEPROM@output_data+3,?i2_readDoubleFromEEPROM+3
 39910  01A67C  0012               	return		;funcret
 39911  01A67E                     __end_ofi2_readDoubleFromEEPROM:
 39912                           	opt stack 0
 39913                           tosu	equ	0xFFF
 39914                           tosh	equ	0xFFE
 39915                           tosl	equ	0xFFD
 39916                           pclatu	equ	0xFFB
 39917                           pclath	equ	0xFFA
 39918                           tblptru	equ	0xFF8
 39919                           tblptrh	equ	0xFF7
 39920                           tblptrl	equ	0xFF6
 39921                           tablat	equ	0xFF5
 39922                           prodh	equ	0xFF4
 39923                           prodl	equ	0xFF3
 39924                           intcon	equ	0xFF2
 39925                           indf0	equ	0xFEF
 39926                           postinc0	equ	0xFEE
 39927                           fsr0h	equ	0xFEA
 39928                           fsr0l	equ	0xFE9
 39929                           wreg	equ	0xFE8
 39930                           indf1	equ	0xFE7
 39931                           postdec1	equ	0xFE5
 39932                           plusw1	equ	0xFE3
 39933                           fsr1h	equ	0xFE2
 39934                           fsr1l	equ	0xFE1
 39935                           bsr	equ	0xFE0
 39936                           indf2	equ	0xFDF
 39937                           postinc2	equ	0xFDE
 39938                           postdec2	equ	0xFDD
 39939                           plusw2	equ	0xFDB
 39940                           fsr2h	equ	0xFDA
 39941                           fsr2l	equ	0xFD9
 39942                           status	equ	0xFD8
 39943                           
 39944 ;; *************** function i2_DATAEE_ReadByte *****************
 39945 ;; Defined at:
 39946 ;;		line 190 in file "mcc_generated_files/memory.c"
 39947 ;; Parameters:    Size  Location     Type
 39948 ;;  bAdd            2    0[COMRAM] unsigned int 
 39949 ;; Auto vars:     Size  Location     Type
 39950 ;;		None
 39951 ;; Return value:  Size  Location     Type
 39952 ;;                  1    wreg      unsigned char 
 39953 ;; Registers used:
 39954 ;;		wreg, status,2, status,0
 39955 ;; Tracked objects:
 39956 ;;		On entry : 0/0
 39957 ;;		On exit  : 0/0
 39958 ;;		Unchanged: 0/0
 39959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39964 ;;Total ram usage:        2 bytes
 39965 ;; Hardware stack levels used:    1
 39966 ;; This function calls:
 39967 ;;		Nothing
 39968 ;; This function is called by:
 39969 ;;		i2_readDoubleFromEEPROM
 39970 ;; This function uses a non-reentrant model
 39971 ;;
 39972                           
 39973                           	psect	text118
 39974  01B164                     __ptext118:
 39975                           	opt stack 0
 39976  01B164                     i2_DATAEE_ReadByte:
 39977                           	opt stack 13
 39978                           
 39979                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 39980                           
 39981                           ;incstack = 0
 39982  01B164  5002               	movf	i2DATAEE_ReadByte@bAdd+1,w,c
 39983  01B166  0B03               	andlw	3
 39984  01B168  6E75               	movwf	3957,c	;volatile
 39985                           
 39986                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 39987  01B16A  C001  FF74         	movff	i2DATAEE_ReadByte@bAdd,3956	;volatile
 39988                           
 39989                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 39990  01B16E  0E3F               	movlw	-193
 39991  01B170  1677               	andwf	3959,f,c	;volsfr
 39992                           
 39993                           ;memory.c: 195: NVMCON1bits.RD = 1;
 39994  01B172  8077               	bsf	3959,0,c	;volsfr
 39995                           
 39996                           ;memory.c: 196: __nop();
 39997  01B174  F000               	nop	
 39998                           
 39999                           ;memory.c: 197: __nop();
 40000  01B176  F000               	nop	
 40001                           
 40002                           ;memory.c: 199: return (NVMDAT);
 40003  01B178  5076               	movf	3958,w,c	;volatile
 40004  01B17A  0012               	return	
 40005  01B17C                     __end_ofi2_DATAEE_ReadByte:
 40006                           	opt stack 0
 40007                           tosu	equ	0xFFF
 40008                           tosh	equ	0xFFE
 40009                           tosl	equ	0xFFD
 40010                           pclatu	equ	0xFFB
 40011                           pclath	equ	0xFFA
 40012                           tblptru	equ	0xFF8
 40013                           tblptrh	equ	0xFF7
 40014                           tblptrl	equ	0xFF6
 40015                           tablat	equ	0xFF5
 40016                           prodh	equ	0xFF4
 40017                           prodl	equ	0xFF3
 40018                           intcon	equ	0xFF2
 40019                           indf0	equ	0xFEF
 40020                           postinc0	equ	0xFEE
 40021                           fsr0h	equ	0xFEA
 40022                           fsr0l	equ	0xFE9
 40023                           wreg	equ	0xFE8
 40024                           indf1	equ	0xFE7
 40025                           postdec1	equ	0xFE5
 40026                           plusw1	equ	0xFE3
 40027                           fsr1h	equ	0xFE2
 40028                           fsr1l	equ	0xFE1
 40029                           bsr	equ	0xFE0
 40030                           indf2	equ	0xFDF
 40031                           postinc2	equ	0xFDE
 40032                           postdec2	equ	0xFDD
 40033                           plusw2	equ	0xFDB
 40034                           fsr2h	equ	0xFDA
 40035                           fsr2l	equ	0xFD9
 40036                           status	equ	0xFD8
 40037                           
 40038 ;; *************** function _INT0_ISR *****************
 40039 ;; Defined at:
 40040 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 40041 ;; Parameters:    Size  Location     Type
 40042 ;;		None
 40043 ;; Auto vars:     Size  Location     Type
 40044 ;;		None
 40045 ;; Return value:  Size  Location     Type
 40046 ;;                  1    wreg      void 
 40047 ;; Registers used:
 40048 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 40049 ;; Tracked objects:
 40050 ;;		On entry : 0/0
 40051 ;;		On exit  : 0/0
 40052 ;;		Unchanged: 0/0
 40053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40058 ;;Total ram usage:        0 bytes
 40059 ;; Hardware stack levels used:    1
 40060 ;; Hardware stack levels required when called:    3
 40061 ;; This function calls:
 40062 ;;		_INT0_CallBack
 40063 ;; This function is called by:
 40064 ;;		_INTERRUPT_InterruptManagerHigh
 40065 ;; This function uses a non-reentrant model
 40066 ;;
 40067                           
 40068                           	psect	text119
 40069  01B2F8                     __ptext119:
 40070                           	opt stack 0
 40071  01B2F8                     _INT0_ISR:
 40072                           	opt stack 14
 40073                           
 40074                           ;ext_int.c: 34: (PIR0bits.INT0IF = 0);
 40075                           
 40076                           ;incstack = 0
 40077  01B2F8  010E               	movlb	14	; () banked
 40078  01B2FA  9133               	bcf	51,0,b	;volatile
 40079                           
 40080                           ; BSR set to: 14
 40081                           ;ext_int.c: 37: INT0_CallBack();
 40082  01B2FC  ECE5  F0D7         	call	_INT0_CallBack	;wreg free
 40083  01B300  0012               	return		;funcret
 40084  01B302                     __end_of_INT0_ISR:
 40085                           	opt stack 0
 40086                           tosu	equ	0xFFF
 40087                           tosh	equ	0xFFE
 40088                           tosl	equ	0xFFD
 40089                           pclatu	equ	0xFFB
 40090                           pclath	equ	0xFFA
 40091                           tblptru	equ	0xFF8
 40092                           tblptrh	equ	0xFF7
 40093                           tblptrl	equ	0xFF6
 40094                           tablat	equ	0xFF5
 40095                           prodh	equ	0xFF4
 40096                           prodl	equ	0xFF3
 40097                           intcon	equ	0xFF2
 40098                           indf0	equ	0xFEF
 40099                           postinc0	equ	0xFEE
 40100                           fsr0h	equ	0xFEA
 40101                           fsr0l	equ	0xFE9
 40102                           wreg	equ	0xFE8
 40103                           indf1	equ	0xFE7
 40104                           postdec1	equ	0xFE5
 40105                           plusw1	equ	0xFE3
 40106                           fsr1h	equ	0xFE2
 40107                           fsr1l	equ	0xFE1
 40108                           bsr	equ	0xFE0
 40109                           indf2	equ	0xFDF
 40110                           postinc2	equ	0xFDE
 40111                           postdec2	equ	0xFDD
 40112                           plusw2	equ	0xFDB
 40113                           fsr2h	equ	0xFDA
 40114                           fsr2l	equ	0xFD9
 40115                           status	equ	0xFD8
 40116                           
 40117 ;; *************** function _INT0_CallBack *****************
 40118 ;; Defined at:
 40119 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 40120 ;; Parameters:    Size  Location     Type
 40121 ;;		None
 40122 ;; Auto vars:     Size  Location     Type
 40123 ;;		None
 40124 ;; Return value:  Size  Location     Type
 40125 ;;                  1    wreg      void 
 40126 ;; Registers used:
 40127 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 40128 ;; Tracked objects:
 40129 ;;		On entry : 0/0
 40130 ;;		On exit  : 0/0
 40131 ;;		Unchanged: 0/0
 40132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40137 ;;Total ram usage:        0 bytes
 40138 ;; Hardware stack levels used:    1
 40139 ;; Hardware stack levels required when called:    2
 40140 ;; This function calls:
 40141 ;;		Absolute function
 40142 ;;		_INT0_DefaultInterruptHandler
 40143 ;;		_dimmingOffTimeCallback
 40144 ;; This function is called by:
 40145 ;;		_INT0_ISR
 40146 ;; This function uses a non-reentrant model
 40147 ;;
 40148                           
 40149                           	psect	text120
 40150  01AFCA                     __ptext120:
 40151                           	opt stack 0
 40152  01AFCA                     _INT0_CallBack:
 40153                           	opt stack 14
 40154                           
 40155                           ;ext_int.c: 44: if(INT0_InterruptHandler)
 40156                           
 40157                           ;incstack = 0
 40158  01AFCA  0102               	movlb	2	; () banked
 40159  01AFCC  5147               	movf	_INT0_InterruptHandler& (0+255),w,b
 40160  01AFCE  1148               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 40161  01AFD0  1149               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 40162  01AFD2  B4D8               	btfsc	status,2,c
 40163  01AFD4  0012               	return	
 40164                           
 40165                           ; BSR set to: 2
 40166                           ;ext_int.c: 45: {
 40167                           ;ext_int.c: 46: INT0_InterruptHandler();
 40168  01AFD6  D801               	call	i2u3421_48
 40169  01AFD8  0012               	return	
 40170  01AFDA                     i2u3421_48:
 40171  01AFDA  0005               	push	
 40172  01AFDC  6EFA               	movwf	pclath,c
 40173  01AFDE  5147               	movf	_INT0_InterruptHandler& (0+255),w,b
 40174  01AFE0  6EFD               	movwf	tosl,c
 40175  01AFE2  5148               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 40176  01AFE4  6EFE               	movwf	tosh,c
 40177  01AFE6  5149               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 40178  01AFE8  6EFF               	movwf	tosu,c
 40179  01AFEA  50FA               	movf	pclath,w,c
 40180  01AFEC  0012               	return		;indir
 40181  01AFEE                     __end_of_INT0_CallBack:
 40182                           	opt stack 0
 40183                           tosu	equ	0xFFF
 40184                           tosh	equ	0xFFE
 40185                           tosl	equ	0xFFD
 40186                           pclatu	equ	0xFFB
 40187                           pclath	equ	0xFFA
 40188                           tblptru	equ	0xFF8
 40189                           tblptrh	equ	0xFF7
 40190                           tblptrl	equ	0xFF6
 40191                           tablat	equ	0xFF5
 40192                           prodh	equ	0xFF4
 40193                           prodl	equ	0xFF3
 40194                           intcon	equ	0xFF2
 40195                           indf0	equ	0xFEF
 40196                           postinc0	equ	0xFEE
 40197                           fsr0h	equ	0xFEA
 40198                           fsr0l	equ	0xFE9
 40199                           wreg	equ	0xFE8
 40200                           indf1	equ	0xFE7
 40201                           postdec1	equ	0xFE5
 40202                           plusw1	equ	0xFE3
 40203                           fsr1h	equ	0xFE2
 40204                           fsr1l	equ	0xFE1
 40205                           bsr	equ	0xFE0
 40206                           indf2	equ	0xFDF
 40207                           postinc2	equ	0xFDE
 40208                           postdec2	equ	0xFDD
 40209                           plusw2	equ	0xFDB
 40210                           fsr2h	equ	0xFDA
 40211                           fsr2l	equ	0xFD9
 40212                           status	equ	0xFD8
 40213                           
 40214 ;; *************** function _INT0_DefaultInterruptHandler *****************
 40215 ;; Defined at:
 40216 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 40217 ;; Parameters:    Size  Location     Type
 40218 ;;		None
 40219 ;; Auto vars:     Size  Location     Type
 40220 ;;		None
 40221 ;; Return value:  Size  Location     Type
 40222 ;;                  1    wreg      void 
 40223 ;; Registers used:
 40224 ;;		None
 40225 ;; Tracked objects:
 40226 ;;		On entry : 0/0
 40227 ;;		On exit  : 0/0
 40228 ;;		Unchanged: 0/0
 40229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40234 ;;Total ram usage:        0 bytes
 40235 ;; Hardware stack levels used:    1
 40236 ;; This function calls:
 40237 ;;		Nothing
 40238 ;; This function is called by:
 40239 ;;		_EXT_INT_Initialize
 40240 ;;		_INT0_CallBack
 40241 ;; This function uses a non-reentrant model
 40242 ;;
 40243                           
 40244                           	psect	text121
 40245  01B34A                     __ptext121:
 40246                           	opt stack 0
 40247  01B34A                     _INT0_DefaultInterruptHandler:
 40248                           	opt stack 15
 40249                           
 40250                           ;incstack = 0
 40251  01B34A  0012               	return		;funcret
 40252  01B34C                     __end_of_INT0_DefaultInterruptHandler:
 40253                           	opt stack 0
 40254                           tosu	equ	0xFFF
 40255                           tosh	equ	0xFFE
 40256                           tosl	equ	0xFFD
 40257                           pclatu	equ	0xFFB
 40258                           pclath	equ	0xFFA
 40259                           tblptru	equ	0xFF8
 40260                           tblptrh	equ	0xFF7
 40261                           tblptrl	equ	0xFF6
 40262                           tablat	equ	0xFF5
 40263                           prodh	equ	0xFF4
 40264                           prodl	equ	0xFF3
 40265                           intcon	equ	0xFF2
 40266                           indf0	equ	0xFEF
 40267                           postinc0	equ	0xFEE
 40268                           fsr0h	equ	0xFEA
 40269                           fsr0l	equ	0xFE9
 40270                           wreg	equ	0xFE8
 40271                           indf1	equ	0xFE7
 40272                           postdec1	equ	0xFE5
 40273                           plusw1	equ	0xFE3
 40274                           fsr1h	equ	0xFE2
 40275                           fsr1l	equ	0xFE1
 40276                           bsr	equ	0xFE0
 40277                           indf2	equ	0xFDF
 40278                           postinc2	equ	0xFDE
 40279                           postdec2	equ	0xFDD
 40280                           plusw2	equ	0xFDB
 40281                           fsr2h	equ	0xFDA
 40282                           fsr2l	equ	0xFD9
 40283                           status	equ	0xFD8
 40284                           
 40285 ;; *************** function _dimmingOffTimeCallback *****************
 40286 ;; Defined at:
 40287 ;;		line 425 in file "main.c"
 40288 ;; Parameters:    Size  Location     Type
 40289 ;;		None
 40290 ;; Auto vars:     Size  Location     Type
 40291 ;;		None
 40292 ;; Return value:  Size  Location     Type
 40293 ;;                  1    wreg      void 
 40294 ;; Registers used:
 40295 ;;		wreg, status,2, cstack
 40296 ;; Tracked objects:
 40297 ;;		On entry : 0/0
 40298 ;;		On exit  : 0/0
 40299 ;;		Unchanged: 0/0
 40300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40305 ;;Total ram usage:        0 bytes
 40306 ;; Hardware stack levels used:    1
 40307 ;; Hardware stack levels required when called:    1
 40308 ;; This function calls:
 40309 ;;		_TMR5_StartTimer
 40310 ;;		_TMR5_WriteTimer
 40311 ;; This function is called by:
 40312 ;;		_main
 40313 ;;		_INT0_CallBack
 40314 ;; This function uses a non-reentrant model
 40315 ;;
 40316                           
 40317                           	psect	text122
 40318  01B17C                     __ptext122:
 40319                           	opt stack 0
 40320  01B17C                     _dimmingOffTimeCallback:
 40321                           	opt stack 14
 40322                           
 40323                           ;main.c: 428: LATGbits.LATG1 = 0;
 40324                           
 40325                           ;incstack = 0
 40326  01B17C  927F               	bcf	3967,1,c	;volatile
 40327                           
 40328                           ;main.c: 431: TMR5_WriteTimer(dimming_period);
 40329  01B17E  C0F0  F001         	movff	_dimming_period,TMR5_WriteTimer@timerVal	;volatile
 40330  01B182  C0F1  F002         	movff	_dimming_period+1,TMR5_WriteTimer@timerVal+1	;volatile
 40331  01B186  EC71  F0D8         	call	_TMR5_WriteTimer	;wreg free
 40332                           
 40333                           ;main.c: 432: TMR5_StartTimer();
 40334  01B18A  EC9B  F0D9         	call	_TMR5_StartTimer	;wreg free
 40335                           
 40336                           ;main.c: 435: PIE5bits.TMR5IE = 1;
 40337  01B18E  010E               	movlb	14	; () banked
 40338  01B190  892E               	bsf	46,4,b	;volatile
 40339                           
 40340                           ; BSR set to: 14
 40341  01B192  0012               	return		;funcret
 40342  01B194                     __end_of_dimmingOffTimeCallback:
 40343                           	opt stack 0
 40344                           tosu	equ	0xFFF
 40345                           tosh	equ	0xFFE
 40346                           tosl	equ	0xFFD
 40347                           pclatu	equ	0xFFB
 40348                           pclath	equ	0xFFA
 40349                           tblptru	equ	0xFF8
 40350                           tblptrh	equ	0xFF7
 40351                           tblptrl	equ	0xFF6
 40352                           tablat	equ	0xFF5
 40353                           prodh	equ	0xFF4
 40354                           prodl	equ	0xFF3
 40355                           intcon	equ	0xFF2
 40356                           indf0	equ	0xFEF
 40357                           postinc0	equ	0xFEE
 40358                           fsr0h	equ	0xFEA
 40359                           fsr0l	equ	0xFE9
 40360                           wreg	equ	0xFE8
 40361                           indf1	equ	0xFE7
 40362                           postdec1	equ	0xFE5
 40363                           plusw1	equ	0xFE3
 40364                           fsr1h	equ	0xFE2
 40365                           fsr1l	equ	0xFE1
 40366                           bsr	equ	0xFE0
 40367                           indf2	equ	0xFDF
 40368                           postinc2	equ	0xFDE
 40369                           postdec2	equ	0xFDD
 40370                           plusw2	equ	0xFDB
 40371                           fsr2h	equ	0xFDA
 40372                           fsr2l	equ	0xFD9
 40373                           status	equ	0xFD8
 40374                           
 40375 ;; *************** function _TMR5_WriteTimer *****************
 40376 ;; Defined at:
 40377 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 40378 ;; Parameters:    Size  Location     Type
 40379 ;;  timerVal        2    0[COMRAM] unsigned int 
 40380 ;; Auto vars:     Size  Location     Type
 40381 ;;		None
 40382 ;; Return value:  Size  Location     Type
 40383 ;;                  1    wreg      void 
 40384 ;; Registers used:
 40385 ;;		wreg, status,2
 40386 ;; Tracked objects:
 40387 ;;		On entry : 0/0
 40388 ;;		On exit  : 0/0
 40389 ;;		Unchanged: 0/0
 40390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40395 ;;Total ram usage:        2 bytes
 40396 ;; Hardware stack levels used:    1
 40397 ;; This function calls:
 40398 ;;		Nothing
 40399 ;; This function is called by:
 40400 ;;		_TMR5_ISR
 40401 ;;		_dimmingOffTimeCallback
 40402 ;;		_TMR5_Reload
 40403 ;; This function uses a non-reentrant model
 40404 ;;
 40405                           
 40406                           	psect	text123
 40407  01B0E2                     __ptext123:
 40408                           	opt stack 0
 40409  01B0E2                     _TMR5_WriteTimer:
 40410                           	opt stack 16
 40411                           
 40412                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 40413                           
 40414                           ; BSR set to: 14
 40415                           ;incstack = 0
 40416  01B0E2  A4C3               	btfss	4035,2,c	;volatile
 40417  01B0E4  D007               	goto	i2l762
 40418                           
 40419                           ;tmr5.c: 130: {
 40420                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 40421  01B0E6  90C3               	bcf	4035,0,c	;volatile
 40422                           
 40423                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 40424  01B0E8  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 40425  01B0EA  6EC2               	movwf	4034,c	;volatile
 40426                           
 40427                           ;tmr5.c: 136: TMR5L = timerVal;
 40428  01B0EC  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 40429                           
 40430                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 40431  01B0F0  80C3               	bsf	4035,0,c	;volatile
 40432                           
 40433                           ;tmr5.c: 140: }
 40434  01B0F2  0012               	return	
 40435  01B0F4                     i2l762:
 40436                           
 40437                           ;tmr5.c: 141: else
 40438                           ;tmr5.c: 142: {
 40439                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 40440  01B0F4  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 40441  01B0F6  6EC2               	movwf	4034,c	;volatile
 40442                           
 40443                           ;tmr5.c: 145: TMR5L = timerVal;
 40444  01B0F8  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 40445  01B0FC  0012               	return	
 40446  01B0FE                     __end_of_TMR5_WriteTimer:
 40447                           	opt stack 0
 40448                           tosu	equ	0xFFF
 40449                           tosh	equ	0xFFE
 40450                           tosl	equ	0xFFD
 40451                           pclatu	equ	0xFFB
 40452                           pclath	equ	0xFFA
 40453                           tblptru	equ	0xFF8
 40454                           tblptrh	equ	0xFF7
 40455                           tblptrl	equ	0xFF6
 40456                           tablat	equ	0xFF5
 40457                           prodh	equ	0xFF4
 40458                           prodl	equ	0xFF3
 40459                           intcon	equ	0xFF2
 40460                           indf0	equ	0xFEF
 40461                           postinc0	equ	0xFEE
 40462                           fsr0h	equ	0xFEA
 40463                           fsr0l	equ	0xFE9
 40464                           wreg	equ	0xFE8
 40465                           indf1	equ	0xFE7
 40466                           postdec1	equ	0xFE5
 40467                           plusw1	equ	0xFE3
 40468                           fsr1h	equ	0xFE2
 40469                           fsr1l	equ	0xFE1
 40470                           bsr	equ	0xFE0
 40471                           indf2	equ	0xFDF
 40472                           postinc2	equ	0xFDE
 40473                           postdec2	equ	0xFDD
 40474                           plusw2	equ	0xFDB
 40475                           fsr2h	equ	0xFDA
 40476                           fsr2l	equ	0xFD9
 40477                           status	equ	0xFD8
 40478                           
 40479 ;; *************** function _TMR5_StartTimer *****************
 40480 ;; Defined at:
 40481 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 40482 ;; Parameters:    Size  Location     Type
 40483 ;;		None
 40484 ;; Auto vars:     Size  Location     Type
 40485 ;;		None
 40486 ;; Return value:  Size  Location     Type
 40487 ;;                  1    wreg      void 
 40488 ;; Registers used:
 40489 ;;		None
 40490 ;; Tracked objects:
 40491 ;;		On entry : 0/0
 40492 ;;		On exit  : 0/0
 40493 ;;		Unchanged: 0/0
 40494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40499 ;;Total ram usage:        0 bytes
 40500 ;; Hardware stack levels used:    1
 40501 ;; This function calls:
 40502 ;;		Nothing
 40503 ;; This function is called by:
 40504 ;;		_dimmingOffTimeCallback
 40505 ;; This function uses a non-reentrant model
 40506 ;;
 40507                           
 40508                           	psect	text124
 40509  01B336                     __ptext124:
 40510                           	opt stack 0
 40511  01B336                     _TMR5_StartTimer:
 40512                           	opt stack 14
 40513                           
 40514                           ;tmr5.c: 102: T5CONbits.TMR5ON = 1;
 40515                           
 40516                           ;incstack = 0
 40517  01B336  80C3               	bsf	4035,0,c	;volatile
 40518  01B338  0012               	return		;funcret
 40519  01B33A                     __end_of_TMR5_StartTimer:
 40520                           	opt stack 0
 40521                           tosu	equ	0xFFF
 40522                           tosh	equ	0xFFE
 40523                           tosl	equ	0xFFD
 40524                           pclatu	equ	0xFFB
 40525                           pclath	equ	0xFFA
 40526                           tblptru	equ	0xFF8
 40527                           tblptrh	equ	0xFF7
 40528                           tblptrl	equ	0xFF6
 40529                           tablat	equ	0xFF5
 40530                           prodh	equ	0xFF4
 40531                           prodl	equ	0xFF3
 40532                           intcon	equ	0xFF2
 40533                           indf0	equ	0xFEF
 40534                           postinc0	equ	0xFEE
 40535                           fsr0h	equ	0xFEA
 40536                           fsr0l	equ	0xFE9
 40537                           wreg	equ	0xFE8
 40538                           indf1	equ	0xFE7
 40539                           postdec1	equ	0xFE5
 40540                           plusw1	equ	0xFE3
 40541                           fsr1h	equ	0xFE2
 40542                           fsr1l	equ	0xFE1
 40543                           bsr	equ	0xFE0
 40544                           indf2	equ	0xFDF
 40545                           postinc2	equ	0xFDE
 40546                           postdec2	equ	0xFDD
 40547                           plusw2	equ	0xFDB
 40548                           fsr2h	equ	0xFDA
 40549                           fsr2l	equ	0xFD9
 40550                           status	equ	0xFD8
 40551                           
 40552 ;; *************** function _I2C1_ISR *****************
 40553 ;; Defined at:
 40554 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 40555 ;; Parameters:    Size  Location     Type
 40556 ;;		None
 40557 ;; Auto vars:     Size  Location     Type
 40558 ;;		None
 40559 ;; Return value:  Size  Location     Type
 40560 ;;                  1    wreg      void 
 40561 ;; Registers used:
 40562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40563 ;; Tracked objects:
 40564 ;;		On entry : 0/0
 40565 ;;		On exit  : 0/0
 40566 ;;		Unchanged: 0/0
 40567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40572 ;;Total ram usage:        2 bytes
 40573 ;; Hardware stack levels used:    1
 40574 ;; Hardware stack levels required when called:    1
 40575 ;; This function calls:
 40576 ;;		_I2C1_FunctionComplete
 40577 ;;		_I2C1_Stop
 40578 ;; This function is called by:
 40579 ;;		_INTERRUPT_InterruptManagerHigh
 40580 ;; This function uses a non-reentrant model
 40581 ;;
 40582                           
 40583                           	psect	text125
 40584  017B68                     __ptext125:
 40585                           	opt stack 0
 40586  017B68                     _I2C1_ISR:
 40587                           	opt stack 16
 40588                           
 40589                           ;i2c1.c: 238: static uint8_t *pi2c_buf_ptr;
 40590                           ;i2c1.c: 239: static uint16_t i2c_address = 0;
 40591                           ;i2c1.c: 240: static uint8_t i2c_bytes_left = 0;
 40592                           ;i2c1.c: 241: static uint8_t i2c_10bit_address_restart = 0;
 40593                           ;i2c1.c: 243: PIR3bits.SSP1IF = 0;
 40594                           
 40595                           ;incstack = 0
 40596  017B68  010E               	movlb	14	; () banked
 40597  017B6A  9136               	bcf	54,0,b	;volatile
 40598                           
 40599                           ;i2c1.c: 247: if(SSP1CON1bits.WCOL)
 40600  017B6C  AE95               	btfss	3989,7,c	;volatile
 40601  017B6E  D104               	goto	i2l1800
 40602                           
 40603                           ; BSR set to: 14
 40604                           ;i2c1.c: 248: {
 40605                           ;i2c1.c: 250: SSP1CON1bits.WCOL = 0;
 40606  017B70  9E95               	bcf	3989,7,c	;volatile
 40607                           
 40608                           ; BSR set to: 14
 40609                           ;i2c1.c: 251: i2c1_state = S_MASTER_IDLE;
 40610  017B72  0E00               	movlw	0
 40611  017B74  0102               	movlb	2	; () banked
 40612  017B76  6F6D               	movwf	_i2c1_state& (0+255),b
 40613                           
 40614                           ; BSR set to: 2
 40615                           ;i2c1.c: 252: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 40616  017B78  EE20 F003          	lfsr	2,3
 40617  017B7C  5160               	movf	_p_i2c1_current& (0+255),w,b
 40618  017B7E  26D9               	addwf	fsr2l,f,c
 40619  017B80  5161               	movf	(_p_i2c1_current+1)& (0+255),w,b
 40620  017B82  22DA               	addwfc	fsr2h,f,c
 40621  017B84  CFDE F004          	movff	postinc2,??_I2C1_ISR
 40622  017B88  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 40623  017B8C  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 40624  017B90  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 40625  017B94  0E01               	movlw	1
 40626  017B96  6EDF               	movwf	indf2,c
 40627                           
 40628                           ; BSR set to: 2
 40629                           ;i2c1.c: 255: p_i2c1_current = (0);
 40630  017B98  0E00               	movlw	0
 40631  017B9A  6F60               	movwf	_p_i2c1_current& (0+255),b
 40632  017B9C  0E00               	movlw	0
 40633  017B9E  6F61               	movwf	(_p_i2c1_current+1)& (0+255),b
 40634                           
 40635                           ; BSR set to: 2
 40636                           ;i2c1.c: 257: return;
 40637  017BA0  0012               	return	
 40638  017BA2                     i2l1801:
 40639                           
 40640                           ; BSR set to: 2
 40641                           ;i2c1.c: 265: if(i2c1_object.trStatus.s.empty != 1)
 40642  017BA2  B30D               	btfsc	(_i2c1_object+4)& (0+255),1,b
 40643  017BA4  0012               	return	
 40644                           
 40645                           ; BSR set to: 2
 40646                           ;i2c1.c: 266: {
 40647                           ;i2c1.c: 268: p_i2c1_current = i2c1_object.pTrHead;
 40648  017BA6  C20B  F260         	movff	_i2c1_object+2,_p_i2c1_current
 40649  017BAA  C20C  F261         	movff	_i2c1_object+3,_p_i2c1_current+1
 40650                           
 40651                           ; BSR set to: 2
 40652                           ;i2c1.c: 269: i2c1_trb_count = i2c1_object.pTrHead->count;
 40653  017BAE  C20B  FFD9         	movff	_i2c1_object+2,fsr2l
 40654  017BB2  C20C  FFDA         	movff	_i2c1_object+3,fsr2h
 40655  017BB6  50DF               	movf	indf2,w,c
 40656  017BB8  6F6C               	movwf	_i2c1_trb_count& (0+255),b
 40657                           
 40658                           ; BSR set to: 2
 40659                           ;i2c1.c: 270: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 40660  017BBA  EE20 F001          	lfsr	2,1
 40661  017BBE  510B               	movf	(_i2c1_object+2)& (0+255),w,b
 40662  017BC0  26D9               	addwf	fsr2l,f,c
 40663  017BC2  510C               	movf	(_i2c1_object+3)& (0+255),w,b
 40664  017BC4  22DA               	addwfc	fsr2h,f,c
 40665  017BC6  CFDE F262          	movff	postinc2,_p_i2c1_trb_current
 40666  017BCA  CFDD F263          	movff	postdec2,_p_i2c1_trb_current+1
 40667                           
 40668                           ; BSR set to: 2
 40669                           ;i2c1.c: 272: i2c1_object.pTrHead++;
 40670  017BCE  0E05               	movlw	5
 40671  017BD0  270B               	addwf	(_i2c1_object+2)& (0+255),f,b
 40672  017BD2  0E00               	movlw	0
 40673  017BD4  230C               	addwfc	(_i2c1_object+3)& (0+255),f,b
 40674                           
 40675                           ; BSR set to: 2
 40676                           ;i2c1.c: 275: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 40677  017BD6  0E94               	movlw	low (_i2c1_tr_queue+5)
 40678  017BD8  190B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 40679  017BDA  E108               	bnz	i2l13201
 40680  017BDC  0E02               	movlw	high (_i2c1_tr_queue+5)
 40681  017BDE  190C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 40682  017BE0  A4D8               	btfss	status,2,c
 40683  017BE2  D004               	goto	i2l1803
 40684                           
 40685                           ; BSR set to: 2
 40686                           ;i2c1.c: 276: {
 40687                           ;i2c1.c: 278: i2c1_object.pTrHead = i2c1_tr_queue;
 40688  017BE4  0E8F               	movlw	low _i2c1_tr_queue
 40689  017BE6  6F0B               	movwf	(_i2c1_object+2)& (0+255),b
 40690  017BE8  0E02               	movlw	high _i2c1_tr_queue
 40691  017BEA  6F0C               	movwf	(_i2c1_object+3)& (0+255),b
 40692  017BEC                     i2l1803:
 40693  017BEC                     i2l13201:
 40694                           
 40695                           ; BSR set to: 2
 40696                           ;i2c1.c: 279: }
 40697                           ;i2c1.c: 283: i2c1_object.trStatus.s.full = 0;
 40698  017BEC  910D               	bcf	(_i2c1_object+4)& (0+255),0,b
 40699                           
 40700                           ;i2c1.c: 286: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 40701  017BEE  5109               	movf	_i2c1_object& (0+255),w,b
 40702  017BF0  190B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 40703  017BF2  E104               	bnz	i2l1804
 40704  017BF4  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 40705  017BF6  190C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 40706  017BF8  B4D8               	btfsc	status,2,c
 40707                           
 40708                           ; BSR set to: 2
 40709                           ;i2c1.c: 287: {
 40710                           ;i2c1.c: 289: i2c1_object.trStatus.s.empty = 1;
 40711  017BFA  830D               	bsf	(_i2c1_object+4)& (0+255),1,b
 40712  017BFC                     i2l1804:
 40713                           
 40714                           ; BSR set to: 2
 40715                           ;i2c1.c: 290: }
 40716                           ;i2c1.c: 293: SSP1CON2bits.SEN = 1;
 40717  017BFC  8096               	bsf	3990,0,c	;volatile
 40718                           
 40719                           ; BSR set to: 2
 40720                           ;i2c1.c: 296: i2c1_state = S_MASTER_SEND_ADDR;
 40721  017BFE  0E02               	movlw	2
 40722  017C00  6F6D               	movwf	_i2c1_state& (0+255),b
 40723                           
 40724                           ; BSR set to: 2
 40725                           ;i2c1.c: 297: }
 40726                           ;i2c1.c: 299: break;
 40727  017C02  0012               	return	
 40728  017C04                     i2l1806:
 40729                           
 40730                           ; BSR set to: 2
 40731                           ;i2c1.c: 306: SSP1CON2bits.RSEN = 1;
 40732  017C04  8296               	bsf	3990,1,c	;volatile
 40733                           
 40734                           ; BSR set to: 2
 40735                           ;i2c1.c: 309: i2c1_state = S_MASTER_SEND_ADDR;
 40736  017C06  0E02               	movlw	2
 40737  017C08  6F6D               	movwf	_i2c1_state& (0+255),b
 40738                           
 40739                           ;i2c1.c: 311: break;
 40740  017C0A  0012               	return	
 40741  017C0C                     i2l1807:
 40742                           
 40743                           ; BSR set to: 2
 40744                           ;i2c1.c: 315: if(SSP1CON2bits.ACKSTAT)
 40745  017C0C  AC96               	btfss	3990,6,c	;volatile
 40746  017C0E  D005               	goto	i2l1808
 40747                           
 40748                           ; BSR set to: 2
 40749                           ;i2c1.c: 316: {
 40750                           ;i2c1.c: 317: i2c1_object.i2cErrors++;
 40751  017C10  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40752                           
 40753                           ; BSR set to: 2
 40754                           ;i2c1.c: 318: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 40755  017C12  0E04               	movlw	4
 40756  017C14  ECC5  F0D4         	call	_I2C1_Stop
 40757                           
 40758                           ;i2c1.c: 319: }
 40759  017C18  0012               	return	
 40760  017C1A                     i2l1808:
 40761                           
 40762                           ;i2c1.c: 320: else
 40763                           ;i2c1.c: 321: {
 40764                           ;i2c1.c: 323: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 40765  017C1A  90D8               	bcf	status,0,c
 40766  017C1C  0101               	movlb	1	; () banked
 40767  017C1E  31E7               	rrcf	(I2C1_ISR@i2c_address+1)& (0+255),w,b
 40768  017C20  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 40769  017C22  31E6               	rrcf	I2C1_ISR@i2c_address& (0+255),w,b
 40770  017C24  6E04               	movwf	??_I2C1_ISR& (0+255),c
 40771  017C26  5004               	movf	??_I2C1_ISR,w,c
 40772  017C28  6E91               	movwf	3985,c	;volatile
 40773                           
 40774                           ; BSR set to: 1
 40775                           ;i2c1.c: 326: if(i2c_address & 0x01)
 40776  017C2A  A1E6               	btfss	I2C1_ISR@i2c_address& (0+255),0,b
 40777  017C2C  D004               	goto	i2l1810
 40778                           
 40779                           ; BSR set to: 1
 40780                           ;i2c1.c: 327: {
 40781                           ;i2c1.c: 330: i2c1_state = S_MASTER_10BIT_RESTART;
 40782  017C2E  0E0B               	movlw	11
 40783  017C30  0102               	movlb	2	; () banked
 40784  017C32  6F6D               	movwf	_i2c1_state& (0+255),b
 40785                           
 40786                           ;i2c1.c: 331: }
 40787  017C34  0012               	return	
 40788  017C36                     i2l1810:
 40789                           
 40790                           ;i2c1.c: 332: else
 40791                           ;i2c1.c: 333: {
 40792                           ;i2c1.c: 335: i2c1_state = S_MASTER_SEND_DATA;
 40793                           
 40794                           ; BSR set to: 2
 40795  017C36  0E03               	movlw	3
 40796  017C38  0102               	movlb	2	; () banked
 40797  017C3A  6F6D               	movwf	_i2c1_state& (0+255),b
 40798                           
 40799                           ; BSR set to: 2
 40800                           ;i2c1.c: 336: }
 40801                           ;i2c1.c: 337: }
 40802                           ;i2c1.c: 339: break;
 40803                           
 40804                           ; BSR set to: 2
 40805  017C3C  0012               	return	
 40806  017C3E                     i2l1812:
 40807                           
 40808                           ; BSR set to: 2
 40809                           ;i2c1.c: 343: if(SSP1CON2bits.ACKSTAT)
 40810  017C3E  AC96               	btfss	3990,6,c	;volatile
 40811  017C40  D005               	goto	i2l1813
 40812                           
 40813                           ; BSR set to: 2
 40814                           ;i2c1.c: 344: {
 40815                           ;i2c1.c: 345: i2c1_object.i2cErrors++;
 40816  017C42  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40817                           
 40818                           ; BSR set to: 2
 40819                           ;i2c1.c: 346: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 40820  017C44  0E04               	movlw	4
 40821  017C46  ECC5  F0D4         	call	_I2C1_Stop
 40822                           
 40823                           ;i2c1.c: 347: }
 40824  017C4A  0012               	return	
 40825  017C4C                     i2l1813:
 40826                           
 40827                           ; BSR set to: 2
 40828                           ;i2c1.c: 348: else
 40829                           ;i2c1.c: 349: {
 40830                           ;i2c1.c: 352: SSP1CON2bits.RSEN = 1;
 40831  017C4C  8296               	bsf	3990,1,c	;volatile
 40832                           
 40833                           ; BSR set to: 2
 40834                           ;i2c1.c: 356: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 40835  017C4E  C1E6  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 40836  017C52  C1E7  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 40837  017C56  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 40838  017C5A  6A05               	clrf	??_I2C1_ISR+1,c
 40839  017C5C  0E06               	movlw	6
 40840  017C5E  1604               	andwf	??_I2C1_ISR,f,c
 40841  017C60  0E00               	movlw	0
 40842  017C62  1605               	andwf	??_I2C1_ISR+1,f,c
 40843  017C64  0EF0               	movlw	240
 40844  017C66  1004               	iorwf	??_I2C1_ISR,w,c
 40845  017C68  0101               	movlb	1	; () banked
 40846  017C6A  6FE6               	movwf	I2C1_ISR@i2c_address& (0+255),b
 40847  017C6C  5005               	movf	??_I2C1_ISR+1,w,c
 40848  017C6E  6FE7               	movwf	(I2C1_ISR@i2c_address+1)& (0+255),b
 40849                           
 40850                           ; BSR set to: 1
 40851                           ;i2c1.c: 359: i2c_address |= 0x0001;
 40852  017C70  81E6               	bsf	I2C1_ISR@i2c_address& (0+255),0,b
 40853                           
 40854                           ; BSR set to: 1
 40855                           ;i2c1.c: 362: i2c_10bit_address_restart = 1;
 40856  017C72  0E01               	movlw	1
 40857  017C74  0102               	movlb	2	; () banked
 40858  017C76  6F6A               	movwf	I2C1_ISR@i2c_10bit_address_restart& (0+255),b
 40859                           
 40860                           ; BSR set to: 2
 40861                           ;i2c1.c: 365: i2c1_state = S_MASTER_SEND_ADDR;
 40862  017C78  0E02               	movlw	2
 40863  017C7A  6F6D               	movwf	_i2c1_state& (0+255),b
 40864                           
 40865                           ; BSR set to: 2
 40866                           ;i2c1.c: 366: }
 40867                           ;i2c1.c: 368: break;
 40868  017C7C  0012               	return	
 40869  017C7E                     
 40870                           ; BSR set to: 2
 40871                           ;i2c1.c: 383: if(i2c_10bit_address_restart != 1)
 40872                           
 40873                           ; BSR set to: 2
 40874  017C7E  056A               	decf	I2C1_ISR@i2c_10bit_address_restart& (0+255),w,b
 40875  017C80  B4D8               	btfsc	status,2,c
 40876  017C82  D01A               	goto	i2l1817
 40877                           
 40878                           ; BSR set to: 2
 40879                           ;i2c1.c: 384: {
 40880                           ;i2c1.c: 386: i2c_address = p_i2c1_trb_current->address;
 40881  017C84  C262  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 40882  017C88  C263  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 40883  017C8C  CFDE F1E6          	movff	postinc2,I2C1_ISR@i2c_address
 40884  017C90  CFDD F1E7          	movff	postdec2,I2C1_ISR@i2c_address+1
 40885                           
 40886                           ; BSR set to: 2
 40887                           ;i2c1.c: 387: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 40888  017C94  EE20 F003          	lfsr	2,3
 40889  017C98  5162               	movf	_p_i2c1_trb_current& (0+255),w,b
 40890  017C9A  26D9               	addwf	fsr2l,f,c
 40891  017C9C  5163               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 40892  017C9E  22DA               	addwfc	fsr2h,f,c
 40893  017CA0  CFDE F25E          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 40894  017CA4  CFDD F25F          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 40895                           
 40896                           ; BSR set to: 2
 40897                           ;i2c1.c: 388: i2c_bytes_left = p_i2c1_trb_current->length;
 40898  017CA8  EE20 F002          	lfsr	2,2
 40899  017CAC  5162               	movf	_p_i2c1_trb_current& (0+255),w,b
 40900  017CAE  26D9               	addwf	fsr2l,f,c
 40901  017CB0  5163               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 40902  017CB2  22DA               	addwfc	fsr2h,f,c
 40903  017CB4  50DF               	movf	indf2,w,c
 40904  017CB6  6F6B               	movwf	I2C1_ISR@i2c_bytes_left& (0+255),b
 40905  017CB8                     i2l1817:
 40906                           
 40907                           ;i2c1.c: 411: else
 40908                           ;i2c1.c: 412: {
 40909                           ;i2c1.c: 414: SSP1BUF = i2c_address;
 40910  017CB8  C1E6  FF91         	movff	I2C1_ISR@i2c_address,3985	;volatile
 40911                           
 40912                           ;i2c1.c: 415: if(i2c_address & 0x01)
 40913  017CBC  0101               	movlb	1	; () banked
 40914  017CBE  A1E6               	btfss	I2C1_ISR@i2c_address& (0+255),0,b
 40915  017CC0  D004               	goto	i2l1821
 40916                           
 40917                           ; BSR set to: 1
 40918                           ;i2c1.c: 416: {
 40919                           ;i2c1.c: 418: i2c1_state = S_MASTER_ACK_ADDR;
 40920  017CC2  0E05               	movlw	5
 40921  017CC4  0102               	movlb	2	; () banked
 40922  017CC6  6F6D               	movwf	_i2c1_state& (0+255),b
 40923                           
 40924                           ;i2c1.c: 419: }
 40925  017CC8  0012               	return	
 40926  017CCA                     i2l1821:
 40927                           
 40928                           ;i2c1.c: 420: else
 40929                           ;i2c1.c: 421: {
 40930                           ;i2c1.c: 423: i2c1_state = S_MASTER_SEND_DATA;
 40931                           
 40932                           ; BSR set to: 2
 40933  017CCA  0E03               	movlw	3
 40934  017CCC  0102               	movlb	2	; () banked
 40935  017CCE  6F6D               	movwf	_i2c1_state& (0+255),b
 40936                           
 40937                           ; BSR set to: 2
 40938                           ;i2c1.c: 424: }
 40939                           ;i2c1.c: 425: }
 40940                           ;i2c1.c: 426: break;
 40941                           
 40942                           ; BSR set to: 2
 40943  017CD0  0012               	return	
 40944  017CD2                     i2l1823:
 40945                           
 40946                           ; BSR set to: 2
 40947                           ;i2c1.c: 431: if(SSP1CON2bits.ACKSTAT)
 40948  017CD2  AC96               	btfss	3990,6,c	;volatile
 40949  017CD4  D006               	goto	i2l1824
 40950                           
 40951                           ; BSR set to: 2
 40952                           ;i2c1.c: 432: {
 40953                           ;i2c1.c: 434: i2c1_object.i2cErrors++;
 40954  017CD6  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40955                           
 40956                           ; BSR set to: 2
 40957                           ;i2c1.c: 437: SSP1CON2bits.ACKSTAT = 0;
 40958  017CD8  9C96               	bcf	3990,6,c	;volatile
 40959                           
 40960                           ; BSR set to: 2
 40961                           ;i2c1.c: 440: I2C1_Stop(I2C1_DATA_NO_ACK);
 40962  017CDA  0E05               	movlw	5
 40963  017CDC  ECC5  F0D4         	call	_I2C1_Stop
 40964                           
 40965                           ;i2c1.c: 442: }
 40966  017CE0  0012               	return	
 40967  017CE2                     i2l1824:
 40968                           
 40969                           ;i2c1.c: 443: else
 40970                           ;i2c1.c: 444: {
 40971                           ;i2c1.c: 446: if(i2c_bytes_left-- == 0U)
 40972  017CE2  0102               	movlb	2	; () banked
 40973  017CE4  076B               	decf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 40974  017CE6  296B               	incf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 40975  017CE8  A4D8               	btfss	status,2,c
 40976  017CEA  D00E               	goto	i2l1826
 40977                           
 40978                           ; BSR set to: 2
 40979                           ;i2c1.c: 447: {
 40980                           ;i2c1.c: 451: p_i2c1_trb_current++;
 40981  017CEC  0E05               	movlw	5
 40982  017CEE  2762               	addwf	_p_i2c1_trb_current& (0+255),f,b
 40983  017CF0  0E00               	movlw	0
 40984  017CF2  2363               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 40985                           
 40986                           ; BSR set to: 2
 40987                           ;i2c1.c: 454: if(--i2c1_trb_count == 0)
 40988  017CF4  2F6C               	decfsz	_i2c1_trb_count& (0+255),f,b
 40989  017CF6  D004               	goto	i2l1827
 40990                           
 40991                           ; BSR set to: 2
 40992                           ;i2c1.c: 455: {
 40993                           ;i2c1.c: 456: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 40994  017CF8  0E00               	movlw	0
 40995  017CFA  ECC5  F0D4         	call	_I2C1_Stop
 40996                           
 40997                           ;i2c1.c: 457: }
 40998  017CFE  0012               	return	
 40999  017D00                     i2l1827:
 41000                           
 41001                           ; BSR set to: 2
 41002                           ;i2c1.c: 458: else
 41003                           ;i2c1.c: 459: {
 41004                           ;i2c1.c: 466: SSP1CON2bits.RSEN = 1;
 41005  017D00  8296               	bsf	3990,1,c	;volatile
 41006                           
 41007                           ; BSR set to: 2
 41008                           ;i2c1.c: 469: i2c1_state = S_MASTER_SEND_ADDR;
 41009  017D02  0E02               	movlw	2
 41010  017D04  6F6D               	movwf	_i2c1_state& (0+255),b
 41011                           
 41012                           ; BSR set to: 2
 41013                           ;i2c1.c: 471: }
 41014                           ;i2c1.c: 472: }
 41015  017D06  0012               	return	
 41016  017D08                     i2l1826:
 41017                           
 41018                           ; BSR set to: 2
 41019                           ;i2c1.c: 473: else
 41020                           ;i2c1.c: 474: {
 41021                           ;i2c1.c: 476: SSP1BUF = *pi2c_buf_ptr++;
 41022                           
 41023                           ; BSR set to: 2
 41024  017D08  C25E  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 41025  017D0C  C25F  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 41026  017D10  50DF               	movf	indf2,w,c
 41027  017D12  6E91               	movwf	3985,c	;volatile
 41028                           
 41029                           ; BSR set to: 2
 41030  017D14  4B5E               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 41031  017D16  2B5F               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 41032                           
 41033                           ; BSR set to: 2
 41034                           ;i2c1.c: 477: }
 41035                           ;i2c1.c: 478: }
 41036                           ;i2c1.c: 479: break;
 41037                           
 41038                           ; BSR set to: 2
 41039  017D18  0012               	return	
 41040  017D1A                     i2l1830:
 41041                           
 41042                           ; BSR set to: 2
 41043                           ;i2c1.c: 484: if(SSP1CON2bits.ACKSTAT)
 41044  017D1A  AC96               	btfss	3990,6,c	;volatile
 41045  017D1C  D006               	goto	i2l1831
 41046                           
 41047                           ; BSR set to: 2
 41048                           ;i2c1.c: 485: {
 41049                           ;i2c1.c: 488: i2c1_object.i2cErrors++;
 41050  017D1E  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 41051                           
 41052                           ; BSR set to: 2
 41053                           ;i2c1.c: 491: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 41054  017D20  0E04               	movlw	4
 41055  017D22  ECC5  F0D4         	call	_I2C1_Stop
 41056                           
 41057                           ;i2c1.c: 494: SSP1CON2bits.ACKSTAT = 0;
 41058  017D26  9C96               	bcf	3990,6,c	;volatile
 41059                           
 41060                           ;i2c1.c: 495: }
 41061  017D28  0012               	return	
 41062  017D2A                     i2l1831:
 41063                           
 41064                           ; BSR set to: 2
 41065                           ;i2c1.c: 496: else
 41066                           ;i2c1.c: 497: {
 41067                           ;i2c1.c: 498: SSP1CON2bits.RCEN = 1;
 41068  017D2A  8696               	bsf	3990,3,c	;volatile
 41069                           
 41070                           ; BSR set to: 2
 41071                           ;i2c1.c: 499: i2c1_state = S_MASTER_ACK_RCV_DATA;
 41072  017D2C  0E08               	movlw	8
 41073  017D2E  6F6D               	movwf	_i2c1_state& (0+255),b
 41074                           
 41075                           ; BSR set to: 2
 41076                           ;i2c1.c: 500: }
 41077                           ;i2c1.c: 501: break;
 41078  017D30  0012               	return	
 41079  017D32                     
 41080                           ; BSR set to: 2
 41081                           ;i2c1.c: 508: i2c1_state = S_MASTER_ACK_RCV_DATA;
 41082                           
 41083                           ; BSR set to: 2
 41084  017D32  0E08               	movlw	8
 41085  017D34  6F6D               	movwf	_i2c1_state& (0+255),b
 41086                           
 41087                           ; BSR set to: 2
 41088                           ;i2c1.c: 511: SSP1CON2bits.RCEN = 1;
 41089  017D36  8696               	bsf	3990,3,c	;volatile
 41090                           
 41091                           ;i2c1.c: 513: break;
 41092  017D38  0012               	return	
 41093  017D3A                     
 41094                           ; BSR set to: 2
 41095                           ;i2c1.c: 518: *pi2c_buf_ptr++ = SSP1BUF;
 41096                           
 41097                           ; BSR set to: 2
 41098  017D3A  C25E  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 41099  017D3E  C25F  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 41100  017D42  CF91 FFDF          	movff	3985,indf2	;volatile
 41101                           
 41102                           ; BSR set to: 2
 41103  017D46  4B5E               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 41104  017D48  2B5F               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 41105                           
 41106                           ; BSR set to: 2
 41107                           ;i2c1.c: 521: if(--i2c_bytes_left)
 41108  017D4A  0E01               	movlw	1
 41109  017D4C  5F6B               	subwf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 41110  017D4E  B4D8               	btfsc	status,2,c
 41111  017D50  D004               	goto	i2l1835
 41112                           
 41113                           ; BSR set to: 2
 41114                           ;i2c1.c: 522: {
 41115                           ;i2c1.c: 528: SSP1CON2bits.ACKDT = 0;
 41116  017D52  9A96               	bcf	3990,5,c	;volatile
 41117                           
 41118                           ; BSR set to: 2
 41119                           ;i2c1.c: 531: i2c1_state = S_MASTER_RCV_DATA;
 41120  017D54  0E06               	movlw	6
 41121  017D56  6F6D               	movwf	_i2c1_state& (0+255),b
 41122                           
 41123                           ;i2c1.c: 532: }
 41124  017D58  D003               	goto	i2l1836
 41125  017D5A                     i2l1835:
 41126                           
 41127                           ; BSR set to: 2
 41128                           ;i2c1.c: 533: else
 41129                           ;i2c1.c: 534: {
 41130                           ;i2c1.c: 538: SSP1CON2bits.ACKDT = 1;
 41131  017D5A  8A96               	bsf	3990,5,c	;volatile
 41132                           
 41133                           ; BSR set to: 2
 41134                           ;i2c1.c: 540: I2C1_FunctionComplete();
 41135  017D5C  EC99  F0D8         	call	_I2C1_FunctionComplete	;wreg free
 41136  017D60                     i2l1836:
 41137                           
 41138                           ;i2c1.c: 541: }
 41139                           ;i2c1.c: 544: SSP1CON2bits.ACKEN = 1;
 41140  017D60  8896               	bsf	3990,4,c	;volatile
 41141                           
 41142                           ;i2c1.c: 545: break;
 41143  017D62  0012               	return	
 41144  017D64                     
 41145                           ;i2c1.c: 548: case S_MASTER_SEND_STOP:
 41146                           ;i2c1.c: 551: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 41147  017D64  0E00               	movlw	0
 41148  017D66  ECC5  F0D4         	call	_I2C1_Stop
 41149                           
 41150                           ;i2c1.c: 552: break;
 41151  017D6A  0012               	return	
 41152  017D6C                     
 41153                           ;i2c1.c: 558: i2c1_object.i2cErrors++;
 41154  017D6C  0102               	movlb	2	; () banked
 41155  017D6E  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 41156                           
 41157                           ; BSR set to: 2
 41158                           ;i2c1.c: 559: I2C1_Stop(I2C1_LOST_STATE);
 41159  017D70  0E06               	movlw	6
 41160  017D72  ECC5  F0D4         	call	_I2C1_Stop
 41161                           
 41162                           ;i2c1.c: 562: }
 41163                           
 41164                           ;i2c1.c: 560: break;
 41165  017D76  0012               	return	
 41166  017D78                     i2l1800:
 41167  017D78  0102               	movlb	2	; () banked
 41168  017D7A  516D               	movf	_i2c1_state& (0+255),w,b
 41169                           
 41170                           ; Switch size 1, requested type "space"
 41171                           ; Number of cases is 11, Range of values is 0 to 11
 41172                           ; switch strategies available:
 41173                           ; Name         Instructions Cycles
 41174                           ; simple_byte           34    18 (average)
 41175                           ;	Chosen strategy is simple_byte
 41176  017D7C  0A00               	xorlw	0	; case 0
 41177  017D7E  B4D8               	btfsc	status,2,c
 41178  017D80  D710               	goto	i2l1801
 41179  017D82  0A01               	xorlw	1	; case 1
 41180  017D84  B4D8               	btfsc	status,2,c
 41181  017D86  D73E               	goto	i2l1806
 41182  017D88  0A03               	xorlw	3	; case 2
 41183  017D8A  B4D8               	btfsc	status,2,c
 41184  017D8C  D778               	goto	i2l1815
 41185  017D8E  0A01               	xorlw	1	; case 3
 41186  017D90  B4D8               	btfsc	status,2,c
 41187  017D92  D79F               	goto	i2l1823
 41188  017D94  0A07               	xorlw	7	; case 4
 41189  017D96  B4D8               	btfsc	status,2,c
 41190  017D98  D7E5               	goto	i2l1837
 41191  017D9A  0A01               	xorlw	1	; case 5
 41192  017D9C  B4D8               	btfsc	status,2,c
 41193  017D9E  D7BD               	goto	i2l1830
 41194  017DA0  0A03               	xorlw	3	; case 6
 41195  017DA2  B4D8               	btfsc	status,2,c
 41196  017DA4  D7C6               	goto	i2l1833
 41197  017DA6  0A01               	xorlw	1	; case 7
 41198  017DA8  B4D8               	btfsc	status,2,c
 41199  017DAA  D7DC               	goto	i2l1837
 41200  017DAC  0A0F               	xorlw	15	; case 8
 41201  017DAE  B4D8               	btfsc	status,2,c
 41202  017DB0  D7C4               	goto	i2l1834
 41203  017DB2  0A02               	xorlw	2	; case 10
 41204  017DB4  B4D8               	btfsc	status,2,c
 41205  017DB6  D72A               	goto	i2l1807
 41206  017DB8  0A01               	xorlw	1	; case 11
 41207  017DBA  B4D8               	btfsc	status,2,c
 41208  017DBC  D740               	goto	i2l1812
 41209  017DBE  D7D6               	goto	i2l1839
 41210  017DC0                     __end_of_I2C1_ISR:
 41211                           	opt stack 0
 41212                           tosu	equ	0xFFF
 41213                           tosh	equ	0xFFE
 41214                           tosl	equ	0xFFD
 41215                           pclatu	equ	0xFFB
 41216                           pclath	equ	0xFFA
 41217                           tblptru	equ	0xFF8
 41218                           tblptrh	equ	0xFF7
 41219                           tblptrl	equ	0xFF6
 41220                           tablat	equ	0xFF5
 41221                           prodh	equ	0xFF4
 41222                           prodl	equ	0xFF3
 41223                           intcon	equ	0xFF2
 41224                           indf0	equ	0xFEF
 41225                           postinc0	equ	0xFEE
 41226                           fsr0h	equ	0xFEA
 41227                           fsr0l	equ	0xFE9
 41228                           wreg	equ	0xFE8
 41229                           indf1	equ	0xFE7
 41230                           postdec1	equ	0xFE5
 41231                           plusw1	equ	0xFE3
 41232                           fsr1h	equ	0xFE2
 41233                           fsr1l	equ	0xFE1
 41234                           bsr	equ	0xFE0
 41235                           indf2	equ	0xFDF
 41236                           postinc2	equ	0xFDE
 41237                           postdec2	equ	0xFDD
 41238                           plusw2	equ	0xFDB
 41239                           fsr2h	equ	0xFDA
 41240                           fsr2l	equ	0xFD9
 41241                           status	equ	0xFD8
 41242                           
 41243 ;; *************** function _I2C1_Stop *****************
 41244 ;; Defined at:
 41245 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 41246 ;; Parameters:    Size  Location     Type
 41247 ;;  completion_c    1    wreg     enum E17311
 41248 ;; Auto vars:     Size  Location     Type
 41249 ;;  completion_c    1    2[COMRAM] enum E17311
 41250 ;; Return value:  Size  Location     Type
 41251 ;;                  1    wreg      void 
 41252 ;; Registers used:
 41253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41254 ;; Tracked objects:
 41255 ;;		On entry : 0/0
 41256 ;;		On exit  : 0/0
 41257 ;;		Unchanged: 0/0
 41258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41262 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41263 ;;Total ram usage:        3 bytes
 41264 ;; Hardware stack levels used:    1
 41265 ;; This function calls:
 41266 ;;		Nothing
 41267 ;; This function is called by:
 41268 ;;		_I2C1_ISR
 41269 ;; This function uses a non-reentrant model
 41270 ;;
 41271                           
 41272                           	psect	text126
 41273  01A98A                     __ptext126:
 41274                           	opt stack 0
 41275  01A98A                     _I2C1_Stop:
 41276                           	opt stack 16
 41277                           
 41278                           ;incstack = 0
 41279                           ;I2C1_Stop@completion_code stored from wreg
 41280  01A98A  6E03               	movwf	I2C1_Stop@completion_code,c
 41281                           
 41282                           ;i2c1.c: 586: SSP1CON2bits.PEN = 1;
 41283  01A98C  8496               	bsf	3990,2,c	;volatile
 41284                           
 41285                           ;i2c1.c: 589: if (p_i2c1_current->pTrFlag != (0))
 41286  01A98E  0102               	movlb	2	; () banked
 41287  01A990  EE20 F003          	lfsr	2,3
 41288  01A994  5160               	movf	_p_i2c1_current& (0+255),w,b
 41289  01A996  26D9               	addwf	fsr2l,f,c
 41290  01A998  5161               	movf	(_p_i2c1_current+1)& (0+255),w,b
 41291  01A99A  22DA               	addwfc	fsr2h,f,c
 41292  01A99C  50DE               	movf	postinc2,w,c
 41293  01A99E  10DE               	iorwf	postinc2,w,c
 41294  01A9A0  B4D8               	btfsc	status,2,c
 41295  01A9A2  D010               	goto	i2l1847
 41296                           
 41297                           ; BSR set to: 2
 41298                           ;i2c1.c: 590: {
 41299                           ;i2c1.c: 592: *(p_i2c1_current->pTrFlag) = completion_code;
 41300  01A9A4  EE20 F003          	lfsr	2,3
 41301  01A9A8  5160               	movf	_p_i2c1_current& (0+255),w,b
 41302  01A9AA  26D9               	addwf	fsr2l,f,c
 41303  01A9AC  5161               	movf	(_p_i2c1_current+1)& (0+255),w,b
 41304  01A9AE  22DA               	addwfc	fsr2h,f,c
 41305  01A9B0  CFDE F001          	movff	postinc2,??_I2C1_Stop
 41306  01A9B4  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 41307  01A9B8  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 41308  01A9BC  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 41309  01A9C0  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 41310  01A9C4                     i2l1847:
 41311                           
 41312                           ; BSR set to: 2
 41313                           ;i2c1.c: 593: }
 41314                           ;i2c1.c: 596: i2c1_state = S_MASTER_IDLE;
 41315                           
 41316                           ; BSR set to: 2
 41317  01A9C4  0E00               	movlw	0
 41318  01A9C6  6F6D               	movwf	_i2c1_state& (0+255),b
 41319                           
 41320                           ; BSR set to: 2
 41321  01A9C8  0012               	return		;funcret
 41322  01A9CA                     __end_of_I2C1_Stop:
 41323                           	opt stack 0
 41324                           tosu	equ	0xFFF
 41325                           tosh	equ	0xFFE
 41326                           tosl	equ	0xFFD
 41327                           pclatu	equ	0xFFB
 41328                           pclath	equ	0xFFA
 41329                           tblptru	equ	0xFF8
 41330                           tblptrh	equ	0xFF7
 41331                           tblptrl	equ	0xFF6
 41332                           tablat	equ	0xFF5
 41333                           prodh	equ	0xFF4
 41334                           prodl	equ	0xFF3
 41335                           intcon	equ	0xFF2
 41336                           indf0	equ	0xFEF
 41337                           postinc0	equ	0xFEE
 41338                           fsr0h	equ	0xFEA
 41339                           fsr0l	equ	0xFE9
 41340                           wreg	equ	0xFE8
 41341                           indf1	equ	0xFE7
 41342                           postdec1	equ	0xFE5
 41343                           plusw1	equ	0xFE3
 41344                           fsr1h	equ	0xFE2
 41345                           fsr1l	equ	0xFE1
 41346                           bsr	equ	0xFE0
 41347                           indf2	equ	0xFDF
 41348                           postinc2	equ	0xFDE
 41349                           postdec2	equ	0xFDD
 41350                           plusw2	equ	0xFDB
 41351                           fsr2h	equ	0xFDA
 41352                           fsr2l	equ	0xFD9
 41353                           status	equ	0xFD8
 41354                           
 41355 ;; *************** function _I2C1_FunctionComplete *****************
 41356 ;; Defined at:
 41357 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 41358 ;; Parameters:    Size  Location     Type
 41359 ;;		None
 41360 ;; Auto vars:     Size  Location     Type
 41361 ;;		None
 41362 ;; Return value:  Size  Location     Type
 41363 ;;                  1    wreg      void 
 41364 ;; Registers used:
 41365 ;;		wreg, status,2, status,0
 41366 ;; Tracked objects:
 41367 ;;		On entry : 0/0
 41368 ;;		On exit  : 0/0
 41369 ;;		Unchanged: 0/0
 41370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41375 ;;Total ram usage:        0 bytes
 41376 ;; Hardware stack levels used:    1
 41377 ;; This function calls:
 41378 ;;		Nothing
 41379 ;; This function is called by:
 41380 ;;		_I2C1_ISR
 41381 ;; This function uses a non-reentrant model
 41382 ;;
 41383                           
 41384                           	psect	text127
 41385  01B132                     __ptext127:
 41386                           	opt stack 0
 41387  01B132                     _I2C1_FunctionComplete:
 41388                           	opt stack 16
 41389                           
 41390                           ;i2c1.c: 569: p_i2c1_trb_current++;
 41391                           
 41392                           ; BSR set to: 2
 41393                           ;incstack = 0
 41394  01B132  0E05               	movlw	5
 41395  01B134  0102               	movlb	2	; () banked
 41396  01B136  2762               	addwf	_p_i2c1_trb_current& (0+255),f,b
 41397  01B138  0E00               	movlw	0
 41398  01B13A  2363               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 41399                           
 41400                           ; BSR set to: 2
 41401                           ;i2c1.c: 572: if(--i2c1_trb_count == 0)
 41402  01B13C  2F6C               	decfsz	_i2c1_trb_count& (0+255),f,b
 41403  01B13E  D003               	goto	i2l1842
 41404                           
 41405                           ; BSR set to: 2
 41406                           ;i2c1.c: 573: {
 41407                           ;i2c1.c: 574: i2c1_state = S_MASTER_SEND_STOP;
 41408  01B140  0E04               	movlw	4
 41409  01B142  6F6D               	movwf	_i2c1_state& (0+255),b
 41410                           
 41411                           ;i2c1.c: 575: }
 41412  01B144  0012               	return	
 41413  01B146                     i2l1842:
 41414                           
 41415                           ; BSR set to: 2
 41416                           ;i2c1.c: 576: else
 41417                           ;i2c1.c: 577: {
 41418                           ;i2c1.c: 578: i2c1_state = S_MASTER_RESTART;
 41419                           
 41420                           ; BSR set to: 2
 41421  01B146  0E01               	movlw	1
 41422  01B148  6F6D               	movwf	_i2c1_state& (0+255),b
 41423  01B14A  0012               	return	
 41424  01B14C                     __end_of_I2C1_FunctionComplete:
 41425                           	opt stack 0
 41426                           tosu	equ	0xFFF
 41427                           tosh	equ	0xFFE
 41428                           tosl	equ	0xFFD
 41429                           pclatu	equ	0xFFB
 41430                           pclath	equ	0xFFA
 41431                           tblptru	equ	0xFF8
 41432                           tblptrh	equ	0xFF7
 41433                           tblptrl	equ	0xFF6
 41434                           tablat	equ	0xFF5
 41435                           prodh	equ	0xFF4
 41436                           prodl	equ	0xFF3
 41437                           intcon	equ	0xFF2
 41438                           indf0	equ	0xFEF
 41439                           postinc0	equ	0xFEE
 41440                           fsr0h	equ	0xFEA
 41441                           fsr0l	equ	0xFE9
 41442                           wreg	equ	0xFE8
 41443                           indf1	equ	0xFE7
 41444                           postdec1	equ	0xFE5
 41445                           plusw1	equ	0xFE3
 41446                           fsr1h	equ	0xFE2
 41447                           fsr1l	equ	0xFE1
 41448                           bsr	equ	0xFE0
 41449                           indf2	equ	0xFDF
 41450                           postinc2	equ	0xFDE
 41451                           postdec2	equ	0xFDD
 41452                           plusw2	equ	0xFDB
 41453                           fsr2h	equ	0xFDA
 41454                           fsr2l	equ	0xFD9
 41455                           status	equ	0xFD8
 41456                           
 41457 ;; *************** function _I2C1_BusCollisionISR *****************
 41458 ;; Defined at:
 41459 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 41460 ;; Parameters:    Size  Location     Type
 41461 ;;		None
 41462 ;; Auto vars:     Size  Location     Type
 41463 ;;		None
 41464 ;; Return value:  Size  Location     Type
 41465 ;;                  1    wreg      void 
 41466 ;; Registers used:
 41467 ;;		None
 41468 ;; Tracked objects:
 41469 ;;		On entry : 0/0
 41470 ;;		On exit  : 0/0
 41471 ;;		Unchanged: 0/0
 41472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41477 ;;Total ram usage:        0 bytes
 41478 ;; Hardware stack levels used:    1
 41479 ;; This function calls:
 41480 ;;		Nothing
 41481 ;; This function is called by:
 41482 ;;		_INTERRUPT_InterruptManagerHigh
 41483 ;; This function uses a non-reentrant model
 41484 ;;
 41485                           
 41486                           	psect	text128
 41487  01B328                     __ptext128:
 41488                           	opt stack 0
 41489  01B328                     _I2C1_BusCollisionISR:
 41490                           	opt stack 17
 41491                           
 41492                           ;i2c1.c: 745: PIR3bits.BCL1IF = 0;
 41493                           
 41494                           ; BSR set to: 2
 41495                           ;incstack = 0
 41496  01B328  010E               	movlb	14	; () banked
 41497  01B32A  9336               	bcf	54,1,b	;volatile
 41498                           
 41499                           ; BSR set to: 14
 41500  01B32C  0012               	return		;funcret
 41501  01B32E                     __end_of_I2C1_BusCollisionISR:
 41502                           	opt stack 0
 41503                           tosu	equ	0xFFF
 41504                           tosh	equ	0xFFE
 41505                           tosl	equ	0xFFD
 41506                           pclatu	equ	0xFFB
 41507                           pclath	equ	0xFFA
 41508                           tblptru	equ	0xFF8
 41509                           tblptrh	equ	0xFF7
 41510                           tblptrl	equ	0xFF6
 41511                           tablat	equ	0xFF5
 41512                           prodh	equ	0xFF4
 41513                           prodl	equ	0xFF3
 41514                           intcon	equ	0xFF2
 41515                           indf0	equ	0xFEF
 41516                           postinc0	equ	0xFEE
 41517                           fsr0h	equ	0xFEA
 41518                           fsr0l	equ	0xFE9
 41519                           wreg	equ	0xFE8
 41520                           indf1	equ	0xFE7
 41521                           postdec1	equ	0xFE5
 41522                           plusw1	equ	0xFE3
 41523                           fsr1h	equ	0xFE2
 41524                           fsr1l	equ	0xFE1
 41525                           bsr	equ	0xFE0
 41526                           indf2	equ	0xFDF
 41527                           postinc2	equ	0xFDE
 41528                           postdec2	equ	0xFDD
 41529                           plusw2	equ	0xFDB
 41530                           fsr2h	equ	0xFDA
 41531                           fsr2l	equ	0xFD9
 41532                           status	equ	0xFD8
 41533                           
 41534 ;; *************** function _HLVD_ISR *****************
 41535 ;; Defined at:
 41536 ;;		line 120 in file "mcc_generated_files/hlvd.c"
 41537 ;; Parameters:    Size  Location     Type
 41538 ;;		None
 41539 ;; Auto vars:     Size  Location     Type
 41540 ;;		None
 41541 ;; Return value:  Size  Location     Type
 41542 ;;                  1    wreg      void 
 41543 ;; Registers used:
 41544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41545 ;; Tracked objects:
 41546 ;;		On entry : 0/0
 41547 ;;		On exit  : 0/0
 41548 ;;		Unchanged: 0/0
 41549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41554 ;;Total ram usage:        0 bytes
 41555 ;; Hardware stack levels used:    1
 41556 ;; Hardware stack levels required when called:    2
 41557 ;; This function calls:
 41558 ;;		i2_writeDoubleToEEPROM
 41559 ;; This function is called by:
 41560 ;;		_INTERRUPT_InterruptManagerHigh
 41561 ;; This function uses a non-reentrant model
 41562 ;;
 41563                           
 41564                           	psect	text129
 41565  01ABE0                     __ptext129:
 41566                           	opt stack 0
 41567  01ABE0                     _HLVD_ISR:
 41568                           	opt stack 15
 41569                           
 41570                           ;hlvd.c: 124: PIR2bits.HLVDIF = 0;
 41571                           
 41572                           ; BSR set to: 14
 41573                           ;incstack = 0
 41574  01ABE0  010E               	movlb	14	; () banked
 41575  01ABE2  9F35               	bcf	53,7,b	;volatile
 41576                           
 41577                           ;hlvd.c: 127: SBOREN = 0;
 41578  01ABE4  9F4B               	bcf	75,7,b	;volatile
 41579                           
 41580                           ; BSR set to: 14
 41581                           ;hlvd.c: 130: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 41582  01ABE6  C0F6  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 41583  01ABEA  C0F7  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 41584  01ABEE  C0F8  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 41585  01ABF2  C0F9  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 41586  01ABF6  0E5F               	movlw	low _Total_Energy_address
 41587  01ABF8  6EF6               	movwf	tblptrl,c
 41588  01ABFA                     	if	1	;There is more than 1 active tblptr byte
 41589  01ABFA  0ECF               	movlw	high _Total_Energy_address
 41590  01ABFC  6EF7               	movwf	tblptrh,c
 41591  01ABFE                     	endif
 41592  01ABFE                     	if	1	;There are 3 active tblptr bytes
 41593  01ABFE  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 41594  01AC00  6EF8               	movwf	tblptru,c
 41595  01AC02                     	endif
 41596  01AC02  0009               	tblrd		*+
 41597  01AC04  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 41598  01AC08  000A               	tblrd		*-
 41599  01AC0A  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 41600  01AC0E  EC8B  F0D3         	call	i2_writeDoubleToEEPROM	;wreg free
 41601                           
 41602                           ;hlvd.c: 133: SBOREN = 1;
 41603  01AC12  010E               	movlb	14	; () banked
 41604  01AC14  8F4B               	bsf	75,7,b	;volatile
 41605                           
 41606                           ; BSR set to: 14
 41607  01AC16  0012               	return		;funcret
 41608  01AC18                     __end_of_HLVD_ISR:
 41609                           	opt stack 0
 41610                           tosu	equ	0xFFF
 41611                           tosh	equ	0xFFE
 41612                           tosl	equ	0xFFD
 41613                           pclatu	equ	0xFFB
 41614                           pclath	equ	0xFFA
 41615                           tblptru	equ	0xFF8
 41616                           tblptrh	equ	0xFF7
 41617                           tblptrl	equ	0xFF6
 41618                           tablat	equ	0xFF5
 41619                           prodh	equ	0xFF4
 41620                           prodl	equ	0xFF3
 41621                           intcon	equ	0xFF2
 41622                           indf0	equ	0xFEF
 41623                           postinc0	equ	0xFEE
 41624                           fsr0h	equ	0xFEA
 41625                           fsr0l	equ	0xFE9
 41626                           wreg	equ	0xFE8
 41627                           indf1	equ	0xFE7
 41628                           postdec1	equ	0xFE5
 41629                           plusw1	equ	0xFE3
 41630                           fsr1h	equ	0xFE2
 41631                           fsr1l	equ	0xFE1
 41632                           bsr	equ	0xFE0
 41633                           indf2	equ	0xFDF
 41634                           postinc2	equ	0xFDE
 41635                           postdec2	equ	0xFDD
 41636                           plusw2	equ	0xFDB
 41637                           fsr2h	equ	0xFDA
 41638                           fsr2l	equ	0xFD9
 41639                           status	equ	0xFD8
 41640                           
 41641 ;; *************** function i2_writeDoubleToEEPROM *****************
 41642 ;; Defined at:
 41643 ;;		line 6 in file "double_to_EEPROM.c"
 41644 ;; Parameters:    Size  Location     Type
 41645 ;;  input_double    4    4[COMRAM] void 
 41646 ;;  starting_add    2    8[COMRAM] unsigned int 
 41647 ;; Auto vars:     Size  Location     Type
 41648 ;;  writeDoubleT    4   10[COMRAM] struct .
 41649 ;;  writeDoubleT    2   14[COMRAM] int 
 41650 ;; Return value:  Size  Location     Type
 41651 ;;                  1    wreg      void 
 41652 ;; Registers used:
 41653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41654 ;; Tracked objects:
 41655 ;;		On entry : 0/0
 41656 ;;		On exit  : 0/0
 41657 ;;		Unchanged: 0/0
 41658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41659 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41660 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41662 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41663 ;;Total ram usage:       12 bytes
 41664 ;; Hardware stack levels used:    1
 41665 ;; Hardware stack levels required when called:    1
 41666 ;; This function calls:
 41667 ;;		i2_DATAEE_WriteByte
 41668 ;; This function is called by:
 41669 ;;		_HLVD_ISR
 41670 ;;		_writeEnergyToEEPROMCallback
 41671 ;; This function uses a non-reentrant model
 41672 ;;
 41673                           
 41674                           	psect	text130
 41675  01A716                     __ptext130:
 41676                           	opt stack 0
 41677  01A716                     i2_writeDoubleToEEPROM:
 41678                           	opt stack 13
 41679                           
 41680                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 41681                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 41682                           
 41683                           ; BSR set to: 14
 41684                           ;incstack = 0
 41685  01A716  C005  F00B         	movff	i2writeDoubleToEEPROM@input_double,i2writeDoubleToEEPROM@input_data
 41686  01A71A  C006  F00C         	movff	i2writeDoubleToEEPROM@input_double+1,i2writeDoubleToEEPROM@input_data+1
 41687  01A71E  C007  F00D         	movff	i2writeDoubleToEEPROM@input_double+2,i2writeDoubleToEEPROM@input_data+2
 41688  01A722  C008  F00E         	movff	i2writeDoubleToEEPROM@input_double+3,i2writeDoubleToEEPROM@input_data+3
 41689                           
 41690                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 41691  01A726  0E00               	movlw	0
 41692  01A728  6E10               	movwf	i2writeDoubleToEEPROM@byte_index+1,c
 41693  01A72A  0E00               	movlw	0
 41694  01A72C  6E0F               	movwf	i2writeDoubleToEEPROM@byte_index,c
 41695  01A72E                     i2l11095:
 41696  01A72E  5010               	movf	i2writeDoubleToEEPROM@byte_index+1,w,c
 41697  01A730  E117               	bnz	i2l1654
 41698  01A732  0E04               	movlw	4
 41699  01A734  5C0F               	subwf	i2writeDoubleToEEPROM@byte_index,w,c
 41700  01A736  B0D8               	btfsc	status,0,c
 41701  01A738  0012               	return	
 41702                           
 41703                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 41704  01A73A  5009               	movf	i2writeDoubleToEEPROM@starting_address,w,c
 41705  01A73C  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 41706  01A73E  6E01               	movwf	i2DATAEE_WriteByte@bAdd,c
 41707  01A740  500A               	movf	i2writeDoubleToEEPROM@starting_address+1,w,c
 41708  01A742  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 41709  01A744  6E02               	movwf	i2DATAEE_WriteByte@bAdd+1,c
 41710  01A746  0E0B               	movlw	low i2writeDoubleToEEPROM@input_data
 41711  01A748  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 41712  01A74A  6ED9               	movwf	fsr2l,c
 41713  01A74C  0E00               	movlw	high i2writeDoubleToEEPROM@input_data
 41714  01A74E  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 41715  01A750  6EDA               	movwf	fsr2h,c
 41716  01A752  50DF               	movf	indf2,w,c
 41717  01A754  6E03               	movwf	i2DATAEE_WriteByte@bData,c
 41718  01A756  ECB7  F0D5         	call	i2_DATAEE_WriteByte	;wreg free
 41719  01A75A  4A0F               	infsnz	i2writeDoubleToEEPROM@byte_index,f,c
 41720  01A75C  2A10               	incf	i2writeDoubleToEEPROM@byte_index+1,f,c
 41721  01A75E  D7E7               	goto	i2l11095
 41722  01A760                     i2l1654:
 41723  01A760  0012               	return		;funcret
 41724  01A762                     __end_ofi2_writeDoubleToEEPROM:
 41725                           	opt stack 0
 41726                           tosu	equ	0xFFF
 41727                           tosh	equ	0xFFE
 41728                           tosl	equ	0xFFD
 41729                           pclatu	equ	0xFFB
 41730                           pclath	equ	0xFFA
 41731                           tblptru	equ	0xFF8
 41732                           tblptrh	equ	0xFF7
 41733                           tblptrl	equ	0xFF6
 41734                           tablat	equ	0xFF5
 41735                           prodh	equ	0xFF4
 41736                           prodl	equ	0xFF3
 41737                           intcon	equ	0xFF2
 41738                           indf0	equ	0xFEF
 41739                           postinc0	equ	0xFEE
 41740                           fsr0h	equ	0xFEA
 41741                           fsr0l	equ	0xFE9
 41742                           wreg	equ	0xFE8
 41743                           indf1	equ	0xFE7
 41744                           postdec1	equ	0xFE5
 41745                           plusw1	equ	0xFE3
 41746                           fsr1h	equ	0xFE2
 41747                           fsr1l	equ	0xFE1
 41748                           bsr	equ	0xFE0
 41749                           indf2	equ	0xFDF
 41750                           postinc2	equ	0xFDE
 41751                           postdec2	equ	0xFDD
 41752                           plusw2	equ	0xFDB
 41753                           fsr2h	equ	0xFDA
 41754                           fsr2l	equ	0xFD9
 41755                           status	equ	0xFD8
 41756                           
 41757 ;; *************** function i2_DATAEE_WriteByte *****************
 41758 ;; Defined at:
 41759 ;;		line 168 in file "mcc_generated_files/memory.c"
 41760 ;; Parameters:    Size  Location     Type
 41761 ;;  bAdd            2    0[COMRAM] unsigned int 
 41762 ;;  bData           1    2[COMRAM] unsigned char 
 41763 ;; Auto vars:     Size  Location     Type
 41764 ;;  DATAEE_Write    1    3[COMRAM] unsigned char 
 41765 ;; Return value:  Size  Location     Type
 41766 ;;                  1    wreg      void 
 41767 ;; Registers used:
 41768 ;;		wreg, status,2, status,0
 41769 ;; Tracked objects:
 41770 ;;		On entry : 0/0
 41771 ;;		On exit  : 0/0
 41772 ;;		Unchanged: 0/0
 41773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41774 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41777 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41778 ;;Total ram usage:        4 bytes
 41779 ;; Hardware stack levels used:    1
 41780 ;; This function calls:
 41781 ;;		Nothing
 41782 ;; This function is called by:
 41783 ;;		i2_writeDoubleToEEPROM
 41784 ;; This function uses a non-reentrant model
 41785 ;;
 41786                           
 41787                           	psect	text131
 41788  01AB6E                     __ptext131:
 41789                           	opt stack 0
 41790  01AB6E                     i2_DATAEE_WriteByte:
 41791                           	opt stack 13
 41792                           
 41793                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 41794                           
 41795                           ;incstack = 0
 41796  01AB6E  0E00               	movlw	0
 41797  01AB70  BEF2               	btfsc	intcon,7,c	;volatile
 41798  01AB72  0E01               	movlw	1
 41799  01AB74  6E04               	movwf	i2DATAEE_WriteByte@GIEBitValue,c
 41800                           
 41801                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 41802  01AB76  5002               	movf	i2DATAEE_WriteByte@bAdd+1,w,c
 41803  01AB78  0B03               	andlw	3
 41804  01AB7A  6E75               	movwf	3957,c	;volatile
 41805                           
 41806                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 41807  01AB7C  C001  FF74         	movff	i2DATAEE_WriteByte@bAdd,3956	;volatile
 41808                           
 41809                           ;memory.c: 174: NVMDAT = bData;
 41810  01AB80  C003  FF76         	movff	i2DATAEE_WriteByte@bData,3958	;volatile
 41811                           
 41812                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 41813  01AB84  0E3F               	movlw	-193
 41814  01AB86  1677               	andwf	3959,f,c	;volsfr
 41815                           
 41816                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 41817  01AB88  8477               	bsf	3959,2,c	;volsfr
 41818                           
 41819                           ;memory.c: 177: INTCONbits.GIE = 0;
 41820  01AB8A  9EF2               	bcf	intcon,7,c	;volatile
 41821                           
 41822                           ;memory.c: 178: NVMCON2 = 0x55;
 41823  01AB8C  0E55               	movlw	85
 41824  01AB8E  6E78               	movwf	3960,c	;volsfr
 41825                           
 41826                           ;memory.c: 179: NVMCON2 = 0xAA;
 41827  01AB90  0EAA               	movlw	170
 41828  01AB92  6E78               	movwf	3960,c	;volsfr
 41829                           
 41830                           ;memory.c: 180: NVMCON1bits.WR = 1;
 41831  01AB94  8277               	bsf	3959,1,c	;volsfr
 41832  01AB96                     
 41833                           ;memory.c: 183: {
 41834  01AB96  B277               	btfsc	3959,1,c	;volsfr
 41835  01AB98  D7FE               	goto	i2l837
 41836                           
 41837                           ;memory.c: 184: }
 41838                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 41839  01AB9A  9477               	bcf	3959,2,c	;volsfr
 41840                           
 41841                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 41842  01AB9C  B004               	btfsc	i2DATAEE_WriteByte@GIEBitValue,0,c
 41843  01AB9E  D002               	bra	i2u1241_45
 41844  01ABA0  9EF2               	bcf	intcon,7,c	;volatile
 41845  01ABA2  D001               	bra	i2u1241_46
 41846  01ABA4                     i2u1241_45:
 41847  01ABA4  8EF2               	bsf	intcon,7,c	;volatile
 41848  01ABA6                     i2u1241_46:
 41849  01ABA6  0012               	return		;funcret
 41850  01ABA8                     __end_ofi2_DATAEE_WriteByte:
 41851                           	opt stack 0
 41852                           tosu	equ	0xFFF
 41853                           tosh	equ	0xFFE
 41854                           tosl	equ	0xFFD
 41855                           pclatu	equ	0xFFB
 41856                           pclath	equ	0xFFA
 41857                           tblptru	equ	0xFF8
 41858                           tblptrh	equ	0xFF7
 41859                           tblptrl	equ	0xFF6
 41860                           tablat	equ	0xFF5
 41861                           prodh	equ	0xFF4
 41862                           prodl	equ	0xFF3
 41863                           intcon	equ	0xFF2
 41864                           indf0	equ	0xFEF
 41865                           postinc0	equ	0xFEE
 41866                           fsr0h	equ	0xFEA
 41867                           fsr0l	equ	0xFE9
 41868                           wreg	equ	0xFE8
 41869                           indf1	equ	0xFE7
 41870                           postdec1	equ	0xFE5
 41871                           plusw1	equ	0xFE3
 41872                           fsr1h	equ	0xFE2
 41873                           fsr1l	equ	0xFE1
 41874                           bsr	equ	0xFE0
 41875                           indf2	equ	0xFDF
 41876                           postinc2	equ	0xFDE
 41877                           postdec2	equ	0xFDD
 41878                           plusw2	equ	0xFDB
 41879                           fsr2h	equ	0xFDA
 41880                           fsr2l	equ	0xFD9
 41881                           status	equ	0xFD8
 41882                           
 41883 ;; *************** function _EUSART2_Receive_ISR *****************
 41884 ;; Defined at:
 41885 ;;		line 209 in file "mcc_generated_files/eusart2.c"
 41886 ;; Parameters:    Size  Location     Type
 41887 ;;		None
 41888 ;; Auto vars:     Size  Location     Type
 41889 ;;		None
 41890 ;; Return value:  Size  Location     Type
 41891 ;;                  1    wreg      void 
 41892 ;; Registers used:
 41893 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41894 ;; Tracked objects:
 41895 ;;		On entry : 0/0
 41896 ;;		On exit  : 0/0
 41897 ;;		Unchanged: 0/0
 41898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41903 ;;Total ram usage:        0 bytes
 41904 ;; Hardware stack levels used:    1
 41905 ;; Hardware stack levels required when called:    4
 41906 ;; This function calls:
 41907 ;;		i2_printf
 41908 ;; This function is called by:
 41909 ;;		_EUSART2_Initialize
 41910 ;;		_INTERRUPT_InterruptManagerHigh
 41911 ;; This function uses a non-reentrant model
 41912 ;;
 41913                           
 41914                           	psect	text132
 41915  0196A0                     __ptext132:
 41916                           	opt stack 0
 41917  0196A0                     _EUSART2_Receive_ISR:
 41918                           	opt stack 13
 41919                           
 41920                           ;eusart2.c: 212: if(1 == RC2STAbits.OERR)
 41921                           
 41922                           ;incstack = 0
 41923  0196A0  010E               	movlb	14	; () banked
 41924  0196A2  A3F5               	btfss	245,1,b	;volatile
 41925  0196A4  D005               	goto	i2l451
 41926                           
 41927                           ; BSR set to: 14
 41928                           ;eusart2.c: 213: {
 41929                           ;eusart2.c: 216: RC2STAbits.CREN = 0;
 41930  0196A6  99F5               	bcf	245,4,b	;volatile
 41931                           
 41932                           ;eusart2.c: 217: RC2STAbits.CREN = 1;
 41933  0196A8  89F5               	bsf	245,4,b	;volatile
 41934                           
 41935                           ; BSR set to: 14
 41936                           ;eusart2.c: 218: error_handler.USB_UART_COMM_error_flag = 1;
 41937  0196AA  0E01               	movlw	1
 41938  0196AC  0102               	movlb	2	; () banked
 41939  0196AE  6F08               	movwf	(_error_handler+8)& (0+255),b
 41940  0196B0                     i2l451:
 41941                           
 41942                           ;eusart2.c: 219: }
 41943                           ;eusart2.c: 222: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 41944                           
 41945                           ; BSR set to: 2
 41946  0196B0  0100               	movlb	0	; () banked
 41947  0196B2  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 41948  0196B4  0D01               	mullw	1
 41949  0196B6  0E00               	movlw	low _eusart2RxBuffer
 41950  0196B8  24F3               	addwf	prodl,w,c
 41951  0196BA  6ED9               	movwf	fsr2l,c
 41952  0196BC  0E03               	movlw	high _eusart2RxBuffer
 41953  0196BE  20F4               	addwfc	prodh,w,c
 41954  0196C0  6EDA               	movwf	fsr2h,c
 41955  0196C2  CEF1 FFDF          	movff	3825,indf2	;volatile
 41956                           
 41957                           ; BSR set to: 0
 41958  0196C6  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 41959                           
 41960                           ; BSR set to: 0
 41961                           ;eusart2.c: 223: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 41962  0196C8  0E3F               	movlw	63
 41963  0196CA  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 41964  0196CC  D002               	goto	i2l452
 41965                           
 41966                           ; BSR set to: 0
 41967                           ;eusart2.c: 224: {
 41968                           ;eusart2.c: 225: eusart2RxHead = 0;
 41969  0196CE  0E00               	movlw	0
 41970  0196D0  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 41971  0196D2                     i2l452:
 41972                           
 41973                           ; BSR set to: 0
 41974                           ;eusart2.c: 226: }
 41975                           ;eusart2.c: 227: eusart2RxCount++;
 41976                           
 41977                           ; BSR set to: 0
 41978  0196D2  0102               	movlb	2	; () banked
 41979  0196D4  2B73               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 41980                           
 41981                           ; BSR set to: 2
 41982                           ;eusart2.c: 233: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 41983  0196D6  0E0A               	movlw	10
 41984  0196D8  010E               	movlb	14	; () banked
 41985  0196DA  19F1               	xorwf	241,w,b	;volatile
 41986  0196DC  B4D8               	btfsc	status,2,c
 41987  0196DE  D004               	goto	i2u3514_40
 41988                           
 41989                           ; BSR set to: 14
 41990  0196E0  0E0D               	movlw	13
 41991  0196E2  19F1               	xorwf	241,w,b	;volatile
 41992  0196E4  A4D8               	btfss	status,2,c
 41993  0196E6  D006               	goto	i2l453
 41994  0196E8                     i2u3514_40:
 41995                           
 41996                           ; BSR set to: 14
 41997                           ;eusart2.c: 235: eusart2RxStringReady = 1;
 41998  0196E8  0100               	movlb	0	; () banked
 41999  0196EA  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 42000                           
 42001                           ; BSR set to: 0
 42002                           ;eusart2.c: 238: RC2REG = 0;
 42003  0196EC  0E00               	movlw	0
 42004  0196EE  010E               	movlb	14	; () banked
 42005  0196F0  6FF1               	movwf	241,b	;volatile
 42006                           
 42007                           ;eusart2.c: 240: }
 42008  0196F2  D002               	goto	i2l456
 42009  0196F4                     i2l453:
 42010                           
 42011                           ; BSR set to: 14
 42012                           ;eusart2.c: 242: else {
 42013                           ;eusart2.c: 244: eusart2RxStringReady = 0;
 42014  0196F4  0100               	movlb	0	; () banked
 42015  0196F6  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 42016  0196F8                     i2l456:
 42017                           
 42018                           ;eusart2.c: 246: }
 42019                           ;eusart2.c: 249: if((RC2REG == (int) '\b')) {
 42020                           
 42021                           ; BSR set to: 0
 42022  0196F8  0E08               	movlw	8
 42023  0196FA  010E               	movlb	14	; () banked
 42024  0196FC  19F1               	xorwf	241,w,b	;volatile
 42025  0196FE  A4D8               	btfss	status,2,c
 42026  019700  0012               	return	
 42027                           
 42028                           ; BSR set to: 14
 42029                           ;eusart2.c: 251: eusart2RxBuffer[eusart2RxHead] = '\0';
 42030  019702  0100               	movlb	0	; () banked
 42031  019704  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 42032  019706  0D01               	mullw	1
 42033  019708  0E00               	movlw	low _eusart2RxBuffer
 42034  01970A  24F3               	addwf	prodl,w,c
 42035  01970C  6ED9               	movwf	fsr2l,c
 42036  01970E  0E03               	movlw	high _eusart2RxBuffer
 42037  019710  20F4               	addwfc	prodh,w,c
 42038  019712  6EDA               	movwf	fsr2h,c
 42039  019714  0E00               	movlw	0
 42040  019716  6EDF               	movwf	indf2,c
 42041                           
 42042                           ; BSR set to: 0
 42043                           ;eusart2.c: 252: eusart2RxHead--;
 42044  019718  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 42045                           
 42046                           ; BSR set to: 0
 42047                           ;eusart2.c: 255: printf("\033[K");
 42048  01971A  0EC8               	movlw	low STR_1
 42049  01971C  6FB2               	movwf	i2printf@f& (0+255),b
 42050  01971E  0EFF               	movlw	high STR_1
 42051  019720  6FB3               	movwf	(i2printf@f+1)& (0+255),b
 42052  019722  EC5E  F0D5         	call	i2_printf	;wreg free
 42053                           
 42054                           ;eusart2.c: 257: if(eusart2RxHead != eusart2RxTail) {
 42055  019726  0101               	movlb	1	; () banked
 42056  019728  51DE               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 42057  01972A  0100               	movlb	0	; () banked
 42058  01972C  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 42059  01972E  B4D8               	btfsc	status,2,c
 42060  019730  D00B               	goto	i2l458
 42061                           
 42062                           ; BSR set to: 0
 42063                           ;eusart2.c: 259: eusart2RxBuffer[eusart2RxHead] = '\0';
 42064  019732  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 42065  019734  0D01               	mullw	1
 42066  019736  0E00               	movlw	low _eusart2RxBuffer
 42067  019738  24F3               	addwf	prodl,w,c
 42068  01973A  6ED9               	movwf	fsr2l,c
 42069  01973C  0E03               	movlw	high _eusart2RxBuffer
 42070  01973E  20F4               	addwfc	prodh,w,c
 42071  019740  6EDA               	movwf	fsr2h,c
 42072  019742  0E00               	movlw	0
 42073  019744  6EDF               	movwf	indf2,c
 42074                           
 42075                           ; BSR set to: 0
 42076                           ;eusart2.c: 260: eusart2RxHead--;
 42077  019746  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 42078  019748                     i2l458:
 42079                           
 42080                           ; BSR set to: 0
 42081                           ;eusart2.c: 262: }
 42082                           ;eusart2.c: 264: RC2REG = 0;
 42083                           
 42084                           ; BSR set to: 0
 42085  019748  0E00               	movlw	0
 42086  01974A  010E               	movlb	14	; () banked
 42087  01974C  6FF1               	movwf	241,b	;volatile
 42088  01974E  0012               	return	
 42089  019750                     __end_of_EUSART2_Receive_ISR:
 42090                           	opt stack 0
 42091                           tosu	equ	0xFFF
 42092                           tosh	equ	0xFFE
 42093                           tosl	equ	0xFFD
 42094                           pclatu	equ	0xFFB
 42095                           pclath	equ	0xFFA
 42096                           tblptru	equ	0xFF8
 42097                           tblptrh	equ	0xFF7
 42098                           tblptrl	equ	0xFF6
 42099                           tablat	equ	0xFF5
 42100                           prodh	equ	0xFF4
 42101                           prodl	equ	0xFF3
 42102                           intcon	equ	0xFF2
 42103                           indf0	equ	0xFEF
 42104                           postinc0	equ	0xFEE
 42105                           fsr0h	equ	0xFEA
 42106                           fsr0l	equ	0xFE9
 42107                           wreg	equ	0xFE8
 42108                           indf1	equ	0xFE7
 42109                           postdec1	equ	0xFE5
 42110                           plusw1	equ	0xFE3
 42111                           fsr1h	equ	0xFE2
 42112                           fsr1l	equ	0xFE1
 42113                           bsr	equ	0xFE0
 42114                           indf2	equ	0xFDF
 42115                           postinc2	equ	0xFDE
 42116                           postdec2	equ	0xFDD
 42117                           plusw2	equ	0xFDB
 42118                           fsr2h	equ	0xFDA
 42119                           fsr2l	equ	0xFD9
 42120                           status	equ	0xFD8
 42121                           
 42122 ;; *************** function i2_printf *****************
 42123 ;; Defined at:
 42124 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 42125 ;; Parameters:    Size  Location     Type
 42126 ;;  f               2   82[BANK0 ] PTR const unsigned char 
 42127 ;;		 -> STR_175(13), STR_174(31), STR_173(26), STR_172(28), 
 42128 ;;		 -> STR_171(426), STR_169(30), STR_168(46), STR_167(39), 
 42129 ;;		 -> STR_166(62), STR_165(55), STR_164(470), STR_162(3086), 
 42130 ;;		 -> STR_160(492), STR_158(748), STR_156(720), STR_154(974), 
 42131 ;;		 -> STR_152(54), STR_150(54), STR_148(45), STR_146(51), 
 42132 ;;		 -> STR_144(52), STR_142(46), STR_140(51), STR_138(53), 
 42133 ;;		 -> STR_136(58), STR_134(71), STR_133(63), STR_132(37), 
 42134 ;;		 -> STR_131(46), STR_130(102), STR_129(86), STR_127(25), 
 42135 ;;		 -> STR_125(42), STR_124(53), STR_123(31), STR_121(29), 
 42136 ;;		 -> STR_120(28), STR_118(42), STR_116(41), STR_114(34), 
 42137 ;;		 -> STR_112(53), STR_111(52), STR_110(105), STR_109(105), 
 42138 ;;		 -> STR_107(59), STR_105(73), STR_103(56), STR_101(34), 
 42139 ;;		 -> STR_99(34), STR_97(32), STR_95(37), STR_93(58), 
 42140 ;;		 -> STR_91(36), STR_89(36), STR_87(37), STR_85(34), 
 42141 ;;		 -> STR_83(38), STR_82(60), STR_81(32), STR_80(23), 
 42142 ;;		 -> STR_79(65), STR_77(23), STR_75(27), STR_74(48), 
 42143 ;;		 -> STR_73(15), STR_72(13), STR_71(12), STR_70(11), 
 42144 ;;		 -> STR_69(10), STR_68(11), STR_67(24), STR_66(46), 
 42145 ;;		 -> STR_65(25), STR_63(54), STR_62(64), STR_60(59), 
 42146 ;;		 -> STR_58(85), STR_56(47), STR_55(17), STR_52(52), 
 42147 ;;		 -> STR_50(4), STR_49(5), STR_47(4), STR_46(5), 
 42148 ;;		 -> STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), STR_13(4), 
 42149 ;;		 -> STR_12(4), STR_11(4), STR_10(5), STR_9(3), 
 42150 ;;		 -> STR_8(372), STR_7(4), STR_6(5), STR_1(4), 
 42151 ;; Auto vars:     Size  Location     Type
 42152 ;;  printf          5   86[BANK0 ] struct __prbuf
 42153 ;;  printf          2   84[BANK0 ] PTR void [1]
 42154 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 42155 ;; Return value:  Size  Location     Type
 42156 ;;                  2   82[BANK0 ] int 
 42157 ;; Registers used:
 42158 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42159 ;; Tracked objects:
 42160 ;;		On entry : 0/0
 42161 ;;		On exit  : 0/0
 42162 ;;		Unchanged: 0/0
 42163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42164 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42165 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42167 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42168 ;;Total ram usage:        9 bytes
 42169 ;; Hardware stack levels used:    1
 42170 ;; Hardware stack levels required when called:    3
 42171 ;; This function calls:
 42172 ;;		i2__doprnt
 42173 ;; This function is called by:
 42174 ;;		_EUSART2_Receive_ISR
 42175 ;; This function uses a non-reentrant model
 42176 ;;
 42177                           
 42178                           	psect	text133
 42179  01AABC                     __ptext133:
 42180                           	opt stack 0
 42181  01AABC                     i2_printf:
 42182                           	opt stack 13
 42183                           
 42184                           ; BSR set to: 14
 42185                           ;incstack = 0
 42186  01AABC  0E00               	movlw	0
 42187  01AABE  0100               	movlb	0	; () banked
 42188  01AAC0  6FB6               	movwf	i2printf@pb& (0+255),b
 42189  01AAC2  0E00               	movlw	0
 42190  01AAC4  6FB7               	movwf	(i2printf@pb+1)& (0+255),b
 42191  01AAC6  0E02               	movlw	low i2_putch
 42192  01AAC8  6FB8               	movwf	(i2printf@pb+2)& (0+255),b
 42193  01AACA  0EB3               	movlw	high i2_putch
 42194  01AACC  6FB9               	movwf	(i2printf@pb+3)& (0+255),b
 42195  01AACE  0E01               	movlw	low (i2_putch shr (0+16))
 42196  01AAD0  6FBA               	movwf	(i2printf@pb+4)& (0+255),b
 42197  01AAD2  0EB4               	movlw	low (?i2_printf+2)
 42198  01AAD4  6FB4               	movwf	i2printf@ap& (0+255),b
 42199  01AAD6  0E00               	movlw	high (?i2_printf+2)
 42200  01AAD8  6FB5               	movwf	(i2printf@ap+1)& (0+255),b
 42201                           
 42202                           ; BSR set to: 0
 42203                           ;	Return value of i2_printf is never used
 42204  01AADA  0EB6               	movlw	low i2printf@pb
 42205  01AADC  6F88               	movwf	i2__doprnt@pb& (0+255),b
 42206  01AADE  0E00               	movlw	high i2printf@pb
 42207  01AAE0  6F89               	movwf	(i2__doprnt@pb+1)& (0+255),b
 42208  01AAE2  C0B2  F08A         	movff	i2printf@f,i2__doprnt@f
 42209  01AAE6  C0B3  F08B         	movff	i2printf@f+1,i2__doprnt@f+1
 42210  01AAEA  0EB4               	movlw	low i2printf@ap
 42211  01AAEC  6F8C               	movwf	i2__doprnt@ap& (0+255),b
 42212  01AAEE  0E00               	movlw	high i2printf@ap
 42213  01AAF0  6F8D               	movwf	(i2__doprnt@ap+1)& (0+255),b
 42214  01AAF2  ECF6  F095         	call	i2__doprnt	;wreg free
 42215  01AAF6  0012               	return	
 42216  01AAF8                     __end_ofi2_printf:
 42217                           	opt stack 0
 42218                           tosu	equ	0xFFF
 42219                           tosh	equ	0xFFE
 42220                           tosl	equ	0xFFD
 42221                           pclatu	equ	0xFFB
 42222                           pclath	equ	0xFFA
 42223                           tblptru	equ	0xFF8
 42224                           tblptrh	equ	0xFF7
 42225                           tblptrl	equ	0xFF6
 42226                           tablat	equ	0xFF5
 42227                           prodh	equ	0xFF4
 42228                           prodl	equ	0xFF3
 42229                           intcon	equ	0xFF2
 42230                           indf0	equ	0xFEF
 42231                           postinc0	equ	0xFEE
 42232                           fsr0h	equ	0xFEA
 42233                           fsr0l	equ	0xFE9
 42234                           wreg	equ	0xFE8
 42235                           indf1	equ	0xFE7
 42236                           postdec1	equ	0xFE5
 42237                           plusw1	equ	0xFE3
 42238                           fsr1h	equ	0xFE2
 42239                           fsr1l	equ	0xFE1
 42240                           bsr	equ	0xFE0
 42241                           indf2	equ	0xFDF
 42242                           postinc2	equ	0xFDE
 42243                           postdec2	equ	0xFDD
 42244                           plusw2	equ	0xFDB
 42245                           fsr2h	equ	0xFDA
 42246                           fsr2l	equ	0xFD9
 42247                           status	equ	0xFD8
 42248                           
 42249 ;; *************** function i2__doprnt *****************
 42250 ;; Defined at:
 42251 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 42252 ;; Parameters:    Size  Location     Type
 42253 ;;  pb              2   40[BANK0 ] PTR struct __prbuf
 42254 ;;		 -> sprintf@pb(5), printf@pb(5), 
 42255 ;;  f               2   42[BANK0 ] PTR const unsigned char 
 42256 ;;		 -> STR_193(11), STR_175(13), STR_174(31), STR_173(26), 
 42257 ;;		 -> STR_172(28), STR_171(426), STR_169(30), STR_168(46), 
 42258 ;;		 -> STR_167(39), STR_166(62), STR_165(55), STR_164(470), 
 42259 ;;		 -> STR_162(3086), STR_160(492), STR_158(748), STR_156(720), 
 42260 ;;		 -> STR_154(974), STR_152(54), STR_150(54), STR_148(45), 
 42261 ;;		 -> STR_146(51), STR_144(52), STR_142(46), STR_140(51), 
 42262 ;;		 -> STR_138(53), STR_136(58), STR_134(71), STR_133(63), 
 42263 ;;		 -> STR_132(37), STR_131(46), STR_130(102), STR_129(86), 
 42264 ;;		 -> STR_127(25), STR_125(42), STR_124(53), STR_123(31), 
 42265 ;;		 -> STR_121(29), STR_120(28), STR_118(42), STR_116(41), 
 42266 ;;		 -> STR_114(34), STR_112(53), STR_111(52), STR_110(105), 
 42267 ;;		 -> STR_109(105), STR_107(59), STR_105(73), STR_103(56), 
 42268 ;;		 -> STR_101(34), STR_99(34), STR_97(32), STR_95(37), 
 42269 ;;		 -> STR_93(58), STR_91(36), STR_89(36), STR_87(37), 
 42270 ;;		 -> STR_85(34), STR_83(38), STR_82(60), STR_81(32), 
 42271 ;;		 -> STR_80(23), STR_79(65), STR_77(23), STR_75(27), 
 42272 ;;		 -> STR_74(48), STR_73(15), STR_72(13), STR_71(12), 
 42273 ;;		 -> STR_70(11), STR_69(10), STR_68(11), STR_67(24), 
 42274 ;;		 -> STR_66(46), STR_65(25), STR_63(54), STR_62(64), 
 42275 ;;		 -> STR_60(59), STR_58(85), STR_56(47), STR_55(17), 
 42276 ;;		 -> STR_52(52), STR_50(4), STR_49(5), STR_47(4), 
 42277 ;;		 -> STR_46(5), STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), 
 42278 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(5), 
 42279 ;;		 -> STR_9(3), STR_8(372), STR_7(4), STR_6(5), 
 42280 ;;		 -> STR_1(4), 
 42281 ;;  ap              2   44[BANK0 ] PTR PTR void 
 42282 ;;		 -> sprintf@ap(2), printf@ap(2), 
 42283 ;; Auto vars:     Size  Location     Type
 42284 ;;  _doprnt         4   71[BANK0 ] unsigned long 
 42285 ;;  _doprnt         4   67[BANK0 ] unsigned long 
 42286 ;;  _doprnt         4   63[BANK0 ] struct .
 42287 ;;  _doprnt         2   79[BANK0 ] int 
 42288 ;;  _doprnt         2   77[BANK0 ] unsigned short 
 42289 ;;  _doprnt         2   75[BANK0 ] int 
 42290 ;;  _doprnt         2   61[BANK0 ] int 
 42291 ;;  _doprnt         2   59[BANK0 ] unsigned int 
 42292 ;;  _doprnt         2   57[BANK0 ] PTR const unsigned char 
 42293 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_191(7), 
 42294 ;;		 -> _doprnt@c(1), STR_188(16), STR_187(22), STR_186(21), 
 42295 ;;		 -> STR_185(27), STR_184(41), STR_183(32), STR_182(19), 
 42296 ;;		 -> STR_181(16), STR_180(15), STR_179(16), STR_178(10), 
 42297 ;;		 -> STR_177(13), STR_176(12), NULL(0), TRIAC_Firing_Angle(4), 
 42298 ;;  _doprnt         1   81[BANK0 ] char 
 42299 ;;  _doprnt         1   56[BANK0 ] unsigned char 
 42300 ;;  _doprnt         1    0        unsigned char 
 42301 ;; Return value:  Size  Location     Type
 42302 ;;                  2   40[BANK0 ] int 
 42303 ;; Registers used:
 42304 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42305 ;; Tracked objects:
 42306 ;;		On entry : 0/0
 42307 ;;		On exit  : 0/0
 42308 ;;		Unchanged: 0/0
 42309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42310 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42311 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42312 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42313 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42314 ;;Total ram usage:       42 bytes
 42315 ;; Hardware stack levels used:    1
 42316 ;; Hardware stack levels required when called:    2
 42317 ;; This function calls:
 42318 ;;		Absolute function
 42319 ;;		i2___awdiv
 42320 ;;		i2___fladd
 42321 ;;		i2___flge
 42322 ;;		i2___flmul
 42323 ;;		i2___flneg
 42324 ;;		i2___flsub
 42325 ;;		i2___fltol
 42326 ;;		i2___lldiv
 42327 ;;		i2___llmod
 42328 ;;		i2___wmul
 42329 ;;		i2___xxtofl
 42330 ;;		i2__div_to_l_
 42331 ;;		i2__tdiv_to_l_
 42332 ;;		i2_fround
 42333 ;;		i2_isdigit
 42334 ;;		i2_putch
 42335 ;;		i2_scale
 42336 ;; This function is called by:
 42337 ;;		i2_printf
 42338 ;; This function uses a non-reentrant model
 42339 ;;
 42340                           
 42341                           	psect	text134
 42342  012BEC                     __ptext134:
 42343                           	opt stack 0
 42344  012BEC                     i2__doprnt:
 42345                           	opt stack 13
 42346                           
 42347                           ;doprnt.c: 499: signed char c;
 42348                           ;doprnt.c: 501: int width;
 42349                           ;doprnt.c: 504: int prec;
 42350                           ;doprnt.c: 508: unsigned short flag;
 42351                           ;doprnt.c: 515: char d;
 42352                           ;doprnt.c: 516: double fval;
 42353                           ;doprnt.c: 517: int exp;
 42354                           ;doprnt.c: 523: union {
 42355                           ;doprnt.c: 524: unsigned long vd;
 42356                           ;doprnt.c: 525: double integ;
 42357                           ;doprnt.c: 526: } tmpval;
 42358                           ;doprnt.c: 528: unsigned long val;
 42359                           ;doprnt.c: 529: unsigned len;
 42360                           ;doprnt.c: 530: const char * cp;
 42361                           ;doprnt.c: 536: while(c = *f++) {
 42362                           
 42363                           ;incstack = 0
 42364  012BEC  EF55  F0A0         	goto	i2u3417_40
 42365  012BF0                     
 42366                           ;doprnt.c: 538: if(c != '%')
 42367  012BF0  0E25               	movlw	37
 42368  012BF2  0100               	movlb	0	; () banked
 42369  012BF4  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 42370  012BF6  B4D8               	btfsc	status,2,c
 42371  012BF8  D036               	goto	i2l1961
 42372                           
 42373                           ; BSR set to: 0
 42374                           ;doprnt.c: 540: {
 42375                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 42376  012BFA  EE20 F002          	lfsr	2,2
 42377  012BFE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42378  012C00  26D9               	addwf	fsr2l,f,c
 42379  012C02  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42380  012C04  22DA               	addwfc	fsr2h,f,c
 42381  012C06  50DE               	movf	postinc2,w,c
 42382  012C08  10DE               	iorwf	postinc2,w,c
 42383  012C0A  10DE               	iorwf	postinc2,w,c
 42384  012C0C  B4D8               	btfsc	status,2,c
 42385  012C0E  D014               	goto	i2l1962
 42386                           
 42387                           ; BSR set to: 0
 42388  012C10  EE20 F002          	lfsr	2,2
 42389  012C14  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42390  012C16  26D9               	addwf	fsr2l,f,c
 42391  012C18  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42392  012C1A  22DA               	addwfc	fsr2h,f,c
 42393  012C1C  D802               	call	i2u3307_48
 42394  012C1E  EF55  F0A0         	goto	i2u3417_40
 42395  012C22                     i2u3307_48:
 42396  012C22  0005               	push	
 42397  012C24  6EFA               	movwf	pclath,c
 42398  012C26  50DE               	movf	postinc2,w,c
 42399  012C28  6EFD               	movwf	tosl,c
 42400  012C2A  50DE               	movf	postinc2,w,c
 42401  012C2C  6EFE               	movwf	tosh,c
 42402  012C2E  50DE               	movf	postinc2,w,c
 42403  012C30  6EFF               	movwf	tosu,c
 42404  012C32  50FA               	movf	pclath,w,c
 42405  012C34  51B1               	movf	i2__doprnt@c& (0+255),w,b
 42406  012C36  0012               	return		;indir
 42407  012C38                     i2l1962:
 42408  012C38  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42409  012C3C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42410  012C40  CFDE F08E          	movff	postinc2,??i2__doprnt
 42411  012C44  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42412  012C48  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42413  012C4C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42414  012C50  C0B1  FFDF         	movff	i2__doprnt@c,indf2
 42415  012C54  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42416  012C58  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42417  012C5C  2ADE               	incf	postinc2,f,c
 42418  012C5E  0E00               	movlw	0
 42419  012C60  22DD               	addwfc	postdec2,f,c
 42420                           
 42421                           ;doprnt.c: 542: continue;
 42422  012C62  EF55  F0A0         	goto	i2u3417_40
 42423  012C66                     i2l1961:
 42424                           
 42425                           ;doprnt.c: 543: }
 42426                           ;doprnt.c: 546: width = 0;
 42427  012C66  0E00               	movlw	0
 42428  012C68  0100               	movlb	0	; () banked
 42429  012C6A  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 42430  012C6C  0E00               	movlw	0
 42431  012C6E  6FAB               	movwf	i2__doprnt@width& (0+255),b
 42432                           
 42433                           ;doprnt.c: 548: flag = 0;
 42434  012C70  0E00               	movlw	0
 42435  012C72  6FAE               	movwf	(i2__doprnt@flag+1)& (0+255),b
 42436  012C74  0E00               	movlw	0
 42437  012C76  6FAD               	movwf	i2__doprnt@flag& (0+255),b
 42438                           
 42439                           ; BSR set to: 0
 42440                           ;doprnt.c: 551: switch(*f) {
 42441                           
 42442                           ;doprnt.c: 550: for(;;) {
 42443  012C78  D004               	goto	i2l1965
 42444  012C7A                     
 42445                           ;doprnt.c: 580: flag |= 0x04;
 42446                           
 42447                           ; BSR set to: 0
 42448  012C7A  0100               	movlb	0	; () banked
 42449  012C7C  85AD               	bsf	i2__doprnt@flag& (0+255),2,b
 42450                           
 42451                           ;doprnt.c: 581: f++;
 42452  012C7E  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42453  012C80  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42454  012C82                     i2l1965:
 42455                           
 42456                           ; BSR set to: 0
 42457  012C82  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42458  012C86  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42459  012C8A  0E00               	movlw	low (__mediumconst shr (0+16))
 42460  012C8C  6EF8               	movwf	tblptru,c
 42461  012C8E  0E0D               	movlw	(high __ramtop+-1)
 42462  012C90  64F7               	cpfsgt	tblptrh,c
 42463  012C92  D003               	bra	i2u3308_47
 42464  012C94  0008               	tblrd		*
 42465  012C96  50F5               	movf	tablat,w,c
 42466  012C98  D005               	bra	i2u3308_40
 42467  012C9A                     i2u3308_47:
 42468  012C9A  CFF6 FFE9          	movff	tblptrl,fsr0l
 42469  012C9E  CFF7 FFEA          	movff	tblptrh,fsr0h
 42470  012CA2  50EF               	movf	indf0,w,c
 42471  012CA4                     i2u3308_40:
 42472                           
 42473                           ; Switch size 1, requested type "space"
 42474                           ; Number of cases is 1, Range of values is 48 to 48
 42475                           ; switch strategies available:
 42476                           ; Name         Instructions Cycles
 42477                           ; simple_byte            4     3 (average)
 42478                           ;	Chosen strategy is simple_byte
 42479  012CA4  0A30               	xorlw	48	; case 48
 42480  012CA6  B4D8               	btfsc	status,2,c
 42481  012CA8  D7E8               	goto	i2l1966
 42482                           
 42483                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 42484                           
 42485                           ;doprnt.c: 586: }
 42486                           
 42487                           ;doprnt.c: 585: break;
 42488  012CAA  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42489  012CAE  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42490  012CB2  0E00               	movlw	low (__mediumconst shr (0+16))
 42491  012CB4  6EF8               	movwf	tblptru,c
 42492  012CB6  0E0D               	movlw	(high __ramtop+-1)
 42493  012CB8  64F7               	cpfsgt	tblptrh,c
 42494  012CBA  D003               	bra	i2u3309_47
 42495  012CBC  0008               	tblrd		*
 42496  012CBE  50F5               	movf	tablat,w,c
 42497  012CC0  D005               	bra	i2u3309_40
 42498  012CC2                     i2u3309_47:
 42499  012CC2  CFF6 FFE9          	movff	tblptrl,fsr0l
 42500  012CC6  CFF7 FFEA          	movff	tblptrh,fsr0h
 42501  012CCA  50EF               	movf	indf0,w,c
 42502  012CCC                     i2u3309_40:
 42503  012CCC  EC38  F0D8         	call	i2_isdigit
 42504  012CD0  A0D8               	btfss	status,0,c
 42505  012CD2  D04B               	goto	i2u3313_40
 42506                           
 42507                           ;doprnt.c: 598: width = 0;
 42508  012CD4  0E00               	movlw	0
 42509  012CD6  0100               	movlb	0	; () banked
 42510  012CD8  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 42511  012CDA  0E00               	movlw	0
 42512  012CDC  6FAB               	movwf	i2__doprnt@width& (0+255),b
 42513  012CDE                     
 42514                           ;doprnt.c: 600: width *= 10;
 42515                           
 42516                           ; BSR set to: 0
 42517  012CDE  C0AB  F001         	movff	i2__doprnt@width,i2___wmul@multiplier
 42518  012CE2  C0AC  F002         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 42519  012CE6  0E00               	movlw	0
 42520  012CE8  6E04               	movwf	i2___wmul@multiplicand+1,c
 42521  012CEA  0E0A               	movlw	10
 42522  012CEC  6E03               	movwf	i2___wmul@multiplicand,c
 42523  012CEE  ECAD  F0D7         	call	i2___wmul	;wreg free
 42524  012CF2  C001  F0AB         	movff	?i2___wmul,i2__doprnt@width
 42525  012CF6  C002  F0AC         	movff	?i2___wmul+1,i2__doprnt@width+1
 42526                           
 42527                           ;doprnt.c: 601: width += *f++ - '0';
 42528  012CFA  0ED0               	movlw	208
 42529  012CFC  0100               	movlb	0	; () banked
 42530  012CFE  6F8E               	movwf	??i2__doprnt& (0+255),b
 42531  012D00  0EFF               	movlw	255
 42532  012D02  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 42533  012D04  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42534  012D08  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42535  012D0C  0E00               	movlw	low (__mediumconst shr (0+16))
 42536  012D0E  6EF8               	movwf	tblptru,c
 42537  012D10  0E0D               	movlw	(high __ramtop+-1)
 42538  012D12  64F7               	cpfsgt	tblptrh,c
 42539  012D14  D003               	bra	i2u3311_47
 42540  012D16  0008               	tblrd		*
 42541  012D18  50F5               	movf	tablat,w,c
 42542  012D1A  D005               	bra	i2u3311_40
 42543  012D1C                     i2u3311_47:
 42544  012D1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 42545  012D20  CFF7 FFEA          	movff	tblptrh,fsr0h
 42546  012D24  50EF               	movf	indf0,w,c
 42547  012D26                     i2u3311_40:
 42548  012D26  0100               	movlb	0	; () banked
 42549  012D28  6F90               	movwf	(??i2__doprnt+2)& (0+255),b
 42550  012D2A  6B91               	clrf	(??i2__doprnt+3)& (0+255),b
 42551  012D2C  518E               	movf	??i2__doprnt& (0+255),w,b
 42552  012D2E  2790               	addwf	(??i2__doprnt+2)& (0+255),f,b
 42553  012D30  518F               	movf	(??i2__doprnt+1)& (0+255),w,b
 42554  012D32  2391               	addwfc	(??i2__doprnt+3)& (0+255),f,b
 42555  012D34  5190               	movf	(??i2__doprnt+2)& (0+255),w,b
 42556  012D36  27AB               	addwf	i2__doprnt@width& (0+255),f,b
 42557  012D38  5191               	movf	(??i2__doprnt+3)& (0+255),w,b
 42558  012D3A  23AC               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 42559                           
 42560                           ; BSR set to: 0
 42561  012D3C  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42562  012D3E  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42563                           
 42564                           ; BSR set to: 0
 42565                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 42566  012D40  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42567  012D44  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42568  012D48  0E00               	movlw	low (__mediumconst shr (0+16))
 42569  012D4A  6EF8               	movwf	tblptru,c
 42570  012D4C  0E0D               	movlw	(high __ramtop+-1)
 42571  012D4E  64F7               	cpfsgt	tblptrh,c
 42572  012D50  D003               	bra	i2u3312_47
 42573  012D52  0008               	tblrd		*
 42574  012D54  50F5               	movf	tablat,w,c
 42575  012D56  D005               	bra	i2u3312_40
 42576  012D58                     i2u3312_47:
 42577  012D58  CFF6 FFE9          	movff	tblptrl,fsr0l
 42578  012D5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 42579  012D60  50EF               	movf	indf0,w,c
 42580  012D62                     i2u3312_40:
 42581  012D62  EC38  F0D8         	call	i2_isdigit
 42582  012D66  B0D8               	btfsc	status,0,c
 42583  012D68  D7BA               	goto	i2l1971
 42584  012D6A                     i2u3313_40:
 42585                           
 42586                           ;doprnt.c: 608: }
 42587                           ;doprnt.c: 611: if(*f == '.') {
 42588  012D6A  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42589  012D6E  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42590  012D72  0E00               	movlw	low (__mediumconst shr (0+16))
 42591  012D74  6EF8               	movwf	tblptru,c
 42592  012D76  0E0D               	movlw	(high __ramtop+-1)
 42593  012D78  64F7               	cpfsgt	tblptrh,c
 42594  012D7A  D003               	bra	i2u3314_47
 42595  012D7C  0008               	tblrd		*
 42596  012D7E  50F5               	movf	tablat,w,c
 42597  012D80  D005               	bra	i2u3314_40
 42598  012D82                     i2u3314_47:
 42599  012D82  CFF6 FFE9          	movff	tblptrl,fsr0l
 42600  012D86  CFF7 FFEA          	movff	tblptrh,fsr0h
 42601  012D8A  50EF               	movf	indf0,w,c
 42602  012D8C                     i2u3314_40:
 42603  012D8C  0A2E               	xorlw	46
 42604  012D8E  A4D8               	btfss	status,2,c
 42605  012D90  D048               	goto	i2l1973
 42606                           
 42607                           ;doprnt.c: 612: flag |= 0x4000;
 42608  012D92  0100               	movlb	0	; () banked
 42609  012D94  8DAE               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 42610                           
 42611                           ;doprnt.c: 613: f++;
 42612  012D96  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42613  012D98  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42614                           
 42615                           ; BSR set to: 0
 42616                           ;doprnt.c: 620: {
 42617                           ;doprnt.c: 621: prec = 0;
 42618  012D9A  0E00               	movlw	0
 42619  012D9C  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42620  012D9E  0E00               	movlw	0
 42621  012DA0  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42622                           
 42623                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 42624  012DA2  D029               	goto	i2l1974
 42625  012DA4                     
 42626                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 42627                           
 42628                           ; BSR set to: 0
 42629  012DA4  C0AF  F001         	movff	i2__doprnt@prec,i2___wmul@multiplier
 42630  012DA8  C0B0  F002         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 42631  012DAC  0E00               	movlw	0
 42632  012DAE  6E04               	movwf	i2___wmul@multiplicand+1,c
 42633  012DB0  0E0A               	movlw	10
 42634  012DB2  6E03               	movwf	i2___wmul@multiplicand,c
 42635  012DB4  ECAD  F0D7         	call	i2___wmul	;wreg free
 42636  012DB8  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42637  012DBC  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42638  012DC0  0E00               	movlw	low (__mediumconst shr (0+16))
 42639  012DC2  6EF8               	movwf	tblptru,c
 42640  012DC4  0E0D               	movlw	(high __ramtop+-1)
 42641  012DC6  64F7               	cpfsgt	tblptrh,c
 42642  012DC8  D003               	bra	i2u3316_47
 42643  012DCA  0008               	tblrd		*
 42644  012DCC  50F5               	movf	tablat,w,c
 42645  012DCE  D005               	bra	i2u3316_40
 42646  012DD0                     i2u3316_47:
 42647  012DD0  CFF6 FFE9          	movff	tblptrl,fsr0l
 42648  012DD4  CFF7 FFEA          	movff	tblptrh,fsr0h
 42649  012DD8  50EF               	movf	indf0,w,c
 42650  012DDA                     i2u3316_40:
 42651  012DDA  0100               	movlb	0	; () banked
 42652  012DDC  6F8E               	movwf	??i2__doprnt& (0+255),b
 42653  012DDE  518E               	movf	??i2__doprnt& (0+255),w,b
 42654  012DE0  2601               	addwf	?i2___wmul,f,c
 42655  012DE2  0E00               	movlw	0
 42656  012DE4  2202               	addwfc	?i2___wmul+1,f,c
 42657  012DE6  0ED0               	movlw	208
 42658  012DE8  2401               	addwf	?i2___wmul,w,c
 42659  012DEA  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42660  012DEC  0EFF               	movlw	255
 42661  012DEE  2002               	addwfc	?i2___wmul+1,w,c
 42662  012DF0  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42663                           
 42664                           ; BSR set to: 0
 42665  012DF2  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42666  012DF4  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42667  012DF6                     i2l1974:
 42668                           
 42669                           ; BSR set to: 0
 42670                           
 42671                           ; BSR set to: 0
 42672  012DF6  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42673  012DFA  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42674  012DFE  0E00               	movlw	low (__mediumconst shr (0+16))
 42675  012E00  6EF8               	movwf	tblptru,c
 42676  012E02  0E0D               	movlw	(high __ramtop+-1)
 42677  012E04  64F7               	cpfsgt	tblptrh,c
 42678  012E06  D003               	bra	i2u3317_47
 42679  012E08  0008               	tblrd		*
 42680  012E0A  50F5               	movf	tablat,w,c
 42681  012E0C  D005               	bra	i2u3317_40
 42682  012E0E                     i2u3317_47:
 42683  012E0E  CFF6 FFE9          	movff	tblptrl,fsr0l
 42684  012E12  CFF7 FFEA          	movff	tblptrh,fsr0h
 42685  012E16  50EF               	movf	indf0,w,c
 42686  012E18                     i2u3317_40:
 42687  012E18  EC38  F0D8         	call	i2_isdigit
 42688  012E1C  A0D8               	btfss	status,0,c
 42689  012E1E  D12A               	goto	i2l1979
 42690  012E20  D7C1               	goto	i2l1975
 42691  012E22                     i2l1973:
 42692                           
 42693                           ;doprnt.c: 626: prec = 0;
 42694  012E22  0E00               	movlw	0
 42695  012E24  0100               	movlb	0	; () banked
 42696  012E26  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42697  012E28  0E00               	movlw	0
 42698  012E2A  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42699                           
 42700                           ; BSR set to: 0
 42701                           ;doprnt.c: 628: flag |= 0x1000;
 42702  012E2C  89AE               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 42703                           
 42704                           ; BSR set to: 0
 42705                           ;doprnt.c: 635: switch(c = *f++) {
 42706                           
 42707                           ;doprnt.c: 630: }
 42708                           ;doprnt.c: 633: loop:
 42709                           
 42710                           ; BSR set to: 0
 42711  012E2E  D122               	goto	i2l1979
 42712  012E30                     
 42713                           ; BSR set to: 0
 42714                           ;doprnt.c: 643: flag |= 0x10;
 42715                           
 42716                           ; BSR set to: 0
 42717  012E30  89AD               	bsf	i2__doprnt@flag& (0+255),4,b
 42718                           
 42719                           ;doprnt.c: 644: goto loop;
 42720  012E32  D120               	goto	i2l1979
 42721  012E34                     
 42722                           ; BSR set to: 0
 42723                           ;doprnt.c: 663: flag |= 0x400;
 42724                           
 42725                           ; BSR set to: 0
 42726  012E34  85AE               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 42727                           
 42728                           ; BSR set to: 0
 42729                           ;doprnt.c: 698: case 'i':
 42730                           ;doprnt.c: 699: break;
 42731                           
 42732                           ; BSR set to: 0
 42733                           
 42734                           ;doprnt.c: 697: case 'd':
 42735                           
 42736                           ;doprnt.c: 664: break;
 42737  012E36  D159               	goto	i2l1984
 42738  012E38                     
 42739                           ; BSR set to: 0
 42740                           ;doprnt.c: 718: case 'x':
 42741                           ;doprnt.c: 721: flag |= 0x80;
 42742                           
 42743                           ; BSR set to: 0
 42744                           
 42745                           ; BSR set to: 0
 42746  012E38  8FAD               	bsf	i2__doprnt@flag& (0+255),7,b
 42747                           
 42748                           ;doprnt.c: 723: break;
 42749  012E3A  D157               	goto	i2l1984
 42750  012E3C                     
 42751                           ; BSR set to: 0
 42752                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 42753                           
 42754                           ; BSR set to: 0
 42755  012E3C  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 42756  012E40  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42757  012E44  CFDF F08E          	movff	indf2,??i2__doprnt
 42758  012E48  0E02               	movlw	2
 42759  012E4A  26DE               	addwf	postinc2,f,c
 42760  012E4C  CFDF F08F          	movff	indf2,??i2__doprnt+1
 42761  012E50  0E00               	movlw	0
 42762  012E52  22DD               	addwfc	postdec2,f,c
 42763  012E54  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42764  012E58  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42765  012E5C  CFDE F099          	movff	postinc2,i2__doprnt@cp
 42766  012E60  CFDD F09A          	movff	postdec2,i2__doprnt@cp+1
 42767                           
 42768                           ; BSR set to: 0
 42769                           ;doprnt.c: 740: if(!cp)
 42770  012E64  5199               	movf	i2__doprnt@cp& (0+255),w,b
 42771  012E66  119A               	iorwf	(i2__doprnt@cp+1)& (0+255),w,b
 42772  012E68  A4D8               	btfss	status,2,c
 42773  012E6A  D004               	goto	i2l1990
 42774                           
 42775                           ; BSR set to: 0
 42776                           ;doprnt.c: 741: cp = "(null)";
 42777  012E6C  0E9B               	movlw	low STR_191
 42778  012E6E  6F99               	movwf	i2__doprnt@cp& (0+255),b
 42779  012E70  0EFF               	movlw	high STR_191
 42780  012E72  6F9A               	movwf	(i2__doprnt@cp+1)& (0+255),b
 42781  012E74                     i2l1990:
 42782                           
 42783                           ; BSR set to: 0
 42784                           ;doprnt.c: 745: len = 0;
 42785                           
 42786                           ; BSR set to: 0
 42787  012E74  0E00               	movlw	0
 42788  012E76  6F9C               	movwf	(i2__doprnt@len+1)& (0+255),b
 42789  012E78  0E00               	movlw	0
 42790  012E7A  6F9B               	movwf	i2__doprnt@len& (0+255),b
 42791                           
 42792                           ;doprnt.c: 746: while(cp[len])
 42793  012E7C  D003               	goto	i2l1991
 42794  012E7E                     
 42795                           ;doprnt.c: 747: len++;
 42796                           
 42797                           ; BSR set to: 0
 42798  012E7E  0100               	movlb	0	; () banked
 42799  012E80  4B9B               	infsnz	i2__doprnt@len& (0+255),f,b
 42800  012E82  2B9C               	incf	(i2__doprnt@len+1)& (0+255),f,b
 42801  012E84                     i2l1991:
 42802                           
 42803                           ; BSR set to: 0
 42804                           
 42805                           ; BSR set to: 0
 42806  012E84  519B               	movf	i2__doprnt@len& (0+255),w,b
 42807  012E86  2599               	addwf	i2__doprnt@cp& (0+255),w,b
 42808  012E88  6F8E               	movwf	??i2__doprnt& (0+255),b
 42809  012E8A  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 42810  012E8C  219A               	addwfc	(i2__doprnt@cp+1)& (0+255),w,b
 42811  012E8E  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 42812  012E90  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 42813  012E94  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 42814  012E98  0E00               	movlw	low (__mediumconst shr (0+16))
 42815  012E9A  6EF8               	movwf	tblptru,c
 42816  012E9C  0E0D               	movlw	(high __ramtop+-1)
 42817  012E9E  64F7               	cpfsgt	tblptrh,c
 42818  012EA0  D003               	bra	i2u3320_47
 42819  012EA2  0008               	tblrd		*
 42820  012EA4  50F5               	movf	tablat,w,c
 42821  012EA6  D005               	bra	i2u3320_40
 42822  012EA8                     i2u3320_47:
 42823  012EA8  CFF6 FFE9          	movff	tblptrl,fsr0l
 42824  012EAC  CFF7 FFEA          	movff	tblptrh,fsr0h
 42825  012EB0  50EF               	movf	indf0,w,c
 42826  012EB2                     i2u3320_40:
 42827  012EB2  0900               	iorlw	0
 42828  012EB4  A4D8               	btfss	status,2,c
 42829  012EB6  D7E3               	goto	i2l1992
 42830  012EB8                     i2u3321_40:
 42831                           
 42832                           ;doprnt.c: 753: if(prec && prec < len)
 42833                           
 42834                           ;doprnt.c: 750: dostring:
 42835  012EB8  0100               	movlb	0	; () banked
 42836  012EBA  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 42837  012EBC  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42838  012EBE  B4D8               	btfsc	status,2,c
 42839  012EC0  D00A               	goto	i2l1995
 42840                           
 42841                           ; BSR set to: 0
 42842  012EC2  519B               	movf	i2__doprnt@len& (0+255),w,b
 42843  012EC4  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 42844  012EC6  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 42845  012EC8  59B0               	subwfb	(i2__doprnt@prec+1)& (0+255),w,b
 42846  012ECA  B0D8               	btfsc	status,0,c
 42847  012ECC  D004               	goto	i2l1995
 42848                           
 42849                           ; BSR set to: 0
 42850                           ;doprnt.c: 754: len = prec;
 42851  012ECE  C0AF  F09B         	movff	i2__doprnt@prec,i2__doprnt@len
 42852  012ED2  C0B0  F09C         	movff	i2__doprnt@prec+1,i2__doprnt@len+1
 42853  012ED6                     i2l1995:
 42854                           
 42855                           ; BSR set to: 0
 42856                           ;doprnt.c: 757: if(width > len)
 42857                           
 42858                           ; BSR set to: 0
 42859  012ED6  51AB               	movf	i2__doprnt@width& (0+255),w,b
 42860  012ED8  5D9B               	subwf	i2__doprnt@len& (0+255),w,b
 42861  012EDA  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42862  012EDC  599C               	subwfb	(i2__doprnt@len+1)& (0+255),w,b
 42863  012EDE  B0D8               	btfsc	status,0,c
 42864  012EE0  D005               	goto	i2l1996
 42865                           
 42866                           ; BSR set to: 0
 42867                           ;doprnt.c: 758: width -= len;
 42868  012EE2  519B               	movf	i2__doprnt@len& (0+255),w,b
 42869  012EE4  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 42870  012EE6  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 42871  012EE8  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 42872  012EEA  D038               	goto	i2l2001
 42873  012EEC                     i2l1996:
 42874                           
 42875                           ; BSR set to: 0
 42876                           ;doprnt.c: 759: else
 42877                           ;doprnt.c: 760: width = 0;
 42878                           
 42879                           ; BSR set to: 0
 42880  012EEC  0E00               	movlw	0
 42881  012EEE  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 42882  012EF0  0E00               	movlw	0
 42883  012EF2  6FAB               	movwf	i2__doprnt@width& (0+255),b
 42884                           
 42885                           ; BSR set to: 0
 42886                           ;doprnt.c: 764: while(width--)
 42887  012EF4  D033               	goto	i2l2001
 42888  012EF6                     i2l22713:
 42889                           
 42890                           ; BSR set to: 0
 42891                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 42892  012EF6  EE20 F002          	lfsr	2,2
 42893  012EFA  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42894  012EFC  26D9               	addwf	fsr2l,f,c
 42895  012EFE  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42896  012F00  22DA               	addwfc	fsr2h,f,c
 42897  012F02  50DE               	movf	postinc2,w,c
 42898  012F04  10DE               	iorwf	postinc2,w,c
 42899  012F06  10DE               	iorwf	postinc2,w,c
 42900  012F08  B4D8               	btfsc	status,2,c
 42901  012F0A  D013               	goto	i2l2000
 42902                           
 42903                           ; BSR set to: 0
 42904  012F0C  EE20 F002          	lfsr	2,2
 42905  012F10  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42906  012F12  26D9               	addwf	fsr2l,f,c
 42907  012F14  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42908  012F16  22DA               	addwfc	fsr2h,f,c
 42909  012F18  D801               	call	i2u3326_48
 42910  012F1A  D020               	goto	i2l2001
 42911  012F1C                     i2u3326_48:
 42912  012F1C  0005               	push	
 42913  012F1E  6EFA               	movwf	pclath,c
 42914  012F20  50DE               	movf	postinc2,w,c
 42915  012F22  6EFD               	movwf	tosl,c
 42916  012F24  50DE               	movf	postinc2,w,c
 42917  012F26  6EFE               	movwf	tosh,c
 42918  012F28  50DE               	movf	postinc2,w,c
 42919  012F2A  6EFF               	movwf	tosu,c
 42920  012F2C  50FA               	movf	pclath,w,c
 42921  012F2E  0E20               	movlw	32
 42922  012F30  0012               	return		;indir
 42923  012F32                     i2l2000:
 42924  012F32  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42925  012F36  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42926  012F3A  CFDE F08E          	movff	postinc2,??i2__doprnt
 42927  012F3E  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42928  012F42  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42929  012F46  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42930  012F4A  0E20               	movlw	32
 42931  012F4C  6EDF               	movwf	indf2,c
 42932  012F4E  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42933  012F52  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42934  012F56  2ADE               	incf	postinc2,f,c
 42935  012F58  0E00               	movlw	0
 42936  012F5A  22DD               	addwfc	postdec2,f,c
 42937  012F5C                     i2l2001:
 42938  012F5C  0100               	movlb	0	; () banked
 42939  012F5E  07AB               	decf	i2__doprnt@width& (0+255),f,b
 42940  012F60  A0D8               	btfss	status,0,c
 42941  012F62  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42942  012F64  29AB               	incf	i2__doprnt@width& (0+255),w,b
 42943  012F66  E1C7               	bnz	i2l22713
 42944  012F68  29AC               	incf	(i2__doprnt@width+1)& (0+255),w,b
 42945  012F6A  B4D8               	btfsc	status,2,c
 42946  012F6C  D05B               	goto	i2l2006
 42947  012F6E  D7C3               	goto	i2l1999
 42948  012F70                     i2l22723:
 42949                           
 42950                           ; BSR set to: 0
 42951                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 42952  012F70  EE20 F002          	lfsr	2,2
 42953  012F74  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42954  012F76  26D9               	addwf	fsr2l,f,c
 42955  012F78  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42956  012F7A  22DA               	addwfc	fsr2h,f,c
 42957  012F7C  50DE               	movf	postinc2,w,c
 42958  012F7E  10DE               	iorwf	postinc2,w,c
 42959  012F80  10DE               	iorwf	postinc2,w,c
 42960  012F82  B4D8               	btfsc	status,2,c
 42961  012F84  D027               	goto	i2l2005
 42962                           
 42963                           ; BSR set to: 0
 42964  012F86  EE20 F002          	lfsr	2,2
 42965  012F8A  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42966  012F8C  26D9               	addwf	fsr2l,f,c
 42967  012F8E  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42968  012F90  22DA               	addwfc	fsr2h,f,c
 42969  012F92  D801               	call	i2u3329_48
 42970  012F94  D01B               	goto	i2u3329_49
 42971  012F96                     i2u3329_48:
 42972  012F96  0005               	push	
 42973  012F98  6EFA               	movwf	pclath,c
 42974  012F9A  50DE               	movf	postinc2,w,c
 42975  012F9C  6EFD               	movwf	tosl,c
 42976  012F9E  50DE               	movf	postinc2,w,c
 42977  012FA0  6EFE               	movwf	tosh,c
 42978  012FA2  50DE               	movf	postinc2,w,c
 42979  012FA4  6EFF               	movwf	tosu,c
 42980  012FA6  50FA               	movf	pclath,w,c
 42981  012FA8  C099  FFF6         	movff	i2__doprnt@cp,tblptrl
 42982  012FAC  C09A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 42983  012FB0  0E00               	movlw	low (__mediumconst shr (0+16))
 42984  012FB2  6EF8               	movwf	tblptru,c
 42985  012FB4  0E0D               	movlw	(high __ramtop+-1)
 42986  012FB6  64F7               	cpfsgt	tblptrh,c
 42987  012FB8  D003               	bra	i2u3330_47
 42988  012FBA  0008               	tblrd		*
 42989  012FBC  50F5               	movf	tablat,w,c
 42990  012FBE  D005               	bra	i2u3330_40
 42991  012FC0                     i2u3330_47:
 42992  012FC0  CFF6 FFE9          	movff	tblptrl,fsr0l
 42993  012FC4  CFF7 FFEA          	movff	tblptrh,fsr0h
 42994  012FC8  50EF               	movf	indf0,w,c
 42995  012FCA                     i2u3330_40:
 42996  012FCA  0012               	return		;indir
 42997  012FCC                     i2u3329_49:
 42998  012FCC  0100               	movlb	0	; () banked
 42999  012FCE  4B99               	infsnz	i2__doprnt@cp& (0+255),f,b
 43000  012FD0  2B9A               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 43001  012FD2  D028               	goto	i2l2006
 43002  012FD4                     i2l2005:
 43003                           
 43004                           ; BSR set to: 0
 43005                           
 43006                           ; BSR set to: 0
 43007  012FD4  C099  FFF6         	movff	i2__doprnt@cp,tblptrl
 43008  012FD8  C09A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 43009  012FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 43010  012FDE  6EF8               	movwf	tblptru,c
 43011  012FE0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43012  012FE4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43013  012FE8  CFDE F08E          	movff	postinc2,??i2__doprnt
 43014  012FEC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43015  012FF0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43016  012FF4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43017  012FF8  0E0D               	movlw	(high __ramtop+-1)
 43018  012FFA  64F7               	cpfsgt	tblptrh,c
 43019  012FFC  D003               	bra	i2u3331_47
 43020  012FFE  0008               	tblrd		*
 43021  013000  50F5               	movf	tablat,w,c
 43022  013002  D005               	bra	i2u3331_40
 43023  013004                     i2u3331_47:
 43024  013004  CFF6 FFE9          	movff	tblptrl,fsr0l
 43025  013008  CFF7 FFEA          	movff	tblptrh,fsr0h
 43026  01300C  50EF               	movf	indf0,w,c
 43027  01300E                     i2u3331_40:
 43028  01300E  6EDF               	movwf	indf2,c
 43029  013010  0100               	movlb	0	; () banked
 43030  013012  4B99               	infsnz	i2__doprnt@cp& (0+255),f,b
 43031  013014  2B9A               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 43032                           
 43033                           ; BSR set to: 0
 43034  013016  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43035  01301A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43036  01301E  2ADE               	incf	postinc2,f,c
 43037  013020  0E00               	movlw	0
 43038  013022  22DD               	addwfc	postdec2,f,c
 43039  013024                     i2l2006:
 43040                           
 43041                           ; BSR set to: 0
 43042                           
 43043                           ; BSR set to: 0
 43044                           
 43045                           ; BSR set to: 0
 43046  013024  079B               	decf	i2__doprnt@len& (0+255),f,b
 43047  013026  A0D8               	btfss	status,0,c
 43048  013028  079C               	decf	(i2__doprnt@len+1)& (0+255),f,b
 43049  01302A  299B               	incf	i2__doprnt@len& (0+255),w,b
 43050  01302C  E1A1               	bnz	i2l22723
 43051  01302E  299C               	incf	(i2__doprnt@len+1)& (0+255),w,b
 43052  013030  B4D8               	btfsc	status,2,c
 43053  013032  EF55  F0A0         	goto	i2u3417_40
 43054  013036  D79C               	goto	i2l2004
 43055  013038                     
 43056                           ; BSR set to: 0
 43057                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 43058                           
 43059                           ; BSR set to: 0
 43060  013038  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 43061  01303C  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 43062  013040  CFDF F08E          	movff	indf2,??i2__doprnt
 43063  013044  0E02               	movlw	2
 43064  013046  26DE               	addwf	postinc2,f,c
 43065  013048  CFDF F08F          	movff	indf2,??i2__doprnt+1
 43066  01304C  0E00               	movlw	0
 43067  01304E  22DD               	addwfc	postdec2,f,c
 43068  013050  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43069  013054  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43070  013058  50DF               	movf	indf2,w,c
 43071  01305A  6FB1               	movwf	i2__doprnt@c& (0+255),b
 43072  01305C                     
 43073                           ; BSR set to: 0
 43074                           ;doprnt.c: 805: cp = (char *)&c;
 43075                           
 43076                           ; BSR set to: 0
 43077  01305C  0EB1               	movlw	low i2__doprnt@c
 43078  01305E  6F99               	movwf	i2__doprnt@cp& (0+255),b
 43079  013060  0E00               	movlw	high i2__doprnt@c
 43080  013062  6F9A               	movwf	(i2__doprnt@cp+1)& (0+255),b
 43081                           
 43082                           ; BSR set to: 0
 43083                           ;doprnt.c: 806: len = 1;
 43084  013064  0E00               	movlw	0
 43085  013066  6F9C               	movwf	(i2__doprnt@len+1)& (0+255),b
 43086  013068  0E01               	movlw	1
 43087  01306A  6F9B               	movwf	i2__doprnt@len& (0+255),b
 43088                           
 43089                           ;doprnt.c: 807: goto dostring;
 43090  01306C  D725               	goto	i2u3321_40
 43091  01306E                     
 43092                           ; BSR set to: 0
 43093                           ;doprnt.c: 818: flag |= 0xC0;
 43094                           
 43095                           ; BSR set to: 0
 43096  01306E  0EC0               	movlw	192
 43097  013070  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 43098                           
 43099                           ; BSR set to: 0
 43100                           ;doprnt.c: 822: }
 43101                           
 43102                           ;doprnt.c: 819: break;
 43103  013072  D03B               	goto	i2l1984
 43104  013074                     i2l1979:
 43105                           
 43106                           ; BSR set to: 0
 43107  013074  0100               	movlb	0	; () banked
 43108  013076  518A               	movf	i2__doprnt@f& (0+255),w,b
 43109  013078  6F8E               	movwf	??i2__doprnt& (0+255),b
 43110  01307A  518B               	movf	(i2__doprnt@f+1)& (0+255),w,b
 43111  01307C  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43112  01307E  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 43113  013080  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 43114  013082  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 43115  013086  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 43116  01308A  0E00               	movlw	low (__mediumconst shr (0+16))
 43117  01308C  6EF8               	movwf	tblptru,c
 43118  01308E  0E0D               	movlw	(high __ramtop+-1)
 43119  013090  64F7               	cpfsgt	tblptrh,c
 43120  013092  D003               	bra	i2u3333_47
 43121  013094  0008               	tblrd		*
 43122  013096  50F5               	movf	tablat,w,c
 43123  013098  D005               	bra	i2u3333_40
 43124  01309A                     i2u3333_47:
 43125  01309A  CFF6 FFE9          	movff	tblptrl,fsr0l
 43126  01309E  CFF7 FFEA          	movff	tblptrh,fsr0h
 43127  0130A2  50EF               	movf	indf0,w,c
 43128  0130A4                     i2u3333_40:
 43129  0130A4  0100               	movlb	0	; () banked
 43130  0130A6  6FB1               	movwf	i2__doprnt@c& (0+255),b
 43131  0130A8  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43132                           
 43133                           ; Switch size 1, requested type "space"
 43134                           ; Number of cases is 10, Range of values is 0 to 120
 43135                           ; switch strategies available:
 43136                           ; Name         Instructions Cycles
 43137                           ; simple_byte           31    16 (average)
 43138                           ;	Chosen strategy is simple_byte
 43139  0130AA  0A00               	xorlw	0	; case 0
 43140  0130AC  B4D8               	btfsc	status,2,c
 43141  0130AE  EF73  F0A0         	goto	i2u3419_40
 43142  0130B2  0A58               	xorlw	88	; case 88
 43143  0130B4  B4D8               	btfsc	status,2,c
 43144  0130B6  D6C0               	goto	i2l1987
 43145  0130B8  0A3B               	xorlw	59	; case 99
 43146  0130BA  B4D8               	btfsc	status,2,c
 43147  0130BC  D7BD               	goto	i2l2008
 43148  0130BE  0A07               	xorlw	7	; case 100
 43149  0130C0  B4D8               	btfsc	status,2,c
 43150  0130C2  D013               	goto	i2l1984
 43151  0130C4  0A02               	xorlw	2	; case 102
 43152  0130C6  B4D8               	btfsc	status,2,c
 43153  0130C8  D6B5               	goto	i2l1983
 43154  0130CA  0A0F               	xorlw	15	; case 105
 43155  0130CC  B4D8               	btfsc	status,2,c
 43156  0130CE  D00D               	goto	i2l1984
 43157  0130D0  0A05               	xorlw	5	; case 108
 43158  0130D2  B4D8               	btfsc	status,2,c
 43159  0130D4  D6AD               	goto	i2l1982
 43160  0130D6  0A1F               	xorlw	31	; case 115
 43161  0130D8  B4D8               	btfsc	status,2,c
 43162  0130DA  D6B0               	goto	i2l1989
 43163  0130DC  0A06               	xorlw	6	; case 117
 43164  0130DE  B4D8               	btfsc	status,2,c
 43165  0130E0  D7C6               	goto	i2l2010
 43166  0130E2  0A0D               	xorlw	13	; case 120
 43167  0130E4  B4D8               	btfsc	status,2,c
 43168  0130E6  D6A8               	goto	i2l1987
 43169  0130E8  D7B9               	goto	i2l2009
 43170  0130EA                     i2l1984:
 43171                           
 43172                           ; BSR set to: 0
 43173                           ;doprnt.c: 825: if(flag & (0x700)) {
 43174                           
 43175                           ; BSR set to: 0
 43176  0130EA  0E07               	movlw	7
 43177  0130EC  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43178  0130EE  B4D8               	btfsc	status,2,c
 43179  0130F0  EF6A  F09D         	goto	i2l2011
 43180                           
 43181                           ; BSR set to: 0
 43182                           ;doprnt.c: 827: if(flag & 0x1000)
 43183  0130F4  A9AE               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 43184  0130F6  D004               	goto	i2l2012
 43185                           
 43186                           ; BSR set to: 0
 43187                           ;doprnt.c: 829: prec = 6;
 43188  0130F8  0E00               	movlw	0
 43189  0130FA  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 43190  0130FC  0E06               	movlw	6
 43191  0130FE  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 43192  013100                     i2l2012:
 43193                           
 43194                           ; BSR set to: 0
 43195                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 43196                           
 43197                           ; BSR set to: 0
 43198  013100  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 43199  013104  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 43200  013108  CFDF F08E          	movff	indf2,??i2__doprnt
 43201  01310C  0E04               	movlw	4
 43202  01310E  26DE               	addwf	postinc2,f,c
 43203  013110  CFDF F08F          	movff	indf2,??i2__doprnt+1
 43204  013114  0E00               	movlw	0
 43205  013116  22DD               	addwfc	postdec2,f,c
 43206  013118  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43207  01311C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43208  013120  CFDE F0A3          	movff	postinc2,i2__doprnt@fval
 43209  013124  CFDE F0A4          	movff	postinc2,i2__doprnt@fval+1
 43210  013128  CFDE F0A5          	movff	postinc2,i2__doprnt@fval+2
 43211  01312C  CFDE F0A6          	movff	postinc2,i2__doprnt@fval+3
 43212                           
 43213                           ; BSR set to: 0
 43214                           ;doprnt.c: 831: if(fval < 0.0) {
 43215  013130  AFA6               	btfss	(i2__doprnt@fval+3)& (0+255),7,b
 43216  013132  D015               	goto	i2l2013
 43217                           
 43218                           ; BSR set to: 0
 43219                           ;doprnt.c: 832: fval = -fval;
 43220  013134  C0A3  F02C         	movff	i2__doprnt@fval,i2___flneg@f1
 43221  013138  C0A4  F02D         	movff	i2__doprnt@fval+1,i2___flneg@f1+1
 43222  01313C  C0A5  F02E         	movff	i2__doprnt@fval+2,i2___flneg@f1+2
 43223  013140  C0A6  F02F         	movff	i2__doprnt@fval+3,i2___flneg@f1+3
 43224  013144  EC0C  F0D7         	call	i2___flneg
 43225  013148  C02C  F0A3         	movff	?i2___flneg,i2__doprnt@fval
 43226  01314C  C02D  F0A4         	movff	?i2___flneg+1,i2__doprnt@fval+1
 43227  013150  C02E  F0A5         	movff	?i2___flneg+2,i2__doprnt@fval+2
 43228  013154  C02F  F0A6         	movff	?i2___flneg+3,i2__doprnt@fval+3
 43229                           
 43230                           ;doprnt.c: 833: flag |= 0x03;
 43231  013158  0E03               	movlw	3
 43232  01315A  0100               	movlb	0	; () banked
 43233  01315C  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 43234  01315E                     i2l2013:
 43235                           
 43236                           ; BSR set to: 0
 43237                           ;doprnt.c: 834: }
 43238                           ;doprnt.c: 835: exp = 0;
 43239                           
 43240                           ; BSR set to: 0
 43241  01315E  0E00               	movlw	0
 43242  013160  6F9E               	movwf	(i2__doprnt@exp+1)& (0+255),b
 43243  013162  0E00               	movlw	0
 43244  013164  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 43245                           
 43246                           ; BSR set to: 0
 43247                           ;doprnt.c: 836: if( fval!=0) {
 43248  013166  51A3               	movf	i2__doprnt@fval& (0+255),w,b
 43249  013168  11A4               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 43250  01316A  11A5               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 43251  01316C  11A6               	iorwf	(i2__doprnt@fval+3)& (0+255),w,b
 43252  01316E  B4D8               	btfsc	status,2,c
 43253  013170  D082               	goto	i2l2018
 43254                           
 43255                           ; BSR set to: 0
 43256                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 43257  013172  35A5               	rlcf	(i2__doprnt@fval+2)& (0+255),w,b
 43258  013174  35A6               	rlcf	(i2__doprnt@fval+3)& (0+255),w,b
 43259  013176  0F82               	addlw	130
 43260  013178  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 43261  01317A  6B9E               	clrf	(i2__doprnt@exp+1)& (0+255),b
 43262  01317C  0EFF               	movlw	255
 43263  01317E  239E               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 43264                           
 43265                           ; BSR set to: 0
 43266                           ;doprnt.c: 838: exp--;
 43267  013180  079D               	decf	i2__doprnt@exp& (0+255),f,b
 43268  013182  A0D8               	btfss	status,0,c
 43269  013184  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 43270                           
 43271                           ; BSR set to: 0
 43272                           ;doprnt.c: 839: exp *= 3;
 43273  013186  C09D  F001         	movff	i2__doprnt@exp,i2___wmul@multiplier
 43274  01318A  C09E  F002         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 43275  01318E  0E00               	movlw	0
 43276  013190  6E04               	movwf	i2___wmul@multiplicand+1,c
 43277  013192  0E03               	movlw	3
 43278  013194  6E03               	movwf	i2___wmul@multiplicand,c
 43279  013196  ECAD  F0D7         	call	i2___wmul	;wreg free
 43280  01319A  C001  F09D         	movff	?i2___wmul,i2__doprnt@exp
 43281  01319E  C002  F09E         	movff	?i2___wmul+1,i2__doprnt@exp+1
 43282                           
 43283                           ;doprnt.c: 840: exp /= 10;
 43284  0131A2  C09D  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 43285  0131A6  C09E  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 43286  0131AA  0E00               	movlw	0
 43287  0131AC  6E0A               	movwf	i2___awdiv@divisor+1,c
 43288  0131AE  0E0A               	movlw	10
 43289  0131B0  6E09               	movwf	i2___awdiv@divisor,c
 43290  0131B2  ECF6  F0CD         	call	i2___awdiv	;wreg free
 43291  0131B6  C007  F09D         	movff	?i2___awdiv,i2__doprnt@exp
 43292  0131BA  C008  F09E         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 43293                           
 43294                           ;doprnt.c: 841: if(exp < 0)
 43295  0131BE  0100               	movlb	0	; () banked
 43296  0131C0  AF9E               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 43297  0131C2  D003               	goto	i2l2015
 43298                           
 43299                           ; BSR set to: 0
 43300                           ;doprnt.c: 842: exp--;
 43301  0131C4  079D               	decf	i2__doprnt@exp& (0+255),f,b
 43302  0131C6  A0D8               	btfss	status,0,c
 43303  0131C8  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 43304  0131CA                     i2l2015:
 43305                           
 43306                           ; BSR set to: 0
 43307                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 43308                           
 43309                           ; BSR set to: 0
 43310  0131CA  519D               	movf	i2__doprnt@exp& (0+255),w,b
 43311  0131CC  0800               	sublw	0
 43312  0131CE  EC2C  F0A8         	call	i2_scale
 43313  0131D2  C049  F09F         	movff	?i2_scale,i2__doprnt@tmpval
 43314  0131D6  C04A  F0A0         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 43315  0131DA  C04B  F0A1         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 43316  0131DE  C04C  F0A2         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 43317                           
 43318                           ;doprnt.c: 847: tmpval.integ *= fval;
 43319  0131E2  C09F  F030         	movff	i2__doprnt@tmpval,i2___flmul@b
 43320  0131E6  C0A0  F031         	movff	i2__doprnt@tmpval+1,i2___flmul@b+1
 43321  0131EA  C0A1  F032         	movff	i2__doprnt@tmpval+2,i2___flmul@b+2
 43322  0131EE  C0A2  F033         	movff	i2__doprnt@tmpval+3,i2___flmul@b+3
 43323  0131F2  C0A3  F034         	movff	i2__doprnt@fval,i2___flmul@a
 43324  0131F6  C0A4  F035         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 43325  0131FA  C0A5  F036         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 43326  0131FE  C0A6  F037         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 43327  013202  ECC9  F0AD         	call	i2___flmul	;wreg free
 43328  013206  C030  F09F         	movff	?i2___flmul,i2__doprnt@tmpval
 43329  01320A  C031  F0A0         	movff	?i2___flmul+1,i2__doprnt@tmpval+1
 43330  01320E  C032  F0A1         	movff	?i2___flmul+2,i2__doprnt@tmpval+2
 43331  013212  C033  F0A2         	movff	?i2___flmul+3,i2__doprnt@tmpval+3
 43332                           
 43333                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 43334  013216  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 43335  01321A  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 43336  01321E  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 43337  013222  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 43338  013226  0E00               	movlw	0
 43339  013228  6E38               	movwf	i2___flge@ff2,c
 43340  01322A  0E00               	movlw	0
 43341  01322C  6E39               	movwf	i2___flge@ff2+1,c
 43342  01322E  0E80               	movlw	128
 43343  013230  6E3A               	movwf	i2___flge@ff2+2,c
 43344  013232  0E3F               	movlw	63
 43345  013234  6E3B               	movwf	i2___flge@ff2+3,c
 43346  013236  EC1F  F0C7         	call	i2___flge	;wreg free
 43347  01323A  B0D8               	btfsc	status,0,c
 43348  01323C  D005               	goto	i2l2016
 43349                           
 43350                           ;doprnt.c: 849: exp--;
 43351  01323E  0100               	movlb	0	; () banked
 43352  013240  079D               	decf	i2__doprnt@exp& (0+255),f,b
 43353  013242  A0D8               	btfss	status,0,c
 43354  013244  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 43355  013246  D017               	goto	i2l2018
 43356  013248                     i2l2016:
 43357                           
 43358                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 43359                           
 43360                           ; BSR set to: 0
 43361  013248  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 43362  01324C  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 43363  013250  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 43364  013254  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 43365  013258  0E00               	movlw	0
 43366  01325A  6E38               	movwf	i2___flge@ff2,c
 43367  01325C  0E00               	movlw	0
 43368  01325E  6E39               	movwf	i2___flge@ff2+1,c
 43369  013260  0E20               	movlw	32
 43370  013262  6E3A               	movwf	i2___flge@ff2+2,c
 43371  013264  0E41               	movlw	65
 43372  013266  6E3B               	movwf	i2___flge@ff2+3,c
 43373  013268  EC1F  F0C7         	call	i2___flge	;wreg free
 43374  01326C  A0D8               	btfss	status,0,c
 43375  01326E  D003               	goto	i2l2018
 43376                           
 43377                           ;doprnt.c: 851: exp++;
 43378  013270  0100               	movlb	0	; () banked
 43379  013272  4B9D               	infsnz	i2__doprnt@exp& (0+255),f,b
 43380  013274  2B9E               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 43381  013276                     i2l2018:
 43382                           
 43383                           ;doprnt.c: 852: }
 43384                           ;doprnt.c: 1112: if(prec <= 12)
 43385                           
 43386                           ; BSR set to: 0
 43387                           
 43388                           ; BSR set to: 0
 43389                           
 43390                           ; BSR set to: 0
 43391  013276  0100               	movlb	0	; () banked
 43392  013278  BFB0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 43393  01327A  D006               	goto	i2u3341_40
 43394  01327C  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43395  01327E  E121               	bnz	i2l22795
 43396  013280  0E0D               	movlw	13
 43397  013282  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 43398  013284  B0D8               	btfsc	status,0,c
 43399  013286  D01D               	goto	i2l2019
 43400  013288                     i2u3341_40:
 43401                           
 43402                           ; BSR set to: 0
 43403                           ;doprnt.c: 1113: fval += fround(prec);
 43404  013288  C0A3  F056         	movff	i2__doprnt@fval,i2___fladd@b
 43405  01328C  C0A4  F057         	movff	i2__doprnt@fval+1,i2___fladd@b+1
 43406  013290  C0A5  F058         	movff	i2__doprnt@fval+2,i2___fladd@b+2
 43407  013294  C0A6  F059         	movff	i2__doprnt@fval+3,i2___fladd@b+3
 43408  013298  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43409  01329A  EC2A  F0BB         	call	i2_fround
 43410  01329E  C049  F05A         	movff	?i2_fround,i2___fladd@a
 43411  0132A2  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 43412  0132A6  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 43413  0132AA  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 43414  0132AE  EC10  F0B1         	call	i2___fladd	;wreg free
 43415  0132B2  C056  F0A3         	movff	?i2___fladd,i2__doprnt@fval
 43416  0132B6  C057  F0A4         	movff	?i2___fladd+1,i2__doprnt@fval+1
 43417  0132BA  C058  F0A5         	movff	?i2___fladd+2,i2__doprnt@fval+2
 43418  0132BE  C059  F0A6         	movff	?i2___fladd+3,i2__doprnt@fval+3
 43419  0132C2                     i2l2019:
 43420  0132C2                     i2l22795:
 43421                           
 43422                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 43423  0132C2  0100               	movlb	0	; () banked
 43424  0132C4  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 43425  0132C6  D006               	goto	i2u3342_40
 43426  0132C8  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 43427  0132CA  E122               	bnz	i2l22803
 43428  0132CC  0E0A               	movlw	10
 43429  0132CE  5D9D               	subwf	i2__doprnt@exp& (0+255),w,b
 43430  0132D0  B0D8               	btfsc	status,0,c
 43431  0132D2  D01E               	goto	i2u3345_40
 43432  0132D4                     i2u3342_40:
 43433                           
 43434                           ; BSR set to: 0
 43435  0132D4  51A3               	movf	i2__doprnt@fval& (0+255),w,b
 43436  0132D6  11A4               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 43437  0132D8  11A5               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 43438  0132DA  11A6               	iorwf	(i2__doprnt@fval+3)& (0+255),w,b
 43439  0132DC  B4D8               	btfsc	status,2,c
 43440  0132DE  D063               	goto	i2l2020
 43441                           
 43442                           ; BSR set to: 0
 43443  0132E0  C0A3  F06C         	movff	i2__doprnt@fval,i2___fltol@f1
 43444  0132E4  C0A4  F06D         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 43445  0132E8  C0A5  F06E         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 43446  0132EC  C0A6  F06F         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 43447  0132F0  ECAB  F0C9         	call	i2___fltol	;wreg free
 43448  0132F4  0100               	movlb	0	; () banked
 43449  0132F6  516C               	movf	?i2___fltol& (0+255),w,b
 43450  0132F8  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 43451  0132FA  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 43452  0132FC  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 43453  0132FE  B4D8               	btfsc	status,2,c
 43454                           
 43455                           ; BSR set to: 0
 43456  013300  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 43457  013302  D051               	goto	i2l2020
 43458  013304  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 43459  013306  E104               	bnz	i2l22803
 43460  013308  0E02               	movlw	2
 43461  01330A  5D9D               	subwf	i2__doprnt@exp& (0+255),w,b
 43462  01330C  A0D8               	btfss	status,0,c
 43463  01330E  D04B               	goto	i2l2020
 43464  013310                     i2u3345_40:
 43465  013310                     i2l22803:
 43466                           
 43467                           ; BSR set to: 0
 43468                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 43469  013310  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 43470  013314  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 43471  013318  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 43472  01331C  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 43473  013320  0E5F               	movlw	95
 43474  013322  6E38               	movwf	i2___flge@ff2,c
 43475  013324  0E70               	movlw	112
 43476  013326  6E39               	movwf	i2___flge@ff2+1,c
 43477  013328  0E89               	movlw	137
 43478  01332A  6E3A               	movwf	i2___flge@ff2+2,c
 43479  01332C  0E40               	movlw	64
 43480  01332E  6E3B               	movwf	i2___flge@ff2+3,c
 43481  013330  EC1F  F0C7         	call	i2___flge	;wreg free
 43482  013334  B0D8               	btfsc	status,0,c
 43483  013336  D003               	goto	i2l2023
 43484                           
 43485                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 43486  013338  0100               	movlb	0	; () banked
 43487  01333A  0EF7               	movlw	247
 43488  01333C  D002               	goto	L18
 43489  01333E                     i2l2023:
 43490                           
 43491                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 43492                           
 43493                           ; BSR set to: 0
 43494  01333E  0100               	movlb	0	; () banked
 43495  013340  0EF8               	movlw	248
 43496  013342                     L18:
 43497  013342  279D               	addwf	i2__doprnt@exp& (0+255),f,b
 43498  013344  0EFF               	movlw	255
 43499  013346  239E               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 43500                           
 43501                           ; BSR set to: 0
 43502                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 43503                           
 43504                           ; BSR set to: 0
 43505  013348  519D               	movf	i2__doprnt@exp& (0+255),w,b
 43506  01334A  EC2C  F0A8         	call	i2_scale
 43507  01334E  C049  F09F         	movff	?i2_scale,i2__doprnt@tmpval
 43508  013352  C04A  F0A0         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 43509  013356  C04B  F0A1         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 43510  01335A  C04C  F0A2         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 43511  01335E  C0A3  F001         	movff	i2__doprnt@fval,i2__div_to_l_@f1
 43512  013362  C0A4  F002         	movff	i2__doprnt@fval+1,i2__div_to_l_@f1+1
 43513  013366  C0A5  F003         	movff	i2__doprnt@fval+2,i2__div_to_l_@f1+2
 43514  01336A  C0A6  F004         	movff	i2__doprnt@fval+3,i2__div_to_l_@f1+3
 43515  01336E  C09F  F005         	movff	i2__doprnt@tmpval,i2__div_to_l_@f2
 43516  013372  C0A0  F006         	movff	i2__doprnt@tmpval+1,i2__div_to_l_@f2+1
 43517  013376  C0A1  F007         	movff	i2__doprnt@tmpval+2,i2__div_to_l_@f2+2
 43518  01337A  C0A2  F008         	movff	i2__doprnt@tmpval+3,i2__div_to_l_@f2+3
 43519  01337E  ECD5  F0C4         	call	i2__div_to_l_	;wreg free
 43520  013382  C001  F0A7         	movff	?i2__div_to_l_,i2__doprnt@val
 43521  013386  C002  F0A8         	movff	?i2__div_to_l_+1,i2__doprnt@val+1
 43522  01338A  C003  F0A9         	movff	?i2__div_to_l_+2,i2__doprnt@val+2
 43523  01338E  C004  F0AA         	movff	?i2__div_to_l_+3,i2__doprnt@val+3
 43524                           
 43525                           ;doprnt.c: 1129: fval = 0.0;
 43526  013392  0E00               	movlw	0
 43527  013394  0100               	movlb	0	; () banked
 43528  013396  6FA3               	movwf	i2__doprnt@fval& (0+255),b
 43529  013398  0E00               	movlw	0
 43530  01339A  6FA4               	movwf	(i2__doprnt@fval+1)& (0+255),b
 43531  01339C  0E00               	movlw	0
 43532  01339E  6FA5               	movwf	(i2__doprnt@fval+2)& (0+255),b
 43533  0133A0  0E00               	movlw	0
 43534  0133A2  6FA6               	movwf	(i2__doprnt@fval+3)& (0+255),b
 43535                           
 43536                           ;doprnt.c: 1130: } else {
 43537  0133A4  D03C               	goto	i2l2029
 43538  0133A6                     i2l2020:
 43539                           
 43540                           ; BSR set to: 0
 43541                           ;doprnt.c: 1131: val = (unsigned long)fval;
 43542                           
 43543                           ; BSR set to: 0
 43544  0133A6  C0A3  F06C         	movff	i2__doprnt@fval,i2___fltol@f1
 43545  0133AA  C0A4  F06D         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 43546  0133AE  C0A5  F06E         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 43547  0133B2  C0A6  F06F         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 43548  0133B6  ECAB  F0C9         	call	i2___fltol	;wreg free
 43549  0133BA  C06C  F0A7         	movff	?i2___fltol,i2__doprnt@val
 43550  0133BE  C06D  F0A8         	movff	?i2___fltol+1,i2__doprnt@val+1
 43551  0133C2  C06E  F0A9         	movff	?i2___fltol+2,i2__doprnt@val+2
 43552  0133C6  C06F  F0AA         	movff	?i2___fltol+3,i2__doprnt@val+3
 43553                           
 43554                           ;doprnt.c: 1132: fval -= (double)val;
 43555  0133CA  C0A3  F080         	movff	i2__doprnt@fval,i2___flsub@b
 43556  0133CE  C0A4  F081         	movff	i2__doprnt@fval+1,i2___flsub@b+1
 43557  0133D2  C0A5  F082         	movff	i2__doprnt@fval+2,i2___flsub@b+2
 43558  0133D6  C0A6  F083         	movff	i2__doprnt@fval+3,i2___flsub@b+3
 43559  0133DA  C0A7  F005         	movff	i2__doprnt@val,i2___xxtofl@val
 43560  0133DE  C0A8  F006         	movff	i2__doprnt@val+1,i2___xxtofl@val+1
 43561  0133E2  C0A9  F007         	movff	i2__doprnt@val+2,i2___xxtofl@val+2
 43562  0133E6  C0AA  F008         	movff	i2__doprnt@val+3,i2___xxtofl@val+3
 43563  0133EA  0E00               	movlw	0
 43564  0133EC  ECCA  F0C1         	call	i2___xxtofl
 43565  0133F0  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 43566  0133F4  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 43567  0133F8  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 43568  0133FC  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 43569  013400  ECFB  F0D3         	call	i2___flsub	;wreg free
 43570  013404  C080  F0A3         	movff	?i2___flsub,i2__doprnt@fval
 43571  013408  C081  F0A4         	movff	?i2___flsub+1,i2__doprnt@fval+1
 43572  01340C  C082  F0A5         	movff	?i2___flsub+2,i2__doprnt@fval+2
 43573  013410  C083  F0A6         	movff	?i2___flsub+3,i2__doprnt@fval+3
 43574                           
 43575                           ;doprnt.c: 1133: exp = 0;
 43576  013414  0E00               	movlw	0
 43577  013416  0100               	movlb	0	; () banked
 43578  013418  6F9E               	movwf	(i2__doprnt@exp+1)& (0+255),b
 43579  01341A  0E00               	movlw	0
 43580  01341C  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 43581  01341E                     i2l2029:
 43582                           
 43583                           ; BSR set to: 0
 43584                           ;doprnt.c: 1134: }
 43585                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 43586                           
 43587                           ; BSR set to: 0
 43588  01341E  0E01               	movlw	1
 43589  013420  6FB1               	movwf	i2__doprnt@c& (0+255),b
 43590  013422                     i2l22823:
 43591                           
 43592                           ; BSR set to: 0
 43593  013422  0E0A               	movlw	10
 43594  013424  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 43595  013426  B4D8               	btfsc	status,2,c
 43596  013428  D01B               	goto	i2u3349_40
 43597                           
 43598                           ; BSR set to: 0
 43599                           ;doprnt.c: 1137: if(val < dpowers[c])
 43600                           
 43601                           ; BSR set to: 0
 43602                           
 43603                           ; BSR set to: 0
 43604  01342A  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43605  01342C  0D04               	mullw	4
 43606  01342E  0E0B               	movlw	low _dpowers
 43607  013430  24F3               	addwf	prodl,w,c
 43608  013432  6EF6               	movwf	tblptrl,c
 43609  013434  0ECF               	movlw	high _dpowers
 43610  013436  20F4               	addwfc	prodh,w,c
 43611  013438  6EF7               	movwf	tblptrh,c
 43612  01343A                     	if	1	;There are 3 active tblptr bytes
 43613  01343A  6AF8               	clrf	tblptru,c
 43614  01343C  0E00               	movlw	low (__mediumconst shr (0+16))
 43615  01343E  22F8               	addwfc	tblptru,f,c
 43616  013440                     	endif
 43617  013440  0009               	tblrd		*+
 43618  013442  50F5               	movf	tablat,w,c
 43619  013444  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 43620  013446  0009               	tblrd		*+
 43621  013448  50F5               	movf	tablat,w,c
 43622  01344A  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 43623  01344C  0009               	tblrd		*+
 43624  01344E  50F5               	movf	tablat,w,c
 43625  013450  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 43626  013452  0009               	tblrd		*+
 43627  013454  50F5               	movf	tablat,w,c
 43628  013456  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 43629  013458  A0D8               	btfss	status,0,c
 43630  01345A  D002               	goto	i2u3349_40
 43631                           
 43632                           ; BSR set to: 0
 43633                           
 43634                           ; BSR set to: 0
 43635                           
 43636                           ; BSR set to: 0
 43637                           ;doprnt.c: 1138: break;
 43638  01345C  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 43639  01345E  D7E1               	goto	i2l22823
 43640  013460                     i2u3349_40:
 43641                           
 43642                           ; BSR set to: 0
 43643                           ;doprnt.c: 1142: width -= prec + c + exp;
 43644                           
 43645                           ; BSR set to: 0
 43646  013460  C0B1  F08E         	movff	i2__doprnt@c,??i2__doprnt
 43647  013464  6B8F               	clrf	(??i2__doprnt+1)& (0+255),b
 43648  013466  BF8E               	btfsc	??i2__doprnt& (0+255),7,b
 43649  013468  078F               	decf	(??i2__doprnt+1)& (0+255),f,b
 43650  01346A  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43651  01346C  278E               	addwf	??i2__doprnt& (0+255),f,b
 43652  01346E  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43653  013470  238F               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 43654  013472  519D               	movf	i2__doprnt@exp& (0+255),w,b
 43655  013474  278E               	addwf	??i2__doprnt& (0+255),f,b
 43656  013476  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 43657  013478  238F               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 43658  01347A  518E               	movf	??i2__doprnt& (0+255),w,b
 43659  01347C  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 43660  01347E  518F               	movf	(??i2__doprnt+1)& (0+255),w,b
 43661  013480  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 43662                           
 43663                           ;doprnt.c: 1143: if(
 43664                           ;doprnt.c: 1147: prec)
 43665  013482  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43666  013484  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 43667  013486  B4D8               	btfsc	status,2,c
 43668  013488  D003               	goto	i2l2033
 43669                           
 43670                           ; BSR set to: 0
 43671                           ;doprnt.c: 1148: width--;
 43672  01348A  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43673  01348C  A0D8               	btfss	status,0,c
 43674  01348E  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43675  013490                     i2l2033:
 43676                           
 43677                           ; BSR set to: 0
 43678                           ;doprnt.c: 1149: if(flag & 0x03)
 43679                           
 43680                           ; BSR set to: 0
 43681  013490  0E03               	movlw	3
 43682  013492  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43683  013494  6F8E               	movwf	??i2__doprnt& (0+255),b
 43684  013496  0E00               	movlw	0
 43685  013498  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43686  01349A  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43687  01349C  518E               	movf	??i2__doprnt& (0+255),w,b
 43688  01349E  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43689  0134A0  B4D8               	btfsc	status,2,c
 43690  0134A2  D003               	goto	i2l2034
 43691                           
 43692                           ; BSR set to: 0
 43693                           ;doprnt.c: 1150: width--;
 43694  0134A4  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43695  0134A6  A0D8               	btfss	status,0,c
 43696  0134A8  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43697  0134AA                     i2l2034:
 43698                           
 43699                           ; BSR set to: 0
 43700                           ;doprnt.c: 1153: if(flag & 0x04) {
 43701                           
 43702                           ; BSR set to: 0
 43703  0134AA  A5AD               	btfss	i2__doprnt@flag& (0+255),2,b
 43704  0134AC  D0B6               	goto	i2l2045
 43705                           
 43706                           ; BSR set to: 0
 43707                           ;doprnt.c: 1157: if(flag & 0x03)
 43708  0134AE  0E03               	movlw	3
 43709  0134B0  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43710  0134B2  6F8E               	movwf	??i2__doprnt& (0+255),b
 43711  0134B4  0E00               	movlw	0
 43712  0134B6  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43713  0134B8  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43714  0134BA  518E               	movf	??i2__doprnt& (0+255),w,b
 43715  0134BC  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43716  0134BE  B4D8               	btfsc	status,2,c
 43717  0134C0  D06C               	goto	i2l2039
 43718                           
 43719                           ; BSR set to: 0
 43720                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 43721  0134C2  EE20 F002          	lfsr	2,2
 43722  0134C6  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43723  0134C8  26D9               	addwf	fsr2l,f,c
 43724  0134CA  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43725  0134CC  22DA               	addwfc	fsr2h,f,c
 43726  0134CE  50DE               	movf	postinc2,w,c
 43727  0134D0  10DE               	iorwf	postinc2,w,c
 43728  0134D2  10DE               	iorwf	postinc2,w,c
 43729  0134D4  B4D8               	btfsc	status,2,c
 43730  0134D6  D013               	goto	i2l2037
 43731                           
 43732                           ; BSR set to: 0
 43733  0134D8  EE20 F002          	lfsr	2,2
 43734  0134DC  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43735  0134DE  26D9               	addwf	fsr2l,f,c
 43736  0134E0  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43737  0134E2  22DA               	addwfc	fsr2h,f,c
 43738  0134E4  D801               	call	i2u3355_48
 43739  0134E6  D059               	goto	i2l2039
 43740  0134E8                     i2u3355_48:
 43741  0134E8  0005               	push	
 43742  0134EA  6EFA               	movwf	pclath,c
 43743  0134EC  50DE               	movf	postinc2,w,c
 43744  0134EE  6EFD               	movwf	tosl,c
 43745  0134F0  50DE               	movf	postinc2,w,c
 43746  0134F2  6EFE               	movwf	tosh,c
 43747  0134F4  50DE               	movf	postinc2,w,c
 43748  0134F6  6EFF               	movwf	tosu,c
 43749  0134F8  50FA               	movf	pclath,w,c
 43750  0134FA  0E2D               	movlw	45
 43751  0134FC  0012               	return		;indir
 43752  0134FE                     i2l2037:
 43753  0134FE  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43754  013502  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43755  013506  CFDE F08E          	movff	postinc2,??i2__doprnt
 43756  01350A  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43757  01350E  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43758  013512  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43759  013516  0E2D               	movlw	45
 43760  013518  6EDF               	movwf	indf2,c
 43761  01351A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43762  01351E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43763  013522  2ADE               	incf	postinc2,f,c
 43764  013524  0E00               	movlw	0
 43765  013526  22DD               	addwfc	postdec2,f,c
 43766                           
 43767                           ;doprnt.c: 1168: while(width > 0) {
 43768  013528  D038               	goto	i2l2039
 43769  01352A                     i2l22855:
 43770                           
 43771                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 43772  01352A  0100               	movlb	0	; () banked
 43773  01352C  EE20 F002          	lfsr	2,2
 43774  013530  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43775  013532  26D9               	addwf	fsr2l,f,c
 43776  013534  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43777  013536  22DA               	addwfc	fsr2h,f,c
 43778  013538  50DE               	movf	postinc2,w,c
 43779  01353A  10DE               	iorwf	postinc2,w,c
 43780  01353C  10DE               	iorwf	postinc2,w,c
 43781  01353E  B4D8               	btfsc	status,2,c
 43782  013540  D013               	goto	i2l2041
 43783                           
 43784                           ; BSR set to: 0
 43785  013542  EE20 F002          	lfsr	2,2
 43786  013546  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43787  013548  26D9               	addwf	fsr2l,f,c
 43788  01354A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43789  01354C  22DA               	addwfc	fsr2h,f,c
 43790  01354E  D801               	call	i2u3357_48
 43791  013550  D020               	goto	i2l2042
 43792  013552                     i2u3357_48:
 43793  013552  0005               	push	
 43794  013554  6EFA               	movwf	pclath,c
 43795  013556  50DE               	movf	postinc2,w,c
 43796  013558  6EFD               	movwf	tosl,c
 43797  01355A  50DE               	movf	postinc2,w,c
 43798  01355C  6EFE               	movwf	tosh,c
 43799  01355E  50DE               	movf	postinc2,w,c
 43800  013560  6EFF               	movwf	tosu,c
 43801  013562  50FA               	movf	pclath,w,c
 43802  013564  0E30               	movlw	48
 43803  013566  0012               	return		;indir
 43804  013568                     i2l2041:
 43805  013568  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43806  01356C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43807  013570  CFDE F08E          	movff	postinc2,??i2__doprnt
 43808  013574  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43809  013578  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43810  01357C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43811  013580  0E30               	movlw	48
 43812  013582  6EDF               	movwf	indf2,c
 43813  013584  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43814  013588  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43815  01358C  2ADE               	incf	postinc2,f,c
 43816  01358E  0E00               	movlw	0
 43817  013590  22DD               	addwfc	postdec2,f,c
 43818  013592                     i2l2042:
 43819                           
 43820                           ;doprnt.c: 1170: width--;
 43821  013592  0100               	movlb	0	; () banked
 43822  013594  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43823  013596  A0D8               	btfss	status,0,c
 43824  013598  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43825  01359A                     i2l2039:
 43826                           
 43827                           ; BSR set to: 0
 43828  01359A  0100               	movlb	0	; () banked
 43829  01359C  BFAC               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 43830  01359E  D0F5               	goto	i2l2056
 43831  0135A0  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43832  0135A2  E1C3               	bnz	i2l22855
 43833  0135A4  05AB               	decf	i2__doprnt@width& (0+255),w,b
 43834  0135A6  A0D8               	btfss	status,0,c
 43835  0135A8  D0F0               	goto	i2l2056
 43836  0135AA  D7BF               	goto	i2l2040
 43837  0135AC                     i2l22867:
 43838                           
 43839                           ; BSR set to: 0
 43840                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 43841  0135AC  EE20 F002          	lfsr	2,2
 43842  0135B0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43843  0135B2  26D9               	addwf	fsr2l,f,c
 43844  0135B4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43845  0135B6  22DA               	addwfc	fsr2h,f,c
 43846  0135B8  50DE               	movf	postinc2,w,c
 43847  0135BA  10DE               	iorwf	postinc2,w,c
 43848  0135BC  10DE               	iorwf	postinc2,w,c
 43849  0135BE  B4D8               	btfsc	status,2,c
 43850  0135C0  D013               	goto	i2l2047
 43851                           
 43852                           ; BSR set to: 0
 43853  0135C2  EE20 F002          	lfsr	2,2
 43854  0135C6  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43855  0135C8  26D9               	addwf	fsr2l,f,c
 43856  0135CA  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43857  0135CC  22DA               	addwfc	fsr2h,f,c
 43858  0135CE  D801               	call	i2u3360_48
 43859  0135D0  D020               	goto	i2l2048
 43860  0135D2                     i2u3360_48:
 43861  0135D2  0005               	push	
 43862  0135D4  6EFA               	movwf	pclath,c
 43863  0135D6  50DE               	movf	postinc2,w,c
 43864  0135D8  6EFD               	movwf	tosl,c
 43865  0135DA  50DE               	movf	postinc2,w,c
 43866  0135DC  6EFE               	movwf	tosh,c
 43867  0135DE  50DE               	movf	postinc2,w,c
 43868  0135E0  6EFF               	movwf	tosu,c
 43869  0135E2  50FA               	movf	pclath,w,c
 43870  0135E4  0E20               	movlw	32
 43871  0135E6  0012               	return		;indir
 43872  0135E8                     i2l2047:
 43873  0135E8  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43874  0135EC  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43875  0135F0  CFDE F08E          	movff	postinc2,??i2__doprnt
 43876  0135F4  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43877  0135F8  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43878  0135FC  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43879  013600  0E20               	movlw	32
 43880  013602  6EDF               	movwf	indf2,c
 43881  013604  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43882  013608  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43883  01360C  2ADE               	incf	postinc2,f,c
 43884  01360E  0E00               	movlw	0
 43885  013610  22DD               	addwfc	postdec2,f,c
 43886  013612                     i2l2048:
 43887                           
 43888                           ;doprnt.c: 1182: width--;
 43889  013612  0100               	movlb	0	; () banked
 43890  013614  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43891  013616  A0D8               	btfss	status,0,c
 43892  013618  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43893  01361A                     i2l2045:
 43894                           
 43895                           ; BSR set to: 0
 43896                           
 43897                           ; BSR set to: 0
 43898  01361A  BFAC               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 43899  01361C  D005               	goto	i2u3361_40
 43900  01361E  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43901  013620  E1C5               	bnz	i2l22867
 43902  013622  05AB               	decf	i2__doprnt@width& (0+255),w,b
 43903  013624  B0D8               	btfsc	status,0,c
 43904  013626  D7C2               	goto	i2l2046
 43905  013628                     i2u3361_40:
 43906                           
 43907                           ; BSR set to: 0
 43908                           ;doprnt.c: 1183: }
 43909                           ;doprnt.c: 1188: if(flag & 0x03)
 43910                           
 43911                           ; BSR set to: 0
 43912  013628  0E03               	movlw	3
 43913  01362A  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43914  01362C  6F8E               	movwf	??i2__doprnt& (0+255),b
 43915  01362E  0E00               	movlw	0
 43916  013630  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43917  013632  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43918  013634  518E               	movf	??i2__doprnt& (0+255),w,b
 43919  013636  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43920  013638  B4D8               	btfsc	status,2,c
 43921  01363A  D0A7               	goto	i2l2056
 43922                           
 43923                           ; BSR set to: 0
 43924                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 43925  01363C  EE20 F002          	lfsr	2,2
 43926  013640  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43927  013642  26D9               	addwf	fsr2l,f,c
 43928  013644  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43929  013646  22DA               	addwfc	fsr2h,f,c
 43930  013648  50DE               	movf	postinc2,w,c
 43931  01364A  10DE               	iorwf	postinc2,w,c
 43932  01364C  10DE               	iorwf	postinc2,w,c
 43933  01364E  B4D8               	btfsc	status,2,c
 43934  013650  D013               	goto	i2l2051
 43935                           
 43936                           ; BSR set to: 0
 43937  013652  EE20 F002          	lfsr	2,2
 43938  013656  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43939  013658  26D9               	addwf	fsr2l,f,c
 43940  01365A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43941  01365C  22DA               	addwfc	fsr2h,f,c
 43942  01365E  D801               	call	i2u3364_48
 43943  013660  D094               	goto	i2l2056
 43944  013662                     i2u3364_48:
 43945  013662  0005               	push	
 43946  013664  6EFA               	movwf	pclath,c
 43947  013666  50DE               	movf	postinc2,w,c
 43948  013668  6EFD               	movwf	tosl,c
 43949  01366A  50DE               	movf	postinc2,w,c
 43950  01366C  6EFE               	movwf	tosh,c
 43951  01366E  50DE               	movf	postinc2,w,c
 43952  013670  6EFF               	movwf	tosu,c
 43953  013672  50FA               	movf	pclath,w,c
 43954  013674  0E2D               	movlw	45
 43955  013676  0012               	return		;indir
 43956  013678                     i2l2051:
 43957  013678  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43958  01367C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43959  013680  CFDE F08E          	movff	postinc2,??i2__doprnt
 43960  013684  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43961  013688  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43962  01368C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43963  013690  0E2D               	movlw	45
 43964  013692  D073               	goto	L19
 43965  013694                     
 43966                           ;doprnt.c: 1200: {
 43967                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 43968  013694  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43969  013698  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43970  01369C  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43971  0136A0  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43972  0136A4  0100               	movlb	0	; () banked
 43973  0136A6  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43974  0136A8  0D04               	mullw	4
 43975  0136AA  0E0B               	movlw	low _dpowers
 43976  0136AC  24F3               	addwf	prodl,w,c
 43977  0136AE  6EF6               	movwf	tblptrl,c
 43978  0136B0  0ECF               	movlw	high _dpowers
 43979  0136B2  20F4               	addwfc	prodh,w,c
 43980  0136B4  6EF7               	movwf	tblptrh,c
 43981  0136B6                     	if	1	;There are 3 active tblptr bytes
 43982  0136B6  6AF8               	clrf	tblptru,c
 43983  0136B8  0E00               	movlw	low (__mediumconst shr (0+16))
 43984  0136BA  22F8               	addwfc	tblptru,f,c
 43985  0136BC                     	endif
 43986  0136BC  0009               	tblrd		*+
 43987  0136BE  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43988  0136C2  0009               	tblrd		*+
 43989  0136C4  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43990  0136C8  0009               	tblrd		*+
 43991  0136CA  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43992  0136CE  000A               	tblrd		*-
 43993  0136D0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43994  0136D4  EC79  F0CE         	call	i2___lldiv
 43995  0136D8  C001  F09F         	movff	?i2___lldiv,i2__doprnt@tmpval
 43996  0136DC  C002  F0A0         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 43997  0136E0  C003  F0A1         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 43998  0136E4  C004  F0A2         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 43999                           
 44000                           ;doprnt.c: 1202: tmpval.vd %= 10;
 44001  0136E8  C09F  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 44002  0136EC  C0A0  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 44003  0136F0  C0A1  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 44004  0136F4  C0A2  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 44005  0136F8  0E0A               	movlw	10
 44006  0136FA  6E12               	movwf	i2___llmod@divisor,c
 44007  0136FC  0E00               	movlw	0
 44008  0136FE  6E13               	movwf	i2___llmod@divisor+1,c
 44009  013700  0E00               	movlw	0
 44010  013702  6E14               	movwf	i2___llmod@divisor+2,c
 44011  013704  0E00               	movlw	0
 44012  013706  6E15               	movwf	i2___llmod@divisor+3,c
 44013  013708  EC1A  F0D1         	call	i2___llmod	;wreg free
 44014  01370C  C00E  F09F         	movff	?i2___llmod,i2__doprnt@tmpval
 44015  013710  C00F  F0A0         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 44016  013714  C010  F0A1         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 44017  013718  C011  F0A2         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 44018                           
 44019                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 44020  01371C  0100               	movlb	0	; () banked
 44021  01371E  EE20 F002          	lfsr	2,2
 44022  013722  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44023  013724  26D9               	addwf	fsr2l,f,c
 44024  013726  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44025  013728  22DA               	addwfc	fsr2h,f,c
 44026  01372A  50DE               	movf	postinc2,w,c
 44027  01372C  10DE               	iorwf	postinc2,w,c
 44028  01372E  10DE               	iorwf	postinc2,w,c
 44029  013730  B4D8               	btfsc	status,2,c
 44030  013732  D014               	goto	i2l2055
 44031                           
 44032                           ; BSR set to: 0
 44033  013734  EE20 F002          	lfsr	2,2
 44034  013738  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44035  01373A  26D9               	addwf	fsr2l,f,c
 44036  01373C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44037  01373E  22DA               	addwfc	fsr2h,f,c
 44038  013740  D801               	call	i2u3366_48
 44039  013742  D023               	goto	i2l2056
 44040  013744                     i2u3366_48:
 44041  013744  0005               	push	
 44042  013746  6EFA               	movwf	pclath,c
 44043  013748  50DE               	movf	postinc2,w,c
 44044  01374A  6EFD               	movwf	tosl,c
 44045  01374C  50DE               	movf	postinc2,w,c
 44046  01374E  6EFE               	movwf	tosh,c
 44047  013750  50DE               	movf	postinc2,w,c
 44048  013752  6EFF               	movwf	tosu,c
 44049  013754  50FA               	movf	pclath,w,c
 44050  013756  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 44051  013758  0F30               	addlw	48
 44052  01375A  0012               	return		;indir
 44053  01375C                     i2l2055:
 44054  01375C  0100               	movlb	0	; () banked
 44055  01375E  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 44056  013760  0F30               	addlw	48
 44057  013762  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44058  013766  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44059  01376A  CFDE F08E          	movff	postinc2,??i2__doprnt
 44060  01376E  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44061  013772  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44062  013776  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44063  01377A                     L19:
 44064  01377A  6EDF               	movwf	indf2,c
 44065  01377C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44066  013780  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44067  013784  2ADE               	incf	postinc2,f,c
 44068  013786  0E00               	movlw	0
 44069  013788  22DD               	addwfc	postdec2,f,c
 44070  01378A                     i2l2056:
 44071                           
 44072                           ; BSR set to: 0
 44073                           
 44074                           ; BSR set to: 0
 44075  01378A  0100               	movlb	0	; () banked
 44076  01378C  07B1               	decf	i2__doprnt@c& (0+255),f,b
 44077  01378E  29B1               	incf	i2__doprnt@c& (0+255),w,b
 44078  013790  B4D8               	btfsc	status,2,c
 44079  013792  D038               	goto	i2l2058
 44080  013794  D77F               	goto	i2l2054
 44081  013796                     i2l22901:
 44082                           
 44083                           ; BSR set to: 0
 44084                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 44085  013796  EE20 F002          	lfsr	2,2
 44086  01379A  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44087  01379C  26D9               	addwf	fsr2l,f,c
 44088  01379E  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44089  0137A0  22DA               	addwfc	fsr2h,f,c
 44090  0137A2  50DE               	movf	postinc2,w,c
 44091  0137A4  10DE               	iorwf	postinc2,w,c
 44092  0137A6  10DE               	iorwf	postinc2,w,c
 44093  0137A8  B4D8               	btfsc	status,2,c
 44094  0137AA  D013               	goto	i2l2060
 44095                           
 44096                           ; BSR set to: 0
 44097  0137AC  EE20 F002          	lfsr	2,2
 44098  0137B0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44099  0137B2  26D9               	addwf	fsr2l,f,c
 44100  0137B4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44101  0137B6  22DA               	addwfc	fsr2h,f,c
 44102  0137B8  D801               	call	i2u3369_48
 44103  0137BA  D020               	goto	i2l2061
 44104  0137BC                     i2u3369_48:
 44105  0137BC  0005               	push	
 44106  0137BE  6EFA               	movwf	pclath,c
 44107  0137C0  50DE               	movf	postinc2,w,c
 44108  0137C2  6EFD               	movwf	tosl,c
 44109  0137C4  50DE               	movf	postinc2,w,c
 44110  0137C6  6EFE               	movwf	tosh,c
 44111  0137C8  50DE               	movf	postinc2,w,c
 44112  0137CA  6EFF               	movwf	tosu,c
 44113  0137CC  50FA               	movf	pclath,w,c
 44114  0137CE  0E30               	movlw	48
 44115  0137D0  0012               	return		;indir
 44116  0137D2                     i2l2060:
 44117  0137D2  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44118  0137D6  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44119  0137DA  CFDE F08E          	movff	postinc2,??i2__doprnt
 44120  0137DE  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44121  0137E2  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44122  0137E6  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44123  0137EA  0E30               	movlw	48
 44124  0137EC  6EDF               	movwf	indf2,c
 44125  0137EE  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44126  0137F2  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44127  0137F6  2ADE               	incf	postinc2,f,c
 44128  0137F8  0E00               	movlw	0
 44129  0137FA  22DD               	addwfc	postdec2,f,c
 44130  0137FC                     i2l2061:
 44131                           
 44132                           ;doprnt.c: 1209: exp--;
 44133  0137FC  0100               	movlb	0	; () banked
 44134  0137FE  079D               	decf	i2__doprnt@exp& (0+255),f,b
 44135  013800  A0D8               	btfss	status,0,c
 44136  013802  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 44137  013804                     i2l2058:
 44138                           
 44139                           ; BSR set to: 0
 44140                           
 44141                           ; BSR set to: 0
 44142  013804  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 44143  013806  D005               	goto	i2u3370_40
 44144  013808  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 44145  01380A  E1C5               	bnz	i2l22901
 44146  01380C  059D               	decf	i2__doprnt@exp& (0+255),w,b
 44147  01380E  B0D8               	btfsc	status,0,c
 44148  013810  D7C2               	goto	i2l2059
 44149  013812                     i2u3370_40:
 44150                           
 44151                           ; BSR set to: 0
 44152                           ;doprnt.c: 1210: }
 44153                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 44154                           
 44155                           ; BSR set to: 0
 44156  013812  BFB0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 44157  013814  D009               	goto	i2l2063
 44158  013816  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44159  013818  E104               	bnz	i2u3371_40
 44160  01381A  0E09               	movlw	9
 44161  01381C  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 44162  01381E  A0D8               	btfss	status,0,c
 44163  013820  D003               	goto	i2l2063
 44164  013822                     i2u3371_40:
 44165                           
 44166                           ; BSR set to: 0
 44167                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 44168  013822  0E08               	movlw	8
 44169  013824  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44170  013826  D002               	goto	i2l2064
 44171  013828                     i2l2063:
 44172                           
 44173                           ; BSR set to: 0
 44174                           ;doprnt.c: 1213: else
 44175                           ;doprnt.c: 1214: c = prec;
 44176  013828  C0AF  F0B1         	movff	i2__doprnt@prec,i2__doprnt@c
 44177  01382C                     i2l2064:
 44178                           
 44179                           ; BSR set to: 0
 44180                           ;doprnt.c: 1215: prec -= c;
 44181                           
 44182                           ; BSR set to: 0
 44183  01382C  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44184  01382E  5FAF               	subwf	i2__doprnt@prec& (0+255),f,b
 44185  013830  0E00               	movlw	0
 44186  013832  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44187  013834  0EFF               	movlw	255
 44188  013836  5BB0               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 44189                           
 44190                           ; BSR set to: 0
 44191                           ;doprnt.c: 1219: if(c)
 44192  013838  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44193  01383A  B4D8               	btfsc	status,2,c
 44194  01383C  D033               	goto	i2l2067
 44195                           
 44196                           ; BSR set to: 0
 44197                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 44198  01383E  EE20 F002          	lfsr	2,2
 44199  013842  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44200  013844  26D9               	addwf	fsr2l,f,c
 44201  013846  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44202  013848  22DA               	addwfc	fsr2h,f,c
 44203  01384A  50DE               	movf	postinc2,w,c
 44204  01384C  10DE               	iorwf	postinc2,w,c
 44205  01384E  10DE               	iorwf	postinc2,w,c
 44206  013850  B4D8               	btfsc	status,2,c
 44207  013852  D013               	goto	i2l2066
 44208                           
 44209                           ; BSR set to: 0
 44210  013854  EE20 F002          	lfsr	2,2
 44211  013858  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44212  01385A  26D9               	addwf	fsr2l,f,c
 44213  01385C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44214  01385E  22DA               	addwfc	fsr2h,f,c
 44215  013860  D801               	call	i2u3374_48
 44216  013862  D020               	goto	i2l2067
 44217  013864                     i2u3374_48:
 44218  013864  0005               	push	
 44219  013866  6EFA               	movwf	pclath,c
 44220  013868  50DE               	movf	postinc2,w,c
 44221  01386A  6EFD               	movwf	tosl,c
 44222  01386C  50DE               	movf	postinc2,w,c
 44223  01386E  6EFE               	movwf	tosh,c
 44224  013870  50DE               	movf	postinc2,w,c
 44225  013872  6EFF               	movwf	tosu,c
 44226  013874  50FA               	movf	pclath,w,c
 44227  013876  0E2E               	movlw	46
 44228  013878  0012               	return		;indir
 44229  01387A                     i2l2066:
 44230  01387A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44231  01387E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44232  013882  CFDE F08E          	movff	postinc2,??i2__doprnt
 44233  013886  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44234  01388A  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44235  01388E  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44236  013892  0E2E               	movlw	46
 44237  013894  6EDF               	movwf	indf2,c
 44238  013896  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44239  01389A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44240  01389E  2ADE               	incf	postinc2,f,c
 44241  0138A0  0E00               	movlw	0
 44242  0138A2  22DD               	addwfc	postdec2,f,c
 44243  0138A4                     i2l2067:
 44244                           
 44245                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 44246  0138A4  0100               	movlb	0	; () banked
 44247  0138A6  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44248  0138A8  EC2C  F0A8         	call	i2_scale
 44249  0138AC  C049  F094         	movff	?i2_scale,i2__doprnt$5458
 44250  0138B0  C04A  F095         	movff	?i2_scale+1,i2__doprnt$5458+1
 44251  0138B4  C04B  F096         	movff	?i2_scale+2,i2__doprnt$5458+2
 44252  0138B8  C04C  F097         	movff	?i2_scale+3,i2__doprnt$5458+3
 44253                           
 44254                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 44255  0138BC  C0A3  F034         	movff	i2__doprnt@fval,i2___flmul@a
 44256  0138C0  C0A4  F035         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 44257  0138C4  C0A5  F036         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 44258  0138C8  C0A6  F037         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 44259  0138CC  C094  F030         	movff	i2__doprnt$5458,i2___flmul@b
 44260  0138D0  C095  F031         	movff	i2__doprnt$5458+1,i2___flmul@b+1
 44261  0138D4  C096  F032         	movff	i2__doprnt$5458+2,i2___flmul@b+2
 44262  0138D8  C097  F033         	movff	i2__doprnt$5458+3,i2___flmul@b+3
 44263  0138DC  ECC9  F0AD         	call	i2___flmul	;wreg free
 44264  0138E0  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 44265  0138E4  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 44266  0138E8  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 44267  0138EC  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 44268  0138F0  ECAB  F0C9         	call	i2___fltol	;wreg free
 44269  0138F4  C06C  F0A7         	movff	?i2___fltol,i2__doprnt@val
 44270  0138F8  C06D  F0A8         	movff	?i2___fltol+1,i2__doprnt@val+1
 44271  0138FC  C06E  F0A9         	movff	?i2___fltol+2,i2__doprnt@val+2
 44272  013900  C06F  F0AA         	movff	?i2___fltol+3,i2__doprnt@val+3
 44273                           
 44274                           ;doprnt.c: 1228: while(c--) {
 44275  013904  D0A5               	goto	i2l2068
 44276  013906                     
 44277                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 44278  013906  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 44279  01390A  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 44280  01390E  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 44281  013912  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 44282  013916  0100               	movlb	0	; () banked
 44283  013918  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44284  01391A  0D04               	mullw	4
 44285  01391C  0E0B               	movlw	low _dpowers
 44286  01391E  24F3               	addwf	prodl,w,c
 44287  013920  6EF6               	movwf	tblptrl,c
 44288  013922  0ECF               	movlw	high _dpowers
 44289  013924  20F4               	addwfc	prodh,w,c
 44290  013926  6EF7               	movwf	tblptrh,c
 44291  013928                     	if	1	;There are 3 active tblptr bytes
 44292  013928  6AF8               	clrf	tblptru,c
 44293  01392A  0E00               	movlw	low (__mediumconst shr (0+16))
 44294  01392C  22F8               	addwfc	tblptru,f,c
 44295  01392E                     	endif
 44296  01392E  0009               	tblrd		*+
 44297  013930  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 44298  013934  0009               	tblrd		*+
 44299  013936  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 44300  01393A  0009               	tblrd		*+
 44301  01393C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 44302  013940  000A               	tblrd		*-
 44303  013942  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 44304  013946  EC79  F0CE         	call	i2___lldiv	;wreg free
 44305  01394A  C001  F09F         	movff	?i2___lldiv,i2__doprnt@tmpval
 44306  01394E  C002  F0A0         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 44307  013952  C003  F0A1         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 44308  013956  C004  F0A2         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 44309                           
 44310                           ;doprnt.c: 1230: tmpval.vd %= 10;
 44311  01395A  C09F  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 44312  01395E  C0A0  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 44313  013962  C0A1  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 44314  013966  C0A2  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 44315  01396A  0E0A               	movlw	10
 44316  01396C  6E12               	movwf	i2___llmod@divisor,c
 44317  01396E  0E00               	movlw	0
 44318  013970  6E13               	movwf	i2___llmod@divisor+1,c
 44319  013972  0E00               	movlw	0
 44320  013974  6E14               	movwf	i2___llmod@divisor+2,c
 44321  013976  0E00               	movlw	0
 44322  013978  6E15               	movwf	i2___llmod@divisor+3,c
 44323  01397A  EC1A  F0D1         	call	i2___llmod	;wreg free
 44324  01397E  C00E  F09F         	movff	?i2___llmod,i2__doprnt@tmpval
 44325  013982  C00F  F0A0         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 44326  013986  C010  F0A1         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 44327  01398A  C011  F0A2         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 44328                           
 44329                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 44330  01398E  0100               	movlb	0	; () banked
 44331  013990  EE20 F002          	lfsr	2,2
 44332  013994  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44333  013996  26D9               	addwf	fsr2l,f,c
 44334  013998  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44335  01399A  22DA               	addwfc	fsr2h,f,c
 44336  01399C  50DE               	movf	postinc2,w,c
 44337  01399E  10DE               	iorwf	postinc2,w,c
 44338  0139A0  10DE               	iorwf	postinc2,w,c
 44339  0139A2  B4D8               	btfsc	status,2,c
 44340  0139A4  D014               	goto	i2l2070
 44341                           
 44342                           ; BSR set to: 0
 44343  0139A6  EE20 F002          	lfsr	2,2
 44344  0139AA  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44345  0139AC  26D9               	addwf	fsr2l,f,c
 44346  0139AE  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44347  0139B0  22DA               	addwfc	fsr2h,f,c
 44348  0139B2  D801               	call	i2u3376_48
 44349  0139B4  D023               	goto	i2l2071
 44350  0139B6                     i2u3376_48:
 44351  0139B6  0005               	push	
 44352  0139B8  6EFA               	movwf	pclath,c
 44353  0139BA  50DE               	movf	postinc2,w,c
 44354  0139BC  6EFD               	movwf	tosl,c
 44355  0139BE  50DE               	movf	postinc2,w,c
 44356  0139C0  6EFE               	movwf	tosh,c
 44357  0139C2  50DE               	movf	postinc2,w,c
 44358  0139C4  6EFF               	movwf	tosu,c
 44359  0139C6  50FA               	movf	pclath,w,c
 44360  0139C8  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 44361  0139CA  0F30               	addlw	48
 44362  0139CC  0012               	return		;indir
 44363  0139CE                     i2l2070:
 44364  0139CE  0100               	movlb	0	; () banked
 44365  0139D0  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 44366  0139D2  0F30               	addlw	48
 44367  0139D4  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44368  0139D8  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44369  0139DC  CFDE F08E          	movff	postinc2,??i2__doprnt
 44370  0139E0  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44371  0139E4  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44372  0139E8  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44373  0139EC  6EDF               	movwf	indf2,c
 44374  0139EE  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44375  0139F2  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44376  0139F6  2ADE               	incf	postinc2,f,c
 44377  0139F8  0E00               	movlw	0
 44378  0139FA  22DD               	addwfc	postdec2,f,c
 44379  0139FC                     i2l2071:
 44380                           
 44381                           ;doprnt.c: 1232: val %= dpowers[c];
 44382                           
 44383                           ; BSR set to: 0
 44384  0139FC  C0A7  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 44385  013A00  C0A8  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 44386  013A04  C0A9  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 44387  013A08  C0AA  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 44388  013A0C  0100               	movlb	0	; () banked
 44389  013A0E  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44390  013A10  0D04               	mullw	4
 44391  013A12  0E0B               	movlw	low _dpowers
 44392  013A14  24F3               	addwf	prodl,w,c
 44393  013A16  6EF6               	movwf	tblptrl,c
 44394  013A18  0ECF               	movlw	high _dpowers
 44395  013A1A  20F4               	addwfc	prodh,w,c
 44396  013A1C  6EF7               	movwf	tblptrh,c
 44397  013A1E                     	if	1	;There are 3 active tblptr bytes
 44398  013A1E  6AF8               	clrf	tblptru,c
 44399  013A20  0E00               	movlw	low (__mediumconst shr (0+16))
 44400  013A22  22F8               	addwfc	tblptru,f,c
 44401  013A24                     	endif
 44402  013A24  0009               	tblrd		*+
 44403  013A26  CFF5 F012          	movff	tablat,i2___llmod@divisor
 44404  013A2A  0009               	tblrd		*+
 44405  013A2C  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 44406  013A30  0009               	tblrd		*+
 44407  013A32  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 44408  013A36  000A               	tblrd		*-
 44409  013A38  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 44410  013A3C  EC1A  F0D1         	call	i2___llmod
 44411  013A40  C00E  F0A7         	movff	?i2___llmod,i2__doprnt@val
 44412  013A44  C00F  F0A8         	movff	?i2___llmod+1,i2__doprnt@val+1
 44413  013A48  C010  F0A9         	movff	?i2___llmod+2,i2__doprnt@val+2
 44414  013A4C  C011  F0AA         	movff	?i2___llmod+3,i2__doprnt@val+3
 44415  013A50                     i2l2068:
 44416  013A50  0100               	movlb	0	; () banked
 44417  013A52  07B1               	decf	i2__doprnt@c& (0+255),f,b
 44418  013A54  29B1               	incf	i2__doprnt@c& (0+255),w,b
 44419  013A56  B4D8               	btfsc	status,2,c
 44420  013A58  D038               	goto	i2l2073
 44421  013A5A  D755               	goto	i2l2069
 44422  013A5C                     
 44423                           ; BSR set to: 0
 44424                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 44425                           
 44426                           ; BSR set to: 0
 44427  013A5C  EE20 F002          	lfsr	2,2
 44428  013A60  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44429  013A62  26D9               	addwf	fsr2l,f,c
 44430  013A64  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44431  013A66  22DA               	addwfc	fsr2h,f,c
 44432  013A68  50DE               	movf	postinc2,w,c
 44433  013A6A  10DE               	iorwf	postinc2,w,c
 44434  013A6C  10DE               	iorwf	postinc2,w,c
 44435  013A6E  B4D8               	btfsc	status,2,c
 44436  013A70  D013               	goto	i2l2075
 44437                           
 44438                           ; BSR set to: 0
 44439  013A72  EE20 F002          	lfsr	2,2
 44440  013A76  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44441  013A78  26D9               	addwf	fsr2l,f,c
 44442  013A7A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44443  013A7C  22DA               	addwfc	fsr2h,f,c
 44444  013A7E  D801               	call	i2u3379_48
 44445  013A80  D020               	goto	i2l2076
 44446  013A82                     i2u3379_48:
 44447  013A82  0005               	push	
 44448  013A84  6EFA               	movwf	pclath,c
 44449  013A86  50DE               	movf	postinc2,w,c
 44450  013A88  6EFD               	movwf	tosl,c
 44451  013A8A  50DE               	movf	postinc2,w,c
 44452  013A8C  6EFE               	movwf	tosh,c
 44453  013A8E  50DE               	movf	postinc2,w,c
 44454  013A90  6EFF               	movwf	tosu,c
 44455  013A92  50FA               	movf	pclath,w,c
 44456  013A94  0E30               	movlw	48
 44457  013A96  0012               	return		;indir
 44458  013A98                     i2l2075:
 44459  013A98  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44460  013A9C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44461  013AA0  CFDE F08E          	movff	postinc2,??i2__doprnt
 44462  013AA4  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44463  013AA8  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44464  013AAC  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44465  013AB0  0E30               	movlw	48
 44466  013AB2  6EDF               	movwf	indf2,c
 44467  013AB4  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44468  013AB8  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44469  013ABC  2ADE               	incf	postinc2,f,c
 44470  013ABE  0E00               	movlw	0
 44471  013AC0  22DD               	addwfc	postdec2,f,c
 44472  013AC2                     i2l2076:
 44473                           
 44474                           ;doprnt.c: 1237: prec--;
 44475  013AC2  0100               	movlb	0	; () banked
 44476  013AC4  07AF               	decf	i2__doprnt@prec& (0+255),f,b
 44477  013AC6  A0D8               	btfss	status,0,c
 44478  013AC8  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 44479  013ACA                     i2l2073:
 44480                           
 44481                           ; BSR set to: 0
 44482                           
 44483                           ; BSR set to: 0
 44484  013ACA  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44485  013ACC  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 44486  013ACE  B4D8               	btfsc	status,2,c
 44487  013AD0  D2EC               	goto	i2u3417_40
 44488  013AD2  D7C4               	goto	i2l2074
 44489  013AD4                     i2l2011:
 44490                           
 44491                           ; BSR set to: 0
 44492                           ;doprnt.c: 1246: }
 44493                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 44494                           
 44495                           ; BSR set to: 0
 44496  013AD4  0EC0               	movlw	192
 44497  013AD6  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44498  013AD8  6F8E               	movwf	??i2__doprnt& (0+255),b
 44499  013ADA  0E00               	movlw	0
 44500  013ADC  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44501  013ADE  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44502  013AE0  518E               	movf	??i2__doprnt& (0+255),w,b
 44503  013AE2  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44504  013AE4  A4D8               	btfss	status,2,c
 44505  013AE6  D041               	goto	i2l2078
 44506                           
 44507                           ; BSR set to: 0
 44508                           ;doprnt.c: 1253: {
 44509                           ;doprnt.c: 1255: if(flag & 0x10)
 44510  013AE8  A9AD               	btfss	i2__doprnt@flag& (0+255),4,b
 44511  013AEA  D019               	goto	i2l2079
 44512                           
 44513                           ; BSR set to: 0
 44514                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 44515  013AEC  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 44516  013AF0  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 44517  013AF4  CFDF F08E          	movff	indf2,??i2__doprnt
 44518  013AF8  0E04               	movlw	4
 44519  013AFA  26DE               	addwf	postinc2,f,c
 44520  013AFC  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44521  013B00  0E00               	movlw	0
 44522  013B02  22DD               	addwfc	postdec2,f,c
 44523  013B04  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44524  013B08  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44525  013B0C  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 44526  013B10  CFDE F0A8          	movff	postinc2,i2__doprnt@val+1
 44527  013B14  CFDE F0A9          	movff	postinc2,i2__doprnt@val+2
 44528  013B18  CFDE F0AA          	movff	postinc2,i2__doprnt@val+3
 44529  013B1C  D019               	goto	i2l2080
 44530  013B1E                     i2l2079:
 44531                           
 44532                           ; BSR set to: 0
 44533                           ;doprnt.c: 1257: else
 44534                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 44535                           
 44536                           ; BSR set to: 0
 44537  013B1E  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 44538  013B22  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 44539  013B26  CFDF F08E          	movff	indf2,??i2__doprnt
 44540  013B2A  0E02               	movlw	2
 44541  013B2C  26DE               	addwf	postinc2,f,c
 44542  013B2E  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44543  013B32  0E00               	movlw	0
 44544  013B34  22DD               	addwfc	postdec2,f,c
 44545  013B36  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44546  013B3A  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44547  013B3E  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 44548  013B42  CFDD F0A8          	movff	postdec2,i2__doprnt@val+1
 44549  013B46  0E00               	movlw	0
 44550  013B48  BFA8               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 44551  013B4A  0EFF               	movlw	-1
 44552  013B4C  6FA9               	movwf	(i2__doprnt@val+2)& (0+255),b
 44553  013B4E  6FAA               	movwf	(i2__doprnt@val+3)& (0+255),b
 44554  013B50                     i2l2080:
 44555                           
 44556                           ; BSR set to: 0
 44557                           ;doprnt.c: 1261: if((long)val < 0) {
 44558                           
 44559                           ; BSR set to: 0
 44560  013B50  AFAA               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 44561  013B52  D040               	goto	i2l2084
 44562                           
 44563                           ; BSR set to: 0
 44564                           ;doprnt.c: 1262: flag |= 0x03;
 44565  013B54  0E03               	movlw	3
 44566  013B56  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 44567                           
 44568                           ; BSR set to: 0
 44569                           ;doprnt.c: 1263: val = -val;
 44570  013B58  1FAA               	comf	(i2__doprnt@val+3)& (0+255),f,b
 44571  013B5A  1FA9               	comf	(i2__doprnt@val+2)& (0+255),f,b
 44572  013B5C  1FA8               	comf	(i2__doprnt@val+1)& (0+255),f,b
 44573  013B5E  6DA7               	negf	i2__doprnt@val& (0+255),b
 44574  013B60  0E00               	movlw	0
 44575  013B62  23A8               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 44576  013B64  23A9               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 44577  013B66  23AA               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 44578                           
 44579                           ; BSR set to: 0
 44580                           ;doprnt.c: 1264: }
 44581                           ;doprnt.c: 1266: }
 44582  013B68  D035               	goto	i2l2084
 44583  013B6A                     i2l2078:
 44584                           
 44585                           ; BSR set to: 0
 44586                           ;doprnt.c: 1268: else
 44587                           ;doprnt.c: 1273: {
 44588                           ;doprnt.c: 1281: if(flag & 0x10)
 44589  013B6A  A9AD               	btfss	i2__doprnt@flag& (0+255),4,b
 44590  013B6C  D019               	goto	i2l2083
 44591                           
 44592                           ; BSR set to: 0
 44593                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 44594  013B6E  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 44595  013B72  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 44596  013B76  CFDF F08E          	movff	indf2,??i2__doprnt
 44597  013B7A  0E04               	movlw	4
 44598  013B7C  26DE               	addwf	postinc2,f,c
 44599  013B7E  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44600  013B82  0E00               	movlw	0
 44601  013B84  22DD               	addwfc	postdec2,f,c
 44602  013B86  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44603  013B8A  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44604  013B8E  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 44605  013B92  CFDE F0A8          	movff	postinc2,i2__doprnt@val+1
 44606  013B96  CFDE F0A9          	movff	postinc2,i2__doprnt@val+2
 44607  013B9A  CFDE F0AA          	movff	postinc2,i2__doprnt@val+3
 44608  013B9E  D01A               	goto	i2l2084
 44609  013BA0                     i2l2083:
 44610                           
 44611                           ; BSR set to: 0
 44612                           ;doprnt.c: 1283: else
 44613                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 44614                           
 44615                           ; BSR set to: 0
 44616  013BA0  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 44617  013BA4  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 44618  013BA8  CFDF F08E          	movff	indf2,??i2__doprnt
 44619  013BAC  0E02               	movlw	2
 44620  013BAE  26DE               	addwf	postinc2,f,c
 44621  013BB0  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44622  013BB4  0E00               	movlw	0
 44623  013BB6  22DD               	addwfc	postdec2,f,c
 44624  013BB8  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44625  013BBC  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44626  013BC0  CFDE F090          	movff	postinc2,??i2__doprnt+2
 44627  013BC4  CFDD F091          	movff	postdec2,??i2__doprnt+3
 44628  013BC8  C090  F0A7         	movff	??i2__doprnt+2,i2__doprnt@val
 44629  013BCC  C091  F0A8         	movff	??i2__doprnt+3,i2__doprnt@val+1
 44630  013BD0  6BA9               	clrf	(i2__doprnt@val+2)& (0+255),b
 44631  013BD2  6BAA               	clrf	(i2__doprnt@val+3)& (0+255),b
 44632  013BD4                     i2l2084:
 44633                           
 44634                           ; BSR set to: 0
 44635                           ;doprnt.c: 1287: }
 44636                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 44637                           
 44638                           ; BSR set to: 0
 44639                           
 44640                           ; BSR set to: 0
 44641  013BD4  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44642  013BD6  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 44643  013BD8  A4D8               	btfss	status,2,c
 44644  013BDA  D04B               	goto	i2l2086
 44645                           
 44646                           ; BSR set to: 0
 44647  013BDC  51A7               	movf	i2__doprnt@val& (0+255),w,b
 44648  013BDE  11A8               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 44649  013BE0  11A9               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 44650  013BE2  11AA               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 44651  013BE4  A4D8               	btfss	status,2,c
 44652  013BE6  D045               	goto	i2l2086
 44653                           
 44654                           ; BSR set to: 0
 44655                           ;doprnt.c: 1291: prec++;
 44656  013BE8  4BAF               	infsnz	i2__doprnt@prec& (0+255),f,b
 44657  013BEA  2BB0               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 44658                           
 44659                           ; BSR set to: 0
 44660                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 44661  013BEC  D042               	goto	i2l2086
 44662  013BEE                     
 44663                           ; BSR set to: 0
 44664                           ;doprnt.c: 1302: case 0xC0:
 44665                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 44666                           
 44667                           ; BSR set to: 0
 44668                           
 44669                           ; BSR set to: 0
 44670  013BEE  0E01               	movlw	1
 44671  013BF0  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44672  013BF2                     i2l22985:
 44673                           
 44674                           ; BSR set to: 0
 44675  013BF2  0E0A               	movlw	10
 44676  013BF4  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 44677  013BF6  B4D8               	btfsc	status,2,c
 44678  013BF8  D047               	goto	i2l2092
 44679                           
 44680                           ; BSR set to: 0
 44681                           ;doprnt.c: 1306: if(val < dpowers[c])
 44682                           
 44683                           ; BSR set to: 0
 44684                           
 44685                           ; BSR set to: 0
 44686  013BFA  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44687  013BFC  0D04               	mullw	4
 44688  013BFE  0E0B               	movlw	low _dpowers
 44689  013C00  24F3               	addwf	prodl,w,c
 44690  013C02  6EF6               	movwf	tblptrl,c
 44691  013C04  0ECF               	movlw	high _dpowers
 44692  013C06  20F4               	addwfc	prodh,w,c
 44693  013C08  6EF7               	movwf	tblptrh,c
 44694  013C0A                     	if	1	;There are 3 active tblptr bytes
 44695  013C0A  6AF8               	clrf	tblptru,c
 44696  013C0C  0E00               	movlw	low (__mediumconst shr (0+16))
 44697  013C0E  22F8               	addwfc	tblptru,f,c
 44698  013C10                     	endif
 44699  013C10  0009               	tblrd		*+
 44700  013C12  50F5               	movf	tablat,w,c
 44701  013C14  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 44702  013C16  0009               	tblrd		*+
 44703  013C18  50F5               	movf	tablat,w,c
 44704  013C1A  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 44705  013C1C  0009               	tblrd		*+
 44706  013C1E  50F5               	movf	tablat,w,c
 44707  013C20  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 44708  013C22  0009               	tblrd		*+
 44709  013C24  50F5               	movf	tablat,w,c
 44710  013C26  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 44711  013C28  A0D8               	btfss	status,0,c
 44712  013C2A  D02E               	goto	i2l2092
 44713                           
 44714                           ; BSR set to: 0
 44715                           
 44716                           ; BSR set to: 0
 44717                           
 44718                           ; BSR set to: 0
 44719                           ;doprnt.c: 1307: break;
 44720  013C2C  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 44721  013C2E  D7E1               	goto	i2l22985
 44722  013C30                     
 44723                           ; BSR set to: 0
 44724                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 44725                           
 44726                           ; BSR set to: 0
 44727  013C30  0E01               	movlw	1
 44728  013C32  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44729  013C34                     i2l22999:
 44730                           
 44731                           ; BSR set to: 0
 44732  013C34  0E08               	movlw	8
 44733  013C36  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 44734  013C38  B4D8               	btfsc	status,2,c
 44735  013C3A  D026               	goto	i2l2092
 44736                           
 44737                           ; BSR set to: 0
 44738                           ;doprnt.c: 1317: if(val < hexpowers[c])
 44739                           
 44740                           ; BSR set to: 0
 44741                           
 44742                           ; BSR set to: 0
 44743  013C3C  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44744  013C3E  0D04               	mullw	4
 44745  013C40  0E33               	movlw	low _hexpowers
 44746  013C42  24F3               	addwf	prodl,w,c
 44747  013C44  6EF6               	movwf	tblptrl,c
 44748  013C46  0ECF               	movlw	high _hexpowers
 44749  013C48  20F4               	addwfc	prodh,w,c
 44750  013C4A  6EF7               	movwf	tblptrh,c
 44751  013C4C                     	if	1	;There are 3 active tblptr bytes
 44752  013C4C  6AF8               	clrf	tblptru,c
 44753  013C4E  0E00               	movlw	low (__mediumconst shr (0+16))
 44754  013C50  22F8               	addwfc	tblptru,f,c
 44755  013C52                     	endif
 44756  013C52  0009               	tblrd		*+
 44757  013C54  50F5               	movf	tablat,w,c
 44758  013C56  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 44759  013C58  0009               	tblrd		*+
 44760  013C5A  50F5               	movf	tablat,w,c
 44761  013C5C  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 44762  013C5E  0009               	tblrd		*+
 44763  013C60  50F5               	movf	tablat,w,c
 44764  013C62  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 44765  013C64  0009               	tblrd		*+
 44766  013C66  50F5               	movf	tablat,w,c
 44767  013C68  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 44768  013C6A  A0D8               	btfss	status,0,c
 44769  013C6C  D00D               	goto	i2l2092
 44770                           
 44771                           ; BSR set to: 0
 44772                           
 44773                           ; BSR set to: 0
 44774                           
 44775                           ; BSR set to: 0
 44776                           ;doprnt.c: 1318: break;
 44777  013C6E  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 44778  013C70  D7E1               	goto	i2l22999
 44779  013C72                     i2l2086:
 44780                           
 44781                           ; BSR set to: 0
 44782                           
 44783                           ; BSR set to: 0
 44784  013C72  51AD               	movf	i2__doprnt@flag& (0+255),w,b
 44785  013C74  0BC0               	andlw	192
 44786                           
 44787                           ; Switch size 1, requested type "space"
 44788                           ; Number of cases is 3, Range of values is 0 to 192
 44789                           ; switch strategies available:
 44790                           ; Name         Instructions Cycles
 44791                           ; simple_byte           10     6 (average)
 44792                           ;	Chosen strategy is simple_byte
 44793  013C76  0A00               	xorlw	0	; case 0
 44794  013C78  B4D8               	btfsc	status,2,c
 44795  013C7A  D7B9               	goto	i2l2087
 44796  013C7C  0A80               	xorlw	128	; case 128
 44797  013C7E  B4D8               	btfsc	status,2,c
 44798  013C80  D7D7               	goto	i2l2093
 44799  013C82  0A40               	xorlw	64	; case 192
 44800  013C84  B4D8               	btfsc	status,2,c
 44801  013C86  D7B3               	goto	i2l2087
 44802  013C88                     i2l2092:
 44803                           
 44804                           ; BSR set to: 0
 44805                           ;doprnt.c: 1339: if(c < prec)
 44806                           
 44807                           ; BSR set to: 0
 44808  013C88  0E80               	movlw	128
 44809  013C8A  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44810  013C8C  0E7F               	movlw	127
 44811  013C8E  6F8E               	movwf	??i2__doprnt& (0+255),b
 44812  013C90  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44813  013C92  5DB1               	subwf	i2__doprnt@c& (0+255),w,b
 44814  013C94  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44815  013C96  0A80               	xorlw	128
 44816  013C98  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44817  013C9A  B0D8               	btfsc	status,0,c
 44818  013C9C  D003               	goto	i2l2097
 44819                           
 44820                           ; BSR set to: 0
 44821                           ;doprnt.c: 1340: c = prec;
 44822  013C9E  C0AF  F0B1         	movff	i2__doprnt@prec,i2__doprnt@c
 44823  013CA2  D010               	goto	i2l2099
 44824  013CA4                     i2l2097:
 44825                           
 44826                           ; BSR set to: 0
 44827                           ;doprnt.c: 1341: else if(prec < c)
 44828                           
 44829                           ; BSR set to: 0
 44830  013CA4  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44831  013CA6  0A80               	xorlw	128
 44832  013CA8  6F8E               	movwf	??i2__doprnt& (0+255),b
 44833  013CAA  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44834  013CAC  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 44835  013CAE  0E80               	movlw	128
 44836  013CB0  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44837  013CB2  0E7F               	movlw	127
 44838  013CB4  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44839  013CB6  B0D8               	btfsc	status,0,c
 44840  013CB8  D005               	goto	i2l2099
 44841                           
 44842                           ; BSR set to: 0
 44843                           ;doprnt.c: 1342: prec = c;
 44844  013CBA  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44845  013CBC  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 44846  013CBE  6BB0               	clrf	(i2__doprnt@prec+1)& (0+255),b
 44847  013CC0  BFAF               	btfsc	i2__doprnt@prec& (0+255),7,b
 44848  013CC2  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 44849  013CC4                     i2l2099:
 44850                           
 44851                           ; BSR set to: 0
 44852                           ;doprnt.c: 1345: if(width && flag & 0x03)
 44853                           
 44854                           ; BSR set to: 0
 44855                           
 44856                           ; BSR set to: 0
 44857  013CC4  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44858  013CC6  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44859  013CC8  B4D8               	btfsc	status,2,c
 44860  013CCA  D00D               	goto	i2l2100
 44861                           
 44862                           ; BSR set to: 0
 44863  013CCC  0E03               	movlw	3
 44864  013CCE  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44865  013CD0  6F8E               	movwf	??i2__doprnt& (0+255),b
 44866  013CD2  0E00               	movlw	0
 44867  013CD4  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44868  013CD6  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44869  013CD8  518E               	movf	??i2__doprnt& (0+255),w,b
 44870  013CDA  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44871  013CDC  B4D8               	btfsc	status,2,c
 44872  013CDE  D003               	goto	i2l2100
 44873                           
 44874                           ; BSR set to: 0
 44875                           ;doprnt.c: 1346: width--;
 44876  013CE0  07AB               	decf	i2__doprnt@width& (0+255),f,b
 44877  013CE2  A0D8               	btfss	status,0,c
 44878  013CE4  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 44879  013CE6                     i2l2100:
 44880                           
 44881                           ; BSR set to: 0
 44882                           ;doprnt.c: 1348: if(flag & 0x4000) {
 44883                           
 44884                           ; BSR set to: 0
 44885  013CE6  ADAE               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 44886  013CE8  D013               	goto	i2l2103
 44887                           
 44888                           ; BSR set to: 0
 44889                           ;doprnt.c: 1349: if(width > prec)
 44890  013CEA  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44891  013CEC  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 44892  013CEE  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44893  013CF0  0A80               	xorlw	128
 44894  013CF2  6F8E               	movwf	??i2__doprnt& (0+255),b
 44895  013CF4  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 44896  013CF6  0A80               	xorlw	128
 44897  013CF8  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44898  013CFA  B0D8               	btfsc	status,0,c
 44899  013CFC  D005               	goto	i2l2102
 44900                           
 44901                           ; BSR set to: 0
 44902                           ;doprnt.c: 1350: width -= prec;
 44903  013CFE  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44904  013D00  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 44905  013D02  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44906  013D04  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 44907  013D06  D004               	goto	i2l2103
 44908  013D08                     i2l2102:
 44909                           
 44910                           ; BSR set to: 0
 44911                           ;doprnt.c: 1351: else
 44912                           ;doprnt.c: 1352: width = 0;
 44913                           
 44914                           ; BSR set to: 0
 44915  013D08  0E00               	movlw	0
 44916  013D0A  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 44917  013D0C  0E00               	movlw	0
 44918  013D0E  6FAB               	movwf	i2__doprnt@width& (0+255),b
 44919  013D10                     i2l2103:
 44920                           
 44921                           ; BSR set to: 0
 44922                           ;doprnt.c: 1353: }
 44923                           ;doprnt.c: 1381: if(width > c)
 44924                           
 44925                           ; BSR set to: 0
 44926                           
 44927                           ; BSR set to: 0
 44928  013D10  0E80               	movlw	128
 44929  013D12  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44930  013D14  0E7F               	movlw	127
 44931  013D16  6F8E               	movwf	??i2__doprnt& (0+255),b
 44932  013D18  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44933  013D1A  5DB1               	subwf	i2__doprnt@c& (0+255),w,b
 44934  013D1C  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 44935  013D1E  0A80               	xorlw	128
 44936  013D20  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44937  013D22  B0D8               	btfsc	status,0,c
 44938  013D24  D007               	goto	i2l2104
 44939                           
 44940                           ; BSR set to: 0
 44941                           ;doprnt.c: 1382: width -= c;
 44942  013D26  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44943  013D28  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 44944  013D2A  0E00               	movlw	0
 44945  013D2C  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44946  013D2E  0EFF               	movlw	255
 44947  013D30  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 44948  013D32  D004               	goto	i2l2105
 44949  013D34                     i2l2104:
 44950                           
 44951                           ; BSR set to: 0
 44952                           ;doprnt.c: 1383: else
 44953                           ;doprnt.c: 1384: width = 0;
 44954                           
 44955                           ; BSR set to: 0
 44956  013D34  0E00               	movlw	0
 44957  013D36  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 44958  013D38  0E00               	movlw	0
 44959  013D3A  6FAB               	movwf	i2__doprnt@width& (0+255),b
 44960  013D3C                     i2l2105:
 44961                           
 44962                           ; BSR set to: 0
 44963                           ;doprnt.c: 1387: if(flag & 0x04) {
 44964                           
 44965                           ; BSR set to: 0
 44966  013D3C  A5AD               	btfss	i2__doprnt@flag& (0+255),2,b
 44967  013D3E  D07A               	goto	i2l2106
 44968                           
 44969                           ; BSR set to: 0
 44970                           ;doprnt.c: 1392: if(flag & 0x03)
 44971  013D40  0E03               	movlw	3
 44972  013D42  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44973  013D44  6F8E               	movwf	??i2__doprnt& (0+255),b
 44974  013D46  0E00               	movlw	0
 44975  013D48  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44976  013D4A  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44977  013D4C  518E               	movf	??i2__doprnt& (0+255),w,b
 44978  013D4E  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44979  013D50  B4D8               	btfsc	status,2,c
 44980  013D52  D033               	goto	i2l2109
 44981                           
 44982                           ; BSR set to: 0
 44983                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 44984  013D54  EE20 F002          	lfsr	2,2
 44985  013D58  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44986  013D5A  26D9               	addwf	fsr2l,f,c
 44987  013D5C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44988  013D5E  22DA               	addwfc	fsr2h,f,c
 44989  013D60  50DE               	movf	postinc2,w,c
 44990  013D62  10DE               	iorwf	postinc2,w,c
 44991  013D64  10DE               	iorwf	postinc2,w,c
 44992  013D66  B4D8               	btfsc	status,2,c
 44993  013D68  D013               	goto	i2l2108
 44994                           
 44995                           ; BSR set to: 0
 44996  013D6A  EE20 F002          	lfsr	2,2
 44997  013D6E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44998  013D70  26D9               	addwf	fsr2l,f,c
 44999  013D72  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45000  013D74  22DA               	addwfc	fsr2h,f,c
 45001  013D76  D801               	call	i2u3403_48
 45002  013D78  D020               	goto	i2l2109
 45003  013D7A                     i2u3403_48:
 45004  013D7A  0005               	push	
 45005  013D7C  6EFA               	movwf	pclath,c
 45006  013D7E  50DE               	movf	postinc2,w,c
 45007  013D80  6EFD               	movwf	tosl,c
 45008  013D82  50DE               	movf	postinc2,w,c
 45009  013D84  6EFE               	movwf	tosh,c
 45010  013D86  50DE               	movf	postinc2,w,c
 45011  013D88  6EFF               	movwf	tosu,c
 45012  013D8A  50FA               	movf	pclath,w,c
 45013  013D8C  0E2D               	movlw	45
 45014  013D8E  0012               	return		;indir
 45015  013D90                     i2l2108:
 45016  013D90  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45017  013D94  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45018  013D98  CFDE F08E          	movff	postinc2,??i2__doprnt
 45019  013D9C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 45020  013DA0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 45021  013DA4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 45022  013DA8  0E2D               	movlw	45
 45023  013DAA  6EDF               	movwf	indf2,c
 45024  013DAC  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45025  013DB0  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45026  013DB4  2ADE               	incf	postinc2,f,c
 45027  013DB6  0E00               	movlw	0
 45028  013DB8  22DD               	addwfc	postdec2,f,c
 45029  013DBA                     i2l2109:
 45030                           
 45031                           ;doprnt.c: 1415: if(width)
 45032  013DBA  0100               	movlb	0	; () banked
 45033  013DBC  51AB               	movf	i2__doprnt@width& (0+255),w,b
 45034  013DBE  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 45035  013DC0  B4D8               	btfsc	status,2,c
 45036  013DC2  D16A               	goto	i2l2132
 45037                           
 45038                           ; BSR set to: 0
 45039                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 45040                           
 45041                           ; BSR set to: 0
 45042                           
 45043                           ;doprnt.c: 1416: do
 45044  013DC4  EE20 F002          	lfsr	2,2
 45045  013DC8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 45046  013DCA  26D9               	addwf	fsr2l,f,c
 45047  013DCC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45048  013DCE  22DA               	addwfc	fsr2h,f,c
 45049  013DD0  50DE               	movf	postinc2,w,c
 45050  013DD2  10DE               	iorwf	postinc2,w,c
 45051  013DD4  10DE               	iorwf	postinc2,w,c
 45052  013DD6  B4D8               	btfsc	status,2,c
 45053  013DD8  D013               	goto	i2l2112
 45054                           
 45055                           ; BSR set to: 0
 45056  013DDA  EE20 F002          	lfsr	2,2
 45057  013DDE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 45058  013DE0  26D9               	addwf	fsr2l,f,c
 45059  013DE2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45060  013DE4  22DA               	addwfc	fsr2h,f,c
 45061  013DE6  D801               	call	i2u3406_48
 45062  013DE8  D020               	goto	i2l2113
 45063  013DEA                     i2u3406_48:
 45064  013DEA  0005               	push	
 45065  013DEC  6EFA               	movwf	pclath,c
 45066  013DEE  50DE               	movf	postinc2,w,c
 45067  013DF0  6EFD               	movwf	tosl,c
 45068  013DF2  50DE               	movf	postinc2,w,c
 45069  013DF4  6EFE               	movwf	tosh,c
 45070  013DF6  50DE               	movf	postinc2,w,c
 45071  013DF8  6EFF               	movwf	tosu,c
 45072  013DFA  50FA               	movf	pclath,w,c
 45073  013DFC  0E30               	movlw	48
 45074  013DFE  0012               	return		;indir
 45075  013E00                     i2l2112:
 45076  013E00  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45077  013E04  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45078  013E08  CFDE F08E          	movff	postinc2,??i2__doprnt
 45079  013E0C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 45080  013E10  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 45081  013E14  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 45082  013E18  0E30               	movlw	48
 45083  013E1A  6EDF               	movwf	indf2,c
 45084  013E1C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45085  013E20  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45086  013E24  2ADE               	incf	postinc2,f,c
 45087  013E26  0E00               	movlw	0
 45088  013E28  22DD               	addwfc	postdec2,f,c
 45089  013E2A                     i2l2113:
 45090                           
 45091                           ;doprnt.c: 1418: while(--width);
 45092  013E2A  0100               	movlb	0	; () banked
 45093  013E2C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 45094  013E2E  A0D8               	btfss	status,0,c
 45095  013E30  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 45096  013E32  D7C4               	goto	L34
 45097  013E34                     i2l2106:
 45098                           
 45099                           ; BSR set to: 0
 45100                           ;doprnt.c: 1422: {
 45101                           ;doprnt.c: 1424: if(width
 45102                           ;doprnt.c: 1428: )
 45103                           
 45104                           ; BSR set to: 0
 45105  013E34  51AB               	movf	i2__doprnt@width& (0+255),w,b
 45106  013E36  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 45107  013E38  B4D8               	btfsc	status,2,c
 45108  013E3A  D03B               	goto	i2u3411_40
 45109  013E3C                     i2u3408_40:
 45110                           
 45111                           ; BSR set to: 0
 45112                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 45113                           
 45114                           ; BSR set to: 0
 45115                           
 45116                           ;doprnt.c: 1429: do
 45117  013E3C  EE20 F002          	lfsr	2,2
 45118  013E40  5188               	movf	i2__doprnt@pb& (0+255),w,b
 45119  013E42  26D9               	addwf	fsr2l,f,c
 45120  013E44  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45121  013E46  22DA               	addwfc	fsr2h,f,c
 45122  013E48  50DE               	movf	postinc2,w,c
 45123  013E4A  10DE               	iorwf	postinc2,w,c
 45124  013E4C  10DE               	iorwf	postinc2,w,c
 45125  013E4E  B4D8               	btfsc	status,2,c
 45126  013E50  D013               	goto	i2l2118
 45127                           
 45128                           ; BSR set to: 0
 45129  013E52  EE20 F002          	lfsr	2,2
 45130  013E56  5188               	movf	i2__doprnt@pb& (0+255),w,b
 45131  013E58  26D9               	addwf	fsr2l,f,c
 45132  013E5A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45133  013E5C  22DA               	addwfc	fsr2h,f,c
 45134  013E5E  D801               	call	i2u3410_48
 45135  013E60  D020               	goto	i2l2119
 45136  013E62                     i2u3410_48:
 45137  013E62  0005               	push	
 45138  013E64  6EFA               	movwf	pclath,c
 45139  013E66  50DE               	movf	postinc2,w,c
 45140  013E68  6EFD               	movwf	tosl,c
 45141  013E6A  50DE               	movf	postinc2,w,c
 45142  013E6C  6EFE               	movwf	tosh,c
 45143  013E6E  50DE               	movf	postinc2,w,c
 45144  013E70  6EFF               	movwf	tosu,c
 45145  013E72  50FA               	movf	pclath,w,c
 45146  013E74  0E20               	movlw	32
 45147  013E76  0012               	return		;indir
 45148  013E78                     i2l2118:
 45149  013E78  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45150  013E7C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45151  013E80  CFDE F08E          	movff	postinc2,??i2__doprnt
 45152  013E84  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 45153  013E88  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 45154  013E8C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 45155  013E90  0E20               	movlw	32
 45156  013E92  6EDF               	movwf	indf2,c
 45157  013E94  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45158  013E98  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45159  013E9C  2ADE               	incf	postinc2,f,c
 45160  013E9E  0E00               	movlw	0
 45161  013EA0  22DD               	addwfc	postdec2,f,c
 45162  013EA2                     i2l2119:
 45163                           
 45164                           ;doprnt.c: 1431: while(--width);
 45165  013EA2  0100               	movlb	0	; () banked
 45166  013EA4  07AB               	decf	i2__doprnt@width& (0+255),f,b
 45167  013EA6  A0D8               	btfss	status,0,c
 45168  013EA8  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 45169  013EAA  51AB               	movf	i2__doprnt@width& (0+255),w,b
 45170  013EAC  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 45171  013EAE  A4D8               	btfss	status,2,c
 45172  013EB0  D7C5               	goto	i2u3408_40
 45173  013EB2                     i2u3411_40:
 45174                           
 45175                           ; BSR set to: 0
 45176                           ;doprnt.c: 1438: if(flag & 0x03)
 45177                           
 45178                           ; BSR set to: 0
 45179                           
 45180                           ; BSR set to: 0
 45181  013EB2  0E03               	movlw	3
 45182  013EB4  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 45183  013EB6  6F8E               	movwf	??i2__doprnt& (0+255),b
 45184  013EB8  0E00               	movlw	0
 45185  013EBA  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 45186  013EBC  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 45187  013EBE  518E               	movf	??i2__doprnt& (0+255),w,b
 45188  013EC0  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 45189  013EC2  B4D8               	btfsc	status,2,c
 45190  013EC4  D0E9               	goto	i2l2132
 45191                           
 45192                           ; BSR set to: 0
 45193                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 45194  013EC6  EE20 F002          	lfsr	2,2
 45195  013ECA  5188               	movf	i2__doprnt@pb& (0+255),w,b
 45196  013ECC  26D9               	addwf	fsr2l,f,c
 45197  013ECE  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45198  013ED0  22DA               	addwfc	fsr2h,f,c
 45199  013ED2  50DE               	movf	postinc2,w,c
 45200  013ED4  10DE               	iorwf	postinc2,w,c
 45201  013ED6  10DE               	iorwf	postinc2,w,c
 45202  013ED8  B4D8               	btfsc	status,2,c
 45203  013EDA  D013               	goto	i2l2122
 45204                           
 45205                           ; BSR set to: 0
 45206  013EDC  EE20 F002          	lfsr	2,2
 45207  013EE0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 45208  013EE2  26D9               	addwf	fsr2l,f,c
 45209  013EE4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45210  013EE6  22DA               	addwfc	fsr2h,f,c
 45211  013EE8  D801               	call	i2u3414_48
 45212  013EEA  D0D6               	goto	i2l2132
 45213  013EEC                     i2u3414_48:
 45214  013EEC  0005               	push	
 45215  013EEE  6EFA               	movwf	pclath,c
 45216  013EF0  50DE               	movf	postinc2,w,c
 45217  013EF2  6EFD               	movwf	tosl,c
 45218  013EF4  50DE               	movf	postinc2,w,c
 45219  013EF6  6EFE               	movwf	tosh,c
 45220  013EF8  50DE               	movf	postinc2,w,c
 45221  013EFA  6EFF               	movwf	tosu,c
 45222  013EFC  50FA               	movf	pclath,w,c
 45223  013EFE  0E2D               	movlw	45
 45224  013F00  0012               	return		;indir
 45225  013F02                     i2l2122:
 45226  013F02  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45227  013F06  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45228  013F0A  CFDE F08E          	movff	postinc2,??i2__doprnt
 45229  013F0E  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 45230  013F12  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 45231  013F16  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 45232  013F1A  0E2D               	movlw	45
 45233  013F1C  6EDF               	movwf	indf2,c
 45234  013F1E  D0B5               	goto	i2l23105
 45235  013F20                     
 45236                           ;doprnt.c: 1486: case 0xC0:
 45237                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 45238  013F20  C0AF  F08E         	movff	i2__doprnt@prec,??i2__doprnt
 45239  013F24  C0B0  F08F         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 45240  013F28  0100               	movlb	0	; () banked
 45241  013F2A  90D8               	bcf	status,0,c
 45242  013F2C  378E               	rlcf	??i2__doprnt& (0+255),f,b
 45243  013F2E  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 45244  013F30  90D8               	bcf	status,0,c
 45245  013F32  378E               	rlcf	??i2__doprnt& (0+255),f,b
 45246  013F34  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 45247  013F36  0E0B               	movlw	low _dpowers
 45248  013F38  258E               	addwf	??i2__doprnt& (0+255),w,b
 45249  013F3A  6EF6               	movwf	tblptrl,c
 45250  013F3C  0ECF               	movlw	high _dpowers
 45251  013F3E  218F               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 45252  013F40  6EF7               	movwf	tblptrh,c
 45253  013F42                     	if	1	;There are 3 active tblptr bytes
 45254  013F42  6AF8               	clrf	tblptru,c
 45255  013F44  0E00               	movlw	low (__mediumconst shr (0+16))
 45256  013F46  22F8               	addwfc	tblptru,f,c
 45257  013F48                     	endif
 45258  013F48  0009               	tblrd		*+
 45259  013F4A  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 45260  013F4E  0009               	tblrd		*+
 45261  013F50  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 45262  013F54  0009               	tblrd		*+
 45263  013F56  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 45264  013F5A  000A               	tblrd		*-
 45265  013F5C  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 45266  013F60  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 45267  013F64  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 45268  013F68  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 45269  013F6C  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 45270  013F70  EC79  F0CE         	call	i2___lldiv
 45271  013F74  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 45272  013F78  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 45273  013F7C  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 45274  013F80  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 45275  013F84  0E0A               	movlw	10
 45276  013F86  6E12               	movwf	i2___llmod@divisor,c
 45277  013F88  0E00               	movlw	0
 45278  013F8A  6E13               	movwf	i2___llmod@divisor+1,c
 45279  013F8C  0E00               	movlw	0
 45280  013F8E  6E14               	movwf	i2___llmod@divisor+2,c
 45281  013F90  0E00               	movlw	0
 45282  013F92  6E15               	movwf	i2___llmod@divisor+3,c
 45283  013F94  EC1A  F0D1         	call	i2___llmod	;wreg free
 45284  013F98  500E               	movf	?i2___llmod,w,c
 45285  013F9A  0F30               	addlw	48
 45286  013F9C  0100               	movlb	0	; () banked
 45287  013F9E  6FB1               	movwf	i2__doprnt@c& (0+255),b
 45288                           
 45289                           ;doprnt.c: 1491: break;
 45290  013FA0  D048               	goto	i2l2129
 45291  013FA2                     
 45292                           ; BSR set to: 0
 45293                           ;doprnt.c: 1499: {
 45294                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 45295                           
 45296                           ; BSR set to: 0
 45297  013FA2  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 45298  013FA6  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 45299  013FAA  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 45300  013FAE  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 45301  013FB2  C0AF  F08E         	movff	i2__doprnt@prec,??i2__doprnt
 45302  013FB6  C0B0  F08F         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 45303  013FBA  90D8               	bcf	status,0,c
 45304  013FBC  378E               	rlcf	??i2__doprnt& (0+255),f,b
 45305  013FBE  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 45306  013FC0  90D8               	bcf	status,0,c
 45307  013FC2  378E               	rlcf	??i2__doprnt& (0+255),f,b
 45308  013FC4  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 45309  013FC6  0E33               	movlw	low _hexpowers
 45310  013FC8  258E               	addwf	??i2__doprnt& (0+255),w,b
 45311  013FCA  6EF6               	movwf	tblptrl,c
 45312  013FCC  0ECF               	movlw	high _hexpowers
 45313  013FCE  218F               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 45314  013FD0  6EF7               	movwf	tblptrh,c
 45315  013FD2                     	if	1	;There are 3 active tblptr bytes
 45316  013FD2  6AF8               	clrf	tblptru,c
 45317  013FD4  0E00               	movlw	low (__mediumconst shr (0+16))
 45318  013FD6  22F8               	addwfc	tblptru,f,c
 45319  013FD8                     	endif
 45320  013FD8  0009               	tblrd		*+
 45321  013FDA  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 45322  013FDE  0009               	tblrd		*+
 45323  013FE0  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 45324  013FE4  0009               	tblrd		*+
 45325  013FE6  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 45326  013FEA  000A               	tblrd		*-
 45327  013FEC  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 45328  013FF0  EC79  F0CE         	call	i2___lldiv	;wreg free
 45329  013FF4  5001               	movf	?i2___lldiv,w,c
 45330  013FF6  0B0F               	andlw	15
 45331  013FF8  0100               	movlb	0	; () banked
 45332  013FFA  6F98               	movwf	i2__doprnt@idx& (0+255),b
 45333                           
 45334                           ; BSR set to: 0
 45335                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 45336  013FFC  5198               	movf	i2__doprnt@idx& (0+255),w,b
 45337  013FFE  0D01               	mullw	1
 45338  014000  0EEA               	movlw	low STR_192
 45339  014002  24F3               	addwf	prodl,w,c
 45340  014004  6EF6               	movwf	tblptrl,c
 45341  014006  0EFC               	movlw	high STR_192
 45342  014008  20F4               	addwfc	prodh,w,c
 45343  01400A  6EF7               	movwf	tblptrh,c
 45344  01400C                     	if	1	;There are 3 active tblptr bytes
 45345  01400C  6AF8               	clrf	tblptru,c
 45346  01400E  0E00               	movlw	low (__mediumconst shr (0+16))
 45347  014010  22F8               	addwfc	tblptru,f,c
 45348  014012                     	endif
 45349  014012  0008               	tblrd		*
 45350  014014  CFF5 F0B1          	movff	tablat,i2__doprnt@c
 45351                           
 45352                           ; BSR set to: 0
 45353                           ;doprnt.c: 1523: }
 45354                           
 45355                           ;doprnt.c: 1508: }
 45356                           ;doprnt.c: 1510: break;
 45357  014018  D00C               	goto	i2l2129
 45358  01401A                     i2l23097:
 45359  01401A  0100               	movlb	0	; () banked
 45360  01401C  51AD               	movf	i2__doprnt@flag& (0+255),w,b
 45361  01401E  0BC0               	andlw	192
 45362                           
 45363                           ; Switch size 1, requested type "space"
 45364                           ; Number of cases is 3, Range of values is 0 to 192
 45365                           ; switch strategies available:
 45366                           ; Name         Instructions Cycles
 45367                           ; simple_byte           10     6 (average)
 45368                           ;	Chosen strategy is simple_byte
 45369  014020  0A00               	xorlw	0	; case 0
 45370  014022  B4D8               	btfsc	status,2,c
 45371  014024  D77D               	goto	i2l2127
 45372  014026  0A80               	xorlw	128	; case 128
 45373  014028  B4D8               	btfsc	status,2,c
 45374  01402A  D7BB               	goto	i2l2130
 45375  01402C  0A40               	xorlw	64	; case 192
 45376  01402E  B4D8               	btfsc	status,2,c
 45377  014030  D777               	goto	i2l2127
 45378  014032                     i2l2129:
 45379                           
 45380                           ; BSR set to: 0
 45381                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 45382                           
 45383                           ; BSR set to: 0
 45384  014032  EE20 F002          	lfsr	2,2
 45385  014036  5188               	movf	i2__doprnt@pb& (0+255),w,b
 45386  014038  26D9               	addwf	fsr2l,f,c
 45387  01403A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45388  01403C  22DA               	addwfc	fsr2h,f,c
 45389  01403E  50DE               	movf	postinc2,w,c
 45390  014040  10DE               	iorwf	postinc2,w,c
 45391  014042  10DE               	iorwf	postinc2,w,c
 45392  014044  B4D8               	btfsc	status,2,c
 45393  014046  D013               	goto	i2l2131
 45394                           
 45395                           ; BSR set to: 0
 45396  014048  EE20 F002          	lfsr	2,2
 45397  01404C  5188               	movf	i2__doprnt@pb& (0+255),w,b
 45398  01404E  26D9               	addwf	fsr2l,f,c
 45399  014050  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45400  014052  22DA               	addwfc	fsr2h,f,c
 45401  014054  D801               	call	i2u3416_48
 45402  014056  D020               	goto	i2l2132
 45403  014058                     i2u3416_48:
 45404  014058  0005               	push	
 45405  01405A  6EFA               	movwf	pclath,c
 45406  01405C  50DE               	movf	postinc2,w,c
 45407  01405E  6EFD               	movwf	tosl,c
 45408  014060  50DE               	movf	postinc2,w,c
 45409  014062  6EFE               	movwf	tosh,c
 45410  014064  50DE               	movf	postinc2,w,c
 45411  014066  6EFF               	movwf	tosu,c
 45412  014068  50FA               	movf	pclath,w,c
 45413  01406A  51B1               	movf	i2__doprnt@c& (0+255),w,b
 45414  01406C  0012               	return		;indir
 45415  01406E                     i2l2131:
 45416  01406E  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45417  014072  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45418  014076  CFDE F08E          	movff	postinc2,??i2__doprnt
 45419  01407A  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 45420  01407E  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 45421  014082  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 45422  014086  C0B1  FFDF         	movff	i2__doprnt@c,indf2
 45423  01408A                     i2l23105:
 45424  01408A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45425  01408E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45426  014092  2ADE               	incf	postinc2,f,c
 45427  014094  0E00               	movlw	0
 45428  014096  22DD               	addwfc	postdec2,f,c
 45429  014098                     i2l2132:
 45430  014098  0100               	movlb	0	; () banked
 45431  01409A  07AF               	decf	i2__doprnt@prec& (0+255),f,b
 45432  01409C  A0D8               	btfss	status,0,c
 45433  01409E  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 45434  0140A0  29AF               	incf	i2__doprnt@prec& (0+255),w,b
 45435  0140A2  E1BB               	bnz	i2l23097
 45436  0140A4  29B0               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 45437  0140A6  A4D8               	btfss	status,2,c
 45438  0140A8  D7B8               	goto	i2l2126
 45439  0140AA                     i2u3417_40:
 45440                           
 45441                           ; BSR set to: 0
 45442                           
 45443                           ; BSR set to: 0
 45444  0140AA  0100               	movlb	0	; () banked
 45445  0140AC  518A               	movf	i2__doprnt@f& (0+255),w,b
 45446  0140AE  6F8E               	movwf	??i2__doprnt& (0+255),b
 45447  0140B0  518B               	movf	(i2__doprnt@f+1)& (0+255),w,b
 45448  0140B2  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 45449  0140B4  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 45450  0140B6  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 45451  0140B8  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 45452  0140BC  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 45453  0140C0  0E00               	movlw	low (__mediumconst shr (0+16))
 45454  0140C2  6EF8               	movwf	tblptru,c
 45455  0140C4  0E0D               	movlw	(high __ramtop+-1)
 45456  0140C6  64F7               	cpfsgt	tblptrh,c
 45457  0140C8  D003               	bra	i2u3418_47
 45458  0140CA  0008               	tblrd		*
 45459  0140CC  50F5               	movf	tablat,w,c
 45460  0140CE  D005               	bra	i2u3418_40
 45461  0140D0                     i2u3418_47:
 45462  0140D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 45463  0140D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 45464  0140D8  50EF               	movf	indf0,w,c
 45465  0140DA                     i2u3418_40:
 45466  0140DA  0100               	movlb	0	; () banked
 45467  0140DC  6FB1               	movwf	i2__doprnt@c& (0+255),b
 45468  0140DE  51B1               	movf	i2__doprnt@c& (0+255),w,b
 45469  0140E0  A4D8               	btfss	status,2,c
 45470  0140E2  EFF8  F095         	goto	i2l1960
 45471  0140E6                     i2u3419_40:
 45472                           
 45473                           ; BSR set to: 0
 45474                           ;doprnt.c: 1540: return 0;
 45475                           
 45476                           ; BSR set to: 0
 45477                           
 45478                           ;doprnt.c: 1525: }
 45479                           ;doprnt.c: 1533: }
 45480                           ;doprnt.c: 1535: alldone:
 45481                           
 45482                           ; BSR set to: 0
 45483  0140E6  0E00               	movlw	0
 45484  0140E8  6F89               	movwf	(?i2__doprnt+1)& (0+255),b
 45485  0140EA  0E00               	movlw	0
 45486  0140EC  6F88               	movwf	?i2__doprnt& (0+255),b
 45487  0140EE  0012               	return	
 45488  0140F0                     __end_ofi2__doprnt:
 45489                           	opt stack 0
 45490                           tosu	equ	0xFFF
 45491                           tosh	equ	0xFFE
 45492                           tosl	equ	0xFFD
 45493                           pclatu	equ	0xFFB
 45494                           pclath	equ	0xFFA
 45495                           tblptru	equ	0xFF8
 45496                           tblptrh	equ	0xFF7
 45497                           tblptrl	equ	0xFF6
 45498                           tablat	equ	0xFF5
 45499                           prodh	equ	0xFF4
 45500                           prodl	equ	0xFF3
 45501                           intcon	equ	0xFF2
 45502                           indf0	equ	0xFEF
 45503                           postinc0	equ	0xFEE
 45504                           fsr0h	equ	0xFEA
 45505                           fsr0l	equ	0xFE9
 45506                           wreg	equ	0xFE8
 45507                           indf1	equ	0xFE7
 45508                           postdec1	equ	0xFE5
 45509                           plusw1	equ	0xFE3
 45510                           fsr1h	equ	0xFE2
 45511                           fsr1l	equ	0xFE1
 45512                           bsr	equ	0xFE0
 45513                           indf2	equ	0xFDF
 45514                           postinc2	equ	0xFDE
 45515                           postdec2	equ	0xFDD
 45516                           plusw2	equ	0xFDB
 45517                           fsr2h	equ	0xFDA
 45518                           fsr2l	equ	0xFD9
 45519                           status	equ	0xFD8
 45520                           
 45521 ;; *************** function i2_scale *****************
 45522 ;; Defined at:
 45523 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 45524 ;; Parameters:    Size  Location     Type
 45525 ;;  scl             1    wreg     char 
 45526 ;; Auto vars:     Size  Location     Type
 45527 ;;  scl             1   80[COMRAM] char 
 45528 ;; Return value:  Size  Location     Type
 45529 ;;                  4   72[COMRAM] char 
 45530 ;; Registers used:
 45531 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45532 ;; Tracked objects:
 45533 ;;		On entry : 0/0
 45534 ;;		On exit  : 0/0
 45535 ;;		Unchanged: 0/0
 45536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45538 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45540 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45541 ;;Total ram usage:        9 bytes
 45542 ;; Hardware stack levels used:    1
 45543 ;; Hardware stack levels required when called:    1
 45544 ;; This function calls:
 45545 ;;		i2___awdiv
 45546 ;;		i2___awmod
 45547 ;;		i2___flmul
 45548 ;; This function is called by:
 45549 ;;		i2__doprnt
 45550 ;; This function uses a non-reentrant model
 45551 ;;
 45552                           
 45553                           	psect	text135
 45554  015058                     __ptext135:
 45555                           	opt stack 0
 45556  015058                     i2_scale:
 45557                           	opt stack 13
 45558                           
 45559                           ; BSR set to: 0
 45560                           ;incstack = 0
 45561                           ;i2scale@scl stored from wreg
 45562  015058  6E51               	movwf	i2scale@scl,c
 45563                           
 45564                           ;doprnt.c: 428: if(scl < 0) {
 45565  01505A  AE51               	btfss	i2scale@scl,7,c
 45566  01505C  D11F               	goto	i2l1949
 45567                           
 45568                           ;doprnt.c: 429: scl = -scl;
 45569  01505E  6C51               	negf	i2scale@scl,c
 45570                           
 45571                           ;doprnt.c: 430: if(scl>=110)
 45572  015060  5051               	movf	i2scale@scl,w,c
 45573  015062  0A80               	xorlw	128
 45574  015064  0F12               	addlw	-238
 45575  015066  A0D8               	btfss	status,0,c
 45576  015068  D0A1               	goto	i2l1950
 45577                           
 45578                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 45579  01506A  0E00               	movlw	0
 45580  01506C  6E0A               	movwf	i2___awdiv@divisor+1,c
 45581  01506E  0E0A               	movlw	10
 45582  015070  6E09               	movwf	i2___awdiv@divisor,c
 45583  015072  0E00               	movlw	0
 45584  015074  6E04               	movwf	i2___awmod@divisor+1,c
 45585  015076  0E64               	movlw	100
 45586  015078  6E03               	movwf	i2___awmod@divisor,c
 45587  01507A  5051               	movf	i2scale@scl,w,c
 45588  01507C  6E01               	movwf	i2___awmod@dividend,c
 45589  01507E  6A02               	clrf	i2___awmod@dividend+1,c
 45590  015080  BE01               	btfsc	i2___awmod@dividend,7,c
 45591  015082  0602               	decf	i2___awmod@dividend+1,f,c
 45592  015084  EC6E  F0CF         	call	i2___awmod
 45593  015088  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 45594  01508C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 45595  015090  ECF6  F0CD         	call	i2___awdiv	;wreg free
 45596  015094  90D8               	bcf	status,0,c
 45597  015096  3607               	rlcf	?i2___awdiv,f,c
 45598  015098  3608               	rlcf	?i2___awdiv+1,f,c
 45599  01509A  90D8               	bcf	status,0,c
 45600  01509C  3607               	rlcf	?i2___awdiv,f,c
 45601  01509E  3608               	rlcf	?i2___awdiv+1,f,c
 45602  0150A0  0E24               	movlw	36
 45603  0150A2  2607               	addwf	?i2___awdiv,f,c
 45604  0150A4  0E00               	movlw	0
 45605  0150A6  2208               	addwfc	?i2___awdiv+1,f,c
 45606  0150A8  0ED7               	movlw	low __npowers_
 45607  0150AA  2407               	addwf	?i2___awdiv,w,c
 45608  0150AC  6EF6               	movwf	tblptrl,c
 45609  0150AE  0ECE               	movlw	high __npowers_
 45610  0150B0  2008               	addwfc	?i2___awdiv+1,w,c
 45611  0150B2  6EF7               	movwf	tblptrh,c
 45612  0150B4                     	if	1	;There are 3 active tblptr bytes
 45613  0150B4  6AF8               	clrf	tblptru,c
 45614  0150B6  0E00               	movlw	low (__mediumconst shr (0+16))
 45615  0150B8  22F8               	addwfc	tblptru,f,c
 45616  0150BA                     	endif
 45617  0150BA  0009               	tblrd		*+
 45618  0150BC  CFF5 F034          	movff	tablat,i2___flmul@a
 45619  0150C0  0009               	tblrd		*+
 45620  0150C2  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45621  0150C6  0009               	tblrd		*+
 45622  0150C8  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45623  0150CC  000A               	tblrd		*-
 45624  0150CE  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45625  0150D2  0E00               	movlw	0
 45626  0150D4  6E0A               	movwf	i2___awdiv@divisor+1,c
 45627  0150D6  0E64               	movlw	100
 45628  0150D8  6E09               	movwf	i2___awdiv@divisor,c
 45629  0150DA  5051               	movf	i2scale@scl,w,c
 45630  0150DC  6E07               	movwf	i2___awdiv@dividend,c
 45631  0150DE  6A08               	clrf	i2___awdiv@dividend+1,c
 45632  0150E0  BE07               	btfsc	i2___awdiv@dividend,7,c
 45633  0150E2  0608               	decf	i2___awdiv@dividend+1,f,c
 45634  0150E4  ECF6  F0CD         	call	i2___awdiv	;wreg free
 45635  0150E8  90D8               	bcf	status,0,c
 45636  0150EA  3607               	rlcf	?i2___awdiv,f,c
 45637  0150EC  3608               	rlcf	?i2___awdiv+1,f,c
 45638  0150EE  90D8               	bcf	status,0,c
 45639  0150F0  3607               	rlcf	?i2___awdiv,f,c
 45640  0150F2  3608               	rlcf	?i2___awdiv+1,f,c
 45641  0150F4  0E48               	movlw	72
 45642  0150F6  2607               	addwf	?i2___awdiv,f,c
 45643  0150F8  0E00               	movlw	0
 45644  0150FA  2208               	addwfc	?i2___awdiv+1,f,c
 45645  0150FC  0ED7               	movlw	low __npowers_
 45646  0150FE  2407               	addwf	?i2___awdiv,w,c
 45647  015100  6EF6               	movwf	tblptrl,c
 45648  015102  0ECE               	movlw	high __npowers_
 45649  015104  2008               	addwfc	?i2___awdiv+1,w,c
 45650  015106  6EF7               	movwf	tblptrh,c
 45651  015108                     	if	1	;There are 3 active tblptr bytes
 45652  015108  6AF8               	clrf	tblptru,c
 45653  01510A  0E00               	movlw	low (__mediumconst shr (0+16))
 45654  01510C  22F8               	addwfc	tblptru,f,c
 45655  01510E                     	endif
 45656  01510E  0009               	tblrd		*+
 45657  015110  CFF5 F030          	movff	tablat,i2___flmul@b
 45658  015114  0009               	tblrd		*+
 45659  015116  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45660  01511A  0009               	tblrd		*+
 45661  01511C  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45662  015120  000A               	tblrd		*-
 45663  015122  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45664  015126  ECC9  F0AD         	call	i2___flmul	;wreg free
 45665  01512A  C030  F04D         	movff	?i2___flmul,i2_scale$5457
 45666  01512E  C031  F04E         	movff	?i2___flmul+1,i2_scale$5457+1
 45667  015132  C032  F04F         	movff	?i2___flmul+2,i2_scale$5457+2
 45668  015136  C033  F050         	movff	?i2___flmul+3,i2_scale$5457+3
 45669                           
 45670                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 45671  01513A  C04D  F030         	movff	i2_scale$5457,i2___flmul@b
 45672  01513E  C04E  F031         	movff	i2_scale$5457+1,i2___flmul@b+1
 45673  015142  C04F  F032         	movff	i2_scale$5457+2,i2___flmul@b+2
 45674  015146  C050  F033         	movff	i2_scale$5457+3,i2___flmul@b+3
 45675  01514A  0E00               	movlw	0
 45676  01514C  6E04               	movwf	i2___awmod@divisor+1,c
 45677  01514E  0E0A               	movlw	10
 45678  015150  6E03               	movwf	i2___awmod@divisor,c
 45679  015152  5051               	movf	i2scale@scl,w,c
 45680  015154  6E01               	movwf	i2___awmod@dividend,c
 45681  015156  6A02               	clrf	i2___awmod@dividend+1,c
 45682  015158  BE01               	btfsc	i2___awmod@dividend,7,c
 45683  01515A  0602               	decf	i2___awmod@dividend+1,f,c
 45684  01515C  EC6E  F0CF         	call	i2___awmod	;wreg free
 45685  015160  90D8               	bcf	status,0,c
 45686  015162  3601               	rlcf	?i2___awmod,f,c
 45687  015164  3602               	rlcf	?i2___awmod+1,f,c
 45688  015166  90D8               	bcf	status,0,c
 45689  015168  3601               	rlcf	?i2___awmod,f,c
 45690  01516A  3602               	rlcf	?i2___awmod+1,f,c
 45691  01516C  0ED7               	movlw	low __npowers_
 45692  01516E  2401               	addwf	?i2___awmod,w,c
 45693  015170  6EF6               	movwf	tblptrl,c
 45694  015172  0ECE               	movlw	high __npowers_
 45695  015174  2002               	addwfc	?i2___awmod+1,w,c
 45696  015176  6EF7               	movwf	tblptrh,c
 45697  015178                     	if	1	;There are 3 active tblptr bytes
 45698  015178  6AF8               	clrf	tblptru,c
 45699  01517A  0E00               	movlw	low (__mediumconst shr (0+16))
 45700  01517C  22F8               	addwfc	tblptru,f,c
 45701  01517E                     	endif
 45702  01517E  0009               	tblrd		*+
 45703  015180  CFF5 F034          	movff	tablat,i2___flmul@a
 45704  015184  0009               	tblrd		*+
 45705  015186  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45706  01518A  0009               	tblrd		*+
 45707  01518C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45708  015190  000A               	tblrd		*-
 45709  015192  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45710  015196  ECC9  F0AD         	call	i2___flmul	;wreg free
 45711  01519A  C030  F049         	movff	?i2___flmul,?i2_scale
 45712  01519E  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45713  0151A2  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45714  0151A6  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45715  0151AA  0012               	return	
 45716  0151AC                     i2l1950:
 45717                           
 45718                           ;doprnt.c: 432: else if(scl > 10)
 45719  0151AC  5051               	movf	i2scale@scl,w,c
 45720  0151AE  0A80               	xorlw	128
 45721  0151B0  0F75               	addlw	-139
 45722  0151B2  A0D8               	btfss	status,0,c
 45723  0151B4  D05B               	goto	i2l1953
 45724                           
 45725                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 45726  0151B6  0E00               	movlw	0
 45727  0151B8  6E0A               	movwf	i2___awdiv@divisor+1,c
 45728  0151BA  0E0A               	movlw	10
 45729  0151BC  6E09               	movwf	i2___awdiv@divisor,c
 45730  0151BE  5051               	movf	i2scale@scl,w,c
 45731  0151C0  6E07               	movwf	i2___awdiv@dividend,c
 45732  0151C2  6A08               	clrf	i2___awdiv@dividend+1,c
 45733  0151C4  BE07               	btfsc	i2___awdiv@dividend,7,c
 45734  0151C6  0608               	decf	i2___awdiv@dividend+1,f,c
 45735  0151C8  ECF6  F0CD         	call	i2___awdiv	;wreg free
 45736  0151CC  90D8               	bcf	status,0,c
 45737  0151CE  3607               	rlcf	?i2___awdiv,f,c
 45738  0151D0  3608               	rlcf	?i2___awdiv+1,f,c
 45739  0151D2  90D8               	bcf	status,0,c
 45740  0151D4  3607               	rlcf	?i2___awdiv,f,c
 45741  0151D6  3608               	rlcf	?i2___awdiv+1,f,c
 45742  0151D8  0E24               	movlw	36
 45743  0151DA  2607               	addwf	?i2___awdiv,f,c
 45744  0151DC  0E00               	movlw	0
 45745  0151DE  2208               	addwfc	?i2___awdiv+1,f,c
 45746  0151E0  0ED7               	movlw	low __npowers_
 45747  0151E2  2407               	addwf	?i2___awdiv,w,c
 45748  0151E4  6EF6               	movwf	tblptrl,c
 45749  0151E6  0ECE               	movlw	high __npowers_
 45750  0151E8  2008               	addwfc	?i2___awdiv+1,w,c
 45751  0151EA  6EF7               	movwf	tblptrh,c
 45752  0151EC                     	if	1	;There are 3 active tblptr bytes
 45753  0151EC  6AF8               	clrf	tblptru,c
 45754  0151EE  0E00               	movlw	low (__mediumconst shr (0+16))
 45755  0151F0  22F8               	addwfc	tblptru,f,c
 45756  0151F2                     	endif
 45757  0151F2  0009               	tblrd		*+
 45758  0151F4  CFF5 F030          	movff	tablat,i2___flmul@b
 45759  0151F8  0009               	tblrd		*+
 45760  0151FA  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45761  0151FE  0009               	tblrd		*+
 45762  015200  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45763  015204  000A               	tblrd		*-
 45764  015206  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45765  01520A  0E00               	movlw	0
 45766  01520C  6E04               	movwf	i2___awmod@divisor+1,c
 45767  01520E  0E0A               	movlw	10
 45768  015210  6E03               	movwf	i2___awmod@divisor,c
 45769  015212  5051               	movf	i2scale@scl,w,c
 45770  015214  6E01               	movwf	i2___awmod@dividend,c
 45771  015216  6A02               	clrf	i2___awmod@dividend+1,c
 45772  015218  BE01               	btfsc	i2___awmod@dividend,7,c
 45773  01521A  0602               	decf	i2___awmod@dividend+1,f,c
 45774  01521C  EC6E  F0CF         	call	i2___awmod	;wreg free
 45775  015220  90D8               	bcf	status,0,c
 45776  015222  3601               	rlcf	?i2___awmod,f,c
 45777  015224  3602               	rlcf	?i2___awmod+1,f,c
 45778  015226  90D8               	bcf	status,0,c
 45779  015228  3601               	rlcf	?i2___awmod,f,c
 45780  01522A  3602               	rlcf	?i2___awmod+1,f,c
 45781  01522C  0ED7               	movlw	low __npowers_
 45782  01522E  2401               	addwf	?i2___awmod,w,c
 45783  015230  6EF6               	movwf	tblptrl,c
 45784  015232  0ECE               	movlw	high __npowers_
 45785  015234  2002               	addwfc	?i2___awmod+1,w,c
 45786  015236  6EF7               	movwf	tblptrh,c
 45787  015238                     	if	1	;There are 3 active tblptr bytes
 45788  015238  6AF8               	clrf	tblptru,c
 45789  01523A  0E00               	movlw	low (__mediumconst shr (0+16))
 45790  01523C  22F8               	addwfc	tblptru,f,c
 45791  01523E                     	endif
 45792  01523E  0009               	tblrd		*+
 45793  015240  CFF5 F034          	movff	tablat,i2___flmul@a
 45794  015244  0009               	tblrd		*+
 45795  015246  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45796  01524A  0009               	tblrd		*+
 45797  01524C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45798  015250  000A               	tblrd		*-
 45799  015252  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45800  015256  ECC9  F0AD         	call	i2___flmul	;wreg free
 45801  01525A  C030  F049         	movff	?i2___flmul,?i2_scale
 45802  01525E  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45803  015262  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45804  015266  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45805  01526A  0012               	return	
 45806  01526C                     i2l1953:
 45807                           
 45808                           ;doprnt.c: 434: return _npowers_[scl];
 45809  01526C  5051               	movf	i2scale@scl,w,c
 45810  01526E  0D04               	mullw	4
 45811  015270  0ED7               	movlw	low __npowers_
 45812  015272  24F3               	addwf	prodl,w,c
 45813  015274  6EF6               	movwf	tblptrl,c
 45814  015276  0ECE               	movlw	high __npowers_
 45815  015278  20F4               	addwfc	prodh,w,c
 45816  01527A  6EF7               	movwf	tblptrh,c
 45817  01527C                     	if	1	;There are 3 active tblptr bytes
 45818  01527C  6AF8               	clrf	tblptru,c
 45819  01527E  0E00               	movlw	low (__mediumconst shr (0+16))
 45820  015280  22F8               	addwfc	tblptru,f,c
 45821  015282                     	endif
 45822  015282  0009               	tblrd		*+
 45823  015284  CFF5 F049          	movff	tablat,?i2_scale
 45824  015288  0009               	tblrd		*+
 45825  01528A  CFF5 F04A          	movff	tablat,?i2_scale+1
 45826  01528E  0009               	tblrd		*+
 45827  015290  CFF5 F04B          	movff	tablat,?i2_scale+2
 45828  015294  000A               	tblrd		*-
 45829  015296  CFF5 F04C          	movff	tablat,?i2_scale+3
 45830  01529A  0012               	return	
 45831  01529C                     i2l1949:
 45832                           
 45833                           ;doprnt.c: 435: }
 45834                           ;doprnt.c: 436: if(scl>=110)
 45835  01529C  5051               	movf	i2scale@scl,w,c
 45836  01529E  0A80               	xorlw	128
 45837  0152A0  0F12               	addlw	-238
 45838  0152A2  A0D8               	btfss	status,0,c
 45839  0152A4  D0A1               	goto	i2l1954
 45840                           
 45841                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 45842  0152A6  0E00               	movlw	0
 45843  0152A8  6E0A               	movwf	i2___awdiv@divisor+1,c
 45844  0152AA  0E0A               	movlw	10
 45845  0152AC  6E09               	movwf	i2___awdiv@divisor,c
 45846  0152AE  0E00               	movlw	0
 45847  0152B0  6E04               	movwf	i2___awmod@divisor+1,c
 45848  0152B2  0E64               	movlw	100
 45849  0152B4  6E03               	movwf	i2___awmod@divisor,c
 45850  0152B6  5051               	movf	i2scale@scl,w,c
 45851  0152B8  6E01               	movwf	i2___awmod@dividend,c
 45852  0152BA  6A02               	clrf	i2___awmod@dividend+1,c
 45853  0152BC  BE01               	btfsc	i2___awmod@dividend,7,c
 45854  0152BE  0602               	decf	i2___awmod@dividend+1,f,c
 45855  0152C0  EC6E  F0CF         	call	i2___awmod	;wreg free
 45856  0152C4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 45857  0152C8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 45858  0152CC  ECF6  F0CD         	call	i2___awdiv	;wreg free
 45859  0152D0  90D8               	bcf	status,0,c
 45860  0152D2  3607               	rlcf	?i2___awdiv,f,c
 45861  0152D4  3608               	rlcf	?i2___awdiv+1,f,c
 45862  0152D6  90D8               	bcf	status,0,c
 45863  0152D8  3607               	rlcf	?i2___awdiv,f,c
 45864  0152DA  3608               	rlcf	?i2___awdiv+1,f,c
 45865  0152DC  0E24               	movlw	36
 45866  0152DE  2607               	addwf	?i2___awdiv,f,c
 45867  0152E0  0E00               	movlw	0
 45868  0152E2  2208               	addwfc	?i2___awdiv+1,f,c
 45869  0152E4  0EA3               	movlw	low __powers_
 45870  0152E6  2407               	addwf	?i2___awdiv,w,c
 45871  0152E8  6EF6               	movwf	tblptrl,c
 45872  0152EA  0ECE               	movlw	high __powers_
 45873  0152EC  2008               	addwfc	?i2___awdiv+1,w,c
 45874  0152EE  6EF7               	movwf	tblptrh,c
 45875  0152F0                     	if	1	;There are 3 active tblptr bytes
 45876  0152F0  6AF8               	clrf	tblptru,c
 45877  0152F2  0E00               	movlw	low (__mediumconst shr (0+16))
 45878  0152F4  22F8               	addwfc	tblptru,f,c
 45879  0152F6                     	endif
 45880  0152F6  0009               	tblrd		*+
 45881  0152F8  CFF5 F034          	movff	tablat,i2___flmul@a
 45882  0152FC  0009               	tblrd		*+
 45883  0152FE  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45884  015302  0009               	tblrd		*+
 45885  015304  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45886  015308  000A               	tblrd		*-
 45887  01530A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45888  01530E  0E00               	movlw	0
 45889  015310  6E0A               	movwf	i2___awdiv@divisor+1,c
 45890  015312  0E64               	movlw	100
 45891  015314  6E09               	movwf	i2___awdiv@divisor,c
 45892  015316  5051               	movf	i2scale@scl,w,c
 45893  015318  6E07               	movwf	i2___awdiv@dividend,c
 45894  01531A  6A08               	clrf	i2___awdiv@dividend+1,c
 45895  01531C  BE07               	btfsc	i2___awdiv@dividend,7,c
 45896  01531E  0608               	decf	i2___awdiv@dividend+1,f,c
 45897  015320  ECF6  F0CD         	call	i2___awdiv	;wreg free
 45898  015324  90D8               	bcf	status,0,c
 45899  015326  3607               	rlcf	?i2___awdiv,f,c
 45900  015328  3608               	rlcf	?i2___awdiv+1,f,c
 45901  01532A  90D8               	bcf	status,0,c
 45902  01532C  3607               	rlcf	?i2___awdiv,f,c
 45903  01532E  3608               	rlcf	?i2___awdiv+1,f,c
 45904  015330  0E48               	movlw	72
 45905  015332  2607               	addwf	?i2___awdiv,f,c
 45906  015334  0E00               	movlw	0
 45907  015336  2208               	addwfc	?i2___awdiv+1,f,c
 45908  015338  0EA3               	movlw	low __powers_
 45909  01533A  2407               	addwf	?i2___awdiv,w,c
 45910  01533C  6EF6               	movwf	tblptrl,c
 45911  01533E  0ECE               	movlw	high __powers_
 45912  015340  2008               	addwfc	?i2___awdiv+1,w,c
 45913  015342  6EF7               	movwf	tblptrh,c
 45914  015344                     	if	1	;There are 3 active tblptr bytes
 45915  015344  6AF8               	clrf	tblptru,c
 45916  015346  0E00               	movlw	low (__mediumconst shr (0+16))
 45917  015348  22F8               	addwfc	tblptru,f,c
 45918  01534A                     	endif
 45919  01534A  0009               	tblrd		*+
 45920  01534C  CFF5 F030          	movff	tablat,i2___flmul@b
 45921  015350  0009               	tblrd		*+
 45922  015352  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45923  015356  0009               	tblrd		*+
 45924  015358  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45925  01535C  000A               	tblrd		*-
 45926  01535E  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45927  015362  ECC9  F0AD         	call	i2___flmul	;wreg free
 45928  015366  C030  F04D         	movff	?i2___flmul,i2_scale$5457
 45929  01536A  C031  F04E         	movff	?i2___flmul+1,i2_scale$5457+1
 45930  01536E  C032  F04F         	movff	?i2___flmul+2,i2_scale$5457+2
 45931  015372  C033  F050         	movff	?i2___flmul+3,i2_scale$5457+3
 45932                           
 45933                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 45934  015376  C04D  F030         	movff	i2_scale$5457,i2___flmul@b
 45935  01537A  C04E  F031         	movff	i2_scale$5457+1,i2___flmul@b+1
 45936  01537E  C04F  F032         	movff	i2_scale$5457+2,i2___flmul@b+2
 45937  015382  C050  F033         	movff	i2_scale$5457+3,i2___flmul@b+3
 45938  015386  0E00               	movlw	0
 45939  015388  6E04               	movwf	i2___awmod@divisor+1,c
 45940  01538A  0E0A               	movlw	10
 45941  01538C  6E03               	movwf	i2___awmod@divisor,c
 45942  01538E  5051               	movf	i2scale@scl,w,c
 45943  015390  6E01               	movwf	i2___awmod@dividend,c
 45944  015392  6A02               	clrf	i2___awmod@dividend+1,c
 45945  015394  BE01               	btfsc	i2___awmod@dividend,7,c
 45946  015396  0602               	decf	i2___awmod@dividend+1,f,c
 45947  015398  EC6E  F0CF         	call	i2___awmod	;wreg free
 45948  01539C  90D8               	bcf	status,0,c
 45949  01539E  3601               	rlcf	?i2___awmod,f,c
 45950  0153A0  3602               	rlcf	?i2___awmod+1,f,c
 45951  0153A2  90D8               	bcf	status,0,c
 45952  0153A4  3601               	rlcf	?i2___awmod,f,c
 45953  0153A6  3602               	rlcf	?i2___awmod+1,f,c
 45954  0153A8  0EA3               	movlw	low __powers_
 45955  0153AA  2401               	addwf	?i2___awmod,w,c
 45956  0153AC  6EF6               	movwf	tblptrl,c
 45957  0153AE  0ECE               	movlw	high __powers_
 45958  0153B0  2002               	addwfc	?i2___awmod+1,w,c
 45959  0153B2  6EF7               	movwf	tblptrh,c
 45960  0153B4                     	if	1	;There are 3 active tblptr bytes
 45961  0153B4  6AF8               	clrf	tblptru,c
 45962  0153B6  0E00               	movlw	low (__mediumconst shr (0+16))
 45963  0153B8  22F8               	addwfc	tblptru,f,c
 45964  0153BA                     	endif
 45965  0153BA  0009               	tblrd		*+
 45966  0153BC  CFF5 F034          	movff	tablat,i2___flmul@a
 45967  0153C0  0009               	tblrd		*+
 45968  0153C2  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45969  0153C6  0009               	tblrd		*+
 45970  0153C8  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45971  0153CC  000A               	tblrd		*-
 45972  0153CE  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45973  0153D2  ECC9  F0AD         	call	i2___flmul	;wreg free
 45974  0153D6  C030  F049         	movff	?i2___flmul,?i2_scale
 45975  0153DA  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45976  0153DE  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45977  0153E2  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45978  0153E6  0012               	return	
 45979  0153E8                     i2l1954:
 45980                           
 45981                           ;doprnt.c: 438: else if(scl > 10)
 45982  0153E8  5051               	movf	i2scale@scl,w,c
 45983  0153EA  0A80               	xorlw	128
 45984  0153EC  0F75               	addlw	-139
 45985  0153EE  A0D8               	btfss	status,0,c
 45986  0153F0  D05B               	goto	i2l1956
 45987                           
 45988                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 45989  0153F2  0E00               	movlw	0
 45990  0153F4  6E0A               	movwf	i2___awdiv@divisor+1,c
 45991  0153F6  0E0A               	movlw	10
 45992  0153F8  6E09               	movwf	i2___awdiv@divisor,c
 45993  0153FA  5051               	movf	i2scale@scl,w,c
 45994  0153FC  6E07               	movwf	i2___awdiv@dividend,c
 45995  0153FE  6A08               	clrf	i2___awdiv@dividend+1,c
 45996  015400  BE07               	btfsc	i2___awdiv@dividend,7,c
 45997  015402  0608               	decf	i2___awdiv@dividend+1,f,c
 45998  015404  ECF6  F0CD         	call	i2___awdiv	;wreg free
 45999  015408  90D8               	bcf	status,0,c
 46000  01540A  3607               	rlcf	?i2___awdiv,f,c
 46001  01540C  3608               	rlcf	?i2___awdiv+1,f,c
 46002  01540E  90D8               	bcf	status,0,c
 46003  015410  3607               	rlcf	?i2___awdiv,f,c
 46004  015412  3608               	rlcf	?i2___awdiv+1,f,c
 46005  015414  0E24               	movlw	36
 46006  015416  2607               	addwf	?i2___awdiv,f,c
 46007  015418  0E00               	movlw	0
 46008  01541A  2208               	addwfc	?i2___awdiv+1,f,c
 46009  01541C  0EA3               	movlw	low __powers_
 46010  01541E  2407               	addwf	?i2___awdiv,w,c
 46011  015420  6EF6               	movwf	tblptrl,c
 46012  015422  0ECE               	movlw	high __powers_
 46013  015424  2008               	addwfc	?i2___awdiv+1,w,c
 46014  015426  6EF7               	movwf	tblptrh,c
 46015  015428                     	if	1	;There are 3 active tblptr bytes
 46016  015428  6AF8               	clrf	tblptru,c
 46017  01542A  0E00               	movlw	low (__mediumconst shr (0+16))
 46018  01542C  22F8               	addwfc	tblptru,f,c
 46019  01542E                     	endif
 46020  01542E  0009               	tblrd		*+
 46021  015430  CFF5 F030          	movff	tablat,i2___flmul@b
 46022  015434  0009               	tblrd		*+
 46023  015436  CFF5 F031          	movff	tablat,i2___flmul@b+1
 46024  01543A  0009               	tblrd		*+
 46025  01543C  CFF5 F032          	movff	tablat,i2___flmul@b+2
 46026  015440  000A               	tblrd		*-
 46027  015442  CFF5 F033          	movff	tablat,i2___flmul@b+3
 46028  015446  0E00               	movlw	0
 46029  015448  6E04               	movwf	i2___awmod@divisor+1,c
 46030  01544A  0E0A               	movlw	10
 46031  01544C  6E03               	movwf	i2___awmod@divisor,c
 46032  01544E  5051               	movf	i2scale@scl,w,c
 46033  015450  6E01               	movwf	i2___awmod@dividend,c
 46034  015452  6A02               	clrf	i2___awmod@dividend+1,c
 46035  015454  BE01               	btfsc	i2___awmod@dividend,7,c
 46036  015456  0602               	decf	i2___awmod@dividend+1,f,c
 46037  015458  EC6E  F0CF         	call	i2___awmod	;wreg free
 46038  01545C  90D8               	bcf	status,0,c
 46039  01545E  3601               	rlcf	?i2___awmod,f,c
 46040  015460  3602               	rlcf	?i2___awmod+1,f,c
 46041  015462  90D8               	bcf	status,0,c
 46042  015464  3601               	rlcf	?i2___awmod,f,c
 46043  015466  3602               	rlcf	?i2___awmod+1,f,c
 46044  015468  0EA3               	movlw	low __powers_
 46045  01546A  2401               	addwf	?i2___awmod,w,c
 46046  01546C  6EF6               	movwf	tblptrl,c
 46047  01546E  0ECE               	movlw	high __powers_
 46048  015470  2002               	addwfc	?i2___awmod+1,w,c
 46049  015472  6EF7               	movwf	tblptrh,c
 46050  015474                     	if	1	;There are 3 active tblptr bytes
 46051  015474  6AF8               	clrf	tblptru,c
 46052  015476  0E00               	movlw	low (__mediumconst shr (0+16))
 46053  015478  22F8               	addwfc	tblptru,f,c
 46054  01547A                     	endif
 46055  01547A  0009               	tblrd		*+
 46056  01547C  CFF5 F034          	movff	tablat,i2___flmul@a
 46057  015480  0009               	tblrd		*+
 46058  015482  CFF5 F035          	movff	tablat,i2___flmul@a+1
 46059  015486  0009               	tblrd		*+
 46060  015488  CFF5 F036          	movff	tablat,i2___flmul@a+2
 46061  01548C  000A               	tblrd		*-
 46062  01548E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 46063  015492  ECC9  F0AD         	call	i2___flmul	;wreg free
 46064  015496  C030  F049         	movff	?i2___flmul,?i2_scale
 46065  01549A  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 46066  01549E  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 46067  0154A2  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 46068  0154A6  0012               	return	
 46069  0154A8                     i2l1956:
 46070                           
 46071                           ;doprnt.c: 440: return _powers_[scl];
 46072  0154A8  5051               	movf	i2scale@scl,w,c
 46073  0154AA  0D04               	mullw	4
 46074  0154AC  0EA3               	movlw	low __powers_
 46075  0154AE  24F3               	addwf	prodl,w,c
 46076  0154B0  6EF6               	movwf	tblptrl,c
 46077  0154B2  0ECE               	movlw	high __powers_
 46078  0154B4  20F4               	addwfc	prodh,w,c
 46079  0154B6  6EF7               	movwf	tblptrh,c
 46080  0154B8                     	if	1	;There are 3 active tblptr bytes
 46081  0154B8  6AF8               	clrf	tblptru,c
 46082  0154BA  0E00               	movlw	low (__mediumconst shr (0+16))
 46083  0154BC  22F8               	addwfc	tblptru,f,c
 46084  0154BE                     	endif
 46085  0154BE  0009               	tblrd		*+
 46086  0154C0  CFF5 F049          	movff	tablat,?i2_scale
 46087  0154C4  0009               	tblrd		*+
 46088  0154C6  CFF5 F04A          	movff	tablat,?i2_scale+1
 46089  0154CA  0009               	tblrd		*+
 46090  0154CC  CFF5 F04B          	movff	tablat,?i2_scale+2
 46091  0154D0  000A               	tblrd		*-
 46092  0154D2  CFF5 F04C          	movff	tablat,?i2_scale+3
 46093  0154D6  0012               	return	
 46094  0154D8                     __end_ofi2_scale:
 46095                           	opt stack 0
 46096                           tosu	equ	0xFFF
 46097                           tosh	equ	0xFFE
 46098                           tosl	equ	0xFFD
 46099                           pclatu	equ	0xFFB
 46100                           pclath	equ	0xFFA
 46101                           tblptru	equ	0xFF8
 46102                           tblptrh	equ	0xFF7
 46103                           tblptrl	equ	0xFF6
 46104                           tablat	equ	0xFF5
 46105                           prodh	equ	0xFF4
 46106                           prodl	equ	0xFF3
 46107                           intcon	equ	0xFF2
 46108                           indf0	equ	0xFEF
 46109                           postinc0	equ	0xFEE
 46110                           fsr0h	equ	0xFEA
 46111                           fsr0l	equ	0xFE9
 46112                           wreg	equ	0xFE8
 46113                           indf1	equ	0xFE7
 46114                           postdec1	equ	0xFE5
 46115                           plusw1	equ	0xFE3
 46116                           fsr1h	equ	0xFE2
 46117                           fsr1l	equ	0xFE1
 46118                           bsr	equ	0xFE0
 46119                           indf2	equ	0xFDF
 46120                           postinc2	equ	0xFDE
 46121                           postdec2	equ	0xFDD
 46122                           plusw2	equ	0xFDB
 46123                           fsr2h	equ	0xFDA
 46124                           fsr2l	equ	0xFD9
 46125                           status	equ	0xFD8
 46126                           
 46127 ;; *************** function i2_putch *****************
 46128 ;; Defined at:
 46129 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 46130 ;; Parameters:    Size  Location     Type
 46131 ;;  txData          1    wreg     unsigned char 
 46132 ;; Auto vars:     Size  Location     Type
 46133 ;;  txData          1    1[COMRAM] unsigned char 
 46134 ;; Return value:  Size  Location     Type
 46135 ;;                  1    wreg      void 
 46136 ;; Registers used:
 46137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46138 ;; Tracked objects:
 46139 ;;		On entry : 0/0
 46140 ;;		On exit  : 0/0
 46141 ;;		Unchanged: 0/0
 46142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46147 ;;Total ram usage:        1 bytes
 46148 ;; Hardware stack levels used:    1
 46149 ;; Hardware stack levels required when called:    1
 46150 ;; This function calls:
 46151 ;;		i2_EUSART2_Write
 46152 ;; This function is called by:
 46153 ;;		i2_printf
 46154 ;; This function uses a non-reentrant model
 46155 ;;
 46156                           
 46157                           	psect	text136
 46158  01B302                     __ptext136:
 46159                           	opt stack 0
 46160  01B302                     i2_putch:
 46161                           	opt stack 13
 46162                           
 46163                           ;incstack = 0
 46164                           ;i2putch@txData stored from wreg
 46165  01B302  6E02               	movwf	i2putch@txData,c
 46166                           
 46167                           ;eusart2.c: 187: EUSART2_Write(txData);
 46168  01B304  5002               	movf	i2putch@txData,w,c
 46169  01B306  ECB1  F0D3         	call	i2_EUSART2_Write
 46170  01B30A  0012               	return		;funcret
 46171  01B30C                     __end_ofi2_putch:
 46172                           	opt stack 0
 46173                           tosu	equ	0xFFF
 46174                           tosh	equ	0xFFE
 46175                           tosl	equ	0xFFD
 46176                           pclatu	equ	0xFFB
 46177                           pclath	equ	0xFFA
 46178                           tblptru	equ	0xFF8
 46179                           tblptrh	equ	0xFF7
 46180                           tblptrl	equ	0xFF6
 46181                           tablat	equ	0xFF5
 46182                           prodh	equ	0xFF4
 46183                           prodl	equ	0xFF3
 46184                           intcon	equ	0xFF2
 46185                           indf0	equ	0xFEF
 46186                           postinc0	equ	0xFEE
 46187                           fsr0h	equ	0xFEA
 46188                           fsr0l	equ	0xFE9
 46189                           wreg	equ	0xFE8
 46190                           indf1	equ	0xFE7
 46191                           postdec1	equ	0xFE5
 46192                           plusw1	equ	0xFE3
 46193                           fsr1h	equ	0xFE2
 46194                           fsr1l	equ	0xFE1
 46195                           bsr	equ	0xFE0
 46196                           indf2	equ	0xFDF
 46197                           postinc2	equ	0xFDE
 46198                           postdec2	equ	0xFDD
 46199                           plusw2	equ	0xFDB
 46200                           fsr2h	equ	0xFDA
 46201                           fsr2l	equ	0xFD9
 46202                           status	equ	0xFD8
 46203                           
 46204 ;; *************** function i2_EUSART2_Write *****************
 46205 ;; Defined at:
 46206 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 46207 ;; Parameters:    Size  Location     Type
 46208 ;;  txData          1    wreg     unsigned char 
 46209 ;; Auto vars:     Size  Location     Type
 46210 ;;  txData          1    0[COMRAM] unsigned char 
 46211 ;; Return value:  Size  Location     Type
 46212 ;;                  1    wreg      void 
 46213 ;; Registers used:
 46214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46215 ;; Tracked objects:
 46216 ;;		On entry : 0/0
 46217 ;;		On exit  : 0/0
 46218 ;;		Unchanged: 0/0
 46219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46224 ;;Total ram usage:        1 bytes
 46225 ;; Hardware stack levels used:    1
 46226 ;; This function calls:
 46227 ;;		Nothing
 46228 ;; This function is called by:
 46229 ;;		i2_putch
 46230 ;; This function uses a non-reentrant model
 46231 ;;
 46232                           
 46233                           	psect	text137
 46234  01A762                     __ptext137:
 46235                           	opt stack 0
 46236  01A762                     i2_EUSART2_Write:
 46237                           	opt stack 13
 46238                           
 46239                           ;incstack = 0
 46240                           ;i2EUSART2_Write@txData stored from wreg
 46241  01A762  6E01               	movwf	i2EUSART2_Write@txData,c
 46242                           
 46243                           ;eusart2.c: 157: while(0 == eusart2TxBufferRemaining)
 46244  01A764  D004               	goto	i2l430
 46245  01A766                     i2l431:
 46246                           
 46247                           ; BSR set to: 1
 46248  01A766  0004               	clrwdt		;# 
 46249                           
 46250                           ;eusart2.c: 160: error_handler.USB_UART_COMM_error_flag = 1;
 46251  01A768  0E01               	movlw	1
 46252  01A76A  0102               	movlb	2	; () banked
 46253  01A76C  6F08               	movwf	(_error_handler+8)& (0+255),b
 46254  01A76E                     i2l430:
 46255                           
 46256                           ; BSR set to: 2
 46257  01A76E  0101               	movlb	1	; () banked
 46258  01A770  51DF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 46259  01A772  B4D8               	btfsc	status,2,c
 46260  01A774  D7F8               	goto	i2l431
 46261                           
 46262                           ; BSR set to: 1
 46263                           ;eusart2.c: 161: }
 46264                           ;eusart2.c: 163: if(0 == PIE3bits.TX2IE)
 46265  01A776  010E               	movlb	14	; () banked
 46266  01A778  BD2C               	btfsc	44,6,b	;volatile
 46267  01A77A  D003               	goto	i2l433
 46268                           
 46269                           ; BSR set to: 14
 46270                           ;eusart2.c: 164: {
 46271                           ;eusart2.c: 165: TX2REG = txData;
 46272  01A77C  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 46273                           
 46274                           ;eusart2.c: 166: }
 46275  01A780  D013               	goto	i2l434
 46276  01A782                     i2l433:
 46277                           
 46278                           ; BSR set to: 14
 46279                           ;eusart2.c: 167: else
 46280                           ;eusart2.c: 168: {
 46281                           ;eusart2.c: 169: PIE3bits.TX2IE = 0;
 46282  01A782  9D2C               	bcf	44,6,b	;volatile
 46283                           
 46284                           ; BSR set to: 14
 46285                           ;eusart2.c: 170: eusart2TxBuffer[eusart2TxHead++] = txData;
 46286  01A784  0101               	movlb	1	; () banked
 46287  01A786  51E1               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 46288  01A788  0D01               	mullw	1
 46289  01A78A  0E00               	movlw	low _eusart2TxBuffer
 46290  01A78C  24F3               	addwf	prodl,w,c
 46291  01A78E  6ED9               	movwf	fsr2l,c
 46292  01A790  0E04               	movlw	high _eusart2TxBuffer
 46293  01A792  20F4               	addwfc	prodh,w,c
 46294  01A794  6EDA               	movwf	fsr2h,c
 46295  01A796  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 46296                           
 46297                           ; BSR set to: 1
 46298  01A79A  2BE1               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 46299                           
 46300                           ; BSR set to: 1
 46301                           ;eusart2.c: 171: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 46302  01A79C  0E7F               	movlw	127
 46303  01A79E  65E1               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 46304  01A7A0  D002               	goto	i2l435
 46305                           
 46306                           ; BSR set to: 1
 46307                           ;eusart2.c: 172: {
 46308                           ;eusart2.c: 173: eusart2TxHead = 0;
 46309  01A7A2  0E00               	movlw	0
 46310  01A7A4  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 46311  01A7A6                     i2l435:
 46312                           
 46313                           ; BSR set to: 1
 46314                           ;eusart2.c: 174: }
 46315                           ;eusart2.c: 175: eusart2TxBufferRemaining--;
 46316                           
 46317                           ; BSR set to: 1
 46318  01A7A6  07DF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 46319  01A7A8                     i2l434:
 46320                           
 46321                           ;eusart2.c: 176: }
 46322                           ;eusart2.c: 177: PIE3bits.TX2IE = 1;
 46323                           
 46324                           ; BSR set to: 1
 46325  01A7A8  010E               	movlb	14	; () banked
 46326  01A7AA  8D2C               	bsf	44,6,b	;volatile
 46327                           
 46328                           ; BSR set to: 14
 46329  01A7AC  0012               	return		;funcret
 46330  01A7AE                     __end_ofi2_EUSART2_Write:
 46331                           	opt stack 0
 46332                           tosu	equ	0xFFF
 46333                           tosh	equ	0xFFE
 46334                           tosl	equ	0xFFD
 46335                           pclatu	equ	0xFFB
 46336                           pclath	equ	0xFFA
 46337                           tblptru	equ	0xFF8
 46338                           tblptrh	equ	0xFF7
 46339                           tblptrl	equ	0xFF6
 46340                           tablat	equ	0xFF5
 46341                           prodh	equ	0xFF4
 46342                           prodl	equ	0xFF3
 46343                           intcon	equ	0xFF2
 46344                           indf0	equ	0xFEF
 46345                           postinc0	equ	0xFEE
 46346                           fsr0h	equ	0xFEA
 46347                           fsr0l	equ	0xFE9
 46348                           wreg	equ	0xFE8
 46349                           indf1	equ	0xFE7
 46350                           postdec1	equ	0xFE5
 46351                           plusw1	equ	0xFE3
 46352                           fsr1h	equ	0xFE2
 46353                           fsr1l	equ	0xFE1
 46354                           bsr	equ	0xFE0
 46355                           indf2	equ	0xFDF
 46356                           postinc2	equ	0xFDE
 46357                           postdec2	equ	0xFDD
 46358                           plusw2	equ	0xFDB
 46359                           fsr2h	equ	0xFDA
 46360                           fsr2l	equ	0xFD9
 46361                           status	equ	0xFD8
 46362                           
 46363 ;; *************** function i2_isdigit *****************
 46364 ;; Defined at:
 46365 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 46366 ;; Parameters:    Size  Location     Type
 46367 ;;  c               1    wreg     unsigned char 
 46368 ;; Auto vars:     Size  Location     Type
 46369 ;;  c               1    2[COMRAM] unsigned char 
 46370 ;; Return value:  Size  Location     Type
 46371 ;;		None               void
 46372 ;; Registers used:
 46373 ;;		wreg, status,2, status,0
 46374 ;; Tracked objects:
 46375 ;;		On entry : 0/0
 46376 ;;		On exit  : 0/0
 46377 ;;		Unchanged: 0/0
 46378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46383 ;;Total ram usage:        3 bytes
 46384 ;; Hardware stack levels used:    1
 46385 ;; This function calls:
 46386 ;;		Nothing
 46387 ;; This function is called by:
 46388 ;;		i2__doprnt
 46389 ;; This function uses a non-reentrant model
 46390 ;;
 46391                           
 46392                           	psect	text138
 46393  01B070                     __ptext138:
 46394                           	opt stack 0
 46395  01B070                     i2_isdigit:
 46396                           	opt stack 14
 46397                           
 46398                           ; BSR set to: 14
 46399                           ;incstack = 0
 46400                           ;i2isdigit@c stored from wreg
 46401  01B070  6E03               	movwf	i2isdigit@c,c
 46402  01B072  0E00               	movlw	0
 46403  01B074  6E02               	movwf	i2_isdigit$4353,c
 46404  01B076  0E3A               	movlw	58
 46405  01B078  6003               	cpfslt	i2isdigit@c,c
 46406  01B07A  D005               	goto	i2l2575
 46407  01B07C  0E2F               	movlw	47
 46408  01B07E  6403               	cpfsgt	i2isdigit@c,c
 46409  01B080  D002               	goto	i2l2575
 46410  01B082  0E01               	movlw	1
 46411  01B084  6E02               	movwf	i2_isdigit$4353,c
 46412  01B086                     i2l2575:
 46413  01B086  C002  F001         	movff	i2_isdigit$4353,??i2_isdigit
 46414  01B08A  3001               	rrcf	??i2_isdigit,w,c
 46415  01B08C  0012               	return	
 46416  01B08E                     __end_ofi2_isdigit:
 46417                           	opt stack 0
 46418                           tosu	equ	0xFFF
 46419                           tosh	equ	0xFFE
 46420                           tosl	equ	0xFFD
 46421                           pclatu	equ	0xFFB
 46422                           pclath	equ	0xFFA
 46423                           tblptru	equ	0xFF8
 46424                           tblptrh	equ	0xFF7
 46425                           tblptrl	equ	0xFF6
 46426                           tablat	equ	0xFF5
 46427                           prodh	equ	0xFF4
 46428                           prodl	equ	0xFF3
 46429                           intcon	equ	0xFF2
 46430                           indf0	equ	0xFEF
 46431                           postinc0	equ	0xFEE
 46432                           fsr0h	equ	0xFEA
 46433                           fsr0l	equ	0xFE9
 46434                           wreg	equ	0xFE8
 46435                           indf1	equ	0xFE7
 46436                           postdec1	equ	0xFE5
 46437                           plusw1	equ	0xFE3
 46438                           fsr1h	equ	0xFE2
 46439                           fsr1l	equ	0xFE1
 46440                           bsr	equ	0xFE0
 46441                           indf2	equ	0xFDF
 46442                           postinc2	equ	0xFDE
 46443                           postdec2	equ	0xFDD
 46444                           plusw2	equ	0xFDB
 46445                           fsr2h	equ	0xFDA
 46446                           fsr2l	equ	0xFD9
 46447                           status	equ	0xFD8
 46448                           
 46449 ;; *************** function i2_fround *****************
 46450 ;; Defined at:
 46451 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 46452 ;; Parameters:    Size  Location     Type
 46453 ;;  prec            1    wreg     unsigned char 
 46454 ;; Auto vars:     Size  Location     Type
 46455 ;;  prec            1   84[COMRAM] unsigned char 
 46456 ;; Return value:  Size  Location     Type
 46457 ;;                  4   72[COMRAM] unsigned char 
 46458 ;; Registers used:
 46459 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46460 ;; Tracked objects:
 46461 ;;		On entry : 0/0
 46462 ;;		On exit  : 0/0
 46463 ;;		Unchanged: 0/0
 46464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46466 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46468 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46469 ;;Total ram usage:       13 bytes
 46470 ;; Hardware stack levels used:    1
 46471 ;; Hardware stack levels required when called:    1
 46472 ;; This function calls:
 46473 ;;		i2___awdiv
 46474 ;;		i2___awmod
 46475 ;;		i2___flmul
 46476 ;; This function is called by:
 46477 ;;		i2__doprnt
 46478 ;; This function uses a non-reentrant model
 46479 ;;
 46480                           
 46481                           	psect	text139
 46482  017654                     __ptext139:
 46483                           	opt stack 0
 46484  017654                     i2_fround:
 46485                           	opt stack 13
 46486                           
 46487                           ;incstack = 0
 46488                           ;i2fround@prec stored from wreg
 46489  017654  6E55               	movwf	i2fround@prec,c
 46490                           
 46491                           ;doprnt.c: 413: if(prec>=110)
 46492  017656  0E6D               	movlw	109
 46493  017658  6455               	cpfsgt	i2fround@prec,c
 46494  01765A  D0B5               	goto	i2l1943
 46495                           
 46496                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 46497  01765C  0E00               	movlw	0
 46498  01765E  6E0A               	movwf	i2___awdiv@divisor+1,c
 46499  017660  0E0A               	movlw	10
 46500  017662  6E09               	movwf	i2___awdiv@divisor,c
 46501  017664  0E00               	movlw	0
 46502  017666  6E04               	movwf	i2___awmod@divisor+1,c
 46503  017668  0E64               	movlw	100
 46504  01766A  6E03               	movwf	i2___awmod@divisor,c
 46505  01766C  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 46506  017670  6A02               	clrf	i2___awmod@dividend+1,c
 46507  017672  EC6E  F0CF         	call	i2___awmod	;wreg free
 46508  017676  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 46509  01767A  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 46510  01767E  ECF6  F0CD         	call	i2___awdiv	;wreg free
 46511  017682  90D8               	bcf	status,0,c
 46512  017684  3607               	rlcf	?i2___awdiv,f,c
 46513  017686  3608               	rlcf	?i2___awdiv+1,f,c
 46514  017688  90D8               	bcf	status,0,c
 46515  01768A  3607               	rlcf	?i2___awdiv,f,c
 46516  01768C  3608               	rlcf	?i2___awdiv+1,f,c
 46517  01768E  0E24               	movlw	36
 46518  017690  2607               	addwf	?i2___awdiv,f,c
 46519  017692  0E00               	movlw	0
 46520  017694  2208               	addwfc	?i2___awdiv+1,f,c
 46521  017696  0ED7               	movlw	low __npowers_
 46522  017698  2407               	addwf	?i2___awdiv,w,c
 46523  01769A  6EF6               	movwf	tblptrl,c
 46524  01769C  0ECE               	movlw	high __npowers_
 46525  01769E  2008               	addwfc	?i2___awdiv+1,w,c
 46526  0176A0  6EF7               	movwf	tblptrh,c
 46527  0176A2                     	if	1	;There are 3 active tblptr bytes
 46528  0176A2  6AF8               	clrf	tblptru,c
 46529  0176A4  0E00               	movlw	low (__mediumconst shr (0+16))
 46530  0176A6  22F8               	addwfc	tblptru,f,c
 46531  0176A8                     	endif
 46532  0176A8  0009               	tblrd		*+
 46533  0176AA  CFF5 F034          	movff	tablat,i2___flmul@a
 46534  0176AE  0009               	tblrd		*+
 46535  0176B0  CFF5 F035          	movff	tablat,i2___flmul@a+1
 46536  0176B4  0009               	tblrd		*+
 46537  0176B6  CFF5 F036          	movff	tablat,i2___flmul@a+2
 46538  0176BA  000A               	tblrd		*-
 46539  0176BC  CFF5 F037          	movff	tablat,i2___flmul@a+3
 46540  0176C0  0E00               	movlw	0
 46541  0176C2  6E0A               	movwf	i2___awdiv@divisor+1,c
 46542  0176C4  0E64               	movlw	100
 46543  0176C6  6E09               	movwf	i2___awdiv@divisor,c
 46544  0176C8  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 46545  0176CC  6A08               	clrf	i2___awdiv@dividend+1,c
 46546  0176CE  ECF6  F0CD         	call	i2___awdiv	;wreg free
 46547  0176D2  90D8               	bcf	status,0,c
 46548  0176D4  3607               	rlcf	?i2___awdiv,f,c
 46549  0176D6  3608               	rlcf	?i2___awdiv+1,f,c
 46550  0176D8  90D8               	bcf	status,0,c
 46551  0176DA  3607               	rlcf	?i2___awdiv,f,c
 46552  0176DC  3608               	rlcf	?i2___awdiv+1,f,c
 46553  0176DE  0E48               	movlw	72
 46554  0176E0  2607               	addwf	?i2___awdiv,f,c
 46555  0176E2  0E00               	movlw	0
 46556  0176E4  2208               	addwfc	?i2___awdiv+1,f,c
 46557  0176E6  0ED7               	movlw	low __npowers_
 46558  0176E8  2407               	addwf	?i2___awdiv,w,c
 46559  0176EA  6EF6               	movwf	tblptrl,c
 46560  0176EC  0ECE               	movlw	high __npowers_
 46561  0176EE  2008               	addwfc	?i2___awdiv+1,w,c
 46562  0176F0  6EF7               	movwf	tblptrh,c
 46563  0176F2                     	if	1	;There are 3 active tblptr bytes
 46564  0176F2  6AF8               	clrf	tblptru,c
 46565  0176F4  0E00               	movlw	low (__mediumconst shr (0+16))
 46566  0176F6  22F8               	addwfc	tblptru,f,c
 46567  0176F8                     	endif
 46568  0176F8  0009               	tblrd		*+
 46569  0176FA  CFF5 F030          	movff	tablat,i2___flmul@b
 46570  0176FE  0009               	tblrd		*+
 46571  017700  CFF5 F031          	movff	tablat,i2___flmul@b+1
 46572  017704  0009               	tblrd		*+
 46573  017706  CFF5 F032          	movff	tablat,i2___flmul@b+2
 46574  01770A  000A               	tblrd		*-
 46575  01770C  CFF5 F033          	movff	tablat,i2___flmul@b+3
 46576  017710  ECC9  F0AD         	call	i2___flmul	;wreg free
 46577  017714  C030  F051         	movff	?i2___flmul,i2_fround$5455
 46578  017718  C031  F052         	movff	?i2___flmul+1,i2_fround$5455+1
 46579  01771C  C032  F053         	movff	?i2___flmul+2,i2_fround$5455+2
 46580  017720  C033  F054         	movff	?i2___flmul+3,i2_fround$5455+3
 46581                           
 46582                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 46583  017724  0E00               	movlw	0
 46584  017726  6E04               	movwf	i2___awmod@divisor+1,c
 46585  017728  0E0A               	movlw	10
 46586  01772A  6E03               	movwf	i2___awmod@divisor,c
 46587  01772C  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 46588  017730  6A02               	clrf	i2___awmod@dividend+1,c
 46589  017732  EC6E  F0CF         	call	i2___awmod	;wreg free
 46590  017736  90D8               	bcf	status,0,c
 46591  017738  3601               	rlcf	?i2___awmod,f,c
 46592  01773A  3602               	rlcf	?i2___awmod+1,f,c
 46593  01773C  90D8               	bcf	status,0,c
 46594  01773E  3601               	rlcf	?i2___awmod,f,c
 46595  017740  3602               	rlcf	?i2___awmod+1,f,c
 46596  017742  0ED7               	movlw	low __npowers_
 46597  017744  2401               	addwf	?i2___awmod,w,c
 46598  017746  6EF6               	movwf	tblptrl,c
 46599  017748  0ECE               	movlw	high __npowers_
 46600  01774A  2002               	addwfc	?i2___awmod+1,w,c
 46601  01774C  6EF7               	movwf	tblptrh,c
 46602  01774E                     	if	1	;There are 3 active tblptr bytes
 46603  01774E  6AF8               	clrf	tblptru,c
 46604  017750  0E00               	movlw	low (__mediumconst shr (0+16))
 46605  017752  22F8               	addwfc	tblptru,f,c
 46606  017754                     	endif
 46607  017754  0009               	tblrd		*+
 46608  017756  CFF5 F034          	movff	tablat,i2___flmul@a
 46609  01775A  0009               	tblrd		*+
 46610  01775C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 46611  017760  0009               	tblrd		*+
 46612  017762  CFF5 F036          	movff	tablat,i2___flmul@a+2
 46613  017766  000A               	tblrd		*-
 46614  017768  CFF5 F037          	movff	tablat,i2___flmul@a+3
 46615  01776C  C051  F030         	movff	i2_fround$5455,i2___flmul@b
 46616  017770  C052  F031         	movff	i2_fround$5455+1,i2___flmul@b+1
 46617  017774  C053  F032         	movff	i2_fround$5455+2,i2___flmul@b+2
 46618  017778  C054  F033         	movff	i2_fround$5455+3,i2___flmul@b+3
 46619  01777C  ECC9  F0AD         	call	i2___flmul	;wreg free
 46620  017780  C030  F04D         	movff	?i2___flmul,i2_fround$5456
 46621  017784  C031  F04E         	movff	?i2___flmul+1,i2_fround$5456+1
 46622  017788  C032  F04F         	movff	?i2___flmul+2,i2_fround$5456+2
 46623  01778C  C033  F050         	movff	?i2___flmul+3,i2_fround$5456+3
 46624                           
 46625                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 46626  017790  C04D  F030         	movff	i2_fround$5456,i2___flmul@b
 46627  017794  C04E  F031         	movff	i2_fround$5456+1,i2___flmul@b+1
 46628  017798  C04F  F032         	movff	i2_fround$5456+2,i2___flmul@b+2
 46629  01779C  C050  F033         	movff	i2_fround$5456+3,i2___flmul@b+3
 46630  0177A0  0E00               	movlw	0
 46631  0177A2  6E34               	movwf	i2___flmul@a,c
 46632  0177A4  0E00               	movlw	0
 46633  0177A6  6E35               	movwf	i2___flmul@a+1,c
 46634  0177A8  0E00               	movlw	0
 46635  0177AA  6E36               	movwf	i2___flmul@a+2,c
 46636  0177AC  0E3F               	movlw	63
 46637  0177AE  6E37               	movwf	i2___flmul@a+3,c
 46638  0177B0  ECC9  F0AD         	call	i2___flmul	;wreg free
 46639  0177B4  C030  F049         	movff	?i2___flmul,?i2_fround
 46640  0177B8  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 46641  0177BC  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 46642  0177C0  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 46643  0177C4  0012               	return	
 46644  0177C6                     i2l1943:
 46645                           
 46646                           ;doprnt.c: 415: else if(prec > 10)
 46647  0177C6  0E0A               	movlw	10
 46648  0177C8  6455               	cpfsgt	i2fround@prec,c
 46649  0177CA  D071               	goto	i2l1946
 46650                           
 46651                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 46652  0177CC  0E00               	movlw	0
 46653  0177CE  6E04               	movwf	i2___awmod@divisor+1,c
 46654  0177D0  0E0A               	movlw	10
 46655  0177D2  6E03               	movwf	i2___awmod@divisor,c
 46656  0177D4  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 46657  0177D8  6A02               	clrf	i2___awmod@dividend+1,c
 46658  0177DA  EC6E  F0CF         	call	i2___awmod	;wreg free
 46659  0177DE  90D8               	bcf	status,0,c
 46660  0177E0  3601               	rlcf	?i2___awmod,f,c
 46661  0177E2  3602               	rlcf	?i2___awmod+1,f,c
 46662  0177E4  90D8               	bcf	status,0,c
 46663  0177E6  3601               	rlcf	?i2___awmod,f,c
 46664  0177E8  3602               	rlcf	?i2___awmod+1,f,c
 46665  0177EA  0ED7               	movlw	low __npowers_
 46666  0177EC  2401               	addwf	?i2___awmod,w,c
 46667  0177EE  6EF6               	movwf	tblptrl,c
 46668  0177F0  0ECE               	movlw	high __npowers_
 46669  0177F2  2002               	addwfc	?i2___awmod+1,w,c
 46670  0177F4  6EF7               	movwf	tblptrh,c
 46671  0177F6                     	if	1	;There are 3 active tblptr bytes
 46672  0177F6  6AF8               	clrf	tblptru,c
 46673  0177F8  0E00               	movlw	low (__mediumconst shr (0+16))
 46674  0177FA  22F8               	addwfc	tblptru,f,c
 46675  0177FC                     	endif
 46676  0177FC  0009               	tblrd		*+
 46677  0177FE  CFF5 F034          	movff	tablat,i2___flmul@a
 46678  017802  0009               	tblrd		*+
 46679  017804  CFF5 F035          	movff	tablat,i2___flmul@a+1
 46680  017808  0009               	tblrd		*+
 46681  01780A  CFF5 F036          	movff	tablat,i2___flmul@a+2
 46682  01780E  000A               	tblrd		*-
 46683  017810  CFF5 F037          	movff	tablat,i2___flmul@a+3
 46684  017814  0E00               	movlw	0
 46685  017816  6E0A               	movwf	i2___awdiv@divisor+1,c
 46686  017818  0E0A               	movlw	10
 46687  01781A  6E09               	movwf	i2___awdiv@divisor,c
 46688  01781C  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 46689  017820  6A08               	clrf	i2___awdiv@dividend+1,c
 46690  017822  ECF6  F0CD         	call	i2___awdiv	;wreg free
 46691  017826  90D8               	bcf	status,0,c
 46692  017828  3607               	rlcf	?i2___awdiv,f,c
 46693  01782A  3608               	rlcf	?i2___awdiv+1,f,c
 46694  01782C  90D8               	bcf	status,0,c
 46695  01782E  3607               	rlcf	?i2___awdiv,f,c
 46696  017830  3608               	rlcf	?i2___awdiv+1,f,c
 46697  017832  0E24               	movlw	36
 46698  017834  2607               	addwf	?i2___awdiv,f,c
 46699  017836  0E00               	movlw	0
 46700  017838  2208               	addwfc	?i2___awdiv+1,f,c
 46701  01783A  0ED7               	movlw	low __npowers_
 46702  01783C  2407               	addwf	?i2___awdiv,w,c
 46703  01783E  6EF6               	movwf	tblptrl,c
 46704  017840  0ECE               	movlw	high __npowers_
 46705  017842  2008               	addwfc	?i2___awdiv+1,w,c
 46706  017844  6EF7               	movwf	tblptrh,c
 46707  017846                     	if	1	;There are 3 active tblptr bytes
 46708  017846  6AF8               	clrf	tblptru,c
 46709  017848  0E00               	movlw	low (__mediumconst shr (0+16))
 46710  01784A  22F8               	addwfc	tblptru,f,c
 46711  01784C                     	endif
 46712  01784C  0009               	tblrd		*+
 46713  01784E  CFF5 F030          	movff	tablat,i2___flmul@b
 46714  017852  0009               	tblrd		*+
 46715  017854  CFF5 F031          	movff	tablat,i2___flmul@b+1
 46716  017858  0009               	tblrd		*+
 46717  01785A  CFF5 F032          	movff	tablat,i2___flmul@b+2
 46718  01785E  000A               	tblrd		*-
 46719  017860  CFF5 F033          	movff	tablat,i2___flmul@b+3
 46720  017864  ECC9  F0AD         	call	i2___flmul	;wreg free
 46721  017868  C030  F051         	movff	?i2___flmul,i2_fround$5455
 46722  01786C  C031  F052         	movff	?i2___flmul+1,i2_fround$5455+1
 46723  017870  C032  F053         	movff	?i2___flmul+2,i2_fround$5455+2
 46724  017874  C033  F054         	movff	?i2___flmul+3,i2_fround$5455+3
 46725                           
 46726                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 46727  017878  C051  F030         	movff	i2_fround$5455,i2___flmul@b
 46728  01787C  C052  F031         	movff	i2_fround$5455+1,i2___flmul@b+1
 46729  017880  C053  F032         	movff	i2_fround$5455+2,i2___flmul@b+2
 46730  017884  C054  F033         	movff	i2_fround$5455+3,i2___flmul@b+3
 46731  017888  0E00               	movlw	0
 46732  01788A  6E34               	movwf	i2___flmul@a,c
 46733  01788C  0E00               	movlw	0
 46734  01788E  6E35               	movwf	i2___flmul@a+1,c
 46735  017890  0E00               	movlw	0
 46736  017892  6E36               	movwf	i2___flmul@a+2,c
 46737  017894  0E3F               	movlw	63
 46738  017896  6E37               	movwf	i2___flmul@a+3,c
 46739  017898  ECC9  F0AD         	call	i2___flmul	;wreg free
 46740  01789C  C030  F049         	movff	?i2___flmul,?i2_fround
 46741  0178A0  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 46742  0178A4  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 46743  0178A8  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 46744  0178AC  0012               	return	
 46745  0178AE                     i2l1946:
 46746                           
 46747                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 46748  0178AE  5055               	movf	i2fround@prec,w,c
 46749  0178B0  0D04               	mullw	4
 46750  0178B2  0ED7               	movlw	low __npowers_
 46751  0178B4  24F3               	addwf	prodl,w,c
 46752  0178B6  6EF6               	movwf	tblptrl,c
 46753  0178B8  0ECE               	movlw	high __npowers_
 46754  0178BA  20F4               	addwfc	prodh,w,c
 46755  0178BC  6EF7               	movwf	tblptrh,c
 46756  0178BE                     	if	1	;There are 3 active tblptr bytes
 46757  0178BE  6AF8               	clrf	tblptru,c
 46758  0178C0  0E00               	movlw	low (__mediumconst shr (0+16))
 46759  0178C2  22F8               	addwfc	tblptru,f,c
 46760  0178C4                     	endif
 46761  0178C4  0009               	tblrd		*+
 46762  0178C6  CFF5 F030          	movff	tablat,i2___flmul@b
 46763  0178CA  0009               	tblrd		*+
 46764  0178CC  CFF5 F031          	movff	tablat,i2___flmul@b+1
 46765  0178D0  0009               	tblrd		*+
 46766  0178D2  CFF5 F032          	movff	tablat,i2___flmul@b+2
 46767  0178D6  000A               	tblrd		*-
 46768  0178D8  CFF5 F033          	movff	tablat,i2___flmul@b+3
 46769  0178DC  0E00               	movlw	0
 46770  0178DE  6E34               	movwf	i2___flmul@a,c
 46771  0178E0  0E00               	movlw	0
 46772  0178E2  6E35               	movwf	i2___flmul@a+1,c
 46773  0178E4  0E00               	movlw	0
 46774  0178E6  6E36               	movwf	i2___flmul@a+2,c
 46775  0178E8  0E3F               	movlw	63
 46776  0178EA  6E37               	movwf	i2___flmul@a+3,c
 46777  0178EC  ECC9  F0AD         	call	i2___flmul	;wreg free
 46778  0178F0  C030  F049         	movff	?i2___flmul,?i2_fround
 46779  0178F4  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 46780  0178F8  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 46781  0178FC  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 46782  017900  0012               	return	
 46783  017902                     __end_ofi2_fround:
 46784                           	opt stack 0
 46785                           tosu	equ	0xFFF
 46786                           tosh	equ	0xFFE
 46787                           tosl	equ	0xFFD
 46788                           pclatu	equ	0xFFB
 46789                           pclath	equ	0xFFA
 46790                           tblptru	equ	0xFF8
 46791                           tblptrh	equ	0xFF7
 46792                           tblptrl	equ	0xFF6
 46793                           tablat	equ	0xFF5
 46794                           prodh	equ	0xFF4
 46795                           prodl	equ	0xFF3
 46796                           intcon	equ	0xFF2
 46797                           indf0	equ	0xFEF
 46798                           postinc0	equ	0xFEE
 46799                           fsr0h	equ	0xFEA
 46800                           fsr0l	equ	0xFE9
 46801                           wreg	equ	0xFE8
 46802                           indf1	equ	0xFE7
 46803                           postdec1	equ	0xFE5
 46804                           plusw1	equ	0xFE3
 46805                           fsr1h	equ	0xFE2
 46806                           fsr1l	equ	0xFE1
 46807                           bsr	equ	0xFE0
 46808                           indf2	equ	0xFDF
 46809                           postinc2	equ	0xFDE
 46810                           postdec2	equ	0xFDD
 46811                           plusw2	equ	0xFDB
 46812                           fsr2h	equ	0xFDA
 46813                           fsr2l	equ	0xFD9
 46814                           status	equ	0xFD8
 46815                           
 46816 ;; *************** function i2___awmod *****************
 46817 ;; Defined at:
 46818 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 46819 ;; Parameters:    Size  Location     Type
 46820 ;;  dividend        2    0[COMRAM] int 
 46821 ;;  divisor         2    2[COMRAM] int 
 46822 ;; Auto vars:     Size  Location     Type
 46823 ;;  __awmod         1    5[COMRAM] unsigned char 
 46824 ;;  __awmod         1    4[COMRAM] unsigned char 
 46825 ;; Return value:  Size  Location     Type
 46826 ;;                  2    0[COMRAM] int 
 46827 ;; Registers used:
 46828 ;;		wreg, status,2, status,0
 46829 ;; Tracked objects:
 46830 ;;		On entry : 0/0
 46831 ;;		On exit  : 0/0
 46832 ;;		Unchanged: 0/0
 46833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46837 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46838 ;;Total ram usage:        6 bytes
 46839 ;; Hardware stack levels used:    1
 46840 ;; This function calls:
 46841 ;;		Nothing
 46842 ;; This function is called by:
 46843 ;;		i2_fround
 46844 ;;		i2_scale
 46845 ;; This function uses a non-reentrant model
 46846 ;;
 46847                           
 46848                           	psect	text140
 46849  019EDC                     __ptext140:
 46850                           	opt stack 0
 46851  019EDC                     i2___awmod:
 46852                           	opt stack 13
 46853                           
 46854                           ;incstack = 0
 46855  019EDC  0E00               	movlw	0
 46856  019EDE  6E06               	movwf	i2___awmod@sign,c
 46857  019EE0  AE02               	btfss	i2___awmod@dividend+1,7,c
 46858  019EE2  D006               	goto	i2l2372
 46859  019EE4  6C01               	negf	i2___awmod@dividend,c
 46860  019EE6  1E02               	comf	i2___awmod@dividend+1,f,c
 46861  019EE8  B0D8               	btfsc	status,0,c
 46862  019EEA  2A02               	incf	i2___awmod@dividend+1,f,c
 46863  019EEC  0E01               	movlw	1
 46864  019EEE  6E06               	movwf	i2___awmod@sign,c
 46865  019EF0                     i2l2372:
 46866  019EF0  AE04               	btfss	i2___awmod@divisor+1,7,c
 46867  019EF2  D004               	goto	i2l2373
 46868  019EF4  6C03               	negf	i2___awmod@divisor,c
 46869  019EF6  1E04               	comf	i2___awmod@divisor+1,f,c
 46870  019EF8  B0D8               	btfsc	status,0,c
 46871  019EFA  2A04               	incf	i2___awmod@divisor+1,f,c
 46872  019EFC                     i2l2373:
 46873  019EFC  5003               	movf	i2___awmod@divisor,w,c
 46874  019EFE  1004               	iorwf	i2___awmod@divisor+1,w,c
 46875  019F00  B4D8               	btfsc	status,2,c
 46876  019F02  D018               	goto	i2l2380
 46877  019F04  0E01               	movlw	1
 46878  019F06  6E05               	movwf	i2___awmod@counter,c
 46879  019F08  D004               	goto	i2l2375
 46880  019F0A  90D8               	bcf	status,0,c
 46881  019F0C  3603               	rlcf	i2___awmod@divisor,f,c
 46882  019F0E  3604               	rlcf	i2___awmod@divisor+1,f,c
 46883  019F10  2A05               	incf	i2___awmod@counter,f,c
 46884  019F12                     i2l2375:
 46885  019F12  AE04               	btfss	i2___awmod@divisor+1,7,c
 46886  019F14  D7FA               	goto	i2l2376
 46887  019F16                     i2u2057_40:
 46888  019F16  5003               	movf	i2___awmod@divisor,w,c
 46889  019F18  5C01               	subwf	i2___awmod@dividend,w,c
 46890  019F1A  5004               	movf	i2___awmod@divisor+1,w,c
 46891  019F1C  5802               	subwfb	i2___awmod@dividend+1,w,c
 46892  019F1E  A0D8               	btfss	status,0,c
 46893  019F20  D004               	goto	i2l2379
 46894  019F22  5003               	movf	i2___awmod@divisor,w,c
 46895  019F24  5E01               	subwf	i2___awmod@dividend,f,c
 46896  019F26  5004               	movf	i2___awmod@divisor+1,w,c
 46897  019F28  5A02               	subwfb	i2___awmod@dividend+1,f,c
 46898  019F2A                     i2l2379:
 46899  019F2A  90D8               	bcf	status,0,c
 46900  019F2C  3204               	rrcf	i2___awmod@divisor+1,f,c
 46901  019F2E  3203               	rrcf	i2___awmod@divisor,f,c
 46902  019F30  2E05               	decfsz	i2___awmod@counter,f,c
 46903  019F32  D7F1               	goto	i2u2057_40
 46904  019F34                     i2l2380:
 46905  019F34  5006               	movf	i2___awmod@sign,w,c
 46906  019F36  B4D8               	btfsc	status,2,c
 46907  019F38  D004               	goto	i2l2381
 46908  019F3A  6C01               	negf	i2___awmod@dividend,c
 46909  019F3C  1E02               	comf	i2___awmod@dividend+1,f,c
 46910  019F3E  B0D8               	btfsc	status,0,c
 46911  019F40  2A02               	incf	i2___awmod@dividend+1,f,c
 46912  019F42                     i2l2381:
 46913  019F42  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 46914  019F46  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 46915  019F4A  0012               	return	
 46916  019F4C                     __end_ofi2___awmod:
 46917                           	opt stack 0
 46918                           tosu	equ	0xFFF
 46919                           tosh	equ	0xFFE
 46920                           tosl	equ	0xFFD
 46921                           pclatu	equ	0xFFB
 46922                           pclath	equ	0xFFA
 46923                           tblptru	equ	0xFF8
 46924                           tblptrh	equ	0xFF7
 46925                           tblptrl	equ	0xFF6
 46926                           tablat	equ	0xFF5
 46927                           prodh	equ	0xFF4
 46928                           prodl	equ	0xFF3
 46929                           intcon	equ	0xFF2
 46930                           indf0	equ	0xFEF
 46931                           postinc0	equ	0xFEE
 46932                           fsr0h	equ	0xFEA
 46933                           fsr0l	equ	0xFE9
 46934                           wreg	equ	0xFE8
 46935                           indf1	equ	0xFE7
 46936                           postdec1	equ	0xFE5
 46937                           plusw1	equ	0xFE3
 46938                           fsr1h	equ	0xFE2
 46939                           fsr1l	equ	0xFE1
 46940                           bsr	equ	0xFE0
 46941                           indf2	equ	0xFDF
 46942                           postinc2	equ	0xFDE
 46943                           postdec2	equ	0xFDD
 46944                           plusw2	equ	0xFDB
 46945                           fsr2h	equ	0xFDA
 46946                           fsr2l	equ	0xFD9
 46947                           status	equ	0xFD8
 46948                           
 46949 ;; *************** function i2___awdiv *****************
 46950 ;; Defined at:
 46951 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 46952 ;; Parameters:    Size  Location     Type
 46953 ;;  dividend        2    6[COMRAM] int 
 46954 ;;  divisor         2    8[COMRAM] int 
 46955 ;; Auto vars:     Size  Location     Type
 46956 ;;  __awdiv         2   12[COMRAM] int 
 46957 ;;  __awdiv         1   11[COMRAM] unsigned char 
 46958 ;;  __awdiv         1   10[COMRAM] unsigned char 
 46959 ;; Return value:  Size  Location     Type
 46960 ;;                  2    6[COMRAM] int 
 46961 ;; Registers used:
 46962 ;;		wreg, status,2, status,0
 46963 ;; Tracked objects:
 46964 ;;		On entry : 0/0
 46965 ;;		On exit  : 0/0
 46966 ;;		Unchanged: 0/0
 46967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46968 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46969 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46971 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46972 ;;Total ram usage:        8 bytes
 46973 ;; Hardware stack levels used:    1
 46974 ;; This function calls:
 46975 ;;		Nothing
 46976 ;; This function is called by:
 46977 ;;		i2_fround
 46978 ;;		i2_scale
 46979 ;;		i2__doprnt
 46980 ;; This function uses a non-reentrant model
 46981 ;;
 46982                           
 46983                           	psect	text141
 46984  019BEC                     __ptext141:
 46985                           	opt stack 0
 46986  019BEC                     i2___awdiv:
 46987                           	opt stack 13
 46988                           
 46989                           ;incstack = 0
 46990  019BEC  0E00               	movlw	0
 46991  019BEE  6E0C               	movwf	i2___awdiv@sign,c
 46992  019BF0  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 46993  019BF2  D006               	goto	i2l2359
 46994  019BF4  6C09               	negf	i2___awdiv@divisor,c
 46995  019BF6  1E0A               	comf	i2___awdiv@divisor+1,f,c
 46996  019BF8  B0D8               	btfsc	status,0,c
 46997  019BFA  2A0A               	incf	i2___awdiv@divisor+1,f,c
 46998  019BFC  0E01               	movlw	1
 46999  019BFE  6E0C               	movwf	i2___awdiv@sign,c
 47000  019C00                     i2l2359:
 47001  019C00  AE08               	btfss	i2___awdiv@dividend+1,7,c
 47002  019C02  D006               	goto	i2l2360
 47003  019C04  6C07               	negf	i2___awdiv@dividend,c
 47004  019C06  1E08               	comf	i2___awdiv@dividend+1,f,c
 47005  019C08  B0D8               	btfsc	status,0,c
 47006  019C0A  2A08               	incf	i2___awdiv@dividend+1,f,c
 47007  019C0C  0E01               	movlw	1
 47008  019C0E  1A0C               	xorwf	i2___awdiv@sign,f,c
 47009  019C10                     i2l2360:
 47010  019C10  0E00               	movlw	0
 47011  019C12  6E0E               	movwf	i2___awdiv@quotient+1,c
 47012  019C14  0E00               	movlw	0
 47013  019C16  6E0D               	movwf	i2___awdiv@quotient,c
 47014  019C18  5009               	movf	i2___awdiv@divisor,w,c
 47015  019C1A  100A               	iorwf	i2___awdiv@divisor+1,w,c
 47016  019C1C  B4D8               	btfsc	status,2,c
 47017  019C1E  D01C               	goto	i2l2367
 47018  019C20  0E01               	movlw	1
 47019  019C22  6E0B               	movwf	i2___awdiv@counter,c
 47020  019C24  D004               	goto	i2l2362
 47021  019C26  90D8               	bcf	status,0,c
 47022  019C28  3609               	rlcf	i2___awdiv@divisor,f,c
 47023  019C2A  360A               	rlcf	i2___awdiv@divisor+1,f,c
 47024  019C2C  2A0B               	incf	i2___awdiv@counter,f,c
 47025  019C2E                     i2l2362:
 47026  019C2E  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 47027  019C30  D7FA               	goto	i2l2363
 47028  019C32                     i2u2051_40:
 47029  019C32  90D8               	bcf	status,0,c
 47030  019C34  360D               	rlcf	i2___awdiv@quotient,f,c
 47031  019C36  360E               	rlcf	i2___awdiv@quotient+1,f,c
 47032  019C38  5009               	movf	i2___awdiv@divisor,w,c
 47033  019C3A  5C07               	subwf	i2___awdiv@dividend,w,c
 47034  019C3C  500A               	movf	i2___awdiv@divisor+1,w,c
 47035  019C3E  5808               	subwfb	i2___awdiv@dividend+1,w,c
 47036  019C40  A0D8               	btfss	status,0,c
 47037  019C42  D005               	goto	i2l2366
 47038  019C44  5009               	movf	i2___awdiv@divisor,w,c
 47039  019C46  5E07               	subwf	i2___awdiv@dividend,f,c
 47040  019C48  500A               	movf	i2___awdiv@divisor+1,w,c
 47041  019C4A  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 47042  019C4C  800D               	bsf	i2___awdiv@quotient,0,c
 47043  019C4E                     i2l2366:
 47044  019C4E  90D8               	bcf	status,0,c
 47045  019C50  320A               	rrcf	i2___awdiv@divisor+1,f,c
 47046  019C52  3209               	rrcf	i2___awdiv@divisor,f,c
 47047  019C54  2E0B               	decfsz	i2___awdiv@counter,f,c
 47048  019C56  D7ED               	goto	i2u2051_40
 47049  019C58                     i2l2367:
 47050  019C58  500C               	movf	i2___awdiv@sign,w,c
 47051  019C5A  B4D8               	btfsc	status,2,c
 47052  019C5C  D004               	goto	i2l2368
 47053  019C5E  6C0D               	negf	i2___awdiv@quotient,c
 47054  019C60  1E0E               	comf	i2___awdiv@quotient+1,f,c
 47055  019C62  B0D8               	btfsc	status,0,c
 47056  019C64  2A0E               	incf	i2___awdiv@quotient+1,f,c
 47057  019C66                     i2l2368:
 47058  019C66  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 47059  019C6A  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 47060  019C6E  0012               	return	
 47061  019C70                     __end_ofi2___awdiv:
 47062                           	opt stack 0
 47063                           tosu	equ	0xFFF
 47064                           tosh	equ	0xFFE
 47065                           tosl	equ	0xFFD
 47066                           pclatu	equ	0xFFB
 47067                           pclath	equ	0xFFA
 47068                           tblptru	equ	0xFF8
 47069                           tblptrh	equ	0xFF7
 47070                           tblptrl	equ	0xFF6
 47071                           tablat	equ	0xFF5
 47072                           prodh	equ	0xFF4
 47073                           prodl	equ	0xFF3
 47074                           intcon	equ	0xFF2
 47075                           indf0	equ	0xFEF
 47076                           postinc0	equ	0xFEE
 47077                           fsr0h	equ	0xFEA
 47078                           fsr0l	equ	0xFE9
 47079                           wreg	equ	0xFE8
 47080                           indf1	equ	0xFE7
 47081                           postdec1	equ	0xFE5
 47082                           plusw1	equ	0xFE3
 47083                           fsr1h	equ	0xFE2
 47084                           fsr1l	equ	0xFE1
 47085                           bsr	equ	0xFE0
 47086                           indf2	equ	0xFDF
 47087                           postinc2	equ	0xFDE
 47088                           postdec2	equ	0xFDD
 47089                           plusw2	equ	0xFDB
 47090                           fsr2h	equ	0xFDA
 47091                           fsr2l	equ	0xFD9
 47092                           status	equ	0xFD8
 47093                           
 47094 ;; *************** function i2__tdiv_to_l_ *****************
 47095 ;; Defined at:
 47096 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 47097 ;; Parameters:    Size  Location     Type
 47098 ;;  f1              3    0[COMRAM] float 
 47099 ;;  f2              3    3[COMRAM] float 
 47100 ;; Auto vars:     Size  Location     Type
 47101 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 47102 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 47103 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 47104 ;; Return value:  Size  Location     Type
 47105 ;;                  4    0[COMRAM] unsigned long 
 47106 ;; Registers used:
 47107 ;;		wreg, status,2, status,0
 47108 ;; Tracked objects:
 47109 ;;		On entry : 0/0
 47110 ;;		On exit  : 0/0
 47111 ;;		Unchanged: 0/0
 47112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47113 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47114 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47115 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47116 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47117 ;;Total ram usage:       15 bytes
 47118 ;; Hardware stack levels used:    1
 47119 ;; This function calls:
 47120 ;;		Nothing
 47121 ;; This function is called by:
 47122 ;;		i2__doprnt
 47123 ;; This function uses a non-reentrant model
 47124 ;;
 47125                           
 47126                           	psect	text142
 47127  01874E                     __ptext142:
 47128                           	opt stack 0
 47129  01874E                     i2__tdiv_to_l_:
 47130                           	opt stack 14
 47131                           
 47132                           ;incstack = 0
 47133  01874E  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 47134  018752  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 47135  018754  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 47136  018756  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 47137  018758  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 47138  01875A  E301               	bnc	u2095_41
 47139  01875C  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 47140  01875E                     u2095_41:
 47141  01875E  5007               	movf	??i2__tdiv_to_l_,w,c
 47142  018760  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 47143  018762  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 47144  018764  A4D8               	btfss	status,2,c
 47145  018766  D009               	goto	i2l2507
 47146  018768  0E00               	movlw	0
 47147  01876A  6E01               	movwf	?i2__tdiv_to_l_,c
 47148  01876C  0E00               	movlw	0
 47149  01876E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 47150  018770  0E00               	movlw	0
 47151  018772  6E03               	movwf	?i2__tdiv_to_l_+2,c
 47152  018774  0E00               	movlw	0
 47153  018776  6E04               	movwf	?i2__tdiv_to_l_+3,c
 47154  018778  0012               	return	
 47155  01877A                     i2l2507:
 47156  01877A  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 47157  01877E  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 47158  018780  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 47159  018782  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 47160  018784  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 47161  018786  E301               	bnc	u2097_41
 47162  018788  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 47163  01878A                     u2097_41:
 47164  01878A  5007               	movf	??i2__tdiv_to_l_,w,c
 47165  01878C  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 47166  01878E  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 47167  018790  A4D8               	btfss	status,2,c
 47168  018792  D009               	goto	i2l2509
 47169  018794  0E00               	movlw	0
 47170  018796  6E01               	movwf	?i2__tdiv_to_l_,c
 47171  018798  0E00               	movlw	0
 47172  01879A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 47173  01879C  0E00               	movlw	0
 47174  01879E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 47175  0187A0  0E00               	movlw	0
 47176  0187A2  6E04               	movwf	?i2__tdiv_to_l_+3,c
 47177  0187A4  0012               	return	
 47178  0187A6                     i2l2509:
 47179  0187A6  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 47180  0187A8  0EFF               	movlw	255
 47181  0187AA  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 47182  0187AC  0EFF               	movlw	255
 47183  0187AE  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 47184  0187B0  0E00               	movlw	0
 47185  0187B2  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 47186  0187B4  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 47187  0187B6  0EFF               	movlw	255
 47188  0187B8  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 47189  0187BA  0EFF               	movlw	255
 47190  0187BC  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 47191  0187BE  0E00               	movlw	0
 47192  0187C0  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 47193  0187C2  0E00               	movlw	0
 47194  0187C4  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 47195  0187C6  0E00               	movlw	0
 47196  0187C8  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 47197  0187CA  0E00               	movlw	0
 47198  0187CC  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 47199  0187CE  0E00               	movlw	0
 47200  0187D0  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 47201  0187D2  0E7F               	movlw	127
 47202  0187D4  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 47203  0187D6  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 47204  0187D8  0F98               	addlw	152
 47205  0187DA  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 47206  0187DC  0E18               	movlw	24
 47207  0187DE  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 47208  0187E0                     i2l2510:
 47209  0187E0  90D8               	bcf	status,0,c
 47210  0187E2  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 47211  0187E4  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 47212  0187E6  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 47213  0187E8  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 47214  0187EA  5004               	movf	i2__tdiv_to_l_@f2,w,c
 47215  0187EC  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 47216  0187EE  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 47217  0187F0  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 47218  0187F2  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 47219  0187F4  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 47220  0187F6  A0D8               	btfss	status,0,c
 47221  0187F8  D007               	goto	i2l2511
 47222  0187FA  5004               	movf	i2__tdiv_to_l_@f2,w,c
 47223  0187FC  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 47224  0187FE  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 47225  018800  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 47226  018802  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 47227  018804  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 47228  018806  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 47229  018808                     i2l2511:
 47230  018808  90D8               	bcf	status,0,c
 47231  01880A  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 47232  01880C  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 47233  01880E  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 47234  018810  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 47235  018812  D7E6               	goto	i2l2510
 47236  018814  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 47237  018816  D016               	goto	i2l2513
 47238  018818  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 47239  01881A  0A80               	xorlw	128
 47240  01881C  0F97               	addlw	151
 47241  01881E  B0D8               	btfsc	status,0,c
 47242  018820  D009               	goto	i2l2514
 47243  018822  0E00               	movlw	0
 47244  018824  6E01               	movwf	?i2__tdiv_to_l_,c
 47245  018826  0E00               	movlw	0
 47246  018828  6E02               	movwf	?i2__tdiv_to_l_+1,c
 47247  01882A  0E00               	movlw	0
 47248  01882C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 47249  01882E  0E00               	movlw	0
 47250  018830  6E04               	movwf	?i2__tdiv_to_l_+3,c
 47251  018832  0012               	return	
 47252  018834                     i2l2514:
 47253  018834  90D8               	bcf	status,0,c
 47254  018836  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 47255  018838  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 47256  01883A  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 47257  01883C  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 47258  01883E  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 47259  018840  D7F9               	goto	i2l2514
 47260  018842  D015               	goto	i2u2103_40
 47261  018844                     i2l2513:
 47262  018844  0E17               	movlw	23
 47263  018846  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 47264  018848  D00F               	goto	i2l2519
 47265  01884A  0E00               	movlw	0
 47266  01884C  6E01               	movwf	?i2__tdiv_to_l_,c
 47267  01884E  0E00               	movlw	0
 47268  018850  6E02               	movwf	?i2__tdiv_to_l_+1,c
 47269  018852  0E00               	movlw	0
 47270  018854  6E03               	movwf	?i2__tdiv_to_l_+2,c
 47271  018856  0E00               	movlw	0
 47272  018858  6E04               	movwf	?i2__tdiv_to_l_+3,c
 47273  01885A  0012               	return	
 47274  01885C  90D8               	bcf	status,0,c
 47275  01885E  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 47276  018860  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 47277  018862  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 47278  018864  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 47279  018866  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 47280  018868                     i2l2519:
 47281  018868  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 47282  01886A  A4D8               	btfss	status,2,c
 47283  01886C  D7F7               	goto	i2l2520
 47284  01886E                     i2u2103_40:
 47285  01886E  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 47286  018872  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 47287  018876  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 47288  01887A  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 47289  01887E  0012               	return		;funcret
 47290  018880                     __end_ofi2__tdiv_to_l_:
 47291                           	opt stack 0
 47292                           tosu	equ	0xFFF
 47293                           tosh	equ	0xFFE
 47294                           tosl	equ	0xFFD
 47295                           pclatu	equ	0xFFB
 47296                           pclath	equ	0xFFA
 47297                           tblptru	equ	0xFF8
 47298                           tblptrh	equ	0xFF7
 47299                           tblptrl	equ	0xFF6
 47300                           tablat	equ	0xFF5
 47301                           prodh	equ	0xFF4
 47302                           prodl	equ	0xFF3
 47303                           intcon	equ	0xFF2
 47304                           indf0	equ	0xFEF
 47305                           postinc0	equ	0xFEE
 47306                           fsr0h	equ	0xFEA
 47307                           fsr0l	equ	0xFE9
 47308                           wreg	equ	0xFE8
 47309                           indf1	equ	0xFE7
 47310                           postdec1	equ	0xFE5
 47311                           plusw1	equ	0xFE3
 47312                           fsr1h	equ	0xFE2
 47313                           fsr1l	equ	0xFE1
 47314                           bsr	equ	0xFE0
 47315                           indf2	equ	0xFDF
 47316                           postinc2	equ	0xFDE
 47317                           postdec2	equ	0xFDD
 47318                           plusw2	equ	0xFDB
 47319                           fsr2h	equ	0xFDA
 47320                           fsr2l	equ	0xFD9
 47321                           status	equ	0xFD8
 47322                           
 47323 ;; *************** function i2__div_to_l_ *****************
 47324 ;; Defined at:
 47325 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 47326 ;; Parameters:    Size  Location     Type
 47327 ;;  f1              4    0[COMRAM] unsigned long 
 47328 ;;  f2              4    4[COMRAM] unsigned long 
 47329 ;; Auto vars:     Size  Location     Type
 47330 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 47331 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 47332 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 47333 ;; Return value:  Size  Location     Type
 47334 ;;                  4    0[COMRAM] unsigned long 
 47335 ;; Registers used:
 47336 ;;		wreg, status,2, status,0
 47337 ;; Tracked objects:
 47338 ;;		On entry : 0/0
 47339 ;;		On exit  : 0/0
 47340 ;;		Unchanged: 0/0
 47341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47342 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47343 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47345 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47346 ;;Total ram usage:       14 bytes
 47347 ;; Hardware stack levels used:    1
 47348 ;; This function calls:
 47349 ;;		Nothing
 47350 ;; This function is called by:
 47351 ;;		i2__doprnt
 47352 ;; This function uses a non-reentrant model
 47353 ;;
 47354                           
 47355                           	psect	text143
 47356  0189AA                     __ptext143:
 47357                           	opt stack 0
 47358  0189AA                     i2__div_to_l_:
 47359                           	opt stack 14
 47360                           
 47361                           ;incstack = 0
 47362  0189AA  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 47363  0189AC  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 47364  0189AE  6E0E               	movwf	i2__div_to_l_@exp1,c
 47365  0189B0  500E               	movf	i2__div_to_l_@exp1,w,c
 47366  0189B2  A4D8               	btfss	status,2,c
 47367  0189B4  D009               	goto	i2l2403
 47368  0189B6  0E00               	movlw	0
 47369  0189B8  6E01               	movwf	?i2__div_to_l_,c
 47370  0189BA  0E00               	movlw	0
 47371  0189BC  6E02               	movwf	?i2__div_to_l_+1,c
 47372  0189BE  0E00               	movlw	0
 47373  0189C0  6E03               	movwf	?i2__div_to_l_+2,c
 47374  0189C2  0E00               	movlw	0
 47375  0189C4  6E04               	movwf	?i2__div_to_l_+3,c
 47376  0189C6  0012               	return	
 47377  0189C8                     i2l2403:
 47378  0189C8  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 47379  0189CA  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 47380  0189CC  6E0D               	movwf	i2__div_to_l_@cntr,c
 47381  0189CE  500D               	movf	i2__div_to_l_@cntr,w,c
 47382  0189D0  A4D8               	btfss	status,2,c
 47383  0189D2  D009               	goto	i2l2405
 47384  0189D4  0E00               	movlw	0
 47385  0189D6  6E01               	movwf	?i2__div_to_l_,c
 47386  0189D8  0E00               	movlw	0
 47387  0189DA  6E02               	movwf	?i2__div_to_l_+1,c
 47388  0189DC  0E00               	movlw	0
 47389  0189DE  6E03               	movwf	?i2__div_to_l_+2,c
 47390  0189E0  0E00               	movlw	0
 47391  0189E2  6E04               	movwf	?i2__div_to_l_+3,c
 47392  0189E4  0012               	return	
 47393  0189E6                     i2l2405:
 47394  0189E6  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 47395  0189E8  0EFF               	movlw	255
 47396  0189EA  1601               	andwf	i2__div_to_l_@f1,f,c
 47397  0189EC  0EFF               	movlw	255
 47398  0189EE  1602               	andwf	i2__div_to_l_@f1+1,f,c
 47399  0189F0  0EFF               	movlw	255
 47400  0189F2  1603               	andwf	i2__div_to_l_@f1+2,f,c
 47401  0189F4  0E00               	movlw	0
 47402  0189F6  1604               	andwf	i2__div_to_l_@f1+3,f,c
 47403  0189F8  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 47404  0189FA  0EFF               	movlw	255
 47405  0189FC  1605               	andwf	i2__div_to_l_@f2,f,c
 47406  0189FE  0EFF               	movlw	255
 47407  018A00  1606               	andwf	i2__div_to_l_@f2+1,f,c
 47408  018A02  0EFF               	movlw	255
 47409  018A04  1607               	andwf	i2__div_to_l_@f2+2,f,c
 47410  018A06  0E00               	movlw	0
 47411  018A08  1608               	andwf	i2__div_to_l_@f2+3,f,c
 47412  018A0A  0E00               	movlw	0
 47413  018A0C  6E09               	movwf	i2__div_to_l_@quot,c
 47414  018A0E  0E00               	movlw	0
 47415  018A10  6E0A               	movwf	i2__div_to_l_@quot+1,c
 47416  018A12  0E00               	movlw	0
 47417  018A14  6E0B               	movwf	i2__div_to_l_@quot+2,c
 47418  018A16  0E00               	movlw	0
 47419  018A18  6E0C               	movwf	i2__div_to_l_@quot+3,c
 47420  018A1A  0E7F               	movlw	127
 47421  018A1C  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 47422  018A1E  500D               	movf	i2__div_to_l_@cntr,w,c
 47423  018A20  0FA0               	addlw	160
 47424  018A22  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 47425  018A24  0E20               	movlw	32
 47426  018A26  6E0D               	movwf	i2__div_to_l_@cntr,c
 47427  018A28  90D8               	bcf	status,0,c
 47428  018A2A  3609               	rlcf	i2__div_to_l_@quot,f,c
 47429  018A2C  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 47430  018A2E  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 47431  018A30  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 47432  018A32  5005               	movf	i2__div_to_l_@f2,w,c
 47433  018A34  5C01               	subwf	i2__div_to_l_@f1,w,c
 47434  018A36  5006               	movf	i2__div_to_l_@f2+1,w,c
 47435  018A38  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 47436  018A3A  5007               	movf	i2__div_to_l_@f2+2,w,c
 47437  018A3C  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 47438  018A3E  5008               	movf	i2__div_to_l_@f2+3,w,c
 47439  018A40  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 47440  018A42  A0D8               	btfss	status,0,c
 47441  018A44  D009               	goto	i2l2407
 47442  018A46  5005               	movf	i2__div_to_l_@f2,w,c
 47443  018A48  5E01               	subwf	i2__div_to_l_@f1,f,c
 47444  018A4A  5006               	movf	i2__div_to_l_@f2+1,w,c
 47445  018A4C  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 47446  018A4E  5007               	movf	i2__div_to_l_@f2+2,w,c
 47447  018A50  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 47448  018A52  5008               	movf	i2__div_to_l_@f2+3,w,c
 47449  018A54  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 47450  018A56  8009               	bsf	i2__div_to_l_@quot,0,c
 47451  018A58                     i2l2407:
 47452  018A58  90D8               	bcf	status,0,c
 47453  018A5A  3601               	rlcf	i2__div_to_l_@f1,f,c
 47454  018A5C  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 47455  018A5E  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 47456  018A60  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 47457  018A62  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 47458  018A64  D7E1               	goto	i2l2406
 47459  018A66  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 47460  018A68  D016               	goto	i2l2409
 47461  018A6A  500E               	movf	i2__div_to_l_@exp1,w,c
 47462  018A6C  0A80               	xorlw	128
 47463  018A6E  0F9F               	addlw	159
 47464  018A70  B0D8               	btfsc	status,0,c
 47465  018A72  D009               	goto	i2l2410
 47466  018A74  0E00               	movlw	0
 47467  018A76  6E01               	movwf	?i2__div_to_l_,c
 47468  018A78  0E00               	movlw	0
 47469  018A7A  6E02               	movwf	?i2__div_to_l_+1,c
 47470  018A7C  0E00               	movlw	0
 47471  018A7E  6E03               	movwf	?i2__div_to_l_+2,c
 47472  018A80  0E00               	movlw	0
 47473  018A82  6E04               	movwf	?i2__div_to_l_+3,c
 47474  018A84  0012               	return	
 47475  018A86                     i2l2410:
 47476  018A86  90D8               	bcf	status,0,c
 47477  018A88  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 47478  018A8A  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 47479  018A8C  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 47480  018A8E  3209               	rrcf	i2__div_to_l_@quot,f,c
 47481  018A90  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 47482  018A92  D7F9               	goto	i2l2410
 47483  018A94  D015               	goto	i2u2094_40
 47484  018A96                     i2l2409:
 47485  018A96  0E1F               	movlw	31
 47486  018A98  640E               	cpfsgt	i2__div_to_l_@exp1,c
 47487  018A9A  D00F               	goto	i2l2415
 47488  018A9C  0E00               	movlw	0
 47489  018A9E  6E01               	movwf	?i2__div_to_l_,c
 47490  018AA0  0E00               	movlw	0
 47491  018AA2  6E02               	movwf	?i2__div_to_l_+1,c
 47492  018AA4  0E00               	movlw	0
 47493  018AA6  6E03               	movwf	?i2__div_to_l_+2,c
 47494  018AA8  0E00               	movlw	0
 47495  018AAA  6E04               	movwf	?i2__div_to_l_+3,c
 47496  018AAC  0012               	return	
 47497  018AAE  90D8               	bcf	status,0,c
 47498  018AB0  3609               	rlcf	i2__div_to_l_@quot,f,c
 47499  018AB2  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 47500  018AB4  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 47501  018AB6  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 47502  018AB8  060E               	decf	i2__div_to_l_@exp1,f,c
 47503  018ABA                     i2l2415:
 47504  018ABA  500E               	movf	i2__div_to_l_@exp1,w,c
 47505  018ABC  A4D8               	btfss	status,2,c
 47506  018ABE  D7F7               	goto	i2l2416
 47507  018AC0                     i2u2094_40:
 47508  018AC0  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 47509  018AC4  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 47510  018AC8  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 47511  018ACC  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 47512  018AD0  0012               	return		;funcret
 47513  018AD2                     __end_ofi2__div_to_l_:
 47514                           	opt stack 0
 47515                           tosu	equ	0xFFF
 47516                           tosh	equ	0xFFE
 47517                           tosl	equ	0xFFD
 47518                           pclatu	equ	0xFFB
 47519                           pclath	equ	0xFFA
 47520                           tblptru	equ	0xFF8
 47521                           tblptrh	equ	0xFF7
 47522                           tblptrl	equ	0xFF6
 47523                           tablat	equ	0xFF5
 47524                           prodh	equ	0xFF4
 47525                           prodl	equ	0xFF3
 47526                           intcon	equ	0xFF2
 47527                           indf0	equ	0xFEF
 47528                           postinc0	equ	0xFEE
 47529                           fsr0h	equ	0xFEA
 47530                           fsr0l	equ	0xFE9
 47531                           wreg	equ	0xFE8
 47532                           indf1	equ	0xFE7
 47533                           postdec1	equ	0xFE5
 47534                           plusw1	equ	0xFE3
 47535                           fsr1h	equ	0xFE2
 47536                           fsr1l	equ	0xFE1
 47537                           bsr	equ	0xFE0
 47538                           indf2	equ	0xFDF
 47539                           postinc2	equ	0xFDE
 47540                           postdec2	equ	0xFDD
 47541                           plusw2	equ	0xFDB
 47542                           fsr2h	equ	0xFDA
 47543                           fsr2l	equ	0xFD9
 47544                           status	equ	0xFD8
 47545                           
 47546 ;; *************** function i2___wmul *****************
 47547 ;; Defined at:
 47548 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 47549 ;; Parameters:    Size  Location     Type
 47550 ;;  multiplier      2    0[COMRAM] unsigned int 
 47551 ;;  multiplicand    2    2[COMRAM] unsigned int 
 47552 ;; Auto vars:     Size  Location     Type
 47553 ;;  __wmul          2    4[COMRAM] unsigned int 
 47554 ;; Return value:  Size  Location     Type
 47555 ;;                  2    0[COMRAM] unsigned int 
 47556 ;; Registers used:
 47557 ;;		wreg, status,2, status,0, prodl, prodh
 47558 ;; Tracked objects:
 47559 ;;		On entry : 0/0
 47560 ;;		On exit  : 0/0
 47561 ;;		Unchanged: 0/0
 47562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47566 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47567 ;;Total ram usage:        6 bytes
 47568 ;; Hardware stack levels used:    1
 47569 ;; This function calls:
 47570 ;;		Nothing
 47571 ;; This function is called by:
 47572 ;;		i2__doprnt
 47573 ;; This function uses a non-reentrant model
 47574 ;;
 47575                           
 47576                           	psect	text144
 47577  01AF5A                     __ptext144:
 47578                           	opt stack 0
 47579  01AF5A                     i2___wmul:
 47580                           	opt stack 14
 47581                           
 47582                           ;incstack = 0
 47583  01AF5A  5001               	movf	i2___wmul@multiplier,w,c
 47584  01AF5C  0203               	mulwf	i2___wmul@multiplicand,c
 47585  01AF5E  CFF3 F005          	movff	prodl,i2___wmul@product
 47586  01AF62  CFF4 F006          	movff	prodh,i2___wmul@product+1
 47587  01AF66  5001               	movf	i2___wmul@multiplier,w,c
 47588  01AF68  0204               	mulwf	i2___wmul@multiplicand+1,c
 47589  01AF6A  50F3               	movf	prodl,w,c
 47590  01AF6C  2606               	addwf	i2___wmul@product+1,f,c
 47591  01AF6E  5002               	movf	i2___wmul@multiplier+1,w,c
 47592  01AF70  0203               	mulwf	i2___wmul@multiplicand,c
 47593  01AF72  50F3               	movf	prodl,w,c
 47594  01AF74  2606               	addwf	i2___wmul@product+1,f,c
 47595  01AF76  C005  F001         	movff	i2___wmul@product,?i2___wmul
 47596  01AF7A  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 47597  01AF7E  0012               	return	
 47598  01AF80                     __end_ofi2___wmul:
 47599                           	opt stack 0
 47600                           tosu	equ	0xFFF
 47601                           tosh	equ	0xFFE
 47602                           tosl	equ	0xFFD
 47603                           pclatu	equ	0xFFB
 47604                           pclath	equ	0xFFA
 47605                           tblptru	equ	0xFF8
 47606                           tblptrh	equ	0xFF7
 47607                           tblptrl	equ	0xFF6
 47608                           tablat	equ	0xFF5
 47609                           prodh	equ	0xFF4
 47610                           prodl	equ	0xFF3
 47611                           intcon	equ	0xFF2
 47612                           indf0	equ	0xFEF
 47613                           postinc0	equ	0xFEE
 47614                           fsr0h	equ	0xFEA
 47615                           fsr0l	equ	0xFE9
 47616                           wreg	equ	0xFE8
 47617                           indf1	equ	0xFE7
 47618                           postdec1	equ	0xFE5
 47619                           plusw1	equ	0xFE3
 47620                           fsr1h	equ	0xFE2
 47621                           fsr1l	equ	0xFE1
 47622                           bsr	equ	0xFE0
 47623                           indf2	equ	0xFDF
 47624                           postinc2	equ	0xFDE
 47625                           postdec2	equ	0xFDD
 47626                           plusw2	equ	0xFDB
 47627                           fsr2h	equ	0xFDA
 47628                           fsr2l	equ	0xFD9
 47629                           status	equ	0xFD8
 47630                           
 47631 ;; *************** function i2___llmod *****************
 47632 ;; Defined at:
 47633 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 47634 ;; Parameters:    Size  Location     Type
 47635 ;;  dividend        4   13[COMRAM] unsigned long 
 47636 ;;  divisor         4   17[COMRAM] unsigned long 
 47637 ;; Auto vars:     Size  Location     Type
 47638 ;;  __llmod         1   21[COMRAM] unsigned char 
 47639 ;; Return value:  Size  Location     Type
 47640 ;;                  4   13[COMRAM] unsigned long 
 47641 ;; Registers used:
 47642 ;;		wreg, status,2, status,0
 47643 ;; Tracked objects:
 47644 ;;		On entry : 0/0
 47645 ;;		On exit  : 0/0
 47646 ;;		Unchanged: 0/0
 47647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47648 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47651 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47652 ;;Total ram usage:        9 bytes
 47653 ;; Hardware stack levels used:    1
 47654 ;; This function calls:
 47655 ;;		Nothing
 47656 ;; This function is called by:
 47657 ;;		i2__doprnt
 47658 ;; This function uses a non-reentrant model
 47659 ;;
 47660                           
 47661                           	psect	text145
 47662  01A234                     __ptext145:
 47663                           	opt stack 0
 47664  01A234                     i2___llmod:
 47665                           	opt stack 14
 47666                           
 47667                           ;incstack = 0
 47668  01A234  5012               	movf	i2___llmod@divisor,w,c
 47669  01A236  1013               	iorwf	i2___llmod@divisor+1,w,c
 47670  01A238  1014               	iorwf	i2___llmod@divisor+2,w,c
 47671  01A23A  1015               	iorwf	i2___llmod@divisor+3,w,c
 47672  01A23C  B4D8               	btfsc	status,2,c
 47673  01A23E  D024               	goto	i2l2630
 47674  01A240  0E01               	movlw	1
 47675  01A242  6E16               	movwf	i2___llmod@counter,c
 47676  01A244  D006               	goto	i2l2625
 47677  01A246  90D8               	bcf	status,0,c
 47678  01A248  3612               	rlcf	i2___llmod@divisor,f,c
 47679  01A24A  3613               	rlcf	i2___llmod@divisor+1,f,c
 47680  01A24C  3614               	rlcf	i2___llmod@divisor+2,f,c
 47681  01A24E  3615               	rlcf	i2___llmod@divisor+3,f,c
 47682  01A250  2A16               	incf	i2___llmod@counter,f,c
 47683  01A252                     i2l2625:
 47684  01A252  AE15               	btfss	i2___llmod@divisor+3,7,c
 47685  01A254  D7F8               	goto	i2l2626
 47686  01A256                     i2u2110_40:
 47687  01A256  5012               	movf	i2___llmod@divisor,w,c
 47688  01A258  5C0E               	subwf	i2___llmod@dividend,w,c
 47689  01A25A  5013               	movf	i2___llmod@divisor+1,w,c
 47690  01A25C  580F               	subwfb	i2___llmod@dividend+1,w,c
 47691  01A25E  5014               	movf	i2___llmod@divisor+2,w,c
 47692  01A260  5810               	subwfb	i2___llmod@dividend+2,w,c
 47693  01A262  5015               	movf	i2___llmod@divisor+3,w,c
 47694  01A264  5811               	subwfb	i2___llmod@dividend+3,w,c
 47695  01A266  A0D8               	btfss	status,0,c
 47696  01A268  D008               	goto	i2l2629
 47697  01A26A  5012               	movf	i2___llmod@divisor,w,c
 47698  01A26C  5E0E               	subwf	i2___llmod@dividend,f,c
 47699  01A26E  5013               	movf	i2___llmod@divisor+1,w,c
 47700  01A270  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 47701  01A272  5014               	movf	i2___llmod@divisor+2,w,c
 47702  01A274  5A10               	subwfb	i2___llmod@dividend+2,f,c
 47703  01A276  5015               	movf	i2___llmod@divisor+3,w,c
 47704  01A278  5A11               	subwfb	i2___llmod@dividend+3,f,c
 47705  01A27A                     i2l2629:
 47706  01A27A  90D8               	bcf	status,0,c
 47707  01A27C  3215               	rrcf	i2___llmod@divisor+3,f,c
 47708  01A27E  3214               	rrcf	i2___llmod@divisor+2,f,c
 47709  01A280  3213               	rrcf	i2___llmod@divisor+1,f,c
 47710  01A282  3212               	rrcf	i2___llmod@divisor,f,c
 47711  01A284  2E16               	decfsz	i2___llmod@counter,f,c
 47712  01A286  D7E7               	goto	i2u2110_40
 47713  01A288                     i2l2630:
 47714  01A288  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 47715  01A28C  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 47716  01A290  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 47717  01A294  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 47718  01A298  0012               	return		;funcret
 47719  01A29A                     __end_ofi2___llmod:
 47720                           	opt stack 0
 47721                           tosu	equ	0xFFF
 47722                           tosh	equ	0xFFE
 47723                           tosl	equ	0xFFD
 47724                           pclatu	equ	0xFFB
 47725                           pclath	equ	0xFFA
 47726                           tblptru	equ	0xFF8
 47727                           tblptrh	equ	0xFF7
 47728                           tblptrl	equ	0xFF6
 47729                           tablat	equ	0xFF5
 47730                           prodh	equ	0xFF4
 47731                           prodl	equ	0xFF3
 47732                           intcon	equ	0xFF2
 47733                           indf0	equ	0xFEF
 47734                           postinc0	equ	0xFEE
 47735                           fsr0h	equ	0xFEA
 47736                           fsr0l	equ	0xFE9
 47737                           wreg	equ	0xFE8
 47738                           indf1	equ	0xFE7
 47739                           postdec1	equ	0xFE5
 47740                           plusw1	equ	0xFE3
 47741                           fsr1h	equ	0xFE2
 47742                           fsr1l	equ	0xFE1
 47743                           bsr	equ	0xFE0
 47744                           indf2	equ	0xFDF
 47745                           postinc2	equ	0xFDE
 47746                           postdec2	equ	0xFDD
 47747                           plusw2	equ	0xFDB
 47748                           fsr2h	equ	0xFDA
 47749                           fsr2l	equ	0xFD9
 47750                           status	equ	0xFD8
 47751                           
 47752 ;; *************** function i2___lldiv *****************
 47753 ;; Defined at:
 47754 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 47755 ;; Parameters:    Size  Location     Type
 47756 ;;  dividend        4    0[COMRAM] unsigned long 
 47757 ;;  divisor         4    4[COMRAM] unsigned long 
 47758 ;; Auto vars:     Size  Location     Type
 47759 ;;  __lldiv         4    8[COMRAM] unsigned long 
 47760 ;;  __lldiv         1   12[COMRAM] unsigned char 
 47761 ;; Return value:  Size  Location     Type
 47762 ;;                  4    0[COMRAM] unsigned long 
 47763 ;; Registers used:
 47764 ;;		wreg, status,2, status,0
 47765 ;; Tracked objects:
 47766 ;;		On entry : 0/0
 47767 ;;		On exit  : 0/0
 47768 ;;		Unchanged: 0/0
 47769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47770 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47771 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47773 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47774 ;;Total ram usage:       13 bytes
 47775 ;; Hardware stack levels used:    1
 47776 ;; This function calls:
 47777 ;;		Nothing
 47778 ;; This function is called by:
 47779 ;;		i2__doprnt
 47780 ;; This function uses a non-reentrant model
 47781 ;;
 47782                           
 47783                           	psect	text146
 47784  019CF2                     __ptext146:
 47785                           	opt stack 0
 47786  019CF2                     i2___lldiv:
 47787                           	opt stack 14
 47788                           
 47789                           ;incstack = 0
 47790  019CF2  0E00               	movlw	0
 47791  019CF4  6E09               	movwf	i2___lldiv@quotient,c
 47792  019CF6  0E00               	movlw	0
 47793  019CF8  6E0A               	movwf	i2___lldiv@quotient+1,c
 47794  019CFA  0E00               	movlw	0
 47795  019CFC  6E0B               	movwf	i2___lldiv@quotient+2,c
 47796  019CFE  0E00               	movlw	0
 47797  019D00  6E0C               	movwf	i2___lldiv@quotient+3,c
 47798  019D02  5005               	movf	i2___lldiv@divisor,w,c
 47799  019D04  1006               	iorwf	i2___lldiv@divisor+1,w,c
 47800  019D06  1007               	iorwf	i2___lldiv@divisor+2,w,c
 47801  019D08  1008               	iorwf	i2___lldiv@divisor+3,w,c
 47802  019D0A  B4D8               	btfsc	status,2,c
 47803  019D0C  D02A               	goto	i2l2620
 47804  019D0E  0E01               	movlw	1
 47805  019D10  6E0D               	movwf	i2___lldiv@counter,c
 47806  019D12  D006               	goto	i2l2615
 47807  019D14  90D8               	bcf	status,0,c
 47808  019D16  3605               	rlcf	i2___lldiv@divisor,f,c
 47809  019D18  3606               	rlcf	i2___lldiv@divisor+1,f,c
 47810  019D1A  3607               	rlcf	i2___lldiv@divisor+2,f,c
 47811  019D1C  3608               	rlcf	i2___lldiv@divisor+3,f,c
 47812  019D1E  2A0D               	incf	i2___lldiv@counter,f,c
 47813  019D20                     i2l2615:
 47814  019D20  AE08               	btfss	i2___lldiv@divisor+3,7,c
 47815  019D22  D7F8               	goto	i2l2616
 47816  019D24                     i2u2107_40:
 47817  019D24  90D8               	bcf	status,0,c
 47818  019D26  3609               	rlcf	i2___lldiv@quotient,f,c
 47819  019D28  360A               	rlcf	i2___lldiv@quotient+1,f,c
 47820  019D2A  360B               	rlcf	i2___lldiv@quotient+2,f,c
 47821  019D2C  360C               	rlcf	i2___lldiv@quotient+3,f,c
 47822  019D2E  5005               	movf	i2___lldiv@divisor,w,c
 47823  019D30  5C01               	subwf	i2___lldiv@dividend,w,c
 47824  019D32  5006               	movf	i2___lldiv@divisor+1,w,c
 47825  019D34  5802               	subwfb	i2___lldiv@dividend+1,w,c
 47826  019D36  5007               	movf	i2___lldiv@divisor+2,w,c
 47827  019D38  5803               	subwfb	i2___lldiv@dividend+2,w,c
 47828  019D3A  5008               	movf	i2___lldiv@divisor+3,w,c
 47829  019D3C  5804               	subwfb	i2___lldiv@dividend+3,w,c
 47830  019D3E  A0D8               	btfss	status,0,c
 47831  019D40  D009               	goto	i2l2619
 47832  019D42  5005               	movf	i2___lldiv@divisor,w,c
 47833  019D44  5E01               	subwf	i2___lldiv@dividend,f,c
 47834  019D46  5006               	movf	i2___lldiv@divisor+1,w,c
 47835  019D48  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 47836  019D4A  5007               	movf	i2___lldiv@divisor+2,w,c
 47837  019D4C  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 47838  019D4E  5008               	movf	i2___lldiv@divisor+3,w,c
 47839  019D50  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 47840  019D52  8009               	bsf	i2___lldiv@quotient,0,c
 47841  019D54                     i2l2619:
 47842  019D54  90D8               	bcf	status,0,c
 47843  019D56  3208               	rrcf	i2___lldiv@divisor+3,f,c
 47844  019D58  3207               	rrcf	i2___lldiv@divisor+2,f,c
 47845  019D5A  3206               	rrcf	i2___lldiv@divisor+1,f,c
 47846  019D5C  3205               	rrcf	i2___lldiv@divisor,f,c
 47847  019D5E  2E0D               	decfsz	i2___lldiv@counter,f,c
 47848  019D60  D7E1               	goto	i2u2107_40
 47849  019D62                     i2l2620:
 47850  019D62  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 47851  019D66  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 47852  019D6A  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 47853  019D6E  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 47854  019D72  0012               	return		;funcret
 47855  019D74                     __end_ofi2___lldiv:
 47856                           	opt stack 0
 47857                           tosu	equ	0xFFF
 47858                           tosh	equ	0xFFE
 47859                           tosl	equ	0xFFD
 47860                           pclatu	equ	0xFFB
 47861                           pclath	equ	0xFFA
 47862                           tblptru	equ	0xFF8
 47863                           tblptrh	equ	0xFF7
 47864                           tblptrl	equ	0xFF6
 47865                           tablat	equ	0xFF5
 47866                           prodh	equ	0xFF4
 47867                           prodl	equ	0xFF3
 47868                           intcon	equ	0xFF2
 47869                           indf0	equ	0xFEF
 47870                           postinc0	equ	0xFEE
 47871                           fsr0h	equ	0xFEA
 47872                           fsr0l	equ	0xFE9
 47873                           wreg	equ	0xFE8
 47874                           indf1	equ	0xFE7
 47875                           postdec1	equ	0xFE5
 47876                           plusw1	equ	0xFE3
 47877                           fsr1h	equ	0xFE2
 47878                           fsr1l	equ	0xFE1
 47879                           bsr	equ	0xFE0
 47880                           indf2	equ	0xFDF
 47881                           postinc2	equ	0xFDE
 47882                           postdec2	equ	0xFDD
 47883                           plusw2	equ	0xFDB
 47884                           fsr2h	equ	0xFDA
 47885                           fsr2l	equ	0xFD9
 47886                           status	equ	0xFD8
 47887                           
 47888 ;; *************** function _ADCC_ThresholdISR *****************
 47889 ;; Defined at:
 47890 ;;		line 301 in file "mcc_generated_files/adcc.c"
 47891 ;; Parameters:    Size  Location     Type
 47892 ;;		None
 47893 ;; Auto vars:     Size  Location     Type
 47894 ;;		None
 47895 ;; Return value:  Size  Location     Type
 47896 ;;                  1    wreg      void 
 47897 ;; Registers used:
 47898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47899 ;; Tracked objects:
 47900 ;;		On entry : 0/0
 47901 ;;		On exit  : 0/0
 47902 ;;		Unchanged: 0/0
 47903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47908 ;;Total ram usage:        0 bytes
 47909 ;; Hardware stack levels used:    1
 47910 ;; Hardware stack levels required when called:    7
 47911 ;; This function calls:
 47912 ;;		Absolute function
 47913 ;;		_ADCC_DefaultInterruptHandler
 47914 ;;		_ADCPostProcessingCallback
 47915 ;; This function is called by:
 47916 ;;		_INTERRUPT_InterruptManagerHigh
 47917 ;; This function uses a non-reentrant model
 47918 ;;
 47919                           
 47920                           	psect	text147
 47921  01AEC0                     __ptext147:
 47922                           	opt stack 0
 47923  01AEC0                     _ADCC_ThresholdISR:
 47924                           	opt stack 10
 47925                           
 47926                           ;adcc.c: 304: PIR1bits.ADTIF = 0;
 47927                           
 47928                           ;incstack = 0
 47929  01AEC0  010E               	movlb	14	; () banked
 47930  01AEC2  9334               	bcf	52,1,b	;volatile
 47931                           
 47932                           ; BSR set to: 14
 47933                           ;adcc.c: 306: if (ADCC_ADTI_InterruptHandler)
 47934  01AEC4  0102               	movlb	2	; () banked
 47935  01AEC6  5150               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 47936  01AEC8  1151               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 47937  01AECA  1152               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 47938  01AECC  B4D8               	btfsc	status,2,c
 47939  01AECE  0012               	return	
 47940                           
 47941                           ; BSR set to: 2
 47942                           ;adcc.c: 307: ADCC_ADTI_InterruptHandler();
 47943  01AED0  D801               	call	i2u3506_48
 47944  01AED2  0012               	return	
 47945  01AED4                     i2u3506_48:
 47946  01AED4  0005               	push	
 47947  01AED6  6EFA               	movwf	pclath,c
 47948  01AED8  5150               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 47949  01AEDA  6EFD               	movwf	tosl,c
 47950  01AEDC  5151               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 47951  01AEDE  6EFE               	movwf	tosh,c
 47952  01AEE0  5152               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 47953  01AEE2  6EFF               	movwf	tosu,c
 47954  01AEE4  50FA               	movf	pclath,w,c
 47955  01AEE6  0012               	return		;indir
 47956  01AEE8                     __end_of_ADCC_ThresholdISR:
 47957                           	opt stack 0
 47958                           tosu	equ	0xFFF
 47959                           tosh	equ	0xFFE
 47960                           tosl	equ	0xFFD
 47961                           pclatu	equ	0xFFB
 47962                           pclath	equ	0xFFA
 47963                           tblptru	equ	0xFF8
 47964                           tblptrh	equ	0xFF7
 47965                           tblptrl	equ	0xFF6
 47966                           tablat	equ	0xFF5
 47967                           prodh	equ	0xFF4
 47968                           prodl	equ	0xFF3
 47969                           intcon	equ	0xFF2
 47970                           indf0	equ	0xFEF
 47971                           postinc0	equ	0xFEE
 47972                           fsr0h	equ	0xFEA
 47973                           fsr0l	equ	0xFE9
 47974                           wreg	equ	0xFE8
 47975                           indf1	equ	0xFE7
 47976                           postdec1	equ	0xFE5
 47977                           plusw1	equ	0xFE3
 47978                           fsr1h	equ	0xFE2
 47979                           fsr1l	equ	0xFE1
 47980                           bsr	equ	0xFE0
 47981                           indf2	equ	0xFDF
 47982                           postinc2	equ	0xFDE
 47983                           postdec2	equ	0xFDD
 47984                           plusw2	equ	0xFDB
 47985                           fsr2h	equ	0xFDA
 47986                           fsr2l	equ	0xFD9
 47987                           status	equ	0xFD8
 47988                           
 47989 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 47990 ;; Defined at:
 47991 ;;		line 313 in file "mcc_generated_files/adcc.c"
 47992 ;; Parameters:    Size  Location     Type
 47993 ;;		None
 47994 ;; Auto vars:     Size  Location     Type
 47995 ;;		None
 47996 ;; Return value:  Size  Location     Type
 47997 ;;                  1    wreg      void 
 47998 ;; Registers used:
 47999 ;;		None
 48000 ;; Tracked objects:
 48001 ;;		On entry : 0/0
 48002 ;;		On exit  : 0/0
 48003 ;;		Unchanged: 0/0
 48004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 48005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48009 ;;Total ram usage:        0 bytes
 48010 ;; Hardware stack levels used:    1
 48011 ;; This function calls:
 48012 ;;		Nothing
 48013 ;; This function is called by:
 48014 ;;		_ADCC_Initialize
 48015 ;;		_ADCC_ThresholdISR
 48016 ;; This function uses a non-reentrant model
 48017 ;;
 48018                           
 48019                           	psect	text148
 48020  01B34C                     __ptext148:
 48021                           	opt stack 0
 48022  01B34C                     _ADCC_DefaultInterruptHandler:
 48023                           	opt stack 16
 48024                           
 48025                           ;incstack = 0
 48026  01B34C  0012               	return		;funcret
 48027  01B34E                     __end_of_ADCC_DefaultInterruptHandler:
 48028                           	opt stack 0
 48029                           tosu	equ	0xFFF
 48030                           tosh	equ	0xFFE
 48031                           tosl	equ	0xFFD
 48032                           pclatu	equ	0xFFB
 48033                           pclath	equ	0xFFA
 48034                           tblptru	equ	0xFF8
 48035                           tblptrh	equ	0xFF7
 48036                           tblptrl	equ	0xFF6
 48037                           tablat	equ	0xFF5
 48038                           prodh	equ	0xFF4
 48039                           prodl	equ	0xFF3
 48040                           intcon	equ	0xFF2
 48041                           indf0	equ	0xFEF
 48042                           postinc0	equ	0xFEE
 48043                           fsr0h	equ	0xFEA
 48044                           fsr0l	equ	0xFE9
 48045                           wreg	equ	0xFE8
 48046                           indf1	equ	0xFE7
 48047                           postdec1	equ	0xFE5
 48048                           plusw1	equ	0xFE3
 48049                           fsr1h	equ	0xFE2
 48050                           fsr1l	equ	0xFE1
 48051                           bsr	equ	0xFE0
 48052                           indf2	equ	0xFDF
 48053                           postinc2	equ	0xFDE
 48054                           postdec2	equ	0xFDD
 48055                           plusw2	equ	0xFDB
 48056                           fsr2h	equ	0xFDA
 48057                           fsr2l	equ	0xFD9
 48058                           status	equ	0xFD8
 48059                           
 48060 ;; *************** function _ADCPostProcessingCallback *****************
 48061 ;; Defined at:
 48062 ;;		line 231 in file "main.c"
 48063 ;; Parameters:    Size  Location     Type
 48064 ;;		None
 48065 ;; Auto vars:     Size  Location     Type
 48066 ;;  current_adc_    1  117[BANK0 ] enum E17572
 48067 ;; Return value:  Size  Location     Type
 48068 ;;                  1    wreg      void 
 48069 ;; Registers used:
 48070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48071 ;; Tracked objects:
 48072 ;;		On entry : 0/0
 48073 ;;		On exit  : 0/0
 48074 ;;		Unchanged: 0/0
 48075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 48076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48077 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48079 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48080 ;;Total ram usage:       21 bytes
 48081 ;; Hardware stack levels used:    1
 48082 ;; Hardware stack levels required when called:    6
 48083 ;; This function calls:
 48084 ;;		_ADCC_GetConversionResult
 48085 ;;		_ADCC_GetCurrentCountofConversions
 48086 ;;		_ADCC_GetFilterValue
 48087 ;;		_ADCC_HasAccumulatorOverflowed
 48088 ;;		_ADCC_StopConversion
 48089 ;;		_abs
 48090 ;;		_currentMeasuredToPeak
 48091 ;;		_peakToRMS
 48092 ;;		i2___fladd
 48093 ;;		i2___fldiv
 48094 ;;		i2___flge
 48095 ;;		i2___flmul
 48096 ;;		i2___flneg
 48097 ;;		i2___fltol
 48098 ;;		i2___xxtofl
 48099 ;; This function is called by:
 48100 ;;		_main
 48101 ;;		_ADCC_ThresholdISR
 48102 ;; This function uses a non-reentrant model
 48103 ;;
 48104                           
 48105                           	psect	text149
 48106  0140F0                     __ptext149:
 48107                           	opt stack 0
 48108  0140F0                     _ADCPostProcessingCallback:
 48109                           	opt stack 10
 48110                           
 48111                           ;main.c: 234: ADCC_StopConversion();
 48112                           
 48113                           ;incstack = 0
 48114  0140F0  EC9D  F0D9         	call	_ADCC_StopConversion	;wreg free
 48115                           
 48116                           ;main.c: 237: adcc_channel_t current_adc_channel = ADPCH;
 48117  0140F4  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 48118                           
 48119                           ;main.c: 240: switch (current_adc_channel) {
 48120  0140F8  EFB0  F0A5         	goto	i2l1190
 48121  0140FC                     
 48122                           ;main.c: 244: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 48123  0140FC  ECE9  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 48124  014100  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 48125  014104  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 48126  014108  6A07               	clrf	i2___xxtofl@val+2,c
 48127  01410A  6A08               	clrf	i2___xxtofl@val+3,c
 48128  01410C  0E00               	movlw	0
 48129  01410E  ECCA  F0C1         	call	i2___xxtofl
 48130  014112  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 48131  014116  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 48132  01411A  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 48133  01411E  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 48134  014122  0E0D               	movlw	13
 48135  014124  6E34               	movwf	i2___flmul@a,c
 48136  014126  0E68               	movlw	104
 48137  014128  6E35               	movwf	i2___flmul@a+1,c
 48138  01412A  0E53               	movlw	83
 48139  01412C  6E36               	movwf	i2___flmul@a+2,c
 48140  01412E  0E3B               	movlw	59
 48141  014130  6E37               	movwf	i2___flmul@a+3,c
 48142  014132  ECC9  F0AD         	call	i2___flmul	;wreg free
 48143  014136  C030  F240         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 48144  01413A  C031  F241         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 48145  01413E  C032  F242         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 48146  014142  C033  F243         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 48147                           
 48148                           ;main.c: 246: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 48149  014146  0E0A               	movlw	10
 48150  014148  6E34               	movwf	i2___flge@ff1,c
 48151  01414A  0ED7               	movlw	215
 48152  01414C  6E35               	movwf	i2___flge@ff1+1,c
 48153  01414E  0E23               	movlw	35
 48154  014150  6E36               	movwf	i2___flge@ff1+2,c
 48155  014152  0E3C               	movlw	60
 48156  014154  6E37               	movwf	i2___flge@ff1+3,c
 48157  014156  C240  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 48158  01415A  C241  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 48159  01415E  C242  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 48160  014162  C243  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 48161  014166  EC1F  F0C7         	call	i2___flge	;wreg free
 48162  01416A  A0D8               	btfss	status,0,c
 48163  01416C  D005               	goto	i2u2300_40
 48164  01416E  EC71  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48165  014172  0900               	iorlw	0
 48166  014174  B4D8               	btfsc	status,2,c
 48167  014176  D004               	goto	i2l1192
 48168  014178                     i2u2300_40:
 48169                           
 48170                           ;main.c: 248: error_handler.AVSS_ADC_error_flag = 1;
 48171  014178  0E01               	movlw	1
 48172  01417A  0102               	movlb	2	; () banked
 48173  01417C  6F03               	movwf	(_error_handler+3)& (0+255),b
 48174                           
 48175                           ; BSR set to: 2
 48176                           ;main.c: 249: return;
 48177  01417E  0012               	return	
 48178  014180                     i2l1192:
 48179                           
 48180                           ;main.c: 251: }
 48181                           ;main.c: 253: next_channel = channel_FVR_buf1;
 48182                           
 48183                           ; BSR set to: 2
 48184  014180  0E3F               	movlw	63
 48185  014182  EFA9  F0A5         	goto	L26
 48186  014186                     
 48187                           ;main.c: 260: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 48188                           
 48189                           ; BSR set to: 2
 48190  014186  0E0D               	movlw	13
 48191  014188  6E34               	movwf	i2___flmul@a,c
 48192  01418A  0E68               	movlw	104
 48193  01418C  6E35               	movwf	i2___flmul@a+1,c
 48194  01418E  0E53               	movlw	83
 48195  014190  6E36               	movwf	i2___flmul@a+2,c
 48196  014192  0E3B               	movlw	59
 48197  014194  6E37               	movwf	i2___flmul@a+3,c
 48198  014196  ECE9  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 48199  01419A  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 48200  01419E  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 48201  0141A2  6A07               	clrf	i2___xxtofl@val+2,c
 48202  0141A4  6A08               	clrf	i2___xxtofl@val+3,c
 48203  0141A6  0E00               	movlw	0
 48204  0141A8  ECCA  F0C1         	call	i2___xxtofl
 48205  0141AC  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 48206  0141B0  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 48207  0141B4  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 48208  0141B8  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 48209  0141BC  ECC9  F0AD         	call	i2___flmul	;wreg free
 48210  0141C0  C030  F056         	movff	?i2___flmul,i2___fladd@b
 48211  0141C4  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 48212  0141C8  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 48213  0141CC  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 48214  0141D0  C240  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 48215  0141D4  C241  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 48216  0141D8  C242  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 48217  0141DC  C243  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 48218  0141E0  EC10  F0B1         	call	i2___fladd	;wreg free
 48219  0141E4  C056  F1E2         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 48220  0141E8  C057  F1E3         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 48221  0141EC  C058  F1E4         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 48222  0141F0  C059  F1E5         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 48223                           
 48224                           ;main.c: 261: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 48225  0141F4  0E6F               	movlw	111
 48226  0141F6  6E13               	movwf	i2___fldiv@b,c
 48227  0141F8  0E12               	movlw	18
 48228  0141FA  6E14               	movwf	i2___fldiv@b+1,c
 48229  0141FC  0E03               	movlw	3
 48230  0141FE  6E15               	movwf	i2___fldiv@b+2,c
 48231  014200  0E40               	movlw	64
 48232  014202  6E16               	movwf	i2___fldiv@b+3,c
 48233  014204  C1E2  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 48234  014208  C1E3  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 48235  01420C  C1E4  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 48236  014210  C1E5  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 48237  014214  ECD0  F0B9         	call	i2___fldiv	;wreg free
 48238  014218  C013  F23C         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 48239  01421C  C014  F23D         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 48240  014220  C015  F23E         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 48241  014224  C016  F23F         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 48242                           
 48243                           ;main.c: 263: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 48244  014228  0E00               	movlw	0
 48245  01422A  6E34               	movwf	i2___flge@ff1,c
 48246  01422C  0E00               	movlw	0
 48247  01422E  6E35               	movwf	i2___flge@ff1+1,c
 48248  014230  0E20               	movlw	32
 48249  014232  6E36               	movwf	i2___flge@ff1+2,c
 48250  014234  0E40               	movlw	64
 48251  014236  6E37               	movwf	i2___flge@ff1+3,c
 48252  014238  C1E2  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 48253  01423C  C1E3  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 48254  014240  C1E4  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 48255  014244  C1E5  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 48256  014248  EC1F  F0C7         	call	i2___flge	;wreg free
 48257  01424C  A0D8               	btfss	status,0,c
 48258  01424E  D019               	goto	i2u2303_40
 48259  014250  C1E2  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 48260  014254  C1E3  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 48261  014258  C1E4  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 48262  01425C  C1E5  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 48263  014260  0E00               	movlw	0
 48264  014262  6E38               	movwf	i2___flge@ff2,c
 48265  014264  0E00               	movlw	0
 48266  014266  6E39               	movwf	i2___flge@ff2+1,c
 48267  014268  0E00               	movlw	0
 48268  01426A  6E3A               	movwf	i2___flge@ff2+2,c
 48269  01426C  0E40               	movlw	64
 48270  01426E  6E3B               	movwf	i2___flge@ff2+3,c
 48271  014270  EC1F  F0C7         	call	i2___flge	;wreg free
 48272  014274  A0D8               	btfss	status,0,c
 48273  014276  D005               	goto	i2u2303_40
 48274  014278  EC71  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48275  01427C  0900               	iorlw	0
 48276  01427E  B4D8               	btfsc	status,2,c
 48277  014280  D004               	goto	i2l1198
 48278  014282                     i2u2303_40:
 48279                           
 48280                           ;main.c: 265: error_handler.FVR_ADC_error_flag = 1;
 48281  014282  0E01               	movlw	1
 48282  014284  0102               	movlb	2	; () banked
 48283  014286  6F05               	movwf	(_error_handler+5)& (0+255),b
 48284                           
 48285                           ; BSR set to: 2
 48286                           ;main.c: 266: return;
 48287  014288  0012               	return	
 48288  01428A                     i2l1198:
 48289                           
 48290                           ;main.c: 268: }
 48291                           ;main.c: 270: next_channel = POS3P3_ADC;
 48292                           
 48293                           ; BSR set to: 2
 48294  01428A  0E22               	movlw	34
 48295  01428C  EFA9  F0A5         	goto	L26
 48296  014290                     
 48297                           ;main.c: 277: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 48298                           
 48299                           ; BSR set to: 2
 48300  014290  C23C  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 48301  014294  C23D  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 48302  014298  C23E  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 48303  01429C  C23F  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 48304  0142A0  ECDF  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 48305  0142A4  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 48306  0142A8  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 48307  0142AC  6A07               	clrf	i2___xxtofl@val+2,c
 48308  0142AE  6A08               	clrf	i2___xxtofl@val+3,c
 48309  0142B0  0E00               	movlw	0
 48310  0142B2  ECCA  F0C1         	call	i2___xxtofl
 48311  0142B6  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 48312  0142BA  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 48313  0142BE  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 48314  0142C2  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 48315  0142C6  ECC9  F0AD         	call	i2___flmul	;wreg free
 48316  0142CA  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5445
 48317  0142CE  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5445+1
 48318  0142D2  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5445+2
 48319  0142D6  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5445+3
 48320                           
 48321                           ;main.c: 277: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 48322  0142DA  C0D6  F030         	movff	_ADCPostProcessingCallback$5445,i2___flmul@b
 48323  0142DE  C0D7  F031         	movff	_ADCPostProcessingCallback$5445+1,i2___flmul@b+1
 48324  0142E2  C0D8  F032         	movff	_ADCPostProcessingCallback$5445+2,i2___flmul@b+2
 48325  0142E6  C0D9  F033         	movff	_ADCPostProcessingCallback$5445+3,i2___flmul@b+3
 48326  0142EA  0E0D               	movlw	13
 48327  0142EC  6E34               	movwf	i2___flmul@a,c
 48328  0142EE  0E68               	movlw	104
 48329  0142F0  6E35               	movwf	i2___flmul@a+1,c
 48330  0142F2  0ED3               	movlw	211
 48331  0142F4  6E36               	movwf	i2___flmul@a+2,c
 48332  0142F6  0E3B               	movlw	59
 48333  0142F8  6E37               	movwf	i2___flmul@a+3,c
 48334  0142FA  ECC9  F0AD         	call	i2___flmul	;wreg free
 48335  0142FE  C030  F1DA         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 48336  014302  C031  F1DB         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 48337  014306  C032  F1DC         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 48338  01430A  C033  F1DD         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 48339                           
 48340                           ;main.c: 279: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 48341  01430E  0E00               	movlw	0
 48342  014310  6E34               	movwf	i2___flge@ff1,c
 48343  014312  0E00               	movlw	0
 48344  014314  6E35               	movwf	i2___flge@ff1+1,c
 48345  014316  0E60               	movlw	96
 48346  014318  6E36               	movwf	i2___flge@ff1+2,c
 48347  01431A  0E40               	movlw	64
 48348  01431C  6E37               	movwf	i2___flge@ff1+3,c
 48349  01431E  C1DA  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 48350  014322  C1DB  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 48351  014326  C1DC  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 48352  01432A  C1DD  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 48353  01432E  EC1F  F0C7         	call	i2___flge	;wreg free
 48354  014332  A0D8               	btfss	status,0,c
 48355  014334  D005               	goto	i2u2305_40
 48356  014336  EC71  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48357  01433A  0900               	iorlw	0
 48358  01433C  B4D8               	btfsc	status,2,c
 48359  01433E  D004               	goto	i2l1202
 48360  014340                     i2u2305_40:
 48361                           
 48362                           ;main.c: 281: error_handler.POS3P3_ADC_error_flag = 1;
 48363  014340  0E01               	movlw	1
 48364  014342  0102               	movlb	2	; () banked
 48365  014344  6F02               	movwf	(_error_handler+2)& (0+255),b
 48366                           
 48367                           ; BSR set to: 2
 48368                           ;main.c: 282: return;
 48369  014346  0012               	return	
 48370  014348                     i2l1202:
 48371                           
 48372                           ;main.c: 284: }
 48373                           ;main.c: 286: next_channel = ISNS_ADC;
 48374                           
 48375                           ; BSR set to: 2
 48376  014348  0E00               	movlw	0
 48377  01434A  EFA9  F0A5         	goto	L26
 48378  01434E                     
 48379                           ;main.c: 293: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 48380                           
 48381                           ; BSR set to: 2
 48382  01434E  0E00               	movlw	0
 48383  014350  6E17               	movwf	i2___fldiv@a,c
 48384  014352  0EC0               	movlw	192
 48385  014354  6E18               	movwf	i2___fldiv@a+1,c
 48386  014356  0E7F               	movlw	127
 48387  014358  6E19               	movwf	i2___fldiv@a+2,c
 48388  01435A  0E44               	movlw	68
 48389  01435C  6E1A               	movwf	i2___fldiv@a+3,c
 48390  01435E  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 48391  014362  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 48392  014366  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 48393  01436A  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 48394  01436E  ECD0  F0B9         	call	i2___fldiv	;wreg free
 48395  014372  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 48396  014376  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 48397  01437A  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 48398  01437E  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 48399  014382  ECDF  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 48400  014386  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 48401  01438A  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 48402  01438E  6A07               	clrf	i2___xxtofl@val+2,c
 48403  014390  6A08               	clrf	i2___xxtofl@val+3,c
 48404  014392  0E00               	movlw	0
 48405  014394  ECCA  F0C1         	call	i2___xxtofl
 48406  014398  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 48407  01439C  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 48408  0143A0  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 48409  0143A4  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 48410  0143A8  ECC9  F0AD         	call	i2___flmul	;wreg free
 48411  0143AC  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5445
 48412  0143B0  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5445+1
 48413  0143B4  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5445+2
 48414  0143B8  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5445+3
 48415                           
 48416                           ;main.c: 293: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 48417  0143BC  C0D6  F030         	movff	_ADCPostProcessingCallback$5445,i2___flmul@b
 48418  0143C0  C0D7  F031         	movff	_ADCPostProcessingCallback$5445+1,i2___flmul@b+1
 48419  0143C4  C0D8  F032         	movff	_ADCPostProcessingCallback$5445+2,i2___flmul@b+2
 48420  0143C8  C0D9  F033         	movff	_ADCPostProcessingCallback$5445+3,i2___flmul@b+3
 48421  0143CC  0E35               	movlw	53
 48422  0143CE  6E34               	movwf	i2___flmul@a,c
 48423  0143D0  0E5E               	movlw	94
 48424  0143D2  6E35               	movwf	i2___flmul@a+1,c
 48425  0143D4  0EF2               	movlw	242
 48426  0143D6  6E36               	movwf	i2___flmul@a+2,c
 48427  0143D8  0E3F               	movlw	63
 48428  0143DA  6E37               	movwf	i2___flmul@a+3,c
 48429  0143DC  ECC9  F0AD         	call	i2___flmul	;wreg free
 48430  0143E0  C030  F234         	movff	?i2___flmul,_Imeas	;volatile
 48431  0143E4  C031  F235         	movff	?i2___flmul+1,_Imeas+1	;volatile
 48432  0143E8  C032  F236         	movff	?i2___flmul+2,_Imeas+2	;volatile
 48433  0143EC  C033  F237         	movff	?i2___flmul+3,_Imeas+3	;volatile
 48434                           
 48435                           ;main.c: 297: if (LATGbits.LATG0 != 1) {
 48436  0143F0  B07F               	btfsc	3967,0,c	;volatile
 48437  0143F2  D166               	goto	i2l1206
 48438                           
 48439                           ;main.c: 302: if (load_enable) {
 48440  0143F4  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 48441  0143F6  D0CD               	goto	i2l1207
 48442                           
 48443                           ;main.c: 305: if (dimming_period < 0x7FEE) {
 48444  0143F8  0EEE               	movlw	238
 48445  0143FA  0100               	movlb	0	; () banked
 48446  0143FC  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 48447  0143FE  0E7F               	movlw	127
 48448  014400  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 48449  014402  B0D8               	btfsc	status,0,c
 48450  014404  D052               	goto	i2l1208
 48451                           
 48452                           ; BSR set to: 0
 48453                           ;main.c: 307: Ipk = Imeas;
 48454  014406  C234  F1CE         	movff	_Imeas,_Ipk	;volatile
 48455  01440A  C235  F1CF         	movff	_Imeas+1,_Ipk+1	;volatile
 48456  01440E  C236  F1D0         	movff	_Imeas+2,_Ipk+2	;volatile
 48457  014412  C237  F1D1         	movff	_Imeas+3,_Ipk+3	;volatile
 48458                           
 48459                           ; BSR set to: 0
 48460                           ;main.c: 308: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 48461  014416  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 48462  01441A  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 48463  01441E  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 48464  014422  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 48465  014426  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 48466  01442A  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 48467  01442E  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 48468  014432  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 48469  014436  ECE0  F0BE         	call	_peakToRMS	;wreg free
 48470  01443A  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5446
 48471  01443E  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5446+1
 48472  014442  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5446+2
 48473  014446  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5446+3
 48474                           
 48475                           ;main.c: 308: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 48476  01444A  C2E9  F05A         	movff	_Irms_offset,i2___fladd@a
 48477  01444E  C2EA  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 48478  014452  C2EB  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 48479  014456  C2EC  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 48480  01445A  C0DA  F056         	movff	_ADCPostProcessingCallback$5446,i2___fladd@b
 48481  01445E  C0DB  F057         	movff	_ADCPostProcessingCallback$5446+1,i2___fladd@b+1
 48482  014462  C0DC  F058         	movff	_ADCPostProcessingCallback$5446+2,i2___fladd@b+2
 48483  014466  C0DD  F059         	movff	_ADCPostProcessingCallback$5446+3,i2___fladd@b+3
 48484  01446A  EC10  F0B1         	call	i2___fladd	;wreg free
 48485  01446E  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 48486  014472  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 48487  014476  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 48488  01447A  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 48489  01447E  ECAB  F0C9         	call	i2___fltol	;wreg free
 48490  014482  C06C  F076         	movff	?i2___fltol,abs@a
 48491  014486  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 48492  01448A  EC23  F0D7         	call	_abs	;wreg free
 48493  01448E  0100               	movlb	0	; () banked
 48494  014490  C076  F005         	movff	?_abs,i2___xxtofl@val
 48495  014494  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 48496  014498  0E00               	movlw	0
 48497  01449A  BE06               	btfsc	i2___xxtofl@val+1,7,c
 48498  01449C  0EFF               	movlw	-1
 48499  01449E  6E07               	movwf	i2___xxtofl@val+2,c
 48500  0144A0  6E08               	movwf	i2___xxtofl@val+3,c
 48501  0144A2  0E01               	movlw	1
 48502  0144A4  ECCA  F0C1         	call	i2___xxtofl
 48503  0144A8  D063               	goto	L24
 48504  0144AA                     i2l1208:
 48505                           
 48506                           ;main.c: 313: else {
 48507                           ;main.c: 315: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 48508  0144AA  C234  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 48509  0144AE  C235  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 48510  0144B2  C236  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 48511  0144B6  C237  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 48512  0144BA  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 48513  0144BE  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 48514  0144C2  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 48515  0144C6  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 48516  0144CA  ECBA  F0CE         	call	_currentMeasuredToPeak	;wreg free
 48517  0144CE  C099  F1CE         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 48518  0144D2  C09A  F1CF         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 48519  0144D6  C09B  F1D0         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 48520  0144DA  C09C  F1D1         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 48521                           
 48522                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 48523  0144DE  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 48524  0144E2  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 48525  0144E6  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 48526  0144EA  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 48527  0144EE  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 48528  0144F2  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 48529  0144F6  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 48530  0144FA  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 48531  0144FE  ECE0  F0BE         	call	_peakToRMS	;wreg free
 48532  014502  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5446
 48533  014506  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5446+1
 48534  01450A  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5446+2
 48535  01450E  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5446+3
 48536                           
 48537                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 48538  014512  C2E9  F05A         	movff	_Irms_offset,i2___fladd@a
 48539  014516  C2EA  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 48540  01451A  C2EB  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 48541  01451E  C2EC  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 48542  014522  C0DA  F056         	movff	_ADCPostProcessingCallback$5446,i2___fladd@b
 48543  014526  C0DB  F057         	movff	_ADCPostProcessingCallback$5446+1,i2___fladd@b+1
 48544  01452A  C0DC  F058         	movff	_ADCPostProcessingCallback$5446+2,i2___fladd@b+2
 48545  01452E  C0DD  F059         	movff	_ADCPostProcessingCallback$5446+3,i2___fladd@b+3
 48546  014532  EC10  F0B1         	call	i2___fladd	;wreg free
 48547  014536  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 48548  01453A  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 48549  01453E  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 48550  014542  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 48551  014546  ECAB  F0C9         	call	i2___fltol	;wreg free
 48552  01454A  C06C  F076         	movff	?i2___fltol,abs@a
 48553  01454E  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 48554  014552  EC23  F0D7         	call	_abs	;wreg free
 48555  014556  0100               	movlb	0	; () banked
 48556  014558  C076  F005         	movff	?_abs,i2___xxtofl@val
 48557  01455C  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 48558  014560  0E00               	movlw	0
 48559  014562  BE06               	btfsc	i2___xxtofl@val+1,7,c
 48560  014564  0EFF               	movlw	-1
 48561  014566  6E07               	movwf	i2___xxtofl@val+2,c
 48562  014568  6E08               	movwf	i2___xxtofl@val+3,c
 48563  01456A  0E01               	movlw	1
 48564  01456C  ECCA  F0C1         	call	i2___xxtofl
 48565  014570                     L24:
 48566  014570  C005  F1CA         	movff	?i2___xxtofl,_Irms	;volatile
 48567  014574  C006  F1CB         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 48568  014578  C007  F1CC         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 48569  01457C  C008  F1CD         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 48570                           
 48571                           ;main.c: 318: }
 48572                           ;main.c: 320: Vpk = Vpk_const;
 48573  014580  C2ED  F238         	movff	_Vpk_const,_Vpk	;volatile
 48574  014584  C2EE  F239         	movff	_Vpk_const+1,_Vpk+1	;volatile
 48575  014588  C2EF  F23A         	movff	_Vpk_const+2,_Vpk+2	;volatile
 48576  01458C  C2F0  F23B         	movff	_Vpk_const+3,_Vpk+3	;volatile
 48577                           
 48578                           ;main.c: 322: }
 48579  014590  D02C               	goto	i2l1210
 48580  014592                     i2l1207:
 48581                           
 48582                           ;main.c: 324: else {
 48583                           ;main.c: 326: Ipk = 0.0;
 48584  014592  0E00               	movlw	0
 48585  014594  0101               	movlb	1	; () banked
 48586  014596  6FCE               	movwf	_Ipk& (0+255),b	;volatile
 48587  014598  0E00               	movlw	0
 48588  01459A  6FCF               	movwf	(_Ipk+1)& (0+255),b	;volatile
 48589  01459C  0E00               	movlw	0
 48590  01459E  6FD0               	movwf	(_Ipk+2)& (0+255),b	;volatile
 48591  0145A0  0E00               	movlw	0
 48592  0145A2  6FD1               	movwf	(_Ipk+3)& (0+255),b	;volatile
 48593                           
 48594                           ;main.c: 327: Vpk = 0.0;
 48595  0145A4  0E00               	movlw	0
 48596  0145A6  0102               	movlb	2	; () banked
 48597  0145A8  6F38               	movwf	_Vpk& (0+255),b	;volatile
 48598  0145AA  0E00               	movlw	0
 48599  0145AC  6F39               	movwf	(_Vpk+1)& (0+255),b	;volatile
 48600  0145AE  0E00               	movlw	0
 48601  0145B0  6F3A               	movwf	(_Vpk+2)& (0+255),b	;volatile
 48602  0145B2  0E00               	movlw	0
 48603  0145B4  6F3B               	movwf	(_Vpk+3)& (0+255),b	;volatile
 48604                           
 48605                           ; BSR set to: 2
 48606                           ;main.c: 328: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 48607  0145B6  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 48608  0145BA  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 48609  0145BE  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 48610  0145C2  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 48611  0145C6  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 48612  0145CA  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 48613  0145CE  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 48614  0145D2  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 48615  0145D6  ECE0  F0BE         	call	_peakToRMS	;wreg free
 48616  0145DA  C0B1  F1CA         	movff	?_peakToRMS,_Irms	;volatile
 48617  0145DE  C0B2  F1CB         	movff	?_peakToRMS+1,_Irms+1	;volatile
 48618  0145E2  C0B3  F1CC         	movff	?_peakToRMS+2,_Irms+2	;volatile
 48619  0145E6  C0B4  F1CD         	movff	?_peakToRMS+3,_Irms+3	;volatile
 48620  0145EA                     i2l1210:
 48621                           
 48622                           ;main.c: 330: }
 48623                           ;main.c: 332: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 48624  0145EA  C238  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 48625  0145EE  C239  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 48626  0145F2  C23A  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 48627  0145F6  C23B  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 48628  0145FA  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 48629  0145FE  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 48630  014602  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 48631  014606  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 48632  01460A  ECE0  F0BE         	call	_peakToRMS	;wreg free
 48633  01460E  C0B1  F230         	movff	?_peakToRMS,_Vrms	;volatile
 48634  014612  C0B2  F231         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 48635  014616  C0B3  F232         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 48636  01461A  C0B4  F233         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 48637                           
 48638                           ;main.c: 333: Avg_Power = Vrms * Irms;
 48639  01461E  C230  F030         	movff	_Vrms,i2___flmul@b	;volatile
 48640  014622  C231  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 48641  014626  C232  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 48642  01462A  C233  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 48643  01462E  C1CA  F034         	movff	_Irms,i2___flmul@a	;volatile
 48644  014632  C1CB  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 48645  014636  C1CC  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 48646  01463A  C1CD  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 48647  01463E  ECC9  F0AD         	call	i2___flmul	;wreg free
 48648  014642  C030  F1C6         	movff	?i2___flmul,_Avg_Power	;volatile
 48649  014646  C031  F1C7         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 48650  01464A  C032  F1C8         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 48651  01464E  C033  F1C9         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 48652                           
 48653                           ;main.c: 334: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 48654  014652  0E00               	movlw	0
 48655  014654  6E17               	movwf	i2___fldiv@a,c
 48656  014656  0E00               	movlw	0
 48657  014658  6E18               	movwf	i2___fldiv@a+1,c
 48658  01465A  0E61               	movlw	97
 48659  01465C  6E19               	movwf	i2___fldiv@a+2,c
 48660  01465E  0E45               	movlw	69
 48661  014660  6E1A               	movwf	i2___fldiv@a+3,c
 48662  014662  0E29               	movlw	41
 48663  014664  6E34               	movwf	i2___flmul@a,c
 48664  014666  0E5C               	movlw	92
 48665  014668  6E35               	movwf	i2___flmul@a+1,c
 48666  01466A  0E8F               	movlw	143
 48667  01466C  6E36               	movwf	i2___flmul@a+2,c
 48668  01466E  0E3D               	movlw	61
 48669  014670  6E37               	movwf	i2___flmul@a+3,c
 48670  014672  C1C6  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 48671  014676  C1C7  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 48672  01467A  C1C8  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 48673  01467E  C1C9  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 48674  014682  ECC9  F0AD         	call	i2___flmul	;wreg free
 48675  014686  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 48676  01468A  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 48677  01468E  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 48678  014692  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 48679  014696  ECD0  F0B9         	call	i2___fldiv	;wreg free
 48680  01469A  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 48681  01469E  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 48682  0146A2  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 48683  0146A6  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 48684  0146AA  C0F6  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 48685  0146AE  C0F7  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 48686  0146B2  C0F8  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 48687  0146B6  C0F9  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 48688  0146BA  EC10  F0B1         	call	i2___fladd	;wreg free
 48689  0146BE  D0C5               	goto	L20
 48690  0146C0                     i2l1206:
 48691                           
 48692                           ;main.c: 339: else {
 48693                           ;main.c: 341: Ipk = Imeas;
 48694  0146C0  C234  F1CE         	movff	_Imeas,_Ipk	;volatile
 48695  0146C4  C235  F1CF         	movff	_Imeas+1,_Ipk+1	;volatile
 48696  0146C8  C236  F1D0         	movff	_Imeas+2,_Ipk+2	;volatile
 48697  0146CC  C237  F1D1         	movff	_Imeas+3,_Ipk+3	;volatile
 48698                           
 48699                           ;main.c: 342: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 48700  0146D0  0E00               	movlw	0
 48701  0146D2  0100               	movlb	0	; () banked
 48702  0146D4  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 48703  0146D6  0E00               	movlw	0
 48704  0146D8  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 48705  0146DA  0E00               	movlw	0
 48706  0146DC  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 48707  0146DE  0E00               	movlw	0
 48708  0146E0  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 48709  0146E2  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 48710  0146E6  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 48711  0146EA  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 48712  0146EE  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 48713  0146F2  ECE0  F0BE         	call	_peakToRMS	;wreg free
 48714  0146F6  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5446
 48715  0146FA  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5446+1
 48716  0146FE  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5446+2
 48717  014702  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5446+3
 48718                           
 48719                           ;main.c: 342: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 48720  014706  C2E9  F05A         	movff	_Irms_offset,i2___fladd@a
 48721  01470A  C2EA  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 48722  01470E  C2EB  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 48723  014712  C2EC  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 48724  014716  C0DA  F056         	movff	_ADCPostProcessingCallback$5446,i2___fladd@b
 48725  01471A  C0DB  F057         	movff	_ADCPostProcessingCallback$5446+1,i2___fladd@b+1
 48726  01471E  C0DC  F058         	movff	_ADCPostProcessingCallback$5446+2,i2___fladd@b+2
 48727  014722  C0DD  F059         	movff	_ADCPostProcessingCallback$5446+3,i2___fladd@b+3
 48728  014726  EC10  F0B1         	call	i2___fladd	;wreg free
 48729  01472A  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 48730  01472E  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 48731  014732  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 48732  014736  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 48733  01473A  ECAB  F0C9         	call	i2___fltol	;wreg free
 48734  01473E  C06C  F076         	movff	?i2___fltol,abs@a
 48735  014742  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 48736  014746  EC23  F0D7         	call	_abs	;wreg free
 48737  01474A  0100               	movlb	0	; () banked
 48738  01474C  C076  F005         	movff	?_abs,i2___xxtofl@val
 48739  014750  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 48740  014754  0E00               	movlw	0
 48741  014756  BE06               	btfsc	i2___xxtofl@val+1,7,c
 48742  014758  0EFF               	movlw	-1
 48743  01475A  6E07               	movwf	i2___xxtofl@val+2,c
 48744  01475C  6E08               	movwf	i2___xxtofl@val+3,c
 48745  01475E  0E01               	movlw	1
 48746  014760  ECCA  F0C1         	call	i2___xxtofl
 48747  014764  C005  F1CA         	movff	?i2___xxtofl,_Irms	;volatile
 48748  014768  C006  F1CB         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 48749  01476C  C007  F1CC         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 48750  014770  C008  F1CD         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 48751                           
 48752                           ;main.c: 343: Vrms = peakToRMS(Vpk_const, 0.0);
 48753  014774  C2ED  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 48754  014778  C2EE  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 48755  01477C  C2EF  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 48756  014780  C2F0  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 48757  014784  0E00               	movlw	0
 48758  014786  0100               	movlb	0	; () banked
 48759  014788  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 48760  01478A  0E00               	movlw	0
 48761  01478C  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 48762  01478E  0E00               	movlw	0
 48763  014790  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 48764  014792  0E00               	movlw	0
 48765  014794  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 48766  014796  ECE0  F0BE         	call	_peakToRMS	;wreg free
 48767  01479A  C0B1  F230         	movff	?_peakToRMS,_Vrms	;volatile
 48768  01479E  C0B2  F231         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 48769  0147A2  C0B3  F232         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 48770  0147A6  C0B4  F233         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 48771                           
 48772                           ;main.c: 344: Avg_Power = Vrms * Irms;
 48773  0147AA  C230  F030         	movff	_Vrms,i2___flmul@b	;volatile
 48774  0147AE  C231  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 48775  0147B2  C232  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 48776  0147B6  C233  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 48777  0147BA  C1CA  F034         	movff	_Irms,i2___flmul@a	;volatile
 48778  0147BE  C1CB  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 48779  0147C2  C1CC  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 48780  0147C6  C1CD  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 48781  0147CA  ECC9  F0AD         	call	i2___flmul	;wreg free
 48782  0147CE  C030  F1C6         	movff	?i2___flmul,_Avg_Power	;volatile
 48783  0147D2  C031  F1C7         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 48784  0147D6  C032  F1C8         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 48785  0147DA  C033  F1C9         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 48786                           
 48787                           ;main.c: 345: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 48788  0147DE  0E00               	movlw	0
 48789  0147E0  6E17               	movwf	i2___fldiv@a,c
 48790  0147E2  0E00               	movlw	0
 48791  0147E4  6E18               	movwf	i2___fldiv@a+1,c
 48792  0147E6  0E61               	movlw	97
 48793  0147E8  6E19               	movwf	i2___fldiv@a+2,c
 48794  0147EA  0E45               	movlw	69
 48795  0147EC  6E1A               	movwf	i2___fldiv@a+3,c
 48796  0147EE  0E29               	movlw	41
 48797  0147F0  6E34               	movwf	i2___flmul@a,c
 48798  0147F2  0E5C               	movlw	92
 48799  0147F4  6E35               	movwf	i2___flmul@a+1,c
 48800  0147F6  0E8F               	movlw	143
 48801  0147F8  6E36               	movwf	i2___flmul@a+2,c
 48802  0147FA  0E3D               	movlw	61
 48803  0147FC  6E37               	movwf	i2___flmul@a+3,c
 48804  0147FE  C1C6  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 48805  014802  C1C7  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 48806  014806  C1C8  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 48807  01480A  C1C9  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 48808  01480E  ECC9  F0AD         	call	i2___flmul	;wreg free
 48809  014812  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 48810  014816  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 48811  01481A  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 48812  01481E  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 48813  014822  ECD0  F0B9         	call	i2___fldiv	;wreg free
 48814  014826  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 48815  01482A  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 48816  01482E  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 48817  014832  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 48818  014836  C0F6  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 48819  01483A  C0F7  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 48820  01483E  C0F8  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 48821  014842  C0F9  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 48822  014846  EC10  F0B1         	call	i2___fladd	;wreg free
 48823  01484A                     L20:
 48824  01484A  C056  F0F6         	movff	?i2___fladd,_Total_Energy	;volatile
 48825  01484E  C057  F0F7         	movff	?i2___fladd+1,_Total_Energy+1	;volatile
 48826  014852  C058  F0F8         	movff	?i2___fladd+2,_Total_Energy+2	;volatile
 48827  014856  C059  F0F9         	movff	?i2___fladd+3,_Total_Energy+3	;volatile
 48828                           
 48829                           ;main.c: 347: }
 48830                           ;main.c: 349: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 48831  01485A  0E00               	movlw	0
 48832  01485C  6E34               	movwf	i2___flge@ff1,c
 48833  01485E  0E00               	movlw	0
 48834  014860  6E35               	movwf	i2___flge@ff1+1,c
 48835  014862  0EA0               	movlw	160
 48836  014864  6E36               	movwf	i2___flge@ff1+2,c
 48837  014866  0E40               	movlw	64
 48838  014868  6E37               	movwf	i2___flge@ff1+3,c
 48839  01486A  C1CA  F038         	movff	_Irms,i2___flge@ff2	;volatile
 48840  01486E  C1CB  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 48841  014872  C1CC  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 48842  014876  C1CD  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 48843  01487A  EC1F  F0C7         	call	i2___flge	;wreg free
 48844  01487E  A0D8               	btfss	status,0,c
 48845  014880  D005               	goto	i2u2310_40
 48846  014882  EC71  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48847  014886  0900               	iorlw	0
 48848  014888  B4D8               	btfsc	status,2,c
 48849  01488A  D004               	goto	i2l1212
 48850  01488C                     i2u2310_40:
 48851                           
 48852                           ;main.c: 351: error_handler.ISNS_ADC_error_flag = 1;
 48853  01488C  0E01               	movlw	1
 48854  01488E  0102               	movlb	2	; () banked
 48855  014890  6F00               	movwf	_error_handler& (0+255),b
 48856                           
 48857                           ; BSR set to: 2
 48858                           ;main.c: 352: return;
 48859  014892  0012               	return	
 48860  014894                     i2l1212:
 48861                           
 48862                           ;main.c: 354: }
 48863                           ;main.c: 356: next_channel = POS12_ADC;
 48864                           
 48865                           ; BSR set to: 2
 48866  014894  0E04               	movlw	4
 48867  014896  D15D               	goto	L26
 48868  014898                     
 48869                           ;main.c: 363: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 48870                           
 48871                           ; BSR set to: 2
 48872  014898  0E00               	movlw	0
 48873  01489A  6E17               	movwf	i2___fldiv@a,c
 48874  01489C  0EC0               	movlw	192
 48875  01489E  6E18               	movwf	i2___fldiv@a+1,c
 48876  0148A0  0E7F               	movlw	127
 48877  0148A2  6E19               	movwf	i2___fldiv@a+2,c
 48878  0148A4  0E44               	movlw	68
 48879  0148A6  6E1A               	movwf	i2___fldiv@a+3,c
 48880  0148A8  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 48881  0148AC  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 48882  0148B0  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 48883  0148B4  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 48884  0148B8  ECD0  F0B9         	call	i2___fldiv	;wreg free
 48885  0148BC  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 48886  0148C0  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 48887  0148C4  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 48888  0148C8  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 48889  0148CC  ECDF  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 48890  0148D0  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 48891  0148D4  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 48892  0148D8  6A07               	clrf	i2___xxtofl@val+2,c
 48893  0148DA  6A08               	clrf	i2___xxtofl@val+3,c
 48894  0148DC  0E00               	movlw	0
 48895  0148DE  ECCA  F0C1         	call	i2___xxtofl
 48896  0148E2  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 48897  0148E6  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 48898  0148EA  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 48899  0148EE  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 48900  0148F2  ECC9  F0AD         	call	i2___flmul	;wreg free
 48901  0148F6  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5445
 48902  0148FA  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5445+1
 48903  0148FE  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5445+2
 48904  014902  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5445+3
 48905                           
 48906                           ;main.c: 363: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 48907  014906  C0D6  F030         	movff	_ADCPostProcessingCallback$5445,i2___flmul@b
 48908  01490A  C0D7  F031         	movff	_ADCPostProcessingCallback$5445+1,i2___flmul@b+1
 48909  01490E  C0D8  F032         	movff	_ADCPostProcessingCallback$5445+2,i2___flmul@b+2
 48910  014912  C0D9  F033         	movff	_ADCPostProcessingCallback$5445+3,i2___flmul@b+3
 48911  014916  0E3E               	movlw	62
 48912  014918  6E34               	movwf	i2___flmul@a,c
 48913  01491A  0EF8               	movlw	248
 48914  01491C  6E35               	movwf	i2___flmul@a+1,c
 48915  01491E  0E80               	movlw	128
 48916  014920  6E36               	movwf	i2___flmul@a+2,c
 48917  014922  0E40               	movlw	64
 48918  014924  6E37               	movwf	i2___flmul@a+3,c
 48919  014926  ECC9  F0AD         	call	i2___flmul	;wreg free
 48920  01492A  C030  F1D6         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 48921  01492E  C031  F1D7         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 48922  014932  C032  F1D8         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 48923  014936  C033  F1D9         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 48924                           
 48925                           ;main.c: 365: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 48926  01493A  0E9A               	movlw	154
 48927  01493C  6E34               	movwf	i2___flge@ff1,c
 48928  01493E  0E99               	movlw	153
 48929  014940  6E35               	movwf	i2___flge@ff1+1,c
 48930  014942  0E59               	movlw	89
 48931  014944  6E36               	movwf	i2___flge@ff1+2,c
 48932  014946  0E41               	movlw	65
 48933  014948  6E37               	movwf	i2___flge@ff1+3,c
 48934  01494A  C1D6  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 48935  01494E  C1D7  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 48936  014952  C1D8  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 48937  014956  C1D9  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 48938  01495A  EC1F  F0C7         	call	i2___flge	;wreg free
 48939  01495E  A0D8               	btfss	status,0,c
 48940  014960  D005               	goto	i2u2312_40
 48941  014962  EC71  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48942  014966  0900               	iorlw	0
 48943  014968  B4D8               	btfsc	status,2,c
 48944  01496A  D004               	goto	i2l1216
 48945  01496C                     i2u2312_40:
 48946                           
 48947                           ;main.c: 367: error_handler.POS12_ADC_error_flag = 1;
 48948  01496C  0E01               	movlw	1
 48949  01496E  0102               	movlb	2	; () banked
 48950  014970  6F01               	movwf	(_error_handler+1)& (0+255),b
 48951                           
 48952                           ; BSR set to: 2
 48953                           ;main.c: 368: return;
 48954  014972  0012               	return	
 48955  014974                     i2l1216:
 48956                           
 48957                           ;main.c: 370: }
 48958                           ;main.c: 372: next_channel = channel_Temp;
 48959                           
 48960                           ; BSR set to: 2
 48961  014974  0E3D               	movlw	61
 48962  014976  D0ED               	goto	L26
 48963  014978                     
 48964                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48965                           
 48966                           ; BSR set to: 2
 48967  014978  0E00               	movlw	0
 48968  01497A  6E17               	movwf	i2___fldiv@a,c
 48969  01497C  0E00               	movlw	0
 48970  01497E  6E18               	movwf	i2___fldiv@a+1,c
 48971  014980  0E00               	movlw	0
 48972  014982  6E19               	movwf	i2___fldiv@a+2,c
 48973  014984  0E40               	movlw	64
 48974  014986  6E1A               	movwf	i2___fldiv@a+3,c
 48975  014988  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 48976  01498C  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 48977  014990  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 48978  014994  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 48979  014998  ECD0  F0B9         	call	i2___fldiv	;wreg free
 48980  01499C  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 48981  0149A0  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 48982  0149A4  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 48983  0149A8  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 48984  0149AC  0E00               	movlw	0
 48985  0149AE  6E5A               	movwf	i2___fladd@a,c
 48986  0149B0  0E00               	movlw	0
 48987  0149B2  6E5B               	movwf	i2___fladd@a+1,c
 48988  0149B4  0E80               	movlw	128
 48989  0149B6  6E5C               	movwf	i2___fladd@a+2,c
 48990  0149B8  0E3F               	movlw	63
 48991  0149BA  6E5D               	movwf	i2___fladd@a+3,c
 48992  0149BC  0E00               	movlw	0
 48993  0149BE  6E17               	movwf	i2___fldiv@a,c
 48994  0149C0  0EC0               	movlw	192
 48995  0149C2  6E18               	movwf	i2___fldiv@a+1,c
 48996  0149C4  0E7F               	movlw	127
 48997  0149C6  6E19               	movwf	i2___fldiv@a+2,c
 48998  0149C8  0E44               	movlw	68
 48999  0149CA  6E1A               	movwf	i2___fldiv@a+3,c
 49000  0149CC  ECE9  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 49001  0149D0  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 49002  0149D4  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 49003  0149D8  6A07               	clrf	i2___xxtofl@val+2,c
 49004  0149DA  6A08               	clrf	i2___xxtofl@val+3,c
 49005  0149DC  0E00               	movlw	0
 49006  0149DE  ECCA  F0C1         	call	i2___xxtofl
 49007  0149E2  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 49008  0149E6  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 49009  0149EA  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 49010  0149EE  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 49011  0149F2  ECD0  F0B9         	call	i2___fldiv	;wreg free
 49012  0149F6  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 49013  0149FA  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 49014  0149FE  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 49015  014A02  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 49016  014A06  EC0C  F0D7         	call	i2___flneg	;wreg free
 49017  014A0A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49018  014A0E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49019  014A12  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49020  014A16  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49021  014A1A  EC10  F0B1         	call	i2___fladd	;wreg free
 49022  014A1E  C056  F030         	movff	?i2___fladd,i2___flmul@b
 49023  014A22  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 49024  014A26  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 49025  014A2A  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 49026  014A2E  ECC9  F0AD         	call	i2___flmul	;wreg free
 49027  014A32  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$5447
 49028  014A36  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5447+1
 49029  014A3A  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5447+2
 49030  014A3E  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5447+3
 49031                           
 49032                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 49033  014A42  0EDA               	movlw	218
 49034  014A44  6E17               	movwf	i2___fldiv@a,c
 49035  014A46  0E03               	movlw	3
 49036  014A48  6E18               	movwf	i2___fldiv@a+1,c
 49037  014A4A  0EAD               	movlw	173
 49038  014A4C  6E19               	movwf	i2___fldiv@a+2,c
 49039  014A4E  0E3A               	movlw	58
 49040  014A50  6E1A               	movwf	i2___fldiv@a+3,c
 49041  014A52  0E39               	movlw	57
 49042  014A54  6E5A               	movwf	i2___fladd@a,c
 49043  014A56  0EB4               	movlw	180
 49044  014A58  6E5B               	movwf	i2___fladd@a+1,c
 49045  014A5A  0E28               	movlw	40
 49046  014A5C  6E5C               	movwf	i2___fladd@a+2,c
 49047  014A5E  0E3F               	movlw	63
 49048  014A60  6E5D               	movwf	i2___fladd@a+3,c
 49049  014A62  C0C9  F02C         	movff	_ADCPostProcessingCallback$5447,i2___flneg@f1
 49050  014A66  C0CA  F02D         	movff	_ADCPostProcessingCallback$5447+1,i2___flneg@f1+1
 49051  014A6A  C0CB  F02E         	movff	_ADCPostProcessingCallback$5447+2,i2___flneg@f1+2
 49052  014A6E  C0CC  F02F         	movff	_ADCPostProcessingCallback$5447+3,i2___flneg@f1+3
 49053  014A72  EC0C  F0D7         	call	i2___flneg	;wreg free
 49054  014A76  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49055  014A7A  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49056  014A7E  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49057  014A82  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49058  014A86  EC10  F0B1         	call	i2___fladd	;wreg free
 49059  014A8A  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 49060  014A8E  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 49061  014A92  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 49062  014A96  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 49063  014A9A  ECD0  F0B9         	call	i2___fldiv	;wreg free
 49064  014A9E  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$5448
 49065  014AA2  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$5448+1
 49066  014AA6  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$5448+2
 49067  014AAA  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$5448+3
 49068                           
 49069                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 49070  014AAE  C2F1  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 49071  014AB2  C2F2  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 49072  014AB6  C2F3  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 49073  014ABA  C2F4  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 49074  014ABE  C0CD  F056         	movff	_ADCPostProcessingCallback$5448,i2___fladd@b
 49075  014AC2  C0CE  F057         	movff	_ADCPostProcessingCallback$5448+1,i2___fladd@b+1
 49076  014AC6  C0CF  F058         	movff	_ADCPostProcessingCallback$5448+2,i2___fladd@b+2
 49077  014ACA  C0D0  F059         	movff	_ADCPostProcessingCallback$5448+3,i2___fladd@b+3
 49078  014ACE  EC10  F0B1         	call	i2___fladd	;wreg free
 49079  014AD2  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$5449
 49080  014AD6  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$5449+1
 49081  014ADA  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$5449+2
 49082  014ADE  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$5449+3
 49083                           
 49084                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 49085  014AE2  C0D1  F056         	movff	_ADCPostProcessingCallback$5449,i2___fladd@b
 49086  014AE6  C0D2  F057         	movff	_ADCPostProcessingCallback$5449+1,i2___fladd@b+1
 49087  014AEA  C0D3  F058         	movff	_ADCPostProcessingCallback$5449+2,i2___fladd@b+2
 49088  014AEE  C0D4  F059         	movff	_ADCPostProcessingCallback$5449+3,i2___fladd@b+3
 49089  014AF2  0E00               	movlw	0
 49090  014AF4  6E5A               	movwf	i2___fladd@a,c
 49091  014AF6  0E00               	movlw	0
 49092  014AF8  6E5B               	movwf	i2___fladd@a+1,c
 49093  014AFA  0E20               	movlw	32
 49094  014AFC  6E5C               	movwf	i2___fladd@a+2,c
 49095  014AFE  0EC2               	movlw	194
 49096  014B00  6E5D               	movwf	i2___fladd@a+3,c
 49097  014B02  EC10  F0B1         	call	i2___fladd	;wreg free
 49098  014B06  C056  F1D2         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 49099  014B0A  C057  F1D3         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 49100  014B0E  C058  F1D4         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 49101  014B12  C059  F1D5         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 49102                           
 49103                           ;main.c: 381: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 49104  014B16  0E00               	movlw	0
 49105  014B18  6E34               	movwf	i2___flge@ff1,c
 49106  014B1A  0E00               	movlw	0
 49107  014B1C  6E35               	movwf	i2___flge@ff1+1,c
 49108  014B1E  0E20               	movlw	32
 49109  014B20  6E36               	movwf	i2___flge@ff1+2,c
 49110  014B22  0E42               	movlw	66
 49111  014B24  6E37               	movwf	i2___flge@ff1+3,c
 49112  014B26  C1D2  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 49113  014B2A  C1D3  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 49114  014B2E  C1D4  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 49115  014B32  C1D5  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 49116  014B36  EC1F  F0C7         	call	i2___flge	;wreg free
 49117  014B3A  A0D8               	btfss	status,0,c
 49118  014B3C  D005               	goto	i2u2314_40
 49119  014B3E  EC71  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 49120  014B42  0900               	iorlw	0
 49121  014B44  B4D8               	btfsc	status,2,c
 49122  014B46  D004               	goto	i2l1220
 49123  014B48                     i2u2314_40:
 49124                           
 49125                           ;main.c: 383: error_handler.Temp_ADC_error_flag = 1;
 49126  014B48  0E01               	movlw	1
 49127  014B4A  0102               	movlb	2	; () banked
 49128  014B4C  6F04               	movwf	(_error_handler+4)& (0+255),b
 49129                           
 49130                           ; BSR set to: 2
 49131                           ;main.c: 384: return;
 49132  014B4E  0012               	return	
 49133  014B50                     i2l1220:
 49134                           
 49135                           ;main.c: 386: }
 49136                           ;main.c: 388: next_channel = channel_VSS;
 49137                           
 49138                           ; BSR set to: 2
 49139  014B50  0E3C               	movlw	60
 49140  014B52                     L26:
 49141  014B52  0102               	movlb	2	; () banked
 49142  014B54  6FF5               	movwf	_next_channel& (0+255),b
 49143                           
 49144                           ;main.c: 390: break;
 49145  014B56  D01D               	goto	i2l1196
 49146  014B58                     
 49147                           ;main.c: 395: error_handler.ADC_general_error_flag = 1;
 49148                           
 49149                           ; BSR set to: 2
 49150  014B58  0E01               	movlw	1
 49151  014B5A  0102               	movlb	2	; () banked
 49152  014B5C  6F06               	movwf	(_error_handler+6)& (0+255),b
 49153                           
 49154                           ; BSR set to: 2
 49155                           ;main.c: 398: }
 49156                           
 49157                           ;main.c: 396: break;
 49158  014B5E  D019               	goto	i2l1196
 49159  014B60                     i2l1190:
 49160                           
 49161                           ; BSR set to: 2
 49162  014B60  0100               	movlb	0	; () banked
 49163  014B62  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 49164                           
 49165                           ; Switch size 1, requested type "space"
 49166                           ; Number of cases is 6, Range of values is 0 to 63
 49167                           ; switch strategies available:
 49168                           ; Name         Instructions Cycles
 49169                           ; simple_byte           19    10 (average)
 49170                           ;	Chosen strategy is simple_byte
 49171  014B64  0A00               	xorlw	0	; case 0
 49172  014B66  B4D8               	btfsc	status,2,c
 49173  014B68  EFA7  F0A1         	goto	i2l1205
 49174  014B6C  0A04               	xorlw	4	; case 4
 49175  014B6E  B4D8               	btfsc	status,2,c
 49176  014B70  D693               	goto	i2l1215
 49177  014B72  0A26               	xorlw	38	; case 34
 49178  014B74  B4D8               	btfsc	status,2,c
 49179  014B76  EF48  F0A1         	goto	i2l1201
 49180  014B7A  0A1E               	xorlw	30	; case 60
 49181  014B7C  B4D8               	btfsc	status,2,c
 49182  014B7E  EF7E  F0A0         	goto	i2l1191
 49183  014B82  0A01               	xorlw	1	; case 61
 49184  014B84  B4D8               	btfsc	status,2,c
 49185  014B86  D6F8               	goto	i2l1219
 49186  014B88  0A02               	xorlw	2	; case 63
 49187  014B8A  B4D8               	btfsc	status,2,c
 49188  014B8C  EFC3  F0A0         	goto	i2l1197
 49189  014B90  D7E3               	goto	i2l1223
 49190  014B92                     i2l1196:
 49191                           
 49192                           ;main.c: 400: if (ADCC_GetCurrentCountofConversions() != 255) {
 49193                           
 49194                           ; BSR set to: 0
 49195  014B92  EC9F  F0D9         	call	_ADCC_GetCurrentCountofConversions	;wreg free
 49196  014B96  0AFF               	xorlw	255
 49197  014B98  B4D8               	btfsc	status,2,c
 49198  014B9A  D003               	goto	i2l1224
 49199                           
 49200                           ;main.c: 401: error_handler.ADC_general_error_flag = 1;
 49201  014B9C  0E01               	movlw	1
 49202  014B9E  0102               	movlb	2	; () banked
 49203  014BA0  6F06               	movwf	(_error_handler+6)& (0+255),b
 49204  014BA2                     i2l1224:
 49205                           
 49206                           ;main.c: 402: }
 49207                           ;main.c: 404: if (ADCC_HasAccumulatorOverflowed()) {
 49208                           
 49209                           ; BSR set to: 2
 49210  014BA2  EC71  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 49211  014BA6  0900               	iorlw	0
 49212  014BA8  B4D8               	btfsc	status,2,c
 49213  014BAA  0012               	return	
 49214                           
 49215                           ;main.c: 405: error_handler.ADC_general_error_flag = 1;
 49216  014BAC  0E01               	movlw	1
 49217  014BAE  0102               	movlb	2	; () banked
 49218  014BB0  6F06               	movwf	(_error_handler+6)& (0+255),b
 49219  014BB2  0012               	return	
 49220  014BB4                     __end_of_ADCPostProcessingCallback:
 49221                           	opt stack 0
 49222                           tosu	equ	0xFFF
 49223                           tosh	equ	0xFFE
 49224                           tosl	equ	0xFFD
 49225                           pclatu	equ	0xFFB
 49226                           pclath	equ	0xFFA
 49227                           tblptru	equ	0xFF8
 49228                           tblptrh	equ	0xFF7
 49229                           tblptrl	equ	0xFF6
 49230                           tablat	equ	0xFF5
 49231                           prodh	equ	0xFF4
 49232                           prodl	equ	0xFF3
 49233                           intcon	equ	0xFF2
 49234                           indf0	equ	0xFEF
 49235                           postinc0	equ	0xFEE
 49236                           fsr0h	equ	0xFEA
 49237                           fsr0l	equ	0xFE9
 49238                           wreg	equ	0xFE8
 49239                           indf1	equ	0xFE7
 49240                           postdec1	equ	0xFE5
 49241                           plusw1	equ	0xFE3
 49242                           fsr1h	equ	0xFE2
 49243                           fsr1l	equ	0xFE1
 49244                           bsr	equ	0xFE0
 49245                           indf2	equ	0xFDF
 49246                           postinc2	equ	0xFDE
 49247                           postdec2	equ	0xFDD
 49248                           plusw2	equ	0xFDB
 49249                           fsr2h	equ	0xFDA
 49250                           fsr2l	equ	0xFD9
 49251                           status	equ	0xFD8
 49252                           
 49253 ;; *************** function _peakToRMS *****************
 49254 ;; Defined at:
 49255 ;;		line 125 in file "main.c"
 49256 ;; Parameters:    Size  Location     Type
 49257 ;;  Peak            4   81[BANK0 ] void 
 49258 ;;  Angle           4   85[BANK0 ] void 
 49259 ;; Auto vars:     Size  Location     Type
 49260 ;;  RMS             4  101[BANK0 ] void 
 49261 ;; Return value:  Size  Location     Type
 49262 ;;                  4   81[BANK0 ] void 
 49263 ;; Registers used:
 49264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49265 ;; Tracked objects:
 49266 ;;		On entry : 0/0
 49267 ;;		On exit  : 0/0
 49268 ;;		Unchanged: 0/0
 49269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49270 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49271 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49273 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49274 ;;Total ram usage:       24 bytes
 49275 ;; Hardware stack levels used:    1
 49276 ;; Hardware stack levels required when called:    5
 49277 ;; This function calls:
 49278 ;;		_acos
 49279 ;;		_sin
 49280 ;;		_sqrt
 49281 ;;		i2___fladd
 49282 ;;		i2___fldiv
 49283 ;;		i2___flmul
 49284 ;;		i2___flneg
 49285 ;; This function is called by:
 49286 ;;		_ADCPostProcessingCallback
 49287 ;; This function uses a non-reentrant model
 49288 ;;
 49289                           
 49290                           	psect	text150
 49291  017DC0                     __ptext150:
 49292                           	opt stack 0
 49293  017DC0                     _peakToRMS:
 49294                           	opt stack 10
 49295                           
 49296                           ;main.c: 128: double RMS = 0.0;
 49297                           
 49298                           ;incstack = 0
 49299  017DC0  0E00               	movlw	0
 49300  017DC2  0100               	movlb	0	; () banked
 49301  017DC4  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 49302  017DC6  0E00               	movlw	0
 49303  017DC8  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 49304  017DCA  0E00               	movlw	0
 49305  017DCC  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 49306  017DCE  0E00               	movlw	0
 49307  017DD0  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 49308                           
 49309                           ; BSR set to: 0
 49310                           ;main.c: 131: RMS = 2.0 * acos(-1.0);
 49311  017DD2  0E00               	movlw	0
 49312  017DD4  6FA9               	movwf	acos@x& (0+255),b
 49313  017DD6  0E00               	movlw	0
 49314  017DD8  6FAA               	movwf	(acos@x+1)& (0+255),b
 49315  017DDA  0E80               	movlw	128
 49316  017DDC  6FAB               	movwf	(acos@x+2)& (0+255),b
 49317  017DDE  0EBF               	movlw	191
 49318  017DE0  6FAC               	movwf	(acos@x+3)& (0+255),b
 49319  017DE2  ECDD  F0CF         	call	_acos	;wreg free
 49320  017DE6  C0A9  F0C1         	movff	?_acos,_peakToRMS$5442
 49321  017DEA  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$5442+1
 49322  017DEE  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$5442+2
 49323  017DF2  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$5442+3
 49324                           
 49325                           ;main.c: 131: RMS = 2.0 * acos(-1.0);
 49326  017DF6  C0C1  F030         	movff	_peakToRMS$5442,i2___flmul@b
 49327  017DFA  C0C2  F031         	movff	_peakToRMS$5442+1,i2___flmul@b+1
 49328  017DFE  C0C3  F032         	movff	_peakToRMS$5442+2,i2___flmul@b+2
 49329  017E02  C0C4  F033         	movff	_peakToRMS$5442+3,i2___flmul@b+3
 49330  017E06  0E00               	movlw	0
 49331  017E08  6E34               	movwf	i2___flmul@a,c
 49332  017E0A  0E00               	movlw	0
 49333  017E0C  6E35               	movwf	i2___flmul@a+1,c
 49334  017E0E  0E00               	movlw	0
 49335  017E10  6E36               	movwf	i2___flmul@a+2,c
 49336  017E12  0E40               	movlw	64
 49337  017E14  6E37               	movwf	i2___flmul@a+3,c
 49338  017E16  ECC9  F0AD         	call	i2___flmul	;wreg free
 49339  017E1A  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 49340  017E1E  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 49341  017E22  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 49342  017E26  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 49343                           
 49344                           ;main.c: 132: RMS = RMS - (2.0 * Angle);
 49345  017E2A  0E00               	movlw	0
 49346  017E2C  6E34               	movwf	i2___flmul@a,c
 49347  017E2E  0E00               	movlw	0
 49348  017E30  6E35               	movwf	i2___flmul@a+1,c
 49349  017E32  0E00               	movlw	0
 49350  017E34  6E36               	movwf	i2___flmul@a+2,c
 49351  017E36  0E40               	movlw	64
 49352  017E38  6E37               	movwf	i2___flmul@a+3,c
 49353  017E3A  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 49354  017E3E  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 49355  017E42  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 49356  017E46  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 49357  017E4A  ECC9  F0AD         	call	i2___flmul	;wreg free
 49358  017E4E  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 49359  017E52  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 49360  017E56  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 49361  017E5A  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 49362  017E5E  EC0C  F0D7         	call	i2___flneg	;wreg free
 49363  017E62  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49364  017E66  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49365  017E6A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49366  017E6E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49367  017E72  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 49368  017E76  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 49369  017E7A  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 49370  017E7E  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 49371  017E82  EC10  F0B1         	call	i2___fladd	;wreg free
 49372  017E86  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 49373  017E8A  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 49374  017E8E  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 49375  017E92  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 49376                           
 49377                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 49378  017E96  0E00               	movlw	0
 49379  017E98  6E34               	movwf	i2___flmul@a,c
 49380  017E9A  0E00               	movlw	0
 49381  017E9C  6E35               	movwf	i2___flmul@a+1,c
 49382  017E9E  0E00               	movlw	0
 49383  017EA0  6E36               	movwf	i2___flmul@a+2,c
 49384  017EA2  0E40               	movlw	64
 49385  017EA4  6E37               	movwf	i2___flmul@a+3,c
 49386  017EA6  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 49387  017EAA  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 49388  017EAE  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 49389  017EB2  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 49390  017EB6  ECC9  F0AD         	call	i2___flmul	;wreg free
 49391  017EBA  C030  F0B9         	movff	?i2___flmul,_peakToRMS$5443
 49392  017EBE  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$5443+1
 49393  017EC2  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$5443+2
 49394  017EC6  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$5443+3
 49395                           
 49396                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 49397  017ECA  C0B9  F088         	movff	_peakToRMS$5443,sin@f
 49398  017ECE  C0BA  F089         	movff	_peakToRMS$5443+1,sin@f+1
 49399  017ED2  C0BB  F08A         	movff	_peakToRMS$5443+2,sin@f+2
 49400  017ED6  C0BC  F08B         	movff	_peakToRMS$5443+3,sin@f+3
 49401  017EDA  EC31  F0B4         	call	_sin	;wreg free
 49402  017EDE  C088  F0BD         	movff	?_sin,_peakToRMS$5444
 49403  017EE2  C089  F0BE         	movff	?_sin+1,_peakToRMS$5444+1
 49404  017EE6  C08A  F0BF         	movff	?_sin+2,_peakToRMS$5444+2
 49405  017EEA  C08B  F0C0         	movff	?_sin+3,_peakToRMS$5444+3
 49406                           
 49407                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 49408  017EEE  C0BD  F056         	movff	_peakToRMS$5444,i2___fladd@b
 49409  017EF2  C0BE  F057         	movff	_peakToRMS$5444+1,i2___fladd@b+1
 49410  017EF6  C0BF  F058         	movff	_peakToRMS$5444+2,i2___fladd@b+2
 49411  017EFA  C0C0  F059         	movff	_peakToRMS$5444+3,i2___fladd@b+3
 49412  017EFE  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 49413  017F02  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 49414  017F06  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 49415  017F0A  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 49416  017F0E  EC10  F0B1         	call	i2___fladd	;wreg free
 49417  017F12  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 49418  017F16  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 49419  017F1A  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 49420  017F1E  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 49421                           
 49422                           ;main.c: 134: RMS = RMS / (4.0 * acos(-1.0));
 49423  017F22  0E00               	movlw	0
 49424  017F24  0100               	movlb	0	; () banked
 49425  017F26  6FA9               	movwf	acos@x& (0+255),b
 49426  017F28  0E00               	movlw	0
 49427  017F2A  6FAA               	movwf	(acos@x+1)& (0+255),b
 49428  017F2C  0E80               	movlw	128
 49429  017F2E  6FAB               	movwf	(acos@x+2)& (0+255),b
 49430  017F30  0EBF               	movlw	191
 49431  017F32  6FAC               	movwf	(acos@x+3)& (0+255),b
 49432  017F34  ECDD  F0CF         	call	_acos	;wreg free
 49433  017F38  C0A9  F0C1         	movff	?_acos,_peakToRMS$5442
 49434  017F3C  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$5442+1
 49435  017F40  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$5442+2
 49436  017F44  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$5442+3
 49437                           
 49438                           ;main.c: 134: RMS = RMS / (4.0 * acos(-1.0));
 49439  017F48  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 49440  017F4C  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 49441  017F50  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 49442  017F54  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 49443  017F58  0E00               	movlw	0
 49444  017F5A  6E34               	movwf	i2___flmul@a,c
 49445  017F5C  0E00               	movlw	0
 49446  017F5E  6E35               	movwf	i2___flmul@a+1,c
 49447  017F60  0E80               	movlw	128
 49448  017F62  6E36               	movwf	i2___flmul@a+2,c
 49449  017F64  0E40               	movlw	64
 49450  017F66  6E37               	movwf	i2___flmul@a+3,c
 49451  017F68  C0C1  F030         	movff	_peakToRMS$5442,i2___flmul@b
 49452  017F6C  C0C2  F031         	movff	_peakToRMS$5442+1,i2___flmul@b+1
 49453  017F70  C0C3  F032         	movff	_peakToRMS$5442+2,i2___flmul@b+2
 49454  017F74  C0C4  F033         	movff	_peakToRMS$5442+3,i2___flmul@b+3
 49455  017F78  ECC9  F0AD         	call	i2___flmul	;wreg free
 49456  017F7C  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 49457  017F80  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 49458  017F84  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 49459  017F88  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 49460  017F8C  ECD0  F0B9         	call	i2___fldiv	;wreg free
 49461  017F90  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 49462  017F94  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 49463  017F98  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 49464  017F9C  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 49465                           
 49466                           ;main.c: 135: RMS = sqrt(RMS);
 49467  017FA0  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 49468  017FA4  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 49469  017FA8  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 49470  017FAC  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 49471  017FB0  ECAE  F0B5         	call	_sqrt	;wreg free
 49472  017FB4  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 49473  017FB8  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 49474  017FBC  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 49475  017FC0  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 49476                           
 49477                           ;main.c: 136: RMS = Peak * RMS;
 49478  017FC4  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 49479  017FC8  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 49480  017FCC  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 49481  017FD0  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 49482  017FD4  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 49483  017FD8  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 49484  017FDC  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 49485  017FE0  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 49486  017FE4  ECC9  F0AD         	call	i2___flmul	;wreg free
 49487  017FE8  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 49488  017FEC  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 49489  017FF0  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 49490  017FF4  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 49491                           
 49492                           ;main.c: 137: return RMS;
 49493  017FF8  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 49494  017FFC  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 49495  018000  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 49496  018004  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 49497  018008  0012               	return	
 49498  01800A                     __end_of_peakToRMS:
 49499                           	opt stack 0
 49500                           tosu	equ	0xFFF
 49501                           tosh	equ	0xFFE
 49502                           tosl	equ	0xFFD
 49503                           pclatu	equ	0xFFB
 49504                           pclath	equ	0xFFA
 49505                           tblptru	equ	0xFF8
 49506                           tblptrh	equ	0xFF7
 49507                           tblptrl	equ	0xFF6
 49508                           tablat	equ	0xFF5
 49509                           prodh	equ	0xFF4
 49510                           prodl	equ	0xFF3
 49511                           intcon	equ	0xFF2
 49512                           indf0	equ	0xFEF
 49513                           postinc0	equ	0xFEE
 49514                           fsr0h	equ	0xFEA
 49515                           fsr0l	equ	0xFE9
 49516                           wreg	equ	0xFE8
 49517                           indf1	equ	0xFE7
 49518                           postdec1	equ	0xFE5
 49519                           plusw1	equ	0xFE3
 49520                           fsr1h	equ	0xFE2
 49521                           fsr1l	equ	0xFE1
 49522                           bsr	equ	0xFE0
 49523                           indf2	equ	0xFDF
 49524                           postinc2	equ	0xFDE
 49525                           postdec2	equ	0xFDD
 49526                           plusw2	equ	0xFDB
 49527                           fsr2h	equ	0xFDA
 49528                           fsr2l	equ	0xFD9
 49529                           status	equ	0xFD8
 49530                           
 49531 ;; *************** function _acos *****************
 49532 ;; Defined at:
 49533 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 49534 ;; Parameters:    Size  Location     Type
 49535 ;;  x               4   73[BANK0 ] void 
 49536 ;; Auto vars:     Size  Location     Type
 49537 ;;		None
 49538 ;; Return value:  Size  Location     Type
 49539 ;;                  4   73[BANK0 ] void 
 49540 ;; Registers used:
 49541 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49542 ;; Tracked objects:
 49543 ;;		On entry : 0/0
 49544 ;;		On exit  : 0/0
 49545 ;;		Unchanged: 0/0
 49546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49547 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49548 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49550 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49551 ;;Total ram usage:        8 bytes
 49552 ;; Hardware stack levels used:    1
 49553 ;; Hardware stack levels required when called:    4
 49554 ;; This function calls:
 49555 ;;		_asin
 49556 ;;		i2___fladd
 49557 ;;		i2___flneg
 49558 ;; This function is called by:
 49559 ;;		_peakToRMS
 49560 ;; This function uses a non-reentrant model
 49561 ;;
 49562                           
 49563                           	psect	text151
 49564  019FBA                     __ptext151:
 49565                           	opt stack 0
 49566  019FBA                     _acos:
 49567                           	opt stack 10
 49568                           
 49569                           ;incstack = 0
 49570  019FBA  C0A9  F091         	movff	acos@x,asin@x
 49571  019FBE  C0AA  F092         	movff	acos@x+1,asin@x+1
 49572  019FC2  C0AB  F093         	movff	acos@x+2,asin@x+2
 49573  019FC6  C0AC  F094         	movff	acos@x+3,asin@x+3
 49574  019FCA  ECAF  F0B2         	call	_asin	;wreg free
 49575  019FCE  C091  F0AD         	movff	?_asin,_acos$5450
 49576  019FD2  C092  F0AE         	movff	?_asin+1,_acos$5450+1
 49577  019FD6  C093  F0AF         	movff	?_asin+2,_acos$5450+2
 49578  019FDA  C094  F0B0         	movff	?_asin+3,_acos$5450+3
 49579  019FDE  C0AD  F02C         	movff	_acos$5450,i2___flneg@f1
 49580  019FE2  C0AE  F02D         	movff	_acos$5450+1,i2___flneg@f1+1
 49581  019FE6  C0AF  F02E         	movff	_acos$5450+2,i2___flneg@f1+2
 49582  019FEA  C0B0  F02F         	movff	_acos$5450+3,i2___flneg@f1+3
 49583  019FEE  EC0C  F0D7         	call	i2___flneg	;wreg free
 49584  019FF2  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49585  019FF6  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49586  019FFA  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49587  019FFE  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49588  01A002  0EDB               	movlw	219
 49589  01A004  6E5A               	movwf	i2___fladd@a,c
 49590  01A006  0E0F               	movlw	15
 49591  01A008  6E5B               	movwf	i2___fladd@a+1,c
 49592  01A00A  0EC9               	movlw	201
 49593  01A00C  6E5C               	movwf	i2___fladd@a+2,c
 49594  01A00E  0E3F               	movlw	63
 49595  01A010  6E5D               	movwf	i2___fladd@a+3,c
 49596  01A012  EC10  F0B1         	call	i2___fladd	;wreg free
 49597  01A016  C056  F0A9         	movff	?i2___fladd,?_acos
 49598  01A01A  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 49599  01A01E  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 49600  01A022  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 49601  01A026  0012               	return	
 49602  01A028                     __end_of_acos:
 49603                           	opt stack 0
 49604                           tosu	equ	0xFFF
 49605                           tosh	equ	0xFFE
 49606                           tosl	equ	0xFFD
 49607                           pclatu	equ	0xFFB
 49608                           pclath	equ	0xFFA
 49609                           tblptru	equ	0xFF8
 49610                           tblptrh	equ	0xFF7
 49611                           tblptrl	equ	0xFF6
 49612                           tablat	equ	0xFF5
 49613                           prodh	equ	0xFF4
 49614                           prodl	equ	0xFF3
 49615                           intcon	equ	0xFF2
 49616                           indf0	equ	0xFEF
 49617                           postinc0	equ	0xFEE
 49618                           fsr0h	equ	0xFEA
 49619                           fsr0l	equ	0xFE9
 49620                           wreg	equ	0xFE8
 49621                           indf1	equ	0xFE7
 49622                           postdec1	equ	0xFE5
 49623                           plusw1	equ	0xFE3
 49624                           fsr1h	equ	0xFE2
 49625                           fsr1l	equ	0xFE1
 49626                           bsr	equ	0xFE0
 49627                           indf2	equ	0xFDF
 49628                           postinc2	equ	0xFDE
 49629                           postdec2	equ	0xFDD
 49630                           plusw2	equ	0xFDB
 49631                           fsr2h	equ	0xFDA
 49632                           fsr2l	equ	0xFD9
 49633                           status	equ	0xFD8
 49634                           
 49635 ;; *************** function _asin *****************
 49636 ;; Defined at:
 49637 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 49638 ;; Parameters:    Size  Location     Type
 49639 ;;  x               4   49[BANK0 ] void 
 49640 ;; Auto vars:     Size  Location     Type
 49641 ;;  y               4   65[BANK0 ] void 
 49642 ;;  sgn             4   53[BANK0 ] void 
 49643 ;; Return value:  Size  Location     Type
 49644 ;;                  4   49[BANK0 ] void 
 49645 ;; Registers used:
 49646 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49647 ;; Tracked objects:
 49648 ;;		On entry : 0/0
 49649 ;;		On exit  : 0/0
 49650 ;;		Unchanged: 0/0
 49651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49653 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49655 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49656 ;;Total ram usage:       24 bytes
 49657 ;; Hardware stack levels used:    1
 49658 ;; Hardware stack levels required when called:    3
 49659 ;; This function calls:
 49660 ;;		_atan
 49661 ;;		_fabs
 49662 ;;		_sqrt
 49663 ;;		i2___fladd
 49664 ;;		i2___fldiv
 49665 ;;		i2___flge
 49666 ;;		i2___flmul
 49667 ;;		i2___flneg
 49668 ;; This function is called by:
 49669 ;;		_acos
 49670 ;; This function uses a non-reentrant model
 49671 ;;
 49672                           
 49673                           	psect	text152
 49674  01655E                     __ptext152:
 49675                           	opt stack 0
 49676  01655E                     _asin:
 49677                           	opt stack 10
 49678                           
 49679                           ;incstack = 0
 49680  01655E  0E00               	movlw	0
 49681  016560  6E34               	movwf	i2___flge@ff1,c
 49682  016562  0E00               	movlw	0
 49683  016564  6E35               	movwf	i2___flge@ff1+1,c
 49684  016566  0E80               	movlw	128
 49685  016568  6E36               	movwf	i2___flge@ff1+2,c
 49686  01656A  0E3F               	movlw	63
 49687  01656C  6E37               	movwf	i2___flge@ff1+3,c
 49688  01656E  C091  F030         	movff	asin@x,fabs@d
 49689  016572  C092  F031         	movff	asin@x+1,fabs@d+1
 49690  016576  C093  F032         	movff	asin@x+2,fabs@d+2
 49691  01657A  C094  F033         	movff	asin@x+3,fabs@d+3
 49692  01657E  EC7C  F0D5         	call	_fabs	;wreg free
 49693  016582  C030  F038         	movff	?_fabs,i2___flge@ff2
 49694  016586  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 49695  01658A  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 49696  01658E  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 49697  016592  EC1F  F0C7         	call	i2___flge	;wreg free
 49698  016596  B0D8               	btfsc	status,0,c
 49699  016598  D00F               	goto	i2l2283
 49700  01659A  0E00               	movlw	0
 49701  01659C  0102               	movlb	2	; () banked
 49702  01659E  6F5D               	movwf	(_errno+1)& (0+255),b
 49703  0165A0  0E21               	movlw	33
 49704  0165A2  6F5C               	movwf	_errno& (0+255),b
 49705  0165A4  0E00               	movlw	0
 49706  0165A6  0100               	movlb	0	; () banked
 49707  0165A8  6F91               	movwf	?_asin& (0+255),b
 49708  0165AA  0E00               	movlw	0
 49709  0165AC  6F92               	movwf	(?_asin+1)& (0+255),b
 49710  0165AE  0E00               	movlw	0
 49711  0165B0  6F93               	movwf	(?_asin+2)& (0+255),b
 49712  0165B2  0E00               	movlw	0
 49713  0165B4  6F94               	movwf	(?_asin+3)& (0+255),b
 49714                           
 49715                           ; BSR set to: 0
 49716  0165B6  0012               	return	
 49717  0165B8                     i2l2283:
 49718                           
 49719                           ; BSR set to: 0
 49720  0165B8  0E00               	movlw	0
 49721  0165BA  0100               	movlb	0	; () banked
 49722  0165BC  6F95               	movwf	asin@sgn& (0+255),b
 49723  0165BE  0E00               	movlw	0
 49724  0165C0  6F96               	movwf	(asin@sgn+1)& (0+255),b
 49725  0165C2  0E80               	movlw	128
 49726  0165C4  6F97               	movwf	(asin@sgn+2)& (0+255),b
 49727  0165C6  0E3F               	movlw	63
 49728  0165C8  6F98               	movwf	(asin@sgn+3)& (0+255),b
 49729                           
 49730                           ; BSR set to: 0
 49731  0165CA  C091  F034         	movff	asin@x,i2___flmul@a
 49732  0165CE  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 49733  0165D2  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 49734  0165D6  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 49735  0165DA  C091  F030         	movff	asin@x,i2___flmul@b
 49736  0165DE  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 49737  0165E2  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 49738  0165E6  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 49739  0165EA  ECC9  F0AD         	call	i2___flmul	;wreg free
 49740  0165EE  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 49741  0165F2  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 49742  0165F6  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 49743  0165FA  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 49744  0165FE  EC0C  F0D7         	call	i2___flneg	;wreg free
 49745  016602  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49746  016606  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49747  01660A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49748  01660E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49749  016612  0E00               	movlw	0
 49750  016614  6E5A               	movwf	i2___fladd@a,c
 49751  016616  0E00               	movlw	0
 49752  016618  6E5B               	movwf	i2___fladd@a+1,c
 49753  01661A  0E80               	movlw	128
 49754  01661C  6E5C               	movwf	i2___fladd@a+2,c
 49755  01661E  0E3F               	movlw	63
 49756  016620  6E5D               	movwf	i2___fladd@a+3,c
 49757  016622  EC10  F0B1         	call	i2___fladd	;wreg free
 49758  016626  C056  F06C         	movff	?i2___fladd,sqrt@a
 49759  01662A  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 49760  01662E  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 49761  016632  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 49762  016636  ECAE  F0B5         	call	_sqrt	;wreg free
 49763  01663A  C06C  F0A1         	movff	?_sqrt,asin@y
 49764  01663E  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 49765  016642  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 49766  016646  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 49767  01664A  C091  F030         	movff	asin@x,fabs@d
 49768  01664E  C092  F031         	movff	asin@x+1,fabs@d+1
 49769  016652  C093  F032         	movff	asin@x+2,fabs@d+2
 49770  016656  C094  F033         	movff	asin@x+3,fabs@d+3
 49771  01665A  EC7C  F0D5         	call	_fabs	;wreg free
 49772  01665E  C030  F034         	movff	?_fabs,i2___flge@ff1
 49773  016662  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 49774  016666  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 49775  01666A  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 49776  01666E  0E8F               	movlw	143
 49777  016670  6E38               	movwf	i2___flge@ff2,c
 49778  016672  0EC2               	movlw	194
 49779  016674  6E39               	movwf	i2___flge@ff2+1,c
 49780  016676  0E35               	movlw	53
 49781  016678  6E3A               	movwf	i2___flge@ff2+2,c
 49782  01667A  0E3F               	movlw	63
 49783  01667C  6E3B               	movwf	i2___flge@ff2+3,c
 49784  01667E  EC1F  F0C7         	call	i2___flge	;wreg free
 49785  016682  B0D8               	btfsc	status,0,c
 49786  016684  D02D               	goto	i2l2285
 49787  016686  C091  F013         	movff	asin@x,i2___fldiv@b
 49788  01668A  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 49789  01668E  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 49790  016692  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 49791  016696  C0A1  F017         	movff	asin@y,i2___fldiv@a
 49792  01669A  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 49793  01669E  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 49794  0166A2  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 49795  0166A6  ECD0  F0B9         	call	i2___fldiv	;wreg free
 49796  0166AA  C013  F0A5         	movff	?i2___fldiv,_asin$5451
 49797  0166AE  C014  F0A6         	movff	?i2___fldiv+1,_asin$5451+1
 49798  0166B2  C015  F0A7         	movff	?i2___fldiv+2,_asin$5451+2
 49799  0166B6  C016  F0A8         	movff	?i2___fldiv+3,_asin$5451+3
 49800  0166BA  C0A5  F07C         	movff	_asin$5451,atan@f
 49801  0166BE  C0A6  F07D         	movff	_asin$5451+1,atan@f+1
 49802  0166C2  C0A7  F07E         	movff	_asin$5451+2,atan@f+2
 49803  0166C6  C0A8  F07F         	movff	_asin$5451+3,atan@f+3
 49804  0166CA  EC05  F0C0         	call	_atan	;wreg free
 49805  0166CE  C07C  F091         	movff	?_atan,?_asin
 49806  0166D2  C07D  F092         	movff	?_atan+1,?_asin+1
 49807  0166D6  C07E  F093         	movff	?_atan+2,?_asin+2
 49808  0166DA  C07F  F094         	movff	?_atan+3,?_asin+3
 49809  0166DE  0012               	return	
 49810  0166E0                     i2l2285:
 49811  0166E0  0100               	movlb	0	; () banked
 49812  0166E2  AF94               	btfss	(asin@x+3)& (0+255),7,b
 49813  0166E4  D06D               	goto	i2l2286
 49814                           
 49815                           ; BSR set to: 0
 49816  0166E6  C091  F017         	movff	asin@x,i2___fldiv@a
 49817  0166EA  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 49818  0166EE  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 49819  0166F2  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 49820  0166F6  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 49821  0166FA  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 49822  0166FE  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 49823  016702  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 49824  016706  EC0C  F0D7         	call	i2___flneg	;wreg free
 49825  01670A  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 49826  01670E  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 49827  016712  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 49828  016716  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 49829  01671A  ECD0  F0B9         	call	i2___fldiv	;wreg free
 49830  01671E  C013  F0A5         	movff	?i2___fldiv,_asin$5451
 49831  016722  C014  F0A6         	movff	?i2___fldiv+1,_asin$5451+1
 49832  016726  C015  F0A7         	movff	?i2___fldiv+2,_asin$5451+2
 49833  01672A  C016  F0A8         	movff	?i2___fldiv+3,_asin$5451+3
 49834  01672E  C0A5  F07C         	movff	_asin$5451,atan@f
 49835  016732  C0A6  F07D         	movff	_asin$5451+1,atan@f+1
 49836  016736  C0A7  F07E         	movff	_asin$5451+2,atan@f+2
 49837  01673A  C0A8  F07F         	movff	_asin$5451+3,atan@f+3
 49838  01673E  EC05  F0C0         	call	_atan	;wreg free
 49839  016742  C07C  F09D         	movff	?_atan,_asin$5452
 49840  016746  C07D  F09E         	movff	?_atan+1,_asin$5452+1
 49841  01674A  C07E  F09F         	movff	?_atan+2,_asin$5452+2
 49842  01674E  C07F  F0A0         	movff	?_atan+3,_asin$5452+3
 49843  016752  0EDB               	movlw	219
 49844  016754  6E5A               	movwf	i2___fladd@a,c
 49845  016756  0E0F               	movlw	15
 49846  016758  6E5B               	movwf	i2___fladd@a+1,c
 49847  01675A  0EC9               	movlw	201
 49848  01675C  6E5C               	movwf	i2___fladd@a+2,c
 49849  01675E  0E3F               	movlw	63
 49850  016760  6E5D               	movwf	i2___fladd@a+3,c
 49851  016762  C09D  F02C         	movff	_asin$5452,i2___flneg@f1
 49852  016766  C09E  F02D         	movff	_asin$5452+1,i2___flneg@f1+1
 49853  01676A  C09F  F02E         	movff	_asin$5452+2,i2___flneg@f1+2
 49854  01676E  C0A0  F02F         	movff	_asin$5452+3,i2___flneg@f1+3
 49855  016772  EC0C  F0D7         	call	i2___flneg	;wreg free
 49856  016776  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49857  01677A  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49858  01677E  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49859  016782  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49860  016786  EC10  F0B1         	call	i2___fladd	;wreg free
 49861  01678A  C056  F099         	movff	?i2___fladd,_asin$5453
 49862  01678E  C057  F09A         	movff	?i2___fladd+1,_asin$5453+1
 49863  016792  C058  F09B         	movff	?i2___fladd+2,_asin$5453+2
 49864  016796  C059  F09C         	movff	?i2___fladd+3,_asin$5453+3
 49865  01679A  C099  F02C         	movff	_asin$5453,i2___flneg@f1
 49866  01679E  C09A  F02D         	movff	_asin$5453+1,i2___flneg@f1+1
 49867  0167A2  C09B  F02E         	movff	_asin$5453+2,i2___flneg@f1+2
 49868  0167A6  C09C  F02F         	movff	_asin$5453+3,i2___flneg@f1+3
 49869  0167AA  EC0C  F0D7         	call	i2___flneg	;wreg free
 49870  0167AE  C02C  F091         	movff	?i2___flneg,?_asin
 49871  0167B2  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 49872  0167B6  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 49873  0167BA  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 49874  0167BE  0012               	return	
 49875  0167C0                     i2l2286:
 49876  0167C0  C091  F017         	movff	asin@x,i2___fldiv@a
 49877  0167C4  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 49878  0167C8  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 49879  0167CC  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 49880  0167D0  C0A1  F013         	movff	asin@y,i2___fldiv@b
 49881  0167D4  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 49882  0167D8  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 49883  0167DC  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 49884  0167E0  ECD0  F0B9         	call	i2___fldiv	;wreg free
 49885  0167E4  C013  F0A5         	movff	?i2___fldiv,_asin$5451
 49886  0167E8  C014  F0A6         	movff	?i2___fldiv+1,_asin$5451+1
 49887  0167EC  C015  F0A7         	movff	?i2___fldiv+2,_asin$5451+2
 49888  0167F0  C016  F0A8         	movff	?i2___fldiv+3,_asin$5451+3
 49889  0167F4  C0A5  F07C         	movff	_asin$5451,atan@f
 49890  0167F8  C0A6  F07D         	movff	_asin$5451+1,atan@f+1
 49891  0167FC  C0A7  F07E         	movff	_asin$5451+2,atan@f+2
 49892  016800  C0A8  F07F         	movff	_asin$5451+3,atan@f+3
 49893  016804  EC05  F0C0         	call	_atan	;wreg free
 49894  016808  C07C  F09D         	movff	?_atan,_asin$5452
 49895  01680C  C07D  F09E         	movff	?_atan+1,_asin$5452+1
 49896  016810  C07E  F09F         	movff	?_atan+2,_asin$5452+2
 49897  016814  C07F  F0A0         	movff	?_atan+3,_asin$5452+3
 49898  016818  C09D  F02C         	movff	_asin$5452,i2___flneg@f1
 49899  01681C  C09E  F02D         	movff	_asin$5452+1,i2___flneg@f1+1
 49900  016820  C09F  F02E         	movff	_asin$5452+2,i2___flneg@f1+2
 49901  016824  C0A0  F02F         	movff	_asin$5452+3,i2___flneg@f1+3
 49902  016828  EC0C  F0D7         	call	i2___flneg	;wreg free
 49903  01682C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49904  016830  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49905  016834  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49906  016838  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49907  01683C  0EDB               	movlw	219
 49908  01683E  6E5A               	movwf	i2___fladd@a,c
 49909  016840  0E0F               	movlw	15
 49910  016842  6E5B               	movwf	i2___fladd@a+1,c
 49911  016844  0EC9               	movlw	201
 49912  016846  6E5C               	movwf	i2___fladd@a+2,c
 49913  016848  0E3F               	movlw	63
 49914  01684A  6E5D               	movwf	i2___fladd@a+3,c
 49915  01684C  EC10  F0B1         	call	i2___fladd	;wreg free
 49916  016850  C056  F091         	movff	?i2___fladd,?_asin
 49917  016854  C057  F092         	movff	?i2___fladd+1,?_asin+1
 49918  016858  C058  F093         	movff	?i2___fladd+2,?_asin+2
 49919  01685C  C059  F094         	movff	?i2___fladd+3,?_asin+3
 49920  016860  0012               	return	
 49921  016862                     __end_of_asin:
 49922                           	opt stack 0
 49923                           tosu	equ	0xFFF
 49924                           tosh	equ	0xFFE
 49925                           tosl	equ	0xFFD
 49926                           pclatu	equ	0xFFB
 49927                           pclath	equ	0xFFA
 49928                           tblptru	equ	0xFF8
 49929                           tblptrh	equ	0xFF7
 49930                           tblptrl	equ	0xFF6
 49931                           tablat	equ	0xFF5
 49932                           prodh	equ	0xFF4
 49933                           prodl	equ	0xFF3
 49934                           intcon	equ	0xFF2
 49935                           indf0	equ	0xFEF
 49936                           postinc0	equ	0xFEE
 49937                           fsr0h	equ	0xFEA
 49938                           fsr0l	equ	0xFE9
 49939                           wreg	equ	0xFE8
 49940                           indf1	equ	0xFE7
 49941                           postdec1	equ	0xFE5
 49942                           plusw1	equ	0xFE3
 49943                           fsr1h	equ	0xFE2
 49944                           fsr1l	equ	0xFE1
 49945                           bsr	equ	0xFE0
 49946                           indf2	equ	0xFDF
 49947                           postinc2	equ	0xFDE
 49948                           postdec2	equ	0xFDD
 49949                           plusw2	equ	0xFDB
 49950                           fsr2h	equ	0xFDA
 49951                           fsr2l	equ	0xFD9
 49952                           status	equ	0xFD8
 49953                           
 49954 ;; *************** function _sqrt *****************
 49955 ;; Defined at:
 49956 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 49957 ;; Parameters:    Size  Location     Type
 49958 ;;  a               4   12[BANK0 ] void 
 49959 ;; Auto vars:     Size  Location     Type
 49960 ;;  frac            4   37[BANK0 ] unsigned long 
 49961 ;;  root            4   33[BANK0 ] struct .
 49962 ;;  grs             4   27[BANK0 ] unsigned long 
 49963 ;;  tfrac           4   22[BANK0 ] unsigned long 
 49964 ;;  exp             2   31[BANK0 ] int 
 49965 ;;  p               1   26[BANK0 ] unsigned char 
 49966 ;;  i               1   21[BANK0 ] unsigned char 
 49967 ;;  sign            1   20[BANK0 ] unsigned char 
 49968 ;; Return value:  Size  Location     Type
 49969 ;;                  4   12[BANK0 ] unsigned char 
 49970 ;; Registers used:
 49971 ;;		wreg, status,2, status,0
 49972 ;; Tracked objects:
 49973 ;;		On entry : 0/0
 49974 ;;		On exit  : 0/0
 49975 ;;		Unchanged: 0/0
 49976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49977 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49978 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49979 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49980 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49981 ;;Total ram usage:       29 bytes
 49982 ;; Hardware stack levels used:    1
 49983 ;; This function calls:
 49984 ;;		Nothing
 49985 ;; This function is called by:
 49986 ;;		_peakToRMS
 49987 ;;		_asin
 49988 ;; This function uses a non-reentrant model
 49989 ;;
 49990                           
 49991                           	psect	text153
 49992  016B5C                     __ptext153:
 49993                           	opt stack 0
 49994  016B5C                     _sqrt:
 49995                           	opt stack 14
 49996                           
 49997                           ;incstack = 0
 49998  016B5C  0100               	movlb	0	; () banked
 49999  016B5E  516F               	movf	(sqrt@a+3)& (0+255),w,b
 50000  016B60  0B80               	andlw	128
 50001  016B62  6F74               	movwf	sqrt@sign& (0+255),b
 50002  016B64  516F               	movf	(sqrt@a+3)& (0+255),w,b
 50003  016B66  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 50004  016B68  6F7A               	movwf	sqrt@p& (0+255),b
 50005                           
 50006                           ; BSR set to: 0
 50007  016B6A  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 50008                           
 50009                           ; BSR set to: 0
 50010  016B6C  817A               	bsf	sqrt@p& (0+255),0,b
 50011                           
 50012                           ; BSR set to: 0
 50013                           
 50014                           ; BSR set to: 0
 50015  016B6E  C07A  F07F         	movff	sqrt@p,sqrt@exp
 50016  016B72  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 50017                           
 50018                           ; BSR set to: 0
 50019  016B74  0EFF               	movlw	255
 50020  016B76  156C               	andwf	sqrt@a& (0+255),w,b
 50021  016B78  6F85               	movwf	sqrt@frac& (0+255),b
 50022  016B7A  0EFF               	movlw	255
 50023  016B7C  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 50024  016B7E  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 50025  016B80  0E7F               	movlw	127
 50026  016B82  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 50027  016B84  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 50028  016B86  0E00               	movlw	0
 50029  016B88  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 50030  016B8A  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 50031                           
 50032                           ; BSR set to: 0
 50033  016B8C  517F               	movf	sqrt@exp& (0+255),w,b
 50034  016B8E  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 50035  016B90  B4D8               	btfsc	status,2,c
 50036  016B92  D005               	goto	i2l2853
 50037                           
 50038                           ; BSR set to: 0
 50039  016B94  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 50040                           
 50041                           ; BSR set to: 0
 50042  016B96  297F               	incf	sqrt@exp& (0+255),w,b
 50043  016B98  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 50044  016B9A  A4D8               	btfss	status,2,c
 50045  016B9C  D008               	goto	i2l2855
 50046  016B9E                     i2l2853:
 50047                           
 50048                           ; BSR set to: 0
 50049                           
 50050                           ; BSR set to: 0
 50051  016B9E  0E00               	movlw	0
 50052  016BA0  6F85               	movwf	sqrt@frac& (0+255),b
 50053  016BA2  0E00               	movlw	0
 50054  016BA4  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 50055  016BA6  0E00               	movlw	0
 50056  016BA8  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 50057  016BAA  0E00               	movlw	0
 50058  016BAC  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 50059  016BAE                     i2l2855:
 50060                           
 50061                           ; BSR set to: 0
 50062                           
 50063                           ; BSR set to: 0
 50064  016BAE  517F               	movf	sqrt@exp& (0+255),w,b
 50065  016BB0  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 50066  016BB2  A4D8               	btfss	status,2,c
 50067  016BB4  D009               	goto	i2l2856
 50068                           
 50069                           ; BSR set to: 0
 50070  016BB6  0E00               	movlw	0
 50071  016BB8  6F6C               	movwf	?_sqrt& (0+255),b
 50072  016BBA  0E00               	movlw	0
 50073  016BBC  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 50074  016BBE  0E00               	movlw	0
 50075  016BC0  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 50076  016BC2  0E00               	movlw	0
 50077  016BC4  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 50078                           
 50079                           ; BSR set to: 0
 50080  016BC6  0012               	return	
 50081  016BC8                     i2l2856:
 50082                           
 50083                           ; BSR set to: 0
 50084                           
 50085                           ; BSR set to: 0
 50086  016BC8  5174               	movf	sqrt@sign& (0+255),w,b
 50087  016BCA  B4D8               	btfsc	status,2,c
 50088  016BCC  D01A               	goto	i2l2858
 50089                           
 50090                           ; BSR set to: 0
 50091  016BCE  0E00               	movlw	0
 50092  016BD0  6F81               	movwf	sqrt@root& (0+255),b
 50093  016BD2  0E00               	movlw	0
 50094  016BD4  6F82               	movwf	(sqrt@root+1)& (0+255),b
 50095  016BD6  0E40               	movlw	64
 50096  016BD8  6F83               	movwf	(sqrt@root+2)& (0+255),b
 50097  016BDA  0E00               	movlw	0
 50098  016BDC  6F84               	movwf	(sqrt@root+3)& (0+255),b
 50099                           
 50100                           ; BSR set to: 0
 50101  016BDE  0E80               	movlw	128
 50102  016BE0  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 50103  016BE2  0EFF               	movlw	255
 50104  016BE4  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 50105                           
 50106                           ; BSR set to: 0
 50107  016BE6  0E00               	movlw	0
 50108  016BE8  0102               	movlb	2	; () banked
 50109  016BEA  6F5D               	movwf	(_errno+1)& (0+255),b
 50110  016BEC  0E21               	movlw	33
 50111  016BEE  6F5C               	movwf	_errno& (0+255),b
 50112                           
 50113                           ; BSR set to: 2
 50114  016BF0  C081  F06C         	movff	sqrt@root,?_sqrt
 50115  016BF4  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 50116  016BF8  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 50117  016BFC  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 50118                           
 50119                           ; BSR set to: 2
 50120  016C00  0012               	return	
 50121  016C02                     i2l2858:
 50122                           
 50123                           ; BSR set to: 2
 50124  016C02  0100               	movlb	0	; () banked
 50125  016C04  297F               	incf	sqrt@exp& (0+255),w,b
 50126  016C06  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 50127  016C08  A4D8               	btfss	status,2,c
 50128  016C0A  D011               	goto	i2l2859
 50129                           
 50130                           ; BSR set to: 0
 50131  016C0C  0E00               	movlw	0
 50132  016C0E  6F81               	movwf	sqrt@root& (0+255),b
 50133  016C10  0E00               	movlw	0
 50134  016C12  6F82               	movwf	(sqrt@root+1)& (0+255),b
 50135  016C14  0E80               	movlw	128
 50136  016C16  6F83               	movwf	(sqrt@root+2)& (0+255),b
 50137  016C18  0E7F               	movlw	127
 50138  016C1A  6F84               	movwf	(sqrt@root+3)& (0+255),b
 50139                           
 50140                           ; BSR set to: 0
 50141  016C1C  C081  F06C         	movff	sqrt@root,?_sqrt
 50142  016C20  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 50143  016C24  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 50144  016C28  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 50145                           
 50146                           ; BSR set to: 0
 50147  016C2C  0012               	return	
 50148  016C2E                     i2l2859:
 50149                           
 50150                           ; BSR set to: 0
 50151                           
 50152                           ; BSR set to: 0
 50153  016C2E  0E81               	movlw	129
 50154  016C30  277F               	addwf	sqrt@exp& (0+255),f,b
 50155  016C32  0EFF               	movlw	255
 50156  016C34  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 50157  016C36  517F               	movf	sqrt@exp& (0+255),w,b
 50158  016C38  0B01               	andlw	1
 50159  016C3A  6F7A               	movwf	sqrt@p& (0+255),b
 50160  016C3C  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 50161  016C3E  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 50162  016C40  337F               	rrcf	sqrt@exp& (0+255),f,b
 50163  016C42  0E7F               	movlw	127
 50164  016C44  277F               	addwf	sqrt@exp& (0+255),f,b
 50165  016C46  0E00               	movlw	0
 50166  016C48  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 50167  016C4A  90D8               	bcf	status,0,c
 50168  016C4C  3585               	rlcf	sqrt@frac& (0+255),w,b
 50169  016C4E  6F76               	movwf	sqrt@tfrac& (0+255),b
 50170  016C50  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 50171  016C52  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 50172  016C54  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 50173  016C56  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 50174  016C58  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 50175  016C5A  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 50176                           
 50177                           ; BSR set to: 0
 50178  016C5C  0E00               	movlw	0
 50179  016C5E  6F85               	movwf	sqrt@frac& (0+255),b
 50180  016C60  0E00               	movlw	0
 50181  016C62  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 50182  016C64  0E00               	movlw	0
 50183  016C66  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 50184  016C68  0E00               	movlw	0
 50185  016C6A  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 50186                           
 50187                           ; BSR set to: 0
 50188  016C6C  0E00               	movlw	0
 50189  016C6E  6F7B               	movwf	sqrt@grs& (0+255),b
 50190  016C70  0E00               	movlw	0
 50191  016C72  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 50192  016C74  0E00               	movlw	0
 50193  016C76  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 50194  016C78  0E01               	movlw	1
 50195  016C7A  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 50196                           
 50197                           ; BSR set to: 0
 50198  016C7C  517A               	movf	sqrt@p& (0+255),w,b
 50199  016C7E  B4D8               	btfsc	status,2,c
 50200  016C80  D005               	goto	i2l2860
 50201                           
 50202                           ; BSR set to: 0
 50203  016C82  90D8               	bcf	status,0,c
 50204  016C84  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 50205  016C86  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 50206  016C88  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 50207  016C8A  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 50208  016C8C                     i2l2860:
 50209                           
 50210                           ; BSR set to: 0
 50211                           
 50212                           ; BSR set to: 0
 50213  016C8C  0E00               	movlw	0
 50214  016C8E  6F75               	movwf	sqrt@i& (0+255),b
 50215  016C90  D052               	goto	i2l2861
 50216  016C92                     
 50217                           ; BSR set to: 0
 50218                           
 50219                           ; BSR set to: 0
 50220  016C92  517B               	movf	sqrt@grs& (0+255),w,b
 50221  016C94  1385               	iorwf	sqrt@frac& (0+255),f,b
 50222  016C96  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 50223  016C98  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 50224  016C9A  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 50225  016C9C  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 50226  016C9E  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 50227  016CA0  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 50228  016CA2  5185               	movf	sqrt@frac& (0+255),w,b
 50229  016CA4  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 50230  016CA6  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 50231  016CA8  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 50232  016CAA  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 50233  016CAC  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 50234  016CAE  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 50235  016CB0  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 50236  016CB2  A0D8               	btfss	status,0,c
 50237  016CB4  D011               	goto	i2l2863
 50238                           
 50239                           ; BSR set to: 0
 50240  016CB6  5185               	movf	sqrt@frac& (0+255),w,b
 50241  016CB8  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 50242  016CBA  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 50243  016CBC  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 50244  016CBE  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 50245  016CC0  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 50246  016CC2  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 50247  016CC4  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 50248  016CC6  517B               	movf	sqrt@grs& (0+255),w,b
 50249  016CC8  2785               	addwf	sqrt@frac& (0+255),f,b
 50250  016CCA  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 50251  016CCC  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 50252  016CCE  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 50253  016CD0  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 50254  016CD2  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 50255  016CD4  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 50256  016CD6  D014               	goto	i2l2864
 50257  016CD8                     i2l2863:
 50258                           
 50259                           ; BSR set to: 0
 50260                           
 50261                           ; BSR set to: 0
 50262  016CD8  C07B  F070         	movff	sqrt@grs,??_sqrt
 50263  016CDC  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 50264  016CE0  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 50265  016CE4  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 50266  016CE8  1F70               	comf	??_sqrt& (0+255),f,b
 50267  016CEA  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 50268  016CEC  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 50269  016CEE  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 50270  016CF0  5170               	movf	??_sqrt& (0+255),w,b
 50271  016CF2  1785               	andwf	sqrt@frac& (0+255),f,b
 50272  016CF4  5171               	movf	(??_sqrt+1)& (0+255),w,b
 50273  016CF6  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 50274  016CF8  5172               	movf	(??_sqrt+2)& (0+255),w,b
 50275  016CFA  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 50276  016CFC  5173               	movf	(??_sqrt+3)& (0+255),w,b
 50277  016CFE  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 50278  016D00                     i2l2864:
 50279                           
 50280                           ; BSR set to: 0
 50281                           
 50282                           ; BSR set to: 0
 50283  016D00  C07B  F070         	movff	sqrt@grs,??_sqrt
 50284  016D04  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 50285  016D08  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 50286  016D0C  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 50287  016D10  90D8               	bcf	status,0,c
 50288  016D12  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 50289  016D14  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 50290  016D16  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 50291  016D18  3370               	rrcf	??_sqrt& (0+255),f,b
 50292  016D1A  C070  F07B         	movff	??_sqrt,sqrt@grs
 50293  016D1E  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 50294  016D22  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 50295  016D26  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 50296                           
 50297                           ; BSR set to: 0
 50298  016D2A  90D8               	bcf	status,0,c
 50299  016D2C  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 50300  016D2E  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 50301  016D30  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 50302  016D32  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 50303                           
 50304                           ; BSR set to: 0
 50305  016D34  2B75               	incf	sqrt@i& (0+255),f,b
 50306  016D36                     i2l2861:
 50307                           
 50308                           ; BSR set to: 0
 50309                           
 50310                           ; BSR set to: 0
 50311  016D36  0E18               	movlw	24
 50312  016D38  6575               	cpfsgt	sqrt@i& (0+255),b
 50313  016D3A  D7AB               	goto	i2l2862
 50314                           
 50315                           ; BSR set to: 0
 50316                           
 50317                           ; BSR set to: 0
 50318  016D3C  C085  F070         	movff	sqrt@frac,??_sqrt
 50319  016D40  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 50320  016D44  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 50321  016D48  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 50322  016D4C  90D8               	bcf	status,0,c
 50323  016D4E  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 50324  016D50  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 50325  016D52  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 50326  016D54  3370               	rrcf	??_sqrt& (0+255),f,b
 50327  016D56  C070  F085         	movff	??_sqrt,sqrt@frac
 50328  016D5A  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 50329  016D5E  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 50330  016D62  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 50331                           
 50332                           ; BSR set to: 0
 50333  016D66  0E01               	movlw	1
 50334  016D68  1585               	andwf	sqrt@frac& (0+255),w,b
 50335  016D6A  6F7B               	movwf	sqrt@grs& (0+255),b
 50336  016D6C  0E00               	movlw	0
 50337  016D6E  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 50338  016D70  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 50339  016D72  0E00               	movlw	0
 50340  016D74  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 50341  016D76  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 50342  016D78  0E00               	movlw	0
 50343  016D7A  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 50344  016D7C  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 50345                           
 50346                           ; BSR set to: 0
 50347  016D7E  C085  F070         	movff	sqrt@frac,??_sqrt
 50348  016D82  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 50349  016D86  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 50350  016D8A  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 50351  016D8E  90D8               	bcf	status,0,c
 50352  016D90  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 50353  016D92  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 50354  016D94  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 50355  016D96  3370               	rrcf	??_sqrt& (0+255),f,b
 50356  016D98  C070  F085         	movff	??_sqrt,sqrt@frac
 50357  016D9C  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 50358  016DA0  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 50359  016DA4  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 50360  016DA8  517B               	movf	sqrt@grs& (0+255),w,b
 50361  016DAA  2785               	addwf	sqrt@frac& (0+255),f,b
 50362  016DAC  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 50363  016DAE  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 50364  016DB0  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 50365  016DB2  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 50366  016DB4  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 50367  016DB6  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 50368                           
 50369                           ; BSR set to: 0
 50370  016DB8  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 50371  016DBA  D017               	goto	i2l2866
 50372                           
 50373                           ; BSR set to: 0
 50374  016DBC  C085  F070         	movff	sqrt@frac,??_sqrt
 50375  016DC0  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 50376  016DC4  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 50377  016DC8  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 50378  016DCC  90D8               	bcf	status,0,c
 50379  016DCE  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 50380  016DD0  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 50381  016DD2  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 50382  016DD4  3370               	rrcf	??_sqrt& (0+255),f,b
 50383  016DD6  C070  F085         	movff	??_sqrt,sqrt@frac
 50384  016DDA  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 50385  016DDE  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 50386  016DE2  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 50387  016DE6  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 50388  016DE8  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 50389  016DEA                     i2l2866:
 50390                           
 50391                           ; BSR set to: 0
 50392                           
 50393                           ; BSR set to: 0
 50394  016DEA  0EFF               	movlw	255
 50395  016DEC  1585               	andwf	sqrt@frac& (0+255),w,b
 50396  016DEE  6F81               	movwf	sqrt@root& (0+255),b
 50397  016DF0  0EFF               	movlw	255
 50398  016DF2  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 50399  016DF4  6F82               	movwf	(sqrt@root+1)& (0+255),b
 50400  016DF6  0E7F               	movlw	127
 50401  016DF8  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 50402  016DFA  6F83               	movwf	(sqrt@root+2)& (0+255),b
 50403  016DFC  0E00               	movlw	0
 50404  016DFE  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 50405  016E00  6F84               	movwf	(sqrt@root+3)& (0+255),b
 50406                           
 50407                           ; BSR set to: 0
 50408  016E02  C07F  F07A         	movff	sqrt@exp,sqrt@p
 50409                           
 50410                           ; BSR set to: 0
 50411  016E06  B17A               	btfsc	sqrt@p& (0+255),0,b
 50412                           
 50413                           ; BSR set to: 0
 50414  016E08  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 50415                           
 50416                           ; BSR set to: 0
 50417                           
 50418                           ; BSR set to: 0
 50419  016E0A  90D8               	bcf	status,0,c
 50420  016E0C  317A               	rrcf	sqrt@p& (0+255),w,b
 50421  016E0E  6F84               	movwf	(sqrt@root+3)& (0+255),b
 50422                           
 50423                           ; BSR set to: 0
 50424  016E10  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 50425                           
 50426                           ; BSR set to: 0
 50427  016E12  C081  F06C         	movff	sqrt@root,?_sqrt
 50428  016E16  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 50429  016E1A  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 50430  016E1E  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 50431  016E22  0012               	return	
 50432  016E24                     __end_of_sqrt:
 50433                           	opt stack 0
 50434                           tosu	equ	0xFFF
 50435                           tosh	equ	0xFFE
 50436                           tosl	equ	0xFFD
 50437                           pclatu	equ	0xFFB
 50438                           pclath	equ	0xFFA
 50439                           tblptru	equ	0xFF8
 50440                           tblptrh	equ	0xFF7
 50441                           tblptrl	equ	0xFF6
 50442                           tablat	equ	0xFF5
 50443                           prodh	equ	0xFF4
 50444                           prodl	equ	0xFF3
 50445                           intcon	equ	0xFF2
 50446                           indf0	equ	0xFEF
 50447                           postinc0	equ	0xFEE
 50448                           fsr0h	equ	0xFEA
 50449                           fsr0l	equ	0xFE9
 50450                           wreg	equ	0xFE8
 50451                           indf1	equ	0xFE7
 50452                           postdec1	equ	0xFE5
 50453                           plusw1	equ	0xFE3
 50454                           fsr1h	equ	0xFE2
 50455                           fsr1l	equ	0xFE1
 50456                           bsr	equ	0xFE0
 50457                           indf2	equ	0xFDF
 50458                           postinc2	equ	0xFDE
 50459                           postdec2	equ	0xFDD
 50460                           plusw2	equ	0xFDB
 50461                           fsr2h	equ	0xFDA
 50462                           fsr2l	equ	0xFD9
 50463                           status	equ	0xFD8
 50464                           
 50465 ;; *************** function _atan *****************
 50466 ;; Defined at:
 50467 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 50468 ;; Parameters:    Size  Location     Type
 50469 ;;  f               4   28[BANK0 ] unsigned char 
 50470 ;; Auto vars:     Size  Location     Type
 50471 ;;  val             4   45[BANK0 ] unsigned char 
 50472 ;;  val_squared     4   41[BANK0 ] unsigned char 
 50473 ;;  x               4   36[BANK0 ] unsigned char 
 50474 ;;  y               4   32[BANK0 ] unsigned char 
 50475 ;;  recip           1   40[BANK0 ] unsigned char 
 50476 ;; Return value:  Size  Location     Type
 50477 ;;                  4   28[BANK0 ] unsigned char 
 50478 ;; Registers used:
 50479 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50480 ;; Tracked objects:
 50481 ;;		On entry : 0/0
 50482 ;;		On exit  : 0/0
 50483 ;;		Unchanged: 0/0
 50484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50485 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50486 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50488 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50489 ;;Total ram usage:       21 bytes
 50490 ;; Hardware stack levels used:    1
 50491 ;; Hardware stack levels required when called:    2
 50492 ;; This function calls:
 50493 ;;		_eval_poly
 50494 ;;		_fabs
 50495 ;;		i2___fladd
 50496 ;;		i2___fldiv
 50497 ;;		i2___flge
 50498 ;;		i2___flmul
 50499 ;;		i2___flneg
 50500 ;; This function is called by:
 50501 ;;		_asin
 50502 ;; This function uses a non-reentrant model
 50503 ;;
 50504                           
 50505                           	psect	text154
 50506  01800A                     __ptext154:
 50507                           	opt stack 0
 50508  01800A                     _atan:
 50509                           	opt stack 10
 50510                           
 50511                           ;incstack = 0
 50512  01800A  C07C  F030         	movff	atan@f,fabs@d
 50513  01800E  C07D  F031         	movff	atan@f+1,fabs@d+1
 50514  018012  C07E  F032         	movff	atan@f+2,fabs@d+2
 50515  018016  C07F  F033         	movff	atan@f+3,fabs@d+3
 50516  01801A  EC7C  F0D5         	call	_fabs	;wreg free
 50517  01801E  C030  F08D         	movff	?_fabs,atan@val
 50518  018022  C031  F08E         	movff	?_fabs+1,atan@val+1
 50519  018026  C032  F08F         	movff	?_fabs+2,atan@val+2
 50520  01802A  C033  F090         	movff	?_fabs+3,atan@val+3
 50521  01802E  0100               	movlb	0	; () banked
 50522  018030  518D               	movf	atan@val& (0+255),w,b
 50523  018032  118E               	iorwf	(atan@val+1)& (0+255),w,b
 50524  018034  118F               	iorwf	(atan@val+2)& (0+255),w,b
 50525  018036  1190               	iorwf	(atan@val+3)& (0+255),w,b
 50526  018038  A4D8               	btfss	status,2,c
 50527  01803A  D009               	goto	i2l2302
 50528                           
 50529                           ; BSR set to: 0
 50530  01803C  0E00               	movlw	0
 50531  01803E  6F7C               	movwf	?_atan& (0+255),b
 50532  018040  0E00               	movlw	0
 50533  018042  6F7D               	movwf	(?_atan+1)& (0+255),b
 50534  018044  0E00               	movlw	0
 50535  018046  6F7E               	movwf	(?_atan+2)& (0+255),b
 50536  018048  0E00               	movlw	0
 50537  01804A  6F7F               	movwf	(?_atan+3)& (0+255),b
 50538                           
 50539                           ; BSR set to: 0
 50540  01804C  0012               	return	
 50541  01804E                     i2l2302:
 50542                           
 50543                           ; BSR set to: 0
 50544                           
 50545                           ; BSR set to: 0
 50546  01804E  0E00               	movlw	0
 50547  018050  6E34               	movwf	i2___flge@ff1,c
 50548  018052  0E00               	movlw	0
 50549  018054  6E35               	movwf	i2___flge@ff1+1,c
 50550  018056  0E80               	movlw	128
 50551  018058  6E36               	movwf	i2___flge@ff1+2,c
 50552  01805A  0E3F               	movlw	63
 50553  01805C  6E37               	movwf	i2___flge@ff1+3,c
 50554  01805E  C08D  F038         	movff	atan@val,i2___flge@ff2
 50555  018062  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 50556  018066  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 50557  01806A  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 50558  01806E  EC1F  F0C7         	call	i2___flge	;wreg free
 50559  018072  B0D8               	btfsc	status,0,c
 50560  018074  D002               	goto	i2u2007_40
 50561  018076  0E01               	movlw	1
 50562  018078  D001               	goto	i2u2008_40
 50563  01807A                     i2u2007_40:
 50564  01807A  0E00               	movlw	0
 50565  01807C                     i2u2008_40:
 50566  01807C  0100               	movlb	0	; () banked
 50567  01807E  6F88               	movwf	atan@recip& (0+255),b
 50568  018080  5188               	movf	atan@recip& (0+255),w,b
 50569  018082  B4D8               	btfsc	status,2,c
 50570  018084  D01A               	goto	i2l2304
 50571                           
 50572                           ; BSR set to: 0
 50573  018086  0E00               	movlw	0
 50574  018088  6E13               	movwf	i2___fldiv@b,c
 50575  01808A  0E00               	movlw	0
 50576  01808C  6E14               	movwf	i2___fldiv@b+1,c
 50577  01808E  0E80               	movlw	128
 50578  018090  6E15               	movwf	i2___fldiv@b+2,c
 50579  018092  0E3F               	movlw	63
 50580  018094  6E16               	movwf	i2___fldiv@b+3,c
 50581  018096  C08D  F017         	movff	atan@val,i2___fldiv@a
 50582  01809A  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 50583  01809E  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 50584  0180A2  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 50585  0180A6  ECD0  F0B9         	call	i2___fldiv	;wreg free
 50586  0180AA  C013  F08D         	movff	?i2___fldiv,atan@val
 50587  0180AE  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 50588  0180B2  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 50589  0180B6  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 50590  0180BA                     i2l2304:
 50591  0180BA  C08D  F030         	movff	atan@val,i2___flmul@b
 50592  0180BE  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 50593  0180C2  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 50594  0180C6  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 50595  0180CA  C08D  F034         	movff	atan@val,i2___flmul@a
 50596  0180CE  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 50597  0180D2  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 50598  0180D6  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 50599  0180DA  ECC9  F0AD         	call	i2___flmul	;wreg free
 50600  0180DE  C030  F089         	movff	?i2___flmul,atan@val_squared
 50601  0180E2  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 50602  0180E6  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 50603  0180EA  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 50604  0180EE  C089  F06C         	movff	atan@val_squared,eval_poly@x
 50605  0180F2  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 50606  0180F6  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 50607  0180FA  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 50608  0180FE  0E8D               	movlw	low atan@coeff_b
 50609  018100  0100               	movlb	0	; () banked
 50610  018102  6F70               	movwf	eval_poly@d& (0+255),b
 50611  018104  0ED2               	movlw	high atan@coeff_b
 50612  018106  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50613  018108  0E00               	movlw	0
 50614  01810A  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50615  01810C  0E04               	movlw	4
 50616  01810E  6F72               	movwf	eval_poly@n& (0+255),b
 50617  018110  ECBC  F0C8         	call	_eval_poly	;wreg free
 50618  018114  C06C  F080         	movff	?_eval_poly,atan@y
 50619  018118  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 50620  01811C  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 50621  018120  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 50622  018124  C089  F06C         	movff	atan@val_squared,eval_poly@x
 50623  018128  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 50624  01812C  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 50625  018130  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 50626  018134  0E61               	movlw	low atan@coeff_a
 50627  018136  0100               	movlb	0	; () banked
 50628  018138  6F70               	movwf	eval_poly@d& (0+255),b
 50629  01813A  0ED2               	movlw	high atan@coeff_a
 50630  01813C  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50631  01813E  0E00               	movlw	0
 50632  018140  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50633  018142  0E05               	movlw	5
 50634  018144  6F72               	movwf	eval_poly@n& (0+255),b
 50635  018146  ECBC  F0C8         	call	_eval_poly	;wreg free
 50636  01814A  C06C  F084         	movff	?_eval_poly,atan@x
 50637  01814E  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 50638  018152  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 50639  018156  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 50640  01815A  C08D  F030         	movff	atan@val,i2___flmul@b
 50641  01815E  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 50642  018162  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 50643  018166  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 50644  01816A  C080  F017         	movff	atan@y,i2___fldiv@a
 50645  01816E  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 50646  018172  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 50647  018176  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 50648  01817A  C084  F013         	movff	atan@x,i2___fldiv@b
 50649  01817E  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 50650  018182  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 50651  018186  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 50652  01818A  ECD0  F0B9         	call	i2___fldiv	;wreg free
 50653  01818E  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 50654  018192  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 50655  018196  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 50656  01819A  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 50657  01819E  ECC9  F0AD         	call	i2___flmul	;wreg free
 50658  0181A2  C030  F08D         	movff	?i2___flmul,atan@val
 50659  0181A6  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 50660  0181AA  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 50661  0181AE  C033  F090         	movff	?i2___flmul+3,atan@val+3
 50662  0181B2  0100               	movlb	0	; () banked
 50663  0181B4  5188               	movf	atan@recip& (0+255),w,b
 50664  0181B6  B4D8               	btfsc	status,2,c
 50665  0181B8  D024               	goto	i2l2305
 50666                           
 50667                           ; BSR set to: 0
 50668  0181BA  C08D  F02C         	movff	atan@val,i2___flneg@f1
 50669  0181BE  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 50670  0181C2  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 50671  0181C6  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 50672  0181CA  EC0C  F0D7         	call	i2___flneg	;wreg free
 50673  0181CE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 50674  0181D2  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 50675  0181D6  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 50676  0181DA  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 50677  0181DE  0EDB               	movlw	219
 50678  0181E0  6E5A               	movwf	i2___fladd@a,c
 50679  0181E2  0E0F               	movlw	15
 50680  0181E4  6E5B               	movwf	i2___fladd@a+1,c
 50681  0181E6  0EC9               	movlw	201
 50682  0181E8  6E5C               	movwf	i2___fladd@a+2,c
 50683  0181EA  0E3F               	movlw	63
 50684  0181EC  6E5D               	movwf	i2___fladd@a+3,c
 50685  0181EE  EC10  F0B1         	call	i2___fladd	;wreg free
 50686  0181F2  C056  F08D         	movff	?i2___fladd,atan@val
 50687  0181F6  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 50688  0181FA  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 50689  0181FE  C059  F090         	movff	?i2___fladd+3,atan@val+3
 50690  018202                     i2l2305:
 50691  018202  0100               	movlb	0	; () banked
 50692  018204  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 50693  018206  D009               	goto	i2l2307
 50694                           
 50695                           ; BSR set to: 0
 50696  018208  C08D  F07C         	movff	atan@val,?_atan
 50697  01820C  C08E  F07D         	movff	atan@val+1,?_atan+1
 50698  018210  C08F  F07E         	movff	atan@val+2,?_atan+2
 50699  018214  C090  F07F         	movff	atan@val+3,?_atan+3
 50700  018218  0012               	return	
 50701  01821A                     i2l2307:
 50702                           
 50703                           ; BSR set to: 0
 50704                           
 50705                           ; BSR set to: 0
 50706  01821A  C08D  F02C         	movff	atan@val,i2___flneg@f1
 50707  01821E  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 50708  018222  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 50709  018226  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 50710  01822A  EC0C  F0D7         	call	i2___flneg	;wreg free
 50711  01822E  C02C  F07C         	movff	?i2___flneg,?_atan
 50712  018232  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 50713  018236  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 50714  01823A  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 50715  01823E  0012               	return	
 50716  018240                     __end_of_atan:
 50717                           	opt stack 0
 50718                           tosu	equ	0xFFF
 50719                           tosh	equ	0xFFE
 50720                           tosl	equ	0xFFD
 50721                           pclatu	equ	0xFFB
 50722                           pclath	equ	0xFFA
 50723                           tblptru	equ	0xFF8
 50724                           tblptrh	equ	0xFF7
 50725                           tblptrl	equ	0xFF6
 50726                           tablat	equ	0xFF5
 50727                           prodh	equ	0xFF4
 50728                           prodl	equ	0xFF3
 50729                           intcon	equ	0xFF2
 50730                           indf0	equ	0xFEF
 50731                           postinc0	equ	0xFEE
 50732                           fsr0h	equ	0xFEA
 50733                           fsr0l	equ	0xFE9
 50734                           wreg	equ	0xFE8
 50735                           indf1	equ	0xFE7
 50736                           postdec1	equ	0xFE5
 50737                           plusw1	equ	0xFE3
 50738                           fsr1h	equ	0xFE2
 50739                           fsr1l	equ	0xFE1
 50740                           bsr	equ	0xFE0
 50741                           indf2	equ	0xFDF
 50742                           postinc2	equ	0xFDE
 50743                           postdec2	equ	0xFDD
 50744                           plusw2	equ	0xFDB
 50745                           fsr2h	equ	0xFDA
 50746                           fsr2l	equ	0xFD9
 50747                           status	equ	0xFD8
 50748                           
 50749 ;; *************** function _fabs *****************
 50750 ;; Defined at:
 50751 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 50752 ;; Parameters:    Size  Location     Type
 50753 ;;  d               4   47[COMRAM] unsigned char 
 50754 ;; Auto vars:     Size  Location     Type
 50755 ;;		None
 50756 ;; Return value:  Size  Location     Type
 50757 ;;                  4   47[COMRAM] unsigned char 
 50758 ;; Registers used:
 50759 ;;		wreg, status,2, status,0, cstack
 50760 ;; Tracked objects:
 50761 ;;		On entry : 0/0
 50762 ;;		On exit  : 0/0
 50763 ;;		Unchanged: 0/0
 50764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50768 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50769 ;;Total ram usage:        4 bytes
 50770 ;; Hardware stack levels used:    1
 50771 ;; Hardware stack levels required when called:    1
 50772 ;; This function calls:
 50773 ;;		i2___flneg
 50774 ;; This function is called by:
 50775 ;;		_asin
 50776 ;;		_atan
 50777 ;; This function uses a non-reentrant model
 50778 ;;
 50779                           
 50780                           	psect	text155
 50781  01AAF8                     __ptext155:
 50782                           	opt stack 0
 50783  01AAF8                     _fabs:
 50784                           	opt stack 11
 50785                           
 50786                           ;incstack = 0
 50787  01AAF8  AE33               	btfss	fabs@d+3,7,c
 50788  01AAFA  D013               	goto	i2l2399
 50789  01AAFC  C030  F02C         	movff	fabs@d,i2___flneg@f1
 50790  01AB00  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 50791  01AB04  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 50792  01AB08  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 50793  01AB0C  EC0C  F0D7         	call	i2___flneg	;wreg free
 50794  01AB10  C02C  F030         	movff	?i2___flneg,?_fabs
 50795  01AB14  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 50796  01AB18  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 50797  01AB1C  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 50798  01AB20  0012               	return	
 50799  01AB22                     i2l2399:
 50800  01AB22  C030  F030         	movff	fabs@d,?_fabs
 50801  01AB26  C031  F031         	movff	fabs@d+1,?_fabs+1
 50802  01AB2A  C032  F032         	movff	fabs@d+2,?_fabs+2
 50803  01AB2E  C033  F033         	movff	fabs@d+3,?_fabs+3
 50804  01AB32  0012               	return		;funcret
 50805  01AB34                     __end_of_fabs:
 50806                           	opt stack 0
 50807                           tosu	equ	0xFFF
 50808                           tosh	equ	0xFFE
 50809                           tosl	equ	0xFFD
 50810                           pclatu	equ	0xFFB
 50811                           pclath	equ	0xFFA
 50812                           tblptru	equ	0xFF8
 50813                           tblptrh	equ	0xFF7
 50814                           tblptrl	equ	0xFF6
 50815                           tablat	equ	0xFF5
 50816                           prodh	equ	0xFF4
 50817                           prodl	equ	0xFF3
 50818                           intcon	equ	0xFF2
 50819                           indf0	equ	0xFEF
 50820                           postinc0	equ	0xFEE
 50821                           fsr0h	equ	0xFEA
 50822                           fsr0l	equ	0xFE9
 50823                           wreg	equ	0xFE8
 50824                           indf1	equ	0xFE7
 50825                           postdec1	equ	0xFE5
 50826                           plusw1	equ	0xFE3
 50827                           fsr1h	equ	0xFE2
 50828                           fsr1l	equ	0xFE1
 50829                           bsr	equ	0xFE0
 50830                           indf2	equ	0xFDF
 50831                           postinc2	equ	0xFDE
 50832                           postdec2	equ	0xFDD
 50833                           plusw2	equ	0xFDB
 50834                           fsr2h	equ	0xFDA
 50835                           fsr2l	equ	0xFD9
 50836                           status	equ	0xFD8
 50837                           
 50838 ;; *************** function _currentMeasuredToPeak *****************
 50839 ;; Defined at:
 50840 ;;		line 142 in file "main.c"
 50841 ;; Parameters:    Size  Location     Type
 50842 ;;  Measured        4   57[BANK0 ] unsigned char 
 50843 ;;  Angle           4   61[BANK0 ] unsigned char 
 50844 ;; Auto vars:     Size  Location     Type
 50845 ;;  Peak            4   65[BANK0 ] unsigned char 
 50846 ;; Return value:  Size  Location     Type
 50847 ;;                  4   57[BANK0 ] unsigned char 
 50848 ;; Registers used:
 50849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50850 ;; Tracked objects:
 50851 ;;		On entry : 0/0
 50852 ;;		On exit  : 0/0
 50853 ;;		Unchanged: 0/0
 50854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50855 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50856 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50858 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50859 ;;Total ram usage:       12 bytes
 50860 ;; Hardware stack levels used:    1
 50861 ;; Hardware stack levels required when called:    3
 50862 ;; This function calls:
 50863 ;;		_sin
 50864 ;;		i2___fldiv
 50865 ;; This function is called by:
 50866 ;;		_ADCPostProcessingCallback
 50867 ;; This function uses a non-reentrant model
 50868 ;;
 50869                           
 50870                           	psect	text156
 50871  019D74                     __ptext156:
 50872                           	opt stack 0
 50873  019D74                     _currentMeasuredToPeak:
 50874                           	opt stack 12
 50875                           
 50876                           ;main.c: 145: double Peak = 0.0;
 50877                           
 50878                           ;incstack = 0
 50879  019D74  0E00               	movlw	0
 50880  019D76  0100               	movlb	0	; () banked
 50881  019D78  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 50882  019D7A  0E00               	movlw	0
 50883  019D7C  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 50884  019D7E  0E00               	movlw	0
 50885  019D80  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 50886  019D82  0E00               	movlw	0
 50887  019D84  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 50888                           
 50889                           ; BSR set to: 0
 50890                           ;main.c: 148: Peak = sin(Angle);
 50891  019D86  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 50892  019D8A  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 50893  019D8E  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 50894  019D92  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 50895  019D96  EC31  F0B4         	call	_sin	;wreg free
 50896  019D9A  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 50897  019D9E  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 50898  019DA2  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 50899  019DA6  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 50900                           
 50901                           ;main.c: 149: Peak = Measured / Peak;
 50902  019DAA  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 50903  019DAE  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 50904  019DB2  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 50905  019DB6  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 50906  019DBA  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 50907  019DBE  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 50908  019DC2  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 50909  019DC6  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 50910  019DCA  ECD0  F0B9         	call	i2___fldiv	;wreg free
 50911  019DCE  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 50912  019DD2  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 50913  019DD6  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 50914  019DDA  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 50915                           
 50916                           ;main.c: 150: return Peak;
 50917  019DDE  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 50918  019DE2  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 50919  019DE6  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 50920  019DEA  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 50921  019DEE  0012               	return	
 50922  019DF0                     __end_of_currentMeasuredToPeak:
 50923                           	opt stack 0
 50924                           tosu	equ	0xFFF
 50925                           tosh	equ	0xFFE
 50926                           tosl	equ	0xFFD
 50927                           pclatu	equ	0xFFB
 50928                           pclath	equ	0xFFA
 50929                           tblptru	equ	0xFF8
 50930                           tblptrh	equ	0xFF7
 50931                           tblptrl	equ	0xFF6
 50932                           tablat	equ	0xFF5
 50933                           prodh	equ	0xFF4
 50934                           prodl	equ	0xFF3
 50935                           intcon	equ	0xFF2
 50936                           indf0	equ	0xFEF
 50937                           postinc0	equ	0xFEE
 50938                           fsr0h	equ	0xFEA
 50939                           fsr0l	equ	0xFE9
 50940                           wreg	equ	0xFE8
 50941                           indf1	equ	0xFE7
 50942                           postdec1	equ	0xFE5
 50943                           plusw1	equ	0xFE3
 50944                           fsr1h	equ	0xFE2
 50945                           fsr1l	equ	0xFE1
 50946                           bsr	equ	0xFE0
 50947                           indf2	equ	0xFDF
 50948                           postinc2	equ	0xFDE
 50949                           postdec2	equ	0xFDD
 50950                           plusw2	equ	0xFDB
 50951                           fsr2h	equ	0xFDA
 50952                           fsr2l	equ	0xFD9
 50953                           status	equ	0xFD8
 50954                           
 50955 ;; *************** function _sin *****************
 50956 ;; Defined at:
 50957 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 50958 ;; Parameters:    Size  Location     Type
 50959 ;;  f               4   40[BANK0 ] unsigned char 
 50960 ;; Auto vars:     Size  Location     Type
 50961 ;;  x2              4   52[BANK0 ] unsigned char 
 50962 ;;  y               4   44[BANK0 ] unsigned char 
 50963 ;;  sgn             1   56[BANK0 ] unsigned char 
 50964 ;; Return value:  Size  Location     Type
 50965 ;;                  4   40[BANK0 ] unsigned char 
 50966 ;; Registers used:
 50967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50968 ;; Tracked objects:
 50969 ;;		On entry : 0/0
 50970 ;;		On exit  : 0/0
 50971 ;;		Unchanged: 0/0
 50972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50974 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50976 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50977 ;;Total ram usage:       17 bytes
 50978 ;; Hardware stack levels used:    1
 50979 ;; Hardware stack levels required when called:    2
 50980 ;; This function calls:
 50981 ;;		_eval_poly
 50982 ;;		_floor
 50983 ;;		i2___fladd
 50984 ;;		i2___fldiv
 50985 ;;		i2___flge
 50986 ;;		i2___flmul
 50987 ;;		i2___flneg
 50988 ;;		i2___flsub
 50989 ;; This function is called by:
 50990 ;;		_peakToRMS
 50991 ;;		_currentMeasuredToPeak
 50992 ;; This function uses a non-reentrant model
 50993 ;;
 50994                           
 50995                           	psect	text157
 50996  016862                     __ptext157:
 50997                           	opt stack 0
 50998  016862                     _sin:
 50999                           	opt stack 12
 51000                           
 51001                           ;incstack = 0
 51002  016862  0E00               	movlw	0
 51003  016864  0100               	movlb	0	; () banked
 51004  016866  6F98               	movwf	sin@sgn& (0+255),b
 51005                           
 51006                           ; BSR set to: 0
 51007  016868  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 51008  01686A  D015               	goto	i2l2723
 51009                           
 51010                           ; BSR set to: 0
 51011  01686C  C088  F02C         	movff	sin@f,i2___flneg@f1
 51012  016870  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 51013  016874  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 51014  016878  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 51015  01687C  EC0C  F0D7         	call	i2___flneg	;wreg free
 51016  016880  C02C  F088         	movff	?i2___flneg,sin@f
 51017  016884  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 51018  016888  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 51019  01688C  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 51020  016890  0E01               	movlw	1
 51021  016892  0100               	movlb	0	; () banked
 51022  016894  6F98               	movwf	sin@sgn& (0+255),b
 51023  016896                     i2l2723:
 51024                           
 51025                           ; BSR set to: 0
 51026                           
 51027                           ; BSR set to: 0
 51028  016896  C088  F030         	movff	sin@f,i2___flmul@b
 51029  01689A  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 51030  01689E  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 51031  0168A2  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 51032  0168A6  0E83               	movlw	131
 51033  0168A8  6E34               	movwf	i2___flmul@a,c
 51034  0168AA  0EF9               	movlw	249
 51035  0168AC  6E35               	movwf	i2___flmul@a+1,c
 51036  0168AE  0E22               	movlw	34
 51037  0168B0  6E36               	movwf	i2___flmul@a+2,c
 51038  0168B2  0E3E               	movlw	62
 51039  0168B4  6E37               	movwf	i2___flmul@a+3,c
 51040  0168B6  ECC9  F0AD         	call	i2___flmul	;wreg free
 51041  0168BA  C030  F088         	movff	?i2___flmul,sin@f
 51042  0168BE  C031  F089         	movff	?i2___flmul+1,sin@f+1
 51043  0168C2  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 51044  0168C6  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 51045  0168CA  C088  F080         	movff	sin@f,i2___flsub@b
 51046  0168CE  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 51047  0168D2  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 51048  0168D6  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 51049  0168DA  C088  F076         	movff	sin@f,floor@x
 51050  0168DE  C089  F077         	movff	sin@f+1,floor@x+1
 51051  0168E2  C08A  F078         	movff	sin@f+2,floor@x+2
 51052  0168E6  C08B  F079         	movff	sin@f+3,floor@x+3
 51053  0168EA  ECAF  F0C7         	call	_floor	;wreg free
 51054  0168EE  C076  F084         	movff	?_floor,i2___flsub@a
 51055  0168F2  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 51056  0168F6  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 51057  0168FA  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 51058  0168FE  ECFB  F0D3         	call	i2___flsub	;wreg free
 51059  016902  C080  F088         	movff	?i2___flsub,sin@f
 51060  016906  C081  F089         	movff	?i2___flsub+1,sin@f+1
 51061  01690A  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 51062  01690E  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 51063  016912  C088  F030         	movff	sin@f,i2___flmul@b
 51064  016916  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 51065  01691A  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 51066  01691E  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 51067  016922  0E00               	movlw	0
 51068  016924  6E34               	movwf	i2___flmul@a,c
 51069  016926  0E00               	movlw	0
 51070  016928  6E35               	movwf	i2___flmul@a+1,c
 51071  01692A  0E80               	movlw	128
 51072  01692C  6E36               	movwf	i2___flmul@a+2,c
 51073  01692E  0E40               	movlw	64
 51074  016930  6E37               	movwf	i2___flmul@a+3,c
 51075  016932  ECC9  F0AD         	call	i2___flmul	;wreg free
 51076  016936  C030  F088         	movff	?i2___flmul,sin@f
 51077  01693A  C031  F089         	movff	?i2___flmul+1,sin@f+1
 51078  01693E  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 51079  016942  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 51080  016946  0E00               	movlw	0
 51081  016948  6E34               	movwf	i2___flge@ff1,c
 51082  01694A  0E00               	movlw	0
 51083  01694C  6E35               	movwf	i2___flge@ff1+1,c
 51084  01694E  0E00               	movlw	0
 51085  016950  6E36               	movwf	i2___flge@ff1+2,c
 51086  016952  0E40               	movlw	64
 51087  016954  6E37               	movwf	i2___flge@ff1+3,c
 51088  016956  C088  F038         	movff	sin@f,i2___flge@ff2
 51089  01695A  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 51090  01695E  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 51091  016962  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 51092  016966  EC1F  F0C7         	call	i2___flge	;wreg free
 51093  01696A  B0D8               	btfsc	status,0,c
 51094  01696C  D023               	goto	i2l2724
 51095  01696E  C088  F080         	movff	sin@f,i2___flsub@b
 51096  016972  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 51097  016976  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 51098  01697A  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 51099  01697E  0E00               	movlw	0
 51100  016980  0100               	movlb	0	; () banked
 51101  016982  6F84               	movwf	i2___flsub@a& (0+255),b
 51102  016984  0E00               	movlw	0
 51103  016986  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 51104  016988  0E00               	movlw	0
 51105  01698A  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 51106  01698C  0E40               	movlw	64
 51107  01698E  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 51108  016990  ECFB  F0D3         	call	i2___flsub	;wreg free
 51109  016994  C080  F088         	movff	?i2___flsub,sin@f
 51110  016998  C081  F089         	movff	?i2___flsub+1,sin@f+1
 51111  01699C  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 51112  0169A0  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 51113  0169A4  0100               	movlb	0	; () banked
 51114  0169A6  5198               	movf	sin@sgn& (0+255),w,b
 51115  0169A8  A4D8               	btfss	status,2,c
 51116  0169AA  D002               	goto	i2u2064_40
 51117  0169AC  0E01               	movlw	1
 51118  0169AE  D001               	goto	i2u2065_40
 51119  0169B0                     i2u2064_40:
 51120  0169B0  0E00               	movlw	0
 51121  0169B2                     i2u2065_40:
 51122  0169B2  6F98               	movwf	sin@sgn& (0+255),b
 51123  0169B4                     i2l2724:
 51124                           
 51125                           ; BSR set to: 0
 51126  0169B4  0E00               	movlw	0
 51127  0169B6  6E34               	movwf	i2___flge@ff1,c
 51128  0169B8  0E00               	movlw	0
 51129  0169BA  6E35               	movwf	i2___flge@ff1+1,c
 51130  0169BC  0E80               	movlw	128
 51131  0169BE  6E36               	movwf	i2___flge@ff1+2,c
 51132  0169C0  0E3F               	movlw	63
 51133  0169C2  6E37               	movwf	i2___flge@ff1+3,c
 51134  0169C4  C088  F038         	movff	sin@f,i2___flge@ff2
 51135  0169C8  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 51136  0169CC  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 51137  0169D0  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 51138  0169D4  EC1F  F0C7         	call	i2___flge	;wreg free
 51139  0169D8  B0D8               	btfsc	status,0,c
 51140  0169DA  D024               	goto	i2l2725
 51141  0169DC  C088  F02C         	movff	sin@f,i2___flneg@f1
 51142  0169E0  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 51143  0169E4  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 51144  0169E8  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 51145  0169EC  EC0C  F0D7         	call	i2___flneg	;wreg free
 51146  0169F0  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 51147  0169F4  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 51148  0169F8  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 51149  0169FC  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 51150  016A00  0E00               	movlw	0
 51151  016A02  6E5A               	movwf	i2___fladd@a,c
 51152  016A04  0E00               	movlw	0
 51153  016A06  6E5B               	movwf	i2___fladd@a+1,c
 51154  016A08  0E00               	movlw	0
 51155  016A0A  6E5C               	movwf	i2___fladd@a+2,c
 51156  016A0C  0E40               	movlw	64
 51157  016A0E  6E5D               	movwf	i2___fladd@a+3,c
 51158  016A10  EC10  F0B1         	call	i2___fladd	;wreg free
 51159  016A14  C056  F088         	movff	?i2___fladd,sin@f
 51160  016A18  C057  F089         	movff	?i2___fladd+1,sin@f+1
 51161  016A1C  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 51162  016A20  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 51163  016A24                     i2l2725:
 51164  016A24  C088  F030         	movff	sin@f,i2___flmul@b
 51165  016A28  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 51166  016A2C  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 51167  016A30  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 51168  016A34  C088  F034         	movff	sin@f,i2___flmul@a
 51169  016A38  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 51170  016A3C  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 51171  016A40  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 51172  016A44  ECC9  F0AD         	call	i2___flmul	;wreg free
 51173  016A48  C030  F094         	movff	?i2___flmul,sin@x2
 51174  016A4C  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 51175  016A50  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 51176  016A54  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 51177  016A58  C094  F06C         	movff	sin@x2,eval_poly@x
 51178  016A5C  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 51179  016A60  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 51180  016A64  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 51181  016A68  0EA1               	movlw	low sin@coeff_b
 51182  016A6A  0100               	movlb	0	; () banked
 51183  016A6C  6F70               	movwf	eval_poly@d& (0+255),b
 51184  016A6E  0ED2               	movlw	high sin@coeff_b
 51185  016A70  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 51186  016A72  0E00               	movlw	0
 51187  016A74  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 51188  016A76  0E03               	movlw	3
 51189  016A78  6F72               	movwf	eval_poly@n& (0+255),b
 51190  016A7A  ECBC  F0C8         	call	_eval_poly	;wreg free
 51191  016A7E  C06C  F08C         	movff	?_eval_poly,sin@y
 51192  016A82  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 51193  016A86  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 51194  016A8A  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 51195  016A8E  C08C  F017         	movff	sin@y,i2___fldiv@a
 51196  016A92  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 51197  016A96  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 51198  016A9A  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 51199  016A9E  0E00               	movlw	0
 51200  016AA0  0100               	movlb	0	; () banked
 51201  016AA2  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 51202  016AA4  0E04               	movlw	4
 51203  016AA6  6F72               	movwf	eval_poly@n& (0+255),b
 51204  016AA8  0E79               	movlw	low sin@coeff_a
 51205  016AAA  6F70               	movwf	eval_poly@d& (0+255),b
 51206  016AAC  0ED2               	movlw	high sin@coeff_a
 51207  016AAE  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 51208  016AB0  C094  F06C         	movff	sin@x2,eval_poly@x
 51209  016AB4  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 51210  016AB8  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 51211  016ABC  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 51212  016AC0  ECBC  F0C8         	call	_eval_poly	;wreg free
 51213  016AC4  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 51214  016AC8  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 51215  016ACC  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 51216  016AD0  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 51217  016AD4  ECD0  F0B9         	call	i2___fldiv	;wreg free
 51218  016AD8  C013  F090         	movff	?i2___fldiv,_sin$5454
 51219  016ADC  C014  F091         	movff	?i2___fldiv+1,_sin$5454+1
 51220  016AE0  C015  F092         	movff	?i2___fldiv+2,_sin$5454+2
 51221  016AE4  C016  F093         	movff	?i2___fldiv+3,_sin$5454+3
 51222  016AE8  C088  F030         	movff	sin@f,i2___flmul@b
 51223  016AEC  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 51224  016AF0  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 51225  016AF4  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 51226  016AF8  C090  F034         	movff	_sin$5454,i2___flmul@a
 51227  016AFC  C091  F035         	movff	_sin$5454+1,i2___flmul@a+1
 51228  016B00  C092  F036         	movff	_sin$5454+2,i2___flmul@a+2
 51229  016B04  C093  F037         	movff	_sin$5454+3,i2___flmul@a+3
 51230  016B08  ECC9  F0AD         	call	i2___flmul	;wreg free
 51231  016B0C  C030  F088         	movff	?i2___flmul,sin@f
 51232  016B10  C031  F089         	movff	?i2___flmul+1,sin@f+1
 51233  016B14  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 51234  016B18  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 51235  016B1C  0100               	movlb	0	; () banked
 51236  016B1E  5198               	movf	sin@sgn& (0+255),w,b
 51237  016B20  B4D8               	btfsc	status,2,c
 51238  016B22  D013               	goto	i2l2726
 51239                           
 51240                           ; BSR set to: 0
 51241  016B24  C088  F02C         	movff	sin@f,i2___flneg@f1
 51242  016B28  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 51243  016B2C  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 51244  016B30  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 51245  016B34  EC0C  F0D7         	call	i2___flneg	;wreg free
 51246  016B38  C02C  F088         	movff	?i2___flneg,?_sin
 51247  016B3C  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 51248  016B40  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 51249  016B44  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 51250  016B48  0012               	return	
 51251  016B4A                     i2l2726:
 51252                           
 51253                           ; BSR set to: 0
 51254  016B4A  C088  F088         	movff	sin@f,?_sin
 51255  016B4E  C089  F089         	movff	sin@f+1,?_sin+1
 51256  016B52  C08A  F08A         	movff	sin@f+2,?_sin+2
 51257  016B56  C08B  F08B         	movff	sin@f+3,?_sin+3
 51258  016B5A  0012               	return		;funcret
 51259  016B5C                     __end_of_sin:
 51260                           	opt stack 0
 51261                           tosu	equ	0xFFF
 51262                           tosh	equ	0xFFE
 51263                           tosl	equ	0xFFD
 51264                           pclatu	equ	0xFFB
 51265                           pclath	equ	0xFFA
 51266                           tblptru	equ	0xFF8
 51267                           tblptrh	equ	0xFF7
 51268                           tblptrl	equ	0xFF6
 51269                           tablat	equ	0xFF5
 51270                           prodh	equ	0xFF4
 51271                           prodl	equ	0xFF3
 51272                           intcon	equ	0xFF2
 51273                           indf0	equ	0xFEF
 51274                           postinc0	equ	0xFEE
 51275                           fsr0h	equ	0xFEA
 51276                           fsr0l	equ	0xFE9
 51277                           wreg	equ	0xFE8
 51278                           indf1	equ	0xFE7
 51279                           postdec1	equ	0xFE5
 51280                           plusw1	equ	0xFE3
 51281                           fsr1h	equ	0xFE2
 51282                           fsr1l	equ	0xFE1
 51283                           bsr	equ	0xFE0
 51284                           indf2	equ	0xFDF
 51285                           postinc2	equ	0xFDE
 51286                           postdec2	equ	0xFDD
 51287                           plusw2	equ	0xFDB
 51288                           fsr2h	equ	0xFDA
 51289                           fsr2l	equ	0xFD9
 51290                           status	equ	0xFD8
 51291                           
 51292 ;; *************** function i2___flsub *****************
 51293 ;; Defined at:
 51294 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 51295 ;; Parameters:    Size  Location     Type
 51296 ;;  b               4   32[BANK0 ] unsigned char 
 51297 ;;  a               4   36[BANK0 ] unsigned char 
 51298 ;; Auto vars:     Size  Location     Type
 51299 ;;		None
 51300 ;; Return value:  Size  Location     Type
 51301 ;;                  4   32[BANK0 ] unsigned char 
 51302 ;; Registers used:
 51303 ;;		wreg, status,2, status,0, cstack
 51304 ;; Tracked objects:
 51305 ;;		On entry : 0/0
 51306 ;;		On exit  : 0/0
 51307 ;;		Unchanged: 0/0
 51308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51309 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51312 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51313 ;;Total ram usage:        8 bytes
 51314 ;; Hardware stack levels used:    1
 51315 ;; Hardware stack levels required when called:    1
 51316 ;; This function calls:
 51317 ;;		i2___fladd
 51318 ;; This function is called by:
 51319 ;;		_sin
 51320 ;;		i2__doprnt
 51321 ;; This function uses a non-reentrant model
 51322 ;;
 51323                           
 51324                           	psect	text158
 51325  01A7F6                     __ptext158:
 51326                           	opt stack 0
 51327  01A7F6                     i2___flsub:
 51328                           	opt stack 13
 51329                           
 51330                           ;incstack = 0
 51331  01A7F6  0E00               	movlw	0
 51332  01A7F8  0100               	movlb	0	; () banked
 51333  01A7FA  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 51334  01A7FC  0E00               	movlw	0
 51335  01A7FE  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 51336  01A800  0E00               	movlw	0
 51337  01A802  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 51338  01A804  0E80               	movlw	128
 51339  01A806  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 51340                           
 51341                           ; BSR set to: 0
 51342  01A808  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 51343  01A80C  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 51344  01A810  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 51345  01A814  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 51346  01A818  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 51347  01A81C  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 51348  01A820  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 51349  01A824  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 51350  01A828  EC10  F0B1         	call	i2___fladd	;wreg free
 51351  01A82C  C056  F080         	movff	?i2___fladd,?i2___flsub
 51352  01A830  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 51353  01A834  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 51354  01A838  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 51355  01A83C  0012               	return	
 51356  01A83E                     __end_ofi2___flsub:
 51357                           	opt stack 0
 51358                           tosu	equ	0xFFF
 51359                           tosh	equ	0xFFE
 51360                           tosl	equ	0xFFD
 51361                           pclatu	equ	0xFFB
 51362                           pclath	equ	0xFFA
 51363                           tblptru	equ	0xFF8
 51364                           tblptrh	equ	0xFF7
 51365                           tblptrl	equ	0xFF6
 51366                           tablat	equ	0xFF5
 51367                           prodh	equ	0xFF4
 51368                           prodl	equ	0xFF3
 51369                           intcon	equ	0xFF2
 51370                           indf0	equ	0xFEF
 51371                           postinc0	equ	0xFEE
 51372                           fsr0h	equ	0xFEA
 51373                           fsr0l	equ	0xFE9
 51374                           wreg	equ	0xFE8
 51375                           indf1	equ	0xFE7
 51376                           postdec1	equ	0xFE5
 51377                           plusw1	equ	0xFE3
 51378                           fsr1h	equ	0xFE2
 51379                           fsr1l	equ	0xFE1
 51380                           bsr	equ	0xFE0
 51381                           indf2	equ	0xFDF
 51382                           postinc2	equ	0xFDE
 51383                           postdec2	equ	0xFDD
 51384                           plusw2	equ	0xFDB
 51385                           fsr2h	equ	0xFDA
 51386                           fsr2l	equ	0xFD9
 51387                           status	equ	0xFD8
 51388                           
 51389 ;; *************** function i2___flneg *****************
 51390 ;; Defined at:
 51391 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 51392 ;; Parameters:    Size  Location     Type
 51393 ;;  f1              4   43[COMRAM] unsigned char 
 51394 ;; Auto vars:     Size  Location     Type
 51395 ;;		None
 51396 ;; Return value:  Size  Location     Type
 51397 ;;                  4   43[COMRAM] unsigned char 
 51398 ;; Registers used:
 51399 ;;		wreg, status,2, status,0
 51400 ;; Tracked objects:
 51401 ;;		On entry : 0/0
 51402 ;;		On exit  : 0/0
 51403 ;;		Unchanged: 0/0
 51404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51408 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51409 ;;Total ram usage:        4 bytes
 51410 ;; Hardware stack levels used:    1
 51411 ;; This function calls:
 51412 ;;		Nothing
 51413 ;; This function is called by:
 51414 ;;		_peakToRMS
 51415 ;;		_ADCPostProcessingCallback
 51416 ;;		_acos
 51417 ;;		_asin
 51418 ;;		_atan
 51419 ;;		_fabs
 51420 ;;		_sin
 51421 ;;		i2__doprnt
 51422 ;; This function uses a non-reentrant model
 51423 ;;
 51424                           
 51425                           	psect	text159
 51426  01AE18                     __ptext159:
 51427                           	opt stack 0
 51428  01AE18                     i2___flneg:
 51429                           	opt stack 14
 51430                           
 51431                           ;incstack = 0
 51432  01AE18  502C               	movf	i2___flneg@f1,w,c
 51433  01AE1A  102D               	iorwf	i2___flneg@f1+1,w,c
 51434  01AE1C  102E               	iorwf	i2___flneg@f1+2,w,c
 51435  01AE1E  102F               	iorwf	i2___flneg@f1+3,w,c
 51436  01AE20  B4D8               	btfsc	status,2,c
 51437  01AE22  D008               	goto	i2l2427
 51438  01AE24  0E00               	movlw	0
 51439  01AE26  1A2C               	xorwf	i2___flneg@f1,f,c
 51440  01AE28  0E00               	movlw	0
 51441  01AE2A  1A2D               	xorwf	i2___flneg@f1+1,f,c
 51442  01AE2C  0E00               	movlw	0
 51443  01AE2E  1A2E               	xorwf	i2___flneg@f1+2,f,c
 51444  01AE30  0E80               	movlw	128
 51445  01AE32  1A2F               	xorwf	i2___flneg@f1+3,f,c
 51446  01AE34                     i2l2427:
 51447  01AE34  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 51448  01AE38  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 51449  01AE3C  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 51450  01AE40  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 51451  01AE44  0012               	return	
 51452  01AE46                     __end_ofi2___flneg:
 51453                           	opt stack 0
 51454                           tosu	equ	0xFFF
 51455                           tosh	equ	0xFFE
 51456                           tosl	equ	0xFFD
 51457                           pclatu	equ	0xFFB
 51458                           pclath	equ	0xFFA
 51459                           tblptru	equ	0xFF8
 51460                           tblptrh	equ	0xFF7
 51461                           tblptrl	equ	0xFF6
 51462                           tablat	equ	0xFF5
 51463                           prodh	equ	0xFF4
 51464                           prodl	equ	0xFF3
 51465                           intcon	equ	0xFF2
 51466                           indf0	equ	0xFEF
 51467                           postinc0	equ	0xFEE
 51468                           fsr0h	equ	0xFEA
 51469                           fsr0l	equ	0xFE9
 51470                           wreg	equ	0xFE8
 51471                           indf1	equ	0xFE7
 51472                           postdec1	equ	0xFE5
 51473                           plusw1	equ	0xFE3
 51474                           fsr1h	equ	0xFE2
 51475                           fsr1l	equ	0xFE1
 51476                           bsr	equ	0xFE0
 51477                           indf2	equ	0xFDF
 51478                           postinc2	equ	0xFDE
 51479                           postdec2	equ	0xFDD
 51480                           plusw2	equ	0xFDB
 51481                           fsr2h	equ	0xFDA
 51482                           fsr2l	equ	0xFD9
 51483                           status	equ	0xFD8
 51484                           
 51485 ;; *************** function i2___fldiv *****************
 51486 ;; Defined at:
 51487 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 51488 ;; Parameters:    Size  Location     Type
 51489 ;;  b               4   18[COMRAM] unsigned char 
 51490 ;;  a               4   22[COMRAM] unsigned char 
 51491 ;; Auto vars:     Size  Location     Type
 51492 ;;  __fldiv         4   37[COMRAM] unsigned long 
 51493 ;;  __fldiv         4   31[COMRAM] unsigned long 
 51494 ;;  __fldiv         2   35[COMRAM] int 
 51495 ;;  __fldiv         1   42[COMRAM] unsigned char 
 51496 ;;  __fldiv         1   41[COMRAM] unsigned char 
 51497 ;;  __fldiv         1   30[COMRAM] unsigned char 
 51498 ;; Return value:  Size  Location     Type
 51499 ;;                  4   18[COMRAM] unsigned char 
 51500 ;; Registers used:
 51501 ;;		wreg, status,2, status,0
 51502 ;; Tracked objects:
 51503 ;;		On entry : 0/0
 51504 ;;		On exit  : 0/0
 51505 ;;		Unchanged: 0/0
 51506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51507 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51508 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51510 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51511 ;;Total ram usage:       25 bytes
 51512 ;; Hardware stack levels used:    1
 51513 ;; This function calls:
 51514 ;;		Nothing
 51515 ;; This function is called by:
 51516 ;;		_peakToRMS
 51517 ;;		_currentMeasuredToPeak
 51518 ;;		_ADCPostProcessingCallback
 51519 ;;		_asin
 51520 ;;		_atan
 51521 ;;		_sin
 51522 ;; This function uses a non-reentrant model
 51523 ;;
 51524                           
 51525                           	psect	text160
 51526  0173A0                     __ptext160:
 51527                           	opt stack 0
 51528  0173A0                     i2___fldiv:
 51529                           	opt stack 15
 51530                           
 51531                           ;incstack = 0
 51532  0173A0  5016               	movf	i2___fldiv@b+3,w,c
 51533  0173A2  0B80               	andlw	128
 51534  0173A4  6E1F               	movwf	i2___fldiv@sign,c
 51535  0173A6  5016               	movf	i2___fldiv@b+3,w,c
 51536  0173A8  2416               	addwf	i2___fldiv@b+3,w,c
 51537  0173AA  6E2A               	movwf	i2___fldiv@bexp,c
 51538  0173AC  BE15               	btfsc	i2___fldiv@b+2,7,c
 51539  0173AE  802A               	bsf	i2___fldiv@bexp,0,c
 51540  0173B0  502A               	movf	i2___fldiv@bexp,w,c
 51541  0173B2  B4D8               	btfsc	status,2,c
 51542  0173B4  D00D               	goto	i2l2788
 51543  0173B6  282A               	incf	i2___fldiv@bexp,w,c
 51544  0173B8  A4D8               	btfss	status,2,c
 51545  0173BA  D008               	goto	i2l2789
 51546  0173BC  0E00               	movlw	0
 51547  0173BE  6E13               	movwf	i2___fldiv@b,c
 51548  0173C0  0E00               	movlw	0
 51549  0173C2  6E14               	movwf	i2___fldiv@b+1,c
 51550  0173C4  0E00               	movlw	0
 51551  0173C6  6E15               	movwf	i2___fldiv@b+2,c
 51552  0173C8  0E00               	movlw	0
 51553  0173CA  6E16               	movwf	i2___fldiv@b+3,c
 51554  0173CC                     i2l2789:
 51555  0173CC  8E15               	bsf	i2___fldiv@b+2,7,c
 51556  0173CE  D006               	goto	L27
 51557  0173D0                     i2l2788:
 51558  0173D0  0E00               	movlw	0
 51559  0173D2  6E13               	movwf	i2___fldiv@b,c
 51560  0173D4  0E00               	movlw	0
 51561  0173D6  6E14               	movwf	i2___fldiv@b+1,c
 51562  0173D8  0E00               	movlw	0
 51563  0173DA  6E15               	movwf	i2___fldiv@b+2,c
 51564  0173DC                     L27:
 51565  0173DC  0E00               	movlw	0
 51566  0173DE  6E16               	movwf	i2___fldiv@b+3,c
 51567  0173E0  501A               	movf	i2___fldiv@a+3,w,c
 51568  0173E2  0B80               	andlw	128
 51569  0173E4  1A1F               	xorwf	i2___fldiv@sign,f,c
 51570  0173E6  501A               	movf	i2___fldiv@a+3,w,c
 51571  0173E8  241A               	addwf	i2___fldiv@a+3,w,c
 51572  0173EA  6E2B               	movwf	i2___fldiv@aexp,c
 51573  0173EC  BE19               	btfsc	i2___fldiv@a+2,7,c
 51574  0173EE  802B               	bsf	i2___fldiv@aexp,0,c
 51575  0173F0  502B               	movf	i2___fldiv@aexp,w,c
 51576  0173F2  B4D8               	btfsc	status,2,c
 51577  0173F4  D00D               	goto	i2l2792
 51578  0173F6  282B               	incf	i2___fldiv@aexp,w,c
 51579  0173F8  A4D8               	btfss	status,2,c
 51580  0173FA  D008               	goto	i2l2793
 51581  0173FC  0E00               	movlw	0
 51582  0173FE  6E17               	movwf	i2___fldiv@a,c
 51583  017400  0E00               	movlw	0
 51584  017402  6E18               	movwf	i2___fldiv@a+1,c
 51585  017404  0E00               	movlw	0
 51586  017406  6E19               	movwf	i2___fldiv@a+2,c
 51587  017408  0E00               	movlw	0
 51588  01740A  6E1A               	movwf	i2___fldiv@a+3,c
 51589  01740C                     i2l2793:
 51590  01740C  8E19               	bsf	i2___fldiv@a+2,7,c
 51591  01740E  D006               	goto	L28
 51592  017410                     i2l2792:
 51593  017410  0E00               	movlw	0
 51594  017412  6E17               	movwf	i2___fldiv@a,c
 51595  017414  0E00               	movlw	0
 51596  017416  6E18               	movwf	i2___fldiv@a+1,c
 51597  017418  0E00               	movlw	0
 51598  01741A  6E19               	movwf	i2___fldiv@a+2,c
 51599  01741C                     L28:
 51600  01741C  0E00               	movlw	0
 51601  01741E  6E1A               	movwf	i2___fldiv@a+3,c
 51602  017420  5017               	movf	i2___fldiv@a,w,c
 51603  017422  1018               	iorwf	i2___fldiv@a+1,w,c
 51604  017424  1019               	iorwf	i2___fldiv@a+2,w,c
 51605  017426  101A               	iorwf	i2___fldiv@a+3,w,c
 51606  017428  A4D8               	btfss	status,2,c
 51607  01742A  D015               	goto	i2l2795
 51608  01742C  0E00               	movlw	0
 51609  01742E  6E13               	movwf	i2___fldiv@b,c
 51610  017430  0E00               	movlw	0
 51611  017432  6E14               	movwf	i2___fldiv@b+1,c
 51612  017434  0E00               	movlw	0
 51613  017436  6E15               	movwf	i2___fldiv@b+2,c
 51614  017438  0E00               	movlw	0
 51615  01743A  6E16               	movwf	i2___fldiv@b+3,c
 51616  01743C  0E80               	movlw	128
 51617  01743E  1215               	iorwf	i2___fldiv@b+2,f,c
 51618  017440  0E7F               	movlw	127
 51619  017442  1216               	iorwf	i2___fldiv@b+3,f,c
 51620  017444  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 51621  017448  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 51622  01744C  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 51623  017450  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 51624  017454  0012               	return	
 51625  017456                     i2l2795:
 51626  017456  502A               	movf	i2___fldiv@bexp,w,c
 51627  017458  A4D8               	btfss	status,2,c
 51628  01745A  D011               	goto	i2l2797
 51629  01745C  0E00               	movlw	0
 51630  01745E  6E13               	movwf	i2___fldiv@b,c
 51631  017460  0E00               	movlw	0
 51632  017462  6E14               	movwf	i2___fldiv@b+1,c
 51633  017464  0E00               	movlw	0
 51634  017466  6E15               	movwf	i2___fldiv@b+2,c
 51635  017468  0E00               	movlw	0
 51636  01746A  6E16               	movwf	i2___fldiv@b+3,c
 51637  01746C  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 51638  017470  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 51639  017474  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 51640  017478  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 51641  01747C  0012               	return	
 51642  01747E                     i2l2797:
 51643  01747E  502B               	movf	i2___fldiv@aexp,w,c
 51644  017480  6E1B               	movwf	??i2___fldiv& (0+255),c
 51645  017482  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 51646  017484  1E1B               	comf	??i2___fldiv,f,c
 51647  017486  1E1C               	comf	??i2___fldiv+1,f,c
 51648  017488  4A1B               	infsnz	??i2___fldiv,f,c
 51649  01748A  2A1C               	incf	??i2___fldiv+1,f,c
 51650  01748C  502A               	movf	i2___fldiv@bexp,w,c
 51651  01748E  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 51652  017490  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 51653  017492  501B               	movf	??i2___fldiv,w,c
 51654  017494  261D               	addwf	??i2___fldiv+2,f,c
 51655  017496  501C               	movf	??i2___fldiv+1,w,c
 51656  017498  221E               	addwfc	??i2___fldiv+3,f,c
 51657  01749A  0E7F               	movlw	127
 51658  01749C  241D               	addwf	??i2___fldiv+2,w,c
 51659  01749E  6E24               	movwf	i2___fldiv@new_exp,c
 51660  0174A0  0E00               	movlw	0
 51661  0174A2  201E               	addwfc	??i2___fldiv+3,w,c
 51662  0174A4  6E25               	movwf	i2___fldiv@new_exp+1,c
 51663  0174A6  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 51664  0174AA  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 51665  0174AE  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 51666  0174B2  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 51667  0174B6  0E00               	movlw	0
 51668  0174B8  6E13               	movwf	i2___fldiv@b,c
 51669  0174BA  0E00               	movlw	0
 51670  0174BC  6E14               	movwf	i2___fldiv@b+1,c
 51671  0174BE  0E00               	movlw	0
 51672  0174C0  6E15               	movwf	i2___fldiv@b+2,c
 51673  0174C2  0E00               	movlw	0
 51674  0174C4  6E16               	movwf	i2___fldiv@b+3,c
 51675  0174C6  0E00               	movlw	0
 51676  0174C8  6E26               	movwf	i2___fldiv@grs,c
 51677  0174CA  0E00               	movlw	0
 51678  0174CC  6E27               	movwf	i2___fldiv@grs+1,c
 51679  0174CE  0E00               	movlw	0
 51680  0174D0  6E28               	movwf	i2___fldiv@grs+2,c
 51681  0174D2  0E00               	movlw	0
 51682  0174D4  6E29               	movwf	i2___fldiv@grs+3,c
 51683  0174D6  0E00               	movlw	0
 51684  0174D8  6E2B               	movwf	i2___fldiv@aexp,c
 51685  0174DA  D028               	goto	i2l2798
 51686  0174DC  502B               	movf	i2___fldiv@aexp,w,c
 51687  0174DE  B4D8               	btfsc	status,2,c
 51688  0174E0  D011               	goto	i2l2800
 51689  0174E2  90D8               	bcf	status,0,c
 51690  0174E4  3620               	rlcf	i2___fldiv@rem,f,c
 51691  0174E6  3621               	rlcf	i2___fldiv@rem+1,f,c
 51692  0174E8  3622               	rlcf	i2___fldiv@rem+2,f,c
 51693  0174EA  3623               	rlcf	i2___fldiv@rem+3,f,c
 51694  0174EC  90D8               	bcf	status,0,c
 51695  0174EE  3613               	rlcf	i2___fldiv@b,f,c
 51696  0174F0  3614               	rlcf	i2___fldiv@b+1,f,c
 51697  0174F2  3615               	rlcf	i2___fldiv@b+2,f,c
 51698  0174F4  3616               	rlcf	i2___fldiv@b+3,f,c
 51699  0174F6  BE29               	btfsc	i2___fldiv@grs+3,7,c
 51700  0174F8  8013               	bsf	i2___fldiv@b,0,c
 51701  0174FA  90D8               	bcf	status,0,c
 51702  0174FC  3626               	rlcf	i2___fldiv@grs,f,c
 51703  0174FE  3627               	rlcf	i2___fldiv@grs+1,f,c
 51704  017500  3628               	rlcf	i2___fldiv@grs+2,f,c
 51705  017502  3629               	rlcf	i2___fldiv@grs+3,f,c
 51706  017504                     i2l2800:
 51707  017504  5017               	movf	i2___fldiv@a,w,c
 51708  017506  5C20               	subwf	i2___fldiv@rem,w,c
 51709  017508  5018               	movf	i2___fldiv@a+1,w,c
 51710  01750A  5821               	subwfb	i2___fldiv@rem+1,w,c
 51711  01750C  5019               	movf	i2___fldiv@a+2,w,c
 51712  01750E  5822               	subwfb	i2___fldiv@rem+2,w,c
 51713  017510  501A               	movf	i2___fldiv@a+3,w,c
 51714  017512  5823               	subwfb	i2___fldiv@rem+3,w,c
 51715  017514  A0D8               	btfss	status,0,c
 51716  017516  D009               	goto	i2l2802
 51717  017518  8C29               	bsf	i2___fldiv@grs+3,6,c
 51718  01751A  5017               	movf	i2___fldiv@a,w,c
 51719  01751C  5E20               	subwf	i2___fldiv@rem,f,c
 51720  01751E  5018               	movf	i2___fldiv@a+1,w,c
 51721  017520  5A21               	subwfb	i2___fldiv@rem+1,f,c
 51722  017522  5019               	movf	i2___fldiv@a+2,w,c
 51723  017524  5A22               	subwfb	i2___fldiv@rem+2,f,c
 51724  017526  501A               	movf	i2___fldiv@a+3,w,c
 51725  017528  5A23               	subwfb	i2___fldiv@rem+3,f,c
 51726  01752A                     i2l2802:
 51727  01752A  2A2B               	incf	i2___fldiv@aexp,f,c
 51728  01752C                     i2l2798:
 51729  01752C  0E19               	movlw	25
 51730  01752E  642B               	cpfsgt	i2___fldiv@aexp,c
 51731  017530  D7D5               	goto	i2l2799
 51732  017532  5020               	movf	i2___fldiv@rem,w,c
 51733  017534  1021               	iorwf	i2___fldiv@rem+1,w,c
 51734  017536  1022               	iorwf	i2___fldiv@rem+2,w,c
 51735  017538  1023               	iorwf	i2___fldiv@rem+3,w,c
 51736  01753A  B4D8               	btfsc	status,2,c
 51737  01753C  D011               	goto	i2l2805
 51738  01753E  8026               	bsf	i2___fldiv@grs,0,c
 51739  017540  D00F               	goto	i2l2805
 51740  017542  90D8               	bcf	status,0,c
 51741  017544  3613               	rlcf	i2___fldiv@b,f,c
 51742  017546  3614               	rlcf	i2___fldiv@b+1,f,c
 51743  017548  3615               	rlcf	i2___fldiv@b+2,f,c
 51744  01754A  3616               	rlcf	i2___fldiv@b+3,f,c
 51745  01754C  BE29               	btfsc	i2___fldiv@grs+3,7,c
 51746  01754E  8013               	bsf	i2___fldiv@b,0,c
 51747  017550  90D8               	bcf	status,0,c
 51748  017552  3626               	rlcf	i2___fldiv@grs,f,c
 51749  017554  3627               	rlcf	i2___fldiv@grs+1,f,c
 51750  017556  3628               	rlcf	i2___fldiv@grs+2,f,c
 51751  017558  3629               	rlcf	i2___fldiv@grs+3,f,c
 51752  01755A  0624               	decf	i2___fldiv@new_exp,f,c
 51753  01755C  A0D8               	btfss	status,0,c
 51754  01755E  0625               	decf	i2___fldiv@new_exp+1,f,c
 51755  017560                     i2l2805:
 51756  017560  AE15               	btfss	i2___fldiv@b+2,7,c
 51757  017562  D7EF               	goto	i2l2806
 51758  017564  0E00               	movlw	0
 51759  017566  6E2B               	movwf	i2___fldiv@aexp,c
 51760  017568  AE29               	btfss	i2___fldiv@grs+3,7,c
 51761  01756A  D016               	goto	i2l2812
 51762  01756C  0EFF               	movlw	255
 51763  01756E  1426               	andwf	i2___fldiv@grs,w,c
 51764  017570  6E1B               	movwf	??i2___fldiv& (0+255),c
 51765  017572  0EFF               	movlw	255
 51766  017574  1427               	andwf	i2___fldiv@grs+1,w,c
 51767  017576  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 51768  017578  0EFF               	movlw	255
 51769  01757A  1428               	andwf	i2___fldiv@grs+2,w,c
 51770  01757C  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 51771  01757E  0E7F               	movlw	127
 51772  017580  1429               	andwf	i2___fldiv@grs+3,w,c
 51773  017582  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 51774  017584  501B               	movf	??i2___fldiv,w,c
 51775  017586  101C               	iorwf	??i2___fldiv+1,w,c
 51776  017588  101D               	iorwf	??i2___fldiv+2,w,c
 51777  01758A  101E               	iorwf	??i2___fldiv+3,w,c
 51778  01758C  A4D8               	btfss	status,2,c
 51779  01758E  D002               	goto	i2u1063_40
 51780  017590  A013               	btfss	i2___fldiv@b,0,c
 51781  017592  D002               	goto	i2l2812
 51782  017594                     i2u1063_40:
 51783  017594  0E01               	movlw	1
 51784  017596  6E2B               	movwf	i2___fldiv@aexp,c
 51785  017598                     i2l2812:
 51786  017598  502B               	movf	i2___fldiv@aexp,w,c
 51787  01759A  B4D8               	btfsc	status,2,c
 51788  01759C  D01F               	goto	i2l2814
 51789  01759E  0E01               	movlw	1
 51790  0175A0  2613               	addwf	i2___fldiv@b,f,c
 51791  0175A2  0E00               	movlw	0
 51792  0175A4  2214               	addwfc	i2___fldiv@b+1,f,c
 51793  0175A6  2215               	addwfc	i2___fldiv@b+2,f,c
 51794  0175A8  2216               	addwfc	i2___fldiv@b+3,f,c
 51795  0175AA  A016               	btfss	i2___fldiv@b+3,0,c
 51796  0175AC  D017               	goto	i2l2814
 51797  0175AE  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 51798  0175B2  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 51799  0175B6  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 51800  0175BA  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 51801  0175BE  341E               	rlcf	??i2___fldiv+3,w,c
 51802  0175C0  321E               	rrcf	??i2___fldiv+3,f,c
 51803  0175C2  321D               	rrcf	??i2___fldiv+2,f,c
 51804  0175C4  321C               	rrcf	??i2___fldiv+1,f,c
 51805  0175C6  321B               	rrcf	??i2___fldiv,f,c
 51806  0175C8  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 51807  0175CC  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 51808  0175D0  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 51809  0175D4  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 51810  0175D8  4A24               	infsnz	i2___fldiv@new_exp,f,c
 51811  0175DA  2A25               	incf	i2___fldiv@new_exp+1,f,c
 51812  0175DC                     i2l2814:
 51813  0175DC  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 51814  0175DE  D010               	goto	i2l2815
 51815  0175E0  5025               	movf	i2___fldiv@new_exp+1,w,c
 51816  0175E2  E103               	bnz	i2u1066_40
 51817  0175E4  2824               	incf	i2___fldiv@new_exp,w,c
 51818  0175E6  A0D8               	btfss	status,0,c
 51819  0175E8  D00B               	goto	i2l2815
 51820  0175EA                     i2u1066_40:
 51821  0175EA  0E00               	movlw	0
 51822  0175EC  6E25               	movwf	i2___fldiv@new_exp+1,c
 51823  0175EE  6824               	setf	i2___fldiv@new_exp,c
 51824  0175F0  0E00               	movlw	0
 51825  0175F2  6E13               	movwf	i2___fldiv@b,c
 51826  0175F4  0E00               	movlw	0
 51827  0175F6  6E14               	movwf	i2___fldiv@b+1,c
 51828  0175F8  0E00               	movlw	0
 51829  0175FA  6E15               	movwf	i2___fldiv@b+2,c
 51830  0175FC  0E00               	movlw	0
 51831  0175FE  6E16               	movwf	i2___fldiv@b+3,c
 51832  017600                     i2l2815:
 51833  017600  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 51834  017602  D005               	goto	i2u1067_40
 51835  017604  5025               	movf	i2___fldiv@new_exp+1,w,c
 51836  017606  E111               	bnz	i2l9841
 51837  017608  0424               	decf	i2___fldiv@new_exp,w,c
 51838  01760A  B0D8               	btfsc	status,0,c
 51839  01760C  D00E               	goto	i2l2816
 51840  01760E                     i2u1067_40:
 51841  01760E  0E00               	movlw	0
 51842  017610  6E25               	movwf	i2___fldiv@new_exp+1,c
 51843  017612  0E00               	movlw	0
 51844  017614  6E24               	movwf	i2___fldiv@new_exp,c
 51845  017616  0E00               	movlw	0
 51846  017618  6E13               	movwf	i2___fldiv@b,c
 51847  01761A  0E00               	movlw	0
 51848  01761C  6E14               	movwf	i2___fldiv@b+1,c
 51849  01761E  0E00               	movlw	0
 51850  017620  6E15               	movwf	i2___fldiv@b+2,c
 51851  017622  0E00               	movlw	0
 51852  017624  6E16               	movwf	i2___fldiv@b+3,c
 51853  017626  0E00               	movlw	0
 51854  017628  6E1F               	movwf	i2___fldiv@sign,c
 51855  01762A                     i2l2816:
 51856  01762A                     i2l9841:
 51857  01762A  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 51858  01762E  A02A               	btfss	i2___fldiv@bexp,0,c
 51859  017630  D002               	goto	i2l2817
 51860  017632  8E15               	bsf	i2___fldiv@b+2,7,c
 51861  017634  D001               	goto	i2l2818
 51862  017636                     i2l2817:
 51863  017636  9E15               	bcf	i2___fldiv@b+2,7,c
 51864  017638                     i2l2818:
 51865  017638  90D8               	bcf	status,0,c
 51866  01763A  302A               	rrcf	i2___fldiv@bexp,w,c
 51867  01763C  6E16               	movwf	i2___fldiv@b+3,c
 51868  01763E  501F               	movf	i2___fldiv@sign,w,c
 51869  017640  1216               	iorwf	i2___fldiv@b+3,f,c
 51870  017642  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 51871  017646  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 51872  01764A  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 51873  01764E  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 51874  017652  0012               	return	
 51875  017654                     __end_ofi2___fldiv:
 51876                           	opt stack 0
 51877                           tosu	equ	0xFFF
 51878                           tosh	equ	0xFFE
 51879                           tosl	equ	0xFFD
 51880                           pclatu	equ	0xFFB
 51881                           pclath	equ	0xFFA
 51882                           tblptru	equ	0xFF8
 51883                           tblptrh	equ	0xFF7
 51884                           tblptrl	equ	0xFF6
 51885                           tablat	equ	0xFF5
 51886                           prodh	equ	0xFF4
 51887                           prodl	equ	0xFF3
 51888                           intcon	equ	0xFF2
 51889                           indf0	equ	0xFEF
 51890                           postinc0	equ	0xFEE
 51891                           fsr0h	equ	0xFEA
 51892                           fsr0l	equ	0xFE9
 51893                           wreg	equ	0xFE8
 51894                           indf1	equ	0xFE7
 51895                           postdec1	equ	0xFE5
 51896                           plusw1	equ	0xFE3
 51897                           fsr1h	equ	0xFE2
 51898                           fsr1l	equ	0xFE1
 51899                           bsr	equ	0xFE0
 51900                           indf2	equ	0xFDF
 51901                           postinc2	equ	0xFDE
 51902                           postdec2	equ	0xFDD
 51903                           plusw2	equ	0xFDB
 51904                           fsr2h	equ	0xFDA
 51905                           fsr2l	equ	0xFD9
 51906                           status	equ	0xFD8
 51907                           
 51908 ;; *************** function _floor *****************
 51909 ;; Defined at:
 51910 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 51911 ;; Parameters:    Size  Location     Type
 51912 ;;  x               4   22[BANK0 ] unsigned char 
 51913 ;; Auto vars:     Size  Location     Type
 51914 ;;  i               4   26[BANK0 ] unsigned char 
 51915 ;;  expon           2   30[BANK0 ] int 
 51916 ;; Return value:  Size  Location     Type
 51917 ;;                  4   22[BANK0 ] int 
 51918 ;; Registers used:
 51919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 51920 ;; Tracked objects:
 51921 ;;		On entry : 0/0
 51922 ;;		On exit  : 0/0
 51923 ;;		Unchanged: 0/0
 51924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51925 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51926 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51928 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51929 ;;Total ram usage:       10 bytes
 51930 ;; Hardware stack levels used:    1
 51931 ;; Hardware stack levels required when called:    1
 51932 ;; This function calls:
 51933 ;;		_frexp
 51934 ;;		i2___fladd
 51935 ;;		i2___flge
 51936 ;;		i2___fltol
 51937 ;;		i2___xxtofl
 51938 ;; This function is called by:
 51939 ;;		_sin
 51940 ;; This function uses a non-reentrant model
 51941 ;;
 51942                           
 51943                           	psect	text161
 51944  018F5E                     __ptext161:
 51945                           	opt stack 0
 51946  018F5E                     _floor:
 51947                           	opt stack 12
 51948                           
 51949                           ;incstack = 0
 51950  018F5E  C076  F001         	movff	floor@x,frexp@value
 51951  018F62  C077  F002         	movff	floor@x+1,frexp@value+1
 51952  018F66  C078  F003         	movff	floor@x+2,frexp@value+2
 51953  018F6A  C079  F004         	movff	floor@x+3,frexp@value+3
 51954  018F6E  0E7E               	movlw	low floor@expon
 51955  018F70  6E05               	movwf	frexp@eptr,c
 51956  018F72  0E00               	movlw	high floor@expon
 51957  018F74  6E06               	movwf	frexp@eptr+1,c
 51958  018F76  ECF8  F0CE         	call	_frexp	;wreg free
 51959  018F7A  0100               	movlb	0	; () banked
 51960  018F7C  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 51961  018F7E  D014               	goto	i2l2952
 51962                           
 51963                           ; BSR set to: 0
 51964  018F80  AF79               	btfss	(floor@x+3)& (0+255),7,b
 51965  018F82  D009               	goto	i2l2953
 51966                           
 51967                           ; BSR set to: 0
 51968  018F84  0E00               	movlw	0
 51969  018F86  6F76               	movwf	?_floor& (0+255),b
 51970  018F88  0E00               	movlw	0
 51971  018F8A  6F77               	movwf	(?_floor+1)& (0+255),b
 51972  018F8C  0E80               	movlw	128
 51973  018F8E  6F78               	movwf	(?_floor+2)& (0+255),b
 51974  018F90  0EBF               	movlw	191
 51975  018F92  6F79               	movwf	(?_floor+3)& (0+255),b
 51976                           
 51977                           ; BSR set to: 0
 51978  018F94  0012               	return	
 51979  018F96                     i2l2953:
 51980                           
 51981                           ; BSR set to: 0
 51982                           
 51983                           ; BSR set to: 0
 51984  018F96  0E00               	movlw	0
 51985  018F98  6F76               	movwf	?_floor& (0+255),b
 51986  018F9A  0E00               	movlw	0
 51987  018F9C  6F77               	movwf	(?_floor+1)& (0+255),b
 51988  018F9E  0E00               	movlw	0
 51989  018FA0  6F78               	movwf	(?_floor+2)& (0+255),b
 51990  018FA2  0E00               	movlw	0
 51991  018FA4  6F79               	movwf	(?_floor+3)& (0+255),b
 51992                           
 51993                           ; BSR set to: 0
 51994  018FA6  0012               	return	
 51995  018FA8                     i2l2952:
 51996                           
 51997                           ; BSR set to: 0
 51998                           
 51999                           ; BSR set to: 0
 52000  018FA8  517F               	movf	(floor@expon+1)& (0+255),w,b
 52001  018FAA  E104               	bnz	i2u2043_40
 52002  018FAC  0E1D               	movlw	29
 52003  018FAE  5D7E               	subwf	floor@expon& (0+255),w,b
 52004  018FB0  A0D8               	btfss	status,0,c
 52005  018FB2  D009               	goto	i2l2955
 52006  018FB4                     i2u2043_40:
 52007                           
 52008                           ; BSR set to: 0
 52009  018FB4  C076  F076         	movff	floor@x,?_floor
 52010  018FB8  C077  F077         	movff	floor@x+1,?_floor+1
 52011  018FBC  C078  F078         	movff	floor@x+2,?_floor+2
 52012  018FC0  C079  F079         	movff	floor@x+3,?_floor+3
 52013  018FC4  0012               	return	
 52014  018FC6                     i2l2955:
 52015                           
 52016                           ; BSR set to: 0
 52017                           
 52018                           ; BSR set to: 0
 52019  018FC6  C076  F06C         	movff	floor@x,i2___fltol@f1
 52020  018FCA  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 52021  018FCE  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 52022  018FD2  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 52023  018FD6  ECAB  F0C9         	call	i2___fltol	;wreg free
 52024  018FDA  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 52025  018FDE  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 52026  018FE2  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 52027  018FE6  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 52028  018FEA  0E01               	movlw	1
 52029  018FEC  ECCA  F0C1         	call	i2___xxtofl
 52030  018FF0  C005  F07A         	movff	?i2___xxtofl,floor@i
 52031  018FF4  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 52032  018FF8  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 52033  018FFC  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 52034  019000  C076  F034         	movff	floor@x,i2___flge@ff1
 52035  019004  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 52036  019008  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 52037  01900C  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 52038  019010  C07A  F038         	movff	floor@i,i2___flge@ff2
 52039  019014  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 52040  019018  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 52041  01901C  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 52042  019020  EC1F  F0C7         	call	i2___flge	;wreg free
 52043  019024  B0D8               	btfsc	status,0,c
 52044  019026  D01B               	goto	i2l2956
 52045  019028  C07A  F056         	movff	floor@i,i2___fladd@b
 52046  01902C  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 52047  019030  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 52048  019034  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 52049  019038  0E00               	movlw	0
 52050  01903A  6E5A               	movwf	i2___fladd@a,c
 52051  01903C  0E00               	movlw	0
 52052  01903E  6E5B               	movwf	i2___fladd@a+1,c
 52053  019040  0E80               	movlw	128
 52054  019042  6E5C               	movwf	i2___fladd@a+2,c
 52055  019044  0EBF               	movlw	191
 52056  019046  6E5D               	movwf	i2___fladd@a+3,c
 52057  019048  EC10  F0B1         	call	i2___fladd	;wreg free
 52058  01904C  C056  F076         	movff	?i2___fladd,?_floor
 52059  019050  C057  F077         	movff	?i2___fladd+1,?_floor+1
 52060  019054  C058  F078         	movff	?i2___fladd+2,?_floor+2
 52061  019058  C059  F079         	movff	?i2___fladd+3,?_floor+3
 52062  01905C  0012               	return	
 52063  01905E                     i2l2956:
 52064  01905E  C07A  F076         	movff	floor@i,?_floor
 52065  019062  C07B  F077         	movff	floor@i+1,?_floor+1
 52066  019066  C07C  F078         	movff	floor@i+2,?_floor+2
 52067  01906A  C07D  F079         	movff	floor@i+3,?_floor+3
 52068  01906E  0012               	return		;funcret
 52069  019070                     __end_of_floor:
 52070                           	opt stack 0
 52071                           tosu	equ	0xFFF
 52072                           tosh	equ	0xFFE
 52073                           tosl	equ	0xFFD
 52074                           pclatu	equ	0xFFB
 52075                           pclath	equ	0xFFA
 52076                           tblptru	equ	0xFF8
 52077                           tblptrh	equ	0xFF7
 52078                           tblptrl	equ	0xFF6
 52079                           tablat	equ	0xFF5
 52080                           prodh	equ	0xFF4
 52081                           prodl	equ	0xFF3
 52082                           intcon	equ	0xFF2
 52083                           indf0	equ	0xFEF
 52084                           postinc0	equ	0xFEE
 52085                           fsr0h	equ	0xFEA
 52086                           fsr0l	equ	0xFE9
 52087                           wreg	equ	0xFE8
 52088                           indf1	equ	0xFE7
 52089                           postdec1	equ	0xFE5
 52090                           plusw1	equ	0xFE3
 52091                           fsr1h	equ	0xFE2
 52092                           fsr1l	equ	0xFE1
 52093                           bsr	equ	0xFE0
 52094                           indf2	equ	0xFDF
 52095                           postinc2	equ	0xFDE
 52096                           postdec2	equ	0xFDD
 52097                           plusw2	equ	0xFDB
 52098                           fsr2h	equ	0xFDA
 52099                           fsr2l	equ	0xFD9
 52100                           status	equ	0xFD8
 52101                           
 52102 ;; *************** function i2___xxtofl *****************
 52103 ;; Defined at:
 52104 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 52105 ;; Parameters:    Size  Location     Type
 52106 ;;  sign            1    wreg     unsigned char 
 52107 ;;  val             4    4[COMRAM] long 
 52108 ;; Auto vars:     Size  Location     Type
 52109 ;;  sign            1   12[COMRAM] unsigned char 
 52110 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 52111 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 52112 ;; Return value:  Size  Location     Type
 52113 ;;                  4    4[COMRAM] unsigned char 
 52114 ;; Registers used:
 52115 ;;		wreg, status,2, status,0
 52116 ;; Tracked objects:
 52117 ;;		On entry : 0/0
 52118 ;;		On exit  : 0/0
 52119 ;;		Unchanged: 0/0
 52120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52122 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52123 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52124 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52125 ;;Total ram usage:       14 bytes
 52126 ;; Hardware stack levels used:    1
 52127 ;; This function calls:
 52128 ;;		Nothing
 52129 ;; This function is called by:
 52130 ;;		_ADCPostProcessingCallback
 52131 ;;		_floor
 52132 ;;		i2__doprnt
 52133 ;; This function uses a non-reentrant model
 52134 ;;
 52135                           
 52136                           	psect	text162
 52137  018394                     __ptext162:
 52138                           	opt stack 0
 52139  018394                     i2___xxtofl:
 52140                           	opt stack 14
 52141                           
 52142                           ;incstack = 0
 52143                           ;i2___xxtofl@sign stored from wreg
 52144  018394  6E0D               	movwf	i2___xxtofl@sign,c
 52145  018396  500D               	movf	i2___xxtofl@sign,w,c
 52146  018398  A4D8               	btfss	status,2,c
 52147  01839A  AE08               	btfss	i2___xxtofl@val+3,7,c
 52148  01839C  D01A               	goto	i2l2931
 52149  01839E  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 52150  0183A2  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 52151  0183A6  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 52152  0183AA  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 52153  0183AE  1E09               	comf	??i2___xxtofl,f,c
 52154  0183B0  1E0A               	comf	??i2___xxtofl+1,f,c
 52155  0183B2  1E0B               	comf	??i2___xxtofl+2,f,c
 52156  0183B4  1E0C               	comf	??i2___xxtofl+3,f,c
 52157  0183B6  2A09               	incf	??i2___xxtofl,f,c
 52158  0183B8  0E00               	movlw	0
 52159  0183BA  220A               	addwfc	??i2___xxtofl+1,f,c
 52160  0183BC  220B               	addwfc	??i2___xxtofl+2,f,c
 52161  0183BE  220C               	addwfc	??i2___xxtofl+3,f,c
 52162  0183C0  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 52163  0183C4  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 52164  0183C8  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 52165  0183CC  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 52166  0183D0  D008               	goto	i2l2932
 52167  0183D2                     i2l2931:
 52168  0183D2  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 52169  0183D6  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 52170  0183DA  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 52171  0183DE  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 52172  0183E2                     i2l2932:
 52173  0183E2  5005               	movf	i2___xxtofl@val,w,c
 52174  0183E4  1006               	iorwf	i2___xxtofl@val+1,w,c
 52175  0183E6  1007               	iorwf	i2___xxtofl@val+2,w,c
 52176  0183E8  1008               	iorwf	i2___xxtofl@val+3,w,c
 52177  0183EA  A4D8               	btfss	status,2,c
 52178  0183EC  D009               	goto	i2l2933
 52179  0183EE  0E00               	movlw	0
 52180  0183F0  6E05               	movwf	?i2___xxtofl,c
 52181  0183F2  0E00               	movlw	0
 52182  0183F4  6E06               	movwf	?i2___xxtofl+1,c
 52183  0183F6  0E00               	movlw	0
 52184  0183F8  6E07               	movwf	?i2___xxtofl+2,c
 52185  0183FA  0E00               	movlw	0
 52186  0183FC  6E08               	movwf	?i2___xxtofl+3,c
 52187  0183FE  0012               	return	
 52188  018400                     i2l2933:
 52189  018400  0E96               	movlw	150
 52190  018402  6E0E               	movwf	i2___xxtofl@exp,c
 52191  018404  D006               	goto	i2l2935
 52192  018406  2A0E               	incf	i2___xxtofl@exp,f,c
 52193  018408  90D8               	bcf	status,0,c
 52194  01840A  3212               	rrcf	i2___xxtofl@arg+3,f,c
 52195  01840C  3211               	rrcf	i2___xxtofl@arg+2,f,c
 52196  01840E  3210               	rrcf	i2___xxtofl@arg+1,f,c
 52197  018410  320F               	rrcf	i2___xxtofl@arg,f,c
 52198  018412                     i2l2935:
 52199  018412  0E00               	movlw	0
 52200  018414  140F               	andwf	i2___xxtofl@arg,w,c
 52201  018416  6E09               	movwf	??i2___xxtofl& (0+255),c
 52202  018418  0E00               	movlw	0
 52203  01841A  1410               	andwf	i2___xxtofl@arg+1,w,c
 52204  01841C  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 52205  01841E  0E00               	movlw	0
 52206  018420  1411               	andwf	i2___xxtofl@arg+2,w,c
 52207  018422  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 52208  018424  0EFE               	movlw	254
 52209  018426  1412               	andwf	i2___xxtofl@arg+3,w,c
 52210  018428  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 52211  01842A  5009               	movf	??i2___xxtofl,w,c
 52212  01842C  100A               	iorwf	??i2___xxtofl+1,w,c
 52213  01842E  100B               	iorwf	??i2___xxtofl+2,w,c
 52214  018430  100C               	iorwf	??i2___xxtofl+3,w,c
 52215  018432  B4D8               	btfsc	status,2,c
 52216  018434  D00D               	goto	i2l2938
 52217  018436  D7E7               	goto	i2l2936
 52218  018438  2A0E               	incf	i2___xxtofl@exp,f,c
 52219  01843A  0E01               	movlw	1
 52220  01843C  260F               	addwf	i2___xxtofl@arg,f,c
 52221  01843E  0E00               	movlw	0
 52222  018440  2210               	addwfc	i2___xxtofl@arg+1,f,c
 52223  018442  2211               	addwfc	i2___xxtofl@arg+2,f,c
 52224  018444  2212               	addwfc	i2___xxtofl@arg+3,f,c
 52225  018446  90D8               	bcf	status,0,c
 52226  018448  3212               	rrcf	i2___xxtofl@arg+3,f,c
 52227  01844A  3211               	rrcf	i2___xxtofl@arg+2,f,c
 52228  01844C  3210               	rrcf	i2___xxtofl@arg+1,f,c
 52229  01844E  320F               	rrcf	i2___xxtofl@arg,f,c
 52230  018450                     i2l2938:
 52231  018450  0E00               	movlw	0
 52232  018452  140F               	andwf	i2___xxtofl@arg,w,c
 52233  018454  6E09               	movwf	??i2___xxtofl& (0+255),c
 52234  018456  0E00               	movlw	0
 52235  018458  1410               	andwf	i2___xxtofl@arg+1,w,c
 52236  01845A  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 52237  01845C  0E00               	movlw	0
 52238  01845E  1411               	andwf	i2___xxtofl@arg+2,w,c
 52239  018460  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 52240  018462  0EFF               	movlw	255
 52241  018464  1412               	andwf	i2___xxtofl@arg+3,w,c
 52242  018466  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 52243  018468  5009               	movf	??i2___xxtofl,w,c
 52244  01846A  100A               	iorwf	??i2___xxtofl+1,w,c
 52245  01846C  100B               	iorwf	??i2___xxtofl+2,w,c
 52246  01846E  100C               	iorwf	??i2___xxtofl+3,w,c
 52247  018470  B4D8               	btfsc	status,2,c
 52248  018472  D007               	goto	i2l2941
 52249  018474  D7E1               	goto	i2l2939
 52250  018476  060E               	decf	i2___xxtofl@exp,f,c
 52251  018478  90D8               	bcf	status,0,c
 52252  01847A  360F               	rlcf	i2___xxtofl@arg,f,c
 52253  01847C  3610               	rlcf	i2___xxtofl@arg+1,f,c
 52254  01847E  3611               	rlcf	i2___xxtofl@arg+2,f,c
 52255  018480  3612               	rlcf	i2___xxtofl@arg+3,f,c
 52256  018482                     i2l2941:
 52257  018482  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 52258  018484  D003               	goto	i2u2025_40
 52259  018486  0E02               	movlw	2
 52260  018488  600E               	cpfslt	i2___xxtofl@exp,c
 52261  01848A  D7F5               	goto	i2l2942
 52262  01848C                     i2u2025_40:
 52263  01848C  B00E               	btfsc	i2___xxtofl@exp,0,c
 52264  01848E  D008               	goto	i2l2946
 52265  018490  0EFF               	movlw	255
 52266  018492  160F               	andwf	i2___xxtofl@arg,f,c
 52267  018494  0EFF               	movlw	255
 52268  018496  1610               	andwf	i2___xxtofl@arg+1,f,c
 52269  018498  0E7F               	movlw	127
 52270  01849A  1611               	andwf	i2___xxtofl@arg+2,f,c
 52271  01849C  0EFF               	movlw	255
 52272  01849E  1612               	andwf	i2___xxtofl@arg+3,f,c
 52273  0184A0                     i2l2946:
 52274  0184A0  90D8               	bcf	status,0,c
 52275  0184A2  320E               	rrcf	i2___xxtofl@exp,f,c
 52276  0184A4  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 52277  0184A8  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 52278  0184AA  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 52279  0184AC  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 52280  0184AE  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 52281  0184B2  6A0B               	clrf	??i2___xxtofl+2,c
 52282  0184B4  6A0A               	clrf	??i2___xxtofl+1,c
 52283  0184B6  6A09               	clrf	??i2___xxtofl,c
 52284  0184B8  5009               	movf	??i2___xxtofl,w,c
 52285  0184BA  120F               	iorwf	i2___xxtofl@arg,f,c
 52286  0184BC  500A               	movf	??i2___xxtofl+1,w,c
 52287  0184BE  1210               	iorwf	i2___xxtofl@arg+1,f,c
 52288  0184C0  500B               	movf	??i2___xxtofl+2,w,c
 52289  0184C2  1211               	iorwf	i2___xxtofl@arg+2,f,c
 52290  0184C4  500C               	movf	??i2___xxtofl+3,w,c
 52291  0184C6  1212               	iorwf	i2___xxtofl@arg+3,f,c
 52292  0184C8  500D               	movf	i2___xxtofl@sign,w,c
 52293  0184CA  A4D8               	btfss	status,2,c
 52294  0184CC  AE08               	btfss	i2___xxtofl@val+3,7,c
 52295  0184CE  D001               	goto	i2l2947
 52296  0184D0  8E12               	bsf	i2___xxtofl@arg+3,7,c
 52297  0184D2                     i2l2947:
 52298  0184D2  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 52299  0184D6  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 52300  0184DA  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 52301  0184DE  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 52302  0184E2  0012               	return	
 52303  0184E4                     __end_ofi2___xxtofl:
 52304                           	opt stack 0
 52305                           tosu	equ	0xFFF
 52306                           tosh	equ	0xFFE
 52307                           tosl	equ	0xFFD
 52308                           pclatu	equ	0xFFB
 52309                           pclath	equ	0xFFA
 52310                           tblptru	equ	0xFF8
 52311                           tblptrh	equ	0xFF7
 52312                           tblptrl	equ	0xFF6
 52313                           tablat	equ	0xFF5
 52314                           prodh	equ	0xFF4
 52315                           prodl	equ	0xFF3
 52316                           intcon	equ	0xFF2
 52317                           indf0	equ	0xFEF
 52318                           postinc0	equ	0xFEE
 52319                           fsr0h	equ	0xFEA
 52320                           fsr0l	equ	0xFE9
 52321                           wreg	equ	0xFE8
 52322                           indf1	equ	0xFE7
 52323                           postdec1	equ	0xFE5
 52324                           plusw1	equ	0xFE3
 52325                           fsr1h	equ	0xFE2
 52326                           fsr1l	equ	0xFE1
 52327                           bsr	equ	0xFE0
 52328                           indf2	equ	0xFDF
 52329                           postinc2	equ	0xFDE
 52330                           postdec2	equ	0xFDD
 52331                           plusw2	equ	0xFDB
 52332                           fsr2h	equ	0xFDA
 52333                           fsr2l	equ	0xFD9
 52334                           status	equ	0xFD8
 52335                           
 52336 ;; *************** function i2___fltol *****************
 52337 ;; Defined at:
 52338 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 52339 ;; Parameters:    Size  Location     Type
 52340 ;;  f1              4   12[BANK0 ] unsigned char 
 52341 ;; Auto vars:     Size  Location     Type
 52342 ;;  __fltol         1   21[BANK0 ] unsigned char 
 52343 ;;  __fltol         1   20[BANK0 ] unsigned char 
 52344 ;; Return value:  Size  Location     Type
 52345 ;;                  4   12[BANK0 ] long 
 52346 ;; Registers used:
 52347 ;;		wreg, status,2, status,0
 52348 ;; Tracked objects:
 52349 ;;		On entry : 0/0
 52350 ;;		On exit  : 0/0
 52351 ;;		Unchanged: 0/0
 52352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52354 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52355 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52356 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52357 ;;Total ram usage:       10 bytes
 52358 ;; Hardware stack levels used:    1
 52359 ;; This function calls:
 52360 ;;		Nothing
 52361 ;; This function is called by:
 52362 ;;		_ADCPostProcessingCallback
 52363 ;;		_floor
 52364 ;;		i2__doprnt
 52365 ;; This function uses a non-reentrant model
 52366 ;;
 52367                           
 52368                           	psect	text163
 52369  019356                     __ptext163:
 52370                           	opt stack 0
 52371  019356                     i2___fltol:
 52372                           	opt stack 14
 52373                           
 52374                           ;incstack = 0
 52375  019356  0100               	movlb	0	; () banked
 52376  019358  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 52377  01935A  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 52378  01935C  6F75               	movwf	i2___fltol@exp1& (0+255),b
 52379  01935E  5175               	movf	i2___fltol@exp1& (0+255),w,b
 52380  019360  A4D8               	btfss	status,2,c
 52381  019362  D009               	goto	i2l2450
 52382                           
 52383                           ; BSR set to: 0
 52384  019364  0E00               	movlw	0
 52385  019366  6F6C               	movwf	?i2___fltol& (0+255),b
 52386  019368  0E00               	movlw	0
 52387  01936A  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 52388  01936C  0E00               	movlw	0
 52389  01936E  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 52390  019370  0E00               	movlw	0
 52391  019372  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 52392                           
 52393                           ; BSR set to: 0
 52394  019374  0012               	return	
 52395  019376                     i2l2450:
 52396                           
 52397                           ; BSR set to: 0
 52398                           
 52399                           ; BSR set to: 0
 52400  019376  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 52401  01937A  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 52402  01937E  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 52403  019382  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 52404  019386  0E20               	movlw	32
 52405  019388  D005               	goto	i2u2013_40
 52406  01938A                     i2u2013_45:
 52407  01938A  90D8               	bcf	status,0,c
 52408  01938C  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 52409  01938E  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 52410  019390  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 52411  019392  3370               	rrcf	??i2___fltol& (0+255),f,b
 52412  019394                     i2u2013_40:
 52413  019394  2EE8               	decfsz	wreg,f,c
 52414  019396  D7F9               	goto	i2u2013_45
 52415  019398  5170               	movf	??i2___fltol& (0+255),w,b
 52416  01939A  6F74               	movwf	i2___fltol@sign1& (0+255),b
 52417                           
 52418                           ; BSR set to: 0
 52419  01939C  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 52420                           
 52421                           ; BSR set to: 0
 52422  01939E  0EFF               	movlw	255
 52423  0193A0  176C               	andwf	i2___fltol@f1& (0+255),f,b
 52424  0193A2  0EFF               	movlw	255
 52425  0193A4  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 52426  0193A6  0EFF               	movlw	255
 52427  0193A8  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 52428  0193AA  0E00               	movlw	0
 52429  0193AC  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 52430                           
 52431                           ; BSR set to: 0
 52432  0193AE  0E96               	movlw	150
 52433  0193B0  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 52434                           
 52435                           ; BSR set to: 0
 52436  0193B2  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 52437  0193B4  D016               	goto	i2l2452
 52438                           
 52439                           ; BSR set to: 0
 52440  0193B6  5175               	movf	i2___fltol@exp1& (0+255),w,b
 52441  0193B8  0A80               	xorlw	128
 52442  0193BA  0F97               	addlw	151
 52443  0193BC  B0D8               	btfsc	status,0,c
 52444  0193BE  D009               	goto	i2l2453
 52445                           
 52446                           ; BSR set to: 0
 52447  0193C0  0E00               	movlw	0
 52448  0193C2  6F6C               	movwf	?i2___fltol& (0+255),b
 52449  0193C4  0E00               	movlw	0
 52450  0193C6  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 52451  0193C8  0E00               	movlw	0
 52452  0193CA  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 52453  0193CC  0E00               	movlw	0
 52454  0193CE  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 52455                           
 52456                           ; BSR set to: 0
 52457  0193D0  0012               	return	
 52458  0193D2                     i2l2453:
 52459                           
 52460                           ; BSR set to: 0
 52461                           
 52462                           ; BSR set to: 0
 52463                           
 52464                           ; BSR set to: 0
 52465  0193D2  90D8               	bcf	status,0,c
 52466  0193D4  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 52467  0193D6  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 52468  0193D8  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 52469  0193DA  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 52470                           
 52471                           ; BSR set to: 0
 52472  0193DC  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 52473  0193DE  D7F9               	goto	i2l2453
 52474                           
 52475                           ; BSR set to: 0
 52476  0193E0  D015               	goto	i2u2017_40
 52477  0193E2                     i2l2452:
 52478                           
 52479                           ; BSR set to: 0
 52480                           
 52481                           ; BSR set to: 0
 52482  0193E2  0E1F               	movlw	31
 52483  0193E4  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 52484  0193E6  D00F               	goto	i2l2458
 52485                           
 52486                           ; BSR set to: 0
 52487  0193E8  0E00               	movlw	0
 52488  0193EA  6F6C               	movwf	?i2___fltol& (0+255),b
 52489  0193EC  0E00               	movlw	0
 52490  0193EE  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 52491  0193F0  0E00               	movlw	0
 52492  0193F2  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 52493  0193F4  0E00               	movlw	0
 52494  0193F6  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 52495                           
 52496                           ; BSR set to: 0
 52497  0193F8  0012               	return	
 52498  0193FA                     
 52499                           ; BSR set to: 0
 52500                           
 52501                           ; BSR set to: 0
 52502  0193FA  90D8               	bcf	status,0,c
 52503  0193FC  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 52504  0193FE  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 52505  019400  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 52506  019402  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 52507  019404  0775               	decf	i2___fltol@exp1& (0+255),f,b
 52508  019406                     i2l2458:
 52509                           
 52510                           ; BSR set to: 0
 52511                           
 52512                           ; BSR set to: 0
 52513  019406  5175               	movf	i2___fltol@exp1& (0+255),w,b
 52514  019408  A4D8               	btfss	status,2,c
 52515  01940A  D7F7               	goto	i2l2459
 52516  01940C                     i2u2017_40:
 52517                           
 52518                           ; BSR set to: 0
 52519                           
 52520                           ; BSR set to: 0
 52521                           
 52522                           ; BSR set to: 0
 52523  01940C  5174               	movf	i2___fltol@sign1& (0+255),w,b
 52524  01940E  B4D8               	btfsc	status,2,c
 52525  019410  D008               	goto	i2l2461
 52526                           
 52527                           ; BSR set to: 0
 52528  019412  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 52529  019414  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 52530  019416  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 52531  019418  6D6C               	negf	i2___fltol@f1& (0+255),b
 52532  01941A  0E00               	movlw	0
 52533  01941C  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 52534  01941E  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 52535  019420  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 52536  019422                     i2l2461:
 52537                           
 52538                           ; BSR set to: 0
 52539                           
 52540                           ; BSR set to: 0
 52541  019422  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 52542  019426  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 52543  01942A  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 52544  01942E  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 52545  019432  0012               	return	
 52546  019434                     __end_ofi2___fltol:
 52547                           	opt stack 0
 52548                           tosu	equ	0xFFF
 52549                           tosh	equ	0xFFE
 52550                           tosl	equ	0xFFD
 52551                           pclatu	equ	0xFFB
 52552                           pclath	equ	0xFFA
 52553                           tblptru	equ	0xFF8
 52554                           tblptrh	equ	0xFF7
 52555                           tblptrl	equ	0xFF6
 52556                           tablat	equ	0xFF5
 52557                           prodh	equ	0xFF4
 52558                           prodl	equ	0xFF3
 52559                           intcon	equ	0xFF2
 52560                           indf0	equ	0xFEF
 52561                           postinc0	equ	0xFEE
 52562                           fsr0h	equ	0xFEA
 52563                           fsr0l	equ	0xFE9
 52564                           wreg	equ	0xFE8
 52565                           indf1	equ	0xFE7
 52566                           postdec1	equ	0xFE5
 52567                           plusw1	equ	0xFE3
 52568                           fsr1h	equ	0xFE2
 52569                           fsr1l	equ	0xFE1
 52570                           bsr	equ	0xFE0
 52571                           indf2	equ	0xFDF
 52572                           postinc2	equ	0xFDE
 52573                           postdec2	equ	0xFDD
 52574                           plusw2	equ	0xFDB
 52575                           fsr2h	equ	0xFDA
 52576                           fsr2l	equ	0xFD9
 52577                           status	equ	0xFD8
 52578                           
 52579 ;; *************** function i2___flge *****************
 52580 ;; Defined at:
 52581 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 52582 ;; Parameters:    Size  Location     Type
 52583 ;;  ff1             4   51[COMRAM] long 
 52584 ;;  ff2             4   55[COMRAM] long 
 52585 ;; Auto vars:     Size  Location     Type
 52586 ;;		None
 52587 ;; Return value:  Size  Location     Type
 52588 ;;		None               void
 52589 ;; Registers used:
 52590 ;;		wreg, status,2, status,0
 52591 ;; Tracked objects:
 52592 ;;		On entry : 0/0
 52593 ;;		On exit  : 0/0
 52594 ;;		Unchanged: 0/0
 52595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52596 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52598 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52599 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52600 ;;Total ram usage:       12 bytes
 52601 ;; Hardware stack levels used:    1
 52602 ;; This function calls:
 52603 ;;		Nothing
 52604 ;; This function is called by:
 52605 ;;		_ADCPostProcessingCallback
 52606 ;;		_writeEnergyToEEPROMCallback
 52607 ;;		_asin
 52608 ;;		_atan
 52609 ;;		_sin
 52610 ;;		_floor
 52611 ;;		i2__doprnt
 52612 ;; This function uses a non-reentrant model
 52613 ;;
 52614                           
 52615                           	psect	text164
 52616  018E3E                     __ptext164:
 52617                           	opt stack 0
 52618  018E3E                     i2___flge:
 52619                           	opt stack 14
 52620                           
 52621                           ; BSR set to: 0
 52622                           ;incstack = 0
 52623  018E3E  0E00               	movlw	0
 52624  018E40  1434               	andwf	i2___flge@ff1,w,c
 52625  018E42  6E3C               	movwf	??i2___flge& (0+255),c
 52626  018E44  0E00               	movlw	0
 52627  018E46  1435               	andwf	i2___flge@ff1+1,w,c
 52628  018E48  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 52629  018E4A  0E80               	movlw	128
 52630  018E4C  1436               	andwf	i2___flge@ff1+2,w,c
 52631  018E4E  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 52632  018E50  0E7F               	movlw	127
 52633  018E52  1437               	andwf	i2___flge@ff1+3,w,c
 52634  018E54  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 52635  018E56  503C               	movf	??i2___flge,w,c
 52636  018E58  103D               	iorwf	??i2___flge+1,w,c
 52637  018E5A  103E               	iorwf	??i2___flge+2,w,c
 52638  018E5C  103F               	iorwf	??i2___flge+3,w,c
 52639  018E5E  A4D8               	btfss	status,2,c
 52640  018E60  D008               	goto	i2l2420
 52641  018E62  0E00               	movlw	0
 52642  018E64  6E34               	movwf	i2___flge@ff1,c
 52643  018E66  0E00               	movlw	0
 52644  018E68  6E35               	movwf	i2___flge@ff1+1,c
 52645  018E6A  0E00               	movlw	0
 52646  018E6C  6E36               	movwf	i2___flge@ff1+2,c
 52647  018E6E  0E00               	movlw	0
 52648  018E70  6E37               	movwf	i2___flge@ff1+3,c
 52649  018E72                     i2l2420:
 52650  018E72  0E00               	movlw	0
 52651  018E74  1438               	andwf	i2___flge@ff2,w,c
 52652  018E76  6E3C               	movwf	??i2___flge& (0+255),c
 52653  018E78  0E00               	movlw	0
 52654  018E7A  1439               	andwf	i2___flge@ff2+1,w,c
 52655  018E7C  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 52656  018E7E  0E80               	movlw	128
 52657  018E80  143A               	andwf	i2___flge@ff2+2,w,c
 52658  018E82  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 52659  018E84  0E7F               	movlw	127
 52660  018E86  143B               	andwf	i2___flge@ff2+3,w,c
 52661  018E88  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 52662  018E8A  503C               	movf	??i2___flge,w,c
 52663  018E8C  103D               	iorwf	??i2___flge+1,w,c
 52664  018E8E  103E               	iorwf	??i2___flge+2,w,c
 52665  018E90  103F               	iorwf	??i2___flge+3,w,c
 52666  018E92  A4D8               	btfss	status,2,c
 52667  018E94  D008               	goto	i2l2421
 52668  018E96  0E00               	movlw	0
 52669  018E98  6E38               	movwf	i2___flge@ff2,c
 52670  018E9A  0E00               	movlw	0
 52671  018E9C  6E39               	movwf	i2___flge@ff2+1,c
 52672  018E9E  0E00               	movlw	0
 52673  018EA0  6E3A               	movwf	i2___flge@ff2+2,c
 52674  018EA2  0E00               	movlw	0
 52675  018EA4  6E3B               	movwf	i2___flge@ff2+3,c
 52676  018EA6                     i2l2421:
 52677  018EA6  AE37               	btfss	i2___flge@ff1+3,7,c
 52678  018EA8  D01D               	goto	i2l2422
 52679  018EAA  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 52680  018EAE  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 52681  018EB2  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 52682  018EB6  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 52683  018EBA  1E3C               	comf	??i2___flge,f,c
 52684  018EBC  1E3D               	comf	??i2___flge+1,f,c
 52685  018EBE  1E3E               	comf	??i2___flge+2,f,c
 52686  018EC0  1E3F               	comf	??i2___flge+3,f,c
 52687  018EC2  2A3C               	incf	??i2___flge,f,c
 52688  018EC4  0E00               	movlw	0
 52689  018EC6  223D               	addwfc	??i2___flge+1,f,c
 52690  018EC8  223E               	addwfc	??i2___flge+2,f,c
 52691  018ECA  223F               	addwfc	??i2___flge+3,f,c
 52692  018ECC  0E00               	movlw	0
 52693  018ECE  243C               	addwf	??i2___flge,w,c
 52694  018ED0  6E34               	movwf	i2___flge@ff1,c
 52695  018ED2  0E00               	movlw	0
 52696  018ED4  203D               	addwfc	??i2___flge+1,w,c
 52697  018ED6  6E35               	movwf	i2___flge@ff1+1,c
 52698  018ED8  0E00               	movlw	0
 52699  018EDA  203E               	addwfc	??i2___flge+2,w,c
 52700  018EDC  6E36               	movwf	i2___flge@ff1+2,c
 52701  018EDE  0E80               	movlw	128
 52702  018EE0  203F               	addwfc	??i2___flge+3,w,c
 52703  018EE2  6E37               	movwf	i2___flge@ff1+3,c
 52704  018EE4                     i2l2422:
 52705  018EE4  AE3B               	btfss	i2___flge@ff2+3,7,c
 52706  018EE6  D01D               	goto	i2l2423
 52707  018EE8  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 52708  018EEC  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 52709  018EF0  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 52710  018EF4  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 52711  018EF8  1E3C               	comf	??i2___flge,f,c
 52712  018EFA  1E3D               	comf	??i2___flge+1,f,c
 52713  018EFC  1E3E               	comf	??i2___flge+2,f,c
 52714  018EFE  1E3F               	comf	??i2___flge+3,f,c
 52715  018F00  2A3C               	incf	??i2___flge,f,c
 52716  018F02  0E00               	movlw	0
 52717  018F04  223D               	addwfc	??i2___flge+1,f,c
 52718  018F06  223E               	addwfc	??i2___flge+2,f,c
 52719  018F08  223F               	addwfc	??i2___flge+3,f,c
 52720  018F0A  0E00               	movlw	0
 52721  018F0C  243C               	addwf	??i2___flge,w,c
 52722  018F0E  6E38               	movwf	i2___flge@ff2,c
 52723  018F10  0E00               	movlw	0
 52724  018F12  203D               	addwfc	??i2___flge+1,w,c
 52725  018F14  6E39               	movwf	i2___flge@ff2+1,c
 52726  018F16  0E00               	movlw	0
 52727  018F18  203E               	addwfc	??i2___flge+2,w,c
 52728  018F1A  6E3A               	movwf	i2___flge@ff2+2,c
 52729  018F1C  0E80               	movlw	128
 52730  018F1E  203F               	addwfc	??i2___flge+3,w,c
 52731  018F20  6E3B               	movwf	i2___flge@ff2+3,c
 52732  018F22                     i2l2423:
 52733  018F22  0E00               	movlw	0
 52734  018F24  1A34               	xorwf	i2___flge@ff1,f,c
 52735  018F26  0E00               	movlw	0
 52736  018F28  1A35               	xorwf	i2___flge@ff1+1,f,c
 52737  018F2A  0E00               	movlw	0
 52738  018F2C  1A36               	xorwf	i2___flge@ff1+2,f,c
 52739  018F2E  0E80               	movlw	128
 52740  018F30  1A37               	xorwf	i2___flge@ff1+3,f,c
 52741  018F32  0E00               	movlw	0
 52742  018F34  1A38               	xorwf	i2___flge@ff2,f,c
 52743  018F36  0E00               	movlw	0
 52744  018F38  1A39               	xorwf	i2___flge@ff2+1,f,c
 52745  018F3A  0E00               	movlw	0
 52746  018F3C  1A3A               	xorwf	i2___flge@ff2+2,f,c
 52747  018F3E  0E80               	movlw	128
 52748  018F40  1A3B               	xorwf	i2___flge@ff2+3,f,c
 52749  018F42  5038               	movf	i2___flge@ff2,w,c
 52750  018F44  5C34               	subwf	i2___flge@ff1,w,c
 52751  018F46  5039               	movf	i2___flge@ff2+1,w,c
 52752  018F48  5835               	subwfb	i2___flge@ff1+1,w,c
 52753  018F4A  503A               	movf	i2___flge@ff2+2,w,c
 52754  018F4C  5836               	subwfb	i2___flge@ff1+2,w,c
 52755  018F4E  503B               	movf	i2___flge@ff2+3,w,c
 52756  018F50  5837               	subwfb	i2___flge@ff1+3,w,c
 52757  018F52  B0D8               	btfsc	status,0,c
 52758  018F54  D002               	goto	i2l13801
 52759  018F56  90D8               	bcf	status,0,c
 52760  018F58  0012               	return	
 52761  018F5A                     i2l13801:
 52762  018F5A  80D8               	bsf	status,0,c
 52763  018F5C  0012               	return	
 52764  018F5E                     __end_ofi2___flge:
 52765                           	opt stack 0
 52766                           tosu	equ	0xFFF
 52767                           tosh	equ	0xFFE
 52768                           tosl	equ	0xFFD
 52769                           pclatu	equ	0xFFB
 52770                           pclath	equ	0xFFA
 52771                           tblptru	equ	0xFF8
 52772                           tblptrh	equ	0xFF7
 52773                           tblptrl	equ	0xFF6
 52774                           tablat	equ	0xFF5
 52775                           prodh	equ	0xFF4
 52776                           prodl	equ	0xFF3
 52777                           intcon	equ	0xFF2
 52778                           indf0	equ	0xFEF
 52779                           postinc0	equ	0xFEE
 52780                           fsr0h	equ	0xFEA
 52781                           fsr0l	equ	0xFE9
 52782                           wreg	equ	0xFE8
 52783                           indf1	equ	0xFE7
 52784                           postdec1	equ	0xFE5
 52785                           plusw1	equ	0xFE3
 52786                           fsr1h	equ	0xFE2
 52787                           fsr1l	equ	0xFE1
 52788                           bsr	equ	0xFE0
 52789                           indf2	equ	0xFDF
 52790                           postinc2	equ	0xFDE
 52791                           postdec2	equ	0xFDD
 52792                           plusw2	equ	0xFDB
 52793                           fsr2h	equ	0xFDA
 52794                           fsr2l	equ	0xFD9
 52795                           status	equ	0xFD8
 52796                           
 52797 ;; *************** function _frexp *****************
 52798 ;; Defined at:
 52799 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 52800 ;; Parameters:    Size  Location     Type
 52801 ;;  value           4    0[COMRAM] long 
 52802 ;;  eptr            2    4[COMRAM] PTR int 
 52803 ;;		 -> floor@expon(2), 
 52804 ;; Auto vars:     Size  Location     Type
 52805 ;;		None
 52806 ;; Return value:  Size  Location     Type
 52807 ;;                  4    0[COMRAM] PTR int 
 52808 ;; Registers used:
 52809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52810 ;; Tracked objects:
 52811 ;;		On entry : 0/0
 52812 ;;		On exit  : 0/0
 52813 ;;		Unchanged: 0/0
 52814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52815 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52817 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52818 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52819 ;;Total ram usage:        8 bytes
 52820 ;; Hardware stack levels used:    1
 52821 ;; This function calls:
 52822 ;;		Nothing
 52823 ;; This function is called by:
 52824 ;;		_floor
 52825 ;; This function uses a non-reentrant model
 52826 ;;
 52827                           
 52828                           	psect	text165
 52829  019DF0                     __ptext165:
 52830                           	opt stack 0
 52831  019DF0                     _frexp:
 52832                           	opt stack 12
 52833                           
 52834                           ;incstack = 0
 52835  019DF0  5001               	movf	frexp@value,w,c
 52836  019DF2  1002               	iorwf	frexp@value+1,w,c
 52837  019DF4  1003               	iorwf	frexp@value+2,w,c
 52838  019DF6  1004               	iorwf	frexp@value+3,w,c
 52839  019DF8  A4D8               	btfss	status,2,c
 52840  019DFA  D009               	goto	i2l2961
 52841  019DFC  C005  FFD9         	movff	frexp@eptr,fsr2l
 52842  019E00  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52843  019E04  0E00               	movlw	0
 52844  019E06  6EDE               	movwf	postinc2,c
 52845  019E08  0E00               	movlw	0
 52846  019E0A  6EDD               	movwf	postdec2,c
 52847                           
 52848                           ;	Return value of _frexp is never used
 52849  019E0C  0012               	return	
 52850  019E0E                     i2l2961:
 52851  019E0E  5004               	movf	frexp@value+3,w,c
 52852  019E10  0B7F               	andlw	127
 52853  019E12  6E07               	movwf	??_frexp& (0+255),c
 52854  019E14  6A08               	clrf	(??_frexp+1)& (0+255),c
 52855  019E16  90D8               	bcf	status,0,c
 52856  019E18  3607               	rlcf	??_frexp,f,c
 52857  019E1A  3608               	rlcf	??_frexp+1,f,c
 52858  019E1C  C005  FFD9         	movff	frexp@eptr,fsr2l
 52859  019E20  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52860  019E24  C007  FFDE         	movff	??_frexp,postinc2
 52861  019E28  C008  FFDD         	movff	??_frexp+1,postdec2
 52862  019E2C  AE03               	btfss	frexp@value+2,7,c
 52863  019E2E  D003               	goto	i2u1203_40
 52864  019E30  6A07               	clrf	??_frexp& (0+255),c
 52865  019E32  2A07               	incf	??_frexp& (0+255),f,c
 52866  019E34  D001               	goto	i2u1203_48
 52867  019E36                     i2u1203_40:
 52868  019E36  6A07               	clrf	??_frexp& (0+255),c
 52869  019E38                     i2u1203_48:
 52870  019E38  5007               	movf	??_frexp,w,c
 52871  019E3A  C005  FFD9         	movff	frexp@eptr,fsr2l
 52872  019E3E  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52873  019E42  12DE               	iorwf	postinc2,f,c
 52874  019E44  0E00               	movlw	0
 52875  019E46  12DD               	iorwf	postdec2,f,c
 52876  019E48  C005  FFD9         	movff	frexp@eptr,fsr2l
 52877  019E4C  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52878  019E50  0E82               	movlw	130
 52879  019E52  26DE               	addwf	postinc2,f,c
 52880  019E54  0EFF               	movlw	255
 52881  019E56  22DD               	addwfc	postdec2,f,c
 52882  019E58  8004               	bsf	frexp@value+3,0,c
 52883  019E5A  8204               	bsf	frexp@value+3,1,c
 52884  019E5C  8404               	bsf	frexp@value+3,2,c
 52885  019E5E  8604               	bsf	frexp@value+3,3,c
 52886  019E60  8804               	bsf	frexp@value+3,4,c
 52887  019E62  8A04               	bsf	frexp@value+3,5,c
 52888  019E64  9C04               	bcf	frexp@value+3,6,c
 52889  019E66  9E03               	bcf	frexp@value+2,7,c
 52890  019E68  0012               	return	
 52891  019E6A                     __end_of_frexp:
 52892                           	opt stack 0
 52893                           tosu	equ	0xFFF
 52894                           tosh	equ	0xFFE
 52895                           tosl	equ	0xFFD
 52896                           pclatu	equ	0xFFB
 52897                           pclath	equ	0xFFA
 52898                           tblptru	equ	0xFF8
 52899                           tblptrh	equ	0xFF7
 52900                           tblptrl	equ	0xFF6
 52901                           tablat	equ	0xFF5
 52902                           prodh	equ	0xFF4
 52903                           prodl	equ	0xFF3
 52904                           intcon	equ	0xFF2
 52905                           indf0	equ	0xFEF
 52906                           postinc0	equ	0xFEE
 52907                           fsr0h	equ	0xFEA
 52908                           fsr0l	equ	0xFE9
 52909                           wreg	equ	0xFE8
 52910                           indf1	equ	0xFE7
 52911                           postdec1	equ	0xFE5
 52912                           plusw1	equ	0xFE3
 52913                           fsr1h	equ	0xFE2
 52914                           fsr1l	equ	0xFE1
 52915                           bsr	equ	0xFE0
 52916                           indf2	equ	0xFDF
 52917                           postinc2	equ	0xFDE
 52918                           postdec2	equ	0xFDD
 52919                           plusw2	equ	0xFDB
 52920                           fsr2h	equ	0xFDA
 52921                           fsr2l	equ	0xFD9
 52922                           status	equ	0xFD8
 52923                           
 52924 ;; *************** function _eval_poly *****************
 52925 ;; Defined at:
 52926 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 52927 ;; Parameters:    Size  Location     Type
 52928 ;;  x               4   12[BANK0 ] PTR int 
 52929 ;;  d               2   16[BANK0 ] PTR const 
 52930 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 52931 ;;  n               2   18[BANK0 ] int 
 52932 ;; Auto vars:     Size  Location     Type
 52933 ;;  res             4   24[BANK0 ] int 
 52934 ;; Return value:  Size  Location     Type
 52935 ;;                  4   12[BANK0 ] int 
 52936 ;; Registers used:
 52937 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52938 ;; Tracked objects:
 52939 ;;		On entry : 0/0
 52940 ;;		On exit  : 0/0
 52941 ;;		Unchanged: 0/0
 52942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52943 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52944 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52946 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52947 ;;Total ram usage:       16 bytes
 52948 ;; Hardware stack levels used:    1
 52949 ;; Hardware stack levels required when called:    1
 52950 ;; This function calls:
 52951 ;;		i2___fladd
 52952 ;;		i2___flmul
 52953 ;; This function is called by:
 52954 ;;		_atan
 52955 ;;		_sin
 52956 ;; This function uses a non-reentrant model
 52957 ;;
 52958                           
 52959                           	psect	text166
 52960  019178                     __ptext166:
 52961                           	opt stack 0
 52962  019178                     _eval_poly:
 52963                           	opt stack 12
 52964                           
 52965                           ;incstack = 0
 52966  019178  C072  F074         	movff	eval_poly@n,??_eval_poly
 52967  01917C  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 52968  019180  0100               	movlb	0	; () banked
 52969  019182  90D8               	bcf	status,0,c
 52970  019184  3774               	rlcf	??_eval_poly& (0+255),f,b
 52971  019186  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52972  019188  90D8               	bcf	status,0,c
 52973  01918A  3774               	rlcf	??_eval_poly& (0+255),f,b
 52974  01918C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52975  01918E  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 52976  019192  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 52977  019196  5174               	movf	??_eval_poly& (0+255),w,b
 52978  019198  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 52979  01919A  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 52980  01919C  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 52981  01919E  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 52982  0191A2  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 52983  0191A6                     	if	0	;tblptru may be non-zero
 52984  0191A6                     	endif
 52985  0191A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 52986  0191A6  0E00               	movlw	low (__mediumconst shr (0+16))
 52987  0191A8  6EF8               	movwf	tblptru,c
 52988  0191AA                     	endif
 52989  0191AA  0009               	tblrd		*+
 52990  0191AC  CFF5 F078          	movff	tablat,eval_poly@res
 52991  0191B0  0009               	tblrd		*+
 52992  0191B2  CFF5 F079          	movff	tablat,eval_poly@res+1
 52993  0191B6  0009               	tblrd		*+
 52994  0191B8  CFF5 F07A          	movff	tablat,eval_poly@res+2
 52995  0191BC  000A               	tblrd		*-
 52996  0191BE  CFF5 F07B          	movff	tablat,eval_poly@res+3
 52997  0191C2  D04C               	goto	i2l2393
 52998  0191C4                     
 52999                           ; BSR set to: 0
 53000                           
 53001                           ; BSR set to: 0
 53002  0191C4  C078  F034         	movff	eval_poly@res,i2___flmul@a
 53003  0191C8  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 53004  0191CC  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 53005  0191D0  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 53006  0191D4  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 53007  0191D8  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 53008  0191DC  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 53009  0191E0  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 53010  0191E4  ECC9  F0AD         	call	i2___flmul	;wreg free
 53011  0191E8  C030  F056         	movff	?i2___flmul,i2___fladd@b
 53012  0191EC  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 53013  0191F0  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 53014  0191F4  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 53015  0191F8  0100               	movlb	0	; () banked
 53016  0191FA  0772               	decf	eval_poly@n& (0+255),f,b
 53017  0191FC  A0D8               	btfss	status,0,c
 53018  0191FE  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 53019  019200  C072  F074         	movff	eval_poly@n,??_eval_poly
 53020  019204  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 53021  019208  90D8               	bcf	status,0,c
 53022  01920A  3774               	rlcf	??_eval_poly& (0+255),f,b
 53023  01920C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 53024  01920E  90D8               	bcf	status,0,c
 53025  019210  3774               	rlcf	??_eval_poly& (0+255),f,b
 53026  019212  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 53027  019214  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 53028  019218  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 53029  01921C  5174               	movf	??_eval_poly& (0+255),w,b
 53030  01921E  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 53031  019220  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 53032  019222  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 53033  019224  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 53034  019228  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 53035  01922C                     	if	0	;tblptru may be non-zero
 53036  01922C                     	endif
 53037  01922C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 53038  01922C  0E00               	movlw	low (__mediumconst shr (0+16))
 53039  01922E  6EF8               	movwf	tblptru,c
 53040  019230                     	endif
 53041  019230  0009               	tblrd		*+
 53042  019232  CFF5 F05A          	movff	tablat,i2___fladd@a
 53043  019236  0009               	tblrd		*+
 53044  019238  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 53045  01923C  0009               	tblrd		*+
 53046  01923E  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 53047  019242  000A               	tblrd		*-
 53048  019244  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 53049  019248  EC10  F0B1         	call	i2___fladd	;wreg free
 53050  01924C  C056  F078         	movff	?i2___fladd,eval_poly@res
 53051  019250  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 53052  019254  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 53053  019258  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 53054  01925C                     i2l2393:
 53055  01925C  0100               	movlb	0	; () banked
 53056  01925E  5172               	movf	eval_poly@n& (0+255),w,b
 53057  019260  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 53058  019262  A4D8               	btfss	status,2,c
 53059  019264  D7AF               	goto	i2l2394
 53060                           
 53061                           ; BSR set to: 0
 53062  019266  C078  F06C         	movff	eval_poly@res,?_eval_poly
 53063  01926A  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 53064  01926E  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 53065  019272  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 53066                           
 53067                           ; BSR set to: 0
 53068  019276  0012               	return		;funcret
 53069  019278                     __end_of_eval_poly:
 53070                           	opt stack 0
 53071                           tosu	equ	0xFFF
 53072                           tosh	equ	0xFFE
 53073                           tosl	equ	0xFFD
 53074                           pclatu	equ	0xFFB
 53075                           pclath	equ	0xFFA
 53076                           tblptru	equ	0xFF8
 53077                           tblptrh	equ	0xFF7
 53078                           tblptrl	equ	0xFF6
 53079                           tablat	equ	0xFF5
 53080                           prodh	equ	0xFF4
 53081                           prodl	equ	0xFF3
 53082                           intcon	equ	0xFF2
 53083                           indf0	equ	0xFEF
 53084                           postinc0	equ	0xFEE
 53085                           fsr0h	equ	0xFEA
 53086                           fsr0l	equ	0xFE9
 53087                           wreg	equ	0xFE8
 53088                           indf1	equ	0xFE7
 53089                           postdec1	equ	0xFE5
 53090                           plusw1	equ	0xFE3
 53091                           fsr1h	equ	0xFE2
 53092                           fsr1l	equ	0xFE1
 53093                           bsr	equ	0xFE0
 53094                           indf2	equ	0xFDF
 53095                           postinc2	equ	0xFDE
 53096                           postdec2	equ	0xFDD
 53097                           plusw2	equ	0xFDB
 53098                           fsr2h	equ	0xFDA
 53099                           fsr2l	equ	0xFD9
 53100                           status	equ	0xFD8
 53101                           
 53102 ;; *************** function i2___flmul *****************
 53103 ;; Defined at:
 53104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 53105 ;; Parameters:    Size  Location     Type
 53106 ;;  b               4   47[COMRAM] int 
 53107 ;;  a               4   51[COMRAM] int 
 53108 ;; Auto vars:     Size  Location     Type
 53109 ;;  __flmul         4   66[COMRAM] struct .
 53110 ;;  __flmul         4   61[COMRAM] unsigned long 
 53111 ;;  __flmul         2   70[COMRAM] struct .
 53112 ;;  __flmul         1   65[COMRAM] unsigned char 
 53113 ;;  __flmul         1   60[COMRAM] unsigned char 
 53114 ;;  __flmul         1   59[COMRAM] unsigned char 
 53115 ;; Return value:  Size  Location     Type
 53116 ;;                  4   47[COMRAM] unsigned char 
 53117 ;; Registers used:
 53118 ;;		wreg, status,2, status,0, prodl, prodh
 53119 ;; Tracked objects:
 53120 ;;		On entry : 0/0
 53121 ;;		On exit  : 0/0
 53122 ;;		Unchanged: 0/0
 53123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53124 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53125 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53126 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53127 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53128 ;;Total ram usage:       25 bytes
 53129 ;; Hardware stack levels used:    1
 53130 ;; This function calls:
 53131 ;;		Nothing
 53132 ;; This function is called by:
 53133 ;;		_peakToRMS
 53134 ;;		_ADCPostProcessingCallback
 53135 ;;		_asin
 53136 ;;		_atan
 53137 ;;		_eval_poly
 53138 ;;		_sin
 53139 ;;		i2_fround
 53140 ;;		i2_scale
 53141 ;;		i2__doprnt
 53142 ;; This function uses a non-reentrant model
 53143 ;;
 53144                           
 53145                           	psect	text167
 53146  015B92                     __ptext167:
 53147                           	opt stack 0
 53148  015B92                     i2___flmul:
 53149                           	opt stack 13
 53150                           
 53151                           ; BSR set to: 0
 53152                           ;incstack = 0
 53153  015B92  5033               	movf	i2___flmul@b+3,w,c
 53154  015B94  0B80               	andlw	128
 53155  015B96  6E3C               	movwf	i2___flmul@sign,c
 53156  015B98  5033               	movf	i2___flmul@b+3,w,c
 53157  015B9A  2433               	addwf	i2___flmul@b+3,w,c
 53158  015B9C  6E42               	movwf	i2___flmul@bexp,c
 53159  015B9E  BE32               	btfsc	i2___flmul@b+2,7,c
 53160  015BA0  8042               	bsf	i2___flmul@bexp,0,c
 53161  015BA2  5042               	movf	i2___flmul@bexp,w,c
 53162  015BA4  B4D8               	btfsc	status,2,c
 53163  015BA6  D00D               	goto	i2l2822
 53164  015BA8  2842               	incf	i2___flmul@bexp,w,c
 53165  015BAA  A4D8               	btfss	status,2,c
 53166  015BAC  D008               	goto	i2l2823
 53167  015BAE  0E00               	movlw	0
 53168  015BB0  6E30               	movwf	i2___flmul@b,c
 53169  015BB2  0E00               	movlw	0
 53170  015BB4  6E31               	movwf	i2___flmul@b+1,c
 53171  015BB6  0E00               	movlw	0
 53172  015BB8  6E32               	movwf	i2___flmul@b+2,c
 53173  015BBA  0E00               	movlw	0
 53174  015BBC  6E33               	movwf	i2___flmul@b+3,c
 53175  015BBE                     i2l2823:
 53176  015BBE  8E32               	bsf	i2___flmul@b+2,7,c
 53177  015BC0  D008               	goto	i2l2824
 53178  015BC2                     i2l2822:
 53179  015BC2  0E00               	movlw	0
 53180  015BC4  6E30               	movwf	i2___flmul@b,c
 53181  015BC6  0E00               	movlw	0
 53182  015BC8  6E31               	movwf	i2___flmul@b+1,c
 53183  015BCA  0E00               	movlw	0
 53184  015BCC  6E32               	movwf	i2___flmul@b+2,c
 53185  015BCE  0E00               	movlw	0
 53186  015BD0  6E33               	movwf	i2___flmul@b+3,c
 53187  015BD2                     i2l2824:
 53188  015BD2  5037               	movf	i2___flmul@a+3,w,c
 53189  015BD4  0B80               	andlw	128
 53190  015BD6  1A3C               	xorwf	i2___flmul@sign,f,c
 53191  015BD8  5037               	movf	i2___flmul@a+3,w,c
 53192  015BDA  2437               	addwf	i2___flmul@a+3,w,c
 53193  015BDC  6E3D               	movwf	i2___flmul@aexp,c
 53194  015BDE  BE36               	btfsc	i2___flmul@a+2,7,c
 53195  015BE0  803D               	bsf	i2___flmul@aexp,0,c
 53196  015BE2  503D               	movf	i2___flmul@aexp,w,c
 53197  015BE4  B4D8               	btfsc	status,2,c
 53198  015BE6  D00D               	goto	i2l2826
 53199  015BE8  283D               	incf	i2___flmul@aexp,w,c
 53200  015BEA  A4D8               	btfss	status,2,c
 53201  015BEC  D008               	goto	i2l2827
 53202  015BEE  0E00               	movlw	0
 53203  015BF0  6E34               	movwf	i2___flmul@a,c
 53204  015BF2  0E00               	movlw	0
 53205  015BF4  6E35               	movwf	i2___flmul@a+1,c
 53206  015BF6  0E00               	movlw	0
 53207  015BF8  6E36               	movwf	i2___flmul@a+2,c
 53208  015BFA  0E00               	movlw	0
 53209  015BFC  6E37               	movwf	i2___flmul@a+3,c
 53210  015BFE                     i2l2827:
 53211  015BFE  8E36               	bsf	i2___flmul@a+2,7,c
 53212  015C00  D008               	goto	i2l2828
 53213  015C02                     i2l2826:
 53214  015C02  0E00               	movlw	0
 53215  015C04  6E34               	movwf	i2___flmul@a,c
 53216  015C06  0E00               	movlw	0
 53217  015C08  6E35               	movwf	i2___flmul@a+1,c
 53218  015C0A  0E00               	movlw	0
 53219  015C0C  6E36               	movwf	i2___flmul@a+2,c
 53220  015C0E  0E00               	movlw	0
 53221  015C10  6E37               	movwf	i2___flmul@a+3,c
 53222  015C12                     i2l2828:
 53223  015C12  503D               	movf	i2___flmul@aexp,w,c
 53224  015C14  B4D8               	btfsc	status,2,c
 53225  015C16  D003               	goto	i2u1817_40
 53226  015C18  5042               	movf	i2___flmul@bexp,w,c
 53227  015C1A  A4D8               	btfss	status,2,c
 53228  015C1C  D009               	goto	i2l2829
 53229  015C1E                     i2u1817_40:
 53230  015C1E  0E00               	movlw	0
 53231  015C20  6E30               	movwf	?i2___flmul,c
 53232  015C22  0E00               	movlw	0
 53233  015C24  6E31               	movwf	?i2___flmul+1,c
 53234  015C26  0E00               	movlw	0
 53235  015C28  6E32               	movwf	?i2___flmul+2,c
 53236  015C2A  0E00               	movlw	0
 53237  015C2C  6E33               	movwf	?i2___flmul+3,c
 53238  015C2E  0012               	return	
 53239  015C30                     i2l2829:
 53240  015C30  5036               	movf	i2___flmul@a+2,w,c
 53241  015C32  0230               	mulwf	i2___flmul@b,c
 53242  015C34  CFF3 F047          	movff	prodl,i2___flmul@temp
 53243  015C38  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53244  015C3C  5047               	movf	i2___flmul@temp,w,c
 53245  015C3E  6E3E               	movwf	i2___flmul@grs,c
 53246  015C40  6A3F               	clrf	i2___flmul@grs+1,c
 53247  015C42  6A40               	clrf	i2___flmul@grs+2,c
 53248  015C44  6A41               	clrf	i2___flmul@grs+3,c
 53249  015C46  5048               	movf	i2___flmul@temp+1,w,c
 53250  015C48  6E43               	movwf	i2___flmul@prod,c
 53251  015C4A  6A44               	clrf	i2___flmul@prod+1,c
 53252  015C4C  6A45               	clrf	i2___flmul@prod+2,c
 53253  015C4E  6A46               	clrf	i2___flmul@prod+3,c
 53254  015C50  5035               	movf	i2___flmul@a+1,w,c
 53255  015C52  0231               	mulwf	i2___flmul@b+1,c
 53256  015C54  CFF3 F047          	movff	prodl,i2___flmul@temp
 53257  015C58  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53258  015C5C  5047               	movf	i2___flmul@temp,w,c
 53259  015C5E  263E               	addwf	i2___flmul@grs,f,c
 53260  015C60  0E00               	movlw	0
 53261  015C62  223F               	addwfc	i2___flmul@grs+1,f,c
 53262  015C64  2240               	addwfc	i2___flmul@grs+2,f,c
 53263  015C66  2241               	addwfc	i2___flmul@grs+3,f,c
 53264  015C68  5048               	movf	i2___flmul@temp+1,w,c
 53265  015C6A  2643               	addwf	i2___flmul@prod,f,c
 53266  015C6C  0E00               	movlw	0
 53267  015C6E  2244               	addwfc	i2___flmul@prod+1,f,c
 53268  015C70  2245               	addwfc	i2___flmul@prod+2,f,c
 53269  015C72  2246               	addwfc	i2___flmul@prod+3,f,c
 53270  015C74  5034               	movf	i2___flmul@a,w,c
 53271  015C76  0232               	mulwf	i2___flmul@b+2,c
 53272  015C78  CFF3 F047          	movff	prodl,i2___flmul@temp
 53273  015C7C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53274  015C80  5047               	movf	i2___flmul@temp,w,c
 53275  015C82  263E               	addwf	i2___flmul@grs,f,c
 53276  015C84  0E00               	movlw	0
 53277  015C86  223F               	addwfc	i2___flmul@grs+1,f,c
 53278  015C88  2240               	addwfc	i2___flmul@grs+2,f,c
 53279  015C8A  2241               	addwfc	i2___flmul@grs+3,f,c
 53280  015C8C  5048               	movf	i2___flmul@temp+1,w,c
 53281  015C8E  2643               	addwf	i2___flmul@prod,f,c
 53282  015C90  0E00               	movlw	0
 53283  015C92  2244               	addwfc	i2___flmul@prod+1,f,c
 53284  015C94  2245               	addwfc	i2___flmul@prod+2,f,c
 53285  015C96  2246               	addwfc	i2___flmul@prod+3,f,c
 53286  015C98  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 53287  015C9C  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 53288  015CA0  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 53289  015CA4  6A3E               	clrf	i2___flmul@grs,c
 53290  015CA6  5034               	movf	i2___flmul@a,w,c
 53291  015CA8  0231               	mulwf	i2___flmul@b+1,c
 53292  015CAA  CFF3 F047          	movff	prodl,i2___flmul@temp
 53293  015CAE  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53294  015CB2  5047               	movf	i2___flmul@temp,w,c
 53295  015CB4  263E               	addwf	i2___flmul@grs,f,c
 53296  015CB6  5048               	movf	i2___flmul@temp+1,w,c
 53297  015CB8  223F               	addwfc	i2___flmul@grs+1,f,c
 53298  015CBA  0E00               	movlw	0
 53299  015CBC  2240               	addwfc	i2___flmul@grs+2,f,c
 53300  015CBE  0E00               	movlw	0
 53301  015CC0  2241               	addwfc	i2___flmul@grs+3,f,c
 53302  015CC2  5035               	movf	i2___flmul@a+1,w,c
 53303  015CC4  0230               	mulwf	i2___flmul@b,c
 53304  015CC6  CFF3 F047          	movff	prodl,i2___flmul@temp
 53305  015CCA  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53306  015CCE  5047               	movf	i2___flmul@temp,w,c
 53307  015CD0  263E               	addwf	i2___flmul@grs,f,c
 53308  015CD2  5048               	movf	i2___flmul@temp+1,w,c
 53309  015CD4  223F               	addwfc	i2___flmul@grs+1,f,c
 53310  015CD6  0E00               	movlw	0
 53311  015CD8  2240               	addwfc	i2___flmul@grs+2,f,c
 53312  015CDA  0E00               	movlw	0
 53313  015CDC  2241               	addwfc	i2___flmul@grs+3,f,c
 53314  015CDE  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 53315  015CE2  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 53316  015CE6  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 53317  015CEA  6A3E               	clrf	i2___flmul@grs,c
 53318  015CEC  5034               	movf	i2___flmul@a,w,c
 53319  015CEE  0230               	mulwf	i2___flmul@b,c
 53320  015CF0  CFF3 F047          	movff	prodl,i2___flmul@temp
 53321  015CF4  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53322  015CF8  5047               	movf	i2___flmul@temp,w,c
 53323  015CFA  263E               	addwf	i2___flmul@grs,f,c
 53324  015CFC  5048               	movf	i2___flmul@temp+1,w,c
 53325  015CFE  223F               	addwfc	i2___flmul@grs+1,f,c
 53326  015D00  0E00               	movlw	0
 53327  015D02  2240               	addwfc	i2___flmul@grs+2,f,c
 53328  015D04  0E00               	movlw	0
 53329  015D06  2241               	addwfc	i2___flmul@grs+3,f,c
 53330  015D08  5036               	movf	i2___flmul@a+2,w,c
 53331  015D0A  0231               	mulwf	i2___flmul@b+1,c
 53332  015D0C  CFF3 F047          	movff	prodl,i2___flmul@temp
 53333  015D10  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53334  015D14  5047               	movf	i2___flmul@temp,w,c
 53335  015D16  2643               	addwf	i2___flmul@prod,f,c
 53336  015D18  5048               	movf	i2___flmul@temp+1,w,c
 53337  015D1A  2244               	addwfc	i2___flmul@prod+1,f,c
 53338  015D1C  0E00               	movlw	0
 53339  015D1E  2245               	addwfc	i2___flmul@prod+2,f,c
 53340  015D20  0E00               	movlw	0
 53341  015D22  2246               	addwfc	i2___flmul@prod+3,f,c
 53342  015D24  5035               	movf	i2___flmul@a+1,w,c
 53343  015D26  0232               	mulwf	i2___flmul@b+2,c
 53344  015D28  CFF3 F047          	movff	prodl,i2___flmul@temp
 53345  015D2C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53346  015D30  5047               	movf	i2___flmul@temp,w,c
 53347  015D32  2643               	addwf	i2___flmul@prod,f,c
 53348  015D34  5048               	movf	i2___flmul@temp+1,w,c
 53349  015D36  2244               	addwfc	i2___flmul@prod+1,f,c
 53350  015D38  0E00               	movlw	0
 53351  015D3A  2245               	addwfc	i2___flmul@prod+2,f,c
 53352  015D3C  0E00               	movlw	0
 53353  015D3E  2246               	addwfc	i2___flmul@prod+3,f,c
 53354  015D40  5036               	movf	i2___flmul@a+2,w,c
 53355  015D42  0232               	mulwf	i2___flmul@b+2,c
 53356  015D44  CFF3 F047          	movff	prodl,i2___flmul@temp
 53357  015D48  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53358  015D4C  5047               	movf	i2___flmul@temp,w,c
 53359  015D4E  6E38               	movwf	??i2___flmul& (0+255),c
 53360  015D50  5048               	movf	i2___flmul@temp+1,w,c
 53361  015D52  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 53362  015D54  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 53363  015D56  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 53364  015D58  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 53365  015D5C  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 53366  015D60  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 53367  015D64  6A38               	clrf	??i2___flmul,c
 53368  015D66  5038               	movf	??i2___flmul,w,c
 53369  015D68  2643               	addwf	i2___flmul@prod,f,c
 53370  015D6A  5039               	movf	??i2___flmul+1,w,c
 53371  015D6C  2244               	addwfc	i2___flmul@prod+1,f,c
 53372  015D6E  503A               	movf	??i2___flmul+2,w,c
 53373  015D70  2245               	addwfc	i2___flmul@prod+2,f,c
 53374  015D72  503B               	movf	??i2___flmul+3,w,c
 53375  015D74  2246               	addwfc	i2___flmul@prod+3,f,c
 53376  015D76  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 53377  015D7A  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 53378  015D7E  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 53379  015D82  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 53380  015D86  0E19               	movlw	25
 53381  015D88  D005               	goto	i2u1818_40
 53382  015D8A                     i2u1818_45:
 53383  015D8A  90D8               	bcf	status,0,c
 53384  015D8C  323B               	rrcf	??i2___flmul+3,f,c
 53385  015D8E  323A               	rrcf	??i2___flmul+2,f,c
 53386  015D90  3239               	rrcf	??i2___flmul+1,f,c
 53387  015D92  3238               	rrcf	??i2___flmul,f,c
 53388  015D94                     i2u1818_40:
 53389  015D94  2EE8               	decfsz	wreg,f,c
 53390  015D96  D7F9               	goto	i2u1818_45
 53391  015D98  5038               	movf	??i2___flmul,w,c
 53392  015D9A  2643               	addwf	i2___flmul@prod,f,c
 53393  015D9C  5039               	movf	??i2___flmul+1,w,c
 53394  015D9E  2244               	addwfc	i2___flmul@prod+1,f,c
 53395  015DA0  503A               	movf	??i2___flmul+2,w,c
 53396  015DA2  2245               	addwfc	i2___flmul@prod+2,f,c
 53397  015DA4  503B               	movf	??i2___flmul+3,w,c
 53398  015DA6  2246               	addwfc	i2___flmul@prod+3,f,c
 53399  015DA8  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 53400  015DAC  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 53401  015DB0  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 53402  015DB4  6A3E               	clrf	i2___flmul@grs,c
 53403  015DB6  503D               	movf	i2___flmul@aexp,w,c
 53404  015DB8  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 53405  015DBC  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 53406  015DBE  2638               	addwf	??i2___flmul,f,c
 53407  015DC0  0E00               	movlw	0
 53408  015DC2  2239               	addwfc	??i2___flmul+1,f,c
 53409  015DC4  0E82               	movlw	130
 53410  015DC6  2438               	addwf	??i2___flmul,w,c
 53411  015DC8  6E47               	movwf	i2___flmul@temp,c
 53412  015DCA  0EFF               	movlw	255
 53413  015DCC  2039               	addwfc	??i2___flmul+1,w,c
 53414  015DCE  6E48               	movwf	i2___flmul@temp+1,c
 53415  015DD0  D00F               	goto	i2l2833
 53416  015DD2  90D8               	bcf	status,0,c
 53417  015DD4  3643               	rlcf	i2___flmul@prod,f,c
 53418  015DD6  3644               	rlcf	i2___flmul@prod+1,f,c
 53419  015DD8  3645               	rlcf	i2___flmul@prod+2,f,c
 53420  015DDA  3646               	rlcf	i2___flmul@prod+3,f,c
 53421  015DDC  BE41               	btfsc	i2___flmul@grs+3,7,c
 53422  015DDE  8043               	bsf	i2___flmul@prod,0,c
 53423  015DE0  90D8               	bcf	status,0,c
 53424  015DE2  363E               	rlcf	i2___flmul@grs,f,c
 53425  015DE4  363F               	rlcf	i2___flmul@grs+1,f,c
 53426  015DE6  3640               	rlcf	i2___flmul@grs+2,f,c
 53427  015DE8  3641               	rlcf	i2___flmul@grs+3,f,c
 53428  015DEA  0647               	decf	i2___flmul@temp,f,c
 53429  015DEC  A0D8               	btfss	status,0,c
 53430  015DEE  0648               	decf	i2___flmul@temp+1,f,c
 53431  015DF0                     i2l2833:
 53432  015DF0  AE45               	btfss	i2___flmul@prod+2,7,c
 53433  015DF2  D7EF               	goto	i2l2834
 53434  015DF4  0E00               	movlw	0
 53435  015DF6  6E3D               	movwf	i2___flmul@aexp,c
 53436  015DF8  AE41               	btfss	i2___flmul@grs+3,7,c
 53437  015DFA  D016               	goto	i2l2840
 53438  015DFC  0EFF               	movlw	255
 53439  015DFE  143E               	andwf	i2___flmul@grs,w,c
 53440  015E00  6E38               	movwf	??i2___flmul& (0+255),c
 53441  015E02  0EFF               	movlw	255
 53442  015E04  143F               	andwf	i2___flmul@grs+1,w,c
 53443  015E06  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 53444  015E08  0EFF               	movlw	255
 53445  015E0A  1440               	andwf	i2___flmul@grs+2,w,c
 53446  015E0C  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 53447  015E0E  0E7F               	movlw	127
 53448  015E10  1441               	andwf	i2___flmul@grs+3,w,c
 53449  015E12  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 53450  015E14  5038               	movf	??i2___flmul,w,c
 53451  015E16  1039               	iorwf	??i2___flmul+1,w,c
 53452  015E18  103A               	iorwf	??i2___flmul+2,w,c
 53453  015E1A  103B               	iorwf	??i2___flmul+3,w,c
 53454  015E1C  A4D8               	btfss	status,2,c
 53455  015E1E  D002               	goto	i2u1823_40
 53456  015E20  A043               	btfss	i2___flmul@prod,0,c
 53457  015E22  D002               	goto	i2l2840
 53458  015E24                     i2u1823_40:
 53459  015E24  0E01               	movlw	1
 53460  015E26  6E3D               	movwf	i2___flmul@aexp,c
 53461  015E28                     i2l2840:
 53462  015E28  503D               	movf	i2___flmul@aexp,w,c
 53463  015E2A  B4D8               	btfsc	status,2,c
 53464  015E2C  D01F               	goto	i2l2842
 53465  015E2E  0E01               	movlw	1
 53466  015E30  2643               	addwf	i2___flmul@prod,f,c
 53467  015E32  0E00               	movlw	0
 53468  015E34  2244               	addwfc	i2___flmul@prod+1,f,c
 53469  015E36  2245               	addwfc	i2___flmul@prod+2,f,c
 53470  015E38  2246               	addwfc	i2___flmul@prod+3,f,c
 53471  015E3A  A046               	btfss	i2___flmul@prod+3,0,c
 53472  015E3C  D017               	goto	i2l2842
 53473  015E3E  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 53474  015E42  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 53475  015E46  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 53476  015E4A  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 53477  015E4E  343B               	rlcf	??i2___flmul+3,w,c
 53478  015E50  323B               	rrcf	??i2___flmul+3,f,c
 53479  015E52  323A               	rrcf	??i2___flmul+2,f,c
 53480  015E54  3239               	rrcf	??i2___flmul+1,f,c
 53481  015E56  3238               	rrcf	??i2___flmul,f,c
 53482  015E58  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 53483  015E5C  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 53484  015E60  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 53485  015E64  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 53486  015E68  4A47               	infsnz	i2___flmul@temp,f,c
 53487  015E6A  2A48               	incf	i2___flmul@temp+1,f,c
 53488  015E6C                     i2l2842:
 53489  015E6C  BE48               	btfsc	i2___flmul@temp+1,7,c
 53490  015E6E  D00D               	goto	i2l2843
 53491  015E70  5048               	movf	i2___flmul@temp+1,w,c
 53492  015E72  E103               	bnz	i2u1826_40
 53493  015E74  2847               	incf	i2___flmul@temp,w,c
 53494  015E76  A0D8               	btfss	status,0,c
 53495  015E78  D008               	goto	i2l2843
 53496  015E7A                     i2u1826_40:
 53497  015E7A  0E00               	movlw	0
 53498  015E7C  6E43               	movwf	i2___flmul@prod,c
 53499  015E7E  0E00               	movlw	0
 53500  015E80  6E44               	movwf	i2___flmul@prod+1,c
 53501  015E82  0E80               	movlw	128
 53502  015E84  6E45               	movwf	i2___flmul@prod+2,c
 53503  015E86  0E7F               	movlw	127
 53504  015E88  D020               	goto	L29
 53505  015E8A                     i2l2843:
 53506  015E8A  BE48               	btfsc	i2___flmul@temp+1,7,c
 53507  015E8C  D005               	goto	i2u1827_40
 53508  015E8E  5048               	movf	i2___flmul@temp+1,w,c
 53509  015E90  E10E               	bnz	i2l2845
 53510  015E92  0447               	decf	i2___flmul@temp,w,c
 53511  015E94  B0D8               	btfsc	status,0,c
 53512  015E96  D00B               	goto	i2l2845
 53513  015E98                     i2u1827_40:
 53514  015E98  0E00               	movlw	0
 53515  015E9A  6E43               	movwf	i2___flmul@prod,c
 53516  015E9C  0E00               	movlw	0
 53517  015E9E  6E44               	movwf	i2___flmul@prod+1,c
 53518  015EA0  0E00               	movlw	0
 53519  015EA2  6E45               	movwf	i2___flmul@prod+2,c
 53520  015EA4  0E00               	movlw	0
 53521  015EA6  6E46               	movwf	i2___flmul@prod+3,c
 53522  015EA8  0E00               	movlw	0
 53523  015EAA  6E3C               	movwf	i2___flmul@sign,c
 53524  015EAC  D00F               	goto	i2l2846
 53525  015EAE                     i2l2845:
 53526  015EAE  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 53527  015EB2  0EFF               	movlw	255
 53528  015EB4  1643               	andwf	i2___flmul@prod,f,c
 53529  015EB6  0EFF               	movlw	255
 53530  015EB8  1644               	andwf	i2___flmul@prod+1,f,c
 53531  015EBA  0E7F               	movlw	127
 53532  015EBC  1645               	andwf	i2___flmul@prod+2,f,c
 53533  015EBE  0E00               	movlw	0
 53534  015EC0  1646               	andwf	i2___flmul@prod+3,f,c
 53535  015EC2  B042               	btfsc	i2___flmul@bexp,0,c
 53536  015EC4  8E45               	bsf	i2___flmul@prod+2,7,c
 53537  015EC6  90D8               	bcf	status,0,c
 53538  015EC8  3042               	rrcf	i2___flmul@bexp,w,c
 53539  015ECA                     L29:
 53540  015ECA  6E46               	movwf	i2___flmul@prod+3,c
 53541  015ECC                     i2l2846:
 53542  015ECC  503C               	movf	i2___flmul@sign,w,c
 53543  015ECE  1246               	iorwf	i2___flmul@prod+3,f,c
 53544  015ED0  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 53545  015ED4  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 53546  015ED8  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 53547  015EDC  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 53548  015EE0  0012               	return	
 53549  015EE2                     __end_ofi2___flmul:
 53550                           	opt stack 0
 53551                           tosu	equ	0xFFF
 53552                           tosh	equ	0xFFE
 53553                           tosl	equ	0xFFD
 53554                           pclatu	equ	0xFFB
 53555                           pclath	equ	0xFFA
 53556                           tblptru	equ	0xFF8
 53557                           tblptrh	equ	0xFF7
 53558                           tblptrl	equ	0xFF6
 53559                           tablat	equ	0xFF5
 53560                           prodh	equ	0xFF4
 53561                           prodl	equ	0xFF3
 53562                           intcon	equ	0xFF2
 53563                           indf0	equ	0xFEF
 53564                           postinc0	equ	0xFEE
 53565                           fsr0h	equ	0xFEA
 53566                           fsr0l	equ	0xFE9
 53567                           wreg	equ	0xFE8
 53568                           indf1	equ	0xFE7
 53569                           postdec1	equ	0xFE5
 53570                           plusw1	equ	0xFE3
 53571                           fsr1h	equ	0xFE2
 53572                           fsr1l	equ	0xFE1
 53573                           bsr	equ	0xFE0
 53574                           indf2	equ	0xFDF
 53575                           postinc2	equ	0xFDE
 53576                           postdec2	equ	0xFDD
 53577                           plusw2	equ	0xFDB
 53578                           fsr2h	equ	0xFDA
 53579                           fsr2l	equ	0xFD9
 53580                           status	equ	0xFD8
 53581                           
 53582 ;; *************** function i2___fladd *****************
 53583 ;; Defined at:
 53584 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 53585 ;; Parameters:    Size  Location     Type
 53586 ;;  b               4   85[COMRAM] unsigned char 
 53587 ;;  a               4   89[COMRAM] unsigned char 
 53588 ;; Auto vars:     Size  Location     Type
 53589 ;;  __fladd         1   11[BANK0 ] unsigned char 
 53590 ;;  __fladd         1   10[BANK0 ] unsigned char 
 53591 ;;  __fladd         1    9[BANK0 ] unsigned char 
 53592 ;;  __fladd         1    8[BANK0 ] unsigned char 
 53593 ;; Return value:  Size  Location     Type
 53594 ;;                  4   85[COMRAM] unsigned char 
 53595 ;; Registers used:
 53596 ;;		wreg, status,2, status,0
 53597 ;; Tracked objects:
 53598 ;;		On entry : 0/0
 53599 ;;		On exit  : 0/0
 53600 ;;		Unchanged: 0/0
 53601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53602 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53603 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53604 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53605 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53606 ;;Total ram usage:       20 bytes
 53607 ;; Hardware stack levels used:    1
 53608 ;; This function calls:
 53609 ;;		Nothing
 53610 ;; This function is called by:
 53611 ;;		_peakToRMS
 53612 ;;		_ADCPostProcessingCallback
 53613 ;;		_acos
 53614 ;;		_asin
 53615 ;;		_atan
 53616 ;;		_eval_poly
 53617 ;;		_sin
 53618 ;;		_floor
 53619 ;;		i2__doprnt
 53620 ;;		i2___flsub
 53621 ;; This function uses a non-reentrant model
 53622 ;;
 53623                           
 53624                           	psect	text168
 53625  016220                     __ptext168:
 53626                           	opt stack 0
 53627  016220                     i2___fladd:
 53628                           	opt stack 13
 53629                           
 53630                           ;incstack = 0
 53631  016220  5059               	movf	i2___fladd@b+3,w,c
 53632  016222  0B80               	andlw	128
 53633  016224  0100               	movlb	0	; () banked
 53634  016226  6F68               	movwf	i2___fladd@signs& (0+255),b
 53635  016228  5059               	movf	i2___fladd@b+3,w,c
 53636  01622A  2459               	addwf	i2___fladd@b+3,w,c
 53637  01622C  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 53638                           
 53639                           ; BSR set to: 0
 53640  01622E  BE58               	btfsc	i2___fladd@b+2,7,c
 53641                           
 53642                           ; BSR set to: 0
 53643  016230  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 53644                           
 53645                           ; BSR set to: 0
 53646                           
 53647                           ; BSR set to: 0
 53648  016232  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53649  016234  B4D8               	btfsc	status,2,c
 53650  016236  D00D               	goto	i2l2731
 53651                           
 53652                           ; BSR set to: 0
 53653  016238  296A               	incf	i2___fladd@bexp& (0+255),w,b
 53654  01623A  A4D8               	btfss	status,2,c
 53655  01623C  D008               	goto	i2l2732
 53656                           
 53657                           ; BSR set to: 0
 53658  01623E  0E00               	movlw	0
 53659  016240  6E56               	movwf	i2___fladd@b,c
 53660  016242  0E00               	movlw	0
 53661  016244  6E57               	movwf	i2___fladd@b+1,c
 53662  016246  0E00               	movlw	0
 53663  016248  6E58               	movwf	i2___fladd@b+2,c
 53664  01624A  0E00               	movlw	0
 53665  01624C  6E59               	movwf	i2___fladd@b+3,c
 53666  01624E                     i2l2732:
 53667                           
 53668                           ; BSR set to: 0
 53669                           
 53670                           ; BSR set to: 0
 53671  01624E  8E58               	bsf	i2___fladd@b+2,7,c
 53672  016250  D006               	goto	L30
 53673  016252                     i2l2731:
 53674                           
 53675                           ; BSR set to: 0
 53676                           
 53677                           ; BSR set to: 0
 53678  016252  0E00               	movlw	0
 53679  016254  6E56               	movwf	i2___fladd@b,c
 53680  016256  0E00               	movlw	0
 53681  016258  6E57               	movwf	i2___fladd@b+1,c
 53682  01625A  0E00               	movlw	0
 53683  01625C  6E58               	movwf	i2___fladd@b+2,c
 53684  01625E                     L30:
 53685  01625E  0E00               	movlw	0
 53686  016260  6E59               	movwf	i2___fladd@b+3,c
 53687                           
 53688                           ; BSR set to: 0
 53689                           
 53690                           ; BSR set to: 0
 53691  016262  505D               	movf	i2___fladd@a+3,w,c
 53692  016264  0B80               	andlw	128
 53693  016266  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53694                           
 53695                           ; BSR set to: 0
 53696  016268  5168               	movf	i2___fladd@signs& (0+255),w,b
 53697  01626A  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 53698  01626C  A4D8               	btfss	status,2,c
 53699                           
 53700                           ; BSR set to: 0
 53701  01626E  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 53702                           
 53703                           ; BSR set to: 0
 53704                           
 53705                           ; BSR set to: 0
 53706  016270  505D               	movf	i2___fladd@a+3,w,c
 53707  016272  245D               	addwf	i2___fladd@a+3,w,c
 53708  016274  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53709                           
 53710                           ; BSR set to: 0
 53711  016276  BE5C               	btfsc	i2___fladd@a+2,7,c
 53712                           
 53713                           ; BSR set to: 0
 53714  016278  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 53715                           
 53716                           ; BSR set to: 0
 53717                           
 53718                           ; BSR set to: 0
 53719  01627A  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53720  01627C  B4D8               	btfsc	status,2,c
 53721  01627E  D00D               	goto	i2l2736
 53722                           
 53723                           ; BSR set to: 0
 53724  016280  2969               	incf	i2___fladd@aexp& (0+255),w,b
 53725  016282  A4D8               	btfss	status,2,c
 53726  016284  D008               	goto	i2l2737
 53727                           
 53728                           ; BSR set to: 0
 53729  016286  0E00               	movlw	0
 53730  016288  6E5A               	movwf	i2___fladd@a,c
 53731  01628A  0E00               	movlw	0
 53732  01628C  6E5B               	movwf	i2___fladd@a+1,c
 53733  01628E  0E00               	movlw	0
 53734  016290  6E5C               	movwf	i2___fladd@a+2,c
 53735  016292  0E00               	movlw	0
 53736  016294  6E5D               	movwf	i2___fladd@a+3,c
 53737  016296                     i2l2737:
 53738                           
 53739                           ; BSR set to: 0
 53740                           
 53741                           ; BSR set to: 0
 53742  016296  8E5C               	bsf	i2___fladd@a+2,7,c
 53743  016298  D006               	goto	L31
 53744  01629A                     i2l2736:
 53745                           
 53746                           ; BSR set to: 0
 53747                           
 53748                           ; BSR set to: 0
 53749  01629A  0E00               	movlw	0
 53750  01629C  6E5A               	movwf	i2___fladd@a,c
 53751  01629E  0E00               	movlw	0
 53752  0162A0  6E5B               	movwf	i2___fladd@a+1,c
 53753  0162A2  0E00               	movlw	0
 53754  0162A4  6E5C               	movwf	i2___fladd@a+2,c
 53755  0162A6                     L31:
 53756  0162A6  0E00               	movlw	0
 53757  0162A8  6E5D               	movwf	i2___fladd@a+3,c
 53758                           
 53759                           ; BSR set to: 0
 53760                           
 53761                           ; BSR set to: 0
 53762  0162AA  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53763  0162AC  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 53764  0162AE  B0D8               	btfsc	status,0,c
 53765  0162B0  D022               	goto	i2l2739
 53766                           
 53767                           ; BSR set to: 0
 53768  0162B2  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 53769  0162B4  D002               	goto	i2l2740
 53770                           
 53771                           ; BSR set to: 0
 53772  0162B6  0E80               	movlw	128
 53773  0162B8  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 53774  0162BA                     i2l2740:
 53775                           
 53776                           ; BSR set to: 0
 53777                           
 53778                           ; BSR set to: 0
 53779  0162BA  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 53780                           
 53781                           ; BSR set to: 0
 53782  0162BE  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 53783                           
 53784                           ; BSR set to: 0
 53785  0162C2  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 53786                           
 53787                           ; BSR set to: 0
 53788  0162C6  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 53789                           
 53790                           ; BSR set to: 0
 53791  0162CA  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 53792                           
 53793                           ; BSR set to: 0
 53794  0162CE  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 53795                           
 53796                           ; BSR set to: 0
 53797  0162D2  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 53798                           
 53799                           ; BSR set to: 0
 53800  0162D6  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 53801                           
 53802                           ; BSR set to: 0
 53803  0162DA  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 53804                           
 53805                           ; BSR set to: 0
 53806  0162DE  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 53807                           
 53808                           ; BSR set to: 0
 53809  0162E2  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 53810                           
 53811                           ; BSR set to: 0
 53812  0162E6  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 53813                           
 53814                           ; BSR set to: 0
 53815  0162EA  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 53816                           
 53817                           ; BSR set to: 0
 53818  0162EE  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 53819                           
 53820                           ; BSR set to: 0
 53821  0162F2  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 53822  0162F6                     i2l2739:
 53823                           
 53824                           ; BSR set to: 0
 53825                           
 53826                           ; BSR set to: 0
 53827  0162F6  0E00               	movlw	0
 53828  0162F8  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53829                           
 53830                           ; BSR set to: 0
 53831  0162FA  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53832  0162FC  6F60               	movwf	??i2___fladd& (0+255),b
 53833  0162FE  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 53834  016300  1F60               	comf	??i2___fladd& (0+255),f,b
 53835  016302  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 53836  016304  4B60               	infsnz	??i2___fladd& (0+255),f,b
 53837  016306  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 53838  016308  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53839  01630A  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 53840  01630C  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 53841  01630E  5160               	movf	??i2___fladd& (0+255),w,b
 53842  016310  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 53843  016312  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 53844  016314  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 53845  016316  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 53846  016318  D02C               	goto	i2l2743
 53847  01631A  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 53848  01631C  E104               	bnz	i2u1780_40
 53849  01631E  0E1A               	movlw	26
 53850  016320  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 53851  016322  A0D8               	btfss	status,0,c
 53852  016324  D026               	goto	i2l2743
 53853  016326                     i2u1780_40:
 53854                           
 53855                           ; BSR set to: 0
 53856  016326  5056               	movf	i2___fladd@b,w,c
 53857  016328  1057               	iorwf	i2___fladd@b+1,w,c
 53858  01632A  1058               	iorwf	i2___fladd@b+2,w,c
 53859  01632C  1059               	iorwf	i2___fladd@b+3,w,c
 53860  01632E  B4D8               	btfsc	status,2,c
 53861  016330  D002               	goto	i2u1781_40
 53862  016332  0E01               	movlw	1
 53863  016334  D001               	goto	i2u1782_40
 53864  016336                     i2u1781_40:
 53865  016336  0E00               	movlw	0
 53866  016338                     i2u1782_40:
 53867  016338  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53868                           
 53869                           ; BSR set to: 0
 53870  01633A  0E00               	movlw	0
 53871  01633C  6E56               	movwf	i2___fladd@b,c
 53872  01633E  0E00               	movlw	0
 53873  016340  6E57               	movwf	i2___fladd@b+1,c
 53874  016342  0E00               	movlw	0
 53875  016344  6E58               	movwf	i2___fladd@b+2,c
 53876  016346  0E00               	movlw	0
 53877  016348  6E59               	movwf	i2___fladd@b+3,c
 53878                           
 53879                           ; BSR set to: 0
 53880  01634A  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 53881  01634E  D015               	goto	i2u1785_40
 53882  016350                     i2l2744:
 53883                           
 53884                           ; BSR set to: 0
 53885  016350  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53886  016352  D005               	goto	i2l2745
 53887                           
 53888                           ; BSR set to: 0
 53889  016354  90D8               	bcf	status,0,c
 53890  016356  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 53891  016358  0901               	iorlw	1
 53892  01635A  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53893  01635C  D002               	goto	i2l2746
 53894  01635E                     i2l2745:
 53895                           
 53896                           ; BSR set to: 0
 53897                           
 53898                           ; BSR set to: 0
 53899  01635E  90D8               	bcf	status,0,c
 53900  016360  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53901  016362                     i2l2746:
 53902                           
 53903                           ; BSR set to: 0
 53904                           
 53905                           ; BSR set to: 0
 53906  016362  B056               	btfsc	i2___fladd@b,0,c
 53907                           
 53908                           ; BSR set to: 0
 53909  016364  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 53910                           
 53911                           ; BSR set to: 0
 53912                           
 53913                           ; BSR set to: 0
 53914  016366  3459               	rlcf	i2___fladd@b+3,w,c
 53915  016368  3259               	rrcf	i2___fladd@b+3,f,c
 53916  01636A  3258               	rrcf	i2___fladd@b+2,f,c
 53917  01636C  3257               	rrcf	i2___fladd@b+1,f,c
 53918  01636E  3256               	rrcf	i2___fladd@b,f,c
 53919                           
 53920                           ; BSR set to: 0
 53921  016370  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 53922  016372                     i2l2743:
 53923                           
 53924                           ; BSR set to: 0
 53925  016372  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53926  016374  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 53927  016376  A0D8               	btfss	status,0,c
 53928  016378  D7EB               	goto	i2l2744
 53929  01637A                     i2u1785_40:
 53930                           
 53931                           ; BSR set to: 0
 53932                           
 53933                           ; BSR set to: 0
 53934  01637A  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 53935  01637C  D029               	goto	i2l2749
 53936                           
 53937                           ; BSR set to: 0
 53938  01637E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53939  016380  A4D8               	btfss	status,2,c
 53940  016382  D009               	goto	i2l2750
 53941                           
 53942                           ; BSR set to: 0
 53943  016384  0E00               	movlw	0
 53944  016386  6E56               	movwf	?i2___fladd,c
 53945  016388  0E00               	movlw	0
 53946  01638A  6E57               	movwf	?i2___fladd+1,c
 53947  01638C  0E00               	movlw	0
 53948  01638E  6E58               	movwf	?i2___fladd+2,c
 53949  016390  0E00               	movlw	0
 53950  016392  6E59               	movwf	?i2___fladd+3,c
 53951                           
 53952                           ; BSR set to: 0
 53953  016394  0012               	return	
 53954  016396                     i2l2750:
 53955                           
 53956                           ; BSR set to: 0
 53957                           
 53958                           ; BSR set to: 0
 53959  016396  505A               	movf	i2___fladd@a,w,c
 53960  016398  2656               	addwf	i2___fladd@b,f,c
 53961  01639A  505B               	movf	i2___fladd@a+1,w,c
 53962  01639C  2257               	addwfc	i2___fladd@b+1,f,c
 53963  01639E  505C               	movf	i2___fladd@a+2,w,c
 53964  0163A0  2258               	addwfc	i2___fladd@b+2,f,c
 53965  0163A2  505D               	movf	i2___fladd@a+3,w,c
 53966  0163A4  2259               	addwfc	i2___fladd@b+3,f,c
 53967                           
 53968                           ; BSR set to: 0
 53969  0163A6  A059               	btfss	i2___fladd@b+3,0,c
 53970  0163A8  D083               	goto	i2u1798_40
 53971                           
 53972                           ; BSR set to: 0
 53973  0163AA  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53974  0163AC  D006               	goto	i2l2753
 53975                           
 53976                           ; BSR set to: 0
 53977  0163AE  90D8               	bcf	status,0,c
 53978  0163B0  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53979  0163B2  516B               	movf	i2___fladd@grs& (0+255),w,b
 53980  0163B4  0901               	iorlw	1
 53981  0163B6  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53982  0163B8  D002               	goto	i2l2754
 53983  0163BA                     i2l2753:
 53984                           
 53985                           ; BSR set to: 0
 53986                           
 53987                           ; BSR set to: 0
 53988  0163BA  90D8               	bcf	status,0,c
 53989  0163BC  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53990  0163BE                     i2l2754:
 53991                           
 53992                           ; BSR set to: 0
 53993                           
 53994                           ; BSR set to: 0
 53995  0163BE  B056               	btfsc	i2___fladd@b,0,c
 53996                           
 53997                           ; BSR set to: 0
 53998  0163C0  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 53999                           
 54000                           ; BSR set to: 0
 54001                           
 54002                           ; BSR set to: 0
 54003  0163C2  3459               	rlcf	i2___fladd@b+3,w,c
 54004  0163C4  3259               	rrcf	i2___fladd@b+3,f,c
 54005  0163C6  3258               	rrcf	i2___fladd@b+2,f,c
 54006  0163C8  3257               	rrcf	i2___fladd@b+1,f,c
 54007  0163CA  3256               	rrcf	i2___fladd@b,f,c
 54008                           
 54009                           ; BSR set to: 0
 54010  0163CC  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 54011                           
 54012                           ; BSR set to: 0
 54013  0163CE  D070               	goto	i2u1798_40
 54014  0163D0                     i2l2749:
 54015                           
 54016                           ; BSR set to: 0
 54017                           
 54018                           ; BSR set to: 0
 54019  0163D0  505A               	movf	i2___fladd@a,w,c
 54020  0163D2  5C56               	subwf	i2___fladd@b,w,c
 54021  0163D4  505B               	movf	i2___fladd@a+1,w,c
 54022  0163D6  5857               	subwfb	i2___fladd@b+1,w,c
 54023  0163D8  505C               	movf	i2___fladd@a+2,w,c
 54024  0163DA  5858               	subwfb	i2___fladd@b+2,w,c
 54025  0163DC  5059               	movf	i2___fladd@b+3,w,c
 54026  0163DE  0A80               	xorlw	128
 54027  0163E0  6F60               	movwf	??i2___fladd& (0+255),b
 54028  0163E2  505D               	movf	i2___fladd@a+3,w,c
 54029  0163E4  0A80               	xorlw	128
 54030  0163E6  5960               	subwfb	??i2___fladd& (0+255),w,b
 54031  0163E8  B0D8               	btfsc	status,0,c
 54032  0163EA  D036               	goto	i2l2757
 54033                           
 54034                           ; BSR set to: 0
 54035  0163EC  C056  F060         	movff	i2___fladd@b,??i2___fladd
 54036  0163F0  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 54037  0163F4  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 54038  0163F8  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 54039  0163FC  1F60               	comf	??i2___fladd& (0+255),f,b
 54040  0163FE  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 54041  016400  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 54042  016402  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 54043  016404  2B60               	incf	??i2___fladd& (0+255),f,b
 54044  016406  0E00               	movlw	0
 54045  016408  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 54046  01640A  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 54047  01640C  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 54048  01640E  505A               	movf	i2___fladd@a,w,c
 54049  016410  2560               	addwf	??i2___fladd& (0+255),w,b
 54050  016412  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 54051  016414  505B               	movf	i2___fladd@a+1,w,c
 54052  016416  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 54053  016418  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 54054  01641A  505C               	movf	i2___fladd@a+2,w,c
 54055  01641C  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 54056  01641E  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 54057  016420  505D               	movf	i2___fladd@a+3,w,c
 54058  016422  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 54059  016424  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 54060  016426  0EFF               	movlw	255
 54061  016428  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 54062  01642A  6E56               	movwf	i2___fladd@b,c
 54063  01642C  0EFF               	movlw	255
 54064  01642E  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 54065  016430  6E57               	movwf	i2___fladd@b+1,c
 54066  016432  0EFF               	movlw	255
 54067  016434  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 54068  016436  6E58               	movwf	i2___fladd@b+2,c
 54069  016438  0EFF               	movlw	255
 54070  01643A  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 54071  01643C  6E59               	movwf	i2___fladd@b+3,c
 54072  01643E  0E80               	movlw	128
 54073  016440  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 54074                           
 54075                           ; BSR set to: 0
 54076  016442  6D6B               	negf	i2___fladd@grs& (0+255),b
 54077                           
 54078                           ; BSR set to: 0
 54079  016444  516B               	movf	i2___fladd@grs& (0+255),w,b
 54080  016446  A4D8               	btfss	status,2,c
 54081  016448  D00F               	goto	i2l2759
 54082                           
 54083                           ; BSR set to: 0
 54084  01644A  0E01               	movlw	1
 54085  01644C  2656               	addwf	i2___fladd@b,f,c
 54086  01644E  0E00               	movlw	0
 54087  016450  2257               	addwfc	i2___fladd@b+1,f,c
 54088  016452  2258               	addwfc	i2___fladd@b+2,f,c
 54089  016454  2259               	addwfc	i2___fladd@b+3,f,c
 54090                           
 54091                           ; BSR set to: 0
 54092  016456  D008               	goto	i2l2759
 54093  016458                     i2l2757:
 54094                           
 54095                           ; BSR set to: 0
 54096                           
 54097                           ; BSR set to: 0
 54098  016458  505A               	movf	i2___fladd@a,w,c
 54099  01645A  5E56               	subwf	i2___fladd@b,f,c
 54100  01645C  505B               	movf	i2___fladd@a+1,w,c
 54101  01645E  5A57               	subwfb	i2___fladd@b+1,f,c
 54102  016460  505C               	movf	i2___fladd@a+2,w,c
 54103  016462  5A58               	subwfb	i2___fladd@b+2,f,c
 54104  016464  505D               	movf	i2___fladd@a+3,w,c
 54105  016466  5A59               	subwfb	i2___fladd@b+3,f,c
 54106  016468                     i2l2759:
 54107                           
 54108                           ; BSR set to: 0
 54109  016468  5056               	movf	i2___fladd@b,w,c
 54110  01646A  1057               	iorwf	i2___fladd@b+1,w,c
 54111  01646C  1058               	iorwf	i2___fladd@b+2,w,c
 54112  01646E  1059               	iorwf	i2___fladd@b+3,w,c
 54113  016470  A4D8               	btfss	status,2,c
 54114  016472  D01C               	goto	i2l2766
 54115                           
 54116                           ; BSR set to: 0
 54117  016474  516B               	movf	i2___fladd@grs& (0+255),w,b
 54118  016476  A4D8               	btfss	status,2,c
 54119  016478  D019               	goto	i2l2766
 54120                           
 54121                           ; BSR set to: 0
 54122  01647A  0E00               	movlw	0
 54123  01647C  6E56               	movwf	?i2___fladd,c
 54124  01647E  0E00               	movlw	0
 54125  016480  6E57               	movwf	?i2___fladd+1,c
 54126  016482  0E00               	movlw	0
 54127  016484  6E58               	movwf	?i2___fladd+2,c
 54128  016486  0E00               	movlw	0
 54129  016488  6E59               	movwf	?i2___fladd+3,c
 54130                           
 54131                           ; BSR set to: 0
 54132  01648A  0012               	return	
 54133  01648C                     
 54134                           ; BSR set to: 0
 54135                           
 54136                           ; BSR set to: 0
 54137  01648C  90D8               	bcf	status,0,c
 54138  01648E  3656               	rlcf	i2___fladd@b,f,c
 54139  016490  3657               	rlcf	i2___fladd@b+1,f,c
 54140  016492  3658               	rlcf	i2___fladd@b+2,f,c
 54141  016494  3659               	rlcf	i2___fladd@b+3,f,c
 54142                           
 54143                           ; BSR set to: 0
 54144  016496  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 54145                           
 54146                           ; BSR set to: 0
 54147  016498  8056               	bsf	i2___fladd@b,0,c
 54148                           
 54149                           ; BSR set to: 0
 54150                           
 54151                           ; BSR set to: 0
 54152  01649A  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 54153  01649C  D002               	goto	i2l2764
 54154                           
 54155                           ; BSR set to: 0
 54156  01649E  80D8               	bsf	status,0,c
 54157  0164A0  D001               	goto	L32
 54158  0164A2                     i2l2764:
 54159                           
 54160                           ; BSR set to: 0
 54161                           
 54162                           ; BSR set to: 0
 54163  0164A2  90D8               	bcf	status,0,c
 54164  0164A4                     L32:
 54165  0164A4  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 54166                           
 54167                           ; BSR set to: 0
 54168                           
 54169                           ; BSR set to: 0
 54170  0164A6  516A               	movf	i2___fladd@bexp& (0+255),w,b
 54171  0164A8  A4D8               	btfss	status,2,c
 54172                           
 54173                           ; BSR set to: 0
 54174  0164AA  076A               	decf	i2___fladd@bexp& (0+255),f,b
 54175  0164AC                     i2l2766:
 54176                           
 54177                           ; BSR set to: 0
 54178                           
 54179                           ; BSR set to: 0
 54180                           
 54181                           ; BSR set to: 0
 54182  0164AC  AE58               	btfss	i2___fladd@b+2,7,c
 54183  0164AE  D7EE               	goto	i2l2762
 54184  0164B0                     i2u1798_40:
 54185                           
 54186                           ; BSR set to: 0
 54187                           
 54188                           ; BSR set to: 0
 54189                           
 54190                           ; BSR set to: 0
 54191  0164B0  0E00               	movlw	0
 54192  0164B2  6F69               	movwf	i2___fladd@aexp& (0+255),b
 54193                           
 54194                           ; BSR set to: 0
 54195  0164B4  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 54196  0164B6  D00A               	goto	i2l2771
 54197                           
 54198                           ; BSR set to: 0
 54199  0164B8  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 54200  0164BC  0E7F               	movlw	127
 54201  0164BE  1760               	andwf	??i2___fladd& (0+255),f,b
 54202  0164C0  A4D8               	btfss	status,2,c
 54203  0164C2  D002               	goto	i2u1801_40
 54204                           
 54205                           ; BSR set to: 0
 54206                           
 54207                           ; BSR set to: 0
 54208  0164C4  A056               	btfss	i2___fladd@b,0,c
 54209  0164C6  D002               	goto	i2l2771
 54210  0164C8                     i2u1801_40:
 54211                           
 54212                           ; BSR set to: 0
 54213  0164C8  0E01               	movlw	1
 54214  0164CA  6F69               	movwf	i2___fladd@aexp& (0+255),b
 54215  0164CC                     i2l2771:
 54216                           
 54217                           ; BSR set to: 0
 54218                           
 54219                           ; BSR set to: 0
 54220                           
 54221                           ; BSR set to: 0
 54222  0164CC  5169               	movf	i2___fladd@aexp& (0+255),w,b
 54223  0164CE  B4D8               	btfsc	status,2,c
 54224  0164D0  D020               	goto	i2l2774
 54225                           
 54226                           ; BSR set to: 0
 54227  0164D2  0E01               	movlw	1
 54228  0164D4  2656               	addwf	i2___fladd@b,f,c
 54229  0164D6  0E00               	movlw	0
 54230  0164D8  2257               	addwfc	i2___fladd@b+1,f,c
 54231  0164DA  2258               	addwfc	i2___fladd@b+2,f,c
 54232  0164DC  2259               	addwfc	i2___fladd@b+3,f,c
 54233                           
 54234                           ; BSR set to: 0
 54235  0164DE  A059               	btfss	i2___fladd@b+3,0,c
 54236  0164E0  D018               	goto	i2l2774
 54237                           
 54238                           ; BSR set to: 0
 54239  0164E2  C056  F060         	movff	i2___fladd@b,??i2___fladd
 54240  0164E6  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 54241  0164EA  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 54242  0164EE  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 54243  0164F2  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 54244  0164F4  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 54245  0164F6  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 54246  0164F8  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 54247  0164FA  3360               	rrcf	??i2___fladd& (0+255),f,b
 54248  0164FC  C060  F056         	movff	??i2___fladd,i2___fladd@b
 54249  016500  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 54250  016504  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 54251  016508  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 54252  01650C  296A               	incf	i2___fladd@bexp& (0+255),w,b
 54253  01650E  A4D8               	btfss	status,2,c
 54254                           
 54255                           ; BSR set to: 0
 54256  016510  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 54257  016512                     i2l2774:
 54258                           
 54259                           ; BSR set to: 0
 54260                           
 54261                           ; BSR set to: 0
 54262                           
 54263                           ; BSR set to: 0
 54264                           
 54265                           ; BSR set to: 0
 54266  016512  296A               	incf	i2___fladd@bexp& (0+255),w,b
 54267  016514  B4D8               	btfsc	status,2,c
 54268  016516  D003               	goto	i2u1806_40
 54269                           
 54270                           ; BSR set to: 0
 54271  016518  516A               	movf	i2___fladd@bexp& (0+255),w,b
 54272  01651A  A4D8               	btfss	status,2,c
 54273  01651C  D00D               	goto	i2l2778
 54274  01651E                     i2u1806_40:
 54275                           
 54276                           ; BSR set to: 0
 54277                           
 54278                           ; BSR set to: 0
 54279  01651E  0E00               	movlw	0
 54280  016520  6E56               	movwf	i2___fladd@b,c
 54281  016522  0E00               	movlw	0
 54282  016524  6E57               	movwf	i2___fladd@b+1,c
 54283  016526  0E00               	movlw	0
 54284  016528  6E58               	movwf	i2___fladd@b+2,c
 54285  01652A  0E00               	movlw	0
 54286  01652C  6E59               	movwf	i2___fladd@b+3,c
 54287  01652E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 54288  016530  A4D8               	btfss	status,2,c
 54289  016532  D002               	goto	i2l2778
 54290                           
 54291                           ; BSR set to: 0
 54292  016534  0E00               	movlw	0
 54293  016536  6F68               	movwf	i2___fladd@signs& (0+255),b
 54294  016538                     i2l2778:
 54295                           
 54296                           ; BSR set to: 0
 54297                           
 54298                           ; BSR set to: 0
 54299                           
 54300                           ; BSR set to: 0
 54301  016538  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 54302  01653A  D002               	goto	i2l2779
 54303                           
 54304                           ; BSR set to: 0
 54305  01653C  8E58               	bsf	i2___fladd@b+2,7,c
 54306  01653E  D001               	goto	i2l2780
 54307  016540                     i2l2779:
 54308                           
 54309                           ; BSR set to: 0
 54310                           
 54311                           ; BSR set to: 0
 54312  016540  9E58               	bcf	i2___fladd@b+2,7,c
 54313  016542                     i2l2780:
 54314                           
 54315                           ; BSR set to: 0
 54316                           
 54317                           ; BSR set to: 0
 54318  016542  90D8               	bcf	status,0,c
 54319  016544  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 54320  016546  6E59               	movwf	i2___fladd@b+3,c
 54321                           
 54322                           ; BSR set to: 0
 54323  016548  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 54324                           
 54325                           ; BSR set to: 0
 54326  01654A  8E59               	bsf	i2___fladd@b+3,7,c
 54327                           
 54328                           ; BSR set to: 0
 54329                           
 54330                           ; BSR set to: 0
 54331  01654C  C056  F056         	movff	i2___fladd@b,?i2___fladd
 54332  016550  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 54333  016554  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 54334  016558  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 54335  01655C  0012               	return	
 54336  01655E                     __end_ofi2___fladd:
 54337                           	opt stack 0
 54338                           tosu	equ	0xFFF
 54339                           tosh	equ	0xFFE
 54340                           tosl	equ	0xFFD
 54341                           pclatu	equ	0xFFB
 54342                           pclath	equ	0xFFA
 54343                           tblptru	equ	0xFF8
 54344                           tblptrh	equ	0xFF7
 54345                           tblptrl	equ	0xFF6
 54346                           tablat	equ	0xFF5
 54347                           prodh	equ	0xFF4
 54348                           prodl	equ	0xFF3
 54349                           intcon	equ	0xFF2
 54350                           indf0	equ	0xFEF
 54351                           postinc0	equ	0xFEE
 54352                           fsr0h	equ	0xFEA
 54353                           fsr0l	equ	0xFE9
 54354                           wreg	equ	0xFE8
 54355                           indf1	equ	0xFE7
 54356                           postdec1	equ	0xFE5
 54357                           plusw1	equ	0xFE3
 54358                           fsr1h	equ	0xFE2
 54359                           fsr1l	equ	0xFE1
 54360                           bsr	equ	0xFE0
 54361                           indf2	equ	0xFDF
 54362                           postinc2	equ	0xFDE
 54363                           postdec2	equ	0xFDD
 54364                           plusw2	equ	0xFDB
 54365                           fsr2h	equ	0xFDA
 54366                           fsr2l	equ	0xFD9
 54367                           status	equ	0xFD8
 54368                           
 54369 ;; *************** function _abs *****************
 54370 ;; Defined at:
 54371 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 54372 ;; Parameters:    Size  Location     Type
 54373 ;;  a               2   22[BANK0 ] int 
 54374 ;; Auto vars:     Size  Location     Type
 54375 ;;		None
 54376 ;; Return value:  Size  Location     Type
 54377 ;;                  2   22[BANK0 ] int 
 54378 ;; Registers used:
 54379 ;;		wreg, status,2, status,0
 54380 ;; Tracked objects:
 54381 ;;		On entry : 0/0
 54382 ;;		On exit  : 0/0
 54383 ;;		Unchanged: 0/0
 54384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54385 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54387 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54388 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54389 ;;Total ram usage:        4 bytes
 54390 ;; Hardware stack levels used:    1
 54391 ;; This function calls:
 54392 ;;		Nothing
 54393 ;; This function is called by:
 54394 ;;		_ADCPostProcessingCallback
 54395 ;; This function uses a non-reentrant model
 54396 ;;
 54397                           
 54398                           	psect	text169
 54399  01AE46                     __ptext169:
 54400                           	opt stack 0
 54401  01AE46                     _abs:
 54402                           	opt stack 15
 54403                           
 54404                           ; BSR set to: 0
 54405                           ;incstack = 0
 54406  01AE46  0100               	movlb	0	; () banked
 54407  01AE48  AF77               	btfss	(abs@a+1)& (0+255),7,b
 54408  01AE4A  D00D               	goto	i2l2185
 54409                           
 54410                           ; BSR set to: 0
 54411  01AE4C  C076  F078         	movff	abs@a,??_abs
 54412  01AE50  C077  F079         	movff	abs@a+1,??_abs+1
 54413  01AE54  1F78               	comf	??_abs& (0+255),f,b
 54414  01AE56  1F79               	comf	(??_abs+1)& (0+255),f,b
 54415  01AE58  4B78               	infsnz	??_abs& (0+255),f,b
 54416  01AE5A  2B79               	incf	(??_abs+1)& (0+255),f,b
 54417  01AE5C  C078  F076         	movff	??_abs,?_abs
 54418  01AE60  C079  F077         	movff	??_abs+1,?_abs+1
 54419  01AE64  0012               	return	
 54420  01AE66                     i2l2185:
 54421                           
 54422                           ; BSR set to: 0
 54423  01AE66  C076  F076         	movff	abs@a,?_abs
 54424  01AE6A  C077  F077         	movff	abs@a+1,?_abs+1
 54425                           
 54426                           ; BSR set to: 0
 54427  01AE6E  0012               	return		;funcret
 54428  01AE70                     __end_of_abs:
 54429                           	opt stack 0
 54430                           tosu	equ	0xFFF
 54431                           tosh	equ	0xFFE
 54432                           tosl	equ	0xFFD
 54433                           pclatu	equ	0xFFB
 54434                           pclath	equ	0xFFA
 54435                           tblptru	equ	0xFF8
 54436                           tblptrh	equ	0xFF7
 54437                           tblptrl	equ	0xFF6
 54438                           tablat	equ	0xFF5
 54439                           prodh	equ	0xFF4
 54440                           prodl	equ	0xFF3
 54441                           intcon	equ	0xFF2
 54442                           indf0	equ	0xFEF
 54443                           postinc0	equ	0xFEE
 54444                           fsr0h	equ	0xFEA
 54445                           fsr0l	equ	0xFE9
 54446                           wreg	equ	0xFE8
 54447                           indf1	equ	0xFE7
 54448                           postdec1	equ	0xFE5
 54449                           plusw1	equ	0xFE3
 54450                           fsr1h	equ	0xFE2
 54451                           fsr1l	equ	0xFE1
 54452                           bsr	equ	0xFE0
 54453                           indf2	equ	0xFDF
 54454                           postinc2	equ	0xFDE
 54455                           postdec2	equ	0xFDD
 54456                           plusw2	equ	0xFDB
 54457                           fsr2h	equ	0xFDA
 54458                           fsr2l	equ	0xFD9
 54459                           status	equ	0xFD8
 54460                           
 54461 ;; *************** function _ADCC_StopConversion *****************
 54462 ;; Defined at:
 54463 ;;		line 165 in file "mcc_generated_files/adcc.c"
 54464 ;; Parameters:    Size  Location     Type
 54465 ;;		None
 54466 ;; Auto vars:     Size  Location     Type
 54467 ;;		None
 54468 ;; Return value:  Size  Location     Type
 54469 ;;                  1    wreg      void 
 54470 ;; Registers used:
 54471 ;;		None
 54472 ;; Tracked objects:
 54473 ;;		On entry : 0/0
 54474 ;;		On exit  : 0/0
 54475 ;;		Unchanged: 0/0
 54476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54481 ;;Total ram usage:        0 bytes
 54482 ;; Hardware stack levels used:    1
 54483 ;; This function calls:
 54484 ;;		Nothing
 54485 ;; This function is called by:
 54486 ;;		_ADCPostProcessingCallback
 54487 ;; This function uses a non-reentrant model
 54488 ;;
 54489                           
 54490                           	psect	text170
 54491  01B33A                     __ptext170:
 54492                           	opt stack 0
 54493  01B33A                     _ADCC_StopConversion:
 54494                           	opt stack 15
 54495                           
 54496                           ;adcc.c: 168: ADCON0bits.ADGO = 0;
 54497                           
 54498                           ; BSR set to: 0
 54499                           ;incstack = 0
 54500  01B33A  9060               	bcf	3936,0,c	;volatile
 54501  01B33C  0012               	return		;funcret
 54502  01B33E                     __end_of_ADCC_StopConversion:
 54503                           	opt stack 0
 54504                           tosu	equ	0xFFF
 54505                           tosh	equ	0xFFE
 54506                           tosl	equ	0xFFD
 54507                           pclatu	equ	0xFFB
 54508                           pclath	equ	0xFFA
 54509                           tblptru	equ	0xFF8
 54510                           tblptrh	equ	0xFF7
 54511                           tblptrl	equ	0xFF6
 54512                           tablat	equ	0xFF5
 54513                           prodh	equ	0xFF4
 54514                           prodl	equ	0xFF3
 54515                           intcon	equ	0xFF2
 54516                           indf0	equ	0xFEF
 54517                           postinc0	equ	0xFEE
 54518                           fsr0h	equ	0xFEA
 54519                           fsr0l	equ	0xFE9
 54520                           wreg	equ	0xFE8
 54521                           indf1	equ	0xFE7
 54522                           postdec1	equ	0xFE5
 54523                           plusw1	equ	0xFE3
 54524                           fsr1h	equ	0xFE2
 54525                           fsr1l	equ	0xFE1
 54526                           bsr	equ	0xFE0
 54527                           indf2	equ	0xFDF
 54528                           postinc2	equ	0xFDE
 54529                           postdec2	equ	0xFDD
 54530                           plusw2	equ	0xFDB
 54531                           fsr2h	equ	0xFDA
 54532                           fsr2l	equ	0xFD9
 54533                           status	equ	0xFD8
 54534                           
 54535 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 54536 ;; Defined at:
 54537 ;;		line 219 in file "mcc_generated_files/adcc.c"
 54538 ;; Parameters:    Size  Location     Type
 54539 ;;		None
 54540 ;; Auto vars:     Size  Location     Type
 54541 ;;		None
 54542 ;; Return value:  Size  Location     Type
 54543 ;;                  1    wreg      unsigned char 
 54544 ;; Registers used:
 54545 ;;		wreg
 54546 ;; Tracked objects:
 54547 ;;		On entry : 0/0
 54548 ;;		On exit  : 0/0
 54549 ;;		Unchanged: 0/0
 54550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54555 ;;Total ram usage:        0 bytes
 54556 ;; Hardware stack levels used:    1
 54557 ;; This function calls:
 54558 ;;		Nothing
 54559 ;; This function is called by:
 54560 ;;		_ADCPostProcessingCallback
 54561 ;; This function uses a non-reentrant model
 54562 ;;
 54563                           
 54564                           	psect	text171
 54565  01B2E2                     __ptext171:
 54566                           	opt stack 0
 54567  01B2E2                     _ADCC_HasAccumulatorOverflowed:
 54568                           	opt stack 15
 54569                           
 54570                           ;adcc.c: 222: return ADSTATbits.ADAOV;
 54571                           
 54572                           ;incstack = 0
 54573  01B2E2  AE65               	btfss	3941,7,c	;volatile
 54574  01B2E4  D002               	goto	i2u1311_40
 54575  01B2E6  0E01               	movlw	1
 54576  01B2E8  0012               	return	
 54577  01B2EA                     i2u1311_40:
 54578  01B2EA  0E00               	movlw	0
 54579  01B2EC  0012               	return	
 54580  01B2EE                     __end_of_ADCC_HasAccumulatorOverflowed:
 54581                           	opt stack 0
 54582                           tosu	equ	0xFFF
 54583                           tosh	equ	0xFFE
 54584                           tosl	equ	0xFFD
 54585                           pclatu	equ	0xFFB
 54586                           pclath	equ	0xFFA
 54587                           tblptru	equ	0xFF8
 54588                           tblptrh	equ	0xFF7
 54589                           tblptrl	equ	0xFF6
 54590                           tablat	equ	0xFF5
 54591                           prodh	equ	0xFF4
 54592                           prodl	equ	0xFF3
 54593                           intcon	equ	0xFF2
 54594                           indf0	equ	0xFEF
 54595                           postinc0	equ	0xFEE
 54596                           fsr0h	equ	0xFEA
 54597                           fsr0l	equ	0xFE9
 54598                           wreg	equ	0xFE8
 54599                           indf1	equ	0xFE7
 54600                           postdec1	equ	0xFE5
 54601                           plusw1	equ	0xFE3
 54602                           fsr1h	equ	0xFE2
 54603                           fsr1l	equ	0xFE1
 54604                           bsr	equ	0xFE0
 54605                           indf2	equ	0xFDF
 54606                           postinc2	equ	0xFDE
 54607                           postdec2	equ	0xFDD
 54608                           plusw2	equ	0xFDB
 54609                           fsr2h	equ	0xFDA
 54610                           fsr2l	equ	0xFD9
 54611                           status	equ	0xFD8
 54612                           
 54613 ;; *************** function _ADCC_GetFilterValue *****************
 54614 ;; Defined at:
 54615 ;;		line 225 in file "mcc_generated_files/adcc.c"
 54616 ;; Parameters:    Size  Location     Type
 54617 ;;		None
 54618 ;; Auto vars:     Size  Location     Type
 54619 ;;		None
 54620 ;; Return value:  Size  Location     Type
 54621 ;;                  2    0[COMRAM] unsigned int 
 54622 ;; Registers used:
 54623 ;;		wreg, status,2, status,0
 54624 ;; Tracked objects:
 54625 ;;		On entry : 0/0
 54626 ;;		On exit  : 0/0
 54627 ;;		Unchanged: 0/0
 54628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54632 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54633 ;;Total ram usage:        4 bytes
 54634 ;; Hardware stack levels used:    1
 54635 ;; This function calls:
 54636 ;;		Nothing
 54637 ;; This function is called by:
 54638 ;;		_ADCPostProcessingCallback
 54639 ;; This function uses a non-reentrant model
 54640 ;;
 54641                           
 54642                           	psect	text172
 54643  01B1BE                     __ptext172:
 54644                           	opt stack 0
 54645  01B1BE                     _ADCC_GetFilterValue:
 54646                           	opt stack 15
 54647                           
 54648                           ;adcc.c: 228: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 54649                           
 54650                           ;incstack = 0
 54651  01B1BE  5073               	movf	3955,w,c	;volatile
 54652  01B1C0  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 54653  01B1C2  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 54654  01B1C4  5072               	movf	3954,w,c	;volatile
 54655  01B1C6  2403               	addwf	??_ADCC_GetFilterValue,w,c
 54656  01B1C8  6E01               	movwf	?_ADCC_GetFilterValue,c
 54657  01B1CA  0E00               	movlw	0
 54658  01B1CC  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 54659  01B1CE  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 54660  01B1D0  0012               	return	
 54661  01B1D2                     __end_of_ADCC_GetFilterValue:
 54662                           	opt stack 0
 54663                           tosu	equ	0xFFF
 54664                           tosh	equ	0xFFE
 54665                           tosl	equ	0xFFD
 54666                           pclatu	equ	0xFFB
 54667                           pclath	equ	0xFFA
 54668                           tblptru	equ	0xFF8
 54669                           tblptrh	equ	0xFF7
 54670                           tblptrl	equ	0xFF6
 54671                           tablat	equ	0xFF5
 54672                           prodh	equ	0xFF4
 54673                           prodl	equ	0xFF3
 54674                           intcon	equ	0xFF2
 54675                           indf0	equ	0xFEF
 54676                           postinc0	equ	0xFEE
 54677                           fsr0h	equ	0xFEA
 54678                           fsr0l	equ	0xFE9
 54679                           wreg	equ	0xFE8
 54680                           indf1	equ	0xFE7
 54681                           postdec1	equ	0xFE5
 54682                           plusw1	equ	0xFE3
 54683                           fsr1h	equ	0xFE2
 54684                           fsr1l	equ	0xFE1
 54685                           bsr	equ	0xFE0
 54686                           indf2	equ	0xFDF
 54687                           postinc2	equ	0xFDE
 54688                           postdec2	equ	0xFDD
 54689                           plusw2	equ	0xFDB
 54690                           fsr2h	equ	0xFDA
 54691                           fsr2l	equ	0xFD9
 54692                           status	equ	0xFD8
 54693                           
 54694 ;; *************** function _ADCC_GetCurrentCountofConversions *****************
 54695 ;; Defined at:
 54696 ;;		line 201 in file "mcc_generated_files/adcc.c"
 54697 ;; Parameters:    Size  Location     Type
 54698 ;;		None
 54699 ;; Auto vars:     Size  Location     Type
 54700 ;;		None
 54701 ;; Return value:  Size  Location     Type
 54702 ;;                  1    wreg      unsigned char 
 54703 ;; Registers used:
 54704 ;;		wreg, status,2
 54705 ;; Tracked objects:
 54706 ;;		On entry : 0/0
 54707 ;;		On exit  : 0/0
 54708 ;;		Unchanged: 0/0
 54709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54714 ;;Total ram usage:        0 bytes
 54715 ;; Hardware stack levels used:    1
 54716 ;; This function calls:
 54717 ;;		Nothing
 54718 ;; This function is called by:
 54719 ;;		_ADCPostProcessingCallback
 54720 ;; This function uses a non-reentrant model
 54721 ;;
 54722                           
 54723                           	psect	text173
 54724  01B33E                     __ptext173:
 54725                           	opt stack 0
 54726  01B33E                     _ADCC_GetCurrentCountofConversions:
 54727                           	opt stack 15
 54728                           
 54729                           ;adcc.c: 204: return ADCNT;
 54730                           
 54731                           ;incstack = 0
 54732  01B33E  5067               	movf	3943,w,c	;volatile
 54733  01B340  0012               	return	
 54734  01B342                     __end_of_ADCC_GetCurrentCountofConversions:
 54735                           	opt stack 0
 54736                           tosu	equ	0xFFF
 54737                           tosh	equ	0xFFE
 54738                           tosl	equ	0xFFD
 54739                           pclatu	equ	0xFFB
 54740                           pclath	equ	0xFFA
 54741                           tblptru	equ	0xFF8
 54742                           tblptrh	equ	0xFF7
 54743                           tblptrl	equ	0xFF6
 54744                           tablat	equ	0xFF5
 54745                           prodh	equ	0xFF4
 54746                           prodl	equ	0xFF3
 54747                           intcon	equ	0xFF2
 54748                           indf0	equ	0xFEF
 54749                           postinc0	equ	0xFEE
 54750                           fsr0h	equ	0xFEA
 54751                           fsr0l	equ	0xFE9
 54752                           wreg	equ	0xFE8
 54753                           indf1	equ	0xFE7
 54754                           postdec1	equ	0xFE5
 54755                           plusw1	equ	0xFE3
 54756                           fsr1h	equ	0xFE2
 54757                           fsr1l	equ	0xFE1
 54758                           bsr	equ	0xFE0
 54759                           indf2	equ	0xFDF
 54760                           postinc2	equ	0xFDE
 54761                           postdec2	equ	0xFDD
 54762                           plusw2	equ	0xFDB
 54763                           fsr2h	equ	0xFDA
 54764                           fsr2l	equ	0xFD9
 54765                           status	equ	0xFD8
 54766                           
 54767 ;; *************** function _ADCC_GetConversionResult *****************
 54768 ;; Defined at:
 54769 ;;		line 133 in file "mcc_generated_files/adcc.c"
 54770 ;; Parameters:    Size  Location     Type
 54771 ;;		None
 54772 ;; Auto vars:     Size  Location     Type
 54773 ;;		None
 54774 ;; Return value:  Size  Location     Type
 54775 ;;                  2    0[COMRAM] unsigned int 
 54776 ;; Registers used:
 54777 ;;		wreg, status,2, status,0
 54778 ;; Tracked objects:
 54779 ;;		On entry : 0/0
 54780 ;;		On exit  : 0/0
 54781 ;;		Unchanged: 0/0
 54782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54785 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54786 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54787 ;;Total ram usage:        4 bytes
 54788 ;; Hardware stack levels used:    1
 54789 ;; This function calls:
 54790 ;;		Nothing
 54791 ;; This function is called by:
 54792 ;;		_ADCPostProcessingCallback
 54793 ;; This function uses a non-reentrant model
 54794 ;;
 54795                           
 54796                           	psect	text174
 54797  01B1D2                     __ptext174:
 54798                           	opt stack 0
 54799  01B1D2                     _ADCC_GetConversionResult:
 54800                           	opt stack 15
 54801                           
 54802                           ;adcc.c: 136: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 54803                           
 54804                           ;incstack = 0
 54805  01B1D2  5064               	movf	3940,w,c	;volatile
 54806  01B1D4  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 54807  01B1D6  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 54808  01B1D8  5063               	movf	3939,w,c	;volatile
 54809  01B1DA  2403               	addwf	??_ADCC_GetConversionResult,w,c
 54810  01B1DC  6E01               	movwf	?_ADCC_GetConversionResult,c
 54811  01B1DE  0E00               	movlw	0
 54812  01B1E0  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 54813  01B1E2  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 54814  01B1E4  0012               	return	
 54815  01B1E6                     __end_of_ADCC_GetConversionResult:
 54816                           	opt stack 0
 54817                           tosu	equ	0xFFF
 54818                           tosh	equ	0xFFE
 54819                           tosl	equ	0xFFD
 54820                           pclatu	equ	0xFFB
 54821                           pclath	equ	0xFFA
 54822                           tblptru	equ	0xFF8
 54823                           tblptrh	equ	0xFF7
 54824                           tblptrl	equ	0xFF6
 54825                           tablat	equ	0xFF5
 54826                           prodh	equ	0xFF4
 54827                           prodl	equ	0xFF3
 54828                           intcon	equ	0xFF2
 54829                           indf0	equ	0xFEF
 54830                           postinc0	equ	0xFEE
 54831                           fsr0h	equ	0xFEA
 54832                           fsr0l	equ	0xFE9
 54833                           wreg	equ	0xFE8
 54834                           indf1	equ	0xFE7
 54835                           postdec1	equ	0xFE5
 54836                           plusw1	equ	0xFE3
 54837                           fsr1h	equ	0xFE2
 54838                           fsr1l	equ	0xFE1
 54839                           bsr	equ	0xFE0
 54840                           indf2	equ	0xFDF
 54841                           postinc2	equ	0xFDE
 54842                           postdec2	equ	0xFDD
 54843                           plusw2	equ	0xFDB
 54844                           fsr2h	equ	0xFDA
 54845                           fsr2l	equ	0xFD9
 54846                           status	equ	0xFD8
 54847                           tosu	equ	0xFFF
 54848                           tosh	equ	0xFFE
 54849                           tosl	equ	0xFFD
 54850                           pclatu	equ	0xFFB
 54851                           pclath	equ	0xFFA
 54852                           tblptru	equ	0xFF8
 54853                           tblptrh	equ	0xFF7
 54854                           tblptrl	equ	0xFF6
 54855                           tablat	equ	0xFF5
 54856                           prodh	equ	0xFF4
 54857                           prodl	equ	0xFF3
 54858                           intcon	equ	0xFF2
 54859                           indf0	equ	0xFEF
 54860                           postinc0	equ	0xFEE
 54861                           fsr0h	equ	0xFEA
 54862                           fsr0l	equ	0xFE9
 54863                           wreg	equ	0xFE8
 54864                           indf1	equ	0xFE7
 54865                           postdec1	equ	0xFE5
 54866                           plusw1	equ	0xFE3
 54867                           fsr1h	equ	0xFE2
 54868                           fsr1l	equ	0xFE1
 54869                           bsr	equ	0xFE0
 54870                           indf2	equ	0xFDF
 54871                           postinc2	equ	0xFDE
 54872                           postdec2	equ	0xFDD
 54873                           plusw2	equ	0xFDB
 54874                           fsr2h	equ	0xFDA
 54875                           fsr2l	equ	0xFD9
 54876                           status	equ	0xFD8
 54877                           
 54878                           	psect	text175
 54879  000000                     __ptext175:
 54880                           	opt stack 0
 54881                           tosu	equ	0xFFF
 54882                           tosh	equ	0xFFE
 54883                           tosl	equ	0xFFD
 54884                           pclatu	equ	0xFFB
 54885                           pclath	equ	0xFFA
 54886                           tblptru	equ	0xFF8
 54887                           tblptrh	equ	0xFF7
 54888                           tblptrl	equ	0xFF6
 54889                           tablat	equ	0xFF5
 54890                           prodh	equ	0xFF4
 54891                           prodl	equ	0xFF3
 54892                           intcon	equ	0xFF2
 54893                           indf0	equ	0xFEF
 54894                           postinc0	equ	0xFEE
 54895                           fsr0h	equ	0xFEA
 54896                           fsr0l	equ	0xFE9
 54897                           wreg	equ	0xFE8
 54898                           indf1	equ	0xFE7
 54899                           postdec1	equ	0xFE5
 54900                           plusw1	equ	0xFE3
 54901                           fsr1h	equ	0xFE2
 54902                           fsr1l	equ	0xFE1
 54903                           bsr	equ	0xFE0
 54904                           indf2	equ	0xFDF
 54905                           postinc2	equ	0xFDE
 54906                           postdec2	equ	0xFDD
 54907                           plusw2	equ	0xFDB
 54908                           fsr2h	equ	0xFDA
 54909                           fsr2l	equ	0xFD9
 54910                           status	equ	0xFD8
 54911                           
 54912                           	psect	rparam
 54913  0000                     tosu	equ	0xFFF
 54914                           tosh	equ	0xFFE
 54915                           tosl	equ	0xFFD
 54916                           pclatu	equ	0xFFB
 54917                           pclath	equ	0xFFA
 54918                           tblptru	equ	0xFF8
 54919                           tblptrh	equ	0xFF7
 54920                           tblptrl	equ	0xFF6
 54921                           tablat	equ	0xFF5
 54922                           prodh	equ	0xFF4
 54923                           prodl	equ	0xFF3
 54924                           intcon	equ	0xFF2
 54925                           indf0	equ	0xFEF
 54926                           postinc0	equ	0xFEE
 54927                           fsr0h	equ	0xFEA
 54928                           fsr0l	equ	0xFE9
 54929                           wreg	equ	0xFE8
 54930                           indf1	equ	0xFE7
 54931                           postdec1	equ	0xFE5
 54932                           plusw1	equ	0xFE3
 54933                           fsr1h	equ	0xFE2
 54934                           fsr1l	equ	0xFE1
 54935                           bsr	equ	0xFE0
 54936                           indf2	equ	0xFDF
 54937                           postinc2	equ	0xFDE
 54938                           postdec2	equ	0xFDD
 54939                           plusw2	equ	0xFDB
 54940                           fsr2h	equ	0xFDA
 54941                           fsr2l	equ	0xFD9
 54942                           status	equ	0xFD8
 54943                           
 54944                           	psect	temp
 54945  00005F                     btemp:
 54946                           	opt stack 0
 54947  00005F                     	ds	1
 54948  0000                     int$flags	set	btemp
 54949  0000                     wtemp6	set	btemp+1
 54950                           tosu	equ	0xFFF
 54951                           tosh	equ	0xFFE
 54952                           tosl	equ	0xFFD
 54953                           pclatu	equ	0xFFB
 54954                           pclath	equ	0xFFA
 54955                           tblptru	equ	0xFF8
 54956                           tblptrh	equ	0xFF7
 54957                           tblptrl	equ	0xFF6
 54958                           tablat	equ	0xFF5
 54959                           prodh	equ	0xFF4
 54960                           prodl	equ	0xFF3
 54961                           intcon	equ	0xFF2
 54962                           indf0	equ	0xFEF
 54963                           postinc0	equ	0xFEE
 54964                           fsr0h	equ	0xFEA
 54965                           fsr0l	equ	0xFE9
 54966                           wreg	equ	0xFE8
 54967                           indf1	equ	0xFE7
 54968                           postdec1	equ	0xFE5
 54969                           plusw1	equ	0xFE3
 54970                           fsr1h	equ	0xFE2
 54971                           fsr1l	equ	0xFE1
 54972                           bsr	equ	0xFE0
 54973                           indf2	equ	0xFDF
 54974                           postinc2	equ	0xFDE
 54975                           postdec2	equ	0xFDD
 54976                           plusw2	equ	0xFDB
 54977                           fsr2h	equ	0xFDA
 54978                           fsr2l	equ	0xFD9
 54979                           status	equ	0xFD8


Data Sizes:
    Strings     11598
    Constant    1038
    Data        43
    BSS         508
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    198     233
    BANK2           256     61     247
    BANK3           256      0     192
    BANK4           256      0     128
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E17311 size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_128(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_128(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_128(CODE[25]), line(BANK3[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_128(CODE[25]), line(BANK3[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[14]), STR_4(CODE[14]), STR_3(CODE[10]), STR_2(CODE[15]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 64
		 -> OLED_RAM_Buffer(BANK3[64]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 64
		 -> OLED_RAM_Buffer(BANK3[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_170(CODE[11]), STR_163(CODE[5]), STR_161(CODE[9]), STR_159(CODE[29]), 
		 -> STR_157(CODE[34]), STR_155(CODE[33]), STR_153(CODE[29]), STR_151(CODE[17]), 
		 -> STR_149(CODE[17]), STR_147(CODE[14]), STR_145(CODE[19]), STR_143(CODE[20]), 
		 -> STR_141(CODE[11]), STR_139(CODE[17]), STR_137(CODE[14]), STR_135(CODE[16]), 
		 -> STR_126(CODE[13]), STR_122(CODE[17]), STR_119(CODE[14]), STR_117(CODE[12]), 
		 -> STR_115(CODE[16]), STR_113(CODE[17]), STR_108(CODE[15]), STR_106(CODE[13]), 
		 -> STR_104(CODE[16]), STR_102(CODE[15]), STR_100(CODE[21]), STR_98(CODE[21]), 
		 -> STR_96(CODE[26]), STR_94(CODE[14]), STR_92(CODE[13]), STR_90(CODE[18]), 
		 -> STR_88(CODE[15]), STR_86(CODE[16]), STR_84(CODE[18]), STR_78(CODE[13]), 
		 -> STR_76(CODE[17]), STR_64(CODE[12]), STR_61(CODE[10]), STR_59(CODE[13]), 
		 -> STR_57(CODE[11]), STR_54(CODE[4]), STR_53(CODE[6]), STR_51(CODE[16]), 
		 -> STR_48(CODE[6]), STR_45(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[2]), STR_42(CODE[3]), STR_41(CODE[3]), STR_40(CODE[3]), 
		 -> STR_39(CODE[3]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[2]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 3086
		 -> STR_175(CODE[13]), STR_174(CODE[31]), STR_173(CODE[26]), STR_172(CODE[28]), 
		 -> STR_171(CODE[426]), STR_169(CODE[30]), STR_168(CODE[46]), STR_167(CODE[39]), 
		 -> STR_166(CODE[62]), STR_165(CODE[55]), STR_164(CODE[470]), STR_162(CODE[3086]), 
		 -> STR_160(CODE[492]), STR_158(CODE[748]), STR_156(CODE[720]), STR_154(CODE[974]), 
		 -> STR_152(CODE[54]), STR_150(CODE[54]), STR_148(CODE[45]), STR_146(CODE[51]), 
		 -> STR_144(CODE[52]), STR_142(CODE[46]), STR_140(CODE[51]), STR_138(CODE[53]), 
		 -> STR_136(CODE[58]), STR_134(CODE[71]), STR_133(CODE[63]), STR_132(CODE[37]), 
		 -> STR_131(CODE[46]), STR_130(CODE[102]), STR_129(CODE[86]), STR_127(CODE[25]), 
		 -> STR_125(CODE[42]), STR_124(CODE[53]), STR_123(CODE[31]), STR_121(CODE[29]), 
		 -> STR_120(CODE[28]), STR_118(CODE[42]), STR_116(CODE[41]), STR_114(CODE[34]), 
		 -> STR_112(CODE[53]), STR_111(CODE[52]), STR_110(CODE[105]), STR_109(CODE[105]), 
		 -> STR_107(CODE[59]), STR_105(CODE[73]), STR_103(CODE[56]), STR_101(CODE[34]), 
		 -> STR_99(CODE[34]), STR_97(CODE[32]), STR_95(CODE[37]), STR_93(CODE[58]), 
		 -> STR_91(CODE[36]), STR_89(CODE[36]), STR_87(CODE[37]), STR_85(CODE[34]), 
		 -> STR_83(CODE[38]), STR_82(CODE[60]), STR_81(CODE[32]), STR_80(CODE[23]), 
		 -> STR_79(CODE[65]), STR_77(CODE[23]), STR_75(CODE[27]), STR_74(CODE[48]), 
		 -> STR_73(CODE[15]), STR_72(CODE[13]), STR_71(CODE[12]), STR_70(CODE[11]), 
		 -> STR_69(CODE[10]), STR_68(CODE[11]), STR_67(CODE[24]), STR_66(CODE[46]), 
		 -> STR_65(CODE[25]), STR_63(CODE[54]), STR_62(CODE[64]), STR_60(CODE[59]), 
		 -> STR_58(CODE[85]), STR_56(CODE[47]), STR_55(CODE[17]), STR_52(CODE[52]), 
		 -> STR_50(CODE[4]), STR_49(CODE[5]), STR_47(CODE[4]), STR_46(CODE[5]), 
		 -> STR_44(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[3]), 
		 -> STR_8(CODE[372]), STR_7(CODE[4]), STR_6(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_sprintf(COMRAM[2]), ?_printf(BANK1[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), printf@ap(BANK1[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK1[2]), ftoa@buf(BANK2[17]), STR_191(CODE[7]), 
		 -> _doprnt@c(BANK1[1]), STR_188(CODE[16]), STR_187(CODE[22]), STR_186(CODE[21]), 
		 -> STR_185(CODE[27]), STR_184(CODE[41]), STR_183(CODE[32]), STR_182(CODE[19]), 
		 -> STR_181(CODE[16]), STR_180(CODE[15]), STR_179(CODE[16]), STR_178(CODE[10]), 
		 -> STR_177(CODE[13]), STR_176(CODE[12]), NULL(NULL[0]), TRIAC_Firing_Angle(BANK0[4]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 3086
		 -> STR_193(CODE[11]), STR_175(CODE[13]), STR_174(CODE[31]), STR_173(CODE[26]), 
		 -> STR_172(CODE[28]), STR_171(CODE[426]), STR_169(CODE[30]), STR_168(CODE[46]), 
		 -> STR_167(CODE[39]), STR_166(CODE[62]), STR_165(CODE[55]), STR_164(CODE[470]), 
		 -> STR_162(CODE[3086]), STR_160(CODE[492]), STR_158(CODE[748]), STR_156(CODE[720]), 
		 -> STR_154(CODE[974]), STR_152(CODE[54]), STR_150(CODE[54]), STR_148(CODE[45]), 
		 -> STR_146(CODE[51]), STR_144(CODE[52]), STR_142(CODE[46]), STR_140(CODE[51]), 
		 -> STR_138(CODE[53]), STR_136(CODE[58]), STR_134(CODE[71]), STR_133(CODE[63]), 
		 -> STR_132(CODE[37]), STR_131(CODE[46]), STR_130(CODE[102]), STR_129(CODE[86]), 
		 -> STR_127(CODE[25]), STR_125(CODE[42]), STR_124(CODE[53]), STR_123(CODE[31]), 
		 -> STR_121(CODE[29]), STR_120(CODE[28]), STR_118(CODE[42]), STR_116(CODE[41]), 
		 -> STR_114(CODE[34]), STR_112(CODE[53]), STR_111(CODE[52]), STR_110(CODE[105]), 
		 -> STR_109(CODE[105]), STR_107(CODE[59]), STR_105(CODE[73]), STR_103(CODE[56]), 
		 -> STR_101(CODE[34]), STR_99(CODE[34]), STR_97(CODE[32]), STR_95(CODE[37]), 
		 -> STR_93(CODE[58]), STR_91(CODE[36]), STR_89(CODE[36]), STR_87(CODE[37]), 
		 -> STR_85(CODE[34]), STR_83(CODE[38]), STR_82(CODE[60]), STR_81(CODE[32]), 
		 -> STR_80(CODE[23]), STR_79(CODE[65]), STR_77(CODE[23]), STR_75(CODE[27]), 
		 -> STR_74(CODE[48]), STR_73(CODE[15]), STR_72(CODE[13]), STR_71(CODE[12]), 
		 -> STR_70(CODE[11]), STR_69(CODE[10]), STR_68(CODE[11]), STR_67(CODE[24]), 
		 -> STR_66(CODE[46]), STR_65(CODE[25]), STR_63(CODE[54]), STR_62(CODE[64]), 
		 -> STR_60(CODE[59]), STR_58(CODE[85]), STR_56(CODE[47]), STR_55(CODE[17]), 
		 -> STR_52(CODE[52]), STR_50(CODE[4]), STR_49(CODE[5]), STR_47(CODE[4]), 
		 -> STR_46(CODE[5]), STR_44(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[3]), STR_8(CODE[372]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_1(CODE[4]), 

    S3996__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S3996__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(BANK1[5]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E17311 size(2) Largest target is 1
		 -> OLED_I2C_Status(BANK1[1]), 

    F17426.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWrite@pflag	PTR enum E17311 size(2) Largest target is 1
		 -> OLED_I2C_Status(BANK1[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK1[2]), 

    F17421.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 
		 -> NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    S3601$pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    S3613$pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_current.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    S3613$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    p_i2c1_current	PTR volatile struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), NULL(NULL[0]), 

    S3624$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    S3624$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    OLED_WriteString@s	PTR unsigned char  size(2) Largest target is 64
		 -> ftoa@buf(BANK2[17]), STR_190(CODE[1]), STR_189(CODE[1]), OLED_WriteInteger@s(COMRAM[20]), 
		 -> OLED_RAM_Buffer(BANK3[64]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    OLED_PutChar@input_base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_187(CODE[22]), STR_186(CODE[21]), STR_185(CODE[27]), STR_184(CODE[41]), 
		 -> STR_183(CODE[32]), STR_182(CODE[19]), STR_181(CODE[16]), STR_180(CODE[15]), 
		 -> STR_179(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_178(CODE[10]), STR_177(CODE[13]), STR_176(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_178(CODE[10]), STR_177(CODE[13]), STR_176(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_178(CODE[10]), STR_177(CODE[13]), STR_176(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_188(CODE[16]), STR_187(CODE[22]), STR_186(CODE[21]), STR_185(CODE[27]), 
		 -> STR_184(CODE[41]), STR_183(CODE[32]), STR_182(CODE[19]), STR_181(CODE[16]), 
		 -> STR_180(CODE[15]), STR_179(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> OLED_RAM_Buffer(BANK3[64]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR4_CallBack->_writeEnergyToEEPROMCallback
    _writeEnergyToEEPROMCallback->i2___flge
    i2_readDoubleFromEEPROM->i2_DATAEE_ReadByte
    _dimmingOffTimeCallback->_TMR5_WriteTimer
    _I2C1_ISR->_I2C1_Stop
    _HLVD_ISR->i2_writeDoubleToEEPROM
    i2_writeDoubleToEEPROM->i2_DATAEE_WriteByte
    i2__doprnt->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2__doprnt
    i2__doprnt->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->__doprnt
    __doprnt->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _saveSRAMMaxToEEPROM->_writeDoubleToEEPROM
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _recoverSRAMMaxFromEEPROM->_readDoubleFromEEPROM
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _OLED_UpdateFromRAMBuffer->_OLED_Clear
    _OLED_YX->_OLED_Command
    _OLED_WriteString->_OLED_PutChar
    _OLED_Clear->_OLED_PutChar
    _OLED_PutChar->_I2C1_MasterWrite
    _OLED_Init->_OLED_Command
    _OLED_Command->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  818934
                                             59 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT0_SetInterruptHandler
                          _OLED_Init
           _OLED_UpdateFromRAMBuffer
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
           _TMR5_SetInterruptHandler
                     _TMR5_StopTimer
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
           _recoverSRAMMaxFromEEPROM
                _saveSRAMMaxToEEPROM
                             _strcpy
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _updateErrorLEDs                                      0     0      0       0
                        _getADCError
                       _getCOMMError
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   95125
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  481989
                                            195 BANK1      3     3      0
                                             53 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       41    39      2  480967
                                            191 BANK1      4     2      2
                                             16 BANK2     37    37      0
                     _TMR5_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
                     _clearADCErrors
                    _clearCOMMErrors
                        _getADCError
                       _getCOMMError
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  121618
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  121618
                                            189 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   95125
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    8413
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     223
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _getCOMMError                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearCOMMErrors                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearADCErrors                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1881
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3755
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   95125
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              17     7     10   95125
                                            172 BANK1     17     7     10
                            __doprnt
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
 ---------------------------------------------------------------------------------
 (4) __doprnt                                             43    37      6   78035
                                            130 BANK1     42    36      6
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (5) _scale                                                9     5      4   13229
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _fround                                              13     9      4   12950
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8302
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (5) __div_to_l_                                          14     6      8     634
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1206
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1358
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     901
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6535
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5930
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1070
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     829
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _saveSRAMMaxToEEPROM                                  0     0      0    6705
                             ___flge
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeDoubleToEEPROM                                 12     6      6    3279
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     307
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3426
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _recoverSRAMMaxFromEEPROM                             0     0      0    1612
               _readDoubleFromEEPROM
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    1612
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     152
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1508
                    _ADCC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OLED_UpdateFromRAMBuffer                             0     0      0   10618
                         _OLED_Clear
                   _OLED_WriteString
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (2) _OLED_YX                                              3     2      1    2937
                                             43 BANK1      3     2      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _OLED_WriteString                                     2     0      2    4165
                                             56 BANK1      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (2) _OLED_Clear                                           4     4      0    3516
                                             56 BANK1      4     4      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (3) _OLED_PutChar                                        17    17      0    3380
                                             39 BANK1     17    17      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0    2484
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_Command                                         4     4      0    2484
                                             39 BANK1      4     4      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     0      7    2327
                                             32 BANK1      7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             9     2      7     546
                                             23 BANK1      9     2      7
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 6     2      4     546
                                             23 BANK1      6     2      4
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  210680
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _HLVD_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _INT0_ISR
                           _TMR4_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     316
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
              _dimmingOnTimeCallback *
 ---------------------------------------------------------------------------------
 (15) _dimmingOnTimeCallback                               0     0      0       0
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_ISR                                            0     0      0    2144
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR4_CallBack                                       0     0      0    2144
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
        _writeEnergyToEEPROMCallback *
 ---------------------------------------------------------------------------------
 (16) _writeEnergyToEEPROMCallback                         4     4      0    2144
                                             63 COMRAM     4     4      0
                           i2___flge
             i2_readDoubleFromEEPROM
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (17) i2_readDoubleFromEEPROM                             10     6      4     252
                                              2 COMRAM    10     6      4
                  i2_DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (18) i2_DATAEE_ReadByte                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            0     0      0     316
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0     316
                   Absolute function *
       _INT0_DefaultInterruptHandler *
             _dimmingOffTimeCallback *
 ---------------------------------------------------------------------------------
 (16) _dimmingOffTimeCallback                              0     0      0     316
                    _TMR5_StartTimer
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _TMR5_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_ISR                                            2     2      0      22
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (15) _I2C1_Stop                                           3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _I2C1_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _HLVD_ISR                                            0     0      0     402
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (17) i2_writeDoubleToEEPROM                              12     6      6     402
                                              4 COMRAM    12     6      6
                 i2_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (18) i2_DATAEE_WriteByte                                  4     1      3     141
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   53853
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                            9     7      2   53853
                                             82 BANK0      9     7      2
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (16) i2__doprnt                                          43    37      6   53469
                                             40 BANK0     42    36      6
                   Absolute function *
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (17) i2_scale                                             9     5      4    7749
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (18) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (17) i2_fround                                           13     9      4    7470
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (18) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (18) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (17) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ThresholdISR                                   0     0      0  153627
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADCPostProcessingCallback                          21    21      0  153627
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
  _ADCC_GetCurrentCountofConversions
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          24    16      8   98612
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                8     4      4   46781
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               24    20      4   41537
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               29    25      4    1033
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (19) _atan                                               21    17      4   25621
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                              12     4      8   39684
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                17    13      4   37484
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (17) i2___flsub                                           8     0      8    4649
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fldiv                                          25    17      8    1887
                                             18 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                              10     6      4    8091
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (17) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___flge                                           12     4      8    1456
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               8     2      6     360
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          16     8      8   10620
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (18) i2___flmul                                          25    17      8    4912
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___fladd                                          20    12      8    4374
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) _abs                                                 4     2      2     294
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetCurrentCountofConversions                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT0_SetInterruptHandler
   _OLED_Init
     _OLED_Command
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
   _OLED_UpdateFromRAMBuffer
     _OLED_Clear
       _OLED_PutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         _memmove
     _OLED_WriteString
       _OLED_PutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         _memmove
     _OLED_YX
       _OLED_Command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR5_StopTimer
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _recoverSRAMMaxFromEEPROM
     _readDoubleFromEEPROM
       _DATAEE_ReadByte
   _saveSRAMMaxToEEPROM
     ___flge
     _writeDoubleToEEPROM
       _DATAEE_WriteByte
   _strcpy
   _terminal_clearTerminal
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg *
           ___xxtofl (ARG)
         ___flsub *
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR5_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _clearADCErrors
       _clearCOMMErrors
       _getADCError
       _getCOMMError
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg *
             ___xxtofl (ARG)
           ___flsub *
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg *
               ___xxtofl (ARG)
             ___flsub *
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
       _terminal_textAttributes
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg *
               ___xxtofl (ARG)
             ___flsub *
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg *
                 ___xxtofl (ARG)
               ___flsub *
                 ___fladd
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___flneg (ARG)
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg *
           ___xxtofl (ARG)
         ___flsub *
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg *
             ___xxtofl (ARG)
           ___flsub *
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcat
       _strncpy
   _updateErrorLEDs
     _getADCError
     _getCOMMError

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetCurrentCountofConversions
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___fladd *
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flge *
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg *
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flsub *
           _floor (ARG)
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fltol *
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___wmul *
         i2___xxtofl *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART2_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
   _HLVD_ISR *
     i2_writeDoubleToEEPROM
       i2_DATAEE_WriteByte
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _dimmingOffTimeCallback *
         _TMR5_StartTimer
         _TMR5_WriteTimer
   _TMR4_ISR *
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _writeEnergyToEEPROMCallback *
         i2___flge
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2_readDoubleFromEEPROM
           i2_DATAEE_ReadByte
         i2_writeDoubleToEEPROM
           i2_DATAEE_WriteByte
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _dimmingOnTimeCallback *
       i2_TMR5_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      80      14       50.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C0      12       75.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     3D      F7      10       96.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C6      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     41A       8        0.0%
DATA                 0      0     41A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 13 13:32:30 2018

               ringBufferLUT@max_voltage_print 02B3                       getDeviceIDString@strings 0128  
                                 ___fldiv@aexp 0155                                   ___fldiv@bexp 0154  
                 __end_of_readDoubleFromEEPROM A450               __end_of_TMR5_SetInterruptHandler B282  
                ??_writeEnergyToEEPROMCallback 0040                                   ___fldiv@sign 0149  
                  __size_ofi2_DATAEE_WriteByte 003A                                    __CFG_CP$OFF 000000  
                                           l65 B0C0                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize B314                                             bsr 000FE0  
                          ___wmul@multiplicand 0119                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                 __end_of_heartbeatTimerCallback A98A  
                                  __CFG_LVP$ON 000000                            _saveSRAMMaxToEEPROM 7902  
                                          l430 A5F0                                            l431 A5E8  
                                          l423 A6DA                                            l424 A6D2  
                                          l433 A604                                            l434 A62A  
                                          l426 A704                                            l435 A628  
                                          l837 A9F4                                            _PR4 000FB6  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                  i2___fladd@a 005A                                    i2___fladd@b 0056  
                   ??_INT0_SetInterruptHandler 011A                                            _Ipk 01CE  
                                          _Vpk 0238                                            _abs AE46  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString A2FA                                            _sin 6862  
                   currentMeasuredToPeak@Angle 009D                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                   __CFG_IDLOC0$ 000000  
                                   i2___xxtofl 8394                                   __CFG_IDLOC1$ 000001  
                                 __CFG_IDLOC2$ 000002                                   __CFG_IDLOC3$ 000003  
                                 __CFG_IDLOC4$ 000004                                   __CFG_IDLOC5$ 000005  
                                 __CFG_IDLOC6$ 000006                                   __CFG_IDLOC7$ 000007  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                        ?i2_readDoubleFromEEPROM 0003  
                                  i2___flmul@a 0034                                    i2___flmul@b 0030  
                                _INT0_CallBack AFCA                                    i2___flsub@a 0084  
                                  i2___flsub@b 0080                                   ___flmul@aexp 0163  
                                 ___flmul@bexp 0168                       __end_of_OLED_WriteString A3AA  
                             OLED_Command@temp 0127                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_ZCD$OFF 000000                               __end_of_I2C1_ISR 7DC0  
                                 ___fltol@exp1 0181                                           l2000 1A28  
                                         l2001 1A52                                           l2010 1B64  
                                         l2011 25CE                                           ?_abs 0076  
                                         l2100 27E0                                           l2020 1E9C  
                                         l2012 1BF6                                           l2004 1A66  
                                         l2013 1C54                                           l2005 1ACA  
                                         l2102 2802                                           l2006 1B1A  
                                         l2103 280A                                           l2023 1E36  
                                         l2015 1CC2                                           l2112 28FA  
                                         l2104 282E                                           l2040 2020  
                                         l2016 1D42                                           l2008 1B2E  
                                         l1320 5574                                           l2113 2924  
                                         l2105 2836                                           l2041 205E  
                                         l2033 1F86                                           l2009 1B52  
                                         l1313 55A4                                           l1321 558C  
                                         l2130 2A9E                                           l2122 29FC  
                                         l2106 292E                                           l2042 2088  
                                         l2034 1FA0                                           l2018 1D70  
                                         l1322 56BE                                           l1330 5676  
                                         l1314 54FC                                           l2131 2B6A  
                                         l2051 216E                                           l2019 1DBA  
                                         l1331 568E                                           l1323 55E6  
                                         l1315 55CE                                           l1243 8BE6  
                                         l2132 2B94                                           l2108 288A  
                                         l2060 22CA                                           l1340 5784  
                                         l1324 56F4                                           l1332 56A6  
                                         l1316 5514                                           l1500 04CE  
                                         l2109 28B4                                           l2061 22F4  
                                         l2045 2110                                           l2037 1FF4  
                                         l2029 1F14                                           l1333 57E4  
                                         l1341 579C                                           l1325 55FE  
                                         l1317 552C                                           l1174 7968  
                                         l2126 2B16                                           l2118 2972  
                                         l2070 24C8                                           l2054 218A  
                                         l2046 20A2                                           l1342 57B4  
                                         l1334 570C                                           l1326 5616  
                                         l1318 5544                                           l1175 79CE  
                                         l2127 2A1A                                           l2119 299C  
                                         l2071 24F6                                           l2063 2320  
                                         l2055 2254                                           l2047 20DE  
                                         l2039 2090                                           l1335 581A  
                                         l1343 57CC                                           l1327 562E  
                                         l1319 555C                                           l1511 06A6  
                                         l1503 055E                                           l1176 7A34  
                                         l2080 264A                                           l2064 2324  
                                         l2056 2282                                           l2048 2108  
                                         l1336 5724                                           l1328 5646  
                                         l1177 7A9A                                           l2129 2B2E  
                                         l2073 25C4                                           l1337 573C  
                                         l1329 565E                                           l1521 0840  
                                         l1513 06F8                                           l1505 05B0  
                                         l1178 7B00                                           l2410 895E  
                                         l2074 2556                                           l2066 2372  
                                         l2058 22FC                                           l1338 5754  
                                         l1530 0A18                                           l1290 8C76  
                                         l2403 88A0                                           l2083 269A  
                                         l2075 2592                                           l2067 239C  
                                         l2059 228E                                           l1611 A2CC  
                                         l1339 576C                                           l1523 0892  
                                         l1515 074A                                           l1507 0602  
                                         l2420 8D52                                           l2092 2782  
                                         l2084 26CE                                           l2076 25BC  
                                         l2068 254A                                           l2340 943C  
                                         l1612 A2AE                                           l1540 0BAA  
                                         l1532 0A66                                           l1284 8C18  
                                         l2421 8D86                                           l2405 88BE  
                                         l2093 272A                                           l2069 23FE  
                                         l2341 9436                                           l1541 0B60  
                                         l1525 0916                                           l1517 079C  
                                         l1509 0654                                           l1710 95EE  
                                         l1630 A470                                           l2422 8DC4  
                                         l2406 8900                                           l2510 86AE  
                                         l2086 276C                                           l2078 2664  
                                         l1534 0AAE                                           l1286 8C56  
                                         l2423 8E02                                           l2415 8992  
                                         l2407 8930                                           l2511 86D6  
                                         l2087 26E8                                           l2079 2618  
                                         l2343 947E                                           l1615 A2B8  
                                         l1551 0CE8                                           l1543 0B86  
                                         l1527 09CE                                           l1519 07EE  
                                         l1471 0168                                           l1287 8C38  
                                         l1632 A478                                           l1624 A458  
                                         l2416 8986                                           l2520 872A  
                                         l2360 9B08                                           l1616 A2C2  
                                         l1536 0B18                                           l1480 0288  
                                         l2409 896E                                           l2513 8712  
                                         l2097 279E                                           l1561 0F90  
                                         l1537 0AF4                                           l1465 006C  
                                         l1289 8CA4                                           l1714 9668  
                                         l1730 A354                                           l1634 A480  
                                         l1626 A460                                           l2450 9298  
                                         l2514 8702                                           l2362 9B26  
                                         l2346 94CE                                           l1554 0E5E  
                                         l1546 0BF2                                           l1490 039E  
                                         l2427 ADD6                                           l2507 8648  
                                         l2363 9B1E                                           l2099 27BE  
                                         l2347 9490                                           l1643 ADAE  
                                         l1571 1210                                           l1563 1010  
                                         l1491 03B4                                           l1475 01CE  
                                         l1467 00A8                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l1636 A488                                           l1628 A468  
                                         l2452 9304                                           l2620 9BDA  
                                         l2380 9EC4                                           l2372 9E80  
                                         l1548 0E6C                                           l1484 0412  
                                         l1492 03CA                                           l2461 9344  
                                         l2453 92F4                                           l2509 8674  
                                         l2381 9ED2                                           l2373 9E8C  
                                         l2349 9502                                           l1581 14B2  
                                         l1573 13C8                                           l1565 1090  
                                         l1557 0EBE                                           l1549 0C2C  
                                         l1485 03EE                                           l1477 0232  
                                         l1469 00FA                                           l1726 A948  
                                         l1654 A540                                           l2630 A1BA  
                                         l2366 9B46                                           l1902 ACEA  
                                         l1590 161A                                           l1486 0346  
                                         l2615 9B98                                           l2519 8736  
                                         l2367 9B50                                           l2359 9AF8  
                                         l2375 9EA2                                           l1575 1416  
                                         l1567 1110                                           l1559 0F10  
                                         l1495 045A                                           l1487 035C  
                                         l1479 02DA                                           l2616 9B8C  
                                         l2368 9B5E                                           l2376 9E9A  
                                         l2800 7250                                           l1584 1500  
                                         l1488 0372                                           l1729 A380  
                                         l1657 A40E                                           l2625 A184  
                                         l1569 1190                                           l1497 0516  
                                         l1489 0388                                           l1658 A43E  
                                         l2458 9328                                           l2626 A178  
                                         l2802 7276                                           l1578 1464  
                                         l1498 04F2                                           l2731 5F14  
                                         l2459 931C                                           l2619 9BCC  
                                         l2379 9EBA                                           l1587 154E  
                                         l1499 04B8                                           l2740 5F7C  
                                         l2732 5F10                                           l2812 72E4  
                                         l2900 A30A                                           l1853 A5D4  
                                         l2629 A1AC                                           l2805 72AC  
                                         l1909 B1A6                                           l2901 A304  
                                         l2750 6058                                           l2822 5872  
                                         l1950 4D14                                           l2814 7328  
                                         l2806 728E                                           l2910 A152  
                         _ADCC_StartConversion B2C8                                           l1871 987A  
                                         l1687 A0C4                                           l2743 6034  
                                         l2823 586E                                           l1943 6FA4  
                                         l2575 B02A                                           l2815 734C  
                                         l2911 A142                                           l1872 9866  
                                         l2744 6012                                           l2736 5F5C  
                                         l2840 5AD8                                           l2824 5882  
                                         l1960 16E2                                           l2816 7376  
                                         l2753 607C                                           l2745 6020  
                                         l2737 5F58                                           l2833 5AA0  
                                         l1953 4DDA                                           l1961 1758  
                                         l2817 7382                                           l1874 9886  
                                         l2762 614E                                           l2754 6080  
                                         l2746 6024                                           l2842 5B1C  
                                         l2834 5A82                                           l2826 58B2  
                                         l1946 7094                                           l1954 4F60  
                                         l1962 172A                                           l2818 7384  
                                         l2922 9AC0                                           l2771 618E  
                                         l2739 5FB8                                           l2931 8282  
                                         l2843 5B3A                                           l2827 58AE  
                                         l1971 17D0                                           l2923 9A58  
                                         l2907 A106                                           l2692 97CC  
                                         l2780 6204                                           l2764 6164  
                                         l2932 8292                                           l2828 58C2  
                                         l1956 5026                                           l2924 9A94  
                                         l2908 A136                                           l2693 9796  
                                         l2757 611A                                           l2749 6092  
                                         l2941 8332                                           l2933 82B0  
                                         l2845 5B5E                                           l2829 58E0  
                                         l1949 4E0C                                           l1973 1918  
                                         l1965 1774                                           l2774 61D4  
                                         l2766 616E                                           l2942 8326  
                                         l2846 5B7C                                           l1990 196A  
                                         l1982 1926                                           l1974 18EC  
                                         l1966 176C                                           l2759 612A  
                                         l2935 82C2                                           l1991 197A  
                                         l1983 192A                                           l1975 1898  
                                         l2936 82B6                                           l1984 1BE0  
                                         l1992 1974                                           l2792 715C  
                                         l2880 A6A8                                           l2793 7158  
                                         l2881 A69E                                           l2778 61FA  
                                         l2946 8350                                           l2938 8300  
                                         l2779 6202                                           l2947 8382  
                                         l2939 82E8                                           l1979 1B6A  
                                         l1995 19CC                                           l1987 192E  
                                         l2795 71A2                                           l1996 19E2  
                                         l2788 711C                                           l1989 1932  
                                         l2797 71CA                                           l2789 7118  
                                         l2981 99AE                                           l2877 A68E  
                                         l2894 AC2C                                           l2798 7278  
                                         l2886 A4AE                                           l2982 993C  
                                         l2878 A688                                           l2895 AC22  
                                         l1999 19EC                                           l2799 7228  
                                         l2887 A4A4                                           l2983 99A6  
                                         l2976 ABC4                                           ?_sin 0088  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC8  
                                         STR_2 FE2D                                           STR_3 FF88  
                                         STR_4 FE82                                           STR_5 FE74  
                                         STR_6 FFB3                                           STR_7 FFBC  
                                         STR_8 EDB5                                __end_of_OLED_YX AABC  
                                  ?_OLED_Clear 0001                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                           _T4PR 000FB6  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           _PLLR 007230  
                                         _TMR4 000FB5                                           _TMR6 000FAF  
                          _writeDoubleToEEPROM A4F2                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                                 __CFG_WRT0$ON 000000                                   __CFG_WRT1$ON 000000  
                                 i2___flge@ff1 0034                                   i2___flge@ff2 0038  
                                 __CFG_WRT2$ON 000000                                   __CFG_WRT3$ON 000000  
                                 __CFG_WRT4$ON 000000                                   __CFG_WRT5$ON 000000  
                                         _Irms 01CA                                   __CFG_WRT6$ON 000000  
                                 __CFG_WRT7$ON 000000                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write A5E2                ??_ADCC_HasAccumulatorOverflowed 0001  
                                 __CFG_WRTB$ON 000000                                           _Vrms 0230  
                                 __CFG_WRTC$ON 000000                                           abs@a 0076  
                                         _acos 9FBA                                           _fabs AAF8  
               ringBufferLUT@max_current_print 02AB                                           _atan 800A  
                                         _asin 655E                                           _atoi 9434  
                                         _main 8AD2                           ?_saveSRAMMaxToEEPROM 0001  
                                  i2__doprnt@c 00B1                                           _line 0380  
                                  i2__doprnt@f 008A                         OLED_Command@data_array 0129  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                       ??_I2C1_MasterTRBInsert 011B                                           btemp 005F  
               __size_of_ADCC_ClearAccumulator 0006                                           _sqrt 6B5C  
                                 i2___flneg@f1 002C                                _OLED_RAM_Buffer 0340  
                __end_of_ADCC_ClearAccumulator B328                                  __CFG_BOREN$ON 000000  
                                         sin@f 0088                                           sin@y 008C  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FE                                _timer5ReloadVal 0266  
                                 i2___fltol@f1 006C                                 _clearADCErrors AFEE  
                              ___fldiv@new_exp 014E                                __end_ofi2_scale 54D8  
                 __end_of_EUSART2_Transmit_ISR ACBA                                __end_ofi2_putch B30C  
                   ??_TMR4_SetInterruptHandler 011A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                        __end_of_updateErrorLEDs B164  
                        _dimmingOnTimeCallback B2D6                 I2C1_MasterWriteTRBBuild@length 011B  
            i2readDoubleFromEEPROM@output_data 0007                readDoubleFromEEPROM@output_data 011D  
                         __size_of_getADCError 0034                       __size_ofi2_EUSART2_Write 004C  
                                        ??_abs 0078                             __size_of_OLED_Init 009A  
                    __size_of_DATAEE_WriteByte 003E                                _timer7ReloadVal 0268  
                                        ??_sin 005E                           ?_writeDoubleToEEPROM 011B  
                                   _i2c1_state 026D                               __end_of_INT0_ISR B302  
                              ?_FVR_Initialize 0001                           getUserID@inputUserID 0128  
                             __end_of_HLVD_ISR AC18                 __size_of_OSCILLATOR_Initialize 001C  
                    I2C1_MasterTRBInsert@count 011C                  __end_of_OSCILLATOR_Initialize B0C6  
                     ?_terminal_textAttributes 01BD                              ??_TMR7_WriteTimer 0102  
                    I2C1_MasterTRBInsert@pflag 0119                                          l22151 19EC  
                                        l22305 20A2                                          l22241 1E08  
                                        l22233 1DBA                                          l22161 1A66  
                                        l23203 02C8                                          l22261 1F18  
                                        l16005 993C                                          l22423 26EC  
                                        l22339 228E                                          l23411 0C98  
                                        l22437 272E                                          l22293 2020  
                                        l23413 0CE8                                          l23405 0C62  
                                        l22543 2B86                                          l22535 2B16  
                                        l23193 0278                                          l15631 9866  
                                        l16521 94CA                                          l23705 8C2E  
                                        l23395 0C1C                                          l15637 9886  
                                        l13797 8E3A                                          l16289 A50C  
                                        l15593 A142                                          ?_acos 00A9  
                                        l23695 8C08                                          l23875 A2E6  
                                        ?_fabs 0030                                          l23877 A2F0  
                                        l16699 7376                                          l17941 A914  
                                        l17947 A928                                          l17957 A942  
                                ___fltol@sign1 0180                                          ?_atan 007C  
                                        ?_asin 0091                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 011D                                __end_of___fladd 6220  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                              __end_of___fldiv 73A0                                          _ADREF 000F58  
                              __end_of___awdiv 9B68                              __end_of_I2C1_Stop A9CA  
                              __end_of___flneg ADE8                                          _ADPRE 000F5E  
                                        STR_10 FFB3                                          STR_11 FFBC  
                                        STR_20 FFF1                                          STR_21 FFF9  
                                        STR_13 FFC0                                          STR_22 FFCD  
                                        STR_30 FFEA                                          STR_14 FFC4  
                                        STR_23 FFFB                                          STR_15 FFF6  
                                        STR_31 FFF0                                          STR_16 FFCD  
                                        STR_32 FFF0                                          STR_40 FFED  
                                        STR_24 FFCC                                          STR_17 FFD0  
                                        STR_33 FFFB                                          STR_41 FFF3  
                                        STR_25 FFCF                                          STR_34 FF01  
                                        STR_18 FFE2                                          STR_42 FFF3  
                                        STR_50 FFBC                                          STR_26 FFD5  
                                        STR_19 FF90                                          STR_43 FFFD  
                                        STR_27 FFDB                                          STR_35 FFD2  
                                        STR_51 FDB2                                          STR_44 E846  
                                        STR_28 FFE1                                          STR_36 FFD8  
                                        STR_52 F5A4                                          STR_60 F2D6  
                              __end_of___awmod 9EDC                                          STR_29 FF8F  
                                        STR_45 FD7C                                          STR_37 FFDE  
                                        STR_53 FFA2                                          STR_61 FF7E  
                                        STR_46 FFB3                                          STR_38 FFE4  
                                        STR_54 FFB8                                          STR_70 FF33  
                                        STR_62 F1DD                                          STR_47 FFBC  
                                        STR_39 FFE7                                          STR_71 FF04  
                                        STR_55 FCFB                                          STR_63 F465  
                                        STR_48 FFA8                                          STR_64 FF10  
                                        STR_72 FE9D                                          STR_80 FC09  
                                        STR_56 F6A2                                          _ADRPT 000F66  
                                        STR_49 FFB3                                          STR_57 FF49  
                                        STR_73 FDF1                                          STR_65 FBA6  
                                        STR_81 FA2B                                          STR_90 FCC6  
                                        STR_66 F6D1                                          STR_74 F672  
                                        STR_82 F29A                                          STR_58 F0B7  
                                        STR_59 FEB7                                          STR_67 FBF1  
                                        STR_75 FB71                                          STR_91 F918  
                                        STR_83 F883                                          STR_68 FF3E  
                                        STR_92 FEC4                                          STR_76 FD61  
                                        STR_84 FCD8                                          STR_69 FF74  
                                        STR_77 FC20                                          STR_85 F982  
                                        STR_93 F386                                          STR_78 FED1  
                                        STR_94 FE3C                                          STR_86 FD92  
                                        STR_87 F8CE                                          STR_95 F8A9  
                                        STR_79 F19C                                          STR_88 FE00  
                                        STR_96 FB8C                                __end_of___flmul 5B92  
                                        STR_97 FA4B                                          STR_89 F93C  
                                        STR_98 FC77                                          STR_99 F9A4  
                              __end_of___flsub A7F6                                __end_of___fltol 9356  
                              __end_of___lldiv 9BEC                                          ?_sqrt 006C  
                              ___awdiv@divisor 011F                                __end_of___llmod A1CC  
                                        u21201 A2A4                                          u21300 B1A2  
                                        u21150 A43E                                          u21215 AA34  
                                        u21330 9AD8                                          u21180 A4E6  
                                        u20615 AA04                                          u24000 A376  
                                        u20616 AA06                                          u21280 ACE6  
                                        u21450 A0F4                                          u21530 9698  
                                        u24010 A3A2                                          u32010 18D0  
                                        u32020 190E                                          u21470 95EA  
                                        u21710 72E0                                          u24007 A36C  
                                        _T5CLK 000FC6                                          u20680 A32C  
                                        _T4CON 000FB7                                          u24017 A398  
                                        u32017 18C6                                          u32050 19A8  
                                        u20770 996E                                          u32027 1904  
                                        u17100 5FF8                                          u33020 2BA6  
                                        u32300 1E08                                          u32060 19AE  
                                        u21740 7336                                          u17110 5FFA  
                                        u33030 2BD6                                          u32150 1AC0  
                                        u32118 1A12                                          u21750 735A  
                                        u20687 A322                                          u33040 2BE2  
                                        u32160 1B04                                          _T5CON 000FC3  
                                        u32057 199E                                          u33018 2B54  
                                        u17300 618A                                          u17140 603C  
                                        u32340 1F56                                          u32260 1D80  
                                        u32180 1B9A                                          u32148 1A8C  
                                        u33037 2BCC                                          u32157 1AB6  
                                        u32149 1AC2                                          u32270 1DCC  
                                        u32167 1AFA                                          _T7CLK 000F33  
                                        u32408 1FDE                                          _T6CON 000FB1  
                                        u17090 5FE8                                          u32187 1B90  
                                        u32460 211E                                          u32428 2048  
                                        _T4HLT 000FB8                                          u17350 61E0  
                                        u17270 6172                                          u32550 230A  
                                        u32518 223C                                 __CFG_DEBUG$OFF 000000  
                                        u17520 5AD4                                          u32560 231A  
                                        _T7CON 000F30                                          u18401 8658  
                                        u17610 9B2A                                          u32618 24B0  
                                        u32458 20C8                                          u31930 1796  
                                        u34330 02C8                                          u17460 58CE  
                                        u32548 22B4                                          u31940 17BE  
                                        u17550 5B2A                                          u17470 5A44  
                                        u17560 5B48                                          u32648 257C  
                                        u31960 181A                                          u31928 1714  
                                        u34280 0138                                          u31937 178C  
                                        u18530 8998                                          u32930 2936  
                                        u32498 2158                                          u31970 1856  
                                        u23955 AAA6                                          u17475 5A3A  
                                        u31947 17B4                                          u23980 A942  
                                        u18700 9B9C                                          u18460 873C  
                                        u31980 185E                                          u35180 8C2E  
                                        _T6HLT 000FB2                                          u18381 862C  
                                        u18630 92B6                                          u17670 9EA6  
                                        u32918 28E4                                          u32598 235C  
                                        u31990 1880                                          u31967 1810  
                                        u32960 29AC                                          u31977 184C  
                   _ADCC_ADTI_InterruptHandler 0250                                          u18730 A188  
                                        u18810 833C                 __end_ofi2_readDoubleFromEEPROM A67E  
                                        u18635 92AC                                          u31997 1876  
                                        u18670 932E                                          u32958 295C  
                                        u34750 0C62                                          u32888 2874  
                                        u34760 0C8A                                          u34770 0C98  
                                        u35477 8AE6                                          u32998 29E6  
                                        i1l271 00A6                                          i1l267 007C  
                                        _T4TMR 000FB5                                          i1l445 ACB4  
                                        i1l269 009C                                          i1l446 ACB0  
                                        i2l250 90DE                                          _T4RST 000FBA  
                                        i2l260 912C                                          i2l252 90EA  
                                        i2l430 A76E                                          i2l254 90F6  
                                        i2l246 90C6                                          i2l431 A766  
                                        i2l256 9116                                          i2l248 90D2  
                                        i2l433 A782                                          i2l434 A7A8  
                                        i2l258 9122                                          i2l435 A7A6  
                                        i2l451 96B0                                          i2l452 96D2  
                                        _T6TMR 000FAF                                          i2l453 96F4  
                                        i2l456 96F8                                          i1l688 AF26  
                                        i2l458 9748                                          _T6RST 000FB4  
                                        i2l762 B0F4                                          i2l837 AB96  
                              ___awdiv@counter 0121                                          _OSCEN 000E47  
                     _OLED_UpdateFromRAMBuffer 9F4C                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 89AA  
                              __end_of__doprnt 2BEC                                          _TRISA 000F81  
                                        _TRISB 000F82                                 ?_INT0_CallBack 0001  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a D28D                             __end_ofsin@coeff_b D2B1  
                 __end_of_I2C1_BusCollisionISR B32E                                _TMR4_Initialize ADE8  
                                        _Imeas 0234                                  __CFG_PWRTE$ON 000000  
                                i2___fladd@grs 006B              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                            ??_I2C1_Initialize 0117                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                             __end_of_TMR4_ISR AF5A                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR AD56                               __end_of_TMR6_ISR AEC0  
                             __end_of_TMR7_ISR AD22                                _DATAEE_ReadByte B118  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                    ??_terminal_ringBufferPull 01C3                                __end_of_dpowers CF33  
                                        acos@x 00A9                                          fabs@d 0030  
                                   i2scale@scl 0051                                          _floor 8F5E  
        i2writeDoubleToEEPROM@starting_address 0009            writeDoubleToEEPROM@starting_address 011F  
                                        _frexp 9DF0                                          _errno 025C  
                                 i2__doprnt@ap 008C                                   i2__doprnt@cp 0099  
                        ?_ADCC_StartConversion 0001                                   i2__doprnt@pb 0088  
                                        _scale 4BB4                                __end_of_isdigit B032  
                                        atan@f 007C                                __end_of_memmove 97FE  
                                        atan@x 0084                                          atan@y 0080  
                                i2___fldiv@grs 0026                             __CFG_MCLRE$EXTMCLR 000000  
                                i2___fldiv@rem 0020                                          asin@x 0091  
                                        asin@y 00A1                                          atoi@a 0122  
                                        atoi@s 011D                                          _putch B1AA  
                               __pbitbssCOMRAM 02F0                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                               __end_ofi2___flge 8F5E  
                                        sin@x2 0094                                          tablat 000FF5  
        __end_of_max_POS3P3_ADC_Result_address CF5B                  _max_POS3P3_ADC_Result_address CF59  
                             __end_ofi2___wmul AF80                          ??_saveSRAMMaxToEEPROM 0127  
                                        plusw1 000FE3                                          plusw2 000FDB  
                               ??_EUSART2_Read 0117                   __size_of_ADCC_GetFilterValue 0014  
                                        sqrt@a 006C                                          sqrt@i 0075  
                                        sqrt@p 007A                                          status 000FD8  
                       __end_of_clearADCErrors B010                                          wtemp6 0060  
                                i2___flmul@grs 003E                                __end_of_strncmp 99CA  
                              __end_of_strncpy A164                               __end_ofi2_fround 7902  
               ?_INTERRUPT_InterruptManagerLow 0001                    ringBufferLUT@max_temp_print 02BB  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___flmul 0350                             __size_ofi2___flsub 0048  
                           __size_ofi2___fltol 00DE                             __size_ofi2___lldiv 0082  
                  ??_ADCPostProcessingCallback 005E                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf AAF8                I2C1_MasterWriteTRBBuild@address 011C  
                     __size_of_HLVD_Initialize 0010                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler B2AC         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler B29E                                _TMR5_Initialize A542  
                               __CFG_CSWEN$OFF 000000                             __size_ofi2__doprnt 1504  
                              __initialization 99CA                             OLED_Command@length 0128  
                        I2C1_MasterWrite@pdata 0120                              i2___lldiv@divisor 0005  
                        I2C1_MasterWrite@pflag 0125                                   __end_of_acos A028  
                                 __end_of_fabs AB34                                   __end_of_atan 8240  
                                 __end_of_asin 6862                                   __end_of_atoi 950C  
                                 __end_of_main 8BF8                              i2___lldiv@counter 000D  
                             _max_Irms_address CF5D                                   __end_of_sqrt 6E24  
                                   i2printf@ap 00B4                                     i2printf@pb 00B6  
                        ??_writeDoubleToEEPROM 0121                          __end_of_ringBufferLUT 16DE  
                               __CFG_SCANE$OFF 000000                          _max_POS3P3_ADC_Result 021C  
                      FLASH_ReadByte@flashAddr 0117                             __size_ofi2_isdigit 001E  
                         __size_of_getDeviceID 0020                               __end_of_OledFont D261  
                          __size_of_OLED_Clear 0040                                         ??_acos 005E  
                                       ??_fabs 0034                                    _i2c1_object 0209  
                                       ??_atan 005E                                         ??_asin 005E  
                                       ??_atoi 011F                                         ??_main 02CF  
             __end_of_recoverSRAMMaxFromEEPROM 861A                       _TMR5_SetInterruptHandler B274  
                                       ??_sqrt 0070                                  __activetblptr 000003  
                      __size_of_FLASH_ReadByte 001A                        __size_of_FLASH_ReadWord 0042  
                   __size_of_getDeviceIDString 0060                           __size_of__tdiv_to_l_ 0134  
                                  ?i2___xxtofl 0005                         getUserID@initialOffset 0124  
                                    ??_OLED_YX 012C                                _TMR6_Initialize AD56  
                           _TRIAC_Firing_Angle 00F2                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize A234  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01DF                                         ?_floor 0076  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 016F  
                                       STR_100 FC62                                         _ADLTHL 000F6A  
                                       STR_101 F9C6                                         STR_102 FE0F  
                                       STR_110 EF92                                         STR_111 F570  
                                       STR_103 F3C0                                         STR_104 FDC2  
                                       STR_120 FB3A                                         STR_112 F4D1  
                                       STR_113 FD3F                                         STR_121 FAC7  
                                       STR_105 F10C                                         STR_106 FEEB  
                                       STR_122 FD0C                                         STR_114 F960  
                                       STR_130 EFFB                                         _ADRESH 000F64  
                                       STR_115 FDD2                                         STR_123 FA6B  
                                       STR_131 F72D                                         STR_107 F311  
                                       STR_108 FE1E                                         STR_132 F8F3  
                                       STR_116 F833                                         STR_140 F60C  
                                       STR_124 F506                                         STR_141 FF54  
                                       STR_117 FF1C                                         STR_125 F7E0  
                                       STR_133 F21D                                         STR_109 EF29  
                                       STR_126 FEDE                                         STR_118 F7B6  
                                       STR_142 F75B                                         STR_150 F49B  
                                       STR_134 F155                                         _ADRESL 000F63  
                                       STR_119 FE4A                                         STR_135 FDA2  
                                       STR_151 FD50                                         STR_143 FC8C  
                                       STR_127 FBBF                                         STR_128 FBD8  
                                       STR_144 F5D8                                         STR_152 F42F  
                                       STR_136 F34C                                         STR_160 E849  
                                       STR_161 FF92                                         STR_137 FE58  
                                       STR_145 FCB3                                         STR_153 FAE4  
                                       STR_129 F061                                         STR_170 FF5F  
                                       STR_146 F63F                                         STR_138 F53B  
                                       STR_154 DEBF                                         STR_162 D2B1  
                                       STR_163 FFAE                                         STR_147 FE66  
                                       STR_139 FD2E                                         STR_155 FA0A  
                                       STR_171 EC0B                                         STR_172 FB1E  
                                       STR_148 F789                                         STR_164 EA35  
                                       STR_156 E579                                         STR_180 FDE2  
                                       STR_173 F6B7                                         STR_149 FD1D  
                                       STR_157 F9E8                                         STR_165 F3F8  
                                       STR_181 FD82                                         STR_174 FA8A  
                                       STR_166 F25C                                         STR_158 E28D  
                                       STR_182 FCA0                                         STR_191 FF9B  
                                       STR_175 FEAA                                         STR_159 FB01  
                                       STR_167 F85C                                         STR_183 F813  
                                       STR_192 FCEA                                         STR_168 F6FF  
                                       STR_176 FEF8                                         STR_184 F80A  
                                       STR_193 FF28                                         STR_169 FAA9  
                                       STR_177 FE90                                         STR_185 FB56  
                                       STR_178 FF6A                                         STR_186 FC4D  
                                       STR_187 FC37                                         STR_179 FD72  
                                       STR_188 FD72                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                   __end_of_Total_Energy_address CF61  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                                       _ANSELG 000EBC                           _readDoubleFromEEPROM A3FE  
                            __end_of_OLED_Init 993A                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       i1l1186 A986                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _RC6PPS 000E68  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         _RC7PPS 000E69  
                                       i2l2000 2F32                                         i2l1201 4290  
                                       i2l2001 2F5C                                         i2l1210 45EA  
                                       i2l1202 4348                                         i2l2010 306E  
                                       i2l2011 3AD4                                         i2l1220 4B50  
                                       i2l1212 4894                                         i2l2100 3CE6  
                                       i2l2020 33A6                                         i2l2012 3100  
                                       i2l2004 2F70                                         i2l1205 434E  
                                       i2l2013 315E                                         i2l2005 2FD4  
                                       i2l1206 46C0                                         i2l2102 3D08  
                                       i2l2006 3024                                         i2l1223 4B58  
                                       i2l1215 4898                                         i2l1207 4592  
                                       i2l2103 3D10                                         i2l2023 333E  
                                       i2l2015 31CA                                         i2l1224 4BA2  
                                       i2l1216 4974                                         i2l1208 44AA  
                                       i2l2112 3E00                                         i2l2104 3D34  
                                       i2l2040 352A                                         i2l2016 3248  
                                       i2l2008 3038                                         i2l2113 3E2A  
                                       i2l2105 3D3C                                         i2l2041 3568  
                                       i2l2033 3490                                         i2l2009 305C  
                                       i2l2130 3FA2                                         i2l2122 3F02  
                                       i2l2106 3E34                                         i2l2042 3592  
                                       i2l2034 34AA                                         i2l2018 3276  
                                       i2l1219 4978                                         i2l2131 406E  
                                       i2l2051 3678                                         i2l2019 32C2  
                                       i2l2132 4098                                         i2l2108 3D90  
                                       i2l2060 37D2                                         i2l2109 3DBA  
                                       i2l2061 37FC                                         i2l2045 361A  
                                       i2l2037 34FE                                         i2l2029 341E  
                                       i2l2302 804E                                         i2l1190 4B60  
                                       i2l2126 401A                                         i2l2118 3E78  
                                       i2l2070 39CE                                         i2l2054 3694  
                                       i2l2046 35AC                                         i2l1191 40FC  
                                       i2l2127 3F20                                         i2l2119 3EA2  
                                       i2l2071 39FC                                         i2l2063 3828  
                                       i2l2055 375C                                         i2l2047 35E8  
                                       i2l2039 359A                                         i2l2304 80BA  
                                       i2l1192 4180                                         i2l2080 3B50  
                                       i2l2064 382C                                         i2l2056 378A  
                                       i2l2048 3612                                         i2l2305 8202  
                                       i2l2129 4032                                         i2l2073 3ACA  
                                       i2l2410 8A86                                         i2l2074 3A5C  
                                       i2l2066 387A                                         i2l2058 3804  
                                       i2l2307 821A                                         i2l2403 89C8  
                                       i2l2083 3BA0                                         i2l2075 3A98  
                                       i2l2067 38A4                                         i2l2059 3796  
                                       i2l2420 8E72                                         i2l1196 4B92  
                                       i2l2092 3C88                                         i2l2084 3BD4  
                                       i2l2076 3AC2                                         i2l2068 3A50  
                                       i2l2421 8EA6                                         i2l1197 4186  
                                       i2l2405 89E6                                         i2l2093 3C30  
                                       i2l2069 3906                                         i2l2422 8EE4  
                                       i2l1198 428A                                         i2l2406 8A28  
                                       i2l2510 87E0                                         i2l2086 3C72  
                                       i2l2078 3B6A                                         i2l2423 8F22  
                                       i2l2415 8ABA                                         i2l2407 8A58  
                                       i2l2511 8808                                         i2l2087 3BEE  
                                       i2l2079 3B1E                                         i2l2416 8AAE  
                                       i2l2520 885C                                         i2l2360 9C10  
                                       i2l1800 7D78                                         i2l2185 AE66  
                                       i2l2409 8A96                                         i2l2513 8844  
                                       i2l2097 3CA4                                         i2l1801 7BA2  
                                       i2l2450 9376                                         i2l2514 8834  
                                       i2l2362 9C2E                                         i2l1810 7C36  
                                       i2l2427 AE34                                         i2l2283 65B8  
                                       i2l2507 877A                                         i2l2363 9C26  
                                       i2l2099 3CC4                                         i2l1803 7BEC  
                                       i2l2452 93E2                                         i2l2620 9D62  
                                       i2l2380 9F34                                         i2l2372 9EF0  
                                       i2l1812 7C3E                                         i2l1804 7BFC  
                                       i2l2461 9422                                         i2l2453 93D2  
                                       i2l2285 66E0                                         i2l2509 87A6  
                                       i2l2381 9F42                                         i2l2373 9EFC  
                                       i2l1821 7CCA                                         i2l1813 7C4C  
                                       i2l2286 67C0                                         i2l2630 A288  
                                       i2l2366 9C4E                                         i2l1654 A760  
                                       i2l1830 7D1A                                         i2l1806 7C04  
                                       i2l2615 9D20                                         i2l2519 8868  
                                       i2l2367 9C58                                         i2l2359 9C00  
                                       i2l2375 9F12                                         i2l1831 7D2A  
                                       i2l1823 7CD2                                         i2l1815 7C7E  
                                       i2l1807 7C0C                                         i2l2800 7504  
                                       i2l2616 9D14                                         i2l2368 9C66  
                                       i2l2376 9F0A                                         i2l1824 7CE2  
                                       i2l1808 7C1A                                         i2l2393 925C  
                                       i2l2625 A252                                         i2l1833 7D32  
                                       i2l1817 7CB8                                         i2l1657 A63E  
                                       i2l2394 91C4                                         i2l2458 9406  
                                       i2l2802 752A                                         i2l2626 A246  
                                       i2l1842 B146                                         i2l1834 7D3A  
                                       i2l1826 7D08                                         i2l1658 A66C  
                                       i2l2731 6252                                         i2l2459 93FA  
                                       i2l2723 6896                                         i2l2619 9D54  
                                       i2l2379 9F2A                                         i2l1835 7D5A  
                                       i2l1827 7D00                                         i2l2740 62BA  
                                       i2l2732 624E                                         i2l2812 7598  
                                       i2l2724 69B4                                         i2l1836 7D60  
                                       i2l2805 7560                                         i2l2725 6A24  
                                       i2l2629 A27A                                         i2l1837 7D64  
                                       i2l2750 6396                                         i2l2822 5BC2  
                                       i2l2814 75DC                                         i2l2806 7542  
                                       i2l2726 6B4A                                         i2l1950 51AC  
                                       i2l2743 6372                                         i2l2823 5BBE  
                                       i2l2815 7600                                         i2l2399 AB22  
                                       i2l1943 77C6                                         i2l2575 B086  
                                       i2l1847 A9C4                                         i2l1839 7D6C  
                                       i2l2744 6350                                         i2l2736 629A  
                                       i2l2840 5E28                                         i2l2824 5BD2  
                                       i2l2816 762A                                         i2l1960 2BF0  
                                       i2l2753 63BA                                         i2l2745 635E  
                                       i2l2737 6296                                         i2l2833 5DF0  
                                       i2l2817 7636                                         i2l1953 526C  
                                       i2l1961 2C66                                         i2l2762 648C  
                                       i2l2754 63BE                                         i2l2746 6362  
                                       i2l2842 5E6C                                         i2l2834 5DD2  
                                       i2l2826 5C02                                         i2l2818 7638  
                                       i2l1946 78AE                                         i2l1954 53E8  
                                       i2l1962 2C38                                         i2l2771 64CC  
                                       i2l2739 62F6                                         i2l2843 5E8A  
                                       i2l2827 5BFE                                         i2l2931 83D2  
                                       i2l1971 2CDE                                         i2l2780 6542  
                                       i2l2764 64A2                                         i2l2828 5C12  
                                       i2l2932 83E2                                         i2l2860 6C8C  
                                       i2l1956 54A8                                         i2l2757 6458  
                                       i2l2749 63D0                                         i2l2845 5EAE  
                                       i2l2829 5C30                                         i2l2941 8482  
                                       i2l2933 8400                                         i2l2861 6D36  
                                       i2l2853 6B9E                                         i2l1949 529C  
                                       i2l1973 2E22                                         i2l1965 2C82  
                                       i2l2774 6512                                         i2l2766 64AC  
                                       i2l2846 5ECC                                         i2l2942 8476  
                                       i2l2862 6C92                                         i2l1990 2E74  
                                       i2l1982 2E30                                         i2l1974 2DF6  
                                       i2l1966 2C7A                                         i2l2759 6468  
                                       i2l2935 8412                                         i2l2863 6CD8  
                                       i2l2855 6BAE                                         i2l1991 2E84  
                                       i2l1983 2E34                                         i2l1975 2DA4  
                                       i2l2936 8406                                         i2l2952 8FA8  
                                       i2l2792 7410                                         i2l2864 6D00  
                                       i2l2856 6BC8                                         i2l1984 30EA  
                                       i2l1992 2E7E                                         i2l2961 9E0E  
                                       i2l2953 8F96                                         i2l2793 740C  
                                       i2l2778 6538                                         i2l2946 84A0  
                                       i2l2938 8450                                         i2l2866 6DEA  
                                       i2l2858 6C02                                         i2l2779 6540  
                                       i2l2947 84D2                                         i2l2939 8438  
                                       i2l2955 8FC6                                         i2l2795 7456  
                                       i2l2859 6C2E                                         i2l1979 3074  
                                       i2l1995 2ED6                                         i2l1987 2E38  
                                       i2l2956 905E                                         i2l2788 73D0  
                                       i2l1996 2EEC                                         i2l2797 747E  
                                       i2l2789 73CC                                         i2l1989 2E3C  
                                       i2l2798 752C                                         i2l2799 74DC  
                                       i2l1999 2EF6                                         _RG7PPS 000E89  
                                       _TABLAT 000FF5                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                         i2l9841 762A  
                                    ??i2_scale 004D                        TMR7_WriteTimer@timerVal 0100  
                        __size_of_getCOMMError 0016                                         _SBOREN 00725F  
                                       _OSCFRQ 000E49                                  ?_OLED_Command 0001  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                                ?_clearADCErrors 0001  
                             __end_of___xxtofl 8394          __end_of_ADCC_DischargeSampleCapacitor B31C  
       __size_of_ADCC_DischargeSampleCapacitor 0008                  _ADCC_DischargeSampleCapacitor B314  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 0132  
                            ?_I2C1_MasterWrite 0120                                _clearCOMMErrors B24A  
                               i2___fladd@aexp 0069                                 i2___fladd@bexp 006A  
                                ?_OLED_PutChar 0001                         ?_dimmingOnTimeCallback 0001  
        __end_of_ADCC_HasAccumulatorOverflowed B2EE         __size_of_ADCC_HasAccumulatorOverflowed 000C  
                _ADCC_HasAccumulatorOverflowed B2E2                                   __doprnt$5214 018E  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize A3AA  
                           ??_I2C1_MasterWrite 0127                               __end_of__powers_ CED7  
                                 i2_scale$5457 004D                                 _p_i2c1_current 0260  
              __end_of_terminal_ringBufferPull 8D1C                                         ___flge 8D1C  
                             ?_updateErrorLEDs 0001                              _ADCC_ThresholdISR AEC0  
                                    ??___fladd 0131                                         ___wmul AE70  
                                    ??___fldiv 0145                                      ??___awdiv 0121  
                                    ??___flneg 0129                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___flmul 015E  
                                    ??___flsub 0145                                      ??___fltol 017C  
                                    ??___lldiv 011F                                      ??___llmod 012C  
                   ??_I2C1_MasterWriteTRBBuild 011E                                      ??__doprnt 0188  
                           ?_ADCC_ThresholdISR 0001       writeEnergyToEEPROMCallback@current_value 0040  
                      __end_of_TMR4_Initialize AE18                       ??_terminal_setCursorHome 01BD  
                                i2__doprnt@idx 0098                                         _fround 6E24  
                                i2__doprnt@len 009B                                      ?_I2C1_ISR 0001  
                                i2__doprnt@exp 009D                                  i2__doprnt@val 00A7  
                                       clear_0 9A10                                         clear_1 9A1C  
                                       clear_2 9A28                                         clear_3 9A34  
                         _eusart2RxStringReady 07D8                               ___awdiv@quotient 0123  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0119                                 i2___fldiv@sign 001F  
                                 __doprnt@flag 01A7                                ___awmod@counter 011B  
                                       _printf AA44                                   __doprnt@fval 019D  
                              ??_INT0_CallBack 0003                                   __doprnt@prec 01A9  
                                       _strcat A67E                                         _strchr ABA8  
                      __end_of_DATAEE_ReadByte B132                                         _strcmp A4A2  
                                       _strcpy AC18                                         _strlen A2FA  
                               i2___awdiv@sign 000C                                         _strstr 9A56  
                                       floor@i 007A                                         floor@x 0076  
                 getCauseOfResetString@strings 02D1                               _background_color 026F  
                              _TMR5_StartTimer B336                                _ADCC_Initialize A028  
                            ??i2_EUSART2_Write 0001                      _ADCPostProcessingCallback 40F0  
         __end_of_TMR4_DefaultInterruptHandler B34A          __size_of_TMR4_DefaultInterruptHandler 0002  
                 _TMR4_DefaultInterruptHandler B348                                 _PMD_Initialize B08E  
                      FLASH_ReadWord@flashAddr 011B                              __end_ofi2___fladd 655E  
                                    ??_isdigit 0117                                      ??_memmove 011D  
                            __end_ofi2___fldiv 7654                              __end_ofi2___awdiv 9C70  
                            __end_ofi2___flneg AE46                              __end_ofi2___awmod 9F4C  
                            __end_ofi2___flmul 5EE2                              __end_ofi2___flsub A83E  
                            __end_ofi2___fltol 9434                        ??i2_writeDoubleToEEPROM 000B  
                            __end_ofi2___lldiv 9D74                                         sin@sgn 0098  
                          ??_ADCC_ThresholdISR 005E                              __end_ofi2___llmod A29A  
                                 __mediumconst CEA2                                   _getCOMMError B194  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                            _ADCC_StopConversion B33A  
                         _EUSART2_Transmit_ISR AC84                              __end_ofi2__doprnt 40F0  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                              ??_EUSART2_Write 0117       TMR4_SetInterruptHandler@InterruptHandler 0117  
     INT0_SetInterruptHandler@InterruptHandler 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117   ADCC_SetADTIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 00B5  
                I2C1_MasterWriteTRBBuild@pdata 0119                          ?_readDoubleFromEEPROM 0119  
                               i2___flmul@aexp 003D                                 i2___flmul@bexp 0042  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 01BD                                 i2___flmul@sign 003C  
                               i2___flmul@temp 0047                                 i2___flmul@prod 0043  
                __size_of_INTERRUPT_Initialize 001C                                _eusart2RxBuffer 0300  
                                   ___flge@ff1 0117                                     ___flge@ff2 011B  
                               ??_OLED_Command 0127                        __end_of_TMR5_Initialize A592  
                                 ___xxtofl@arg 0121                              __end_ofi2_isdigit B08E  
                                 ___xxtofl@exp 0120                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00DE                              _SYSTEM_Initialize AB34  
                                 ___xxtofl@val 0117           __end_of_TMR7_DefaultInterruptHandler B344  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler B342  
                              _eusart2TxBuffer 0400                                     __accesstop 0060  
                      __end_of__initialization 9A4C                                 i2___fltol@exp1 0075  
                                    ?_INT0_ISR 0001                                     ___flneg@f1 0125  
                                    ?_HLVD_ISR 0001                             ?_SYSTEM_Initialize 0001  
                    __size_ofi2_TMR5_StopTimer 0004                                   eval_poly@res 0078  
                                ___rparam_used 000001      __end_of_ADCC_GetCurrentCountofConversions B342  
   __size_of_ADCC_GetCurrentCountofConversions 0004            ??_ADCC_GetCurrentCountofConversions 0001  
           ?_ADCC_GetCurrentCountofConversions 0001              _ADCC_GetCurrentCountofConversions B33E  
                                   ___fltol@f1 0178                                _TMR5_WriteTimer B0E2  
                               ??_OLED_PutChar 0127                                 _i2c1_trb_count 026C  
                           i2__tdiv_to_l_@exp1 000F                              i2___llmod@divisor 0012  
                           i2__tdiv_to_l_@cntr 000E                      __end_of_ADCC_ThresholdISR AEE8  
                            i2___llmod@counter 0016                           ?_ADCC_StopConversion 0001  
                           i2__tdiv_to_l_@quot 000A              terminal_ringBufferPull@charNumber 02C9  
                          __size_ofi2___xxtofl 0150                          _I2C1_FunctionComplete B132  
                         _I2C1_BusCollisionISR B328                     __end_of_getMajorRevisionID AA44  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                      ??_terminal_printNewline 01BD                          __end_of_TMR4_CallBack AFCA  
                       I2C1_MasterWrite@length 0122                                   __pidataBANK0 B31C  
                                 __pidataBANK2 AF80                            ??_SYSTEM_Initialize 011C  
                                    ?_TMR4_ISR 0001                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                             _DATAEE_WriteByte A9CA                                  __end_of_floor 9070  
                                __end_of_frexp 9E6A                                  __end_of_scale 5058  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch B1BE  
                            ??_HLVD_Initialize 0117                                     ??_I2C1_ISR 0004  
                     ??_terminal_clearTerminal 01BD                        __end_of_TMR6_Initialize AD88  
                     __size_of_getCauseOfReset 0052                         __end_of_PMD_Initialize B0AA  
                        _getCauseOfResetString AD88                                      ?i2___flge 0034  
                         __end_of_EUSART2_Read A716                                      ?i2___wmul 0001  
                                i2__tdiv_to_l_ 874E                    __size_of_EXT_INT_Initialize 001E  
                                   __div_to_l_ 8880                             __size_of_getUserID 0044  
                                    ?i2_fround 0049                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026                  ?_TMR4_DefaultInterruptHandler 0001  
                                    ?i2_printf 00B2                              ?_OLED_WriteString 0138  
                  ADCC_StartConversion@channel 0100                                     __doprnt@ap 0186  
                                   __doprnt@cp 0193                                     __doprnt@pb 0182  
                              __div_to_l_@exp1 0124                                        ??_floor 005E  
                              __div_to_l_@cntr 0123                                        ??_frexp 0007  
                                      ??_scale 0173                      __end_of_SYSTEM_Initialize AB6E  
                              __div_to_l_@quot 011F                                        ??_putch 0118  
                                 peakToRMS@RMS 00C5                             i2___lldiv@quotient 0009  
                      __end_of_clearCOMMErrors B258                                   ??_OLED_Clear 0138  
                           ??_OLED_WriteString 013A                                  _eusart2RxHead 00FA  
                                _eusart2TxHead 01E1                                     __pbssBANK0 00F6  
                                   __pbssBANK1 01C6                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                     __pbssBANK4 0400  
                                _eusart2RxTail 01DE                                  _eusart2TxTail 01E0  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize A3FE  
                           __size_of_peakToRMS 024A                          _INT0_InterruptHandler 0247  
                                   ??_INT0_ISR 0003                                     ??_HLVD_ISR 0011  
            __size_of_recoverSRAMMaxFromEEPROM 0136                      ?_recoverSRAMMaxFromEEPROM 0001  
                ?_TMR7_DefaultInterruptHandler 0001                          _TMR4_InterruptHandler 0244  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011B  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer AF0E  
                        ??_ADCC_StopConversion 0001                          ?_I2C1_BusCollisionISR 0001  
                             ??_FVR_Initialize 0117                     __end_ofi2_DATAEE_WriteByte ABA8  
                                _error_handler 0200                          ringBufferLUT@arg_buff 02A4  
                               _peakToRMS$5442 00C1                                 _peakToRMS$5443 00B9  
                               _peakToRMS$5444 00BD                                    _Irms_offset 02E9  
                                      ?___flge 0117                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_2968 02CB                     ??_OLED_UpdateFromRAMBuffer 013C  
                                      ?___wmul 0117                          _currentMeasuredToPeak 9D74  
                      __end_of_TMR5_StartTimer B33A                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler B274                                     ??_TMR4_ISR 0044  
                      __end_of_ADCC_Initialize A092                                     ??_TMR5_ISR 0003  
                                   ??_TMR6_ISR 0101                                     ??_TMR7_ISR 0102  
                              _I2C1_Initialize AC4E                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                 ringBufferLUT@max_Power_print 02AF                           _Total_Energy_address CF5F  
                                      ?_fround 016F                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61           __end_of_ADCC_SetADTIInterruptHandler B2C8  
        __size_of_ADCC_SetADTIInterruptHandler 000E                   _ADCC_SetADTIInterruptHandler B2BA  
                             ?_TMR4_Initialize 0001                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 01AC                                ?_PMD_Initialize 0001  
                          _ADCC_GetFilterValue B1BE                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___flge 003C                             __end_of_OLED_Clear A94A  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strcpy 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte B0FE  
          ringBufferLUT@max_voltage_print_3311 02B7            ringBufferLUT@max_voltage_print_3317 02BF  
                                      ?_strstr 0126                               ?_DATAEE_ReadByte 0117  
                                   ??i2___wmul 0005                                 _FLASH_ReadWord A8C8  
                                      u2095_41 875E                                        u2097_41 878A  
                                      _INT0PPS 000DF0                                        i2l11095 A72E  
                                      i2l13201 7BEC                                        i2l23105 408A  
                                      i2l13801 8F5A                                        i2l23097 401A  
                                      i2l22713 2EF6                                        i2l22803 3310  
                                      i2l22723 2F70                                        i2l22901 3796  
                                      i2l22823 3422                                        i2l22855 352A  
                                      i2l22867 35AC                                        i2l22795 32C2  
                                      i2l22985 3BF2                                        i2l22999 3C34  
            i2writeDoubleToEEPROM@input_double 0005                writeDoubleToEEPROM@input_double 011B  
                                    ?___xxtofl 0117                                        _SP2BRGH 000EF4  
                                   ??i2_fround 004D                                        _SP2BRGL 000EF3  
                                      _OLED_YX AA80                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 9750  
                                    _I2C1_Stop A98A                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 005E                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                         ??_readDoubleFromEEPROM 011D  
                                      _SSP1ADD 000F92                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                                        _SSP1BUF 000F91  
          __end_of_max_Temp_ADC_Result_address CF57                    _max_Temp_ADC_Result_address CF55  
                     _acquisitionTimerCallback B1F8                       __end_of_max_Irms_address CF5F  
                      __end_of_TMR5_WriteTimer B0FE               __size_of_terminal_textAttributes 0368  
                                      i2_scale 5058                               ?_TMR5_Initialize 0001  
                I2C1_MasterTRBInsert@ptrb_list 0117                           DATAEE_WriteByte@bAdd 0117  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch B302  
            __size_of_INT0_SetInterruptHandler 000E                          i2DATAEE_ReadByte@bAdd 0001  
                    ?_INT0_SetInterruptHandler 0117                                i2___fladd@signs 0068  
         __end_of_terminal_textAttributesReset B1F8          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset B1E6                         ?_I2C1_FunctionComplete 0001  
                                ??_getADCError 0117                              __end_of__npowers_ CF0B  
                                      __Hparam 0000                  __size_of_I2C1_MasterTRBInsert 00A2  
          __end_of_writeEnergyToEEPROMCallback 9CF2                    _writeEnergyToEEPROMCallback 9C70  
                   __size_of_ADCC_ThresholdISR 0028                                     _scale$5213 0173  
           __end_of_max_FVR_ADC_Result_address CF55                     _max_FVR_ADC_Result_address CF53  
                                      __Lparam 0000                              __end_of_getUserID A8C8  
                        _ADCC_ClearAccumulator B322                     ??_TMR5_SetInterruptHandler 011A  
                           _p_i2c1_trb_current 0262                       ??_dimmingOffTimeCallback 0003  
                              __size_of___flge 0122                                        ___fladd 5EE2  
                                      ___fldiv 70EA                                        ___awdiv 9AE2  
                                      ___flneg ADB8                                        ___awmod 9E6A  
                               i2__doprnt$5458 0094                                        ___flmul 5840  
                                      ___flsub A7AE                                        ___fltol 9278  
                                      ___lldiv 9B68                                __size_of___wmul 0028  
                                      ___llmod A164                         __end_of_FLASH_ReadByte B118  
                                      __doprnt 16DE                         ?_getCauseOfResetString 0117  
                       __end_of_FLASH_ReadWord A90A                                        __pcinit 99CA  
                            __end_of_eval_poly 9278                                __size_of_fround 02C6  
                             ?_TMR6_Initialize 0001                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                           __end_of_OLED_Command A0FC  
                                      __ptext0 8AD2               i2readDoubleFromEEPROM@byte_index 000B  
               readDoubleFromEEPROM@byte_index 0121                                        __ptext1 B14C  
                                      __ptext2 B20A                                        __ptext3 8BF8  
                                      __ptext4 0000                                        __ptext5 B1E6  
                                      __ptext6 54D8                                        __ptext7 A0FC  
                                      __ptext8 A67E                                        __ptext9 B21A  
                            __end_of_peakToRMS 800A                                __size_of_printf 003C  
                currentMeasuredToPeak@Measured 0099                     ringBufferLUT@angle_degrees 02A7  
                ?_ADCC_SetADTIInterruptHandler 0117                        __size_of_TMR5_StopTimer 0004  
                              __size_of_strcat 004C                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                  i2_fround$5455 0051  
                                i2_fround$5456 004D                                __size_of_strcpy 0036  
                              __size_of_strlen 0058                              __end_of_hexpowers CF53  
                       getCauseOfResetString@r 0119                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers CF0B  
                        _OSCILLATOR_Initialize B0AA                         ??_EUSART2_Transmit_ISR 0100  
                                 __size_of_abs 002A                                   i2fround@prec 0055  
                                      _isdigit B010                                atan@val_squared 0089  
                               i2__doprnt@flag 00AD                                   __size_of_sin 02FA  
                                 ??i2___xxtofl 0009                                        _memmove 9750  
                                   ??___xxtofl 011B                                 i2__doprnt@fval 00A3  
                             ___awmod@dividend 0117                                 i2__doprnt@prec 00AF  
                                    _T4CONbits 000FB7                           __end_of_OLED_PutChar 96A0  
                     ??_PIN_MANAGER_Initialize 0117              __size_of_TMR4_SetInterruptHandler 000E  
                                      atan@val 008D                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0117              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR4_SetInterruptHandler 0117                                     ?_I2C1_Stop 0001  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 0095                                      _T4HLTbits 000FB8  
                  __end_of_saveSRAMMaxToEEPROM 7B68                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 02C5                                      _T6HLTbits 000FB2  
                             ??_clearADCErrors 0117                     __size_of_SYSTEM_Initialize 003A  
                         I2C1_ISR@pi2c_buf_ptr 025E                                  __doprnt@width 01A5  
                        i2EUSART2_Write@txData 0001                                        _strncmp 993A  
                               __pintcode_body 9070                                        _strncpy A0FC  
                         end_of_initialization 9A4C                        __end_of_TMR7_WriteTimer AF34  
                                      ftoa@buf 0274                               ?_clearCOMMErrors 0001  
               ??_TMR4_DefaultInterruptHandler 0001                        getDeviceIDString@F17550 02E3  
                       _terminal_setCursorHome B20A                          ??_ADCC_GetFilterValue 0003  
                                    _PCON0bits 000FD7                                      _T4RSTbits 000FBA  
                             ?_TMR7_Initialize 0001                           _max_POS12_ADC_Result 0218  
                      ??_dimmingOnTimeCallback 0001                                      i1u1501_20 A956  
                                      int_func 9070                                      i1u1502_28 A95A  
                          i2___wmul@multiplier 0001                                      _T6RSTbits 000FB4  
                                    i1u3510_28 AD0E                                      i2u1203_40 9E36  
                                    i2u1203_48 9E38                                      i1u3508_28 AEAC  
                                    i2u2013_40 9394                                      i2u2013_45 938A  
                                    i2u2110_40 A256                                      i2u1311_40 B2EA  
                                    i2u1063_40 7594                                      i2u2007_40 807A  
                                    i2u2103_40 886E                                      i1u3543_28 0086  
                                    i2u2008_40 807C                                      i2u2017_40 940C  
                                    i2u2025_40 848C                                      i2u1241_45 ABA4  
                                    i2u1241_46 ABA6                                      i2u1066_40 75EA  
                                    i2u2043_40 8FB4                                      i2u1067_40 760E  
                                    i2u2107_40 9D24                                      i2u2051_40 9C32  
                               i2___xxtofl@arg 000F                                      i2u2300_40 4178  
                                    _OLED_Init 98A0                               i2_TMR5_StopTimer B332  
                                    i2u2310_40 488C                                      i2u2303_40 4282  
                               i2___xxtofl@exp 000E                                      i2u2064_40 69B0  
                                    i2u2312_40 496C                                      i2u2065_40 69B2  
                                    i2u2305_40 4340                                      i2u2057_40 9F16  
                               i2___xxtofl@val 0005                                      i2u2314_40 4B48  
                                    i2u2094_40 8AC0                                      i2u3311_40 2D26  
                                    i2u1279_40 A66C                                      i2u3311_47 2D1C  
                                    i2u3320_40 2EB2                                      i2u3312_40 2D62  
                                    i2u3320_47 2EA8                                      i2u3312_47 2D58  
                                    i2u1801_40 64C8                                      i2u3321_40 2EB8  
                                    i2u3313_40 2D6A                         ??_I2C1_BusCollisionISR 0001  
                                    i2u3330_40 2FCA                                      i2u3314_40 2D8C  
                                    i2u3330_47 2FC0                                      i2u3314_47 2D82  
                                    i2u3411_40 3EB2                                      i2u3410_48 3E62  
                                    i2u3331_40 300E                                      i2u3331_47 3004  
                                    i2u3403_48 3D7A                                      i2u3316_40 2DDA  
                                    i2u3308_40 2CA4                                      i2u3307_48 2C22  
                                    i2u3316_47 2DD0                                      i2u3308_47 2C9A  
                                    i2u3341_40 3288                                      i2u3333_40 30A4  
                                    i2u3317_40 2E18                                      i2u3309_40 2CCC  
                                    i2u3333_47 309A                                      i2u3317_47 2E0E  
                                    i2u3309_47 2CC2                                      i2u1806_40 651E  
                                    i2u3342_40 32D4                                      i2u3421_48 AFDA  
                                    i2u3502_40 AF4A                                      i2u1823_40 5E24  
                                    i2u3414_48 3EEC                                      i2u3406_48 3DEA  
                                    i2u3326_48 2F1C                                      i2u3408_40 3E3C  
                                    i2u3423_48 AFB6                                      i2u1817_40 5C1E  
                                    i2u3417_40 40AA                                      i2u3416_48 4058  
                                    i2u3361_40 3628                                      i2u3360_48 35D2  
                                    i2u3345_40 3310                                      i2u3504_48 AD42  
                                    i2u1826_40 5E7A                                      i2u1818_40 5D94  
                                    i2u3418_40 40DA                                      i2u3370_40 3812  
                                    i2u3329_48 2F96                                      i2u3514_40 96E8  
                                    i2u3329_49 2FCC                                      i2u1818_45 5D8A  
                                    i2u3418_47 40D0                                      i2u1827_40 5E98  
                                    i2u3506_48 AED4                                      i2u3419_40 40E6  
                                    i2u3371_40 3822                                      i2u1780_40 6326  
                                    i2u3355_48 34E8                                      i2u1781_40 6336  
                                    i2u3364_48 3662                                      i2u3349_40 3460  
                                    i2u1782_40 6338                                      i2u3357_48 3552  
                                    i2u3374_48 3864                                      i2u3366_48 3744  
                                    i2u3534_48 9100                        __end_of_I2C1_Initialize AC84  
                                    i2u1785_40 637A                                      i2u3376_48 39B6  
                                    i2u3369_48 37BC                                ___lldiv@divisor 011B  
                                    i2u3379_48 3A82                    __end_of_writeDoubleToEEPROM A542  
                                    i2u1798_40 64B0                                ___lldiv@counter 0123  
                           _EUSART2_Initialize A1CC                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0099                    getDeviceIDString@inputDevID 0124  
                              i2_EUSART2_Write A762                                  ??_getDeviceID 0124  
                                      printf@f 01AC                       ??_heartbeatTimerCallback 0100  
                           __end_ofi2___xxtofl 84E4                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 004C                               ?_TMR5_StartTimer 0001  
                             ?_ADCC_Initialize 0001                 _ADCPostProcessingCallback$5445 00D6  
               _ADCPostProcessingCallback$5446 00DA                 _ADCPostProcessingCallback$5447 00C9  
                                      sqrt@grs 007B                 _ADCPostProcessingCallback$5448 00CD  
                                      sqrt@exp 007F                 _ADCPostProcessingCallback$5449 00D1  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                   _HLVDCON0bits 000EC2  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                          __end_of_getADCError ACEE                                        strlen@s 0117  
                 terminal_ringBufferPull@index 02CD                                  ??__tdiv_to_l_ 011D  
                              ?_FLASH_ReadWord 011B                       _TMR6_SetInterruptHandler B266  
                    __size_of_I2C1_MasterWrite 0050                              __size_of_I2C1_ISR 0258  
                        _TMR5_InterruptHandler 024A                       ?_terminal_ringBufferPull 0001  
                                  ___fladd@grs 013C                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 011F                 __size_ofi2_writeDoubleToEEPROM 004C  
                __end_ofi2_writeDoubleToEEPROM A762                                    ___fldiv@grs 0150  
                                  ___fldiv@rem 014A                                i2___fltol@sign1 0074  
                                    i2___fladd 6220                                      i2___fldiv 73A0  
                                    i2___awdiv 9BEC                                      i2___flneg AE18  
                                    i2___awmod 9EDC                               __CFG_FEXTOSC$ECH 000000  
                                    i2___flmul 5B92                                      i2___flsub A7F6  
                                    i2___fltol 9356                                      i2___lldiv 9CF2  
                                    i2___llmod A234                       __end_of_DATAEE_WriteByte AA08  
            I2C1_ISR@i2c_10bit_address_restart 026A                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 011A                                      i2__doprnt 2BEC  
                       _terminal_clearTerminal B22A                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 16DE                              OLED_WriteString@s 0138  
                                  ___flmul@grs 0164                                   _EUSART2_Read A6CA  
                           i2___llmod@dividend 000E                                     ?_OLED_Init 0001  
                              _HLVD_Initialize B23A                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit B070  
                      I2C1_MasterWrite@address 0123                              __size_of_INT0_ISR 000A  
                          __size_of__div_to_l_ 012A                              __size_of_HLVD_ISR 0038  
                           _max_FVR_ADC_Result 0210                __size_of_dimmingOffTimeCallback 0018  
                                    _Avg_Power 01C6                   __end_of_INTERRUPT_Initialize B0E2  
                     ??i2_readDoubleFromEEPROM 0007                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                                 __end_of___flge 8E3E  
         __end_of_INT0_DefaultInterruptHandler B34C          __size_of_INT0_DefaultInterruptHandler 0002  
                 _INT0_DefaultInterruptHandler B34A                  __end_of_terminal_printNewline B22A  
                               __end_of___wmul AE98                        I2C1_MasterWrite@trBlock 028A  
                     I2C1_Stop@completion_code 0003                              __size_of_TMR4_ISR 0026  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07D8                            __end_of_getDeviceID B052  
                               __end_of_fround 70EA              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 007E  
                     __size_of_updateErrorLEDs 0018                               i2___wmul@product 0005  
                               __end_of_printf AA80                          __end_of_INT0_CallBack AFEE  
                           _getMajorRevisionID AA08                                 __end_of_strcat A6CA  
                               __end_of_strchr ABE0                                 __end_of_strcmp A4F2  
                               __end_of_strcpy AC4E                                 __end_of_strlen A352  
                               __end_of_strstr 9AE2                              __size_ofi2___flge 0120  
                          start_initialization 99CA                                     eval_poly@d 0070  
                                   eval_poly@n 0072                                     eval_poly@x 006C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
                                  ??_I2C1_Stop 0001           __end_of_TMR5_DefaultInterruptHandler B348  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler B346  
              __size_of_PIN_MANAGER_Initialize 00CC                            __end_of__tdiv_to_l_ 874E  
                                  __end_of_abs AE70                                    __end_of_sin 6B5C  
                                    i2printf@f 00B2                        _terminal_textAttributes 54D8  
                                   ?i2___fladd 0056  EUSART2_SetRxInterruptHandler@interruptHandler 0117  
EUSART2_SetTxInterruptHandler@interruptHandler 0117                                     ?i2___fldiv 0013  
                            __size_ofi2_fround 02AE                                     ?i2___awdiv 0007  
                                   ?i2___flneg 002C                                     ?i2___awmod 0001  
                                   ?i2___flmul 0030                                     ?i2___flsub 0080  
                                   ?i2___fltol 006C                                     ?i2___lldiv 0001  
                                   ?i2___llmod 000E                  __size_of_ADCC_StartConversion 000E  
            __size_of_I2C1_MasterWriteTRBBuild 0046                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                      ?_I2C1_MasterWriteTRBBuild 0117  
                            __size_ofi2_printf 003C                          __end_of_EUSART2_Write A630  
                             ?_TMR7_WriteTimer 0100                                     ?i2__doprnt 0088  
                                   frexp@value 0001             terminal_textAttributes@output_buff 0295  
                      __end_ofi2_EUSART2_Write A7AE                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                            DATAEE_ReadByte@bAdd 0117  
                                   ?i2_isdigit 0001                               ?_I2C1_Initialize 0001  
                               _FVR_ADC_Result 01E2                               __CFG_LPBOREN$OFF 000000  
                                  _getADCError ACBA                      __size_of_OLED_WriteString 0058  
                                     ??___flge 011F                          __size_of_OLED_Command 006A  
                             ??_PMD_Initialize 0117                                       ??___wmul 011B  
              __size_of_heartbeatTimerCallback 0040                           ??_getMajorRevisionID 0122  
                                   OLED_YX@Row 012D                                    __doprnt@idx 0192  
                                  __doprnt@len 0195                                    __doprnt@exp 0197  
                                  __doprnt@val 01A1                                    __pdataBANK0 00F0  
                                  __pdataBANK2 02D1                                       ??_fround 0173  
                                _ringBufferLUT 0000                     __end_of_EXT_INT_Initialize B070  
               ??_terminal_textAttributesReset 01BF                          __size_of_OLED_PutChar 00C8  
                ?_INT0_DefaultInterruptHandler 0001                                       ??_printf 01B6  
            getCauseOfReset@return_reset_cause 0117         i2readDoubleFromEEPROM@starting_address 0003  
         readDoubleFromEEPROM@starting_address 0119                              _POS3P3_ADC_Result 01DA  
                               _TMR5_StopTimer B32E                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strcpy 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 00B1  
                 I2C1_MasterWriteTRBBuild@ptrb 0117                     __end_of_getMinorRevisionID AF0E  
                                     ??_strstr 012A                                      ___fladd@a 012D  
                                    ___fladd@b 0129                                      _Vpk_const 02ED  
                                   fround@prec 017B                                 _eusart2RxCount 0273  
                                ?i2__div_to_l_ 0001                             i2_DATAEE_WriteByte AB6E  
                                    ___fldiv@a 0141                                      ___fldiv@b 013D  
                                    _acos$5450 00AD                          TMR4_ISR@CountCallBack 0264  
                                    ___flmul@a 015A                                      ___flmul@b 0156  
                                    ___flsub@a 0141                                      ___flsub@b 013D  
             __end_of_INT0_SetInterruptHandler B29E                                       ?_OLED_YX 012B  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 0294                         _dimmingOffTimeCallback B17C  
                                _i2c1_tr_queue 028F                              __size_of___xxtofl 0154  
                                 _isdigit$4353 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize B24A                            ?i2_DATAEE_WriteByte 0001  
                          EUSART2_Write@txData 0117                         __size_of_TMR4_CallBack 0024  
                                 _load_on_time 0228                    __end_of_ADCC_StopConversion B33E  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                      ??_I2C1_FunctionComplete 0001                                       ?i2_putch 0001  
                                    _asin$5451 00A5                                      _asin$5452 009D  
                                    _asin$5453 0099                                      __doprnt@c 01AB  
                                    __doprnt@f 0184                                   _OLED_Command A092  
                                   sin@coeff_a D279                                     sin@coeff_b D2A1  
                                  ??_OLED_Init 012B                          _TMR6_InterruptHandler 0253  
                                    __pnvBANK2 02F6                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 950C                                   _OLED_PutChar 95D8  
                      ??_getCauseOfResetString 0119                                      __pintcode 0008  
                                  _getDeviceID B032                                  __pmediumconst CEA2  
                                     ?___fladd 0129               __end_of_TMR4_SetInterruptHandler B290  
                                     ?___fldiv 013D                                       ?___awdiv 011D  
                         ??i2_DATAEE_WriteByte 0004                                      __ptext100 B2C8  
                                    __ptext101 B314                                      __ptext110 B346  
                                    __ptext102 B322                                       ?___flneg 0125  
                                    __ptext111 B2D6                                      __ptext103 AF0E  
                                    __ptext120 AFCA                                      __ptext112 B332  
                                    __ptext104 AE98                                      __ptext121 B34A  
                                    __ptext113 AF34                                      __ptext105 B344  
                                    __ptext130 A716                                      __ptext122 B17C  
                                    __ptext114 AFA6                                      __ptext106 A94A  
                                    __ptext131 AB6E                                      __ptext123 B0E2  
                                    __ptext115 B348                                      __ptext107 AC84  
                                    __ptext140 9EDC                                      __ptext132 96A0  
                                    __ptext124 B336                                      __ptext116 9C70  
                                    __ptext141 9BEC                                      __ptext133 AABC  
                                    __ptext125 7B68                                      __ptext117 A630  
                                    __ptext109 AD22                                      __ptext150 7DC0  
                                    __ptext142 874E                                      __ptext134 2BEC  
                                    __ptext126 A98A                                      __ptext118 B164  
                                    __ptext151 9FBA                                      __ptext143 89AA  
                                    __ptext135 5058                                      __ptext127 B132  
                                    __ptext119 B2F8                                      __ptext160 73A0  
                                    __ptext152 655E                                      __ptext144 AF5A  
                                    __ptext136 B302                                      __ptext128 B328  
                                    __ptext161 8F5E                                      __ptext153 6B5C  
                                    __ptext145 A234                                      __ptext137 A762  
                                    __ptext129 ABE0                                      __ptext170 B33A  
                                    __ptext162 8394                                      __ptext154 800A  
                                    __ptext146 9CF2                                      __ptext138 B070  
                                    __ptext171 B2E2                                      __ptext163 9356  
                                    __ptext155 AAF8                                      __ptext147 AEC0  
                                    __ptext139 7654                                      __ptext172 B1BE  
                                    __ptext164 8E3E                                      __ptext156 9D74  
                                    __ptext148 B34C                                      __ptext173 B33E  
                                    __ptext165 9DF0                                      __ptext157 6862  
                                    __ptext149 40F0                                      __ptext174 B1D2  
                                    __ptext166 9178                                      __ptext158 A7F6  
                                    __ptext175 0000                                      __ptext167 5B92  
                                    __ptext159 AE18                                      __ptext168 6220  
                                    __ptext169 AE46                                       ?___awmod 0117  
                                     ?___flmul 0156                                       ?___flsub 013D  
                                     ?___fltol 0178               __end_of_TMR7_SetInterruptHandler B266  
                                     ?___lldiv 0117                                       ?___llmod 0124  
                                    __npowers_ CED7                                _getCauseOfReset A450  
                               ?_ringBufferLUT 01BF                __size_ofi2_readDoubleFromEEPROM 004E  
                                    _getUserID A884                         __end_of_TMR5_StopTimer B332  
            _EUSART2_TxDefaultInterruptHandler 0259                                       ?__doprnt 0182  
                       OLED_PutChar@data_array 012B                                    __pintcodelo 0018  
                                     _I2C1_ISR 7B68                                    __tdiv_to_l_ 861A  
                             _I2C1_MasterWrite A592                                 ??i2__div_to_l_ 0009  
                                 ??__div_to_l_ 011F                               _POS12_ADC_Result 01D6  
                                     _BAUD2CON 000EF7                       __end_ofi2_TMR5_StopTimer B336  
         __size_of_writeEnergyToEEPROMCallback 0082                   __end_of_I2C1_MasterTRBInsert 98A0  
                                     ?_isdigit 0001                                       ?_memmove 0117  
                                  _dev_on_time 022C                                      _eval_poly 9178  
                    ??_terminal_textAttributes 01BF                  i2DATAEE_WriteByte@GIEBitValue 0004  
                                    _max_Power 0220                                      _attribute 0271  
                                    _peakToRMS 7DC0                               __CFG_WDTE$NSLEEP 000000  
                     __size_of_TMR4_Initialize 0030                        ?_terminal_setCursorHome 0001  
                                    _hexpowers CF33              __size_of_OLED_UpdateFromRAMBuffer 006E  
                       _heartbeatTimerCallback A94A                                 _dimming_period 00F0  
                    ?_OLED_UpdateFromRAMBuffer 0001                                    ??i2___fladd 0060  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0030                                    ??i2___awmod 0005  
                                  ??i2___flmul 0038                                 __size_of_floor 0112  
                                  ??i2___flsub 005E                                    ??i2___fltol 0070  
                               __size_of_frexp 007A                              ??_updateErrorLEDs 0117  
                                  ??i2___lldiv 0009                                 __size_of_scale 04A4  
                                  ??i2___llmod 0016                       __size_of_DATAEE_ReadByte 001A  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                                     _T4CLKCON 000FB9                  __size_of_readDoubleFromEEPROM 0052  
                     _recoverSRAMMaxFromEEPROM 84E4                                 __size_of_putch 0014  
                         _INTERRUPT_Initialize B0C6                                       _T6CLKCON 000FB3  
                                  ??i2__doprnt 008E         terminal_textAttributes@input_attribute 01BE  
     __end_of_I2C1_WaitForLastPacketToComplete B2F8      __size_of_I2C1_WaitForLastPacketToComplete 000A  
            ?_I2C1_WaitForLastPacketToComplete 0001             ??_I2C1_WaitForLastPacketToComplete 0117  
             _I2C1_WaitForLastPacketToComplete B2EE                         I2C1_MasterRead@trBlock 0285  
                                     _HLVDCON0 000EC2                                       _HLVDCON1 000EC3  
                 __size_of_EUSART2_Receive_ISR 00B0                                       _INT0_ISR B2F8  
                               ___wmul@product 011B                      currentMeasuredToPeak@Peak 00A1  
                             i2__doprnt@tmpval 009F                               ?i2_EUSART2_Write 0001  
                                     _HLVD_ISR ABE0                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0088  
                                     _IPR0bits 000E1F                                       _IPR1bits 000E20  
                                     _IPR2bits 000E21                                       _PIE0bits 000E29  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                                     _PIE2bits 000E2B                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
               __size_of_dimmingOnTimeCallback 000C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                  __end_of_dimmingOnTimeCallback B2E2  
                          _max_Temp_ADC_Result 0214                                       _PIR0bits 000E33  
                                     _PIR1bits 000E34                             __end_of__div_to_l_ 89AA  
                             ??_FLASH_ReadByte 011B                                       _PIR2bits 000E35  
                                     _PIR3bits 000E36                                       _PIR5bits 000E38  
                                     _PIR8bits 000E3B                               ??_FLASH_ReadWord 011F  
                   ??_TMR6_SetInterruptHandler 011A                       __size_of_TMR5_Initialize 0050  
                            i2___fldiv@new_exp 0024                                       _SSP1CON1 000F95  
                                     _SSP1CON3 000F97                                       _TMR4_ISR AF34  
                                _TMR4_CallBack AFA6                                       _TMR5_ISR AD22  
                                     _TMR6_ISR AE98                                       _TMR7_ISR ACEE  
                                     _SSP1STAT 000F94                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0005                                     ?_getUserID 0122  
                              ?_TMR5_StopTimer 0001                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                     i2___flge 8E3E                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 0117                                       i2___wmul AF5A  
                      __size_of_FVR_Initialize 0008                                     ?_eval_poly 006C  
               __end_of_terminal_setCursorHome B21A                                  ?_getCOMMError 0001  
                            i2___awdiv@divisor 0009                                       i2_fround 7654  
               ??_INT0_DefaultInterruptHandler 0001              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 00B1                i2writeDoubleToEEPROM@byte_index 000F  
                writeDoubleToEEPROM@byte_index 0125                              i2___awdiv@counter 000B  
                  __end_of_ADCC_GetFilterValue B1D2                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                          DATAEE_WriteByte@bData 0119  
                                     i2_printf AABC                            __end_ofatan@coeff_a D279  
                          __end_ofatan@coeff_b D2A1                               __size_of_OLED_YX 003C  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                            _max_Power_address CF5B                         i2_readDoubleFromEEPROM A630  
                                    copy_data0 99DE                                      copy_data1 99FE  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 026E                       _INT0_SetInterruptHandler B290  
                            i2_DATAEE_ReadByte B164                             i2___awmod@dividend 0001  
                            ?_DATAEE_WriteByte 0117                        ??_ADCC_ClearAccumulator 0100  
                           ?i2_DATAEE_ReadByte 0001               __size_of_terminal_ringBufferPull 0124  
                             __size_ofi2_scale 0480                                       _OledFont CF61  
               ??_TMR5_DefaultInterruptHandler 0001                   __size_of_saveSRAMMaxToEEPROM 0266  
                           ??_DATAEE_WriteByte 011A                                   _next_channel 02F5  
                             __size_ofi2_putch 000A                                      frexp@eptr 0005  
                      __end_of_getCauseOfReset A4A2                __end_of_terminal_textAttributes 5840  
              i2writeDoubleToEEPROM@input_data 000B                  writeDoubleToEEPROM@input_data 0121  
                                   _ADSTATbits 000F65   ADCPostProcessingCallback@current_adc_channel 00D5  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult B1E6  
         __end_of_max_POS12_ADC_Result_address CF59                   _max_POS12_ADC_Result_address CF57  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler B2BA  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler B2AC  
                       OLED_PutChar@input_base 0134                       __size_of_clearCOMMErrors 000E  
                             _OLED_WriteString A352                  __size_of_I2C1_BusCollisionISR 0006  
                                     __Lrparam 0000                            ??i2_DATAEE_ReadByte 0003  
                              ??_ringBufferLUT 01C1                       __size_of_TMR7_Initialize 0054  
                               ?_TMR4_CallBack 0001                         I2C1_ISR@i2c_bytes_left 026B  
                             _foreground_color 0270                        ??_OSCILLATOR_Initialize 0117  
                                    memmove@d1 0117                                      memmove@s1 0119  
                             __size_of___fladd 033E                               __size_of___fldiv 02B6  
                             __size_of___awdiv 0086                               __size_of___flneg 0030  
                             __size_of___awmod 0072                               __size_of___flmul 0352  
                             __size_of___flsub 0048                               __size_of___fltol 00DE  
                        i2___wmul@multiplicand 0003                               __size_of___lldiv 0084  
                             __size_of___llmod 0068                   __size_of_writeDoubleToEEPROM 0050  
                                  _load_enable 02F0               __end_of_acquisitionTimerCallback B20A  
             __end_of_I2C1_MasterWriteTRBBuild A884                               __size_of__doprnt 150E  
                                  _fround$5211 0177                                    _fround$5212 0173  
                        __end_ofi2__tdiv_to_l_ 8880                       _TMR4_SetInterruptHandler B282  
                              _putch$intlevel0 B1B0                       _TMR7_SetInterruptHandler B258  
                        _TMR7_InterruptHandler 024D                             _ADC_Result_Scaling 023C  
                               ??_getCOMMError 0117        terminal_textAttributes@foreground_color 0294  
                                     ___xxtofl 8240                       __size_of_TMR5_StartTimer 0004  
                     __size_of_ADCC_Initialize 006A                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal B23A  
                             __size_of_isdigit 0022                      __end_of_max_Power_address CF5D  
                             __size_of_memmove 00AE                            I2C1_ISR@i2c_address 01E6  
                    __end_ofi2_DATAEE_ReadByte B17C                                       __ptext10 9A56  
                                     __ptext11 993A                                       __ptext20 A8C8  
                                     __ptext12 A2FA                                       __ptext21 B0FE  
                                     __ptext13 ABA8                                       __ptext30 A6CA  
                                     __ptext22 AD88                                       __ptext14 A4A2  
                                     __ptext31 B22A                                       __ptext23 B194  
                                     __ptext15 A884                                       __ptext40 9E6A  
                                     __ptext32 AA44                                       __ptext24 ACBA  
                                     __ptext16 AEE8                                       __ptext41 9AE2  
                                     __ptext33 16DE                                       __ptext25 B24A  
                                     __ptext17 AA08                                       __ptext50 5EE2  
                                     __ptext42 861A                                       __ptext34 4BB4  
                                     __ptext26 AFEE                                       __ptext18 A29A  
                                     __ptext51 ADB8                                       __ptext43 8880  
                                     __ptext35 B1AA                                       __ptext27 9434  
                                     __ptext19 B032                                       __ptext60 A450  
                                     __ptext52 AC18                                       __ptext44 8240  
                                     __ptext36 A5E2                                       __ptext28 70EA  
                                     __ptext61 AB34                                       __ptext53 7902  
                                     __ptext45 AE70                                       __ptext37 B010  
                                     __ptext29 B32E                                       __ptext70 B08E  
                                     __ptext62 A3AA                                       __ptext54 A4F2  
                                     __ptext46 A164                                       __ptext38 6E24  
                                     __ptext71 950C                                       __ptext63 B258  
                                     __ptext55 A9CA                                       __ptext47 9B68  
                                     __ptext39 5840                                       __ptext80 B29E  
                                     __ptext72 B0AA                                       __ptext64 AD56  
                                     __ptext56 8D1C                                       __ptext48 9278  
                                     __ptext81 B2AC                                       __ptext73 B0C6  
                                     __ptext65 B266                                       __ptext57 84E4  
                                     __ptext49 A7AE                                       __ptext90 98A0  
                                     __ptext82 A028                                       __ptext74 AC4E  
                                     __ptext66 A542                                       __ptext58 A3FE  
                                     __ptext91 A092                                       __ptext83 B2BA  
                                     __ptext75 B23A                                       __ptext67 B274  
                                     __ptext59 B118                                       __ptext92 A592  
                                     __ptext84 9F4C                                       __ptext76 B30C  
                                     __ptext68 ADE8                                       __ptext93 A83E  
                                     __ptext85 AA80                                       __ptext77 B052  
                                     __ptext69 B282                                       __ptext94 97FE  
                                     __ptext86 A352                                       __ptext78 B290  
                                     __ptext95 B2EE                                       __ptext87 A90A  
                                     __ptext79 A1CC                                       __ptext88 95D8  
                                     __ptext97 ACEE                                       __ptext89 9750  
                                     __ptext98 B342                                       __ptext99 B1F8  
                                 _SSP1CON1bits 000F95                                       _sin$5454 0090  
                                 _SSP1CON2bits 000F96                                       __powers_ CEA3  
                          ringBufferLUT@userID 02C7                                _Temp_ADC_Offset 02F1  
                        i2_writeDoubleToEEPROM A716                    DATAEE_WriteByte@GIEBitValue 011A  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 0068                                     strcpy@from 0119  
                                     _max_Irms 0224                                 i2_isdigit$4353 0002  
                              _Temp_ADC_Result 01D2                                  __size_of_acos 006E  
                                __size_of_fabs 003C                              ??_TMR4_Initialize 011A  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 0126  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
           __size_of_ADCPostProcessingCallback 0AC4                                  OLED_Clear@col 013A  
                         __end_ofi2__div_to_l_ 8AD2                                     strncmp@len 0121  
                   ?_ADCPostProcessingCallback 0001                                  OLED_Clear@row 0138  
                              i2__doprnt@width 00AB                              ??_DATAEE_ReadByte 0119  
                                OLED_YX@Column 012B                           __CFG_WDTCWS$WDTCWS_7 000000  
                           OLED_PutChar@length 0136                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                           _I2C1_MasterTRBInsert 97FE  
                                 ?_getADCError 0001                        __size_of_clearADCErrors 0022  
                     __size_of_TMR5_WriteTimer 001C                                 OLED_PutChar@ch 0137  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion B2D6  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                 __doprnt@tmpval 0199  
                                  atan@coeff_a D261                                    atan@coeff_b D28D  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline B21A  
                            i2___awmod@divisor 0003                        ?_dimmingOffTimeCallback 0001  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0074                                    _NVMCON1bits 000F77  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                              _OLED_I2C_Status 01E8                                       memmove@d 011F  
                                     memmove@n 011B                                       memmove@s 0121  
                                     scale@scl 0177                                      sqrt@tfrac 0076  
                           _EXT_INT_Initialize B052           __end_of_TMR6_DefaultInterruptHandler B346  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler B344  
         __end_of_ADCC_DefaultInterruptHandler B34E          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler B34C                                       intlevel1 0000  
                                     intlevel2 0000                                     _OLED_Clear A90A  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                                   _OLED_Frame 0272                             _getMinorRevisionID AEE8  
                             __tdiv_to_l_@quot 0120                                i2___xxtofl@sign 000D  
                                    strchr@chr 0119                                      strchr@ptr 0117  
                           ringBufferLUT@index 02C3                               ___lldiv@dividend 0117  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 011A  
                     __end_of_I2C1_MasterWrite A5E2                              __CFG_CLKOUTEN$OFF 000000  
               __size_of_I2C1_FunctionComplete 001A                            ?_EXT_INT_Initialize 0001  
                __end_of_I2C1_FunctionComplete B14C                          ?_I2C1_MasterTRBInsert 0117  
                                  _reset_cause 02F6                                      strncmp@s1 011D  
                                    strncmp@s2 011F                               ?_getCauseOfReset 0001  
                              _AVSS_ADC_Result 0240              __end_of_ADCPostProcessingCallback 4BB4  
                              ??_TMR4_CallBack 0044                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                       __size_of_INT0_CallBack 0024                       __size_of_TMR7_WriteTimer 0026  
                 ?_writeEnergyToEEPROMCallback 0001                                   ?_getDeviceID 0122  
                                     printf@ap 01B6                                       printf@pb 01B8  
               __size_of_getCauseOfResetString 0030                  __end_of_getCauseOfResetString ADB8  
                  __size_of_getMajorRevisionID 003C                       _ADCC_GetConversionResult B1D2  
               ?_EUSART2_SetRxInterruptHandler 0117               __end_of_OLED_UpdateFromRAMBuffer 9FBA  
                            ??_clearCOMMErrors 0117                       __size_of_I2C1_Initialize 0036  
                                 ?__tdiv_to_l_ 0117                 __end_of_dimmingOffTimeCallback B194  
                       __size_of_EUSART2_Write 004E                            _EUSART2_Receive_ISR 96A0  
                              _updateErrorLEDs B14C                                       sqrt@frac 0085  
       __end_of_INTERRUPT_InterruptManagerHigh 9178        __size_of_INTERRUPT_InterruptManagerHigh 9170  
               _INTERRUPT_InterruptManagerHigh 0008                                       sqrt@sign 0074  
                  getMajorRevisionID@REVID_RAW 0125                                       sqrt@root 0081  
                            ??_TMR7_Initialize 011A                                 _FVR_Initialize B30C  
                         ??_EXT_INT_Initialize 011A                     ??_recoverSRAMMaxFromEEPROM 0123  
                                     strcat@cp 011B                                       strcat@to 0117  
                                   _SSP1DATPPS 000E1A                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 0117                                       strcmp@s2 0119  
                                   _SSP1CLKPPS 000E19                              ringBufferLUT@line 01BF  
                             ___lldiv@quotient 011F                        i2DATAEE_WriteByte@bData 0003  
                            ?i2_TMR5_StopTimer 0001                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                       _I2C1_MasterWriteTRBBuild A83E  
                            _getDeviceIDString A29A                             ??i2_TMR5_StopTimer 0001  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                 _Total_Energy 00F6                     __size_ofi2_DATAEE_ReadByte 0018  
                       ?i2_writeDoubleToEEPROM 0005                                     _TX2STAbits 000EF6  
                                ___fladd@signs 0139                             ?_getDeviceIDString 0124  
        __end_of_INTERRUPT_InterruptManagerLow 00FE         __size_of_INTERRUPT_InterruptManagerLow 00E6  
                _INTERRUPT_InterruptManagerLow 0018                              ??_TMR5_StartTimer 0001  
               ??_ADCC_SetADTIInterruptHandler 011A                 __end_of_PIN_MANAGER_Initialize 95D8  
                            ??_ADCC_Initialize 011A                         i2DATAEE_WriteByte@bAdd 0001  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 8BF8                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0012  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                           __size_of_I2C1_Stop 0040                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                            ??_getDeviceIDString 0126  
            _EUSART2_RxDefaultInterruptHandler 0256                 __size_of_currentMeasuredToPeak 007C  
                         __end_of_getCOMMError B1AA                               ??_TMR5_StopTimer 0117  
                __end_of_currentMeasuredToPeak 9DF0                   __size_of_ADCC_StopConversion 0004  
