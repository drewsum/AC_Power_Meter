

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 06 11:32:48 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   153                           	psect	text126,global,reloc=2,class=CODE,delta=1
   154                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   155                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   156  0000                     
   157                           ; Version 1.45 (B)
   158                           ; Generated 30/01/2018 GMT
   159                           ; 
   160                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   161                           ; All rights reserved.
   162                           ; 
   163                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   164                           ; 
   165                           ; Redistribution and use in source and binary forms, with or without modification, are
   166                           ; permitted provided that the following conditions are met:
   167                           ; 
   168                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   169                           ;        conditions and the following disclaimer.
   170                           ; 
   171                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   172                           ;        of conditions and the following disclaimer in the documentation and/or other
   173                           ;        materials provided with the distribution.
   174                           ; 
   175                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   176                           ;        software without specific prior written permission.
   177                           ; 
   178                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   179                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   180                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   181                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   182                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   183                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   184                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   185                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   186                           ; 
   187                           ; 
   188                           ; Code-generator required, PIC18LF67K40 Definitions
   189                           ; 
   190                           ; SFR Addresses
   191  0000                     
   192                           	psect	idataBANK0
   193  01891A                     __pidataBANK0:
   194                           	opt stack 0
   195                           
   196                           ;initializer for _dimming_period
   197  01891A  7FEE               	dw	32750
   198                           
   199                           ;initializer for _TRIAC_Firing_Angle
   200                           ;main.c: 71: volatile double FVR_ADC_Result;
   201                           ;main.c: 72: volatile double AVSS_ADC_Result;
   202                           ;main.c: 73: volatile double ADC_Result_Scaling;
   203                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   204                           ;main.c: 75: volatile double POS12_ADC_Result;
   205                           ;main.c: 76: volatile double Temp_ADC_Result;
   206                           ;main.c: 77: volatile double Temp_ADC_Offset = 631.993725;
   207                           ;main.c: 78: double Vpk_const = 169.7056274847714;
   208                           ;main.c: 79: volatile double Vpk;
   209                           ;main.c: 80: volatile double Ipk;
   210                           ;main.c: 81: volatile double Imeas;
   211                           ;main.c: 82: double Irms_offset = -0.113;
   212  01891C  0000               	dw	0
   213  01891E  42B4               	dw	17076
   214                           
   215                           	psect	idataBANK1
   216  01893E                     __pidataBANK1:
   217                           	opt stack 0
   218                           
   219                           ;initializer for _next_channel
   220  01893E  3C                 	db	60
   221                           
   222                           	psect	idataBANK2
   223  0186EA                     __pidataBANK2:
   224                           	opt stack 0
   225                           
   226                           ;initializer for getCauseOfResetString@strings
   227  0186EA  10                 	db	low STR_130
   228  0186EB  FE                 	db	high STR_130
   229  0186EC  80                 	db	low STR_131
   230  0186ED  FE                 	db	high STR_131
   231  0186EE  20                 	db	low STR_132
   232  0186EF  FE                 	db	high STR_132
   233  0186F0  A7                 	db	low STR_133
   234  0186F1  FD                 	db	high STR_133
   235  0186F2  7F                 	db	low (STR_135+9)
   236  0186F3  FA                 	db	high (STR_135+9)
   237  0186F4  76                 	db	low STR_135
   238  0186F5  FA                 	db	high STR_135
   239  0186F6  A8                 	db	low STR_136
   240  0186F7  FC                 	db	high STR_136
   241  0186F8  53                 	db	low STR_137
   242  0186F9  FD                 	db	high STR_137
   243  0186FA  27                 	db	low STR_138
   244  0186FB  FD                 	db	high STR_138
   245                           
   246                           ;initializer for getDeviceIDString@F17550
   247  0186FC  44                 	db	low STR_127
   248  0186FD  FF                 	db	high STR_127
   249  0186FE  10                 	db	low STR_128
   250  0186FF  FF                 	db	high STR_128
   251  018700  7C                 	db	low STR_68
   252  018701  FF                 	db	high STR_68
   253                           
   254                           ;initializer for _Irms_offset
   255  018702  6C8B               	dw	27787
   256  018704  BDE7               	dw	48615
   257                           
   258                           ;initializer for _Vpk_const
   259                           ;main.c: 71: volatile double FVR_ADC_Result;
   260                           ;main.c: 72: volatile double AVSS_ADC_Result;
   261                           ;main.c: 73: volatile double ADC_Result_Scaling;
   262                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   263                           ;main.c: 75: volatile double POS12_ADC_Result;
   264                           ;main.c: 76: volatile double Temp_ADC_Result;
   265                           ;main.c: 77: volatile double Temp_ADC_Offset = 631.993725;
   266  018706  B4A4               	dw	46244
   267  018708  4329               	dw	17193
   268                           
   269                           ;initializer for _Temp_ADC_Offset
   270                           ;main.c: 71: volatile double FVR_ADC_Result;
   271                           ;main.c: 72: volatile double AVSS_ADC_Result;
   272                           ;main.c: 73: volatile double ADC_Result_Scaling;
   273                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   274                           ;main.c: 75: volatile double POS12_ADC_Result;
   275                           ;main.c: 76: volatile double Temp_ADC_Result;
   276  01870A  FF99               	dw	65433
   277  01870C  441D               	dw	17437
   278                           
   279                           	psect	mediumconst
   280  00EA02                     __pmediumconst:
   281                           	opt stack 0
   282  00EA02  00                 	db	0
   283  00EA03                     __powers_:
   284                           	opt stack 0
   285  00EA03  0000               	dw	0
   286  00EA05  3F80               	dw	16256
   287  00EA07  0000               	dw	0
   288  00EA09  4120               	dw	16672
   289  00EA0B  0000               	dw	0
   290  00EA0D  42C8               	dw	17096
   291  00EA0F  0000               	dw	0
   292  00EA11  447A               	dw	17530
   293  00EA13  4000               	dw	16384
   294  00EA15  461C               	dw	17948
   295  00EA17  5000               	dw	20480
   296  00EA19  47C3               	dw	18371
   297  00EA1B  2400               	dw	9216
   298  00EA1D  4974               	dw	18804
   299  00EA1F  9680               	dw	38528
   300  00EA21  4B18               	dw	19224
   301  00EA23  BC20               	dw	48160
   302  00EA25  4CBE               	dw	19646
   303  00EA27  6B28               	dw	27432
   304  00EA29  4E6E               	dw	20078
   305  00EA2B  02F9               	dw	761
   306  00EA2D  5015               	dw	20501
   307  00EA2F  78EC               	dw	30956
   308  00EA31  60AD               	dw	24749
   309  00EA33  F2CA               	dw	62154
   310  00EA35  7149               	dw	29001
   311  00EA37                     __end_of__powers_:
   312                           	opt stack 0
   313  00EA37                     __npowers_:
   314                           	opt stack 0
   315  00EA37  0000               	dw	0
   316  00EA39  3F80               	dw	16256
   317  00EA3B  CCCD               	dw	52429
   318  00EA3D  3DCC               	dw	15820
   319  00EA3F  D70A               	dw	55050
   320  00EA41  3C23               	dw	15395
   321  00EA43  126F               	dw	4719
   322  00EA45  3A83               	dw	14979
   323  00EA47  B717               	dw	46871
   324  00EA49  38D1               	dw	14545
   325  00EA4B  C5AC               	dw	50604
   326  00EA4D  3727               	dw	14119
   327  00EA4F  37BD               	dw	14269
   328  00EA51  3586               	dw	13702
   329  00EA53  BF95               	dw	49045
   330  00EA55  33D6               	dw	13270
   331  00EA57  CC77               	dw	52343
   332  00EA59  322B               	dw	12843
   333  00EA5B  705F               	dw	28767
   334  00EA5D  3089               	dw	12425
   335  00EA5F  E6FF               	dw	59135
   336  00EA61  2EDB               	dw	11995
   337  00EA63  E508               	dw	58632
   338  00EA65  1E3C               	dw	7740
   339  00EA67  4260               	dw	16992
   340  00EA69  0DA2               	dw	3490
   341  00EA6B                     __end_of__npowers_:
   342                           	opt stack 0
   343  00EA6B                     _dpowers:
   344                           	opt stack 0
   345  00EA6B  0001               	dw	1
   346  00EA6D  0000               	dw	0
   347  00EA6F  000A               	dw	10
   348  00EA71  0000               	dw	0
   349  00EA73  0064               	dw	100
   350  00EA75  0000               	dw	0
   351  00EA77  03E8               	dw	1000
   352  00EA79  0000               	dw	0
   353  00EA7B  2710               	dw	10000
   354  00EA7D  0000               	dw	0
   355  00EA7F  86A0               	dw	34464
   356  00EA81  0001               	dw	1
   357  00EA83  4240               	dw	16960
   358  00EA85  000F               	dw	15
   359  00EA87  9680               	dw	38528
   360  00EA89  0098               	dw	152
   361  00EA8B  E100               	dw	57600
   362  00EA8D  05F5               	dw	1525
   363  00EA8F  CA00               	dw	51712
   364  00EA91  3B9A               	dw	15258
   365  00EA93                     __end_of_dpowers:
   366                           	opt stack 0
   367  00EA93                     _hexpowers:
   368                           	opt stack 0
   369  00EA93  0001               	dw	1
   370  00EA95  0000               	dw	0
   371  00EA97  0010               	dw	16
   372  00EA99  0000               	dw	0
   373  00EA9B  0100               	dw	256
   374  00EA9D  0000               	dw	0
   375  00EA9F  1000               	dw	4096
   376  00EAA1  0000               	dw	0
   377  00EAA3  0000               	dw	0
   378  00EAA5  0001               	dw	1
   379  00EAA7  0000               	dw	0
   380  00EAA9  0010               	dw	16
   381  00EAAB  0000               	dw	0
   382  00EAAD  0100               	dw	256
   383  00EAAF  0000               	dw	0
   384  00EAB1  1000               	dw	4096
   385  00EAB3                     __end_of_hexpowers:
   386                           	opt stack 0
   387  00EAB3                     atan@coeff_a:
   388                           	opt stack 0
   389  00EAB3  3C06               	dw	15366
   390  00EAB5  4204               	dw	16900
   391  00EAB7  9F7D               	dw	40829
   392  00EAB9  426A               	dw	17002
   393  00EABB  905C               	dw	36956
   394  00EABD  4201               	dw	16897
   395  00EABF  4D60               	dw	19808
   396  00EAC1  40BB               	dw	16571
   397  00EAC3  EC51               	dw	60497
   398  00EAC5  3E47               	dw	15943
   399  00EAC7  8DDE               	dw	36318
   400  00EAC9  BB1F               	dw	47903
   401  00EACB                     __end_ofatan@coeff_a:
   402                           	opt stack 0
   403  00EACB                     sin@coeff_a:
   404                           	opt stack 0
   405  00EACB  F3EC               	dw	62444
   406  00EACD  484A               	dw	18506
   407  00EACF  9535               	dw	38197
   408  00EAD1  C795               	dw	51093
   409  00EAD3  C117               	dw	49431
   410  00EAD5  45DC               	dw	17884
   411  00EAD7  DBFD               	dw	56317
   412  00EAD9  C36D               	dw	50029
   413  00EADB  B372               	dw	45938
   414  00EADD  4033               	dw	16435
   415  00EADF                     __end_ofsin@coeff_a:
   416                           	opt stack 0
   417  00EADF                     atan@coeff_b:
   418                           	opt stack 0
   419  00EADF  3C06               	dw	15366
   420  00EAE1  4204               	dw	16900
   421  00EAE3  59C0               	dw	22976
   422  00EAE5  428B               	dw	17035
   423  00EAE7  0474               	dw	1140
   424  00EAE9  4244               	dw	16964
   425  00EAEB  9BF9               	dw	39929
   426  00EAED  414F               	dw	16719
   427  00EAEF  0000               	dw	0
   428  00EAF1  3F80               	dw	16256
   429  00EAF3                     __end_ofatan@coeff_b:
   430                           	opt stack 0
   431  00EAF3                     sin@coeff_b:
   432                           	opt stack 0
   433  00EAF3  342B               	dw	13355
   434  00EAF5  4801               	dw	18433
   435  00EAF7  9D7F               	dw	40319
   436  00EAF9  45B0               	dw	17840
   437  00EAFB  FFE7               	dw	65511
   438  00EAFD  42D9               	dw	17113
   439  00EAFF  0000               	dw	0
   440  00EB01  3F80               	dw	16256
   441  00EB03                     __end_ofsin@coeff_b:
   442                           	opt stack 0
   443  00EB03                     STR_121:
   444  00EB03  4C                 	db	76	;'L'
   445  00EB04  69                 	db	105	;'i'
   446  00EB05  73                 	db	115	;'s'
   447  00EB06  74                 	db	116	;'t'
   448  00EB07  20                 	db	32
   449  00EB08  6F                 	db	111	;'o'
   450  00EB09  66                 	db	102	;'f'
   451  00EB0A  20                 	db	32
   452  00EB0B  73                 	db	115	;'s'
   453  00EB0C  75                 	db	117	;'u'
   454  00EB0D  70                 	db	112	;'p'
   455  00EB0E  70                 	db	112	;'p'
   456  00EB0F  6F                 	db	111	;'o'
   457  00EB10  72                 	db	114	;'r'
   458  00EB11  74                 	db	116	;'t'
   459  00EB12  65                 	db	101	;'e'
   460  00EB13  64                 	db	100	;'d'
   461  00EB14  20                 	db	32
   462  00EB15  63                 	db	99	;'c'
   463  00EB16  6F                 	db	111	;'o'
   464  00EB17  6D                 	db	109	;'m'
   465  00EB18  6D                 	db	109	;'m'
   466  00EB19  61                 	db	97	;'a'
   467  00EB1A  6E                 	db	110	;'n'
   468  00EB1B  64                 	db	100	;'d'
   469  00EB1C  73                 	db	115	;'s'
   470  00EB1D  3A                 	db	58	;':'
   471  00EB1E  0A                 	db	10
   472  00EB1F  0D                 	db	13
   473  00EB20  44                 	db	68	;'D'
   474  00EB21  65                 	db	101	;'e'
   475  00EB22  76                 	db	118	;'v'
   476  00EB23  69                 	db	105	;'i'
   477  00EB24  63                 	db	99	;'c'
   478  00EB25  65                 	db	101	;'e'
   479  00EB26  20                 	db	32
   480  00EB27  43                 	db	67	;'C'
   481  00EB28  6F                 	db	111	;'o'
   482  00EB29  6D                 	db	109	;'m'
   483  00EB2A  6D                 	db	109	;'m'
   484  00EB2B  61                 	db	97	;'a'
   485  00EB2C  6E                 	db	110	;'n'
   486  00EB2D  64                 	db	100	;'d'
   487  00EB2E  73                 	db	115	;'s'
   488  00EB2F  3A                 	db	58	;':'
   489  00EB30  0A                 	db	10
   490  00EB31  0D                 	db	13
   491  00EB32  20                 	db	32
   492  00EB33  20                 	db	32
   493  00EB34  20                 	db	32
   494  00EB35  52                 	db	82	;'R'
   495  00EB36  65                 	db	101	;'e'
   496  00EB37  73                 	db	115	;'s'
   497  00EB38  65                 	db	101	;'e'
   498  00EB39  74                 	db	116	;'t'
   499  00EB3A  3A                 	db	58	;':'
   500  00EB3B  20                 	db	32
   501  00EB3C  43                 	db	67	;'C'
   502  00EB3D  6C                 	db	108	;'l'
   503  00EB3E  65                 	db	101	;'e'
   504  00EB3F  61                 	db	97	;'a'
   505  00EB40  72                 	db	114	;'r'
   506  00EB41  73                 	db	115	;'s'
   507  00EB42  20                 	db	32
   508  00EB43  74                 	db	116	;'t'
   509  00EB44  68                 	db	104	;'h'
   510  00EB45  65                 	db	101	;'e'
   511  00EB46  20                 	db	32
   512  00EB47  74                 	db	116	;'t'
   513  00EB48  65                 	db	101	;'e'
   514  00EB49  72                 	db	114	;'r'
   515  00EB4A  6D                 	db	109	;'m'
   516  00EB4B  69                 	db	105	;'i'
   517  00EB4C  6E                 	db	110	;'n'
   518  00EB4D  61                 	db	97	;'a'
   519  00EB4E  6C                 	db	108	;'l'
   520  00EB4F  20                 	db	32
   521  00EB50  61                 	db	97	;'a'
   522  00EB51  6E                 	db	110	;'n'
   523  00EB52  64                 	db	100	;'d'
   524  00EB53  20                 	db	32
   525  00EB54  72                 	db	114	;'r'
   526  00EB55  65                 	db	101	;'e'
   527  00EB56  73                 	db	115	;'s'
   528  00EB57  65                 	db	101	;'e'
   529  00EB58  74                 	db	116	;'t'
   530  00EB59  73                 	db	115	;'s'
   531  00EB5A  20                 	db	32
   532  00EB5B  74                 	db	116	;'t'
   533  00EB5C  68                 	db	104	;'h'
   534  00EB5D  65                 	db	101	;'e'
   535  00EB5E  20                 	db	32
   536  00EB5F  6D                 	db	109	;'m'
   537  00EB60  69                 	db	105	;'i'
   538  00EB61  63                 	db	99	;'c'
   539  00EB62  72                 	db	114	;'r'
   540  00EB63  6F                 	db	111	;'o'
   541  00EB64  0A                 	db	10
   542  00EB65  0D                 	db	13
   543  00EB66  20                 	db	32
   544  00EB67  20                 	db	32
   545  00EB68  20                 	db	32
   546  00EB69  43                 	db	67	;'C'
   547  00EB6A  6C                 	db	108	;'l'
   548  00EB6B  65                 	db	101	;'e'
   549  00EB6C  61                 	db	97	;'a'
   550  00EB6D  72                 	db	114	;'r'
   551  00EB6E  3A                 	db	58	;':'
   552  00EB6F  20                 	db	32
   553  00EB70  43                 	db	67	;'C'
   554  00EB71  6C                 	db	108	;'l'
   555  00EB72  65                 	db	101	;'e'
   556  00EB73  61                 	db	97	;'a'
   557  00EB74  72                 	db	114	;'r'
   558  00EB75  73                 	db	115	;'s'
   559  00EB76  20                 	db	32
   560  00EB77  74                 	db	116	;'t'
   561  00EB78  68                 	db	104	;'h'
   562  00EB79  65                 	db	101	;'e'
   563  00EB7A  20                 	db	32
   564  00EB7B  74                 	db	116	;'t'
   565  00EB7C  65                 	db	101	;'e'
   566  00EB7D  72                 	db	114	;'r'
   567  00EB7E  6D                 	db	109	;'m'
   568  00EB7F  69                 	db	105	;'i'
   569  00EB80  6E                 	db	110	;'n'
   570  00EB81  61                 	db	97	;'a'
   571  00EB82  6C                 	db	108	;'l'
   572  00EB83  20                 	db	32
   573  00EB84  62                 	db	98	;'b'
   574  00EB85  75                 	db	117	;'u'
   575  00EB86  74                 	db	116	;'t'
   576  00EB87  20                 	db	32
   577  00EB88  64                 	db	100	;'d'
   578  00EB89  6F                 	db	111	;'o'
   579  00EB8A  65                 	db	101	;'e'
   580  00EB8B  73                 	db	115	;'s'
   581  00EB8C  6E                 	db	110	;'n'
   582  00EB8D  27                 	db	39
   583  00EB8E  74                 	db	116	;'t'
   584  00EB8F  20                 	db	32
   585  00EB90  72                 	db	114	;'r'
   586  00EB91  65                 	db	101	;'e'
   587  00EB92  73                 	db	115	;'s'
   588  00EB93  65                 	db	101	;'e'
   589  00EB94  74                 	db	116	;'t'
   590  00EB95  20                 	db	32
   591  00EB96  74                 	db	116	;'t'
   592  00EB97  68                 	db	104	;'h'
   593  00EB98  65                 	db	101	;'e'
   594  00EB99  20                 	db	32
   595  00EB9A  6D                 	db	109	;'m'
   596  00EB9B  69                 	db	105	;'i'
   597  00EB9C  63                 	db	99	;'c'
   598  00EB9D  72                 	db	114	;'r'
   599  00EB9E  6F                 	db	111	;'o'
   600  00EB9F  0A                 	db	10
   601  00EBA0  0D                 	db	13
   602  00EBA1  20                 	db	32
   603  00EBA2  20                 	db	32
   604  00EBA3  20                 	db	32
   605  00EBA4  43                 	db	67	;'C'
   606  00EBA5  61                 	db	97	;'a'
   607  00EBA6  75                 	db	117	;'u'
   608  00EBA7  73                 	db	115	;'s'
   609  00EBA8  65                 	db	101	;'e'
   610  00EBA9  20                 	db	32
   611  00EBAA  6F                 	db	111	;'o'
   612  00EBAB  66                 	db	102	;'f'
   613  00EBAC  20                 	db	32
   614  00EBAD  52                 	db	82	;'R'
   615  00EBAE  65                 	db	101	;'e'
   616  00EBAF  73                 	db	115	;'s'
   617  00EBB0  65                 	db	101	;'e'
   618  00EBB1  74                 	db	116	;'t'
   619  00EBB2  3F                 	db	63	;'?'
   620  00EBB3  3A                 	db	58	;':'
   621  00EBB4  20                 	db	32
   622  00EBB5  52                 	db	82	;'R'
   623  00EBB6  65                 	db	101	;'e'
   624  00EBB7  74                 	db	116	;'t'
   625  00EBB8  75                 	db	117	;'u'
   626  00EBB9  72                 	db	114	;'r'
   627  00EBBA  6E                 	db	110	;'n'
   628  00EBBB  73                 	db	115	;'s'
   629  00EBBC  20                 	db	32
   630  00EBBD  74                 	db	116	;'t'
   631  00EBBE  68                 	db	104	;'h'
   632  00EBBF  65                 	db	101	;'e'
   633  00EBC0  20                 	db	32
   634  00EBC1  63                 	db	99	;'c'
   635  00EBC2  61                 	db	97	;'a'
   636  00EBC3  75                 	db	117	;'u'
   637  00EBC4  73                 	db	115	;'s'
   638  00EBC5  65                 	db	101	;'e'
   639  00EBC6  20                 	db	32
   640  00EBC7  6F                 	db	111	;'o'
   641  00EBC8  66                 	db	102	;'f'
   642  00EBC9  20                 	db	32
   643  00EBCA  74                 	db	116	;'t'
   644  00EBCB  68                 	db	104	;'h'
   645  00EBCC  65                 	db	101	;'e'
   646  00EBCD  20                 	db	32
   647  00EBCE  6D                 	db	109	;'m'
   648  00EBCF  6F                 	db	111	;'o'
   649  00EBD0  73                 	db	115	;'s'
   650  00EBD1  74                 	db	116	;'t'
   651  00EBD2  20                 	db	32
   652  00EBD3  72                 	db	114	;'r'
   653  00EBD4  65                 	db	101	;'e'
   654  00EBD5  63                 	db	99	;'c'
   655  00EBD6  65                 	db	101	;'e'
   656  00EBD7  6E                 	db	110	;'n'
   657  00EBD8  74                 	db	116	;'t'
   658  00EBD9  20                 	db	32
   659  00EBDA  64                 	db	100	;'d'
   660  00EBDB  65                 	db	101	;'e'
   661  00EBDC  76                 	db	118	;'v'
   662  00EBDD  69                 	db	105	;'i'
   663  00EBDE  63                 	db	99	;'c'
   664  00EBDF  65                 	db	101	;'e'
   665  00EBE0  20                 	db	32
   666  00EBE1  72                 	db	114	;'r'
   667  00EBE2  65                 	db	101	;'e'
   668  00EBE3  73                 	db	115	;'s'
   669  00EBE4  65                 	db	101	;'e'
   670  00EBE5  74                 	db	116	;'t'
   671  00EBE6  0A                 	db	10
   672  00EBE7  0D                 	db	13
   673  00EBE8  20                 	db	32
   674  00EBE9  20                 	db	32
   675  00EBEA  20                 	db	32
   676  00EBEB  2A                 	db	42
   677  00EBEC  49                 	db	73	;'I'
   678  00EBED  44                 	db	68	;'D'
   679  00EBEE  4E                 	db	78	;'N'
   680  00EBEF  3F                 	db	63	;'?'
   681  00EBF0  3A                 	db	58	;':'
   682  00EBF1  20                 	db	32
   683  00EBF2  52                 	db	82	;'R'
   684  00EBF3  65                 	db	101	;'e'
   685  00EBF4  74                 	db	116	;'t'
   686  00EBF5  75                 	db	117	;'u'
   687  00EBF6  72                 	db	114	;'r'
   688  00EBF7  6E                 	db	110	;'n'
   689  00EBF8  73                 	db	115	;'s'
   690  00EBF9  20                 	db	32
   691  00EBFA  64                 	db	100	;'d'
   692  00EBFB  65                 	db	101	;'e'
   693  00EBFC  76                 	db	118	;'v'
   694  00EBFD  69                 	db	105	;'i'
   695  00EBFE  63                 	db	99	;'c'
   696  00EBFF  65                 	db	101	;'e'
   697  00EC00  20                 	db	32
   698  00EC01  69                 	db	105	;'i'
   699  00EC02  64                 	db	100	;'d'
   700  00EC03  65                 	db	101	;'e'
   701  00EC04  6E                 	db	110	;'n'
   702  00EC05  74                 	db	116	;'t'
   703  00EC06  69                 	db	105	;'i'
   704  00EC07  66                 	db	102	;'f'
   705  00EC08  69                 	db	105	;'i'
   706  00EC09  63                 	db	99	;'c'
   707  00EC0A  61                 	db	97	;'a'
   708  00EC0B  74                 	db	116	;'t'
   709  00EC0C  69                 	db	105	;'i'
   710  00EC0D  6F                 	db	111	;'o'
   711  00EC0E  6E                 	db	110	;'n'
   712  00EC0F  20                 	db	32
   713  00EC10  73                 	db	115	;'s'
   714  00EC11  74                 	db	116	;'t'
   715  00EC12  72                 	db	114	;'r'
   716  00EC13  69                 	db	105	;'i'
   717  00EC14  6E                 	db	110	;'n'
   718  00EC15  67                 	db	103	;'g'
   719  00EC16  0A                 	db	10
   720  00EC17  0D                 	db	13
   721  00EC18  20                 	db	32
   722  00EC19  20                 	db	32
   723  00EC1A  20                 	db	32
   724  00EC1B  44                 	db	68	;'D'
   725  00EC1C  65                 	db	101	;'e'
   726  00EC1D  76                 	db	118	;'v'
   727  00EC1E  69                 	db	105	;'i'
   728  00EC1F  63                 	db	99	;'c'
   729  00EC20  65                 	db	101	;'e'
   730  00EC21  20                 	db	32
   731  00EC22  4F                 	db	79	;'O'
   732  00EC23  6E                 	db	110	;'n'
   733  00EC24  20                 	db	32
   734  00EC25  54                 	db	84	;'T'
   735  00EC26  69                 	db	105	;'i'
   736  00EC27  6D                 	db	109	;'m'
   737  00EC28  65                 	db	101	;'e'
   738  00EC29  3F                 	db	63	;'?'
   739  00EC2A  3A                 	db	58	;':'
   740  00EC2B  20                 	db	32
   741  00EC2C  52                 	db	82	;'R'
   742  00EC2D  65                 	db	101	;'e'
   743  00EC2E  74                 	db	116	;'t'
   744  00EC2F  75                 	db	117	;'u'
   745  00EC30  72                 	db	114	;'r'
   746  00EC31  6E                 	db	110	;'n'
   747  00EC32  73                 	db	115	;'s'
   748  00EC33  20                 	db	32
   749  00EC34  64                 	db	100	;'d'
   750  00EC35  65                 	db	101	;'e'
   751  00EC36  76                 	db	118	;'v'
   752  00EC37  69                 	db	105	;'i'
   753  00EC38  63                 	db	99	;'c'
   754  00EC39  65                 	db	101	;'e'
   755  00EC3A  20                 	db	32
   756  00EC3B  6F                 	db	111	;'o'
   757  00EC3C  6E                 	db	110	;'n'
   758  00EC3D  20                 	db	32
   759  00EC3E  74                 	db	116	;'t'
   760  00EC3F  69                 	db	105	;'i'
   761  00EC40  6D                 	db	109	;'m'
   762  00EC41  65                 	db	101	;'e'
   763  00EC42  20                 	db	32
   764  00EC43  73                 	db	115	;'s'
   765  00EC44  69                 	db	105	;'i'
   766  00EC45  6E                 	db	110	;'n'
   767  00EC46  63                 	db	99	;'c'
   768  00EC47  65                 	db	101	;'e'
   769  00EC48  20                 	db	32
   770  00EC49  6C                 	db	108	;'l'
   771  00EC4A  61                 	db	97	;'a'
   772  00EC4B  73                 	db	115	;'s'
   773  00EC4C  74                 	db	116	;'t'
   774  00EC4D  20                 	db	32
   775  00EC4E  64                 	db	100	;'d'
   776  00EC4F  65                 	db	101	;'e'
   777  00EC50  76                 	db	118	;'v'
   778  00EC51  69                 	db	105	;'i'
   779  00EC52  63                 	db	99	;'c'
   780  00EC53  65                 	db	101	;'e'
   781  00EC54  20                 	db	32
   782  00EC55  72                 	db	114	;'r'
   783  00EC56  65                 	db	101	;'e'
   784  00EC57  73                 	db	115	;'s'
   785  00EC58  65                 	db	101	;'e'
   786  00EC59  74                 	db	116	;'t'
   787  00EC5A  0A                 	db	10
   788  00EC5B  0D                 	db	13
   789  00EC5C  20                 	db	32
   790  00EC5D  20                 	db	32
   791  00EC5E  20                 	db	32
   792  00EC5F  44                 	db	68	;'D'
   793  00EC60  65                 	db	101	;'e'
   794  00EC61  76                 	db	118	;'v'
   795  00EC62  69                 	db	105	;'i'
   796  00EC63  63                 	db	99	;'c'
   797  00EC64  65                 	db	101	;'e'
   798  00EC65  20                 	db	32
   799  00EC66  49                 	db	73	;'I'
   800  00EC67  44                 	db	68	;'D'
   801  00EC68  3F                 	db	63	;'?'
   802  00EC69  3A                 	db	58	;':'
   803  00EC6A  20                 	db	32
   804  00EC6B  52                 	db	82	;'R'
   805  00EC6C  65                 	db	101	;'e'
   806  00EC6D  74                 	db	116	;'t'
   807  00EC6E  75                 	db	117	;'u'
   808  00EC6F  72                 	db	114	;'r'
   809  00EC70  6E                 	db	110	;'n'
   810  00EC71  73                 	db	115	;'s'
   811  00EC72  20                 	db	32
   812  00EC73  64                 	db	100	;'d'
   813  00EC74  65                 	db	101	;'e'
   814  00EC75  76                 	db	118	;'v'
   815  00EC76  69                 	db	105	;'i'
   816  00EC77  63                 	db	99	;'c'
   817  00EC78  65                 	db	101	;'e'
   818  00EC79  20                 	db	32
   819  00EC7A  49                 	db	73	;'I'
   820  00EC7B  44                 	db	68	;'D'
   821  00EC7C  20                 	db	32
   822  00EC7D  61                 	db	97	;'a'
   823  00EC7E  73                 	db	115	;'s'
   824  00EC7F  20                 	db	32
   825  00EC80  70                 	db	112	;'p'
   826  00EC81  72                 	db	114	;'r'
   827  00EC82  65                 	db	101	;'e'
   828  00EC83  2D                 	db	45
   829  00EC84  70                 	db	112	;'p'
   830  00EC85  72                 	db	114	;'r'
   831  00EC86  6F                 	db	111	;'o'
   832  00EC87  67                 	db	103	;'g'
   833  00EC88  72                 	db	114	;'r'
   834  00EC89  61                 	db	97	;'a'
   835  00EC8A  6D                 	db	109	;'m'
   836  00EC8B  6D                 	db	109	;'m'
   837  00EC8C  65                 	db	101	;'e'
   838  00EC8D  64                 	db	100	;'d'
   839  00EC8E  20                 	db	32
   840  00EC8F  69                 	db	105	;'i'
   841  00EC90  6E                 	db	110	;'n'
   842  00EC91  20                 	db	32
   843  00EC92  66                 	db	102	;'f'
   844  00EC93  6C                 	db	108	;'l'
   845  00EC94  61                 	db	97	;'a'
   846  00EC95  73                 	db	115	;'s'
   847  00EC96  68                 	db	104	;'h'
   848  00EC97  20                 	db	32
   849  00EC98  6D                 	db	109	;'m'
   850  00EC99  65                 	db	101	;'e'
   851  00EC9A  6D                 	db	109	;'m'
   852  00EC9B  6F                 	db	111	;'o'
   853  00EC9C  72                 	db	114	;'r'
   854  00EC9D  79                 	db	121	;'y'
   855  00EC9E  0A                 	db	10
   856  00EC9F  0D                 	db	13
   857  00ECA0  20                 	db	32
   858  00ECA1  20                 	db	32
   859  00ECA2  20                 	db	32
   860  00ECA3  52                 	db	82	;'R'
   861  00ECA4  65                 	db	101	;'e'
   862  00ECA5  76                 	db	118	;'v'
   863  00ECA6  69                 	db	105	;'i'
   864  00ECA7  73                 	db	115	;'s'
   865  00ECA8  69                 	db	105	;'i'
   866  00ECA9  6F                 	db	111	;'o'
   867  00ECAA  6E                 	db	110	;'n'
   868  00ECAB  20                 	db	32
   869  00ECAC  49                 	db	73	;'I'
   870  00ECAD  44                 	db	68	;'D'
   871  00ECAE  3F                 	db	63	;'?'
   872  00ECAF  3A                 	db	58	;':'
   873  00ECB0  20                 	db	32
   874  00ECB1  52                 	db	82	;'R'
   875  00ECB2  65                 	db	101	;'e'
   876  00ECB3  74                 	db	116	;'t'
   877  00ECB4  75                 	db	117	;'u'
   878  00ECB5  72                 	db	114	;'r'
   879  00ECB6  6E                 	db	110	;'n'
   880  00ECB7  73                 	db	115	;'s'
   881  00ECB8  20                 	db	32
   882  00ECB9  64                 	db	100	;'d'
   883  00ECBA  65                 	db	101	;'e'
   884  00ECBB  76                 	db	118	;'v'
   885  00ECBC  69                 	db	105	;'i'
   886  00ECBD  63                 	db	99	;'c'
   887  00ECBE  65                 	db	101	;'e'
   888  00ECBF  20                 	db	32
   889  00ECC0  73                 	db	115	;'s'
   890  00ECC1  69                 	db	105	;'i'
   891  00ECC2  6C                 	db	108	;'l'
   892  00ECC3  69                 	db	105	;'i'
   893  00ECC4  63                 	db	99	;'c'
   894  00ECC5  6F                 	db	111	;'o'
   895  00ECC6  6E                 	db	110	;'n'
   896  00ECC7  20                 	db	32
   897  00ECC8  72                 	db	114	;'r'
   898  00ECC9  65                 	db	101	;'e'
   899  00ECCA  76                 	db	118	;'v'
   900  00ECCB  69                 	db	105	;'i'
   901  00ECCC  73                 	db	115	;'s'
   902  00ECCD  69                 	db	105	;'i'
   903  00ECCE  6F                 	db	111	;'o'
   904  00ECCF  6E                 	db	110	;'n'
   905  00ECD0  20                 	db	32
   906  00ECD1  49                 	db	73	;'I'
   907  00ECD2  44                 	db	68	;'D'
   908  00ECD3  20                 	db	32
   909  00ECD4  61                 	db	97	;'a'
   910  00ECD5  73                 	db	115	;'s'
   911  00ECD6  20                 	db	32
   912  00ECD7  70                 	db	112	;'p'
   913  00ECD8  72                 	db	114	;'r'
   914  00ECD9  65                 	db	101	;'e'
   915  00ECDA  2D                 	db	45
   916  00ECDB  70                 	db	112	;'p'
   917  00ECDC  72                 	db	114	;'r'
   918  00ECDD  6F                 	db	111	;'o'
   919  00ECDE  67                 	db	103	;'g'
   920  00ECDF  72                 	db	114	;'r'
   921  00ECE0  61                 	db	97	;'a'
   922  00ECE1  6D                 	db	109	;'m'
   923  00ECE2  6D                 	db	109	;'m'
   924  00ECE3  65                 	db	101	;'e'
   925  00ECE4  64                 	db	100	;'d'
   926  00ECE5  20                 	db	32
   927  00ECE6  69                 	db	105	;'i'
   928  00ECE7  6E                 	db	110	;'n'
   929  00ECE8  20                 	db	32
   930  00ECE9  66                 	db	102	;'f'
   931  00ECEA  6C                 	db	108	;'l'
   932  00ECEB  61                 	db	97	;'a'
   933  00ECEC  73                 	db	115	;'s'
   934  00ECED  68                 	db	104	;'h'
   935  00ECEE  20                 	db	32
   936  00ECEF  6D                 	db	109	;'m'
   937  00ECF0  65                 	db	101	;'e'
   938  00ECF1  6D                 	db	109	;'m'
   939  00ECF2  6F                 	db	111	;'o'
   940  00ECF3  72                 	db	114	;'r'
   941  00ECF4  79                 	db	121	;'y'
   942  00ECF5  0A                 	db	10
   943  00ECF6  0D                 	db	13
   944  00ECF7  20                 	db	32
   945  00ECF8  20                 	db	32
   946  00ECF9  20                 	db	32
   947  00ECFA  55                 	db	85	;'U'
   948  00ECFB  73                 	db	115	;'s'
   949  00ECFC  65                 	db	101	;'e'
   950  00ECFD  72                 	db	114	;'r'
   951  00ECFE  20                 	db	32
   952  00ECFF  49                 	db	73	;'I'
   953  00ED00  44                 	db	68	;'D'
   954  00ED01  73                 	db	115	;'s'
   955  00ED02  3F                 	db	63	;'?'
   956  00ED03  3A                 	db	58	;':'
   957  00ED04  20                 	db	32
   958  00ED05  52                 	db	82	;'R'
   959  00ED06  65                 	db	101	;'e'
   960  00ED07  74                 	db	116	;'t'
   961  00ED08  75                 	db	117	;'u'
   962  00ED09  72                 	db	114	;'r'
   963  00ED0A  6E                 	db	110	;'n'
   964  00ED0B  73                 	db	115	;'s'
   965  00ED0C  20                 	db	32
   966  00ED0D  61                 	db	97	;'a'
   967  00ED0E  20                 	db	32
   968  00ED0F  6C                 	db	108	;'l'
   969  00ED10  69                 	db	105	;'i'
   970  00ED11  73                 	db	115	;'s'
   971  00ED12  74                 	db	116	;'t'
   972  00ED13  20                 	db	32
   973  00ED14  6F                 	db	111	;'o'
   974  00ED15  66                 	db	102	;'f'
   975  00ED16  20                 	db	32
   976  00ED17  75                 	db	117	;'u'
   977  00ED18  73                 	db	115	;'s'
   978  00ED19  65                 	db	101	;'e'
   979  00ED1A  72                 	db	114	;'r'
   980  00ED1B  20                 	db	32
   981  00ED1C  49                 	db	73	;'I'
   982  00ED1D  44                 	db	68	;'D'
   983  00ED1E  73                 	db	115	;'s'
   984  00ED1F  20                 	db	32
   985  00ED20  28                 	db	40
   986  00ED21  64                 	db	100	;'d'
   987  00ED22  69                 	db	105	;'i'
   988  00ED23  73                 	db	115	;'s'
   989  00ED24  70                 	db	112	;'p'
   990  00ED25  6C                 	db	108	;'l'
   991  00ED26  61                 	db	97	;'a'
   992  00ED27  79                 	db	121	;'y'
   993  00ED28  65                 	db	101	;'e'
   994  00ED29  64                 	db	100	;'d'
   995  00ED2A  20                 	db	32
   996  00ED2B  69                 	db	105	;'i'
   997  00ED2C  6E                 	db	110	;'n'
   998  00ED2D  20                 	db	32
   999  00ED2E  68                 	db	104	;'h'
  1000  00ED2F  65                 	db	101	;'e'
  1001  00ED30  78                 	db	120	;'x'
  1002  00ED31  29                 	db	41
  1003  00ED32  20                 	db	32
  1004  00ED33  61                 	db	97	;'a'
  1005  00ED34  73                 	db	115	;'s'
  1006  00ED35  20                 	db	32
  1007  00ED36  73                 	db	115	;'s'
  1008  00ED37  74                 	db	116	;'t'
  1009  00ED38  6F                 	db	111	;'o'
  1010  00ED39  72                 	db	114	;'r'
  1011  00ED3A  65                 	db	101	;'e'
  1012  00ED3B  64                 	db	100	;'d'
  1013  00ED3C  20                 	db	32
  1014  00ED3D  69                 	db	105	;'i'
  1015  00ED3E  6E                 	db	110	;'n'
  1016  00ED3F  20                 	db	32
  1017  00ED40  66                 	db	102	;'f'
  1018  00ED41  6C                 	db	108	;'l'
  1019  00ED42  61                 	db	97	;'a'
  1020  00ED43  73                 	db	115	;'s'
  1021  00ED44  68                 	db	104	;'h'
  1022  00ED45  20                 	db	32
  1023  00ED46  6D                 	db	109	;'m'
  1024  00ED47  65                 	db	101	;'e'
  1025  00ED48  6D                 	db	109	;'m'
  1026  00ED49  6F                 	db	111	;'o'
  1027  00ED4A  72                 	db	114	;'r'
  1028  00ED4B  79                 	db	121	;'y'
  1029  00ED4C  0A                 	db	10
  1030  00ED4D  0D                 	db	13
  1031  00ED4E  20                 	db	32
  1032  00ED4F  20                 	db	32
  1033  00ED50  20                 	db	32
  1034  00ED51  41                 	db	65	;'A'
  1035  00ED52  44                 	db	68	;'D'
  1036  00ED53  43                 	db	67	;'C'
  1037  00ED54  20                 	db	32
  1038  00ED55  45                 	db	69	;'E'
  1039  00ED56  72                 	db	114	;'r'
  1040  00ED57  72                 	db	114	;'r'
  1041  00ED58  6F                 	db	111	;'o'
  1042  00ED59  72                 	db	114	;'r'
  1043  00ED5A  3F                 	db	63	;'?'
  1044  00ED5B  3A                 	db	58	;':'
  1045  00ED5C  20                 	db	32
  1046  00ED5D  52                 	db	82	;'R'
  1047  00ED5E  65                 	db	101	;'e'
  1048  00ED5F  74                 	db	116	;'t'
  1049  00ED60  75                 	db	117	;'u'
  1050  00ED61  72                 	db	114	;'r'
  1051  00ED62  6E                 	db	110	;'n'
  1052  00ED63  73                 	db	115	;'s'
  1053  00ED64  20                 	db	32
  1054  00ED65  74                 	db	116	;'t'
  1055  00ED66  68                 	db	104	;'h'
  1056  00ED67  65                 	db	101	;'e'
  1057  00ED68  20                 	db	32
  1058  00ED69  63                 	db	99	;'c'
  1059  00ED6A  61                 	db	97	;'a'
  1060  00ED6B  75                 	db	117	;'u'
  1061  00ED6C  73                 	db	115	;'s'
  1062  00ED6D  65                 	db	101	;'e'
  1063  00ED6E  20                 	db	32
  1064  00ED6F  6F                 	db	111	;'o'
  1065  00ED70  66                 	db	102	;'f'
  1066  00ED71  20                 	db	32
  1067  00ED72  61                 	db	97	;'a'
  1068  00ED73  6E                 	db	110	;'n'
  1069  00ED74  20                 	db	32
  1070  00ED75  41                 	db	65	;'A'
  1071  00ED76  44                 	db	68	;'D'
  1072  00ED77  43                 	db	67	;'C'
  1073  00ED78  20                 	db	32
  1074  00ED79  65                 	db	101	;'e'
  1075  00ED7A  72                 	db	114	;'r'
  1076  00ED7B  72                 	db	114	;'r'
  1077  00ED7C  6F                 	db	111	;'o'
  1078  00ED7D  72                 	db	114	;'r'
  1079  00ED7E  20                 	db	32
  1080  00ED7F  69                 	db	105	;'i'
  1081  00ED80  66                 	db	102	;'f'
  1082  00ED81  20                 	db	32
  1083  00ED82  61                 	db	97	;'a'
  1084  00ED83  6E                 	db	110	;'n'
  1085  00ED84  20                 	db	32
  1086  00ED85  65                 	db	101	;'e'
  1087  00ED86  72                 	db	114	;'r'
  1088  00ED87  72                 	db	114	;'r'
  1089  00ED88  6F                 	db	111	;'o'
  1090  00ED89  72                 	db	114	;'r'
  1091  00ED8A  20                 	db	32
  1092  00ED8B  6F                 	db	111	;'o'
  1093  00ED8C  63                 	db	99	;'c'
  1094  00ED8D  63                 	db	99	;'c'
  1095  00ED8E  75                 	db	117	;'u'
  1096  00ED8F  72                 	db	114	;'r'
  1097  00ED90  72                 	db	114	;'r'
  1098  00ED91  65                 	db	101	;'e'
  1099  00ED92  64                 	db	100	;'d'
  1100  00ED93  0A                 	db	10
  1101  00ED94  0D                 	db	13
  1102  00ED95  20                 	db	32
  1103  00ED96  20                 	db	32
  1104  00ED97  20                 	db	32
  1105  00ED98  43                 	db	67	;'C'
  1106  00ED99  6C                 	db	108	;'l'
  1107  00ED9A  65                 	db	101	;'e'
  1108  00ED9B  61                 	db	97	;'a'
  1109  00ED9C  72                 	db	114	;'r'
  1110  00ED9D  20                 	db	32
  1111  00ED9E  41                 	db	65	;'A'
  1112  00ED9F  44                 	db	68	;'D'
  1113  00EDA0  43                 	db	67	;'C'
  1114  00EDA1  20                 	db	32
  1115  00EDA2  45                 	db	69	;'E'
  1116  00EDA3  72                 	db	114	;'r'
  1117  00EDA4  72                 	db	114	;'r'
  1118  00EDA5  6F                 	db	111	;'o'
  1119  00EDA6  72                 	db	114	;'r'
  1120  00EDA7  3A                 	db	58	;':'
  1121  00EDA8  20                 	db	32
  1122  00EDA9  43                 	db	67	;'C'
  1123  00EDAA  6C                 	db	108	;'l'
  1124  00EDAB  65                 	db	101	;'e'
  1125  00EDAC  61                 	db	97	;'a'
  1126  00EDAD  72                 	db	114	;'r'
  1127  00EDAE  73                 	db	115	;'s'
  1128  00EDAF  20                 	db	32
  1129  00EDB0  74                 	db	116	;'t'
  1130  00EDB1  68                 	db	104	;'h'
  1131  00EDB2  65                 	db	101	;'e'
  1132  00EDB3  20                 	db	32
  1133  00EDB4  41                 	db	65	;'A'
  1134  00EDB5  44                 	db	68	;'D'
  1135  00EDB6  43                 	db	67	;'C'
  1136  00EDB7  20                 	db	32
  1137  00EDB8  65                 	db	101	;'e'
  1138  00EDB9  72                 	db	114	;'r'
  1139  00EDBA  72                 	db	114	;'r'
  1140  00EDBB  6F                 	db	111	;'o'
  1141  00EDBC  72                 	db	114	;'r'
  1142  00EDBD  20                 	db	32
  1143  00EDBE  61                 	db	97	;'a'
  1144  00EDBF  6E                 	db	110	;'n'
  1145  00EDC0  64                 	db	100	;'d'
  1146  00EDC1  20                 	db	32
  1147  00EDC2  72                 	db	114	;'r'
  1148  00EDC3  65                 	db	101	;'e'
  1149  00EDC4  73                 	db	115	;'s'
  1150  00EDC5  75                 	db	117	;'u'
  1151  00EDC6  6D                 	db	109	;'m'
  1152  00EDC7  65                 	db	101	;'e'
  1153  00EDC8  73                 	db	115	;'s'
  1154  00EDC9  20                 	db	32
  1155  00EDCA  41                 	db	65	;'A'
  1156  00EDCB  44                 	db	68	;'D'
  1157  00EDCC  43                 	db	67	;'C'
  1158  00EDCD  20                 	db	32
  1159  00EDCE  63                 	db	99	;'c'
  1160  00EDCF  6F                 	db	111	;'o'
  1161  00EDD0  6E                 	db	110	;'n'
  1162  00EDD1  76                 	db	118	;'v'
  1163  00EDD2  65                 	db	101	;'e'
  1164  00EDD3  72                 	db	114	;'r'
  1165  00EDD4  73                 	db	115	;'s'
  1166  00EDD5  69                 	db	105	;'i'
  1167  00EDD6  6F                 	db	111	;'o'
  1168  00EDD7  6E                 	db	110	;'n'
  1169  00EDD8  73                 	db	115	;'s'
  1170  00EDD9  0A                 	db	10
  1171  00EDDA  0D                 	db	13
  1172  00EDDB  20                 	db	32
  1173  00EDDC  20                 	db	32
  1174  00EDDD  20                 	db	32
  1175  00EDDE  56                 	db	86	;'V'
  1176  00EDDF  43                 	db	67	;'C'
  1177  00EDE0  43                 	db	67	;'C'
  1178  00EDE1  20                 	db	32
  1179  00EDE2  4F                 	db	79	;'O'
  1180  00EDE3  76                 	db	118	;'v'
  1181  00EDE4  65                 	db	101	;'e'
  1182  00EDE5  72                 	db	114	;'r'
  1183  00EDE6  76                 	db	118	;'v'
  1184  00EDE7  6F                 	db	111	;'o'
  1185  00EDE8  6C                 	db	108	;'l'
  1186  00EDE9  74                 	db	116	;'t'
  1187  00EDEA  61                 	db	97	;'a'
  1188  00EDEB  67                 	db	103	;'g'
  1189  00EDEC  65                 	db	101	;'e'
  1190  00EDED  3F                 	db	63	;'?'
  1191  00EDEE  3A                 	db	58	;':'
  1192  00EDEF  20                 	db	32
  1193  00EDF0  53                 	db	83	;'S'
  1194  00EDF1  74                 	db	116	;'t'
  1195  00EDF2  61                 	db	97	;'a'
  1196  00EDF3  74                 	db	116	;'t'
  1197  00EDF4  65                 	db	101	;'e'
  1198  00EDF5  73                 	db	115	;'s'
  1199  00EDF6  20                 	db	32
  1200  00EDF7  69                 	db	105	;'i'
  1201  00EDF8  66                 	db	102	;'f'
  1202  00EDF9  20                 	db	32
  1203  00EDFA  61                 	db	97	;'a'
  1204  00EDFB  20                 	db	32
  1205  00EDFC  56                 	db	86	;'V'
  1206  00EDFD  43                 	db	67	;'C'
  1207  00EDFE  43                 	db	67	;'C'
  1208  00EDFF  20                 	db	32
  1209  00EE00  6F                 	db	111	;'o'
  1210  00EE01  76                 	db	118	;'v'
  1211  00EE02  65                 	db	101	;'e'
  1212  00EE03  72                 	db	114	;'r'
  1213  00EE04  76                 	db	118	;'v'
  1214  00EE05  6F                 	db	111	;'o'
  1215  00EE06  6C                 	db	108	;'l'
  1216  00EE07  74                 	db	116	;'t'
  1217  00EE08  61                 	db	97	;'a'
  1218  00EE09  67                 	db	103	;'g'
  1219  00EE0A  65                 	db	101	;'e'
  1220  00EE0B  20                 	db	32
  1221  00EE0C  63                 	db	99	;'c'
  1222  00EE0D  6F                 	db	111	;'o'
  1223  00EE0E  6E                 	db	110	;'n'
  1224  00EE0F  64                 	db	100	;'d'
  1225  00EE10  69                 	db	105	;'i'
  1226  00EE11  74                 	db	116	;'t'
  1227  00EE12  69                 	db	105	;'i'
  1228  00EE13  6F                 	db	111	;'o'
  1229  00EE14  6E                 	db	110	;'n'
  1230  00EE15  20                 	db	32
  1231  00EE16  68                 	db	104	;'h'
  1232  00EE17  61                 	db	97	;'a'
  1233  00EE18  73                 	db	115	;'s'
  1234  00EE19  20                 	db	32
  1235  00EE1A  6F                 	db	111	;'o'
  1236  00EE1B  63                 	db	99	;'c'
  1237  00EE1C  63                 	db	99	;'c'
  1238  00EE1D  75                 	db	117	;'u'
  1239  00EE1E  72                 	db	114	;'r'
  1240  00EE1F  72                 	db	114	;'r'
  1241  00EE20  65                 	db	101	;'e'
  1242  00EE21  64                 	db	100	;'d'
  1243  00EE22  20                 	db	32
  1244  00EE23  6F                 	db	111	;'o'
  1245  00EE24  72                 	db	114	;'r'
  1246  00EE25  20                 	db	32
  1247  00EE26  6E                 	db	110	;'n'
  1248  00EE27  6F                 	db	111	;'o'
  1249  00EE28  74                 	db	116	;'t'
  1250  00EE29  0A                 	db	10
  1251  00EE2A  0D                 	db	13
  1252  00EE2B  20                 	db	32
  1253  00EE2C  20                 	db	32
  1254  00EE2D  20                 	db	32
  1255  00EE2E  48                 	db	72	;'H'
  1256  00EE2F  65                 	db	101	;'e'
  1257  00EE30  6C                 	db	108	;'l'
  1258  00EE31  70                 	db	112	;'p'
  1259  00EE32  3A                 	db	58	;':'
  1260  00EE33  20                 	db	32
  1261  00EE34  54                 	db	84	;'T'
  1262  00EE35  68                 	db	104	;'h'
  1263  00EE36  69                 	db	105	;'i'
  1264  00EE37  73                 	db	115	;'s'
  1265  00EE38  20                 	db	32
  1266  00EE39  6D                 	db	109	;'m'
  1267  00EE3A  65                 	db	101	;'e'
  1268  00EE3B  73                 	db	115	;'s'
  1269  00EE3C  73                 	db	115	;'s'
  1270  00EE3D  61                 	db	97	;'a'
  1271  00EE3E  67                 	db	103	;'g'
  1272  00EE3F  65                 	db	101	;'e'
  1273  00EE40  2C                 	db	44
  1274  00EE41  20                 	db	32
  1275  00EE42  6C                 	db	108	;'l'
  1276  00EE43  69                 	db	105	;'i'
  1277  00EE44  73                 	db	115	;'s'
  1278  00EE45  74                 	db	116	;'t'
  1279  00EE46  73                 	db	115	;'s'
  1280  00EE47  20                 	db	32
  1281  00EE48  73                 	db	115	;'s'
  1282  00EE49  75                 	db	117	;'u'
  1283  00EE4A  70                 	db	112	;'p'
  1284  00EE4B  70                 	db	112	;'p'
  1285  00EE4C  6F                 	db	111	;'o'
  1286  00EE4D  72                 	db	114	;'r'
  1287  00EE4E  74                 	db	116	;'t'
  1288  00EE4F  65                 	db	101	;'e'
  1289  00EE50  64                 	db	100	;'d'
  1290  00EE51  20                 	db	32
  1291  00EE52  63                 	db	99	;'c'
  1292  00EE53  6F                 	db	111	;'o'
  1293  00EE54  6D                 	db	109	;'m'
  1294  00EE55  6D                 	db	109	;'m'
  1295  00EE56  61                 	db	97	;'a'
  1296  00EE57  6E                 	db	110	;'n'
  1297  00EE58  64                 	db	100	;'d'
  1298  00EE59  73                 	db	115	;'s'
  1299  00EE5A  0A                 	db	10
  1300  00EE5B  0D                 	db	13
  1301  00EE5C  44                 	db	68	;'D'
  1302  00EE5D  65                 	db	101	;'e'
  1303  00EE5E  76                 	db	118	;'v'
  1304  00EE5F  69                 	db	105	;'i'
  1305  00EE60  63                 	db	99	;'c'
  1306  00EE61  65                 	db	101	;'e'
  1307  00EE62  20                 	db	32
  1308  00EE63  4D                 	db	77	;'M'
  1309  00EE64  65                 	db	101	;'e'
  1310  00EE65  61                 	db	97	;'a'
  1311  00EE66  73                 	db	115	;'s'
  1312  00EE67  75                 	db	117	;'u'
  1313  00EE68  72                 	db	114	;'r'
  1314  00EE69  65                 	db	101	;'e'
  1315  00EE6A  6D                 	db	109	;'m'
  1316  00EE6B  65                 	db	101	;'e'
  1317  00EE6C  6E                 	db	110	;'n'
  1318  00EE6D  74                 	db	116	;'t'
  1319  00EE6E  20                 	db	32
  1320  00EE6F  43                 	db	67	;'C'
  1321  00EE70  6F                 	db	111	;'o'
  1322  00EE71  6D                 	db	109	;'m'
  1323  00EE72  6D                 	db	109	;'m'
  1324  00EE73  61                 	db	97	;'a'
  1325  00EE74  6E                 	db	110	;'n'
  1326  00EE75  64                 	db	100	;'d'
  1327  00EE76  73                 	db	115	;'s'
  1328  00EE77  3A                 	db	58	;':'
  1329  00EE78  0A                 	db	10
  1330  00EE79  0D                 	db	13
  1331  00EE7A  20                 	db	32
  1332  00EE7B  20                 	db	32
  1333  00EE7C  20                 	db	32
  1334  00EE7D  4D                 	db	77	;'M'
  1335  00EE7E  65                 	db	101	;'e'
  1336  00EE7F  61                 	db	97	;'a'
  1337  00EE80  73                 	db	115	;'s'
  1338  00EE81  75                 	db	117	;'u'
  1339  00EE82  72                 	db	114	;'r'
  1340  00EE83  65                 	db	101	;'e'
  1341  00EE84  20                 	db	32
  1342  00EE85  50                 	db	80	;'P'
  1343  00EE86  4F                 	db	79	;'O'
  1344  00EE87  53                 	db	83	;'S'
  1345  00EE88  33                 	db	51	;'3'
  1346  00EE89  50                 	db	80	;'P'
  1347  00EE8A  33                 	db	51	;'3'
  1348  00EE8B  3F                 	db	63	;'?'
  1349  00EE8C  3A                 	db	58	;':'
  1350  00EE8D  20                 	db	32
  1351  00EE8E  52                 	db	82	;'R'
  1352  00EE8F  65                 	db	101	;'e'
  1353  00EE90  74                 	db	116	;'t'
  1354  00EE91  75                 	db	117	;'u'
  1355  00EE92  72                 	db	114	;'r'
  1356  00EE93  6E                 	db	110	;'n'
  1357  00EE94  73                 	db	115	;'s'
  1358  00EE95  20                 	db	32
  1359  00EE96  2B                 	db	43
  1360  00EE97  33                 	db	51	;'3'
  1361  00EE98  2E                 	db	46
  1362  00EE99  33                 	db	51	;'3'
  1363  00EE9A  56                 	db	86	;'V'
  1364  00EE9B  20                 	db	32
  1365  00EE9C  41                 	db	65	;'A'
  1366  00EE9D  44                 	db	68	;'D'
  1367  00EE9E  43                 	db	67	;'C'
  1368  00EE9F  20                 	db	32
  1369  00EEA0  43                 	db	67	;'C'
  1370  00EEA1  6F                 	db	111	;'o'
  1371  00EEA2  6E                 	db	110	;'n'
  1372  00EEA3  76                 	db	118	;'v'
  1373  00EEA4  65                 	db	101	;'e'
  1374  00EEA5  72                 	db	114	;'r'
  1375  00EEA6  73                 	db	115	;'s'
  1376  00EEA7  69                 	db	105	;'i'
  1377  00EEA8  6F                 	db	111	;'o'
  1378  00EEA9  6E                 	db	110	;'n'
  1379  00EEAA  20                 	db	32
  1380  00EEAB  69                 	db	105	;'i'
  1381  00EEAC  6E                 	db	110	;'n'
  1382  00EEAD  20                 	db	32
  1383  00EEAE  76                 	db	118	;'v'
  1384  00EEAF  6F                 	db	111	;'o'
  1385  00EEB0  6C                 	db	108	;'l'
  1386  00EEB1  74                 	db	116	;'t'
  1387  00EEB2  73                 	db	115	;'s'
  1388  00EEB3  0A                 	db	10
  1389  00EEB4  0D                 	db	13
  1390  00EEB5  20                 	db	32
  1391  00EEB6  20                 	db	32
  1392  00EEB7  20                 	db	32
  1393  00EEB8  4D                 	db	77	;'M'
  1394  00EEB9  65                 	db	101	;'e'
  1395  00EEBA  61                 	db	97	;'a'
  1396  00EEBB  73                 	db	115	;'s'
  1397  00EEBC  75                 	db	117	;'u'
  1398  00EEBD  72                 	db	114	;'r'
  1399  00EEBE  65                 	db	101	;'e'
  1400  00EEBF  20                 	db	32
  1401  00EEC0  50                 	db	80	;'P'
  1402  00EEC1  4F                 	db	79	;'O'
  1403  00EEC2  53                 	db	83	;'S'
  1404  00EEC3  31                 	db	49	;'1'
  1405  00EEC4  32                 	db	50	;'2'
  1406  00EEC5  3F                 	db	63	;'?'
  1407  00EEC6  3A                 	db	58	;':'
  1408  00EEC7  20                 	db	32
  1409  00EEC8  52                 	db	82	;'R'
  1410  00EEC9  65                 	db	101	;'e'
  1411  00EECA  74                 	db	116	;'t'
  1412  00EECB  75                 	db	117	;'u'
  1413  00EECC  72                 	db	114	;'r'
  1414  00EECD  6E                 	db	110	;'n'
  1415  00EECE  73                 	db	115	;'s'
  1416  00EECF  20                 	db	32
  1417  00EED0  2B                 	db	43
  1418  00EED1  31                 	db	49	;'1'
  1419  00EED2  32                 	db	50	;'2'
  1420  00EED3  56                 	db	86	;'V'
  1421  00EED4  20                 	db	32
  1422  00EED5  41                 	db	65	;'A'
  1423  00EED6  44                 	db	68	;'D'
  1424  00EED7  43                 	db	67	;'C'
  1425  00EED8  20                 	db	32
  1426  00EED9  43                 	db	67	;'C'
  1427  00EEDA  6F                 	db	111	;'o'
  1428  00EEDB  6E                 	db	110	;'n'
  1429  00EEDC  76                 	db	118	;'v'
  1430  00EEDD  65                 	db	101	;'e'
  1431  00EEDE  72                 	db	114	;'r'
  1432  00EEDF  73                 	db	115	;'s'
  1433  00EEE0  69                 	db	105	;'i'
  1434  00EEE1  6F                 	db	111	;'o'
  1435  00EEE2  6E                 	db	110	;'n'
  1436  00EEE3  20                 	db	32
  1437  00EEE4  69                 	db	105	;'i'
  1438  00EEE5  6E                 	db	110	;'n'
  1439  00EEE6  20                 	db	32
  1440  00EEE7  76                 	db	118	;'v'
  1441  00EEE8  6F                 	db	111	;'o'
  1442  00EEE9  6C                 	db	108	;'l'
  1443  00EEEA  74                 	db	116	;'t'
  1444  00EEEB  73                 	db	115	;'s'
  1445  00EEEC  0A                 	db	10
  1446  00EEED  0D                 	db	13
  1447  00EEEE  20                 	db	32
  1448  00EEEF  20                 	db	32
  1449  00EEF0  20                 	db	32
  1450  00EEF1  4D                 	db	77	;'M'
  1451  00EEF2  65                 	db	101	;'e'
  1452  00EEF3  61                 	db	97	;'a'
  1453  00EEF4  73                 	db	115	;'s'
  1454  00EEF5  75                 	db	117	;'u'
  1455  00EEF6  72                 	db	114	;'r'
  1456  00EEF7  65                 	db	101	;'e'
  1457  00EEF8  20                 	db	32
  1458  00EEF9  44                 	db	68	;'D'
  1459  00EEFA  69                 	db	105	;'i'
  1460  00EEFB  65                 	db	101	;'e'
  1461  00EEFC  20                 	db	32
  1462  00EEFD  54                 	db	84	;'T'
  1463  00EEFE  65                 	db	101	;'e'
  1464  00EEFF  6D                 	db	109	;'m'
  1465  00EF00  70                 	db	112	;'p'
  1466  00EF01  3F                 	db	63	;'?'
  1467  00EF02  3A                 	db	58	;':'
  1468  00EF03  20                 	db	32
  1469  00EF04  52                 	db	82	;'R'
  1470  00EF05  65                 	db	101	;'e'
  1471  00EF06  74                 	db	116	;'t'
  1472  00EF07  75                 	db	117	;'u'
  1473  00EF08  72                 	db	114	;'r'
  1474  00EF09  6E                 	db	110	;'n'
  1475  00EF0A  73                 	db	115	;'s'
  1476  00EF0B  20                 	db	32
  1477  00EF0C  74                 	db	116	;'t'
  1478  00EF0D  68                 	db	104	;'h'
  1479  00EF0E  65                 	db	101	;'e'
  1480  00EF0F  20                 	db	32
  1481  00EF10  6D                 	db	109	;'m'
  1482  00EF11  69                 	db	105	;'i'
  1483  00EF12  63                 	db	99	;'c'
  1484  00EF13  72                 	db	114	;'r'
  1485  00EF14  6F                 	db	111	;'o'
  1486  00EF15  63                 	db	99	;'c'
  1487  00EF16  6F                 	db	111	;'o'
  1488  00EF17  6E                 	db	110	;'n'
  1489  00EF18  74                 	db	116	;'t'
  1490  00EF19  72                 	db	114	;'r'
  1491  00EF1A  6F                 	db	111	;'o'
  1492  00EF1B  6C                 	db	108	;'l'
  1493  00EF1C  6C                 	db	108	;'l'
  1494  00EF1D  65                 	db	101	;'e'
  1495  00EF1E  72                 	db	114	;'r'
  1496  00EF1F  20                 	db	32
  1497  00EF20  64                 	db	100	;'d'
  1498  00EF21  69                 	db	105	;'i'
  1499  00EF22  65                 	db	101	;'e'
  1500  00EF23  20                 	db	32
  1501  00EF24  74                 	db	116	;'t'
  1502  00EF25  65                 	db	101	;'e'
  1503  00EF26  6D                 	db	109	;'m'
  1504  00EF27  70                 	db	112	;'p'
  1505  00EF28  65                 	db	101	;'e'
  1506  00EF29  72                 	db	114	;'r'
  1507  00EF2A  61                 	db	97	;'a'
  1508  00EF2B  74                 	db	116	;'t'
  1509  00EF2C  75                 	db	117	;'u'
  1510  00EF2D  72                 	db	114	;'r'
  1511  00EF2E  65                 	db	101	;'e'
  1512  00EF2F  20                 	db	32
  1513  00EF30  69                 	db	105	;'i'
  1514  00EF31  6E                 	db	110	;'n'
  1515  00EF32  20                 	db	32
  1516  00EF33  64                 	db	100	;'d'
  1517  00EF34  65                 	db	101	;'e'
  1518  00EF35  67                 	db	103	;'g'
  1519  00EF36  72                 	db	114	;'r'
  1520  00EF37  65                 	db	101	;'e'
  1521  00EF38  65                 	db	101	;'e'
  1522  00EF39  73                 	db	115	;'s'
  1523  00EF3A  20                 	db	32
  1524  00EF3B  43                 	db	67	;'C'
  1525  00EF3C  0A                 	db	10
  1526  00EF3D  0D                 	db	13
  1527  00EF3E  20                 	db	32
  1528  00EF3F  20                 	db	32
  1529  00EF40  20                 	db	32
  1530  00EF41  4D                 	db	77	;'M'
  1531  00EF42  65                 	db	101	;'e'
  1532  00EF43  61                 	db	97	;'a'
  1533  00EF44  73                 	db	115	;'s'
  1534  00EF45  75                 	db	117	;'u'
  1535  00EF46  72                 	db	114	;'r'
  1536  00EF47  65                 	db	101	;'e'
  1537  00EF48  20                 	db	32
  1538  00EF49  46                 	db	70	;'F'
  1539  00EF4A  56                 	db	86	;'V'
  1540  00EF4B  52                 	db	82	;'R'
  1541  00EF4C  3F                 	db	63	;'?'
  1542  00EF4D  3A                 	db	58	;':'
  1543  00EF4E  20                 	db	32
  1544  00EF4F  52                 	db	82	;'R'
  1545  00EF50  65                 	db	101	;'e'
  1546  00EF51  74                 	db	116	;'t'
  1547  00EF52  75                 	db	117	;'u'
  1548  00EF53  72                 	db	114	;'r'
  1549  00EF54  6E                 	db	110	;'n'
  1550  00EF55  73                 	db	115	;'s'
  1551  00EF56  20                 	db	32
  1552  00EF57  74                 	db	116	;'t'
  1553  00EF58  68                 	db	104	;'h'
  1554  00EF59  65                 	db	101	;'e'
  1555  00EF5A  20                 	db	32
  1556  00EF5B  69                 	db	105	;'i'
  1557  00EF5C  6E                 	db	110	;'n'
  1558  00EF5D  74                 	db	116	;'t'
  1559  00EF5E  65                 	db	101	;'e'
  1560  00EF5F  72                 	db	114	;'r'
  1561  00EF60  6E                 	db	110	;'n'
  1562  00EF61  61                 	db	97	;'a'
  1563  00EF62  6C                 	db	108	;'l'
  1564  00EF63  20                 	db	32
  1565  00EF64  66                 	db	102	;'f'
  1566  00EF65  69                 	db	105	;'i'
  1567  00EF66  78                 	db	120	;'x'
  1568  00EF67  65                 	db	101	;'e'
  1569  00EF68  64                 	db	100	;'d'
  1570  00EF69  20                 	db	32
  1571  00EF6A  76                 	db	118	;'v'
  1572  00EF6B  6F                 	db	111	;'o'
  1573  00EF6C  6C                 	db	108	;'l'
  1574  00EF6D  74                 	db	116	;'t'
  1575  00EF6E  61                 	db	97	;'a'
  1576  00EF6F  67                 	db	103	;'g'
  1577  00EF70  65                 	db	101	;'e'
  1578  00EF71  20                 	db	32
  1579  00EF72  72                 	db	114	;'r'
  1580  00EF73  65                 	db	101	;'e'
  1581  00EF74  66                 	db	102	;'f'
  1582  00EF75  65                 	db	101	;'e'
  1583  00EF76  72                 	db	114	;'r'
  1584  00EF77  65                 	db	101	;'e'
  1585  00EF78  6E                 	db	110	;'n'
  1586  00EF79  63                 	db	99	;'c'
  1587  00EF7A  65                 	db	101	;'e'
  1588  00EF7B  20                 	db	32
  1589  00EF7C  62                 	db	98	;'b'
  1590  00EF7D  75                 	db	117	;'u'
  1591  00EF7E  66                 	db	102	;'f'
  1592  00EF7F  66                 	db	102	;'f'
  1593  00EF80  65                 	db	101	;'e'
  1594  00EF81  72                 	db	114	;'r'
  1595  00EF82  20                 	db	32
  1596  00EF83  31                 	db	49	;'1'
  1597  00EF84  20                 	db	32
  1598  00EF85  6F                 	db	111	;'o'
  1599  00EF86  75                 	db	117	;'u'
  1600  00EF87  74                 	db	116	;'t'
  1601  00EF88  70                 	db	112	;'p'
  1602  00EF89  75                 	db	117	;'u'
  1603  00EF8A  74                 	db	116	;'t'
  1604  00EF8B  20                 	db	32
  1605  00EF8C  69                 	db	105	;'i'
  1606  00EF8D  6E                 	db	110	;'n'
  1607  00EF8E  20                 	db	32
  1608  00EF8F  76                 	db	118	;'v'
  1609  00EF90  6F                 	db	111	;'o'
  1610  00EF91  6C                 	db	108	;'l'
  1611  00EF92  74                 	db	116	;'t'
  1612  00EF93  73                 	db	115	;'s'
  1613  00EF94  0A                 	db	10
  1614  00EF95  0D                 	db	13
  1615  00EF96  20                 	db	32
  1616  00EF97  20                 	db	32
  1617  00EF98  20                 	db	32
  1618  00EF99  4D                 	db	77	;'M'
  1619  00EF9A  65                 	db	101	;'e'
  1620  00EF9B  61                 	db	97	;'a'
  1621  00EF9C  73                 	db	115	;'s'
  1622  00EF9D  75                 	db	117	;'u'
  1623  00EF9E  72                 	db	114	;'r'
  1624  00EF9F  65                 	db	101	;'e'
  1625  00EFA0  20                 	db	32
  1626  00EFA1  41                 	db	65	;'A'
  1627  00EFA2  56                 	db	86	;'V'
  1628  00EFA3  53                 	db	83	;'S'
  1629  00EFA4  53                 	db	83	;'S'
  1630  00EFA5  3F                 	db	63	;'?'
  1631  00EFA6  3A                 	db	58	;':'
  1632  00EFA7  20                 	db	32
  1633  00EFA8  52                 	db	82	;'R'
  1634  00EFA9  65                 	db	101	;'e'
  1635  00EFAA  74                 	db	116	;'t'
  1636  00EFAB  75                 	db	117	;'u'
  1637  00EFAC  72                 	db	114	;'r'
  1638  00EFAD  6E                 	db	110	;'n'
  1639  00EFAE  73                 	db	115	;'s'
  1640  00EFAF  20                 	db	32
  1641  00EFB0  74                 	db	116	;'t'
  1642  00EFB1  68                 	db	104	;'h'
  1643  00EFB2  65                 	db	101	;'e'
  1644  00EFB3  20                 	db	32
  1645  00EFB4  6D                 	db	109	;'m'
  1646  00EFB5  65                 	db	101	;'e'
  1647  00EFB6  61                 	db	97	;'a'
  1648  00EFB7  73                 	db	115	;'s'
  1649  00EFB8  75                 	db	117	;'u'
  1650  00EFB9  72                 	db	114	;'r'
  1651  00EFBA  65                 	db	101	;'e'
  1652  00EFBB  64                 	db	100	;'d'
  1653  00EFBC  20                 	db	32
  1654  00EFBD  76                 	db	118	;'v'
  1655  00EFBE  61                 	db	97	;'a'
  1656  00EFBF  6C                 	db	108	;'l'
  1657  00EFC0  75                 	db	117	;'u'
  1658  00EFC1  65                 	db	101	;'e'
  1659  00EFC2  20                 	db	32
  1660  00EFC3  6F                 	db	111	;'o'
  1661  00EFC4  66                 	db	102	;'f'
  1662  00EFC5  20                 	db	32
  1663  00EFC6  41                 	db	65	;'A'
  1664  00EFC7  6E                 	db	110	;'n'
  1665  00EFC8  61                 	db	97	;'a'
  1666  00EFC9  6C                 	db	108	;'l'
  1667  00EFCA  6F                 	db	111	;'o'
  1668  00EFCB  67                 	db	103	;'g'
  1669  00EFCC  20                 	db	32
  1670  00EFCD  56                 	db	86	;'V'
  1671  00EFCE  53                 	db	83	;'S'
  1672  00EFCF  53                 	db	83	;'S'
  1673  00EFD0  20                 	db	32
  1674  00EFD1  69                 	db	105	;'i'
  1675  00EFD2  6E                 	db	110	;'n'
  1676  00EFD3  20                 	db	32
  1677  00EFD4  76                 	db	118	;'v'
  1678  00EFD5  6F                 	db	111	;'o'
  1679  00EFD6  6C                 	db	108	;'l'
  1680  00EFD7  74                 	db	116	;'t'
  1681  00EFD8  73                 	db	115	;'s'
  1682  00EFD9  0A                 	db	10
  1683  00EFDA  0D                 	db	13
  1684  00EFDB  50                 	db	80	;'P'
  1685  00EFDC  72                 	db	114	;'r'
  1686  00EFDD  69                 	db	105	;'i'
  1687  00EFDE  6D                 	db	109	;'m'
  1688  00EFDF  61                 	db	97	;'a'
  1689  00EFE0  72                 	db	114	;'r'
  1690  00EFE1  79                 	db	121	;'y'
  1691  00EFE2  20                 	db	32
  1692  00EFE3  4D                 	db	77	;'M'
  1693  00EFE4  65                 	db	101	;'e'
  1694  00EFE5  61                 	db	97	;'a'
  1695  00EFE6  73                 	db	115	;'s'
  1696  00EFE7  75                 	db	117	;'u'
  1697  00EFE8  72                 	db	114	;'r'
  1698  00EFE9  65                 	db	101	;'e'
  1699  00EFEA  6D                 	db	109	;'m'
  1700  00EFEB  65                 	db	101	;'e'
  1701  00EFEC  6E                 	db	110	;'n'
  1702  00EFED  74                 	db	116	;'t'
  1703  00EFEE  20                 	db	32
  1704  00EFEF  43                 	db	67	;'C'
  1705  00EFF0  6F                 	db	111	;'o'
  1706  00EFF1  6D                 	db	109	;'m'
  1707  00EFF2  6D                 	db	109	;'m'
  1708  00EFF3  61                 	db	97	;'a'
  1709  00EFF4  6E                 	db	110	;'n'
  1710  00EFF5  64                 	db	100	;'d'
  1711  00EFF6  73                 	db	115	;'s'
  1712  00EFF7  3A                 	db	58	;':'
  1713  00EFF8  0A                 	db	10
  1714  00EFF9  0D                 	db	13
  1715  00EFFA  20                 	db	32
  1716  00EFFB  20                 	db	32
  1717  00EFFC  20                 	db	32
  1718  00EFFD  4D                 	db	77	;'M'
  1719  00EFFE  65                 	db	101	;'e'
  1720  00EFFF  61                 	db	97	;'a'
  1721  00F000  73                 	db	115	;'s'
  1722  00F001  75                 	db	117	;'u'
  1723  00F002  72                 	db	114	;'r'
  1724  00F003  65                 	db	101	;'e'
  1725  00F004  20                 	db	32
  1726  00F005  44                 	db	68	;'D'
  1727  00F006  65                 	db	101	;'e'
  1728  00F007  74                 	db	116	;'t'
  1729  00F008  65                 	db	101	;'e'
  1730  00F009  63                 	db	99	;'c'
  1731  00F00A  74                 	db	116	;'t'
  1732  00F00B  65                 	db	101	;'e'
  1733  00F00C  64                 	db	100	;'d'
  1734  00F00D  20                 	db	32
  1735  00F00E  43                 	db	67	;'C'
  1736  00F00F  75                 	db	117	;'u'
  1737  00F010  72                 	db	114	;'r'
  1738  00F011  72                 	db	114	;'r'
  1739  00F012  65                 	db	101	;'e'
  1740  00F013  6E                 	db	110	;'n'
  1741  00F014  74                 	db	116	;'t'
  1742  00F015  3F                 	db	63	;'?'
  1743  00F016  3A                 	db	58	;':'
  1744  00F017  20                 	db	32
  1745  00F018  52                 	db	82	;'R'
  1746  00F019  65                 	db	101	;'e'
  1747  00F01A  74                 	db	116	;'t'
  1748  00F01B  75                 	db	117	;'u'
  1749  00F01C  72                 	db	114	;'r'
  1750  00F01D  6E                 	db	110	;'n'
  1751  00F01E  73                 	db	115	;'s'
  1752  00F01F  20                 	db	32
  1753  00F020  6D                 	db	109	;'m'
  1754  00F021  65                 	db	101	;'e'
  1755  00F022  61                 	db	97	;'a'
  1756  00F023  73                 	db	115	;'s'
  1757  00F024  75                 	db	117	;'u'
  1758  00F025  72                 	db	114	;'r'
  1759  00F026  65                 	db	101	;'e'
  1760  00F027  64                 	db	100	;'d'
  1761  00F028  20                 	db	32
  1762  00F029  6F                 	db	111	;'o'
  1763  00F02A  75                 	db	117	;'u'
  1764  00F02B  74                 	db	116	;'t'
  1765  00F02C  70                 	db	112	;'p'
  1766  00F02D  75                 	db	117	;'u'
  1767  00F02E  74                 	db	116	;'t'
  1768  00F02F  20                 	db	32
  1769  00F030  63                 	db	99	;'c'
  1770  00F031  75                 	db	117	;'u'
  1771  00F032  72                 	db	114	;'r'
  1772  00F033  72                 	db	114	;'r'
  1773  00F034  65                 	db	101	;'e'
  1774  00F035  6E                 	db	110	;'n'
  1775  00F036  74                 	db	116	;'t'
  1776  00F037  20                 	db	32
  1777  00F038  69                 	db	105	;'i'
  1778  00F039  6E                 	db	110	;'n'
  1779  00F03A  20                 	db	32
  1780  00F03B  61                 	db	97	;'a'
  1781  00F03C  6D                 	db	109	;'m'
  1782  00F03D  70                 	db	112	;'p'
  1783  00F03E  73                 	db	115	;'s'
  1784  00F03F  20                 	db	32
  1785  00F040  61                 	db	97	;'a'
  1786  00F041  73                 	db	115	;'s'
  1787  00F042  20                 	db	32
  1788  00F043  73                 	db	115	;'s'
  1789  00F044  65                 	db	101	;'e'
  1790  00F045  65                 	db	101	;'e'
  1791  00F046  6E                 	db	110	;'n'
  1792  00F047  20                 	db	32
  1793  00F048  62                 	db	98	;'b'
  1794  00F049  79                 	db	121	;'y'
  1795  00F04A  20                 	db	32
  1796  00F04B  41                 	db	65	;'A'
  1797  00F04C  44                 	db	68	;'D'
  1798  00F04D  43                 	db	67	;'C'
  1799  00F04E  0A                 	db	10
  1800  00F04F  0D                 	db	13
  1801  00F050  20                 	db	32
  1802  00F051  20                 	db	32
  1803  00F052  20                 	db	32
  1804  00F053  4D                 	db	77	;'M'
  1805  00F054  65                 	db	101	;'e'
  1806  00F055  61                 	db	97	;'a'
  1807  00F056  73                 	db	115	;'s'
  1808  00F057  75                 	db	117	;'u'
  1809  00F058  72                 	db	114	;'r'
  1810  00F059  65                 	db	101	;'e'
  1811  00F05A  20                 	db	32
  1812  00F05B  52                 	db	82	;'R'
  1813  00F05C  4D                 	db	77	;'M'
  1814  00F05D  53                 	db	83	;'S'
  1815  00F05E  20                 	db	32
  1816  00F05F  43                 	db	67	;'C'
  1817  00F060  75                 	db	117	;'u'
  1818  00F061  72                 	db	114	;'r'
  1819  00F062  72                 	db	114	;'r'
  1820  00F063  65                 	db	101	;'e'
  1821  00F064  6E                 	db	110	;'n'
  1822  00F065  74                 	db	116	;'t'
  1823  00F066  3F                 	db	63	;'?'
  1824  00F067  3A                 	db	58	;':'
  1825  00F068  20                 	db	32
  1826  00F069  52                 	db	82	;'R'
  1827  00F06A  65                 	db	101	;'e'
  1828  00F06B  74                 	db	116	;'t'
  1829  00F06C  75                 	db	117	;'u'
  1830  00F06D  72                 	db	114	;'r'
  1831  00F06E  6E                 	db	110	;'n'
  1832  00F06F  73                 	db	115	;'s'
  1833  00F070  20                 	db	32
  1834  00F071  74                 	db	116	;'t'
  1835  00F072  68                 	db	104	;'h'
  1836  00F073  65                 	db	101	;'e'
  1837  00F074  20                 	db	32
  1838  00F075  63                 	db	99	;'c'
  1839  00F076  61                 	db	97	;'a'
  1840  00F077  6C                 	db	108	;'l'
  1841  00F078  63                 	db	99	;'c'
  1842  00F079  75                 	db	117	;'u'
  1843  00F07A  6C                 	db	108	;'l'
  1844  00F07B  61                 	db	97	;'a'
  1845  00F07C  74                 	db	116	;'t'
  1846  00F07D  65                 	db	101	;'e'
  1847  00F07E  64                 	db	100	;'d'
  1848  00F07F  20                 	db	32
  1849  00F080  52                 	db	82	;'R'
  1850  00F081  4D                 	db	77	;'M'
  1851  00F082  53                 	db	83	;'S'
  1852  00F083  20                 	db	32
  1853  00F084  6F                 	db	111	;'o'
  1854  00F085  75                 	db	117	;'u'
  1855  00F086  74                 	db	116	;'t'
  1856  00F087  70                 	db	112	;'p'
  1857  00F088  75                 	db	117	;'u'
  1858  00F089  74                 	db	116	;'t'
  1859  00F08A  20                 	db	32
  1860  00F08B  63                 	db	99	;'c'
  1861  00F08C  75                 	db	117	;'u'
  1862  00F08D  72                 	db	114	;'r'
  1863  00F08E  72                 	db	114	;'r'
  1864  00F08F  65                 	db	101	;'e'
  1865  00F090  6E                 	db	110	;'n'
  1866  00F091  74                 	db	116	;'t'
  1867  00F092  20                 	db	32
  1868  00F093  66                 	db	102	;'f'
  1869  00F094  72                 	db	114	;'r'
  1870  00F095  6F                 	db	111	;'o'
  1871  00F096  6D                 	db	109	;'m'
  1872  00F097  20                 	db	32
  1873  00F098  6D                 	db	109	;'m'
  1874  00F099  65                 	db	101	;'e'
  1875  00F09A  61                 	db	97	;'a'
  1876  00F09B  73                 	db	115	;'s'
  1877  00F09C  75                 	db	117	;'u'
  1878  00F09D  72                 	db	114	;'r'
  1879  00F09E  65                 	db	101	;'e'
  1880  00F09F  6D                 	db	109	;'m'
  1881  00F0A0  65                 	db	101	;'e'
  1882  00F0A1  6E                 	db	110	;'n'
  1883  00F0A2  74                 	db	116	;'t'
  1884  00F0A3  73                 	db	115	;'s'
  1885  00F0A4  20                 	db	32
  1886  00F0A5  61                 	db	97	;'a'
  1887  00F0A6  6E                 	db	110	;'n'
  1888  00F0A7  64                 	db	100	;'d'
  1889  00F0A8  20                 	db	32
  1890  00F0A9  54                 	db	84	;'T'
  1891  00F0AA  52                 	db	82	;'R'
  1892  00F0AB  49                 	db	73	;'I'
  1893  00F0AC  41                 	db	65	;'A'
  1894  00F0AD  43                 	db	67	;'C'
  1895  00F0AE  20                 	db	32
  1896  00F0AF  66                 	db	102	;'f'
  1897  00F0B0  69                 	db	105	;'i'
  1898  00F0B1  72                 	db	114	;'r'
  1899  00F0B2  69                 	db	105	;'i'
  1900  00F0B3  6E                 	db	110	;'n'
  1901  00F0B4  67                 	db	103	;'g'
  1902  00F0B5  20                 	db	32
  1903  00F0B6  61                 	db	97	;'a'
  1904  00F0B7  6E                 	db	110	;'n'
  1905  00F0B8  67                 	db	103	;'g'
  1906  00F0B9  6C                 	db	108	;'l'
  1907  00F0BA  65                 	db	101	;'e'
  1908  00F0BB  0A                 	db	10
  1909  00F0BC  0D                 	db	13
  1910  00F0BD  20                 	db	32
  1911  00F0BE  20                 	db	32
  1912  00F0BF  20                 	db	32
  1913  00F0C0  4D                 	db	77	;'M'
  1914  00F0C1  65                 	db	101	;'e'
  1915  00F0C2  61                 	db	97	;'a'
  1916  00F0C3  73                 	db	115	;'s'
  1917  00F0C4  75                 	db	117	;'u'
  1918  00F0C5  72                 	db	114	;'r'
  1919  00F0C6  65                 	db	101	;'e'
  1920  00F0C7  20                 	db	32
  1921  00F0C8  52                 	db	82	;'R'
  1922  00F0C9  4D                 	db	77	;'M'
  1923  00F0CA  53                 	db	83	;'S'
  1924  00F0CB  20                 	db	32
  1925  00F0CC  56                 	db	86	;'V'
  1926  00F0CD  6F                 	db	111	;'o'
  1927  00F0CE  6C                 	db	108	;'l'
  1928  00F0CF  74                 	db	116	;'t'
  1929  00F0D0  61                 	db	97	;'a'
  1930  00F0D1  67                 	db	103	;'g'
  1931  00F0D2  65                 	db	101	;'e'
  1932  00F0D3  3F                 	db	63	;'?'
  1933  00F0D4  3A                 	db	58	;':'
  1934  00F0D5  20                 	db	32
  1935  00F0D6  52                 	db	82	;'R'
  1936  00F0D7  65                 	db	101	;'e'
  1937  00F0D8  74                 	db	116	;'t'
  1938  00F0D9  75                 	db	117	;'u'
  1939  00F0DA  72                 	db	114	;'r'
  1940  00F0DB  6E                 	db	110	;'n'
  1941  00F0DC  73                 	db	115	;'s'
  1942  00F0DD  20                 	db	32
  1943  00F0DE  74                 	db	116	;'t'
  1944  00F0DF  68                 	db	104	;'h'
  1945  00F0E0  65                 	db	101	;'e'
  1946  00F0E1  20                 	db	32
  1947  00F0E2  63                 	db	99	;'c'
  1948  00F0E3  61                 	db	97	;'a'
  1949  00F0E4  6C                 	db	108	;'l'
  1950  00F0E5  63                 	db	99	;'c'
  1951  00F0E6  75                 	db	117	;'u'
  1952  00F0E7  6C                 	db	108	;'l'
  1953  00F0E8  61                 	db	97	;'a'
  1954  00F0E9  74                 	db	116	;'t'
  1955  00F0EA  65                 	db	101	;'e'
  1956  00F0EB  64                 	db	100	;'d'
  1957  00F0EC  20                 	db	32
  1958  00F0ED  52                 	db	82	;'R'
  1959  00F0EE  4D                 	db	77	;'M'
  1960  00F0EF  53                 	db	83	;'S'
  1961  00F0F0  20                 	db	32
  1962  00F0F1  6F                 	db	111	;'o'
  1963  00F0F2  75                 	db	117	;'u'
  1964  00F0F3  74                 	db	116	;'t'
  1965  00F0F4  70                 	db	112	;'p'
  1966  00F0F5  75                 	db	117	;'u'
  1967  00F0F6  74                 	db	116	;'t'
  1968  00F0F7  20                 	db	32
  1969  00F0F8  76                 	db	118	;'v'
  1970  00F0F9  6F                 	db	111	;'o'
  1971  00F0FA  6C                 	db	108	;'l'
  1972  00F0FB  74                 	db	116	;'t'
  1973  00F0FC  61                 	db	97	;'a'
  1974  00F0FD  67                 	db	103	;'g'
  1975  00F0FE  65                 	db	101	;'e'
  1976  00F0FF  20                 	db	32
  1977  00F100  66                 	db	102	;'f'
  1978  00F101  72                 	db	114	;'r'
  1979  00F102  6F                 	db	111	;'o'
  1980  00F103  6D                 	db	109	;'m'
  1981  00F104  20                 	db	32
  1982  00F105  54                 	db	84	;'T'
  1983  00F106  52                 	db	82	;'R'
  1984  00F107  49                 	db	73	;'I'
  1985  00F108  41                 	db	65	;'A'
  1986  00F109  43                 	db	67	;'C'
  1987  00F10A  20                 	db	32
  1988  00F10B  66                 	db	102	;'f'
  1989  00F10C  69                 	db	105	;'i'
  1990  00F10D  72                 	db	114	;'r'
  1991  00F10E  69                 	db	105	;'i'
  1992  00F10F  6E                 	db	110	;'n'
  1993  00F110  67                 	db	103	;'g'
  1994  00F111  20                 	db	32
  1995  00F112  61                 	db	97	;'a'
  1996  00F113  6E                 	db	110	;'n'
  1997  00F114  67                 	db	103	;'g'
  1998  00F115  6C                 	db	108	;'l'
  1999  00F116  65                 	db	101	;'e'
  2000  00F117  0A                 	db	10
  2001  00F118  0D                 	db	13
  2002  00F119  20                 	db	32
  2003  00F11A  20                 	db	32
  2004  00F11B  20                 	db	32
  2005  00F11C  4D                 	db	77	;'M'
  2006  00F11D  65                 	db	101	;'e'
  2007  00F11E  61                 	db	97	;'a'
  2008  00F11F  73                 	db	115	;'s'
  2009  00F120  75                 	db	117	;'u'
  2010  00F121  72                 	db	114	;'r'
  2011  00F122  65                 	db	101	;'e'
  2012  00F123  20                 	db	32
  2013  00F124  50                 	db	80	;'P'
  2014  00F125  6F                 	db	111	;'o'
  2015  00F126  77                 	db	119	;'w'
  2016  00F127  65                 	db	101	;'e'
  2017  00F128  72                 	db	114	;'r'
  2018  00F129  3F                 	db	63	;'?'
  2019  00F12A  3A                 	db	58	;':'
  2020  00F12B  20                 	db	32
  2021  00F12C  52                 	db	82	;'R'
  2022  00F12D  65                 	db	101	;'e'
  2023  00F12E  74                 	db	116	;'t'
  2024  00F12F  75                 	db	117	;'u'
  2025  00F130  72                 	db	114	;'r'
  2026  00F131  6E                 	db	110	;'n'
  2027  00F132  73                 	db	115	;'s'
  2028  00F133  20                 	db	32
  2029  00F134  74                 	db	116	;'t'
  2030  00F135  68                 	db	104	;'h'
  2031  00F136  65                 	db	101	;'e'
  2032  00F137  20                 	db	32
  2033  00F138  63                 	db	99	;'c'
  2034  00F139  61                 	db	97	;'a'
  2035  00F13A  6C                 	db	108	;'l'
  2036  00F13B  63                 	db	99	;'c'
  2037  00F13C  75                 	db	117	;'u'
  2038  00F13D  6C                 	db	108	;'l'
  2039  00F13E  61                 	db	97	;'a'
  2040  00F13F  74                 	db	116	;'t'
  2041  00F140  65                 	db	101	;'e'
  2042  00F141  64                 	db	100	;'d'
  2043  00F142  20                 	db	32
  2044  00F143  6F                 	db	111	;'o'
  2045  00F144  75                 	db	117	;'u'
  2046  00F145  74                 	db	116	;'t'
  2047  00F146  70                 	db	112	;'p'
  2048  00F147  75                 	db	117	;'u'
  2049  00F148  74                 	db	116	;'t'
  2050  00F149  20                 	db	32
  2051  00F14A  70                 	db	112	;'p'
  2052  00F14B  6F                 	db	111	;'o'
  2053  00F14C  77                 	db	119	;'w'
  2054  00F14D  65                 	db	101	;'e'
  2055  00F14E  72                 	db	114	;'r'
  2056  00F14F  20                 	db	32
  2057  00F150  69                 	db	105	;'i'
  2058  00F151  6E                 	db	110	;'n'
  2059  00F152  20                 	db	32
  2060  00F153  57                 	db	87	;'W'
  2061  00F154  61                 	db	97	;'a'
  2062  00F155  74                 	db	116	;'t'
  2063  00F156  74                 	db	116	;'t'
  2064  00F157  73                 	db	115	;'s'
  2065  00F158  0A                 	db	10
  2066  00F159  0D                 	db	13
  2067  00F15A  20                 	db	32
  2068  00F15B  20                 	db	32
  2069  00F15C  20                 	db	32
  2070  00F15D  4C                 	db	76	;'L'
  2071  00F15E  6F                 	db	111	;'o'
  2072  00F15F  61                 	db	97	;'a'
  2073  00F160  64                 	db	100	;'d'
  2074  00F161  20                 	db	32
  2075  00F162  4F                 	db	79	;'O'
  2076  00F163  6E                 	db	110	;'n'
  2077  00F164  20                 	db	32
  2078  00F165  54                 	db	84	;'T'
  2079  00F166  69                 	db	105	;'i'
  2080  00F167  6D                 	db	109	;'m'
  2081  00F168  65                 	db	101	;'e'
  2082  00F169  3F                 	db	63	;'?'
  2083  00F16A  3A                 	db	58	;':'
  2084  00F16B  20                 	db	32
  2085  00F16C  52                 	db	82	;'R'
  2086  00F16D  65                 	db	101	;'e'
  2087  00F16E  74                 	db	116	;'t'
  2088  00F16F  75                 	db	117	;'u'
  2089  00F170  72                 	db	114	;'r'
  2090  00F171  6E                 	db	110	;'n'
  2091  00F172  73                 	db	115	;'s'
  2092  00F173  20                 	db	32
  2093  00F174  6C                 	db	108	;'l'
  2094  00F175  6F                 	db	111	;'o'
  2095  00F176  61                 	db	97	;'a'
  2096  00F177  64                 	db	100	;'d'
  2097  00F178  20                 	db	32
  2098  00F179  6F                 	db	111	;'o'
  2099  00F17A  6E                 	db	110	;'n'
  2100  00F17B  20                 	db	32
  2101  00F17C  74                 	db	116	;'t'
  2102  00F17D  69                 	db	105	;'i'
  2103  00F17E  6D                 	db	109	;'m'
  2104  00F17F  65                 	db	101	;'e'
  2105  00F180  20                 	db	32
  2106  00F181  73                 	db	115	;'s'
  2107  00F182  69                 	db	105	;'i'
  2108  00F183  6E                 	db	110	;'n'
  2109  00F184  63                 	db	99	;'c'
  2110  00F185  65                 	db	101	;'e'
  2111  00F186  20                 	db	32
  2112  00F187  6C                 	db	108	;'l'
  2113  00F188  61                 	db	97	;'a'
  2114  00F189  73                 	db	115	;'s'
  2115  00F18A  74                 	db	116	;'t'
  2116  00F18B  20                 	db	32
  2117  00F18C  64                 	db	100	;'d'
  2118  00F18D  65                 	db	101	;'e'
  2119  00F18E  76                 	db	118	;'v'
  2120  00F18F  69                 	db	105	;'i'
  2121  00F190  63                 	db	99	;'c'
  2122  00F191  65                 	db	101	;'e'
  2123  00F192  20                 	db	32
  2124  00F193  72                 	db	114	;'r'
  2125  00F194  65                 	db	101	;'e'
  2126  00F195  73                 	db	115	;'s'
  2127  00F196  65                 	db	101	;'e'
  2128  00F197  74                 	db	116	;'t'
  2129  00F198  20                 	db	32
  2130  00F199  69                 	db	105	;'i'
  2131  00F19A  6E                 	db	110	;'n'
  2132  00F19B  20                 	db	32
  2133  00F19C  73                 	db	115	;'s'
  2134  00F19D  65                 	db	101	;'e'
  2135  00F19E  63                 	db	99	;'c'
  2136  00F19F  6F                 	db	111	;'o'
  2137  00F1A0  6E                 	db	110	;'n'
  2138  00F1A1  64                 	db	100	;'d'
  2139  00F1A2  73                 	db	115	;'s'
  2140  00F1A3  0A                 	db	10
  2141  00F1A4  0D                 	db	13
  2142  00F1A5  4F                 	db	79	;'O'
  2143  00F1A6  75                 	db	117	;'u'
  2144  00F1A7  74                 	db	116	;'t'
  2145  00F1A8  70                 	db	112	;'p'
  2146  00F1A9  75                 	db	117	;'u'
  2147  00F1AA  74                 	db	116	;'t'
  2148  00F1AB  20                 	db	32
  2149  00F1AC  43                 	db	67	;'C'
  2150  00F1AD  6F                 	db	111	;'o'
  2151  00F1AE  6E                 	db	110	;'n'
  2152  00F1AF  74                 	db	116	;'t'
  2153  00F1B0  72                 	db	114	;'r'
  2154  00F1B1  6F                 	db	111	;'o'
  2155  00F1B2  6C                 	db	108	;'l'
  2156  00F1B3  20                 	db	32
  2157  00F1B4  43                 	db	67	;'C'
  2158  00F1B5  6F                 	db	111	;'o'
  2159  00F1B6  6D                 	db	109	;'m'
  2160  00F1B7  6D                 	db	109	;'m'
  2161  00F1B8  61                 	db	97	;'a'
  2162  00F1B9  6E                 	db	110	;'n'
  2163  00F1BA  64                 	db	100	;'d'
  2164  00F1BB  73                 	db	115	;'s'
  2165  00F1BC  3A                 	db	58	;':'
  2166  00F1BD  0A                 	db	10
  2167  00F1BE  0D                 	db	13
  2168  00F1BF  20                 	db	32
  2169  00F1C0  20                 	db	32
  2170  00F1C1  20                 	db	32
  2171  00F1C2  45                 	db	69	;'E'
  2172  00F1C3  6E                 	db	110	;'n'
  2173  00F1C4  61                 	db	97	;'a'
  2174  00F1C5  62                 	db	98	;'b'
  2175  00F1C6  6C                 	db	108	;'l'
  2176  00F1C7  65                 	db	101	;'e'
  2177  00F1C8  20                 	db	32
  2178  00F1C9  44                 	db	68	;'D'
  2179  00F1CA  69                 	db	105	;'i'
  2180  00F1CB  6D                 	db	109	;'m'
  2181  00F1CC  6D                 	db	109	;'m'
  2182  00F1CD  69                 	db	105	;'i'
  2183  00F1CE  6E                 	db	110	;'n'
  2184  00F1CF  67                 	db	103	;'g'
  2185  00F1D0  3A                 	db	58	;':'
  2186  00F1D1  20                 	db	32
  2187  00F1D2  45                 	db	69	;'E'
  2188  00F1D3  6E                 	db	110	;'n'
  2189  00F1D4  61                 	db	97	;'a'
  2190  00F1D5  62                 	db	98	;'b'
  2191  00F1D6  6C                 	db	108	;'l'
  2192  00F1D7  65                 	db	101	;'e'
  2193  00F1D8  20                 	db	32
  2194  00F1D9  54                 	db	84	;'T'
  2195  00F1DA  52                 	db	82	;'R'
  2196  00F1DB  49                 	db	73	;'I'
  2197  00F1DC  41                 	db	65	;'A'
  2198  00F1DD  43                 	db	67	;'C'
  2199  00F1DE  20                 	db	32
  2200  00F1DF  6F                 	db	111	;'o'
  2201  00F1E0  75                 	db	117	;'u'
  2202  00F1E1  74                 	db	116	;'t'
  2203  00F1E2  70                 	db	112	;'p'
  2204  00F1E3  75                 	db	117	;'u'
  2205  00F1E4  74                 	db	116	;'t'
  2206  00F1E5  20                 	db	32
  2207  00F1E6  64                 	db	100	;'d'
  2208  00F1E7  69                 	db	105	;'i'
  2209  00F1E8  6D                 	db	109	;'m'
  2210  00F1E9  6D                 	db	109	;'m'
  2211  00F1EA  69                 	db	105	;'i'
  2212  00F1EB  6E                 	db	110	;'n'
  2213  00F1EC  67                 	db	103	;'g'
  2214  00F1ED  0A                 	db	10
  2215  00F1EE  0D                 	db	13
  2216  00F1EF  20                 	db	32
  2217  00F1F0  20                 	db	32
  2218  00F1F1  20                 	db	32
  2219  00F1F2  44                 	db	68	;'D'
  2220  00F1F3  69                 	db	105	;'i'
  2221  00F1F4  73                 	db	115	;'s'
  2222  00F1F5  61                 	db	97	;'a'
  2223  00F1F6  62                 	db	98	;'b'
  2224  00F1F7  6C                 	db	108	;'l'
  2225  00F1F8  65                 	db	101	;'e'
  2226  00F1F9  20                 	db	32
  2227  00F1FA  44                 	db	68	;'D'
  2228  00F1FB  69                 	db	105	;'i'
  2229  00F1FC  6D                 	db	109	;'m'
  2230  00F1FD  6D                 	db	109	;'m'
  2231  00F1FE  69                 	db	105	;'i'
  2232  00F1FF  6E                 	db	110	;'n'
  2233  00F200  67                 	db	103	;'g'
  2234  00F201  3A                 	db	58	;':'
  2235  00F202  20                 	db	32
  2236  00F203  44                 	db	68	;'D'
  2237  00F204  69                 	db	105	;'i'
  2238  00F205  73                 	db	115	;'s'
  2239  00F206  61                 	db	97	;'a'
  2240  00F207  62                 	db	98	;'b'
  2241  00F208  6C                 	db	108	;'l'
  2242  00F209  65                 	db	101	;'e'
  2243  00F20A  20                 	db	32
  2244  00F20B  54                 	db	84	;'T'
  2245  00F20C  52                 	db	82	;'R'
  2246  00F20D  49                 	db	73	;'I'
  2247  00F20E  41                 	db	65	;'A'
  2248  00F20F  43                 	db	67	;'C'
  2249  00F210  20                 	db	32
  2250  00F211  6F                 	db	111	;'o'
  2251  00F212  75                 	db	117	;'u'
  2252  00F213  74                 	db	116	;'t'
  2253  00F214  70                 	db	112	;'p'
  2254  00F215  75                 	db	117	;'u'
  2255  00F216  74                 	db	116	;'t'
  2256  00F217  20                 	db	32
  2257  00F218  64                 	db	100	;'d'
  2258  00F219  69                 	db	105	;'i'
  2259  00F21A  6D                 	db	109	;'m'
  2260  00F21B  6D                 	db	109	;'m'
  2261  00F21C  69                 	db	105	;'i'
  2262  00F21D  6E                 	db	110	;'n'
  2263  00F21E  67                 	db	103	;'g'
  2264  00F21F  0A                 	db	10
  2265  00F220  0D                 	db	13
  2266  00F221  20                 	db	32
  2267  00F222  20                 	db	32
  2268  00F223  20                 	db	32
  2269  00F224  45                 	db	69	;'E'
  2270  00F225  6E                 	db	110	;'n'
  2271  00F226  61                 	db	97	;'a'
  2272  00F227  62                 	db	98	;'b'
  2273  00F228  6C                 	db	108	;'l'
  2274  00F229  65                 	db	101	;'e'
  2275  00F22A  20                 	db	32
  2276  00F22B  4C                 	db	76	;'L'
  2277  00F22C  6F                 	db	111	;'o'
  2278  00F22D  61                 	db	97	;'a'
  2279  00F22E  64                 	db	100	;'d'
  2280  00F22F  3A                 	db	58	;':'
  2281  00F230  20                 	db	32
  2282  00F231  45                 	db	69	;'E'
  2283  00F232  6E                 	db	110	;'n'
  2284  00F233  61                 	db	97	;'a'
  2285  00F234  62                 	db	98	;'b'
  2286  00F235  6C                 	db	108	;'l'
  2287  00F236  65                 	db	101	;'e'
  2288  00F237  73                 	db	115	;'s'
  2289  00F238  20                 	db	32
  2290  00F239  74                 	db	116	;'t'
  2291  00F23A  68                 	db	104	;'h'
  2292  00F23B  65                 	db	101	;'e'
  2293  00F23C  20                 	db	32
  2294  00F23D  6F                 	db	111	;'o'
  2295  00F23E  75                 	db	117	;'u'
  2296  00F23F  74                 	db	116	;'t'
  2297  00F240  70                 	db	112	;'p'
  2298  00F241  75                 	db	117	;'u'
  2299  00F242  74                 	db	116	;'t'
  2300  00F243  20                 	db	32
  2301  00F244  54                 	db	84	;'T'
  2302  00F245  52                 	db	82	;'R'
  2303  00F246  49                 	db	73	;'I'
  2304  00F247  41                 	db	65	;'A'
  2305  00F248  43                 	db	67	;'C'
  2306  00F249  20                 	db	32
  2307  00F24A  77                 	db	119	;'w'
  2308  00F24B  69                 	db	105	;'i'
  2309  00F24C  74                 	db	116	;'t'
  2310  00F24D  68                 	db	104	;'h'
  2311  00F24E  20                 	db	32
  2312  00F24F  64                 	db	100	;'d'
  2313  00F250  69                 	db	105	;'i'
  2314  00F251  6D                 	db	109	;'m'
  2315  00F252  6D                 	db	109	;'m'
  2316  00F253  69                 	db	105	;'i'
  2317  00F254  6E                 	db	110	;'n'
  2318  00F255  67                 	db	103	;'g'
  2319  00F256  20                 	db	32
  2320  00F257  64                 	db	100	;'d'
  2321  00F258  69                 	db	105	;'i'
  2322  00F259  73                 	db	115	;'s'
  2323  00F25A  61                 	db	97	;'a'
  2324  00F25B  62                 	db	98	;'b'
  2325  00F25C  6C                 	db	108	;'l'
  2326  00F25D  65                 	db	101	;'e'
  2327  00F25E  64                 	db	100	;'d'
  2328  00F25F  0A                 	db	10
  2329  00F260  0D                 	db	13
  2330  00F261  20                 	db	32
  2331  00F262  20                 	db	32
  2332  00F263  20                 	db	32
  2333  00F264  44                 	db	68	;'D'
  2334  00F265  69                 	db	105	;'i'
  2335  00F266  73                 	db	115	;'s'
  2336  00F267  61                 	db	97	;'a'
  2337  00F268  62                 	db	98	;'b'
  2338  00F269  6C                 	db	108	;'l'
  2339  00F26A  65                 	db	101	;'e'
  2340  00F26B  20                 	db	32
  2341  00F26C  4C                 	db	76	;'L'
  2342  00F26D  6F                 	db	111	;'o'
  2343  00F26E  61                 	db	97	;'a'
  2344  00F26F  64                 	db	100	;'d'
  2345  00F270  3A                 	db	58	;':'
  2346  00F271  20                 	db	32
  2347  00F272  44                 	db	68	;'D'
  2348  00F273  69                 	db	105	;'i'
  2349  00F274  73                 	db	115	;'s'
  2350  00F275  61                 	db	97	;'a'
  2351  00F276  62                 	db	98	;'b'
  2352  00F277  6C                 	db	108	;'l'
  2353  00F278  65                 	db	101	;'e'
  2354  00F279  73                 	db	115	;'s'
  2355  00F27A  20                 	db	32
  2356  00F27B  74                 	db	116	;'t'
  2357  00F27C  68                 	db	104	;'h'
  2358  00F27D  65                 	db	101	;'e'
  2359  00F27E  20                 	db	32
  2360  00F27F  6F                 	db	111	;'o'
  2361  00F280  75                 	db	117	;'u'
  2362  00F281  74                 	db	116	;'t'
  2363  00F282  70                 	db	112	;'p'
  2364  00F283  75                 	db	117	;'u'
  2365  00F284  74                 	db	116	;'t'
  2366  00F285  20                 	db	32
  2367  00F286  54                 	db	84	;'T'
  2368  00F287  52                 	db	82	;'R'
  2369  00F288  49                 	db	73	;'I'
  2370  00F289  41                 	db	65	;'A'
  2371  00F28A  43                 	db	67	;'C'
  2372  00F28B  20                 	db	32
  2373  00F28C  63                 	db	99	;'c'
  2374  00F28D  6F                 	db	111	;'o'
  2375  00F28E  6D                 	db	109	;'m'
  2376  00F28F  70                 	db	112	;'p'
  2377  00F290  6C                 	db	108	;'l'
  2378  00F291  65                 	db	101	;'e'
  2379  00F292  74                 	db	116	;'t'
  2380  00F293  65                 	db	101	;'e'
  2381  00F294  6C                 	db	108	;'l'
  2382  00F295  79                 	db	121	;'y'
  2383  00F296  0A                 	db	10
  2384  00F297  0D                 	db	13
  2385  00F298  20                 	db	32
  2386  00F299  20                 	db	32
  2387  00F29A  20                 	db	32
  2388  00F29B  4C                 	db	76	;'L'
  2389  00F29C  6F                 	db	111	;'o'
  2390  00F29D  61                 	db	97	;'a'
  2391  00F29E  64                 	db	100	;'d'
  2392  00F29F  20                 	db	32
  2393  00F2A0  45                 	db	69	;'E'
  2394  00F2A1  6E                 	db	110	;'n'
  2395  00F2A2  61                 	db	97	;'a'
  2396  00F2A3  62                 	db	98	;'b'
  2397  00F2A4  6C                 	db	108	;'l'
  2398  00F2A5  65                 	db	101	;'e'
  2399  00F2A6  64                 	db	100	;'d'
  2400  00F2A7  3F                 	db	63	;'?'
  2401  00F2A8  3A                 	db	58	;':'
  2402  00F2A9  20                 	db	32
  2403  00F2AA  52                 	db	82	;'R'
  2404  00F2AB  65                 	db	101	;'e'
  2405  00F2AC  74                 	db	116	;'t'
  2406  00F2AD  75                 	db	117	;'u'
  2407  00F2AE  72                 	db	114	;'r'
  2408  00F2AF  6E                 	db	110	;'n'
  2409  00F2B0  73                 	db	115	;'s'
  2410  00F2B1  20                 	db	32
  2411  00F2B2  69                 	db	105	;'i'
  2412  00F2B3  66                 	db	102	;'f'
  2413  00F2B4  20                 	db	32
  2414  00F2B5  74                 	db	116	;'t'
  2415  00F2B6  68                 	db	104	;'h'
  2416  00F2B7  65                 	db	101	;'e'
  2417  00F2B8  20                 	db	32
  2418  00F2B9  6F                 	db	111	;'o'
  2419  00F2BA  75                 	db	117	;'u'
  2420  00F2BB  74                 	db	116	;'t'
  2421  00F2BC  70                 	db	112	;'p'
  2422  00F2BD  75                 	db	117	;'u'
  2423  00F2BE  74                 	db	116	;'t'
  2424  00F2BF  20                 	db	32
  2425  00F2C0  6C                 	db	108	;'l'
  2426  00F2C1  6F                 	db	111	;'o'
  2427  00F2C2  61                 	db	97	;'a'
  2428  00F2C3  64                 	db	100	;'d'
  2429  00F2C4  20                 	db	32
  2430  00F2C5  69                 	db	105	;'i'
  2431  00F2C6  73                 	db	115	;'s'
  2432  00F2C7  20                 	db	32
  2433  00F2C8  65                 	db	101	;'e'
  2434  00F2C9  6E                 	db	110	;'n'
  2435  00F2CA  61                 	db	97	;'a'
  2436  00F2CB  62                 	db	98	;'b'
  2437  00F2CC  6C                 	db	108	;'l'
  2438  00F2CD  65                 	db	101	;'e'
  2439  00F2CE  64                 	db	100	;'d'
  2440  00F2CF  20                 	db	32
  2441  00F2D0  6F                 	db	111	;'o'
  2442  00F2D1  72                 	db	114	;'r'
  2443  00F2D2  20                 	db	32
  2444  00F2D3  64                 	db	100	;'d'
  2445  00F2D4  69                 	db	105	;'i'
  2446  00F2D5  73                 	db	115	;'s'
  2447  00F2D6  61                 	db	97	;'a'
  2448  00F2D7  62                 	db	98	;'b'
  2449  00F2D8  6C                 	db	108	;'l'
  2450  00F2D9  65                 	db	101	;'e'
  2451  00F2DA  64                 	db	100	;'d'
  2452  00F2DB  0A                 	db	10
  2453  00F2DC  0D                 	db	13
  2454  00F2DD  20                 	db	32
  2455  00F2DE  20                 	db	32
  2456  00F2DF  20                 	db	32
  2457  00F2E0  44                 	db	68	;'D'
  2458  00F2E1  69                 	db	105	;'i'
  2459  00F2E2  6D                 	db	109	;'m'
  2460  00F2E3  6D                 	db	109	;'m'
  2461  00F2E4  69                 	db	105	;'i'
  2462  00F2E5  6E                 	db	110	;'n'
  2463  00F2E6  67                 	db	103	;'g'
  2464  00F2E7  20                 	db	32
  2465  00F2E8  45                 	db	69	;'E'
  2466  00F2E9  6E                 	db	110	;'n'
  2467  00F2EA  61                 	db	97	;'a'
  2468  00F2EB  62                 	db	98	;'b'
  2469  00F2EC  6C                 	db	108	;'l'
  2470  00F2ED  65                 	db	101	;'e'
  2471  00F2EE  64                 	db	100	;'d'
  2472  00F2EF  3F                 	db	63	;'?'
  2473  00F2F0  3A                 	db	58	;':'
  2474  00F2F1  20                 	db	32
  2475  00F2F2  52                 	db	82	;'R'
  2476  00F2F3  65                 	db	101	;'e'
  2477  00F2F4  74                 	db	116	;'t'
  2478  00F2F5  75                 	db	117	;'u'
  2479  00F2F6  72                 	db	114	;'r'
  2480  00F2F7  6E                 	db	110	;'n'
  2481  00F2F8  73                 	db	115	;'s'
  2482  00F2F9  20                 	db	32
  2483  00F2FA  69                 	db	105	;'i'
  2484  00F2FB  66                 	db	102	;'f'
  2485  00F2FC  20                 	db	32
  2486  00F2FD  64                 	db	100	;'d'
  2487  00F2FE  69                 	db	105	;'i'
  2488  00F2FF  6D                 	db	109	;'m'
  2489  00F300  6D                 	db	109	;'m'
  2490  00F301  69                 	db	105	;'i'
  2491  00F302  6E                 	db	110	;'n'
  2492  00F303  67                 	db	103	;'g'
  2493  00F304  20                 	db	32
  2494  00F305  6F                 	db	111	;'o'
  2495  00F306  66                 	db	102	;'f'
  2496  00F307  20                 	db	32
  2497  00F308  74                 	db	116	;'t'
  2498  00F309  68                 	db	104	;'h'
  2499  00F30A  65                 	db	101	;'e'
  2500  00F30B  20                 	db	32
  2501  00F30C  6F                 	db	111	;'o'
  2502  00F30D  75                 	db	117	;'u'
  2503  00F30E  74                 	db	116	;'t'
  2504  00F30F  70                 	db	112	;'p'
  2505  00F310  75                 	db	117	;'u'
  2506  00F311  74                 	db	116	;'t'
  2507  00F312  20                 	db	32
  2508  00F313  6C                 	db	108	;'l'
  2509  00F314  6F                 	db	111	;'o'
  2510  00F315  61                 	db	97	;'a'
  2511  00F316  64                 	db	100	;'d'
  2512  00F317  20                 	db	32
  2513  00F318  69                 	db	105	;'i'
  2514  00F319  73                 	db	115	;'s'
  2515  00F31A  20                 	db	32
  2516  00F31B  65                 	db	101	;'e'
  2517  00F31C  6E                 	db	110	;'n'
  2518  00F31D  61                 	db	97	;'a'
  2519  00F31E  62                 	db	98	;'b'
  2520  00F31F  6C                 	db	108	;'l'
  2521  00F320  65                 	db	101	;'e'
  2522  00F321  64                 	db	100	;'d'
  2523  00F322  20                 	db	32
  2524  00F323  6F                 	db	111	;'o'
  2525  00F324  72                 	db	114	;'r'
  2526  00F325  20                 	db	32
  2527  00F326  6E                 	db	110	;'n'
  2528  00F327  6F                 	db	111	;'o'
  2529  00F328  74                 	db	116	;'t'
  2530  00F329  0A                 	db	10
  2531  00F32A  0D                 	db	13
  2532  00F32B  20                 	db	32
  2533  00F32C  20                 	db	32
  2534  00F32D  20                 	db	32
  2535  00F32E  53                 	db	83	;'S'
  2536  00F32F  65                 	db	101	;'e'
  2537  00F330  74                 	db	116	;'t'
  2538  00F331  20                 	db	32
  2539  00F332  44                 	db	68	;'D'
  2540  00F333  69                 	db	105	;'i'
  2541  00F334  6D                 	db	109	;'m'
  2542  00F335  6D                 	db	109	;'m'
  2543  00F336  69                 	db	105	;'i'
  2544  00F337  6E                 	db	110	;'n'
  2545  00F338  67                 	db	103	;'g'
  2546  00F339  20                 	db	32
  2547  00F33A  50                 	db	80	;'P'
  2548  00F33B  65                 	db	101	;'e'
  2549  00F33C  72                 	db	114	;'r'
  2550  00F33D  63                 	db	99	;'c'
  2551  00F33E  65                 	db	101	;'e'
  2552  00F33F  6E                 	db	110	;'n'
  2553  00F340  74                 	db	116	;'t'
  2554  00F341  61                 	db	97	;'a'
  2555  00F342  67                 	db	103	;'g'
  2556  00F343  65                 	db	101	;'e'
  2557  00F344  3A                 	db	58	;':'
  2558  00F345  20                 	db	32
  2559  00F346  3C                 	db	60	;'<'
  2560  00F347  78                 	db	120	;'x'
  2561  00F348  3E                 	db	62	;'>'
  2562  00F349  3A                 	db	58	;':'
  2563  00F34A  20                 	db	32
  2564  00F34B  53                 	db	83	;'S'
  2565  00F34C  65                 	db	101	;'e'
  2566  00F34D  74                 	db	116	;'t'
  2567  00F34E  73                 	db	115	;'s'
  2568  00F34F  20                 	db	32
  2569  00F350  74                 	db	116	;'t'
  2570  00F351  68                 	db	104	;'h'
  2571  00F352  65                 	db	101	;'e'
  2572  00F353  20                 	db	32
  2573  00F354  6F                 	db	111	;'o'
  2574  00F355  75                 	db	117	;'u'
  2575  00F356  74                 	db	116	;'t'
  2576  00F357  70                 	db	112	;'p'
  2577  00F358  75                 	db	117	;'u'
  2578  00F359  74                 	db	116	;'t'
  2579  00F35A  20                 	db	32
  2580  00F35B  64                 	db	100	;'d'
  2581  00F35C  69                 	db	105	;'i'
  2582  00F35D  6D                 	db	109	;'m'
  2583  00F35E  6D                 	db	109	;'m'
  2584  00F35F  69                 	db	105	;'i'
  2585  00F360  6E                 	db	110	;'n'
  2586  00F361  67                 	db	103	;'g'
  2587  00F362  20                 	db	32
  2588  00F363  70                 	db	112	;'p'
  2589  00F364  65                 	db	101	;'e'
  2590  00F365  72                 	db	114	;'r'
  2591  00F366  63                 	db	99	;'c'
  2592  00F367  65                 	db	101	;'e'
  2593  00F368  6E                 	db	110	;'n'
  2594  00F369  74                 	db	116	;'t'
  2595  00F36A  61                 	db	97	;'a'
  2596  00F36B  67                 	db	103	;'g'
  2597  00F36C  65                 	db	101	;'e'
  2598  00F36D  20                 	db	32
  2599  00F36E  61                 	db	97	;'a'
  2600  00F36F  73                 	db	115	;'s'
  2601  00F370  20                 	db	32
  2602  00F371  78                 	db	120	;'x'
  2603  00F372  20                 	db	32
  2604  00F373  70                 	db	112	;'p'
  2605  00F374  65                 	db	101	;'e'
  2606  00F375  72                 	db	114	;'r'
  2607  00F376  63                 	db	99	;'c'
  2608  00F377  65                 	db	101	;'e'
  2609  00F378  6E                 	db	110	;'n'
  2610  00F379  74                 	db	116	;'t'
  2611  00F37A  0A                 	db	10
  2612  00F37B  0D                 	db	13
  2613  00F37C  00                 	db	0
  2614  00F37D  20                 	db	32
  2615  00F37E  20                 	db	32
  2616  00F37F  20                 	db	32
  2617  00F380  20                 	db	32
  2618  00F381  42                 	db	66	;'B'
  2619  00F382  6F                 	db	111	;'o'
  2620  00F383  6F                 	db	111	;'o'
  2621  00F384  74                 	db	116	;'t'
  2622  00F385  20                 	db	32
  2623  00F386  63                 	db	99	;'c'
  2624  00F387  6F                 	db	111	;'o'
  2625  00F388  6D                 	db	109	;'m'
  2626  00F389  70                 	db	112	;'p'
  2627  00F38A  6C                 	db	108	;'l'
  2628  00F38B  65                 	db	101	;'e'
  2629  00F38C  74                 	db	116	;'t'
  2630  00F38D  65                 	db	101	;'e'
  2631  00F38E  0A                 	db	10
  2632  00F38F  0D                 	db	13
  2633  00F390  20                 	db	32
  2634  00F391  20                 	db	32
  2635  00F392  20                 	db	32
  2636  00F393  20                 	db	32
  2637  00F394  50                 	db	80	;'P'
  2638  00F395  49                 	db	73	;'I'
  2639  00F396  43                 	db	67	;'C'
  2640  00F397  31                 	db	49	;'1'
  2641  00F398  38                 	db	56	;'8'
  2642  00F399  46                 	db	70	;'F'
  2643  00F39A  36                 	db	54	;'6'
  2644  00F39B  37                 	db	55	;'7'
  2645  00F39C  4B                 	db	75	;'K'
  2646  00F39D  34                 	db	52	;'4'
  2647  00F39E  30                 	db	48	;'0'
  2648  00F39F  20                 	db	32
  2649  00F3A0  6D                 	db	109	;'m'
  2650  00F3A1  54                 	db	84	;'T'
  2651  00F3A2  6F                 	db	111	;'o'
  2652  00F3A3  75                 	db	117	;'u'
  2653  00F3A4  63                 	db	99	;'c'
  2654  00F3A5  68                 	db	104	;'h'
  2655  00F3A6  20                 	db	32
  2656  00F3A7  54                 	db	84	;'T'
  2657  00F3A8  65                 	db	101	;'e'
  2658  00F3A9  73                 	db	115	;'s'
  2659  00F3AA  74                 	db	116	;'t'
  2660  00F3AB  20                 	db	32
  2661  00F3AC  42                 	db	66	;'B'
  2662  00F3AD  6F                 	db	111	;'o'
  2663  00F3AE  61                 	db	97	;'a'
  2664  00F3AF  72                 	db	114	;'r'
  2665  00F3B0  64                 	db	100	;'d'
  2666  00F3B1  0A                 	db	10
  2667  00F3B2  0D                 	db	13
  2668  00F3B3  20                 	db	32
  2669  00F3B4  20                 	db	32
  2670  00F3B5  20                 	db	32
  2671  00F3B6  20                 	db	32
  2672  00F3B7  45                 	db	69	;'E'
  2673  00F3B8  76                 	db	118	;'v'
  2674  00F3B9  61                 	db	97	;'a'
  2675  00F3BA  6C                 	db	108	;'l'
  2676  00F3BB  75                 	db	117	;'u'
  2677  00F3BC  61                 	db	97	;'a'
  2678  00F3BD  74                 	db	116	;'t'
  2679  00F3BE  65                 	db	101	;'e'
  2680  00F3BF  73                 	db	115	;'s'
  2681  00F3C0  20                 	db	32
  2682  00F3C1  74                 	db	116	;'t'
  2683  00F3C2  68                 	db	104	;'h'
  2684  00F3C3  65                 	db	101	;'e'
  2685  00F3C4  20                 	db	32
  2686  00F3C5  6D                 	db	109	;'m'
  2687  00F3C6  54                 	db	84	;'T'
  2688  00F3C7  6F                 	db	111	;'o'
  2689  00F3C8  75                 	db	117	;'u'
  2690  00F3C9  63                 	db	99	;'c'
  2691  00F3CA  68                 	db	104	;'h'
  2692  00F3CB  20                 	db	32
  2693  00F3CC  63                 	db	99	;'c'
  2694  00F3CD  61                 	db	97	;'a'
  2695  00F3CE  70                 	db	112	;'p'
  2696  00F3CF  61                 	db	97	;'a'
  2697  00F3D0  63                 	db	99	;'c'
  2698  00F3D1  69                 	db	105	;'i'
  2699  00F3D2  74                 	db	116	;'t'
  2700  00F3D3  69                 	db	105	;'i'
  2701  00F3D4  76                 	db	118	;'v'
  2702  00F3D5  65                 	db	101	;'e'
  2703  00F3D6  20                 	db	32
  2704  00F3D7  74                 	db	116	;'t'
  2705  00F3D8  6F                 	db	111	;'o'
  2706  00F3D9  75                 	db	117	;'u'
  2707  00F3DA  63                 	db	99	;'c'
  2708  00F3DB  68                 	db	104	;'h'
  2709  00F3DC  20                 	db	32
  2710  00F3DD  6C                 	db	108	;'l'
  2711  00F3DE  69                 	db	105	;'i'
  2712  00F3DF  62                 	db	98	;'b'
  2713  00F3E0  72                 	db	114	;'r'
  2714  00F3E1  61                 	db	97	;'a'
  2715  00F3E2  72                 	db	114	;'r'
  2716  00F3E3  79                 	db	121	;'y'
  2717  00F3E4  20                 	db	32
  2718  00F3E5  64                 	db	100	;'d'
  2719  00F3E6  69                 	db	105	;'i'
  2720  00F3E7  73                 	db	115	;'s'
  2721  00F3E8  74                 	db	116	;'t'
  2722  00F3E9  72                 	db	114	;'r'
  2723  00F3EA  69                 	db	105	;'i'
  2724  00F3EB  62                 	db	98	;'b'
  2725  00F3EC  75                 	db	117	;'u'
  2726  00F3ED  74                 	db	116	;'t'
  2727  00F3EE  65                 	db	101	;'e'
  2728  00F3EF  64                 	db	100	;'d'
  2729  00F3F0  20                 	db	32
  2730  00F3F1  62                 	db	98	;'b'
  2731  00F3F2  79                 	db	121	;'y'
  2732  00F3F3  20                 	db	32
  2733  00F3F4  4D                 	db	77	;'M'
  2734  00F3F5  69                 	db	105	;'i'
  2735  00F3F6  63                 	db	99	;'c'
  2736  00F3F7  72                 	db	114	;'r'
  2737  00F3F8  6F                 	db	111	;'o'
  2738  00F3F9  63                 	db	99	;'c'
  2739  00F3FA  68                 	db	104	;'h'
  2740  00F3FB  69                 	db	105	;'i'
  2741  00F3FC  70                 	db	112	;'p'
  2742  00F3FD  0A                 	db	10
  2743  00F3FE  0D                 	db	13
  2744  00F3FF  20                 	db	32
  2745  00F400  20                 	db	32
  2746  00F401  20                 	db	32
  2747  00F402  20                 	db	32
  2748  00F403  53                 	db	83	;'S'
  2749  00F404  65                 	db	101	;'e'
  2750  00F405  74                 	db	116	;'t'
  2751  00F406  73                 	db	115	;'s'
  2752  00F407  20                 	db	32
  2753  00F408  74                 	db	116	;'t'
  2754  00F409  68                 	db	104	;'h'
  2755  00F40A  65                 	db	101	;'e'
  2756  00F40B  20                 	db	32
  2757  00F40C  73                 	db	115	;'s'
  2758  00F40D  74                 	db	116	;'t'
  2759  00F40E  61                 	db	97	;'a'
  2760  00F40F  74                 	db	116	;'t'
  2761  00F410  65                 	db	101	;'e'
  2762  00F411  20                 	db	32
  2763  00F412  6F                 	db	111	;'o'
  2764  00F413  66                 	db	102	;'f'
  2765  00F414  20                 	db	32
  2766  00F415  66                 	db	102	;'f'
  2767  00F416  69                 	db	105	;'i'
  2768  00F417  76                 	db	118	;'v'
  2769  00F418  65                 	db	101	;'e'
  2770  00F419  20                 	db	32
  2771  00F41A  4C                 	db	76	;'L'
  2772  00F41B  45                 	db	69	;'E'
  2773  00F41C  44                 	db	68	;'D'
  2774  00F41D  73                 	db	115	;'s'
  2775  00F41E  20                 	db	32
  2776  00F41F  62                 	db	98	;'b'
  2777  00F420  61                 	db	97	;'a'
  2778  00F421  73                 	db	115	;'s'
  2779  00F422  65                 	db	101	;'e'
  2780  00F423  64                 	db	100	;'d'
  2781  00F424  20                 	db	32
  2782  00F425  6F                 	db	111	;'o'
  2783  00F426  6E                 	db	110	;'n'
  2784  00F427  20                 	db	32
  2785  00F428  6D                 	db	109	;'m'
  2786  00F429  54                 	db	84	;'T'
  2787  00F42A  6F                 	db	111	;'o'
  2788  00F42B  75                 	db	117	;'u'
  2789  00F42C  63                 	db	99	;'c'
  2790  00F42D  68                 	db	104	;'h'
  2791  00F42E  20                 	db	32
  2792  00F42F  63                 	db	99	;'c'
  2793  00F430  61                 	db	97	;'a'
  2794  00F431  70                 	db	112	;'p'
  2795  00F432  61                 	db	97	;'a'
  2796  00F433  63                 	db	99	;'c'
  2797  00F434  69                 	db	105	;'i'
  2798  00F435  74                 	db	116	;'t'
  2799  00F436  69                 	db	105	;'i'
  2800  00F437  76                 	db	118	;'v'
  2801  00F438  65                 	db	101	;'e'
  2802  00F439  20                 	db	32
  2803  00F43A  70                 	db	112	;'p'
  2804  00F43B  75                 	db	117	;'u'
  2805  00F43C  73                 	db	115	;'s'
  2806  00F43D  68                 	db	104	;'h'
  2807  00F43E  62                 	db	98	;'b'
  2808  00F43F  75                 	db	117	;'u'
  2809  00F440  74                 	db	116	;'t'
  2810  00F441  74                 	db	116	;'t'
  2811  00F442  6F                 	db	111	;'o'
  2812  00F443  6E                 	db	110	;'n'
  2813  00F444  73                 	db	115	;'s'
  2814  00F445  0A                 	db	10
  2815  00F446  0D                 	db	13
  2816  00F447  20                 	db	32
  2817  00F448  20                 	db	32
  2818  00F449  20                 	db	32
  2819  00F44A  20                 	db	32
  2820  00F44B  42                 	db	66	;'B'
  2821  00F44C  61                 	db	97	;'a'
  2822  00F44D  75                 	db	117	;'u'
  2823  00F44E  64                 	db	100	;'d'
  2824  00F44F  20                 	db	32
  2825  00F450  72                 	db	114	;'r'
  2826  00F451  61                 	db	97	;'a'
  2827  00F452  74                 	db	116	;'t'
  2828  00F453  65                 	db	101	;'e'
  2829  00F454  3A                 	db	58	;':'
  2830  00F455  20                 	db	32
  2831  00F456  31                 	db	49	;'1'
  2832  00F457  31                 	db	49	;'1'
  2833  00F458  35                 	db	53	;'5'
  2834  00F459  32                 	db	50	;'2'
  2835  00F45A  30                 	db	48	;'0'
  2836  00F45B  30                 	db	48	;'0'
  2837  00F45C  20                 	db	32
  2838  00F45D  62                 	db	98	;'b'
  2839  00F45E  70                 	db	112	;'p'
  2840  00F45F  73                 	db	115	;'s'
  2841  00F460  0A                 	db	10
  2842  00F461  0D                 	db	13
  2843  00F462  20                 	db	32
  2844  00F463  20                 	db	32
  2845  00F464  20                 	db	32
  2846  00F465  20                 	db	32
  2847  00F466  4E                 	db	78	;'N'
  2848  00F467  6F                 	db	111	;'o'
  2849  00F468  20                 	db	32
  2850  00F469  70                 	db	112	;'p'
  2851  00F46A  61                 	db	97	;'a'
  2852  00F46B  72                 	db	114	;'r'
  2853  00F46C  69                 	db	105	;'i'
  2854  00F46D  74                 	db	116	;'t'
  2855  00F46E  79                 	db	121	;'y'
  2856  00F46F  2C                 	db	44
  2857  00F470  20                 	db	32
  2858  00F471  38                 	db	56	;'8'
  2859  00F472  20                 	db	32
  2860  00F473  62                 	db	98	;'b'
  2861  00F474  69                 	db	105	;'i'
  2862  00F475  74                 	db	116	;'t'
  2863  00F476  73                 	db	115	;'s'
  2864  00F477  2C                 	db	44
  2865  00F478  20                 	db	32
  2866  00F479  6E                 	db	110	;'n'
  2867  00F47A  6F                 	db	111	;'o'
  2868  00F47B  20                 	db	32
  2869  00F47C  66                 	db	102	;'f'
  2870  00F47D  6C                 	db	108	;'l'
  2871  00F47E  6F                 	db	111	;'o'
  2872  00F47F  77                 	db	119	;'w'
  2873  00F480  20                 	db	32
  2874  00F481  63                 	db	99	;'c'
  2875  00F482  6F                 	db	111	;'o'
  2876  00F483  6E                 	db	110	;'n'
  2877  00F484  74                 	db	116	;'t'
  2878  00F485  72                 	db	114	;'r'
  2879  00F486  6F                 	db	111	;'o'
  2880  00F487  6C                 	db	108	;'l'
  2881  00F488  2C                 	db	44
  2882  00F489  20                 	db	32
  2883  00F48A  31                 	db	49	;'1'
  2884  00F48B  20                 	db	32
  2885  00F48C  73                 	db	115	;'s'
  2886  00F48D  74                 	db	116	;'t'
  2887  00F48E  6F                 	db	111	;'o'
  2888  00F48F  70                 	db	112	;'p'
  2889  00F490  20                 	db	32
  2890  00F491  62                 	db	98	;'b'
  2891  00F492  69                 	db	105	;'i'
  2892  00F493  74                 	db	116	;'t'
  2893  00F494  0A                 	db	10
  2894  00F495  0D                 	db	13
  2895  00F496  20                 	db	32
  2896  00F497  20                 	db	32
  2897  00F498  20                 	db	32
  2898  00F499  20                 	db	32
  2899  00F49A  43                 	db	67	;'C'
  2900  00F49B  6F                 	db	111	;'o'
  2901  00F49C  6D                 	db	109	;'m'
  2902  00F49D  6D                 	db	109	;'m'
  2903  00F49E  61                 	db	97	;'a'
  2904  00F49F  6E                 	db	110	;'n'
  2905  00F4A0  64                 	db	100	;'d'
  2906  00F4A1  73                 	db	115	;'s'
  2907  00F4A2  20                 	db	32
  2908  00F4A3  61                 	db	97	;'a'
  2909  00F4A4  72                 	db	114	;'r'
  2910  00F4A5  65                 	db	101	;'e'
  2911  00F4A6  20                 	db	32
  2912  00F4A7  63                 	db	99	;'c'
  2913  00F4A8  61                 	db	97	;'a'
  2914  00F4A9  73                 	db	115	;'s'
  2915  00F4AA  65                 	db	101	;'e'
  2916  00F4AB  20                 	db	32
  2917  00F4AC  73                 	db	115	;'s'
  2918  00F4AD  65                 	db	101	;'e'
  2919  00F4AE  6E                 	db	110	;'n'
  2920  00F4AF  73                 	db	115	;'s'
  2921  00F4B0  69                 	db	105	;'i'
  2922  00F4B1  74                 	db	116	;'t'
  2923  00F4B2  69                 	db	105	;'i'
  2924  00F4B3  76                 	db	118	;'v'
  2925  00F4B4  65                 	db	101	;'e'
  2926  00F4B5  0A                 	db	10
  2927  00F4B6  0D                 	db	13
  2928  00F4B7  20                 	db	32
  2929  00F4B8  20                 	db	32
  2930  00F4B9  20                 	db	32
  2931  00F4BA  20                 	db	32
  2932  00F4BB  45                 	db	69	;'E'
  2933  00F4BC  6E                 	db	110	;'n'
  2934  00F4BD  74                 	db	116	;'t'
  2935  00F4BE  65                 	db	101	;'e'
  2936  00F4BF  72                 	db	114	;'r'
  2937  00F4C0  20                 	db	32
  2938  00F4C1  61                 	db	97	;'a'
  2939  00F4C2  20                 	db	32
  2940  00F4C3  63                 	db	99	;'c'
  2941  00F4C4  6F                 	db	111	;'o'
  2942  00F4C5  6D                 	db	109	;'m'
  2943  00F4C6  6D                 	db	109	;'m'
  2944  00F4C7  61                 	db	97	;'a'
  2945  00F4C8  6E                 	db	110	;'n'
  2946  00F4C9  64                 	db	100	;'d'
  2947  00F4CA  2C                 	db	44
  2948  00F4CB  20                 	db	32
  2949  00F4CC  6F                 	db	111	;'o'
  2950  00F4CD  72                 	db	114	;'r'
  2951  00F4CE  20                 	db	32
  2952  00F4CF  65                 	db	101	;'e'
  2953  00F4D0  6E                 	db	110	;'n'
  2954  00F4D1  74                 	db	116	;'t'
  2955  00F4D2  65                 	db	101	;'e'
  2956  00F4D3  72                 	db	114	;'r'
  2957  00F4D4  20                 	db	32
  2958  00F4D5  48                 	db	72	;'H'
  2959  00F4D6  65                 	db	101	;'e'
  2960  00F4D7  6C                 	db	108	;'l'
  2961  00F4D8  70                 	db	112	;'p'
  2962  00F4D9  20                 	db	32
  2963  00F4DA  66                 	db	102	;'f'
  2964  00F4DB  6F                 	db	111	;'o'
  2965  00F4DC  72                 	db	114	;'r'
  2966  00F4DD  20                 	db	32
  2967  00F4DE  6C                 	db	108	;'l'
  2968  00F4DF  69                 	db	105	;'i'
  2969  00F4E0  73                 	db	115	;'s'
  2970  00F4E1  74                 	db	116	;'t'
  2971  00F4E2  20                 	db	32
  2972  00F4E3  6F                 	db	111	;'o'
  2973  00F4E4  66                 	db	102	;'f'
  2974  00F4E5  20                 	db	32
  2975  00F4E6  63                 	db	99	;'c'
  2976  00F4E7  6F                 	db	111	;'o'
  2977  00F4E8  6D                 	db	109	;'m'
  2978  00F4E9  6D                 	db	109	;'m'
  2979  00F4EA  61                 	db	97	;'a'
  2980  00F4EB  6E                 	db	110	;'n'
  2981  00F4EC  64                 	db	100	;'d'
  2982  00F4ED  73                 	db	115	;'s'
  2983  00F4EE  0A                 	db	10
  2984  00F4EF  0D                 	db	13
  2985  00F4F0  00                 	db	0
  2986  00F4F1                     STR_111:
  2987  00F4F1  49                 	db	73	;'I'
  2988  00F4F2  66                 	db	102	;'f'
  2989  00F4F3  20                 	db	32
  2990  00F4F4  79                 	db	121	;'y'
  2991  00F4F5  6F                 	db	111	;'o'
  2992  00F4F6  75                 	db	117	;'u'
  2993  00F4F7  27                 	db	39
  2994  00F4F8  64                 	db	100	;'d'
  2995  00F4F9  20                 	db	32
  2996  00F4FA  6C                 	db	108	;'l'
  2997  00F4FB  69                 	db	105	;'i'
  2998  00F4FC  6B                 	db	107	;'k'
  2999  00F4FD  65                 	db	101	;'e'
  3000  00F4FE  20                 	db	32
  3001  00F4FF  74                 	db	116	;'t'
  3002  00F500  6F                 	db	111	;'o'
  3003  00F501  20                 	db	32
  3004  00F502  63                 	db	99	;'c'
  3005  00F503  6F                 	db	111	;'o'
  3006  00F504  6D                 	db	109	;'m'
  3007  00F505  70                 	db	112	;'p'
  3008  00F506  6C                 	db	108	;'l'
  3009  00F507  65                 	db	101	;'e'
  3010  00F508  74                 	db	116	;'t'
  3011  00F509  65                 	db	101	;'e'
  3012  00F50A  6C                 	db	108	;'l'
  3013  00F50B  79                 	db	121	;'y'
  3014  00F50C  20                 	db	32
  3015  00F50D  65                 	db	101	;'e'
  3016  00F50E  6E                 	db	110	;'n'
  3017  00F50F  61                 	db	97	;'a'
  3018  00F510  62                 	db	98	;'b'
  3019  00F511  6C                 	db	108	;'l'
  3020  00F512  65                 	db	101	;'e'
  3021  00F513  20                 	db	32
  3022  00F514  6F                 	db	111	;'o'
  3023  00F515  72                 	db	114	;'r'
  3024  00F516  20                 	db	32
  3025  00F517  64                 	db	100	;'d'
  3026  00F518  69                 	db	105	;'i'
  3027  00F519  73                 	db	115	;'s'
  3028  00F51A  61                 	db	97	;'a'
  3029  00F51B  62                 	db	98	;'b'
  3030  00F51C  6C                 	db	108	;'l'
  3031  00F51D  65                 	db	101	;'e'
  3032  00F51E  20                 	db	32
  3033  00F51F  74                 	db	116	;'t'
  3034  00F520  68                 	db	104	;'h'
  3035  00F521  65                 	db	101	;'e'
  3036  00F522  20                 	db	32
  3037  00F523  6C                 	db	108	;'l'
  3038  00F524  6F                 	db	111	;'o'
  3039  00F525  61                 	db	97	;'a'
  3040  00F526  64                 	db	100	;'d'
  3041  00F527  2C                 	db	44
  3042  00F528  20                 	db	32
  3043  00F529  64                 	db	100	;'d'
  3044  00F52A  69                 	db	105	;'i'
  3045  00F52B  73                 	db	115	;'s'
  3046  00F52C  61                 	db	97	;'a'
  3047  00F52D  62                 	db	98	;'b'
  3048  00F52E  6C                 	db	108	;'l'
  3049  00F52F  65                 	db	101	;'e'
  3050  00F530  20                 	db	32
  3051  00F531  64                 	db	100	;'d'
  3052  00F532  69                 	db	105	;'i'
  3053  00F533  6D                 	db	109	;'m'
  3054  00F534  6D                 	db	109	;'m'
  3055  00F535  69                 	db	105	;'i'
  3056  00F536  6E                 	db	110	;'n'
  3057  00F537  67                 	db	103	;'g'
  3058  00F538  20                 	db	32
  3059  00F539  61                 	db	97	;'a'
  3060  00F53A  6E                 	db	110	;'n'
  3061  00F53B  64                 	db	100	;'d'
  3062  00F53C  20                 	db	32
  3063  00F53D  75                 	db	117	;'u'
  3064  00F53E  73                 	db	115	;'s'
  3065  00F53F  65                 	db	101	;'e'
  3066  00F540  20                 	db	32
  3067  00F541  72                 	db	114	;'r'
  3068  00F542  65                 	db	101	;'e'
  3069  00F543  73                 	db	115	;'s'
  3070  00F544  70                 	db	112	;'p'
  3071  00F545  65                 	db	101	;'e'
  3072  00F546  63                 	db	99	;'c'
  3073  00F547  74                 	db	116	;'t'
  3074  00F548  69                 	db	105	;'i'
  3075  00F549  76                 	db	118	;'v'
  3076  00F54A  65                 	db	101	;'e'
  3077  00F54B  20                 	db	32
  3078  00F54C  63                 	db	99	;'c'
  3079  00F54D  6F                 	db	111	;'o'
  3080  00F54E  6D                 	db	109	;'m'
  3081  00F54F  6D                 	db	109	;'m'
  3082  00F550  61                 	db	97	;'a'
  3083  00F551  6E                 	db	110	;'n'
  3084  00F552  64                 	db	100	;'d'
  3085  00F553  73                 	db	115	;'s'
  3086  00F554  0A                 	db	10
  3087  00F555  0D                 	db	13
  3088  00F556  00                 	db	0
  3089  00F557                     STR_110:
  3090  00F557  45                 	db	69	;'E'
  3091  00F558  52                 	db	82	;'R'
  3092  00F559  52                 	db	82	;'R'
  3093  00F55A  4F                 	db	79	;'O'
  3094  00F55B  52                 	db	82	;'R'
  3095  00F55C  3A                 	db	58	;':'
  3096  00F55D  20                 	db	32
  3097  00F55E  50                 	db	80	;'P'
  3098  00F55F  6C                 	db	108	;'l'
  3099  00F560  65                 	db	101	;'e'
  3100  00F561  61                 	db	97	;'a'
  3101  00F562  73                 	db	115	;'s'
  3102  00F563  65                 	db	101	;'e'
  3103  00F564  20                 	db	32
  3104  00F565  73                 	db	115	;'s'
  3105  00F566  65                 	db	101	;'e'
  3106  00F567  74                 	db	116	;'t'
  3107  00F568  20                 	db	32
  3108  00F569  64                 	db	100	;'d'
  3109  00F56A  69                 	db	105	;'i'
  3110  00F56B  6D                 	db	109	;'m'
  3111  00F56C  6D                 	db	109	;'m'
  3112  00F56D  69                 	db	105	;'i'
  3113  00F56E  6E                 	db	110	;'n'
  3114  00F56F  67                 	db	103	;'g'
  3115  00F570  20                 	db	32
  3116  00F571  70                 	db	112	;'p'
  3117  00F572  65                 	db	101	;'e'
  3118  00F573  72                 	db	114	;'r'
  3119  00F574  63                 	db	99	;'c'
  3120  00F575  65                 	db	101	;'e'
  3121  00F576  6E                 	db	110	;'n'
  3122  00F577  74                 	db	116	;'t'
  3123  00F578  61                 	db	97	;'a'
  3124  00F579  67                 	db	103	;'g'
  3125  00F57A  65                 	db	101	;'e'
  3126  00F57B  20                 	db	32
  3127  00F57C  74                 	db	116	;'t'
  3128  00F57D  6F                 	db	111	;'o'
  3129  00F57E  20                 	db	32
  3130  00F57F  61                 	db	97	;'a'
  3131  00F580  6E                 	db	110	;'n'
  3132  00F581  20                 	db	32
  3133  00F582  69                 	db	105	;'i'
  3134  00F583  6E                 	db	110	;'n'
  3135  00F584  74                 	db	116	;'t'
  3136  00F585  65                 	db	101	;'e'
  3137  00F586  67                 	db	103	;'g'
  3138  00F587  65                 	db	101	;'e'
  3139  00F588  72                 	db	114	;'r'
  3140  00F589  20                 	db	32
  3141  00F58A  67                 	db	103	;'g'
  3142  00F58B  72                 	db	114	;'r'
  3143  00F58C  65                 	db	101	;'e'
  3144  00F58D  61                 	db	97	;'a'
  3145  00F58E  74                 	db	116	;'t'
  3146  00F58F  65                 	db	101	;'e'
  3147  00F590  72                 	db	114	;'r'
  3148  00F591  20                 	db	32
  3149  00F592  74                 	db	116	;'t'
  3150  00F593  68                 	db	104	;'h'
  3151  00F594  61                 	db	97	;'a'
  3152  00F595  6E                 	db	110	;'n'
  3153  00F596  20                 	db	32
  3154  00F597  30                 	db	48	;'0'
  3155  00F598  20                 	db	32
  3156  00F599  61                 	db	97	;'a'
  3157  00F59A  6E                 	db	110	;'n'
  3158  00F59B  64                 	db	100	;'d'
  3159  00F59C  20                 	db	32
  3160  00F59D  6C                 	db	108	;'l'
  3161  00F59E  65                 	db	101	;'e'
  3162  00F59F  73                 	db	115	;'s'
  3163  00F5A0  73                 	db	115	;'s'
  3164  00F5A1  20                 	db	32
  3165  00F5A2  74                 	db	116	;'t'
  3166  00F5A3  68                 	db	104	;'h'
  3167  00F5A4  61                 	db	97	;'a'
  3168  00F5A5  6E                 	db	110	;'n'
  3169  00F5A6  20                 	db	32
  3170  00F5A7  31                 	db	49	;'1'
  3171  00F5A8  30                 	db	48	;'0'
  3172  00F5A9  30                 	db	48	;'0'
  3173  00F5AA  0A                 	db	10
  3174  00F5AB  0D                 	db	13
  3175  00F5AC  00                 	db	0
  3176  00F5AD                     STR_54:
  3177  00F5AD  44                 	db	68	;'D'
  3178  00F5AE  65                 	db	101	;'e'
  3179  00F5AF  76                 	db	118	;'v'
  3180  00F5B0  69                 	db	105	;'i'
  3181  00F5B1  63                 	db	99	;'c'
  3182  00F5B2  65                 	db	101	;'e'
  3183  00F5B3  20                 	db	32
  3184  00F5B4  49                 	db	73	;'I'
  3185  00F5B5  44                 	db	68	;'D'
  3186  00F5B6  20                 	db	32
  3187  00F5B7  73                 	db	115	;'s'
  3188  00F5B8  74                 	db	116	;'t'
  3189  00F5B9  6F                 	db	111	;'o'
  3190  00F5BA  72                 	db	114	;'r'
  3191  00F5BB  65                 	db	101	;'e'
  3192  00F5BC  64                 	db	100	;'d'
  3193  00F5BD  20                 	db	32
  3194  00F5BE  69                 	db	105	;'i'
  3195  00F5BF  6E                 	db	110	;'n'
  3196  00F5C0  20                 	db	32
  3197  00F5C1  46                 	db	70	;'F'
  3198  00F5C2  6C                 	db	108	;'l'
  3199  00F5C3  61                 	db	97	;'a'
  3200  00F5C4  73                 	db	115	;'s'
  3201  00F5C5  68                 	db	104	;'h'
  3202  00F5C6  20                 	db	32
  3203  00F5C7  69                 	db	105	;'i'
  3204  00F5C8  73                 	db	115	;'s'
  3205  00F5C9  3A                 	db	58	;':'
  3206  00F5CA  20                 	db	32
  3207  00F5CB  30                 	db	48	;'0'
  3208  00F5CC  78                 	db	120	;'x'
  3209  00F5CD  25                 	db	37
  3210  00F5CE  58                 	db	88	;'X'
  3211  00F5CF  2E                 	db	46
  3212  00F5D0  20                 	db	32
  3213  00F5D1  54                 	db	84	;'T'
  3214  00F5D2  68                 	db	104	;'h'
  3215  00F5D3  69                 	db	105	;'i'
  3216  00F5D4  73                 	db	115	;'s'
  3217  00F5D5  20                 	db	32
  3218  00F5D6  63                 	db	99	;'c'
  3219  00F5D7  6F                 	db	111	;'o'
  3220  00F5D8  72                 	db	114	;'r'
  3221  00F5D9  72                 	db	114	;'r'
  3222  00F5DA  65                 	db	101	;'e'
  3223  00F5DB  73                 	db	115	;'s'
  3224  00F5DC  70                 	db	112	;'p'
  3225  00F5DD  6F                 	db	111	;'o'
  3226  00F5DE  6E                 	db	110	;'n'
  3227  00F5DF  64                 	db	100	;'d'
  3228  00F5E0  73                 	db	115	;'s'
  3229  00F5E1  20                 	db	32
  3230  00F5E2  74                 	db	116	;'t'
  3231  00F5E3  6F                 	db	111	;'o'
  3232  00F5E4  20                 	db	32
  3233  00F5E5  61                 	db	97	;'a'
  3234  00F5E6  20                 	db	32
  3235  00F5E7  64                 	db	100	;'d'
  3236  00F5E8  65                 	db	101	;'e'
  3237  00F5E9  76                 	db	118	;'v'
  3238  00F5EA  69                 	db	105	;'i'
  3239  00F5EB  63                 	db	99	;'c'
  3240  00F5EC  65                 	db	101	;'e'
  3241  00F5ED  20                 	db	32
  3242  00F5EE  70                 	db	112	;'p'
  3243  00F5EF  61                 	db	97	;'a'
  3244  00F5F0  72                 	db	114	;'r'
  3245  00F5F1  74                 	db	116	;'t'
  3246  00F5F2  20                 	db	32
  3247  00F5F3  6E                 	db	110	;'n'
  3248  00F5F4  75                 	db	117	;'u'
  3249  00F5F5  6D                 	db	109	;'m'
  3250  00F5F6  62                 	db	98	;'b'
  3251  00F5F7  65                 	db	101	;'e'
  3252  00F5F8  72                 	db	114	;'r'
  3253  00F5F9  20                 	db	32
  3254  00F5FA  6F                 	db	111	;'o'
  3255  00F5FB  66                 	db	102	;'f'
  3256  00F5FC  20                 	db	32
  3257  00F5FD  25                 	db	37
  3258  00F5FE  73                 	db	115	;'s'
  3259  00F5FF  0A                 	db	10
  3260  00F600  0D                 	db	13
  3261  00F601  00                 	db	0
  3262  00F602                     STR_115:
  3263  00F602  54                 	db	84	;'T'
  3264  00F603  68                 	db	104	;'h'
  3265  00F604  69                 	db	105	;'i'
  3266  00F605  73                 	db	115	;'s'
  3267  00F606  20                 	db	32
  3268  00F607  63                 	db	99	;'c'
  3269  00F608  6F                 	db	111	;'o'
  3270  00F609  72                 	db	114	;'r'
  3271  00F60A  72                 	db	114	;'r'
  3272  00F60B  65                 	db	101	;'e'
  3273  00F60C  73                 	db	115	;'s'
  3274  00F60D  70                 	db	112	;'p'
  3275  00F60E  6F                 	db	111	;'o'
  3276  00F60F  6E                 	db	110	;'n'
  3277  00F610  64                 	db	100	;'d'
  3278  00F611  73                 	db	115	;'s'
  3279  00F612  20                 	db	32
  3280  00F613  74                 	db	116	;'t'
  3281  00F614  6F                 	db	111	;'o'
  3282  00F615  20                 	db	32
  3283  00F616  61                 	db	97	;'a'
  3284  00F617  20                 	db	32
  3285  00F618  31                 	db	49	;'1'
  3286  00F619  36                 	db	54	;'6'
  3287  00F61A  20                 	db	32
  3288  00F61B  62                 	db	98	;'b'
  3289  00F61C  69                 	db	105	;'i'
  3290  00F61D  74                 	db	116	;'t'
  3291  00F61E  20                 	db	32
  3292  00F61F  74                 	db	116	;'t'
  3293  00F620  69                 	db	105	;'i'
  3294  00F621  6D                 	db	109	;'m'
  3295  00F622  65                 	db	101	;'e'
  3296  00F623  72                 	db	114	;'r'
  3297  00F624  20                 	db	32
  3298  00F625  70                 	db	112	;'p'
  3299  00F626  72                 	db	114	;'r'
  3300  00F627  65                 	db	101	;'e'
  3301  00F628  2D                 	db	45
  3302  00F629  6C                 	db	108	;'l'
  3303  00F62A  6F                 	db	111	;'o'
  3304  00F62B  61                 	db	97	;'a'
  3305  00F62C  64                 	db	100	;'d'
  3306  00F62D  20                 	db	32
  3307  00F62E  76                 	db	118	;'v'
  3308  00F62F  61                 	db	97	;'a'
  3309  00F630  6C                 	db	108	;'l'
  3310  00F631  75                 	db	117	;'u'
  3311  00F632  65                 	db	101	;'e'
  3312  00F633  20                 	db	32
  3313  00F634  6F                 	db	111	;'o'
  3314  00F635  66                 	db	102	;'f'
  3315  00F636  20                 	db	32
  3316  00F637  30                 	db	48	;'0'
  3317  00F638  78                 	db	120	;'x'
  3318  00F639  25                 	db	37
  3319  00F63A  58                 	db	88	;'X'
  3320  00F63B  20                 	db	32
  3321  00F63C  28                 	db	40
  3322  00F63D  25                 	db	37
  3323  00F63E  75                 	db	117	;'u'
  3324  00F63F  20                 	db	32
  3325  00F640  4C                 	db	76	;'L'
  3326  00F641  53                 	db	83	;'S'
  3327  00F642  42                 	db	66	;'B'
  3328  00F643  73                 	db	115	;'s'
  3329  00F644  29                 	db	41
  3330  00F645  20                 	db	32
  3331  00F646  0A                 	db	10
  3332  00F647  0D                 	db	13
  3333  00F648  00                 	db	0
  3334  00F649                     STR_74:
  3335  00F649  56                 	db	86	;'V'
  3336  00F64A  43                 	db	67	;'C'
  3337  00F64B  43                 	db	67	;'C'
  3338  00F64C  20                 	db	32
  3339  00F64D  4F                 	db	79	;'O'
  3340  00F64E  76                 	db	118	;'v'
  3341  00F64F  65                 	db	101	;'e'
  3342  00F650  72                 	db	114	;'r'
  3343  00F651  76                 	db	118	;'v'
  3344  00F652  6F                 	db	111	;'o'
  3345  00F653  6C                 	db	108	;'l'
  3346  00F654  74                 	db	116	;'t'
  3347  00F655  61                 	db	97	;'a'
  3348  00F656  67                 	db	103	;'g'
  3349  00F657  65                 	db	101	;'e'
  3350  00F658  20                 	db	32
  3351  00F659  63                 	db	99	;'c'
  3352  00F65A  6F                 	db	111	;'o'
  3353  00F65B  6E                 	db	110	;'n'
  3354  00F65C  64                 	db	100	;'d'
  3355  00F65D  69                 	db	105	;'i'
  3356  00F65E  74                 	db	116	;'t'
  3357  00F65F  69                 	db	105	;'i'
  3358  00F660  6F                 	db	111	;'o'
  3359  00F661  6E                 	db	110	;'n'
  3360  00F662  20                 	db	32
  3361  00F663  68                 	db	104	;'h'
  3362  00F664  61                 	db	97	;'a'
  3363  00F665  73                 	db	115	;'s'
  3364  00F666  20                 	db	32
  3365  00F667  6F                 	db	111	;'o'
  3366  00F668  63                 	db	99	;'c'
  3367  00F669  63                 	db	99	;'c'
  3368  00F66A  75                 	db	117	;'u'
  3369  00F66B  72                 	db	114	;'r'
  3370  00F66C  72                 	db	114	;'r'
  3371  00F66D  65                 	db	101	;'e'
  3372  00F66E  64                 	db	100	;'d'
  3373  00F66F  20                 	db	32
  3374  00F670  28                 	db	40
  3375  00F671  56                 	db	86	;'V'
  3376  00F672  43                 	db	67	;'C'
  3377  00F673  43                 	db	67	;'C'
  3378  00F674  20                 	db	32
  3379  00F675  68                 	db	104	;'h'
  3380  00F676  61                 	db	97	;'a'
  3381  00F677  73                 	db	115	;'s'
  3382  00F678  20                 	db	32
  3383  00F679  65                 	db	101	;'e'
  3384  00F67A  78                 	db	120	;'x'
  3385  00F67B  63                 	db	99	;'c'
  3386  00F67C  65                 	db	101	;'e'
  3387  00F67D  65                 	db	101	;'e'
  3388  00F67E  64                 	db	100	;'d'
  3389  00F67F  65                 	db	101	;'e'
  3390  00F680  64                 	db	100	;'d'
  3391  00F681  20                 	db	32
  3392  00F682  33                 	db	51	;'3'
  3393  00F683  2E                 	db	46
  3394  00F684  36                 	db	54	;'6'
  3395  00F685  30                 	db	48	;'0'
  3396  00F686  56                 	db	86	;'V'
  3397  00F687  29                 	db	41
  3398  00F688  0A                 	db	10
  3399  00F689  0D                 	db	13
  3400  00F68A  00                 	db	0
  3401  00F68B                     STR_58:
  3402  00F68B  54                 	db	84	;'T'
  3403  00F68C  68                 	db	104	;'h'
  3404  00F68D  65                 	db	101	;'e'
  3405  00F68E  20                 	db	32
  3406  00F68F  66                 	db	102	;'f'
  3407  00F690  6F                 	db	111	;'o'
  3408  00F691  6C                 	db	108	;'l'
  3409  00F692  6C                 	db	108	;'l'
  3410  00F693  6F                 	db	111	;'o'
  3411  00F694  77                 	db	119	;'w'
  3412  00F695  69                 	db	105	;'i'
  3413  00F696  6E                 	db	110	;'n'
  3414  00F697  67                 	db	103	;'g'
  3415  00F698  20                 	db	32
  3416  00F699  55                 	db	85	;'U'
  3417  00F69A  73                 	db	115	;'s'
  3418  00F69B  65                 	db	101	;'e'
  3419  00F69C  72                 	db	114	;'r'
  3420  00F69D  20                 	db	32
  3421  00F69E  49                 	db	73	;'I'
  3422  00F69F  44                 	db	68	;'D'
  3423  00F6A0  73                 	db	115	;'s'
  3424  00F6A1  20                 	db	32
  3425  00F6A2  68                 	db	104	;'h'
  3426  00F6A3  61                 	db	97	;'a'
  3427  00F6A4  76                 	db	118	;'v'
  3428  00F6A5  65                 	db	101	;'e'
  3429  00F6A6  20                 	db	32
  3430  00F6A7  62                 	db	98	;'b'
  3431  00F6A8  65                 	db	101	;'e'
  3432  00F6A9  65                 	db	101	;'e'
  3433  00F6AA  6E                 	db	110	;'n'
  3434  00F6AB  20                 	db	32
  3435  00F6AC  72                 	db	114	;'r'
  3436  00F6AD  65                 	db	101	;'e'
  3437  00F6AE  74                 	db	116	;'t'
  3438  00F6AF  72                 	db	114	;'r'
  3439  00F6B0  69                 	db	105	;'i'
  3440  00F6B1  65                 	db	101	;'e'
  3441  00F6B2  76                 	db	118	;'v'
  3442  00F6B3  65                 	db	101	;'e'
  3443  00F6B4  64                 	db	100	;'d'
  3444  00F6B5  20                 	db	32
  3445  00F6B6  66                 	db	102	;'f'
  3446  00F6B7  72                 	db	114	;'r'
  3447  00F6B8  6F                 	db	111	;'o'
  3448  00F6B9  6D                 	db	109	;'m'
  3449  00F6BA  20                 	db	32
  3450  00F6BB  66                 	db	102	;'f'
  3451  00F6BC  6C                 	db	108	;'l'
  3452  00F6BD  61                 	db	97	;'a'
  3453  00F6BE  73                 	db	115	;'s'
  3454  00F6BF  68                 	db	104	;'h'
  3455  00F6C0  20                 	db	32
  3456  00F6C1  6D                 	db	109	;'m'
  3457  00F6C2  65                 	db	101	;'e'
  3458  00F6C3  6D                 	db	109	;'m'
  3459  00F6C4  6F                 	db	111	;'o'
  3460  00F6C5  72                 	db	114	;'r'
  3461  00F6C6  79                 	db	121	;'y'
  3462  00F6C7  3A                 	db	58	;':'
  3463  00F6C8  0A                 	db	10
  3464  00F6C9  0D                 	db	13
  3465  00F6CA  00                 	db	0
  3466  00F6CB                     STR_114:
  3467  00F6CB  43                 	db	67	;'C'
  3468  00F6CC  61                 	db	97	;'a'
  3469  00F6CD  6C                 	db	108	;'l'
  3470  00F6CE  63                 	db	99	;'c'
  3471  00F6CF  75                 	db	117	;'u'
  3472  00F6D0  6C                 	db	108	;'l'
  3473  00F6D1  61                 	db	97	;'a'
  3474  00F6D2  74                 	db	116	;'t'
  3475  00F6D3  65                 	db	101	;'e'
  3476  00F6D4  64                 	db	100	;'d'
  3477  00F6D5  20                 	db	32
  3478  00F6D6  54                 	db	84	;'T'
  3479  00F6D7  52                 	db	82	;'R'
  3480  00F6D8  49                 	db	73	;'I'
  3481  00F6D9  41                 	db	65	;'A'
  3482  00F6DA  43                 	db	67	;'C'
  3483  00F6DB  20                 	db	32
  3484  00F6DC  66                 	db	102	;'f'
  3485  00F6DD  69                 	db	105	;'i'
  3486  00F6DE  72                 	db	114	;'r'
  3487  00F6DF  69                 	db	105	;'i'
  3488  00F6E0  6E                 	db	110	;'n'
  3489  00F6E1  67                 	db	103	;'g'
  3490  00F6E2  20                 	db	32
  3491  00F6E3  61                 	db	97	;'a'
  3492  00F6E4  6E                 	db	110	;'n'
  3493  00F6E5  67                 	db	103	;'g'
  3494  00F6E6  6C                 	db	108	;'l'
  3495  00F6E7  65                 	db	101	;'e'
  3496  00F6E8  20                 	db	32
  3497  00F6E9  69                 	db	105	;'i'
  3498  00F6EA  73                 	db	115	;'s'
  3499  00F6EB  20                 	db	32
  3500  00F6EC  25                 	db	37
  3501  00F6ED  2E                 	db	46
  3502  00F6EE  33                 	db	51	;'3'
  3503  00F6EF  66                 	db	102	;'f'
  3504  00F6F0  20                 	db	32
  3505  00F6F1  72                 	db	114	;'r'
  3506  00F6F2  61                 	db	97	;'a'
  3507  00F6F3  64                 	db	100	;'d'
  3508  00F6F4  69                 	db	105	;'i'
  3509  00F6F5  61                 	db	97	;'a'
  3510  00F6F6  6E                 	db	110	;'n'
  3511  00F6F7  73                 	db	115	;'s'
  3512  00F6F8  20                 	db	32
  3513  00F6F9  28                 	db	40
  3514  00F6FA  25                 	db	37
  3515  00F6FB  2E                 	db	46
  3516  00F6FC  33                 	db	51	;'3'
  3517  00F6FD  66                 	db	102	;'f'
  3518  00F6FE  20                 	db	32
  3519  00F6FF  64                 	db	100	;'d'
  3520  00F700  65                 	db	101	;'e'
  3521  00F701  67                 	db	103	;'g'
  3522  00F702  72                 	db	114	;'r'
  3523  00F703  65                 	db	101	;'e'
  3524  00F704  65                 	db	101	;'e'
  3525  00F705  73                 	db	115	;'s'
  3526  00F706  29                 	db	41
  3527  00F707  0A                 	db	10
  3528  00F708  0D                 	db	13
  3529  00F709  00                 	db	0
  3530  00F70A                     STR_123:
  3531  00F70A  53                 	db	83	;'S'
  3532  00F70B  79                 	db	121	;'y'
  3533  00F70C  73                 	db	115	;'s'
  3534  00F70D  74                 	db	116	;'t'
  3535  00F70E  65                 	db	101	;'e'
  3536  00F70F  6D                 	db	109	;'m'
  3537  00F710  20                 	db	32
  3538  00F711  70                 	db	112	;'p'
  3539  00F712  61                 	db	97	;'a'
  3540  00F713  72                 	db	114	;'r'
  3541  00F714  61                 	db	97	;'a'
  3542  00F715  6D                 	db	109	;'m'
  3543  00F716  65                 	db	101	;'e'
  3544  00F717  74                 	db	116	;'t'
  3545  00F718  65                 	db	101	;'e'
  3546  00F719  72                 	db	114	;'r'
  3547  00F71A  73                 	db	115	;'s'
  3548  00F71B  20                 	db	32
  3549  00F71C  61                 	db	97	;'a'
  3550  00F71D  6E                 	db	110	;'n'
  3551  00F71E  64                 	db	100	;'d'
  3552  00F71F  20                 	db	32
  3553  00F720  61                 	db	97	;'a'
  3554  00F721  66                 	db	102	;'f'
  3555  00F722  66                 	db	102	;'f'
  3556  00F723  69                 	db	105	;'i'
  3557  00F724  72                 	db	114	;'r'
  3558  00F725  6D                 	db	109	;'m'
  3559  00F726  61                 	db	97	;'a'
  3560  00F727  74                 	db	116	;'t'
  3561  00F728  69                 	db	105	;'i'
  3562  00F729  76                 	db	118	;'v'
  3563  00F72A  65                 	db	101	;'e'
  3564  00F72B  20                 	db	32
  3565  00F72C  72                 	db	114	;'r'
  3566  00F72D  65                 	db	101	;'e'
  3567  00F72E  73                 	db	115	;'s'
  3568  00F72F  70                 	db	112	;'p'
  3569  00F730  6F                 	db	111	;'o'
  3570  00F731  6E                 	db	110	;'n'
  3571  00F732  73                 	db	115	;'s'
  3572  00F733  65                 	db	101	;'e'
  3573  00F734  73                 	db	115	;'s'
  3574  00F735  20                 	db	32
  3575  00F736  61                 	db	97	;'a'
  3576  00F737  70                 	db	112	;'p'
  3577  00F738  70                 	db	112	;'p'
  3578  00F739  65                 	db	101	;'e'
  3579  00F73A  61                 	db	97	;'a'
  3580  00F73B  72                 	db	114	;'r'
  3581  00F73C  20                 	db	32
  3582  00F73D  69                 	db	105	;'i'
  3583  00F73E  6E                 	db	110	;'n'
  3584  00F73F  20                 	db	32
  3585  00F740  67                 	db	103	;'g'
  3586  00F741  72                 	db	114	;'r'
  3587  00F742  65                 	db	101	;'e'
  3588  00F743  65                 	db	101	;'e'
  3589  00F744  6E                 	db	110	;'n'
  3590  00F745  0A                 	db	10
  3591  00F746  0D                 	db	13
  3592  00F747  00                 	db	0
  3593  00F748                     STR_56:
  3594  00F748  44                 	db	68	;'D'
  3595  00F749  65                 	db	101	;'e'
  3596  00F74A  76                 	db	118	;'v'
  3597  00F74B  69                 	db	105	;'i'
  3598  00F74C  63                 	db	99	;'c'
  3599  00F74D  65                 	db	101	;'e'
  3600  00F74E  20                 	db	32
  3601  00F74F  73                 	db	115	;'s'
  3602  00F750  69                 	db	105	;'i'
  3603  00F751  6C                 	db	108	;'l'
  3604  00F752  69                 	db	105	;'i'
  3605  00F753  63                 	db	99	;'c'
  3606  00F754  6F                 	db	111	;'o'
  3607  00F755  6E                 	db	110	;'n'
  3608  00F756  20                 	db	32
  3609  00F757  72                 	db	114	;'r'
  3610  00F758  65                 	db	101	;'e'
  3611  00F759  76                 	db	118	;'v'
  3612  00F75A  69                 	db	105	;'i'
  3613  00F75B  73                 	db	115	;'s'
  3614  00F75C  69                 	db	105	;'i'
  3615  00F75D  6F                 	db	111	;'o'
  3616  00F75E  6E                 	db	110	;'n'
  3617  00F75F  20                 	db	32
  3618  00F760  49                 	db	73	;'I'
  3619  00F761  44                 	db	68	;'D'
  3620  00F762  20                 	db	32
  3621  00F763  61                 	db	97	;'a'
  3622  00F764  73                 	db	115	;'s'
  3623  00F765  20                 	db	32
  3624  00F766  73                 	db	115	;'s'
  3625  00F767  74                 	db	116	;'t'
  3626  00F768  6F                 	db	111	;'o'
  3627  00F769  72                 	db	114	;'r'
  3628  00F76A  65                 	db	101	;'e'
  3629  00F76B  64                 	db	100	;'d'
  3630  00F76C  20                 	db	32
  3631  00F76D  69                 	db	105	;'i'
  3632  00F76E  6E                 	db	110	;'n'
  3633  00F76F  20                 	db	32
  3634  00F770  46                 	db	70	;'F'
  3635  00F771  6C                 	db	108	;'l'
  3636  00F772  61                 	db	97	;'a'
  3637  00F773  73                 	db	115	;'s'
  3638  00F774  68                 	db	104	;'h'
  3639  00F775  20                 	db	32
  3640  00F776  69                 	db	105	;'i'
  3641  00F777  73                 	db	115	;'s'
  3642  00F778  3A                 	db	58	;':'
  3643  00F779  20                 	db	32
  3644  00F77A  25                 	db	37
  3645  00F77B  63                 	db	99	;'c'
  3646  00F77C  25                 	db	37
  3647  00F77D  30                 	db	48	;'0'
  3648  00F77E  33                 	db	51	;'3'
  3649  00F77F  64                 	db	100	;'d'
  3650  00F780  0A                 	db	10
  3651  00F781  0D                 	db	13
  3652  00F782  00                 	db	0
  3653  00F783                     STR_117:
  3654  00F783  44                 	db	68	;'D'
  3655  00F784  65                 	db	101	;'e'
  3656  00F785  76                 	db	118	;'v'
  3657  00F786  69                 	db	105	;'i'
  3658  00F787  63                 	db	99	;'c'
  3659  00F788  65                 	db	101	;'e'
  3660  00F789  20                 	db	32
  3661  00F78A  6F                 	db	111	;'o'
  3662  00F78B  6E                 	db	110	;'n'
  3663  00F78C  20                 	db	32
  3664  00F78D  74                 	db	116	;'t'
  3665  00F78E  69                 	db	105	;'i'
  3666  00F78F  6D                 	db	109	;'m'
  3667  00F790  65                 	db	101	;'e'
  3668  00F791  20                 	db	32
  3669  00F792  73                 	db	115	;'s'
  3670  00F793  69                 	db	105	;'i'
  3671  00F794  6E                 	db	110	;'n'
  3672  00F795  63                 	db	99	;'c'
  3673  00F796  65                 	db	101	;'e'
  3674  00F797  20                 	db	32
  3675  00F798  6C                 	db	108	;'l'
  3676  00F799  61                 	db	97	;'a'
  3677  00F79A  73                 	db	115	;'s'
  3678  00F79B  74                 	db	116	;'t'
  3679  00F79C  20                 	db	32
  3680  00F79D  72                 	db	114	;'r'
  3681  00F79E  65                 	db	101	;'e'
  3682  00F79F  73                 	db	115	;'s'
  3683  00F7A0  65                 	db	101	;'e'
  3684  00F7A1  74                 	db	116	;'t'
  3685  00F7A2  20                 	db	32
  3686  00F7A3  63                 	db	99	;'c'
  3687  00F7A4  6F                 	db	111	;'o'
  3688  00F7A5  6E                 	db	110	;'n'
  3689  00F7A6  64                 	db	100	;'d'
  3690  00F7A7  69                 	db	105	;'i'
  3691  00F7A8  74                 	db	116	;'t'
  3692  00F7A9  69                 	db	105	;'i'
  3693  00F7AA  6F                 	db	111	;'o'
  3694  00F7AB  6E                 	db	110	;'n'
  3695  00F7AC  20                 	db	32
  3696  00F7AD  69                 	db	105	;'i'
  3697  00F7AE  73                 	db	115	;'s'
  3698  00F7AF  20                 	db	32
  3699  00F7B0  25                 	db	37
  3700  00F7B1  64                 	db	100	;'d'
  3701  00F7B2  20                 	db	32
  3702  00F7B3  73                 	db	115	;'s'
  3703  00F7B4  65                 	db	101	;'e'
  3704  00F7B5  63                 	db	99	;'c'
  3705  00F7B6  6F                 	db	111	;'o'
  3706  00F7B7  6E                 	db	110	;'n'
  3707  00F7B8  64                 	db	100	;'d'
  3708  00F7B9  73                 	db	115	;'s'
  3709  00F7BA  0A                 	db	10
  3710  00F7BB  0D                 	db	13
  3711  00F7BC  00                 	db	0
  3712  00F7BD                     STR_83:
  3713  00F7BD  46                 	db	70	;'F'
  3714  00F7BE  69                 	db	105	;'i'
  3715  00F7BF  78                 	db	120	;'x'
  3716  00F7C0  65                 	db	101	;'e'
  3717  00F7C1  64                 	db	100	;'d'
  3718  00F7C2  20                 	db	32
  3719  00F7C3  56                 	db	86	;'V'
  3720  00F7C4  6F                 	db	111	;'o'
  3721  00F7C5  6C                 	db	108	;'l'
  3722  00F7C6  74                 	db	116	;'t'
  3723  00F7C7  61                 	db	97	;'a'
  3724  00F7C8  67                 	db	103	;'g'
  3725  00F7C9  65                 	db	101	;'e'
  3726  00F7CA  20                 	db	32
  3727  00F7CB  52                 	db	82	;'R'
  3728  00F7CC  65                 	db	101	;'e'
  3729  00F7CD  66                 	db	102	;'f'
  3730  00F7CE  65                 	db	101	;'e'
  3731  00F7CF  72                 	db	114	;'r'
  3732  00F7D0  65                 	db	101	;'e'
  3733  00F7D1  6E                 	db	110	;'n'
  3734  00F7D2  63                 	db	99	;'c'
  3735  00F7D3  65                 	db	101	;'e'
  3736  00F7D4  20                 	db	32
  3737  00F7D5  42                 	db	66	;'B'
  3738  00F7D6  75                 	db	117	;'u'
  3739  00F7D7  66                 	db	102	;'f'
  3740  00F7D8  66                 	db	102	;'f'
  3741  00F7D9  65                 	db	101	;'e'
  3742  00F7DA  72                 	db	114	;'r'
  3743  00F7DB  20                 	db	32
  3744  00F7DC  31                 	db	49	;'1'
  3745  00F7DD  20                 	db	32
  3746  00F7DE  6D                 	db	109	;'m'
  3747  00F7DF  65                 	db	101	;'e'
  3748  00F7E0  61                 	db	97	;'a'
  3749  00F7E1  73                 	db	115	;'s'
  3750  00F7E2  75                 	db	117	;'u'
  3751  00F7E3  72                 	db	114	;'r'
  3752  00F7E4  65                 	db	101	;'e'
  3753  00F7E5  64                 	db	100	;'d'
  3754  00F7E6  20                 	db	32
  3755  00F7E7  61                 	db	97	;'a'
  3756  00F7E8  73                 	db	115	;'s'
  3757  00F7E9  20                 	db	32
  3758  00F7EA  25                 	db	37
  3759  00F7EB  2E                 	db	46
  3760  00F7EC  33                 	db	51	;'3'
  3761  00F7ED  66                 	db	102	;'f'
  3762  00F7EE  20                 	db	32
  3763  00F7EF  56                 	db	86	;'V'
  3764  00F7F0  6F                 	db	111	;'o'
  3765  00F7F1  6C                 	db	108	;'l'
  3766  00F7F2  74                 	db	116	;'t'
  3767  00F7F3  73                 	db	115	;'s'
  3768  00F7F4  0A                 	db	10
  3769  00F7F5  0D                 	db	13
  3770  00F7F6  00                 	db	0
  3771  00F7F7                     STR_93:
  3772  00F7F7  4F                 	db	79	;'O'
  3773  00F7F8  75                 	db	117	;'u'
  3774  00F7F9  74                 	db	116	;'t'
  3775  00F7FA  70                 	db	112	;'p'
  3776  00F7FB  75                 	db	117	;'u'
  3777  00F7FC  74                 	db	116	;'t'
  3778  00F7FD  20                 	db	32
  3779  00F7FE  70                 	db	112	;'p'
  3780  00F7FF  6F                 	db	111	;'o'
  3781  00F800  77                 	db	119	;'w'
  3782  00F801  65                 	db	101	;'e'
  3783  00F802  72                 	db	114	;'r'
  3784  00F803  20                 	db	32
  3785  00F804  63                 	db	99	;'c'
  3786  00F805  61                 	db	97	;'a'
  3787  00F806  6C                 	db	108	;'l'
  3788  00F807  63                 	db	99	;'c'
  3789  00F808  75                 	db	117	;'u'
  3790  00F809  6C                 	db	108	;'l'
  3791  00F80A  61                 	db	97	;'a'
  3792  00F80B  74                 	db	116	;'t'
  3793  00F80C  65                 	db	101	;'e'
  3794  00F80D  64                 	db	100	;'d'
  3795  00F80E  20                 	db	32
  3796  00F80F  61                 	db	97	;'a'
  3797  00F810  73                 	db	115	;'s'
  3798  00F811  20                 	db	32
  3799  00F812  25                 	db	37
  3800  00F813  2E                 	db	46
  3801  00F814  33                 	db	51	;'3'
  3802  00F815  66                 	db	102	;'f'
  3803  00F816  20                 	db	32
  3804  00F817  57                 	db	87	;'W'
  3805  00F818  61                 	db	97	;'a'
  3806  00F819  74                 	db	116	;'t'
  3807  00F81A  74                 	db	116	;'t'
  3808  00F81B  73                 	db	115	;'s'
  3809  00F81C  20                 	db	32
  3810  00F81D  66                 	db	102	;'f'
  3811  00F81E  72                 	db	114	;'r'
  3812  00F81F  6F                 	db	111	;'o'
  3813  00F820  6D                 	db	109	;'m'
  3814  00F821  20                 	db	32
  3815  00F822  52                 	db	82	;'R'
  3816  00F823  4D                 	db	77	;'M'
  3817  00F824  53                 	db	83	;'S'
  3818  00F825  20                 	db	32
  3819  00F826  76                 	db	118	;'v'
  3820  00F827  61                 	db	97	;'a'
  3821  00F828  6C                 	db	108	;'l'
  3822  00F829  75                 	db	117	;'u'
  3823  00F82A  65                 	db	101	;'e'
  3824  00F82B  73                 	db	115	;'s'
  3825  00F82C  0A                 	db	10
  3826  00F82D  0D                 	db	13
  3827  00F82E  00                 	db	0
  3828  00F82F                     STR_122:
  3829  00F82F  48                 	db	72	;'H'
  3830  00F830  65                 	db	101	;'e'
  3831  00F831  6C                 	db	108	;'l'
  3832  00F832  70                 	db	112	;'p'
  3833  00F833  20                 	db	32
  3834  00F834  6D                 	db	109	;'m'
  3835  00F835  65                 	db	101	;'e'
  3836  00F836  73                 	db	115	;'s'
  3837  00F837  73                 	db	115	;'s'
  3838  00F838  61                 	db	97	;'a'
  3839  00F839  67                 	db	103	;'g'
  3840  00F83A  65                 	db	101	;'e'
  3841  00F83B  73                 	db	115	;'s'
  3842  00F83C  20                 	db	32
  3843  00F83D  61                 	db	97	;'a'
  3844  00F83E  6E                 	db	110	;'n'
  3845  00F83F  64                 	db	100	;'d'
  3846  00F840  20                 	db	32
  3847  00F841  6E                 	db	110	;'n'
  3848  00F842  65                 	db	101	;'e'
  3849  00F843  75                 	db	117	;'u'
  3850  00F844  74                 	db	116	;'t'
  3851  00F845  72                 	db	114	;'r'
  3852  00F846  61                 	db	97	;'a'
  3853  00F847  6C                 	db	108	;'l'
  3854  00F848  20                 	db	32
  3855  00F849  72                 	db	114	;'r'
  3856  00F84A  65                 	db	101	;'e'
  3857  00F84B  73                 	db	115	;'s'
  3858  00F84C  70                 	db	112	;'p'
  3859  00F84D  6F                 	db	111	;'o'
  3860  00F84E  6E                 	db	110	;'n'
  3861  00F84F  73                 	db	115	;'s'
  3862  00F850  65                 	db	101	;'e'
  3863  00F851  73                 	db	115	;'s'
  3864  00F852  20                 	db	32
  3865  00F853  61                 	db	97	;'a'
  3866  00F854  70                 	db	112	;'p'
  3867  00F855  70                 	db	112	;'p'
  3868  00F856  65                 	db	101	;'e'
  3869  00F857  61                 	db	97	;'a'
  3870  00F858  72                 	db	114	;'r'
  3871  00F859  20                 	db	32
  3872  00F85A  69                 	db	105	;'i'
  3873  00F85B  6E                 	db	110	;'n'
  3874  00F85C  20                 	db	32
  3875  00F85D  79                 	db	121	;'y'
  3876  00F85E  65                 	db	101	;'e'
  3877  00F85F  6C                 	db	108	;'l'
  3878  00F860  6C                 	db	108	;'l'
  3879  00F861  6F                 	db	111	;'o'
  3880  00F862  77                 	db	119	;'w'
  3881  00F863  0A                 	db	10
  3882  00F864  0D                 	db	13
  3883  00F865  00                 	db	0
  3884  00F866                     STR_59:
  3885  00F866  20                 	db	32
  3886  00F867  20                 	db	32
  3887  00F868  20                 	db	32
  3888  00F869  20                 	db	32
  3889  00F86A  55                 	db	85	;'U'
  3890  00F86B  73                 	db	115	;'s'
  3891  00F86C  65                 	db	101	;'e'
  3892  00F86D  72                 	db	114	;'r'
  3893  00F86E  20                 	db	32
  3894  00F86F  49                 	db	73	;'I'
  3895  00F870  44                 	db	68	;'D'
  3896  00F871  20                 	db	32
  3897  00F872  57                 	db	87	;'W'
  3898  00F873  6F                 	db	111	;'o'
  3899  00F874  72                 	db	114	;'r'
  3900  00F875  64                 	db	100	;'d'
  3901  00F876  20                 	db	32
  3902  00F877  25                 	db	37
  3903  00F878  64                 	db	100	;'d'
  3904  00F879  20                 	db	32
  3905  00F87A  28                 	db	40
  3906  00F87B  46                 	db	70	;'F'
  3907  00F87C  6C                 	db	108	;'l'
  3908  00F87D  61                 	db	97	;'a'
  3909  00F87E  73                 	db	115	;'s'
  3910  00F87F  68                 	db	104	;'h'
  3911  00F880  20                 	db	32
  3912  00F881  61                 	db	97	;'a'
  3913  00F882  64                 	db	100	;'d'
  3914  00F883  64                 	db	100	;'d'
  3915  00F884  72                 	db	114	;'r'
  3916  00F885  65                 	db	101	;'e'
  3917  00F886  73                 	db	115	;'s'
  3918  00F887  73                 	db	115	;'s'
  3919  00F888  20                 	db	32
  3920  00F889  30                 	db	48	;'0'
  3921  00F88A  78                 	db	120	;'x'
  3922  00F88B  32                 	db	50	;'2'
  3923  00F88C  30                 	db	48	;'0'
  3924  00F88D  30                 	db	48	;'0'
  3925  00F88E  30                 	db	48	;'0'
  3926  00F88F  30                 	db	48	;'0'
  3927  00F890  25                 	db	37
  3928  00F891  58                 	db	88	;'X'
  3929  00F892  29                 	db	41
  3930  00F893  3A                 	db	58	;':'
  3931  00F894  20                 	db	32
  3932  00F895  30                 	db	48	;'0'
  3933  00F896  78                 	db	120	;'x'
  3934  00F897  25                 	db	37
  3935  00F898  58                 	db	88	;'X'
  3936  00F899  0A                 	db	10
  3937  00F89A  0D                 	db	13
  3938  00F89B  00                 	db	0
  3939  00F89C                     STR_105:
  3940  00F89C  4C                 	db	76	;'L'
  3941  00F89D  6F                 	db	111	;'o'
  3942  00F89E  61                 	db	97	;'a'
  3943  00F89F  64                 	db	100	;'d'
  3944  00F8A0  20                 	db	32
  3945  00F8A1  69                 	db	105	;'i'
  3946  00F8A2  73                 	db	115	;'s'
  3947  00F8A3  20                 	db	32
  3948  00F8A4  63                 	db	99	;'c'
  3949  00F8A5  75                 	db	117	;'u'
  3950  00F8A6  72                 	db	114	;'r'
  3951  00F8A7  72                 	db	114	;'r'
  3952  00F8A8  65                 	db	101	;'e'
  3953  00F8A9  6E                 	db	110	;'n'
  3954  00F8AA  74                 	db	116	;'t'
  3955  00F8AB  6C                 	db	108	;'l'
  3956  00F8AC  79                 	db	121	;'y'
  3957  00F8AD  20                 	db	32
  3958  00F8AE  65                 	db	101	;'e'
  3959  00F8AF  6E                 	db	110	;'n'
  3960  00F8B0  61                 	db	97	;'a'
  3961  00F8B1  62                 	db	98	;'b'
  3962  00F8B2  6C                 	db	108	;'l'
  3963  00F8B3  65                 	db	101	;'e'
  3964  00F8B4  64                 	db	100	;'d'
  3965  00F8B5  2C                 	db	44
  3966  00F8B6  20                 	db	32
  3967  00F8B7  62                 	db	98	;'b'
  3968  00F8B8  75                 	db	117	;'u'
  3969  00F8B9  74                 	db	116	;'t'
  3970  00F8BA  20                 	db	32
  3971  00F8BB  64                 	db	100	;'d'
  3972  00F8BC  69                 	db	105	;'i'
  3973  00F8BD  6D                 	db	109	;'m'
  3974  00F8BE  6D                 	db	109	;'m'
  3975  00F8BF  69                 	db	105	;'i'
  3976  00F8C0  6E                 	db	110	;'n'
  3977  00F8C1  67                 	db	103	;'g'
  3978  00F8C2  20                 	db	32
  3979  00F8C3  69                 	db	105	;'i'
  3980  00F8C4  73                 	db	115	;'s'
  3981  00F8C5  20                 	db	32
  3982  00F8C6  64                 	db	100	;'d'
  3983  00F8C7  69                 	db	105	;'i'
  3984  00F8C8  73                 	db	115	;'s'
  3985  00F8C9  61                 	db	97	;'a'
  3986  00F8CA  62                 	db	98	;'b'
  3987  00F8CB  6C                 	db	108	;'l'
  3988  00F8CC  65                 	db	101	;'e'
  3989  00F8CD  64                 	db	100	;'d'
  3990  00F8CE  0A                 	db	10
  3991  00F8CF  0D                 	db	13
  3992  00F8D0  00                 	db	0
  3993  00F8D1                     STR_119:
  3994  00F8D1  4C                 	db	76	;'L'
  3995  00F8D2  6F                 	db	111	;'o'
  3996  00F8D3  61                 	db	97	;'a'
  3997  00F8D4  64                 	db	100	;'d'
  3998  00F8D5  20                 	db	32
  3999  00F8D6  6F                 	db	111	;'o'
  4000  00F8D7  6E                 	db	110	;'n'
  4001  00F8D8  20                 	db	32
  4002  00F8D9  74                 	db	116	;'t'
  4003  00F8DA  69                 	db	105	;'i'
  4004  00F8DB  6D                 	db	109	;'m'
  4005  00F8DC  65                 	db	101	;'e'
  4006  00F8DD  20                 	db	32
  4007  00F8DE  73                 	db	115	;'s'
  4008  00F8DF  69                 	db	105	;'i'
  4009  00F8E0  6E                 	db	110	;'n'
  4010  00F8E1  63                 	db	99	;'c'
  4011  00F8E2  65                 	db	101	;'e'
  4012  00F8E3  20                 	db	32
  4013  00F8E4  6C                 	db	108	;'l'
  4014  00F8E5  61                 	db	97	;'a'
  4015  00F8E6  73                 	db	115	;'s'
  4016  00F8E7  74                 	db	116	;'t'
  4017  00F8E8  20                 	db	32
  4018  00F8E9  64                 	db	100	;'d'
  4019  00F8EA  65                 	db	101	;'e'
  4020  00F8EB  76                 	db	118	;'v'
  4021  00F8EC  69                 	db	105	;'i'
  4022  00F8ED  63                 	db	99	;'c'
  4023  00F8EE  65                 	db	101	;'e'
  4024  00F8EF  20                 	db	32
  4025  00F8F0  72                 	db	114	;'r'
  4026  00F8F1  65                 	db	101	;'e'
  4027  00F8F2  73                 	db	115	;'s'
  4028  00F8F3  65                 	db	101	;'e'
  4029  00F8F4  74                 	db	116	;'t'
  4030  00F8F5  20                 	db	32
  4031  00F8F6  69                 	db	105	;'i'
  4032  00F8F7  73                 	db	115	;'s'
  4033  00F8F8  20                 	db	32
  4034  00F8F9  25                 	db	37
  4035  00F8FA  64                 	db	100	;'d'
  4036  00F8FB  20                 	db	32
  4037  00F8FC  73                 	db	115	;'s'
  4038  00F8FD  65                 	db	101	;'e'
  4039  00F8FE  63                 	db	99	;'c'
  4040  00F8FF  6F                 	db	111	;'o'
  4041  00F900  6E                 	db	110	;'n'
  4042  00F901  64                 	db	100	;'d'
  4043  00F902  73                 	db	115	;'s'
  4044  00F903  0A                 	db	10
  4045  00F904  0D                 	db	13
  4046  00F905  00                 	db	0
  4047  00F906                     STR_48:
  4048  00F906  54                 	db	84	;'T'
  4049  00F907  68                 	db	104	;'h'
  4050  00F908  65                 	db	101	;'e'
  4051  00F909  20                 	db	32
  4052  00F90A  63                 	db	99	;'c'
  4053  00F90B  61                 	db	97	;'a'
  4054  00F90C  75                 	db	117	;'u'
  4055  00F90D  73                 	db	115	;'s'
  4056  00F90E  65                 	db	101	;'e'
  4057  00F90F  20                 	db	32
  4058  00F910  6F                 	db	111	;'o'
  4059  00F911  66                 	db	102	;'f'
  4060  00F912  20                 	db	32
  4061  00F913  74                 	db	116	;'t'
  4062  00F914  68                 	db	104	;'h'
  4063  00F915  65                 	db	101	;'e'
  4064  00F916  20                 	db	32
  4065  00F917  6D                 	db	109	;'m'
  4066  00F918  6F                 	db	111	;'o'
  4067  00F919  73                 	db	115	;'s'
  4068  00F91A  74                 	db	116	;'t'
  4069  00F91B  20                 	db	32
  4070  00F91C  72                 	db	114	;'r'
  4071  00F91D  65                 	db	101	;'e'
  4072  00F91E  63                 	db	99	;'c'
  4073  00F91F  65                 	db	101	;'e'
  4074  00F920  6E                 	db	110	;'n'
  4075  00F921  74                 	db	116	;'t'
  4076  00F922  20                 	db	32
  4077  00F923  64                 	db	100	;'d'
  4078  00F924  65                 	db	101	;'e'
  4079  00F925  76                 	db	118	;'v'
  4080  00F926  69                 	db	105	;'i'
  4081  00F927  63                 	db	99	;'c'
  4082  00F928  65                 	db	101	;'e'
  4083  00F929  20                 	db	32
  4084  00F92A  72                 	db	114	;'r'
  4085  00F92B  65                 	db	101	;'e'
  4086  00F92C  73                 	db	115	;'s'
  4087  00F92D  65                 	db	101	;'e'
  4088  00F92E  74                 	db	116	;'t'
  4089  00F92F  20                 	db	32
  4090  00F930  77                 	db	119	;'w'
  4091  00F931  61                 	db	97	;'a'
  4092  00F932  73                 	db	115	;'s'
  4093  00F933  3A                 	db	58	;':'
  4094  00F934  20                 	db	32
  4095  00F935  25                 	db	37
  4096  00F936  73                 	db	115	;'s'
  4097  00F937  0A                 	db	10
  4098  00F938  0D                 	db	13
  4099  00F939  00                 	db	0
  4100  00F93A                     STR_69:
  4101  00F93A  54                 	db	84	;'T'
  4102  00F93B  68                 	db	104	;'h'
  4103  00F93C  65                 	db	101	;'e'
  4104  00F93D  20                 	db	32
  4105  00F93E  66                 	db	102	;'f'
  4106  00F93F  6F                 	db	111	;'o'
  4107  00F940  6C                 	db	108	;'l'
  4108  00F941  6C                 	db	108	;'l'
  4109  00F942  6F                 	db	111	;'o'
  4110  00F943  77                 	db	119	;'w'
  4111  00F944  69                 	db	105	;'i'
  4112  00F945  6E                 	db	110	;'n'
  4113  00F946  67                 	db	103	;'g'
  4114  00F947  20                 	db	32
  4115  00F948  63                 	db	99	;'c'
  4116  00F949  68                 	db	104	;'h'
  4117  00F94A  61                 	db	97	;'a'
  4118  00F94B  6E                 	db	110	;'n'
  4119  00F94C  6E                 	db	110	;'n'
  4120  00F94D  65                 	db	101	;'e'
  4121  00F94E  6C                 	db	108	;'l'
  4122  00F94F  20                 	db	32
  4123  00F950  63                 	db	99	;'c'
  4124  00F951  61                 	db	97	;'a'
  4125  00F952  75                 	db	117	;'u'
  4126  00F953  73                 	db	115	;'s'
  4127  00F954  65                 	db	101	;'e'
  4128  00F955  64                 	db	100	;'d'
  4129  00F956  20                 	db	32
  4130  00F957  61                 	db	97	;'a'
  4131  00F958  6E                 	db	110	;'n'
  4132  00F959  20                 	db	32
  4133  00F95A  41                 	db	65	;'A'
  4134  00F95B  44                 	db	68	;'D'
  4135  00F95C  43                 	db	67	;'C'
  4136  00F95D  20                 	db	32
  4137  00F95E  65                 	db	101	;'e'
  4138  00F95F  72                 	db	114	;'r'
  4139  00F960  72                 	db	114	;'r'
  4140  00F961  6F                 	db	111	;'o'
  4141  00F962  72                 	db	114	;'r'
  4142  00F963  3A                 	db	58	;':'
  4143  00F964  20                 	db	32
  4144  00F965  25                 	db	37
  4145  00F966  73                 	db	115	;'s'
  4146  00F967  0A                 	db	10
  4147  00F968  0D                 	db	13
  4148  00F969  00                 	db	0
  4149  00F96A                     STR_52:
  4150  00F96A  4D                 	db	77	;'M'
  4151  00F96B  61                 	db	97	;'a'
  4152  00F96C  72                 	db	114	;'r'
  4153  00F96D  71                 	db	113	;'q'
  4154  00F96E  75                 	db	117	;'u'
  4155  00F96F  65                 	db	101	;'e'
  4156  00F970  74                 	db	116	;'t'
  4157  00F971  74                 	db	116	;'t'
  4158  00F972  65                 	db	101	;'e'
  4159  00F973  20                 	db	32
  4160  00F974  55                 	db	85	;'U'
  4161  00F975  6E                 	db	110	;'n'
  4162  00F976  69                 	db	105	;'i'
  4163  00F977  76                 	db	118	;'v'
  4164  00F978  65                 	db	101	;'e'
  4165  00F979  72                 	db	114	;'r'
  4166  00F97A  73                 	db	115	;'s'
  4167  00F97B  69                 	db	105	;'i'
  4168  00F97C  74                 	db	116	;'t'
  4169  00F97D  79                 	db	121	;'y'
  4170  00F97E  20                 	db	32
  4171  00F97F  45                 	db	69	;'E'
  4172  00F980  4C                 	db	76	;'L'
  4173  00F981  45                 	db	69	;'E'
  4174  00F982  4E                 	db	78	;'N'
  4175  00F983  20                 	db	32
  4176  00F984  33                 	db	51	;'3'
  4177  00F985  30                 	db	48	;'0'
  4178  00F986  33                 	db	51	;'3'
  4179  00F987  35                 	db	53	;'5'
  4180  00F988  20                 	db	32
  4181  00F989  46                 	db	70	;'F'
  4182  00F98A  69                 	db	105	;'i'
  4183  00F98B  6E                 	db	110	;'n'
  4184  00F98C  61                 	db	97	;'a'
  4185  00F98D  6C                 	db	108	;'l'
  4186  00F98E  20                 	db	32
  4187  00F98F  50                 	db	80	;'P'
  4188  00F990  72                 	db	114	;'r'
  4189  00F991  6F                 	db	111	;'o'
  4190  00F992  6A                 	db	106	;'j'
  4191  00F993  65                 	db	101	;'e'
  4192  00F994  63                 	db	99	;'c'
  4193  00F995  74                 	db	116	;'t'
  4194  00F996  0A                 	db	10
  4195  00F997  0D                 	db	13
  4196  00F998  00                 	db	0
  4197  00F999                     STR_125:
  4198  00F999  45                 	db	69	;'E'
  4199  00F99A  72                 	db	114	;'r'
  4200  00F99B  72                 	db	114	;'r'
  4201  00F99C  6F                 	db	111	;'o'
  4202  00F99D  72                 	db	114	;'r'
  4203  00F99E  73                 	db	115	;'s'
  4204  00F99F  20                 	db	32
  4205  00F9A0  61                 	db	97	;'a'
  4206  00F9A1  6E                 	db	110	;'n'
  4207  00F9A2  64                 	db	100	;'d'
  4208  00F9A3  20                 	db	32
  4209  00F9A4  6E                 	db	110	;'n'
  4210  00F9A5  65                 	db	101	;'e'
  4211  00F9A6  67                 	db	103	;'g'
  4212  00F9A7  61                 	db	97	;'a'
  4213  00F9A8  74                 	db	116	;'t'
  4214  00F9A9  69                 	db	105	;'i'
  4215  00F9AA  76                 	db	118	;'v'
  4216  00F9AB  65                 	db	101	;'e'
  4217  00F9AC  20                 	db	32
  4218  00F9AD  72                 	db	114	;'r'
  4219  00F9AE  65                 	db	101	;'e'
  4220  00F9AF  73                 	db	115	;'s'
  4221  00F9B0  70                 	db	112	;'p'
  4222  00F9B1  6F                 	db	111	;'o'
  4223  00F9B2  6E                 	db	110	;'n'
  4224  00F9B3  73                 	db	115	;'s'
  4225  00F9B4  65                 	db	101	;'e'
  4226  00F9B5  73                 	db	115	;'s'
  4227  00F9B6  20                 	db	32
  4228  00F9B7  61                 	db	97	;'a'
  4229  00F9B8  70                 	db	112	;'p'
  4230  00F9B9  70                 	db	112	;'p'
  4231  00F9BA  65                 	db	101	;'e'
  4232  00F9BB  61                 	db	97	;'a'
  4233  00F9BC  72                 	db	114	;'r'
  4234  00F9BD  20                 	db	32
  4235  00F9BE  69                 	db	105	;'i'
  4236  00F9BF  6E                 	db	110	;'n'
  4237  00F9C0  20                 	db	32
  4238  00F9C1  72                 	db	114	;'r'
  4239  00F9C2  65                 	db	101	;'e'
  4240  00F9C3  64                 	db	100	;'d'
  4241  00F9C4  0A                 	db	10
  4242  00F9C5  0D                 	db	13
  4243  00F9C6  00                 	db	0
  4244  00F9C7                     STR_112:
  4245  00F9C7  45                 	db	69	;'E'
  4246  00F9C8  6E                 	db	110	;'n'
  4247  00F9C9  74                 	db	116	;'t'
  4248  00F9CA  65                 	db	101	;'e'
  4249  00F9CB  72                 	db	114	;'r'
  4250  00F9CC  20                 	db	32
  4251  00F9CD  27                 	db	39
  4252  00F9CE  48                 	db	72	;'H'
  4253  00F9CF  65                 	db	101	;'e'
  4254  00F9D0  6C                 	db	108	;'l'
  4255  00F9D1  70                 	db	112	;'p'
  4256  00F9D2  27                 	db	39
  4257  00F9D3  20                 	db	32
  4258  00F9D4  66                 	db	102	;'f'
  4259  00F9D5  6F                 	db	111	;'o'
  4260  00F9D6  72                 	db	114	;'r'
  4261  00F9D7  20                 	db	32
  4262  00F9D8  6C                 	db	108	;'l'
  4263  00F9D9  69                 	db	105	;'i'
  4264  00F9DA  73                 	db	115	;'s'
  4265  00F9DB  74                 	db	116	;'t'
  4266  00F9DC  20                 	db	32
  4267  00F9DD  6F                 	db	111	;'o'
  4268  00F9DE  66                 	db	102	;'f'
  4269  00F9DF  20                 	db	32
  4270  00F9E0  61                 	db	97	;'a'
  4271  00F9E1  76                 	db	118	;'v'
  4272  00F9E2  61                 	db	97	;'a'
  4273  00F9E3  69                 	db	105	;'i'
  4274  00F9E4  6C                 	db	108	;'l'
  4275  00F9E5  61                 	db	97	;'a'
  4276  00F9E6  62                 	db	98	;'b'
  4277  00F9E7  6C                 	db	108	;'l'
  4278  00F9E8  65                 	db	101	;'e'
  4279  00F9E9  20                 	db	32
  4280  00F9EA  63                 	db	99	;'c'
  4281  00F9EB  6F                 	db	111	;'o'
  4282  00F9EC  6D                 	db	109	;'m'
  4283  00F9ED  6D                 	db	109	;'m'
  4284  00F9EE  61                 	db	97	;'a'
  4285  00F9EF  6E                 	db	110	;'n'
  4286  00F9F0  64                 	db	100	;'d'
  4287  00F9F1  73                 	db	115	;'s'
  4288  00F9F2  0A                 	db	10
  4289  00F9F3  0D                 	db	13
  4290  00F9F4  00                 	db	0
  4291  00F9F5                     STR_75:
  4292  00F9F5  56                 	db	86	;'V'
  4293  00F9F6  43                 	db	67	;'C'
  4294  00F9F7  43                 	db	67	;'C'
  4295  00F9F8  20                 	db	32
  4296  00F9F9  4F                 	db	79	;'O'
  4297  00F9FA  76                 	db	118	;'v'
  4298  00F9FB  65                 	db	101	;'e'
  4299  00F9FC  72                 	db	114	;'r'
  4300  00F9FD  76                 	db	118	;'v'
  4301  00F9FE  6F                 	db	111	;'o'
  4302  00F9FF  6C                 	db	108	;'l'
  4303  00FA00  74                 	db	116	;'t'
  4304  00FA01  61                 	db	97	;'a'
  4305  00FA02  67                 	db	103	;'g'
  4306  00FA03  65                 	db	101	;'e'
  4307  00FA04  20                 	db	32
  4308  00FA05  63                 	db	99	;'c'
  4309  00FA06  6F                 	db	111	;'o'
  4310  00FA07  6E                 	db	110	;'n'
  4311  00FA08  64                 	db	100	;'d'
  4312  00FA09  69                 	db	105	;'i'
  4313  00FA0A  74                 	db	116	;'t'
  4314  00FA0B  69                 	db	105	;'i'
  4315  00FA0C  6F                 	db	111	;'o'
  4316  00FA0D  6E                 	db	110	;'n'
  4317  00FA0E  20                 	db	32
  4318  00FA0F  68                 	db	104	;'h'
  4319  00FA10  61                 	db	97	;'a'
  4320  00FA11  73                 	db	115	;'s'
  4321  00FA12  20                 	db	32
  4322  00FA13  6E                 	db	110	;'n'
  4323  00FA14  6F                 	db	111	;'o'
  4324  00FA15  74                 	db	116	;'t'
  4325  00FA16  20                 	db	32
  4326  00FA17  6F                 	db	111	;'o'
  4327  00FA18  63                 	db	99	;'c'
  4328  00FA19  63                 	db	99	;'c'
  4329  00FA1A  75                 	db	117	;'u'
  4330  00FA1B  72                 	db	114	;'r'
  4331  00FA1C  72                 	db	114	;'r'
  4332  00FA1D  65                 	db	101	;'e'
  4333  00FA1E  64                 	db	100	;'d'
  4334  00FA1F  0A                 	db	10
  4335  00FA20  0D                 	db	13
  4336  00FA21  00                 	db	0
  4337  00FA22                     STR_99:
  4338  00FA22  4C                 	db	76	;'L'
  4339  00FA23  6F                 	db	111	;'o'
  4340  00FA24  61                 	db	97	;'a'
  4341  00FA25  64                 	db	100	;'d'
  4342  00FA26  20                 	db	32
  4343  00FA27  68                 	db	104	;'h'
  4344  00FA28  61                 	db	97	;'a'
  4345  00FA29  73                 	db	115	;'s'
  4346  00FA2A  20                 	db	32
  4347  00FA2B  62                 	db	98	;'b'
  4348  00FA2C  65                 	db	101	;'e'
  4349  00FA2D  65                 	db	101	;'e'
  4350  00FA2E  6E                 	db	110	;'n'
  4351  00FA2F  20                 	db	32
  4352  00FA30  65                 	db	101	;'e'
  4353  00FA31  6E                 	db	110	;'n'
  4354  00FA32  61                 	db	97	;'a'
  4355  00FA33  62                 	db	98	;'b'
  4356  00FA34  6C                 	db	108	;'l'
  4357  00FA35  65                 	db	101	;'e'
  4358  00FA36  64                 	db	100	;'d'
  4359  00FA37  2C                 	db	44
  4360  00FA38  20                 	db	32
  4361  00FA39  64                 	db	100	;'d'
  4362  00FA3A  69                 	db	105	;'i'
  4363  00FA3B  6D                 	db	109	;'m'
  4364  00FA3C  6D                 	db	109	;'m'
  4365  00FA3D  69                 	db	105	;'i'
  4366  00FA3E  6E                 	db	110	;'n'
  4367  00FA3F  67                 	db	103	;'g'
  4368  00FA40  20                 	db	32
  4369  00FA41  64                 	db	100	;'d'
  4370  00FA42  69                 	db	105	;'i'
  4371  00FA43  73                 	db	115	;'s'
  4372  00FA44  61                 	db	97	;'a'
  4373  00FA45  62                 	db	98	;'b'
  4374  00FA46  6C                 	db	108	;'l'
  4375  00FA47  65                 	db	101	;'e'
  4376  00FA48  64                 	db	100	;'d'
  4377  00FA49  0A                 	db	10
  4378  00FA4A  0D                 	db	13
  4379  00FA4B  00                 	db	0
  4380  00FA4C                     STR_106:
  4381  00FA4C  4C                 	db	76	;'L'
  4382  00FA4D  6F                 	db	111	;'o'
  4383  00FA4E  61                 	db	97	;'a'
  4384  00FA4F  64                 	db	100	;'d'
  4385  00FA50  20                 	db	32
  4386  00FA51  61                 	db	97	;'a'
  4387  00FA52  6E                 	db	110	;'n'
  4388  00FA53  64                 	db	100	;'d'
  4389  00FA54  20                 	db	32
  4390  00FA55  64                 	db	100	;'d'
  4391  00FA56  69                 	db	105	;'i'
  4392  00FA57  6D                 	db	109	;'m'
  4393  00FA58  6D                 	db	109	;'m'
  4394  00FA59  69                 	db	105	;'i'
  4395  00FA5A  6E                 	db	110	;'n'
  4396  00FA5B  67                 	db	103	;'g'
  4397  00FA5C  20                 	db	32
  4398  00FA5D  61                 	db	97	;'a'
  4399  00FA5E  72                 	db	114	;'r'
  4400  00FA5F  65                 	db	101	;'e'
  4401  00FA60  20                 	db	32
  4402  00FA61  63                 	db	99	;'c'
  4403  00FA62  75                 	db	117	;'u'
  4404  00FA63  72                 	db	114	;'r'
  4405  00FA64  72                 	db	114	;'r'
  4406  00FA65  65                 	db	101	;'e'
  4407  00FA66  6E                 	db	110	;'n'
  4408  00FA67  74                 	db	116	;'t'
  4409  00FA68  6C                 	db	108	;'l'
  4410  00FA69  79                 	db	121	;'y'
  4411  00FA6A  20                 	db	32
  4412  00FA6B  64                 	db	100	;'d'
  4413  00FA6C  69                 	db	105	;'i'
  4414  00FA6D  73                 	db	115	;'s'
  4415  00FA6E  61                 	db	97	;'a'
  4416  00FA6F  62                 	db	98	;'b'
  4417  00FA70  6C                 	db	108	;'l'
  4418  00FA71  65                 	db	101	;'e'
  4419  00FA72  64                 	db	100	;'d'
  4420  00FA73  0A                 	db	10
  4421  00FA74  0D                 	db	13
  4422  00FA75  00                 	db	0
  4423  00FA76                     STR_135:
  4424  00FA76  57                 	db	87	;'W'
  4425  00FA77  69                 	db	105	;'i'
  4426  00FA78  6E                 	db	110	;'n'
  4427  00FA79  64                 	db	100	;'d'
  4428  00FA7A  6F                 	db	111	;'o'
  4429  00FA7B  77                 	db	119	;'w'
  4430  00FA7C  65                 	db	101	;'e'
  4431  00FA7D  64                 	db	100	;'d'
  4432  00FA7E  20                 	db	32
  4433  00FA7F  57                 	db	87	;'W'
  4434  00FA80  61                 	db	97	;'a'
  4435  00FA81  74                 	db	116	;'t'
  4436  00FA82  63                 	db	99	;'c'
  4437  00FA83  68                 	db	104	;'h'
  4438  00FA84  20                 	db	32
  4439  00FA85  44                 	db	68	;'D'
  4440  00FA86  6F                 	db	111	;'o'
  4441  00FA87  67                 	db	103	;'g'
  4442  00FA88  20                 	db	32
  4443  00FA89  54                 	db	84	;'T'
  4444  00FA8A  69                 	db	105	;'i'
  4445  00FA8B  6D                 	db	109	;'m'
  4446  00FA8C  65                 	db	101	;'e'
  4447  00FA8D  72                 	db	114	;'r'
  4448  00FA8E  20                 	db	32
  4449  00FA8F  56                 	db	86	;'V'
  4450  00FA90  69                 	db	105	;'i'
  4451  00FA91  6F                 	db	111	;'o'
  4452  00FA92  6C                 	db	108	;'l'
  4453  00FA93  61                 	db	97	;'a'
  4454  00FA94  74                 	db	116	;'t'
  4455  00FA95  69                 	db	105	;'i'
  4456  00FA96  6F                 	db	111	;'o'
  4457  00FA97  6E                 	db	110	;'n'
  4458  00FA98  20                 	db	32
  4459  00FA99  52                 	db	82	;'R'
  4460  00FA9A  65                 	db	101	;'e'
  4461  00FA9B  73                 	db	115	;'s'
  4462  00FA9C  65                 	db	101	;'e'
  4463  00FA9D  74                 	db	116	;'t'
  4464  00FA9E  00                 	db	0
  4465  00FA9F                     STR_97:
  4466  00FA9F  54                 	db	84	;'T'
  4467  00FAA0  52                 	db	82	;'R'
  4468  00FAA1  49                 	db	73	;'I'
  4469  00FAA2  41                 	db	65	;'A'
  4470  00FAA3  43                 	db	67	;'C'
  4471  00FAA4  20                 	db	32
  4472  00FAA5  6F                 	db	111	;'o'
  4473  00FAA6  75                 	db	117	;'u'
  4474  00FAA7  74                 	db	116	;'t'
  4475  00FAA8  70                 	db	112	;'p'
  4476  00FAA9  75                 	db	117	;'u'
  4477  00FAAA  74                 	db	116	;'t'
  4478  00FAAB  20                 	db	32
  4479  00FAAC  64                 	db	100	;'d'
  4480  00FAAD  69                 	db	105	;'i'
  4481  00FAAE  6D                 	db	109	;'m'
  4482  00FAAF  6D                 	db	109	;'m'
  4483  00FAB0  69                 	db	105	;'i'
  4484  00FAB1  6E                 	db	110	;'n'
  4485  00FAB2  67                 	db	103	;'g'
  4486  00FAB3  20                 	db	32
  4487  00FAB4  68                 	db	104	;'h'
  4488  00FAB5  61                 	db	97	;'a'
  4489  00FAB6  73                 	db	115	;'s'
  4490  00FAB7  20                 	db	32
  4491  00FAB8  62                 	db	98	;'b'
  4492  00FAB9  65                 	db	101	;'e'
  4493  00FABA  65                 	db	101	;'e'
  4494  00FABB  6E                 	db	110	;'n'
  4495  00FABC  20                 	db	32
  4496  00FABD  64                 	db	100	;'d'
  4497  00FABE  69                 	db	105	;'i'
  4498  00FABF  73                 	db	115	;'s'
  4499  00FAC0  61                 	db	97	;'a'
  4500  00FAC1  62                 	db	98	;'b'
  4501  00FAC2  6C                 	db	108	;'l'
  4502  00FAC3  65                 	db	101	;'e'
  4503  00FAC4  64                 	db	100	;'d'
  4504  00FAC5  0A                 	db	10
  4505  00FAC6  0D                 	db	13
  4506  00FAC7  00                 	db	0
  4507  00FAC8                     STR_95:
  4508  00FAC8  54                 	db	84	;'T'
  4509  00FAC9  52                 	db	82	;'R'
  4510  00FACA  49                 	db	73	;'I'
  4511  00FACB  41                 	db	65	;'A'
  4512  00FACC  43                 	db	67	;'C'
  4513  00FACD  20                 	db	32
  4514  00FACE  6F                 	db	111	;'o'
  4515  00FACF  75                 	db	117	;'u'
  4516  00FAD0  74                 	db	116	;'t'
  4517  00FAD1  70                 	db	112	;'p'
  4518  00FAD2  75                 	db	117	;'u'
  4519  00FAD3  74                 	db	116	;'t'
  4520  00FAD4  20                 	db	32
  4521  00FAD5  64                 	db	100	;'d'
  4522  00FAD6  69                 	db	105	;'i'
  4523  00FAD7  6D                 	db	109	;'m'
  4524  00FAD8  6D                 	db	109	;'m'
  4525  00FAD9  69                 	db	105	;'i'
  4526  00FADA  6E                 	db	110	;'n'
  4527  00FADB  67                 	db	103	;'g'
  4528  00FADC  20                 	db	32
  4529  00FADD  68                 	db	104	;'h'
  4530  00FADE  61                 	db	97	;'a'
  4531  00FADF  73                 	db	115	;'s'
  4532  00FAE0  20                 	db	32
  4533  00FAE1  62                 	db	98	;'b'
  4534  00FAE2  65                 	db	101	;'e'
  4535  00FAE3  65                 	db	101	;'e'
  4536  00FAE4  6E                 	db	110	;'n'
  4537  00FAE5  20                 	db	32
  4538  00FAE6  65                 	db	101	;'e'
  4539  00FAE7  6E                 	db	110	;'n'
  4540  00FAE8  61                 	db	97	;'a'
  4541  00FAE9  62                 	db	98	;'b'
  4542  00FAEA  6C                 	db	108	;'l'
  4543  00FAEB  65                 	db	101	;'e'
  4544  00FAEC  64                 	db	100	;'d'
  4545  00FAED  0A                 	db	10
  4546  00FAEE  0D                 	db	13
  4547  00FAEF  00                 	db	0
  4548  00FAF0                     STR_124:
  4549  00FAF0  4D                 	db	77	;'M'
  4550  00FAF1  65                 	db	101	;'e'
  4551  00FAF2  61                 	db	97	;'a'
  4552  00FAF3  73                 	db	115	;'s'
  4553  00FAF4  75                 	db	117	;'u'
  4554  00FAF5  72                 	db	114	;'r'
  4555  00FAF6  65                 	db	101	;'e'
  4556  00FAF7  6D                 	db	109	;'m'
  4557  00FAF8  65                 	db	101	;'e'
  4558  00FAF9  6E                 	db	110	;'n'
  4559  00FAFA  74                 	db	116	;'t'
  4560  00FAFB  20                 	db	32
  4561  00FAFC  72                 	db	114	;'r'
  4562  00FAFD  65                 	db	101	;'e'
  4563  00FAFE  73                 	db	115	;'s'
  4564  00FAFF  70                 	db	112	;'p'
  4565  00FB00  6F                 	db	111	;'o'
  4566  00FB01  6E                 	db	110	;'n'
  4567  00FB02  73                 	db	115	;'s'
  4568  00FB03  65                 	db	101	;'e'
  4569  00FB04  73                 	db	115	;'s'
  4570  00FB05  20                 	db	32
  4571  00FB06  61                 	db	97	;'a'
  4572  00FB07  70                 	db	112	;'p'
  4573  00FB08  70                 	db	112	;'p'
  4574  00FB09  65                 	db	101	;'e'
  4575  00FB0A  61                 	db	97	;'a'
  4576  00FB0B  72                 	db	114	;'r'
  4577  00FB0C  20                 	db	32
  4578  00FB0D  69                 	db	105	;'i'
  4579  00FB0E  6E                 	db	110	;'n'
  4580  00FB0F  20                 	db	32
  4581  00FB10  63                 	db	99	;'c'
  4582  00FB11  79                 	db	121	;'y'
  4583  00FB12  61                 	db	97	;'a'
  4584  00FB13  6E                 	db	110	;'n'
  4585  00FB14  0A                 	db	10
  4586  00FB15  0D                 	db	13
  4587  00FB16  00                 	db	0
  4588  00FB17                     STR_85:
  4589  00FB17  41                 	db	65	;'A'
  4590  00FB18  56                 	db	86	;'V'
  4591  00FB19  53                 	db	83	;'S'
  4592  00FB1A  53                 	db	83	;'S'
  4593  00FB1B  20                 	db	32
  4594  00FB1C  6D                 	db	109	;'m'
  4595  00FB1D  65                 	db	101	;'e'
  4596  00FB1E  61                 	db	97	;'a'
  4597  00FB1F  73                 	db	115	;'s'
  4598  00FB20  75                 	db	117	;'u'
  4599  00FB21  72                 	db	114	;'r'
  4600  00FB22  65                 	db	101	;'e'
  4601  00FB23  64                 	db	100	;'d'
  4602  00FB24  20                 	db	32
  4603  00FB25  61                 	db	97	;'a'
  4604  00FB26  73                 	db	115	;'s'
  4605  00FB27  20                 	db	32
  4606  00FB28  25                 	db	37
  4607  00FB29  2E                 	db	46
  4608  00FB2A  33                 	db	51	;'3'
  4609  00FB2B  66                 	db	102	;'f'
  4610  00FB2C  20                 	db	32
  4611  00FB2D  56                 	db	86	;'V'
  4612  00FB2E  6F                 	db	111	;'o'
  4613  00FB2F  6C                 	db	108	;'l'
  4614  00FB30  74                 	db	116	;'t'
  4615  00FB31  73                 	db	115	;'s'
  4616  00FB32  20                 	db	32
  4617  00FB33  62                 	db	98	;'b'
  4618  00FB34  79                 	db	121	;'y'
  4619  00FB35  20                 	db	32
  4620  00FB36  41                 	db	65	;'A'
  4621  00FB37  44                 	db	68	;'D'
  4622  00FB38  43                 	db	67	;'C'
  4623  00FB39  0A                 	db	10
  4624  00FB3A  0D                 	db	13
  4625  00FB3B  00                 	db	0
  4626  00FB3C                     STR_77:
  4627  00FB3C  2B                 	db	43
  4628  00FB3D  33                 	db	51	;'3'
  4629  00FB3E  2E                 	db	46
  4630  00FB3F  33                 	db	51	;'3'
  4631  00FB40  56                 	db	86	;'V'
  4632  00FB41  20                 	db	32
  4633  00FB42  72                 	db	114	;'r'
  4634  00FB43  61                 	db	97	;'a'
  4635  00FB44  69                 	db	105	;'i'
  4636  00FB45  6C                 	db	108	;'l'
  4637  00FB46  20                 	db	32
  4638  00FB47  6D                 	db	109	;'m'
  4639  00FB48  65                 	db	101	;'e'
  4640  00FB49  61                 	db	97	;'a'
  4641  00FB4A  73                 	db	115	;'s'
  4642  00FB4B  75                 	db	117	;'u'
  4643  00FB4C  72                 	db	114	;'r'
  4644  00FB4D  65                 	db	101	;'e'
  4645  00FB4E  64                 	db	100	;'d'
  4646  00FB4F  20                 	db	32
  4647  00FB50  61                 	db	97	;'a'
  4648  00FB51  73                 	db	115	;'s'
  4649  00FB52  20                 	db	32
  4650  00FB53  2B                 	db	43
  4651  00FB54  25                 	db	37
  4652  00FB55  2E                 	db	46
  4653  00FB56  33                 	db	51	;'3'
  4654  00FB57  66                 	db	102	;'f'
  4655  00FB58  20                 	db	32
  4656  00FB59  56                 	db	86	;'V'
  4657  00FB5A  6F                 	db	111	;'o'
  4658  00FB5B  6C                 	db	108	;'l'
  4659  00FB5C  74                 	db	116	;'t'
  4660  00FB5D  73                 	db	115	;'s'
  4661  00FB5E  0A                 	db	10
  4662  00FB5F  0D                 	db	13
  4663  00FB60  00                 	db	0
  4664  00FB61                     STR_113:
  4665  00FB61  44                 	db	68	;'D'
  4666  00FB62  69                 	db	105	;'i'
  4667  00FB63  6D                 	db	109	;'m'
  4668  00FB64  6D                 	db	109	;'m'
  4669  00FB65  69                 	db	105	;'i'
  4670  00FB66  6E                 	db	110	;'n'
  4671  00FB67  67                 	db	103	;'g'
  4672  00FB68  20                 	db	32
  4673  00FB69  68                 	db	104	;'h'
  4674  00FB6A  61                 	db	97	;'a'
  4675  00FB6B  73                 	db	115	;'s'
  4676  00FB6C  20                 	db	32
  4677  00FB6D  62                 	db	98	;'b'
  4678  00FB6E  65                 	db	101	;'e'
  4679  00FB6F  65                 	db	101	;'e'
  4680  00FB70  6E                 	db	110	;'n'
  4681  00FB71  20                 	db	32
  4682  00FB72  73                 	db	115	;'s'
  4683  00FB73  65                 	db	101	;'e'
  4684  00FB74  74                 	db	116	;'t'
  4685  00FB75  20                 	db	32
  4686  00FB76  74                 	db	116	;'t'
  4687  00FB77  6F                 	db	111	;'o'
  4688  00FB78  20                 	db	32
  4689  00FB79  25                 	db	37
  4690  00FB7A  64                 	db	100	;'d'
  4691  00FB7B  20                 	db	32
  4692  00FB7C  70                 	db	112	;'p'
  4693  00FB7D  65                 	db	101	;'e'
  4694  00FB7E  72                 	db	114	;'r'
  4695  00FB7F  63                 	db	99	;'c'
  4696  00FB80  65                 	db	101	;'e'
  4697  00FB81  6E                 	db	110	;'n'
  4698  00FB82  74                 	db	116	;'t'
  4699  00FB83  0A                 	db	10
  4700  00FB84  0D                 	db	13
  4701  00FB85  00                 	db	0
  4702  00FB86                     STR_81:
  4703  00FB86  44                 	db	68	;'D'
  4704  00FB87  69                 	db	105	;'i'
  4705  00FB88  65                 	db	101	;'e'
  4706  00FB89  20                 	db	32
  4707  00FB8A  54                 	db	84	;'T'
  4708  00FB8B  65                 	db	101	;'e'
  4709  00FB8C  6D                 	db	109	;'m'
  4710  00FB8D  70                 	db	112	;'p'
  4711  00FB8E  65                 	db	101	;'e'
  4712  00FB8F  72                 	db	114	;'r'
  4713  00FB90  61                 	db	97	;'a'
  4714  00FB91  74                 	db	116	;'t'
  4715  00FB92  75                 	db	117	;'u'
  4716  00FB93  72                 	db	114	;'r'
  4717  00FB94  65                 	db	101	;'e'
  4718  00FB95  20                 	db	32
  4719  00FB96  6D                 	db	109	;'m'
  4720  00FB97  65                 	db	101	;'e'
  4721  00FB98  61                 	db	97	;'a'
  4722  00FB99  73                 	db	115	;'s'
  4723  00FB9A  75                 	db	117	;'u'
  4724  00FB9B  72                 	db	114	;'r'
  4725  00FB9C  65                 	db	101	;'e'
  4726  00FB9D  64                 	db	100	;'d'
  4727  00FB9E  20                 	db	32
  4728  00FB9F  61                 	db	97	;'a'
  4729  00FBA0  73                 	db	115	;'s'
  4730  00FBA1  20                 	db	32
  4731  00FBA2  25                 	db	37
  4732  00FBA3  2E                 	db	46
  4733  00FBA4  33                 	db	51	;'3'
  4734  00FBA5  66                 	db	102	;'f'
  4735  00FBA6  43                 	db	67	;'C'
  4736  00FBA7  0A                 	db	10
  4737  00FBA8  0D                 	db	13
  4738  00FBA9  00                 	db	0
  4739  00FBAA                     STR_79:
  4740  00FBAA  2B                 	db	43
  4741  00FBAB  31                 	db	49	;'1'
  4742  00FBAC  32                 	db	50	;'2'
  4743  00FBAD  56                 	db	86	;'V'
  4744  00FBAE  20                 	db	32
  4745  00FBAF  72                 	db	114	;'r'
  4746  00FBB0  61                 	db	97	;'a'
  4747  00FBB1  69                 	db	105	;'i'
  4748  00FBB2  6C                 	db	108	;'l'
  4749  00FBB3  20                 	db	32
  4750  00FBB4  6D                 	db	109	;'m'
  4751  00FBB5  65                 	db	101	;'e'
  4752  00FBB6  61                 	db	97	;'a'
  4753  00FBB7  73                 	db	115	;'s'
  4754  00FBB8  75                 	db	117	;'u'
  4755  00FBB9  72                 	db	114	;'r'
  4756  00FBBA  65                 	db	101	;'e'
  4757  00FBBB  64                 	db	100	;'d'
  4758  00FBBC  20                 	db	32
  4759  00FBBD  61                 	db	97	;'a'
  4760  00FBBE  73                 	db	115	;'s'
  4761  00FBBF  20                 	db	32
  4762  00FBC0  2B                 	db	43
  4763  00FBC1  25                 	db	37
  4764  00FBC2  2E                 	db	46
  4765  00FBC3  33                 	db	51	;'3'
  4766  00FBC4  66                 	db	102	;'f'
  4767  00FBC5  20                 	db	32
  4768  00FBC6  56                 	db	86	;'V'
  4769  00FBC7  6F                 	db	111	;'o'
  4770  00FBC8  6C                 	db	108	;'l'
  4771  00FBC9  74                 	db	116	;'t'
  4772  00FBCA  73                 	db	115	;'s'
  4773  00FBCB  0A                 	db	10
  4774  00FBCC  0D                 	db	13
  4775  00FBCD  00                 	db	0
  4776  00FBCE                     STR_89:
  4777  00FBCE  52                 	db	82	;'R'
  4778  00FBCF  4D                 	db	77	;'M'
  4779  00FBD0  53                 	db	83	;'S'
  4780  00FBD1  20                 	db	32
  4781  00FBD2  4F                 	db	79	;'O'
  4782  00FBD3  75                 	db	117	;'u'
  4783  00FBD4  74                 	db	116	;'t'
  4784  00FBD5  70                 	db	112	;'p'
  4785  00FBD6  75                 	db	117	;'u'
  4786  00FBD7  74                 	db	116	;'t'
  4787  00FBD8  20                 	db	32
  4788  00FBD9  43                 	db	67	;'C'
  4789  00FBDA  75                 	db	117	;'u'
  4790  00FBDB  72                 	db	114	;'r'
  4791  00FBDC  72                 	db	114	;'r'
  4792  00FBDD  65                 	db	101	;'e'
  4793  00FBDE  6E                 	db	110	;'n'
  4794  00FBDF  74                 	db	116	;'t'
  4795  00FBE0  20                 	db	32
  4796  00FBE1  69                 	db	105	;'i'
  4797  00FBE2  73                 	db	115	;'s'
  4798  00FBE3  20                 	db	32
  4799  00FBE4  25                 	db	37
  4800  00FBE5  2E                 	db	46
  4801  00FBE6  33                 	db	51	;'3'
  4802  00FBE7  66                 	db	102	;'f'
  4803  00FBE8  20                 	db	32
  4804  00FBE9  41                 	db	65	;'A'
  4805  00FBEA  72                 	db	114	;'r'
  4806  00FBEB  6D                 	db	109	;'m'
  4807  00FBEC  73                 	db	115	;'s'
  4808  00FBED  0A                 	db	10
  4809  00FBEE  0D                 	db	13
  4810  00FBEF  00                 	db	0
  4811  00FBF0                     STR_91:
  4812  00FBF0  52                 	db	82	;'R'
  4813  00FBF1  4D                 	db	77	;'M'
  4814  00FBF2  53                 	db	83	;'S'
  4815  00FBF3  20                 	db	32
  4816  00FBF4  4F                 	db	79	;'O'
  4817  00FBF5  75                 	db	117	;'u'
  4818  00FBF6  74                 	db	116	;'t'
  4819  00FBF7  70                 	db	112	;'p'
  4820  00FBF8  75                 	db	117	;'u'
  4821  00FBF9  74                 	db	116	;'t'
  4822  00FBFA  20                 	db	32
  4823  00FBFB  56                 	db	86	;'V'
  4824  00FBFC  6F                 	db	111	;'o'
  4825  00FBFD  6C                 	db	108	;'l'
  4826  00FBFE  74                 	db	116	;'t'
  4827  00FBFF  61                 	db	97	;'a'
  4828  00FC00  67                 	db	103	;'g'
  4829  00FC01  65                 	db	101	;'e'
  4830  00FC02  20                 	db	32
  4831  00FC03  69                 	db	105	;'i'
  4832  00FC04  73                 	db	115	;'s'
  4833  00FC05  20                 	db	32
  4834  00FC06  25                 	db	37
  4835  00FC07  2E                 	db	46
  4836  00FC08  33                 	db	51	;'3'
  4837  00FC09  66                 	db	102	;'f'
  4838  00FC0A  20                 	db	32
  4839  00FC0B  56                 	db	86	;'V'
  4840  00FC0C  72                 	db	114	;'r'
  4841  00FC0D  6D                 	db	109	;'m'
  4842  00FC0E  73                 	db	115	;'s'
  4843  00FC0F  0A                 	db	10
  4844  00FC10  0D                 	db	13
  4845  00FC11  00                 	db	0
  4846  00FC12                     STR_87:
  4847  00FC12  4D                 	db	77	;'M'
  4848  00FC13  65                 	db	101	;'e'
  4849  00FC14  61                 	db	97	;'a'
  4850  00FC15  73                 	db	115	;'s'
  4851  00FC16  75                 	db	117	;'u'
  4852  00FC17  72                 	db	114	;'r'
  4853  00FC18  65                 	db	101	;'e'
  4854  00FC19  64                 	db	100	;'d'
  4855  00FC1A  20                 	db	32
  4856  00FC1B  43                 	db	67	;'C'
  4857  00FC1C  75                 	db	117	;'u'
  4858  00FC1D  72                 	db	114	;'r'
  4859  00FC1E  72                 	db	114	;'r'
  4860  00FC1F  65                 	db	101	;'e'
  4861  00FC20  6E                 	db	110	;'n'
  4862  00FC21  74                 	db	116	;'t'
  4863  00FC22  20                 	db	32
  4864  00FC23  69                 	db	105	;'i'
  4865  00FC24  73                 	db	115	;'s'
  4866  00FC25  20                 	db	32
  4867  00FC26  25                 	db	37
  4868  00FC27  2E                 	db	46
  4869  00FC28  33                 	db	51	;'3'
  4870  00FC29  66                 	db	102	;'f'
  4871  00FC2A  20                 	db	32
  4872  00FC2B  41                 	db	65	;'A'
  4873  00FC2C  6D                 	db	109	;'m'
  4874  00FC2D  70                 	db	112	;'p'
  4875  00FC2E  73                 	db	115	;'s'
  4876  00FC2F  0A                 	db	10
  4877  00FC30  0D                 	db	13
  4878  00FC31  00                 	db	0
  4879  00FC32                     STR_104:
  4880  00FC32  44                 	db	68	;'D'
  4881  00FC33  69                 	db	105	;'i'
  4882  00FC34  6D                 	db	109	;'m'
  4883  00FC35  6D                 	db	109	;'m'
  4884  00FC36  69                 	db	105	;'i'
  4885  00FC37  6E                 	db	110	;'n'
  4886  00FC38  67                 	db	103	;'g'
  4887  00FC39  20                 	db	32
  4888  00FC3A  69                 	db	105	;'i'
  4889  00FC3B  73                 	db	115	;'s'
  4890  00FC3C  20                 	db	32
  4891  00FC3D  63                 	db	99	;'c'
  4892  00FC3E  75                 	db	117	;'u'
  4893  00FC3F  72                 	db	114	;'r'
  4894  00FC40  72                 	db	114	;'r'
  4895  00FC41  65                 	db	101	;'e'
  4896  00FC42  6E                 	db	110	;'n'
  4897  00FC43  74                 	db	116	;'t'
  4898  00FC44  6C                 	db	108	;'l'
  4899  00FC45  79                 	db	121	;'y'
  4900  00FC46  20                 	db	32
  4901  00FC47  65                 	db	101	;'e'
  4902  00FC48  6E                 	db	110	;'n'
  4903  00FC49  61                 	db	97	;'a'
  4904  00FC4A  62                 	db	98	;'b'
  4905  00FC4B  6C                 	db	108	;'l'
  4906  00FC4C  65                 	db	101	;'e'
  4907  00FC4D  64                 	db	100	;'d'
  4908  00FC4E  0A                 	db	10
  4909  00FC4F  0D                 	db	13
  4910  00FC50  00                 	db	0
  4911  00FC51                     STR_126:
  4912  00FC51  55                 	db	85	;'U'
  4913  00FC52  73                 	db	115	;'s'
  4914  00FC53  65                 	db	101	;'e'
  4915  00FC54  72                 	db	114	;'r'
  4916  00FC55  20                 	db	32
  4917  00FC56  69                 	db	105	;'i'
  4918  00FC57  6E                 	db	110	;'n'
  4919  00FC58  70                 	db	112	;'p'
  4920  00FC59  75                 	db	117	;'u'
  4921  00FC5A  74                 	db	116	;'t'
  4922  00FC5B  20                 	db	32
  4923  00FC5C  61                 	db	97	;'a'
  4924  00FC5D  70                 	db	112	;'p'
  4925  00FC5E  70                 	db	112	;'p'
  4926  00FC5F  65                 	db	101	;'e'
  4927  00FC60  61                 	db	97	;'a'
  4928  00FC61  72                 	db	114	;'r'
  4929  00FC62  73                 	db	115	;'s'
  4930  00FC63  20                 	db	32
  4931  00FC64  69                 	db	105	;'i'
  4932  00FC65  6E                 	db	110	;'n'
  4933  00FC66  20                 	db	32
  4934  00FC67  77                 	db	119	;'w'
  4935  00FC68  68                 	db	104	;'h'
  4936  00FC69  69                 	db	105	;'i'
  4937  00FC6A  74                 	db	116	;'t'
  4938  00FC6B  65                 	db	101	;'e'
  4939  00FC6C  0A                 	db	10
  4940  00FC6D  0D                 	db	13
  4941  00FC6E  00                 	db	0
  4942  00FC6F                     STR_102:
  4943  00FC6F  4C                 	db	76	;'L'
  4944  00FC70  6F                 	db	111	;'o'
  4945  00FC71  61                 	db	97	;'a'
  4946  00FC72  64                 	db	100	;'d'
  4947  00FC73  20                 	db	32
  4948  00FC74  69                 	db	105	;'i'
  4949  00FC75  73                 	db	115	;'s'
  4950  00FC76  20                 	db	32
  4951  00FC77  63                 	db	99	;'c'
  4952  00FC78  75                 	db	117	;'u'
  4953  00FC79  72                 	db	114	;'r'
  4954  00FC7A  72                 	db	114	;'r'
  4955  00FC7B  65                 	db	101	;'e'
  4956  00FC7C  6E                 	db	110	;'n'
  4957  00FC7D  74                 	db	116	;'t'
  4958  00FC7E  6C                 	db	108	;'l'
  4959  00FC7F  79                 	db	121	;'y'
  4960  00FC80  20                 	db	32
  4961  00FC81  64                 	db	100	;'d'
  4962  00FC82  69                 	db	105	;'i'
  4963  00FC83  73                 	db	115	;'s'
  4964  00FC84  61                 	db	97	;'a'
  4965  00FC85  62                 	db	98	;'b'
  4966  00FC86  6C                 	db	108	;'l'
  4967  00FC87  65                 	db	101	;'e'
  4968  00FC88  64                 	db	100	;'d'
  4969  00FC89  0A                 	db	10
  4970  00FC8A  0D                 	db	13
  4971  00FC8B  00                 	db	0
  4972  00FC8C                     STR_101:
  4973  00FC8C  4C                 	db	76	;'L'
  4974  00FC8D  6F                 	db	111	;'o'
  4975  00FC8E  61                 	db	97	;'a'
  4976  00FC8F  64                 	db	100	;'d'
  4977  00FC90  20                 	db	32
  4978  00FC91  69                 	db	105	;'i'
  4979  00FC92  73                 	db	115	;'s'
  4980  00FC93  20                 	db	32
  4981  00FC94  63                 	db	99	;'c'
  4982  00FC95  75                 	db	117	;'u'
  4983  00FC96  72                 	db	114	;'r'
  4984  00FC97  72                 	db	114	;'r'
  4985  00FC98  65                 	db	101	;'e'
  4986  00FC99  6E                 	db	110	;'n'
  4987  00FC9A  74                 	db	116	;'t'
  4988  00FC9B  6C                 	db	108	;'l'
  4989  00FC9C  79                 	db	121	;'y'
  4990  00FC9D  20                 	db	32
  4991  00FC9E  65                 	db	101	;'e'
  4992  00FC9F  6E                 	db	110	;'n'
  4993  00FCA0  61                 	db	97	;'a'
  4994  00FCA1  62                 	db	98	;'b'
  4995  00FCA2  6C                 	db	108	;'l'
  4996  00FCA3  65                 	db	101	;'e'
  4997  00FCA4  64                 	db	100	;'d'
  4998  00FCA5  0A                 	db	10
  4999  00FCA6  0D                 	db	13
  5000  00FCA7  00                 	db	0
  5001  00FCA8                     STR_136:
  5002  00FCA8  52                 	db	82	;'R'
  5003  00FCA9  45                 	db	69	;'E'
  5004  00FCAA  53                 	db	83	;'S'
  5005  00FCAB  45                 	db	69	;'E'
  5006  00FCAC  54                 	db	84	;'T'
  5007  00FCAD  20                 	db	32
  5008  00FCAE  49                 	db	73	;'I'
  5009  00FCAF  6E                 	db	110	;'n'
  5010  00FCB0  73                 	db	115	;'s'
  5011  00FCB1  74                 	db	116	;'t'
  5012  00FCB2  72                 	db	114	;'r'
  5013  00FCB3  75                 	db	117	;'u'
  5014  00FCB4  63                 	db	99	;'c'
  5015  00FCB5  74                 	db	116	;'t'
  5016  00FCB6  69                 	db	105	;'i'
  5017  00FCB7  6F                 	db	111	;'o'
  5018  00FCB8  6E                 	db	110	;'n'
  5019  00FCB9  20                 	db	32
  5020  00FCBA  45                 	db	69	;'E'
  5021  00FCBB  78                 	db	120	;'x'
  5022  00FCBC  65                 	db	101	;'e'
  5023  00FCBD  63                 	db	99	;'c'
  5024  00FCBE  75                 	db	117	;'u'
  5025  00FCBF  74                 	db	116	;'t'
  5026  00FCC0  65                 	db	101	;'e'
  5027  00FCC1  64                 	db	100	;'d'
  5028  00FCC2  00                 	db	0
  5029  00FCC3                     STR_86:
  5030  00FCC3  4D                 	db	77	;'M'
  5031  00FCC4  65                 	db	101	;'e'
  5032  00FCC5  61                 	db	97	;'a'
  5033  00FCC6  73                 	db	115	;'s'
  5034  00FCC7  75                 	db	117	;'u'
  5035  00FCC8  72                 	db	114	;'r'
  5036  00FCC9  65                 	db	101	;'e'
  5037  00FCCA  20                 	db	32
  5038  00FCCB  44                 	db	68	;'D'
  5039  00FCCC  65                 	db	101	;'e'
  5040  00FCCD  74                 	db	116	;'t'
  5041  00FCCE  65                 	db	101	;'e'
  5042  00FCCF  63                 	db	99	;'c'
  5043  00FCD0  74                 	db	116	;'t'
  5044  00FCD1  65                 	db	101	;'e'
  5045  00FCD2  64                 	db	100	;'d'
  5046  00FCD3  20                 	db	32
  5047  00FCD4  43                 	db	67	;'C'
  5048  00FCD5  75                 	db	117	;'u'
  5049  00FCD6  72                 	db	114	;'r'
  5050  00FCD7  72                 	db	114	;'r'
  5051  00FCD8  65                 	db	101	;'e'
  5052  00FCD9  6E                 	db	110	;'n'
  5053  00FCDA  74                 	db	116	;'t'
  5054  00FCDB  3F                 	db	63	;'?'
  5055  00FCDC  00                 	db	0
  5056  00FCDD                     STR_108:
  5057  00FCDD  4C                 	db	76	;'L'
  5058  00FCDE  6F                 	db	111	;'o'
  5059  00FCDF  61                 	db	97	;'a'
  5060  00FCE0  64                 	db	100	;'d'
  5061  00FCE1  20                 	db	32
  5062  00FCE2  68                 	db	104	;'h'
  5063  00FCE3  61                 	db	97	;'a'
  5064  00FCE4  73                 	db	115	;'s'
  5065  00FCE5  20                 	db	32
  5066  00FCE6  62                 	db	98	;'b'
  5067  00FCE7  65                 	db	101	;'e'
  5068  00FCE8  65                 	db	101	;'e'
  5069  00FCE9  6E                 	db	110	;'n'
  5070  00FCEA  20                 	db	32
  5071  00FCEB  64                 	db	100	;'d'
  5072  00FCEC  69                 	db	105	;'i'
  5073  00FCED  73                 	db	115	;'s'
  5074  00FCEE  61                 	db	97	;'a'
  5075  00FCEF  62                 	db	98	;'b'
  5076  00FCF0  6C                 	db	108	;'l'
  5077  00FCF1  65                 	db	101	;'e'
  5078  00FCF2  64                 	db	100	;'d'
  5079  00FCF3  0A                 	db	10
  5080  00FCF4  0D                 	db	13
  5081  00FCF5  00                 	db	0
  5082  00FCF6                     STR_109:
  5083  00FCF6  53                 	db	83	;'S'
  5084  00FCF7  65                 	db	101	;'e'
  5085  00FCF8  74                 	db	116	;'t'
  5086  00FCF9  20                 	db	32
  5087  00FCFA  44                 	db	68	;'D'
  5088  00FCFB  69                 	db	105	;'i'
  5089  00FCFC  6D                 	db	109	;'m'
  5090  00FCFD  6D                 	db	109	;'m'
  5091  00FCFE  69                 	db	105	;'i'
  5092  00FCFF  6E                 	db	110	;'n'
  5093  00FD00  67                 	db	103	;'g'
  5094  00FD01  20                 	db	32
  5095  00FD02  50                 	db	80	;'P'
  5096  00FD03  65                 	db	101	;'e'
  5097  00FD04  72                 	db	114	;'r'
  5098  00FD05  63                 	db	99	;'c'
  5099  00FD06  65                 	db	101	;'e'
  5100  00FD07  6E                 	db	110	;'n'
  5101  00FD08  74                 	db	116	;'t'
  5102  00FD09  61                 	db	97	;'a'
  5103  00FD0A  67                 	db	103	;'g'
  5104  00FD0B  65                 	db	101	;'e'
  5105  00FD0C  3A                 	db	58	;':'
  5106  00FD0D  20                 	db	32
  5107  00FD0E  00                 	db	0
  5108  00FD0F                     STR_70:
  5109  00FD0F  4E                 	db	78	;'N'
  5110  00FD10  6F                 	db	111	;'o'
  5111  00FD11  20                 	db	32
  5112  00FD12  41                 	db	65	;'A'
  5113  00FD13  44                 	db	68	;'D'
  5114  00FD14  43                 	db	67	;'C'
  5115  00FD15  20                 	db	32
  5116  00FD16  45                 	db	69	;'E'
  5117  00FD17  72                 	db	114	;'r'
  5118  00FD18  72                 	db	114	;'r'
  5119  00FD19  6F                 	db	111	;'o'
  5120  00FD1A  72                 	db	114	;'r'
  5121  00FD1B  20                 	db	32
  5122  00FD1C  64                 	db	100	;'d'
  5123  00FD1D  65                 	db	101	;'e'
  5124  00FD1E  74                 	db	116	;'t'
  5125  00FD1F  65                 	db	101	;'e'
  5126  00FD20  63                 	db	99	;'c'
  5127  00FD21  74                 	db	116	;'t'
  5128  00FD22  65                 	db	101	;'e'
  5129  00FD23  64                 	db	100	;'d'
  5130  00FD24  0A                 	db	10
  5131  00FD25  0D                 	db	13
  5132  00FD26  00                 	db	0
  5133  00FD27                     STR_138:
  5134  00FD27  53                 	db	83	;'S'
  5135  00FD28  74                 	db	116	;'t'
  5136  00FD29  61                 	db	97	;'a'
  5137  00FD2A  63                 	db	99	;'c'
  5138  00FD2B  6B                 	db	107	;'k'
  5139  00FD2C  20                 	db	32
  5140  00FD2D  55                 	db	85	;'U'
  5141  00FD2E  6E                 	db	110	;'n'
  5142  00FD2F  64                 	db	100	;'d'
  5143  00FD30  65                 	db	101	;'e'
  5144  00FD31  72                 	db	114	;'r'
  5145  00FD32  66                 	db	102	;'f'
  5146  00FD33  6C                 	db	108	;'l'
  5147  00FD34  6F                 	db	111	;'o'
  5148  00FD35  77                 	db	119	;'w'
  5149  00FD36  20                 	db	32
  5150  00FD37  52                 	db	82	;'R'
  5151  00FD38  65                 	db	101	;'e'
  5152  00FD39  73                 	db	115	;'s'
  5153  00FD3A  65                 	db	101	;'e'
  5154  00FD3B  74                 	db	116	;'t'
  5155  00FD3C  00                 	db	0
  5156  00FD3D                     STR_67:
  5157  00FD3D  49                 	db	73	;'I'
  5158  00FD3E  6E                 	db	110	;'n'
  5159  00FD3F  74                 	db	116	;'t'
  5160  00FD40  65                 	db	101	;'e'
  5161  00FD41  72                 	db	114	;'r'
  5162  00FD42  6E                 	db	110	;'n'
  5163  00FD43  61                 	db	97	;'a'
  5164  00FD44  6C                 	db	108	;'l'
  5165  00FD45  20                 	db	32
  5166  00FD46  46                 	db	70	;'F'
  5167  00FD47  56                 	db	86	;'V'
  5168  00FD48  52                 	db	82	;'R'
  5169  00FD49  20                 	db	32
  5170  00FD4A  42                 	db	66	;'B'
  5171  00FD4B  75                 	db	117	;'u'
  5172  00FD4C  66                 	db	102	;'f'
  5173  00FD4D  66                 	db	102	;'f'
  5174  00FD4E  65                 	db	101	;'e'
  5175  00FD4F  72                 	db	114	;'r'
  5176  00FD50  20                 	db	32
  5177  00FD51  31                 	db	49	;'1'
  5178  00FD52  00                 	db	0
  5179  00FD53                     STR_137:
  5180  00FD53  53                 	db	83	;'S'
  5181  00FD54  74                 	db	116	;'t'
  5182  00FD55  61                 	db	97	;'a'
  5183  00FD56  63                 	db	99	;'c'
  5184  00FD57  6B                 	db	107	;'k'
  5185  00FD58  20                 	db	32
  5186  00FD59  4F                 	db	79	;'O'
  5187  00FD5A  76                 	db	118	;'v'
  5188  00FD5B  65                 	db	101	;'e'
  5189  00FD5C  72                 	db	114	;'r'
  5190  00FD5D  66                 	db	102	;'f'
  5191  00FD5E  6C                 	db	108	;'l'
  5192  00FD5F  6F                 	db	111	;'o'
  5193  00FD60  77                 	db	119	;'w'
  5194  00FD61  20                 	db	32
  5195  00FD62  52                 	db	82	;'R'
  5196  00FD63  65                 	db	101	;'e'
  5197  00FD64  73                 	db	115	;'s'
  5198  00FD65  65                 	db	101	;'e'
  5199  00FD66  74                 	db	116	;'t'
  5200  00FD67  00                 	db	0
  5201  00FD68                     STR_72:
  5202  00FD68  43                 	db	67	;'C'
  5203  00FD69  6C                 	db	108	;'l'
  5204  00FD6A  65                 	db	101	;'e'
  5205  00FD6B  61                 	db	97	;'a'
  5206  00FD6C  72                 	db	114	;'r'
  5207  00FD6D  69                 	db	105	;'i'
  5208  00FD6E  6E                 	db	110	;'n'
  5209  00FD6F  67                 	db	103	;'g'
  5210  00FD70  20                 	db	32
  5211  00FD71  41                 	db	65	;'A'
  5212  00FD72  44                 	db	68	;'D'
  5213  00FD73  43                 	db	67	;'C'
  5214  00FD74  20                 	db	32
  5215  00FD75  45                 	db	69	;'E'
  5216  00FD76  72                 	db	114	;'r'
  5217  00FD77  72                 	db	114	;'r'
  5218  00FD78  6F                 	db	111	;'o'
  5219  00FD79  72                 	db	114	;'r'
  5220  00FD7A  0A                 	db	10
  5221  00FD7B  0D                 	db	13
  5222  00FD7C  00                 	db	0
  5223  00FD7D                     STR_90:
  5224  00FD7D  4D                 	db	77	;'M'
  5225  00FD7E  65                 	db	101	;'e'
  5226  00FD7F  61                 	db	97	;'a'
  5227  00FD80  73                 	db	115	;'s'
  5228  00FD81  75                 	db	117	;'u'
  5229  00FD82  72                 	db	114	;'r'
  5230  00FD83  65                 	db	101	;'e'
  5231  00FD84  20                 	db	32
  5232  00FD85  52                 	db	82	;'R'
  5233  00FD86  4D                 	db	77	;'M'
  5234  00FD87  53                 	db	83	;'S'
  5235  00FD88  20                 	db	32
  5236  00FD89  56                 	db	86	;'V'
  5237  00FD8A  6F                 	db	111	;'o'
  5238  00FD8B  6C                 	db	108	;'l'
  5239  00FD8C  74                 	db	116	;'t'
  5240  00FD8D  61                 	db	97	;'a'
  5241  00FD8E  67                 	db	103	;'g'
  5242  00FD8F  65                 	db	101	;'e'
  5243  00FD90  3F                 	db	63	;'?'
  5244  00FD91  00                 	db	0
  5245  00FD92                     STR_88:
  5246  00FD92  4D                 	db	77	;'M'
  5247  00FD93  65                 	db	101	;'e'
  5248  00FD94  61                 	db	97	;'a'
  5249  00FD95  73                 	db	115	;'s'
  5250  00FD96  75                 	db	117	;'u'
  5251  00FD97  72                 	db	114	;'r'
  5252  00FD98  65                 	db	101	;'e'
  5253  00FD99  20                 	db	32
  5254  00FD9A  52                 	db	82	;'R'
  5255  00FD9B  4D                 	db	77	;'M'
  5256  00FD9C  53                 	db	83	;'S'
  5257  00FD9D  20                 	db	32
  5258  00FD9E  43                 	db	67	;'C'
  5259  00FD9F  75                 	db	117	;'u'
  5260  00FDA0  72                 	db	114	;'r'
  5261  00FDA1  72                 	db	114	;'r'
  5262  00FDA2  65                 	db	101	;'e'
  5263  00FDA3  6E                 	db	110	;'n'
  5264  00FDA4  74                 	db	116	;'t'
  5265  00FDA5  3F                 	db	63	;'?'
  5266  00FDA6  00                 	db	0
  5267  00FDA7                     STR_133:
  5268  00FDA7  4D                 	db	77	;'M'
  5269  00FDA8  61                 	db	97	;'a'
  5270  00FDA9  73                 	db	115	;'s'
  5271  00FDAA  74                 	db	116	;'t'
  5272  00FDAB  65                 	db	101	;'e'
  5273  00FDAC  72                 	db	114	;'r'
  5274  00FDAD  20                 	db	32
  5275  00FDAE  43                 	db	67	;'C'
  5276  00FDAF  6C                 	db	108	;'l'
  5277  00FDB0  65                 	db	101	;'e'
  5278  00FDB1  61                 	db	97	;'a'
  5279  00FDB2  72                 	db	114	;'r'
  5280  00FDB3  20                 	db	32
  5281  00FDB4  52                 	db	82	;'R'
  5282  00FDB5  65                 	db	101	;'e'
  5283  00FDB6  73                 	db	115	;'s'
  5284  00FDB7  65                 	db	101	;'e'
  5285  00FDB8  74                 	db	116	;'t'
  5286  00FDB9  00                 	db	0
  5287  00FDBA                     STR_80:
  5288  00FDBA  4D                 	db	77	;'M'
  5289  00FDBB  65                 	db	101	;'e'
  5290  00FDBC  61                 	db	97	;'a'
  5291  00FDBD  73                 	db	115	;'s'
  5292  00FDBE  75                 	db	117	;'u'
  5293  00FDBF  72                 	db	114	;'r'
  5294  00FDC0  65                 	db	101	;'e'
  5295  00FDC1  20                 	db	32
  5296  00FDC2  44                 	db	68	;'D'
  5297  00FDC3  69                 	db	105	;'i'
  5298  00FDC4  65                 	db	101	;'e'
  5299  00FDC5  20                 	db	32
  5300  00FDC6  54                 	db	84	;'T'
  5301  00FDC7  65                 	db	101	;'e'
  5302  00FDC8  6D                 	db	109	;'m'
  5303  00FDC9  70                 	db	112	;'p'
  5304  00FDCA  3F                 	db	63	;'?'
  5305  00FDCB  00                 	db	0
  5306  00FDCC                     STR_141:
  5307  00FDCC  30                 	db	48	;'0'
  5308  00FDCD  31                 	db	49	;'1'
  5309  00FDCE  32                 	db	50	;'2'
  5310  00FDCF  33                 	db	51	;'3'
  5311  00FDD0  34                 	db	52	;'4'
  5312  00FDD1  35                 	db	53	;'5'
  5313  00FDD2  36                 	db	54	;'6'
  5314  00FDD3  37                 	db	55	;'7'
  5315  00FDD4  38                 	db	56	;'8'
  5316  00FDD5  39                 	db	57	;'9'
  5317  00FDD6  41                 	db	65	;'A'
  5318  00FDD7  42                 	db	66	;'B'
  5319  00FDD8  43                 	db	67	;'C'
  5320  00FDD9  44                 	db	68	;'D'
  5321  00FDDA  45                 	db	69	;'E'
  5322  00FDDB  46                 	db	70	;'F'
  5323  00FDDC  00                 	db	0
  5324  00FDDD                     STR_51:
  5325  00FDDD  41                 	db	65	;'A'
  5326  00FDDE  43                 	db	67	;'C'
  5327  00FDDF  20                 	db	32
  5328  00FDE0  50                 	db	80	;'P'
  5329  00FDE1  6F                 	db	111	;'o'
  5330  00FDE2  77                 	db	119	;'w'
  5331  00FDE3  65                 	db	101	;'e'
  5332  00FDE4  72                 	db	114	;'r'
  5333  00FDE5  20                 	db	32
  5334  00FDE6  4D                 	db	77	;'M'
  5335  00FDE7  65                 	db	101	;'e'
  5336  00FDE8  74                 	db	116	;'t'
  5337  00FDE9  65                 	db	101	;'e'
  5338  00FDEA  72                 	db	114	;'r'
  5339  00FDEB  0A                 	db	10
  5340  00FDEC  0D                 	db	13
  5341  00FDED  00                 	db	0
  5342  00FDEE                     STR_103:
  5343  00FDEE  44                 	db	68	;'D'
  5344  00FDEF  69                 	db	105	;'i'
  5345  00FDF0  6D                 	db	109	;'m'
  5346  00FDF1  6D                 	db	109	;'m'
  5347  00FDF2  69                 	db	105	;'i'
  5348  00FDF3  6E                 	db	110	;'n'
  5349  00FDF4  67                 	db	103	;'g'
  5350  00FDF5  20                 	db	32
  5351  00FDF6  45                 	db	69	;'E'
  5352  00FDF7  6E                 	db	110	;'n'
  5353  00FDF8  61                 	db	97	;'a'
  5354  00FDF9  62                 	db	98	;'b'
  5355  00FDFA  6C                 	db	108	;'l'
  5356  00FDFB  65                 	db	101	;'e'
  5357  00FDFC  64                 	db	100	;'d'
  5358  00FDFD  3F                 	db	63	;'?'
  5359  00FDFE  00                 	db	0
  5360  00FDFF                     STR_73:
  5361  00FDFF  56                 	db	86	;'V'
  5362  00FE00  43                 	db	67	;'C'
  5363  00FE01  43                 	db	67	;'C'
  5364  00FE02  20                 	db	32
  5365  00FE03  4F                 	db	79	;'O'
  5366  00FE04  76                 	db	118	;'v'
  5367  00FE05  65                 	db	101	;'e'
  5368  00FE06  72                 	db	114	;'r'
  5369  00FE07  76                 	db	118	;'v'
  5370  00FE08  6F                 	db	111	;'o'
  5371  00FE09  6C                 	db	108	;'l'
  5372  00FE0A  74                 	db	116	;'t'
  5373  00FE0B  61                 	db	97	;'a'
  5374  00FE0C  67                 	db	103	;'g'
  5375  00FE0D  65                 	db	101	;'e'
  5376  00FE0E  3F                 	db	63	;'?'
  5377  00FE0F  00                 	db	0
  5378  00FE10                     STR_130:
  5379  00FE10  55                 	db	85	;'U'
  5380  00FE11  6E                 	db	110	;'n'
  5381  00FE12  64                 	db	100	;'d'
  5382  00FE13  65                 	db	101	;'e'
  5383  00FE14  66                 	db	102	;'f'
  5384  00FE15  69                 	db	105	;'i'
  5385  00FE16  6E                 	db	110	;'n'
  5386  00FE17  65                 	db	101	;'e'
  5387  00FE18  64                 	db	100	;'d'
  5388  00FE19  20                 	db	32
  5389  00FE1A  52                 	db	82	;'R'
  5390  00FE1B  65                 	db	101	;'e'
  5391  00FE1C  73                 	db	115	;'s'
  5392  00FE1D  65                 	db	101	;'e'
  5393  00FE1E  74                 	db	116	;'t'
  5394  00FE1F  00                 	db	0
  5395  00FE20                     STR_132:
  5396  00FE20  42                 	db	66	;'B'
  5397  00FE21  72                 	db	114	;'r'
  5398  00FE22  6F                 	db	111	;'o'
  5399  00FE23  77                 	db	119	;'w'
  5400  00FE24  6E                 	db	110	;'n'
  5401  00FE25  20                 	db	32
  5402  00FE26  4F                 	db	79	;'O'
  5403  00FE27  75                 	db	117	;'u'
  5404  00FE28  74                 	db	116	;'t'
  5405  00FE29  20                 	db	32
  5406  00FE2A  52                 	db	82	;'R'
  5407  00FE2B  65                 	db	101	;'e'
  5408  00FE2C  73                 	db	115	;'s'
  5409  00FE2D  65                 	db	101	;'e'
  5410  00FE2E  74                 	db	116	;'t'
  5411  00FE2F  00                 	db	0
  5412  00FE30                     STR_76:
  5413  00FE30  4D                 	db	77	;'M'
  5414  00FE31  65                 	db	101	;'e'
  5415  00FE32  61                 	db	97	;'a'
  5416  00FE33  73                 	db	115	;'s'
  5417  00FE34  75                 	db	117	;'u'
  5418  00FE35  72                 	db	114	;'r'
  5419  00FE36  65                 	db	101	;'e'
  5420  00FE37  20                 	db	32
  5421  00FE38  50                 	db	80	;'P'
  5422  00FE39  4F                 	db	79	;'O'
  5423  00FE3A  53                 	db	83	;'S'
  5424  00FE3B  33                 	db	51	;'3'
  5425  00FE3C  50                 	db	80	;'P'
  5426  00FE3D  33                 	db	51	;'3'
  5427  00FE3E  3F                 	db	63	;'?'
  5428  00FE3F  00                 	db	0
  5429  00FE40                     STR_116:
  5430  00FE40  44                 	db	68	;'D'
  5431  00FE41  65                 	db	101	;'e'
  5432  00FE42  76                 	db	118	;'v'
  5433  00FE43  69                 	db	105	;'i'
  5434  00FE44  63                 	db	99	;'c'
  5435  00FE45  65                 	db	101	;'e'
  5436  00FE46  20                 	db	32
  5437  00FE47  4F                 	db	79	;'O'
  5438  00FE48  6E                 	db	110	;'n'
  5439  00FE49  20                 	db	32
  5440  00FE4A  54                 	db	84	;'T'
  5441  00FE4B  69                 	db	105	;'i'
  5442  00FE4C  6D                 	db	109	;'m'
  5443  00FE4D  65                 	db	101	;'e'
  5444  00FE4E  3F                 	db	63	;'?'
  5445  00FE4F  00                 	db	0
  5446  00FE50                     STR_47:
  5447  00FE50  43                 	db	67	;'C'
  5448  00FE51  61                 	db	97	;'a'
  5449  00FE52  75                 	db	117	;'u'
  5450  00FE53  73                 	db	115	;'s'
  5451  00FE54  65                 	db	101	;'e'
  5452  00FE55  20                 	db	32
  5453  00FE56  6F                 	db	111	;'o'
  5454  00FE57  66                 	db	102	;'f'
  5455  00FE58  20                 	db	32
  5456  00FE59  52                 	db	82	;'R'
  5457  00FE5A  65                 	db	101	;'e'
  5458  00FE5B  73                 	db	115	;'s'
  5459  00FE5C  65                 	db	101	;'e'
  5460  00FE5D  74                 	db	116	;'t'
  5461  00FE5E  3F                 	db	63	;'?'
  5462  00FE5F  00                 	db	0
  5463  00FE60                     STR_96:
  5464  00FE60  44                 	db	68	;'D'
  5465  00FE61  69                 	db	105	;'i'
  5466  00FE62  73                 	db	115	;'s'
  5467  00FE63  61                 	db	97	;'a'
  5468  00FE64  62                 	db	98	;'b'
  5469  00FE65  6C                 	db	108	;'l'
  5470  00FE66  65                 	db	101	;'e'
  5471  00FE67  20                 	db	32
  5472  00FE68  44                 	db	68	;'D'
  5473  00FE69  69                 	db	105	;'i'
  5474  00FE6A  6D                 	db	109	;'m'
  5475  00FE6B  6D                 	db	109	;'m'
  5476  00FE6C  69                 	db	105	;'i'
  5477  00FE6D  6E                 	db	110	;'n'
  5478  00FE6E  67                 	db	103	;'g'
  5479  00FE6F  00                 	db	0
  5480  00FE70                     STR_71:
  5481  00FE70  43                 	db	67	;'C'
  5482  00FE71  6C                 	db	108	;'l'
  5483  00FE72  65                 	db	101	;'e'
  5484  00FE73  61                 	db	97	;'a'
  5485  00FE74  72                 	db	114	;'r'
  5486  00FE75  20                 	db	32
  5487  00FE76  41                 	db	65	;'A'
  5488  00FE77  44                 	db	68	;'D'
  5489  00FE78  43                 	db	67	;'C'
  5490  00FE79  20                 	db	32
  5491  00FE7A  45                 	db	69	;'E'
  5492  00FE7B  72                 	db	114	;'r'
  5493  00FE7C  72                 	db	114	;'r'
  5494  00FE7D  6F                 	db	111	;'o'
  5495  00FE7E  72                 	db	114	;'r'
  5496  00FE7F  00                 	db	0
  5497  00FE80                     STR_131:
  5498  00FE80  50                 	db	80	;'P'
  5499  00FE81  6F                 	db	111	;'o'
  5500  00FE82  77                 	db	119	;'w'
  5501  00FE83  65                 	db	101	;'e'
  5502  00FE84  72                 	db	114	;'r'
  5503  00FE85  20                 	db	32
  5504  00FE86  4F                 	db	79	;'O'
  5505  00FE87  6E                 	db	110	;'n'
  5506  00FE88  20                 	db	32
  5507  00FE89  52                 	db	82	;'R'
  5508  00FE8A  65                 	db	101	;'e'
  5509  00FE8B  73                 	db	115	;'s'
  5510  00FE8C  65                 	db	101	;'e'
  5511  00FE8D  74                 	db	116	;'t'
  5512  00FE8E  00                 	db	0
  5513  00FE8F                     STR_78:
  5514  00FE8F  4D                 	db	77	;'M'
  5515  00FE90  65                 	db	101	;'e'
  5516  00FE91  61                 	db	97	;'a'
  5517  00FE92  73                 	db	115	;'s'
  5518  00FE93  75                 	db	117	;'u'
  5519  00FE94  72                 	db	114	;'r'
  5520  00FE95  65                 	db	101	;'e'
  5521  00FE96  20                 	db	32
  5522  00FE97  50                 	db	80	;'P'
  5523  00FE98  4F                 	db	79	;'O'
  5524  00FE99  53                 	db	83	;'S'
  5525  00FE9A  31                 	db	49	;'1'
  5526  00FE9B  32                 	db	50	;'2'
  5527  00FE9C  3F                 	db	63	;'?'
  5528  00FE9D  00                 	db	0
  5529  00FE9E                     STR_92:
  5530  00FE9E  4D                 	db	77	;'M'
  5531  00FE9F  65                 	db	101	;'e'
  5532  00FEA0  61                 	db	97	;'a'
  5533  00FEA1  73                 	db	115	;'s'
  5534  00FEA2  75                 	db	117	;'u'
  5535  00FEA3  72                 	db	114	;'r'
  5536  00FEA4  65                 	db	101	;'e'
  5537  00FEA5  20                 	db	32
  5538  00FEA6  50                 	db	80	;'P'
  5539  00FEA7  6F                 	db	111	;'o'
  5540  00FEA8  77                 	db	119	;'w'
  5541  00FEA9  65                 	db	101	;'e'
  5542  00FEAA  72                 	db	114	;'r'
  5543  00FEAB  3F                 	db	63	;'?'
  5544  00FEAC  00                 	db	0
  5545  00FEAD                     STR_94:
  5546  00FEAD  45                 	db	69	;'E'
  5547  00FEAE  6E                 	db	110	;'n'
  5548  00FEAF  61                 	db	97	;'a'
  5549  00FEB0  62                 	db	98	;'b'
  5550  00FEB1  6C                 	db	108	;'l'
  5551  00FEB2  65                 	db	101	;'e'
  5552  00FEB3  20                 	db	32
  5553  00FEB4  44                 	db	68	;'D'
  5554  00FEB5  69                 	db	105	;'i'
  5555  00FEB6  6D                 	db	109	;'m'
  5556  00FEB7  6D                 	db	109	;'m'
  5557  00FEB8  69                 	db	105	;'i'
  5558  00FEB9  6E                 	db	110	;'n'
  5559  00FEBA  67                 	db	103	;'g'
  5560  00FEBB  00                 	db	0
  5561  00FEBC                     STR_66:
  5562  00FEBC  49                 	db	73	;'I'
  5563  00FEBD  6E                 	db	110	;'n'
  5564  00FEBE  74                 	db	116	;'t'
  5565  00FEBF  65                 	db	101	;'e'
  5566  00FEC0  72                 	db	114	;'r'
  5567  00FEC1  6E                 	db	110	;'n'
  5568  00FEC2  61                 	db	97	;'a'
  5569  00FEC3  6C                 	db	108	;'l'
  5570  00FEC4  20                 	db	32
  5571  00FEC5  44                 	db	68	;'D'
  5572  00FEC6  41                 	db	65	;'A'
  5573  00FEC7  43                 	db	67	;'C'
  5574  00FEC8  31                 	db	49	;'1'
  5575  00FEC9  00                 	db	0
  5576  00FECA                     STR_84:
  5577  00FECA  4D                 	db	77	;'M'
  5578  00FECB  65                 	db	101	;'e'
  5579  00FECC  61                 	db	97	;'a'
  5580  00FECD  73                 	db	115	;'s'
  5581  00FECE  75                 	db	117	;'u'
  5582  00FECF  72                 	db	114	;'r'
  5583  00FED0  65                 	db	101	;'e'
  5584  00FED1  20                 	db	32
  5585  00FED2  41                 	db	65	;'A'
  5586  00FED3  56                 	db	86	;'V'
  5587  00FED4  53                 	db	83	;'S'
  5588  00FED5  53                 	db	83	;'S'
  5589  00FED6  3F                 	db	63	;'?'
  5590  00FED7  00                 	db	0
  5591  00FED8                     STR_100:
  5592  00FED8  4C                 	db	76	;'L'
  5593  00FED9  6F                 	db	111	;'o'
  5594  00FEDA  61                 	db	97	;'a'
  5595  00FEDB  64                 	db	100	;'d'
  5596  00FEDC  20                 	db	32
  5597  00FEDD  45                 	db	69	;'E'
  5598  00FEDE  6E                 	db	110	;'n'
  5599  00FEDF  61                 	db	97	;'a'
  5600  00FEE0  62                 	db	98	;'b'
  5601  00FEE1  6C                 	db	108	;'l'
  5602  00FEE2  65                 	db	101	;'e'
  5603  00FEE3  64                 	db	100	;'d'
  5604  00FEE4  3F                 	db	63	;'?'
  5605  00FEE5  00                 	db	0
  5606  00FEE6                     STR_118:
  5607  00FEE6  4C                 	db	76	;'L'
  5608  00FEE7  6F                 	db	111	;'o'
  5609  00FEE8  61                 	db	97	;'a'
  5610  00FEE9  64                 	db	100	;'d'
  5611  00FEEA  20                 	db	32
  5612  00FEEB  4F                 	db	79	;'O'
  5613  00FEEC  6E                 	db	110	;'n'
  5614  00FEED  20                 	db	32
  5615  00FEEE  54                 	db	84	;'T'
  5616  00FEEF  69                 	db	105	;'i'
  5617  00FEF0  6D                 	db	109	;'m'
  5618  00FEF1  65                 	db	101	;'e'
  5619  00FEF2  3F                 	db	63	;'?'
  5620  00FEF3  00                 	db	0
  5621  00FEF4                     STR_64:
  5622  00FEF4  49                 	db	73	;'I'
  5623  00FEF5  6E                 	db	110	;'n'
  5624  00FEF6  74                 	db	116	;'t'
  5625  00FEF7  65                 	db	101	;'e'
  5626  00FEF8  72                 	db	114	;'r'
  5627  00FEF9  6E                 	db	110	;'n'
  5628  00FEFA  61                 	db	97	;'a'
  5629  00FEFB  6C                 	db	108	;'l'
  5630  00FEFC  20                 	db	32
  5631  00FEFD  41                 	db	65	;'A'
  5632  00FEFE  56                 	db	86	;'V'
  5633  00FEFF  53                 	db	83	;'S'
  5634  00FF00  53                 	db	83	;'S'
  5635  00FF01  00                 	db	0
  5636  00FF02                     STR_65:
  5637  00FF02  49                 	db	73	;'I'
  5638  00FF03  6E                 	db	110	;'n'
  5639  00FF04  74                 	db	116	;'t'
  5640  00FF05  65                 	db	101	;'e'
  5641  00FF06  72                 	db	114	;'r'
  5642  00FF07  6E                 	db	110	;'n'
  5643  00FF08  61                 	db	97	;'a'
  5644  00FF09  6C                 	db	108	;'l'
  5645  00FF0A  20                 	db	32
  5646  00FF0B  54                 	db	84	;'T'
  5647  00FF0C  65                 	db	101	;'e'
  5648  00FF0D  6D                 	db	109	;'m'
  5649  00FF0E  70                 	db	112	;'p'
  5650  00FF0F  00                 	db	0
  5651  00FF10                     STR_128:
  5652  00FF10  50                 	db	80	;'P'
  5653  00FF11  49                 	db	73	;'I'
  5654  00FF12  43                 	db	67	;'C'
  5655  00FF13  31                 	db	49	;'1'
  5656  00FF14  38                 	db	56	;'8'
  5657  00FF15  4C                 	db	76	;'L'
  5658  00FF16  46                 	db	70	;'F'
  5659  00FF17  36                 	db	54	;'6'
  5660  00FF18  37                 	db	55	;'7'
  5661  00FF19  4B                 	db	75	;'K'
  5662  00FF1A  34                 	db	52	;'4'
  5663  00FF1B  30                 	db	48	;'0'
  5664  00FF1C  00                 	db	0
  5665  00FF1D                     STR_55:
  5666  00FF1D  52                 	db	82	;'R'
  5667  00FF1E  65                 	db	101	;'e'
  5668  00FF1F  76                 	db	118	;'v'
  5669  00FF20  69                 	db	105	;'i'
  5670  00FF21  73                 	db	115	;'s'
  5671  00FF22  69                 	db	105	;'i'
  5672  00FF23  6F                 	db	111	;'o'
  5673  00FF24  6E                 	db	110	;'n'
  5674  00FF25  20                 	db	32
  5675  00FF26  49                 	db	73	;'I'
  5676  00FF27  44                 	db	68	;'D'
  5677  00FF28  3F                 	db	63	;'?'
  5678  00FF29  00                 	db	0
  5679  00FF2A                     STR_82:
  5680  00FF2A  4D                 	db	77	;'M'
  5681  00FF2B  65                 	db	101	;'e'
  5682  00FF2C  61                 	db	97	;'a'
  5683  00FF2D  73                 	db	115	;'s'
  5684  00FF2E  75                 	db	117	;'u'
  5685  00FF2F  72                 	db	114	;'r'
  5686  00FF30  65                 	db	101	;'e'
  5687  00FF31  20                 	db	32
  5688  00FF32  46                 	db	70	;'F'
  5689  00FF33  56                 	db	86	;'V'
  5690  00FF34  52                 	db	82	;'R'
  5691  00FF35  3F                 	db	63	;'?'
  5692  00FF36  00                 	db	0
  5693  00FF37                     STR_107:
  5694  00FF37  44                 	db	68	;'D'
  5695  00FF38  69                 	db	105	;'i'
  5696  00FF39  73                 	db	115	;'s'
  5697  00FF3A  61                 	db	97	;'a'
  5698  00FF3B  62                 	db	98	;'b'
  5699  00FF3C  6C                 	db	108	;'l'
  5700  00FF3D  65                 	db	101	;'e'
  5701  00FF3E  20                 	db	32
  5702  00FF3F  4C                 	db	76	;'L'
  5703  00FF40  6F                 	db	111	;'o'
  5704  00FF41  61                 	db	97	;'a'
  5705  00FF42  64                 	db	100	;'d'
  5706  00FF43  00                 	db	0
  5707  00FF44                     STR_127:
  5708  00FF44  50                 	db	80	;'P'
  5709  00FF45  49                 	db	73	;'I'
  5710  00FF46  43                 	db	67	;'C'
  5711  00FF47  31                 	db	49	;'1'
  5712  00FF48  38                 	db	56	;'8'
  5713  00FF49  46                 	db	70	;'F'
  5714  00FF4A  36                 	db	54	;'6'
  5715  00FF4B  37                 	db	55	;'7'
  5716  00FF4C  4B                 	db	75	;'K'
  5717  00FF4D  34                 	db	52	;'4'
  5718  00FF4E  30                 	db	48	;'0'
  5719  00FF4F  00                 	db	0
  5720  00FF50                     STR_98:
  5721  00FF50  45                 	db	69	;'E'
  5722  00FF51  6E                 	db	110	;'n'
  5723  00FF52  61                 	db	97	;'a'
  5724  00FF53  62                 	db	98	;'b'
  5725  00FF54  6C                 	db	108	;'l'
  5726  00FF55  65                 	db	101	;'e'
  5727  00FF56  20                 	db	32
  5728  00FF57  4C                 	db	76	;'L'
  5729  00FF58  6F                 	db	111	;'o'
  5730  00FF59  61                 	db	97	;'a'
  5731  00FF5A  64                 	db	100	;'d'
  5732  00FF5B  00                 	db	0
  5733  00FF5C                     STR_53:
  5734  00FF5C  44                 	db	68	;'D'
  5735  00FF5D  65                 	db	101	;'e'
  5736  00FF5E  76                 	db	118	;'v'
  5737  00FF5F  69                 	db	105	;'i'
  5738  00FF60  63                 	db	99	;'c'
  5739  00FF61  65                 	db	101	;'e'
  5740  00FF62  20                 	db	32
  5741  00FF63  49                 	db	73	;'I'
  5742  00FF64  44                 	db	68	;'D'
  5743  00FF65  3F                 	db	63	;'?'
  5744  00FF66  00                 	db	0
  5745  00FF67                     STR_60:
  5746  00FF67  41                 	db	65	;'A'
  5747  00FF68  44                 	db	68	;'D'
  5748  00FF69  43                 	db	67	;'C'
  5749  00FF6A  20                 	db	32
  5750  00FF6B  45                 	db	69	;'E'
  5751  00FF6C  72                 	db	114	;'r'
  5752  00FF6D  72                 	db	114	;'r'
  5753  00FF6E  6F                 	db	111	;'o'
  5754  00FF6F  72                 	db	114	;'r'
  5755  00FF70  3F                 	db	63	;'?'
  5756  00FF71  00                 	db	0
  5757  00FF72                     STR_57:
  5758  00FF72  55                 	db	85	;'U'
  5759  00FF73  73                 	db	115	;'s'
  5760  00FF74  65                 	db	101	;'e'
  5761  00FF75  72                 	db	114	;'r'
  5762  00FF76  20                 	db	32
  5763  00FF77  49                 	db	73	;'I'
  5764  00FF78  44                 	db	68	;'D'
  5765  00FF79  73                 	db	115	;'s'
  5766  00FF7A  3F                 	db	63	;'?'
  5767  00FF7B  00                 	db	0
  5768  00FF7C                     STR_68:
  5769  00FF7C  55                 	db	85	;'U'
  5770  00FF7D  6E                 	db	110	;'n'
  5771  00FF7E  64                 	db	100	;'d'
  5772  00FF7F  65                 	db	101	;'e'
  5773  00FF80  66                 	db	102	;'f'
  5774  00FF81  69                 	db	105	;'i'
  5775  00FF82  6E                 	db	110	;'n'
  5776  00FF83  65                 	db	101	;'e'
  5777  00FF84  64                 	db	100	;'d'
  5778  00FF85  00                 	db	0
  5779  00FF86                     STR_140:
  5780  00FF86  28                 	db	40
  5781  00FF87  6E                 	db	110	;'n'
  5782  00FF88  75                 	db	117	;'u'
  5783  00FF89  6C                 	db	108	;'l'
  5784  00FF8A  6C                 	db	108	;'l'
  5785  00FF8B  29                 	db	41
  5786  00FF8C  00                 	db	0
  5787  00FF8D                     STR_63:
  5788  00FF8D  50                 	db	80	;'P'
  5789  00FF8E  4F                 	db	79	;'O'
  5790  00FF8F  53                 	db	83	;'S'
  5791  00FF90  33                 	db	51	;'3'
  5792  00FF91  50                 	db	80	;'P'
  5793  00FF92  33                 	db	51	;'3'
  5794  00FF93  00                 	db	0
  5795  00FF94                     STR_62:
  5796  00FF94  50                 	db	80	;'P'
  5797  00FF95  4F                 	db	79	;'O'
  5798  00FF96  53                 	db	83	;'S'
  5799  00FF97  31                 	db	49	;'1'
  5800  00FF98  32                 	db	50	;'2'
  5801  00FF99  00                 	db	0
  5802  00FF9A                     STR_49:
  5803  00FF9A  2A                 	db	42
  5804  00FF9B  49                 	db	73	;'I'
  5805  00FF9C  44                 	db	68	;'D'
  5806  00FF9D  4E                 	db	78	;'N'
  5807  00FF9E  3F                 	db	63	;'?'
  5808  00FF9F  00                 	db	0
  5809  00FFA0                     STR_44:
  5810  00FFA0  43                 	db	67	;'C'
  5811  00FFA1  6C                 	db	108	;'l'
  5812  00FFA2  65                 	db	101	;'e'
  5813  00FFA3  61                 	db	97	;'a'
  5814  00FFA4  72                 	db	114	;'r'
  5815  00FFA5  00                 	db	0
  5816  00FFA6                     STR_61:
  5817  00FFA6  49                 	db	73	;'I'
  5818  00FFA7  53                 	db	83	;'S'
  5819  00FFA8  4E                 	db	78	;'N'
  5820  00FFA9  53                 	db	83	;'S'
  5821  00FFAA  00                 	db	0
  5822  00FFAB                     STR_120:
  5823  00FFAB  48                 	db	72	;'H'
  5824  00FFAC  65                 	db	101	;'e'
  5825  00FFAD  6C                 	db	108	;'l'
  5826  00FFAE  70                 	db	112	;'p'
  5827  00FFAF  00                 	db	0
  5828  00FFB0                     STR_2:
  5829  00FFB0  1B                 	db	27
  5830  00FFB1  5B                 	db	91	;'['
  5831  00FFB2  32                 	db	50	;'2'
  5832  00FFB3  4A                 	db	74	;'J'
  5833  00FFB4  00                 	db	0
  5834  00FFB5                     STR_50:
  5835  00FFB5  49                 	db	73	;'I'
  5836  00FFB6  44                 	db	68	;'D'
  5837  00FFB7  4E                 	db	78	;'N'
  5838  00FFB8  00                 	db	0
  5839  00FFB9                     STR_3:
  5840  00FFB9  1B                 	db	27
  5841  00FFBA  5B                 	db	91	;'['
  5842  00FFBB  48                 	db	72	;'H'
  5843  00FFBC  00                 	db	0
  5844  00FFBD  1B                 	db	27
  5845  00FFBE  5B                 	db	91	;'['
  5846  00FFBF  73                 	db	115	;'s'
  5847  00FFC0  00                 	db	0
  5848  00FFC1  1B                 	db	27
  5849  00FFC2  5B                 	db	91	;'['
  5850  00FFC3  75                 	db	117	;'u'
  5851  00FFC4  00                 	db	0
  5852  00FFC5                     STR_1:
  5853  00FFC5  1B                 	db	27
  5854  00FFC6  5B                 	db	91	;'['
  5855  00FFC7  4B                 	db	75	;'K'
  5856  00FFC8  00                 	db	0
  5857  00FFC9                     STR_20:
  5858  00FFC9  33                 	db	51	;'3'
  5859  00FFCA  30                 	db	48	;'0'
  5860  00FFCB  00                 	db	0
  5861  00FFCC                     STR_21:
  5862  00FFCC  33                 	db	51	;'3'
  5863  00FFCD  31                 	db	49	;'1'
  5864  00FFCE  00                 	db	0
  5865  00FFCF                     STR_31:
  5866  00FFCF  34                 	db	52	;'4'
  5867  00FFD0  31                 	db	49	;'1'
  5868  00FFD1  00                 	db	0
  5869  00FFD2                     STR_22:
  5870  00FFD2  33                 	db	51	;'3'
  5871  00FFD3  32                 	db	50	;'2'
  5872  00FFD4  00                 	db	0
  5873  00FFD5                     STR_32:
  5874  00FFD5  34                 	db	52	;'4'
  5875  00FFD6  32                 	db	50	;'2'
  5876  00FFD7  00                 	db	0
  5877  00FFD8                     STR_23:
  5878  00FFD8  33                 	db	51	;'3'
  5879  00FFD9  33                 	db	51	;'3'
  5880  00FFDA  00                 	db	0
  5881  00FFDB                     STR_33:
  5882  00FFDB  34                 	db	52	;'4'
  5883  00FFDC  33                 	db	51	;'3'
  5884  00FFDD  00                 	db	0
  5885  00FFDE                     STR_24:
  5886  00FFDE  33                 	db	51	;'3'
  5887  00FFDF  34                 	db	52	;'4'
  5888  00FFE0  00                 	db	0
  5889  00FFE1                     STR_34:
  5890  00FFE1  34                 	db	52	;'4'
  5891  00FFE2  34                 	db	52	;'4'
  5892  00FFE3  00                 	db	0
  5893  00FFE4                     STR_25:
  5894  00FFE4  33                 	db	51	;'3'
  5895  00FFE5  35                 	db	53	;'5'
  5896  00FFE6  00                 	db	0
  5897  00FFE7                     STR_35:
  5898  00FFE7  34                 	db	52	;'4'
  5899  00FFE8  35                 	db	53	;'5'
  5900  00FFE9  00                 	db	0
  5901  00FFEA                     STR_26:
  5902  00FFEA  33                 	db	51	;'3'
  5903  00FFEB  36                 	db	54	;'6'
  5904  00FFEC  00                 	db	0
  5905  00FFED                     STR_36:
  5906  00FFED  34                 	db	52	;'4'
  5907  00FFEE  36                 	db	54	;'6'
  5908  00FFEF  00                 	db	0
  5909  00FFF0                     STR_27:
  5910  00FFF0  33                 	db	51	;'3'
  5911  00FFF1  37                 	db	55	;'7'
  5912  00FFF2  00                 	db	0
  5913  00FFF3                     STR_37:
  5914  00FFF3  34                 	db	52	;'4'
  5915  00FFF4  37                 	db	55	;'7'
  5916  00FFF5  00                 	db	0
  5917  00FFF6                     STR_11:
  5918  00FFF6  1B                 	db	27
  5919  00FFF7  5B                 	db	91	;'['
  5920  00FFF8  00                 	db	0
  5921  00FFF9                     STR_17:
  5922  00FFF9  38                 	db	56	;'8'
  5923  00FFFA  00                 	db	0
  5924  00FFFB                     STR_19:
  5925  00FFFB  3B                 	db	59	;';'
  5926  00FFFC  00                 	db	0
  5927  00FFFD                     STR_39:
  5928  00FFFD  6D                 	db	109	;'m'
  5929  00FFFE  00                 	db	0
  5930  0000                     
  5931                           ; #config settings
  5932  00FFFF  00                 	db	0	; dummy byte at the end
  5933  0000                     
  5934                           	psect	nvBANK2
  5935  0002FF                     __pnvBANK2:
  5936                           	opt stack 0
  5937  0002FF                     _reset_cause:
  5938                           	opt stack 0
  5939  0002FF                     	ds	1
  5940  0000                     _HLVDCON0bits	set	3778
  5941  0000                     _HLVDCON0	set	3778
  5942  0000                     _HLVDCON1	set	3779
  5943  0000                     _PIR8bits	set	3643
  5944  0000                     _FVRCONbits	set	3780
  5945  0000                     _FVRCON	set	3780
  5946  0000                     _RC2REG	set	3825
  5947  0000                     _RC2STAbits	set	3829
  5948  0000                     _TX2REG	set	3826
  5949  0000                     _TX2STAbits	set	3830
  5950  0000                     _SP2BRGH	set	3828
  5951  0000                     _SP2BRGL	set	3827
  5952  0000                     _TX2STA	set	3830
  5953  0000                     _RC2STA	set	3829
  5954  0000                     _BAUD2CON	set	3831
  5955  0000                     _PIR2bits	set	3637
  5956  0000                     _PIE2bits	set	3627
  5957  0000                     _PIR1bits	set	3636
  5958  0000                     _PIE1bits	set	3626
  5959  0000                     _PIR5bits	set	3640
  5960  0000                     _PIE5bits	set	3630
  5961  0000                     _PIR3bits	set	3638
  5962  0000                     _PIE3bits	set	3628
  5963  0000                     _IPR2bits	set	3617
  5964  0000                     _IPR1bits	set	3616
  5965  0000                     _IPR5bits	set	3620
  5966  0000                     _IPR3bits	set	3618
  5967  0000                     _RX2PPS	set	3601
  5968  0000                     _RG7PPS	set	3721
  5969  0000                     _SLRCONH	set	3774
  5970  0000                     _SLRCONG	set	3769
  5971  0000                     _SLRCONF	set	3761
  5972  0000                     _SLRCONE	set	3756
  5973  0000                     _SLRCOND	set	3748
  5974  0000                     _SLRCONC	set	3743
  5975  0000                     _SLRCONB	set	3735
  5976  0000                     _SLRCONA	set	3727
  5977  0000                     _ODCOND	set	3749
  5978  0000                     _ODCONC	set	3744
  5979  0000                     _ODCONH	set	3775
  5980  0000                     _ODCONB	set	3736
  5981  0000                     _ODCONG	set	3770
  5982  0000                     _ODCONA	set	3728
  5983  0000                     _ODCONF	set	3762
  5984  0000                     _ODCONE	set	3757
  5985  0000                     _WPUH	set	3776
  5986  0000                     _WPUC	set	3745
  5987  0000                     _WPUA	set	3729
  5988  0000                     _WPUG	set	3771
  5989  0000                     _WPUB	set	3737
  5990  0000                     _WPUE	set	3758
  5991  0000                     _WPUF	set	3763
  5992  0000                     _WPUD	set	3750
  5993  0000                     _ANSELA	set	3730
  5994  0000                     _ANSELF	set	3764
  5995  0000                     _ANSELG	set	3772
  5996  0000                     _ANSELE	set	3759
  5997  0000                     _ANSELB	set	3738
  5998  0000                     _ANSELD	set	3751
  5999  0000                     _PMD5	set	3665
  6000  0000                     _PMD4	set	3664
  6001  0000                     _PMD3	set	3663
  6002  0000                     _PMD2	set	3662
  6003  0000                     _PMD1	set	3661
  6004  0000                     _PMD0	set	3660
  6005  0000                     _OSCTUNE	set	3656
  6006  0000                     _OSCFRQ	set	3657
  6007  0000                     _OSCEN	set	3655
  6008  0000                     _OSCCON3	set	3653
  6009  0000                     _OSCCON1	set	3651
  6010  0000                     _PLLR	set	29232
  6011  0000                     _T7GCONbits	set	3889
  6012  0000                     _T7CONbits	set	3888
  6013  0000                     _T7CON	set	3888
  6014  0000                     _TMR7L	set	3886
  6015  0000                     _TMR7H	set	3887
  6016  0000                     _T7CLK	set	3891
  6017  0000                     _T7GATE	set	3890
  6018  0000                     _T7GCON	set	3889
  6019  0000                     _ADCON1bits	set	3929
  6020  0000                     _ADCON2bits	set	3930
  6021  0000                     _ADPRE	set	3934
  6022  0000                     _ADCON3bits	set	3931
  6023  0000                     _ADACQ	set	3932
  6024  0000                     _ADCLK	set	3927
  6025  0000                     _ADACT	set	3926
  6026  0000                     _ADREF	set	3928
  6027  0000                     _ADCON3	set	3931
  6028  0000                     _ADCON2	set	3930
  6029  0000                     _ADCON1	set	3929
  6030  0000                     _ADCAP	set	3933
  6031  0000                     _ADPCH	set	3935
  6032  0000                     _PCON0bits	set	4055
  6033  0000                     _LATGbits	set	3967
  6034  0000                     _NVMDAT	set	3958
  6035  0000                     _NVMADRL	set	3956
  6036  0000                     _NVMADRH	set	3957
  6037  0000                     _NVMCON2	set	3960
  6038  0000                     _TABLAT	set	4085
  6039  0000                     _TBLPTRL	set	4086
  6040  0000                     _TBLPTRH	set	4087
  6041  0000                     _TBLPTRU	set	4088
  6042  0000                     _NVMCON1bits	set	3959
  6043  0000                     _T5GCONbits	set	4036
  6044  0000                     _T5CONbits	set	4035
  6045  0000                     _T5CON	set	4035
  6046  0000                     _TMR5L	set	4033
  6047  0000                     _TMR5H	set	4034
  6048  0000                     _T5CLK	set	4038
  6049  0000                     _T5GATE	set	4037
  6050  0000                     _T5GCON	set	4036
  6051  0000                     _ADERRL	set	3950
  6052  0000                     _ADERRH	set	3951
  6053  0000                     _ADPREVL	set	3937
  6054  0000                     _ADPREVH	set	3938
  6055  0000                     _ADFLTRL	set	3954
  6056  0000                     _ADFLTRH	set	3955
  6057  0000                     _ADSTATbits	set	3941
  6058  0000                     _ADACCL	set	3952
  6059  0000                     _ADACCH	set	3953
  6060  0000                     _ADCNT	set	3943
  6061  0000                     _ADRESL	set	3939
  6062  0000                     _ADRESH	set	3940
  6063  0000                     _ADCON0bits	set	3936
  6064  0000                     _ADCON0	set	3936
  6065  0000                     _ADSTAT	set	3941
  6066  0000                     _ADRPT	set	3942
  6067  0000                     _ADSTPTH	set	3945
  6068  0000                     _ADSTPTL	set	3944
  6069  0000                     _ADUTHH	set	3949
  6070  0000                     _ADUTHL	set	3948
  6071  0000                     _ADLTHH	set	3947
  6072  0000                     _ADLTHL	set	3946
  6073  0000                     _LATFbits	set	3966
  6074  0000                     _PR6	set	4016
  6075  0000                     _TMR6	set	4015
  6076  0000                     _T6CONbits	set	4017
  6077  0000                     _T6RSTbits	set	4020
  6078  0000                     _T6HLTbits	set	4018
  6079  0000                     _T6CON	set	4017
  6080  0000                     _T6TMR	set	4015
  6081  0000                     _T6PR	set	4016
  6082  0000                     _T6RST	set	4020
  6083  0000                     _T6HLT	set	4018
  6084  0000                     _T6CLKCON	set	4019
  6085  0000                     _INTCONbits	set	4082
  6086  0000                     _TRISD	set	3972
  6087  0000                     _TRISC	set	3971
  6088  0000                     _TRISH	set	3976
  6089  0000                     _TRISB	set	3970
  6090  0000                     _TRISG	set	3975
  6091  0000                     _TRISA	set	3969
  6092  0000                     _TRISF	set	3974
  6093  0000                     _TRISE	set	3973
  6094  0000                     _LATH	set	3968
  6095  0000                     _LATC	set	3963
  6096  0000                     _LATG	set	3967
  6097  0000                     _LATB	set	3962
  6098  0000                     _LATF	set	3966
  6099  0000                     _LATA	set	3961
  6100  0000                     _LATD	set	3964
  6101  0000                     _LATE	set	3965
  6102                           
  6103                           	psect	cinit
  6104  017664                     __pcinit:
  6105                           	opt stack 0
  6106  017664                     start_initialization:
  6107                           	opt stack 0
  6108  017664                     __initialization:
  6109                           	opt stack 0
  6110                           
  6111                           ; Initialize objects allocated to BANK2 (36 bytes)
  6112                           ; load TBLPTR registers with __pidataBANK2
  6113  017664  0EEA               	movlw	low __pidataBANK2
  6114  017666  6EF6               	movwf	tblptrl,c
  6115  017668  0E86               	movlw	high __pidataBANK2
  6116  01766A  6EF7               	movwf	tblptrh,c
  6117  01766C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  6118  01766E  6EF8               	movwf	tblptru,c
  6119  017670  EE02  F0DB         	lfsr	0,__pdataBANK2
  6120  017674  EE10 F024          	lfsr	1,36
  6121  017678                     copy_data0:
  6122  017678  0009               	tblrd		*+
  6123  01767A  CFF5 FFEE          	movff	tablat,postinc0
  6124  01767E  50E5               	movf	postdec1,w,c
  6125  017680  50E1               	movf	fsr1l,w,c
  6126  017682  E1FA               	bnz	copy_data0
  6127                           
  6128                           ; Initialize objects allocated to BANK1 (1 bytes)
  6129                           ; load TBLPTR registers with __pidataBANK1
  6130  017684  0E3E               	movlw	low __pidataBANK1
  6131  017686  6EF6               	movwf	tblptrl,c
  6132  017688  0E89               	movlw	high __pidataBANK1
  6133  01768A  6EF7               	movwf	tblptrh,c
  6134  01768C  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  6135  01768E  6EF8               	movwf	tblptru,c
  6136  017690  0009               	tblrd		*+	;fetch initializer
  6137  017692  CFF5 F1E8          	movff	tablat,__pdataBANK1
  6138                           
  6139                           ; Initialize objects allocated to BANK0 (6 bytes)
  6140                           ; load TBLPTR registers with __pidataBANK0
  6141  017696  0E1A               	movlw	low __pidataBANK0
  6142  017698  6EF6               	movwf	tblptrl,c
  6143  01769A  0E89               	movlw	high __pidataBANK0
  6144  01769C  6EF7               	movwf	tblptrh,c
  6145  01769E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  6146  0176A0  6EF8               	movwf	tblptru,c
  6147  0176A2  EE00  F0F0         	lfsr	0,__pdataBANK0
  6148  0176A6  EE10 F006          	lfsr	1,6
  6149  0176AA                     copy_data1:
  6150  0176AA  0009               	tblrd		*+
  6151  0176AC  CFF5 FFEE          	movff	tablat,postinc0
  6152  0176B0  50E5               	movf	postdec1,w,c
  6153  0176B2  50E1               	movf	fsr1l,w,c
  6154  0176B4  E1FA               	bnz	copy_data1
  6155                           
  6156                           ; Clear objects allocated to BANK3 (128 bytes)
  6157  0176B6  EE03  F000         	lfsr	0,__pbssBANK3
  6158  0176BA  0E80               	movlw	128
  6159  0176BC                     clear_0:
  6160  0176BC  6AEE               	clrf	postinc0,c
  6161  0176BE  06E8               	decf	wreg,f,c
  6162  0176C0  E1FD               	bnz	clear_0
  6163                           
  6164                           ; Clear objects allocated to BANK2 (168 bytes)
  6165  0176C2  EE02  F000         	lfsr	0,__pbssBANK2
  6166  0176C6  0EA8               	movlw	168
  6167  0176C8                     clear_1:
  6168  0176C8  6AEE               	clrf	postinc0,c
  6169  0176CA  06E8               	decf	wreg,f,c
  6170  0176CC  E1FD               	bnz	clear_1
  6171                           
  6172                           ; Clear objects allocated to BANK1 (45 bytes)
  6173  0176CE  EE01  F0BB         	lfsr	0,__pbssBANK1
  6174  0176D2  0E2D               	movlw	45
  6175  0176D4                     clear_2:
  6176  0176D4  6AEE               	clrf	postinc0,c
  6177  0176D6  06E8               	decf	wreg,f,c
  6178  0176D8  E1FD               	bnz	clear_2
  6179                           
  6180                           ; Clear objects allocated to BITBANK0 (1 bytes)
  6181  0176DA  0100               	movlb	0
  6182  0176DC  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  6183                           
  6184                           ; Clear objects allocated to BANK0 (5 bytes)
  6185  0176DE  0100               	movlb	0
  6186  0176E0  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
  6187  0176E2  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
  6188  0176E4  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
  6189  0176E6  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
  6190  0176E8  6BF6               	clrf	__pbssBANK0& (0+255),b
  6191                           
  6192                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  6193  0176EA  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  6194  0176EC                     end_of_initialization:
  6195                           	opt stack 0
  6196  0176EC                     __end_of__initialization:
  6197                           	opt stack 0
  6198  0176EC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6199  0176EE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6200  0176F0  0100               	movlb	0
  6201  0176F2  EF09  F0BC         	goto	_main	;jump to C main() function
  6202                           tblptru	equ	0xFF8
  6203                           tblptrh	equ	0xFF7
  6204                           tblptrl	equ	0xFF6
  6205                           tablat	equ	0xFF5
  6206                           postinc0	equ	0xFEE
  6207                           wreg	equ	0xFE8
  6208                           postdec1	equ	0xFE5
  6209                           fsr1l	equ	0xFE1
  6210                           
  6211                           	psect	bitbssCOMRAM
  6212  0002F0                     __pbitbssCOMRAM:
  6213                           	opt stack 0
  6214  0002F0                     _adc_error_flag:
  6215                           	opt stack 0
  6216  0002F0                     	ds	1
  6217  0002F1                     _load_enable:
  6218                           	opt stack 0
  6219  0002F1                     	ds	1
  6220  0002F2                     _VCC_overvoltage_flag:
  6221                           	opt stack 0
  6222  0002F2                     	ds	1
  6223                           tblptru	equ	0xFF8
  6224                           tblptrh	equ	0xFF7
  6225                           tblptrl	equ	0xFF6
  6226                           tablat	equ	0xFF5
  6227                           postinc0	equ	0xFEE
  6228                           wreg	equ	0xFE8
  6229                           postdec1	equ	0xFE5
  6230                           fsr1l	equ	0xFE1
  6231                           
  6232                           	psect	bitbssBANK0
  6233  0007D8                     __pbitbssBANK0:
  6234                           	opt stack 0
  6235  0007D8                     _eusart2RxStringReady:
  6236                           	opt stack 0
  6237  0007D8                     	ds	1
  6238                           tblptru	equ	0xFF8
  6239                           tblptrh	equ	0xFF7
  6240                           tblptrl	equ	0xFF6
  6241                           tablat	equ	0xFF5
  6242                           postinc0	equ	0xFEE
  6243                           wreg	equ	0xFE8
  6244                           postdec1	equ	0xFE5
  6245                           fsr1l	equ	0xFE1
  6246                           
  6247                           	psect	bssBANK0
  6248  0000F6                     __pbssBANK0:
  6249                           	opt stack 0
  6250  0000F6                     _POS3P3_ADC_Result:
  6251                           	opt stack 0
  6252  0000F6                     	ds	4
  6253  0000FA                     _eusart2RxHead:
  6254                           	opt stack 0
  6255  0000FA                     	ds	1
  6256                           tblptru	equ	0xFF8
  6257                           tblptrh	equ	0xFF7
  6258                           tblptrl	equ	0xFF6
  6259                           tablat	equ	0xFF5
  6260                           postinc0	equ	0xFEE
  6261                           wreg	equ	0xFE8
  6262                           postdec1	equ	0xFE5
  6263                           fsr1l	equ	0xFE1
  6264                           
  6265                           	psect	dataBANK0
  6266  0000F0                     __pdataBANK0:
  6267                           	opt stack 0
  6268  0000F0                     _dimming_period:
  6269                           	opt stack 0
  6270  0000F0                     	ds	2
  6271  0000F2                     _TRIAC_Firing_Angle:
  6272                           	opt stack 0
  6273  0000F2                     	ds	4
  6274                           tblptru	equ	0xFF8
  6275                           tblptrh	equ	0xFF7
  6276                           tblptrl	equ	0xFF6
  6277                           tablat	equ	0xFF5
  6278                           postinc0	equ	0xFEE
  6279                           wreg	equ	0xFE8
  6280                           postdec1	equ	0xFE5
  6281                           fsr1l	equ	0xFE1
  6282                           
  6283                           	psect	bssBANK1
  6284  0001BB                     __pbssBANK1:
  6285                           	opt stack 0
  6286  0001BB                     _Vrms:
  6287                           	opt stack 0
  6288  0001BB                     	ds	4
  6289  0001BF                     _Irms:
  6290                           	opt stack 0
  6291  0001BF                     	ds	4
  6292  0001C3                     _Imeas:
  6293                           	opt stack 0
  6294  0001C3                     	ds	4
  6295  0001C7                     _Ipk:
  6296                           	opt stack 0
  6297  0001C7                     	ds	4
  6298  0001CB                     _Temp_ADC_Result:
  6299                           	opt stack 0
  6300  0001CB                     	ds	4
  6301  0001CF                     _POS12_ADC_Result:
  6302                           	opt stack 0
  6303  0001CF                     	ds	4
  6304  0001D3                     _AVSS_ADC_Result:
  6305                           	opt stack 0
  6306  0001D3                     	ds	4
  6307  0001D7                     _timer5ReloadVal:
  6308                           	opt stack 0
  6309  0001D7                     	ds	2
  6310  0001D9                     _timer7ReloadVal:
  6311                           	opt stack 0
  6312  0001D9                     	ds	2
  6313  0001DB                     _current_adc_channel:
  6314                           	opt stack 0
  6315  0001DB                     	ds	1
  6316  0001DC                     _background_color:
  6317                           	opt stack 0
  6318  0001DC                     	ds	1
  6319  0001DD                     _foreground_color:
  6320                           	opt stack 0
  6321  0001DD                     	ds	1
  6322  0001DE                     _attribute:
  6323                           	opt stack 0
  6324  0001DE                     	ds	1
  6325  0001DF                     _eusart2RxCount:
  6326                           	opt stack 0
  6327  0001DF                     	ds	1
  6328  0001E0                     _eusart2RxTail:
  6329                           	opt stack 0
  6330  0001E0                     	ds	1
  6331  0001E1                     _eusart2TxBufferRemaining:
  6332                           	opt stack 0
  6333  0001E1                     	ds	1
  6334  0001E2                     _eusart2TxTail:
  6335                           	opt stack 0
  6336  0001E2                     	ds	1
  6337  0001E3                     _eusart2TxHead:
  6338                           	opt stack 0
  6339  0001E3                     	ds	1
  6340  0001E4                     _FVR_ADC_Result:
  6341                           	opt stack 0
  6342  0001E4                     	ds	4
  6343                           tblptru	equ	0xFF8
  6344                           tblptrh	equ	0xFF7
  6345                           tblptrl	equ	0xFF6
  6346                           tablat	equ	0xFF5
  6347                           postinc0	equ	0xFEE
  6348                           wreg	equ	0xFE8
  6349                           postdec1	equ	0xFE5
  6350                           fsr1l	equ	0xFE1
  6351                           
  6352                           	psect	dataBANK1
  6353  0001E8                     __pdataBANK1:
  6354                           	opt stack 0
  6355  0001E8                     _next_channel:
  6356                           	opt stack 0
  6357  0001E8                     	ds	1
  6358                           tblptru	equ	0xFF8
  6359                           tblptrh	equ	0xFF7
  6360                           tblptrl	equ	0xFF6
  6361                           tablat	equ	0xFF5
  6362                           postinc0	equ	0xFEE
  6363                           wreg	equ	0xFE8
  6364                           postdec1	equ	0xFE5
  6365                           fsr1l	equ	0xFE1
  6366                           
  6367                           	psect	bssBANK2
  6368  000200                     __pbssBANK2:
  6369                           	opt stack 0
  6370  000200                     _eusart2RxBuffer:
  6371                           	opt stack 0
  6372  000200                     	ds	64
  6373  000240                     _load_on_time:
  6374                           	opt stack 0
  6375  000240                     	ds	4
  6376  000244                     _dev_on_time:
  6377                           	opt stack 0
  6378  000244                     	ds	4
  6379  000248                     _Avg_Power:
  6380                           	opt stack 0
  6381  000248                     	ds	4
  6382  00024C                     _Vpk:
  6383                           	opt stack 0
  6384  00024C                     	ds	4
  6385  000250                     _ADC_Result_Scaling:
  6386                           	opt stack 0
  6387  000250                     	ds	4
  6388  000254                     _TMR5_InterruptHandler:
  6389                           	opt stack 0
  6390  000254                     	ds	3
  6391  000257                     _TMR7_InterruptHandler:
  6392                           	opt stack 0
  6393  000257                     	ds	3
  6394  00025A                     _ADCC_ADTI_InterruptHandler:
  6395                           	opt stack 0
  6396  00025A                     	ds	3
  6397  00025D                     _TMR6_InterruptHandler:
  6398                           	opt stack 0
  6399  00025D                     	ds	3
  6400  000260                     _EUSART2_RxDefaultInterruptHandler:
  6401                           	opt stack 0
  6402  000260                     	ds	3
  6403  000263                     _EUSART2_TxDefaultInterruptHandler:
  6404                           	opt stack 0
  6405  000263                     	ds	3
  6406  000266                     _errno:
  6407                           	opt stack 0
  6408  000266                     	ds	2
  6409  000268                     _line:
  6410                           	opt stack 0
  6411  000268                     	ds	64
  6412                           tblptru	equ	0xFF8
  6413                           tblptrh	equ	0xFF7
  6414                           tblptrl	equ	0xFF6
  6415                           tablat	equ	0xFF5
  6416                           postinc0	equ	0xFEE
  6417                           wreg	equ	0xFE8
  6418                           postdec1	equ	0xFE5
  6419                           fsr1l	equ	0xFE1
  6420                           
  6421                           	psect	dataBANK2
  6422  0002DB                     __pdataBANK2:
  6423                           	opt stack 0
  6424  0002DB                     getCauseOfResetString@strings:
  6425                           	opt stack 0
  6426  0002DB                     	ds	18
  6427  0002ED                     getDeviceIDString@F17550:
  6428                           	opt stack 0
  6429  0002ED                     	ds	6
  6430  0002F3                     _Irms_offset:
  6431                           	opt stack 0
  6432  0002F3                     	ds	4
  6433  0002F7                     _Vpk_const:
  6434                           	opt stack 0
  6435  0002F7                     	ds	4
  6436  0002FB                     _Temp_ADC_Offset:
  6437                           	opt stack 0
  6438  0002FB                     	ds	4
  6439                           tblptru	equ	0xFF8
  6440                           tblptrh	equ	0xFF7
  6441                           tblptrl	equ	0xFF6
  6442                           tablat	equ	0xFF5
  6443                           postinc0	equ	0xFEE
  6444                           wreg	equ	0xFE8
  6445                           postdec1	equ	0xFE5
  6446                           fsr1l	equ	0xFE1
  6447                           
  6448                           	psect	bssBANK3
  6449  000300                     __pbssBANK3:
  6450                           	opt stack 0
  6451  000300                     _eusart2TxBuffer:
  6452                           	opt stack 0
  6453  000300                     	ds	128
  6454                           tblptru	equ	0xFF8
  6455                           tblptrh	equ	0xFF7
  6456                           tblptrl	equ	0xFF6
  6457                           tablat	equ	0xFF5
  6458                           postinc0	equ	0xFEE
  6459                           wreg	equ	0xFE8
  6460                           postdec1	equ	0xFE5
  6461                           fsr1l	equ	0xFE1
  6462                           
  6463                           	psect	cstackBANK3
  6464  000380                     __pcstackBANK3:
  6465                           	opt stack 0
  6466  000380                     terminal_ringBufferPull@charNumber:
  6467                           	opt stack 0
  6468                           
  6469                           ; 2 bytes @ 0x0
  6470  000380                     	ds	2
  6471  000382                     terminal_ringBufferPull@index_2397:
  6472                           	opt stack 0
  6473                           
  6474                           ; 2 bytes @ 0x2
  6475  000382                     	ds	2
  6476  000384                     terminal_ringBufferPull@index:
  6477                           	opt stack 0
  6478                           
  6479                           ; 2 bytes @ 0x4
  6480  000384                     	ds	2
  6481  000386                     ??_main:
  6482                           
  6483                           ; 1 bytes @ 0x6
  6484  000386                     	ds	2
  6485                           tblptru	equ	0xFF8
  6486                           tblptrh	equ	0xFF7
  6487                           tblptrl	equ	0xFF6
  6488                           tablat	equ	0xFF5
  6489                           postinc0	equ	0xFEE
  6490                           wreg	equ	0xFE8
  6491                           postdec1	equ	0xFE5
  6492                           fsr1l	equ	0xFE1
  6493                           
  6494                           	psect	cstackBANK2
  6495  0002A8                     __pcstackBANK2:
  6496                           	opt stack 0
  6497  0002A8                     terminal_textAttributes@foreground_color:
  6498                           	opt stack 0
  6499                           
  6500                           ; 1 bytes @ 0x0
  6501  0002A8                     	ds	1
  6502  0002A9                     terminal_textAttributes@output_buff:
  6503                           	opt stack 0
  6504                           
  6505                           ; 15 bytes @ 0x1
  6506  0002A9                     	ds	15
  6507  0002B8                     ringBufferLUT@channel_name:
  6508                           	opt stack 0
  6509                           
  6510                           ; 22 bytes @ 0x10
  6511  0002B8                     	ds	22
  6512  0002CE                     ringBufferLUT@angle_degrees:
  6513                           	opt stack 0
  6514                           
  6515                           ; 4 bytes @ 0x26
  6516  0002CE                     	ds	4
  6517  0002D2                     ringBufferLUT@arg_buff:
  6518                           	opt stack 0
  6519                           
  6520                           ; 3 bytes @ 0x2A
  6521  0002D2                     	ds	3
  6522  0002D5                     ringBufferLUT@index:
  6523                           	opt stack 0
  6524                           
  6525                           ; 2 bytes @ 0x2D
  6526  0002D5                     	ds	2
  6527  0002D7                     ringBufferLUT@percentage:
  6528                           	opt stack 0
  6529                           
  6530                           ; 2 bytes @ 0x2F
  6531  0002D7                     	ds	2
  6532  0002D9                     ringBufferLUT@userID:
  6533                           	opt stack 0
  6534                           
  6535                           ; 2 bytes @ 0x31
  6536  0002D9                     	ds	2
  6537                           tblptru	equ	0xFF8
  6538                           tblptrh	equ	0xFF7
  6539                           tblptrl	equ	0xFF6
  6540                           tablat	equ	0xFF5
  6541                           postinc0	equ	0xFEE
  6542                           wreg	equ	0xFE8
  6543                           postdec1	equ	0xFE5
  6544                           fsr1l	equ	0xFE1
  6545                           
  6546                           	psect	cstackBANK1
  6547  000100                     __pcstackBANK1:
  6548                           	opt stack 0
  6549  000100                     ??_heartbeatTimerCallback:
  6550  000100                     ADCC_StartConversion@channel:
  6551                           	opt stack 0
  6552  000100                     TMR7_WriteTimer@timerVal:
  6553                           	opt stack 0
  6554                           
  6555                           ; 2 bytes @ 0x0
  6556  000100                     	ds	1
  6557  000101                     
  6558                           ; 1 bytes @ 0x1
  6559  000101                     	ds	1
  6560  000102                     ??_INTERRUPT_InterruptManagerLow:
  6561  000102                     
  6562                           ; 1 bytes @ 0x2
  6563  000102                     	ds	21
  6564  000117                     ??_isdigit:
  6565  000117                     ?_strlen:
  6566                           	opt stack 0
  6567  000117                     ?_strcmp:
  6568                           	opt stack 0
  6569  000117                     ?_getCauseOfResetString:
  6570                           	opt stack 0
  6571  000117                     ?_strchr:
  6572                           	opt stack 0
  6573  000117                     ?___wmul:
  6574                           	opt stack 0
  6575  000117                     ?___awmod:
  6576                           	opt stack 0
  6577  000117                     ?__tdiv_to_l_:
  6578                           	opt stack 0
  6579  000117                     ?__div_to_l_:
  6580                           	opt stack 0
  6581  000117                     ?___lldiv:
  6582                           	opt stack 0
  6583  000117                     ?___xxtofl:
  6584                           	opt stack 0
  6585  000117                     EUSART2_Read@readValue:
  6586                           	opt stack 0
  6587  000117                     EUSART2_Write@txData:
  6588                           	opt stack 0
  6589  000117                     getCauseOfReset@return_reset_cause:
  6590                           	opt stack 0
  6591  000117                     ___wmul@multiplier:
  6592                           	opt stack 0
  6593  000117                     ___awmod@dividend:
  6594                           	opt stack 0
  6595  000117                     strcat@to:
  6596                           	opt stack 0
  6597  000117                     strcmp@s1:
  6598                           	opt stack 0
  6599  000117                     strcpy@to:
  6600                           	opt stack 0
  6601  000117                     strlen@s:
  6602                           	opt stack 0
  6603  000117                     strncpy@to:
  6604                           	opt stack 0
  6605  000117                     strchr@ptr:
  6606                           	opt stack 0
  6607  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  6608                           	opt stack 0
  6609  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  6610                           	opt stack 0
  6611  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  6612                           	opt stack 0
  6613  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  6614                           	opt stack 0
  6615  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  6616                           	opt stack 0
  6617  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  6618                           	opt stack 0
  6619  000117                     __tdiv_to_l_@f1:
  6620                           	opt stack 0
  6621  000117                     FLASH_ReadByte@flashAddr:
  6622                           	opt stack 0
  6623  000117                     __div_to_l_@f1:
  6624                           	opt stack 0
  6625  000117                     ___flge@ff1:
  6626                           	opt stack 0
  6627  000117                     ___lldiv@dividend:
  6628                           	opt stack 0
  6629  000117                     ___xxtofl@val:
  6630                           	opt stack 0
  6631                           
  6632                           ; 4 bytes @ 0x17
  6633  000117                     	ds	1
  6634  000118                     putch@txData:
  6635                           	opt stack 0
  6636  000118                     _isdigit$3181:
  6637                           	opt stack 0
  6638                           
  6639                           ; 1 bytes @ 0x18
  6640  000118                     	ds	1
  6641  000119                     ??_strlen:
  6642  000119                     getCauseOfResetString@r:
  6643                           	opt stack 0
  6644  000119                     isdigit@c:
  6645                           	opt stack 0
  6646  000119                     ___wmul@multiplicand:
  6647                           	opt stack 0
  6648  000119                     ___awmod@divisor:
  6649                           	opt stack 0
  6650  000119                     strcat@from:
  6651                           	opt stack 0
  6652  000119                     strcmp@s2:
  6653                           	opt stack 0
  6654  000119                     strcpy@from:
  6655                           	opt stack 0
  6656  000119                     strncpy@from:
  6657                           	opt stack 0
  6658  000119                     strchr@chr:
  6659                           	opt stack 0
  6660                           
  6661                           ; 2 bytes @ 0x19
  6662  000119                     	ds	1
  6663  00011A                     ??_TMR7_Initialize:
  6664  00011A                     ??_TMR5_Initialize:
  6665  00011A                     __tdiv_to_l_@f2:
  6666                           	opt stack 0
  6667                           
  6668                           ; 3 bytes @ 0x1A
  6669  00011A                     	ds	1
  6670  00011B                     ??_strcmp:
  6671  00011B                     ??___xxtofl:
  6672  00011B                     ?_FLASH_ReadWord:
  6673                           	opt stack 0
  6674  00011B                     ___awmod@counter:
  6675                           	opt stack 0
  6676  00011B                     ___wmul@product:
  6677                           	opt stack 0
  6678  00011B                     strcat@cp:
  6679                           	opt stack 0
  6680  00011B                     strcpy@cp:
  6681                           	opt stack 0
  6682  00011B                     strlen@cp:
  6683                           	opt stack 0
  6684  00011B                     strncpy@size:
  6685                           	opt stack 0
  6686  00011B                     FLASH_ReadWord@flashAddr:
  6687                           	opt stack 0
  6688  00011B                     __div_to_l_@f2:
  6689                           	opt stack 0
  6690  00011B                     ___flge@ff2:
  6691                           	opt stack 0
  6692  00011B                     ___lldiv@divisor:
  6693                           	opt stack 0
  6694                           
  6695                           ; 4 bytes @ 0x1B
  6696  00011B                     	ds	1
  6697  00011C                     ___awmod@sign:
  6698                           	opt stack 0
  6699  00011C                     strcmp@r:
  6700                           	opt stack 0
  6701                           
  6702                           ; 1 bytes @ 0x1C
  6703  00011C                     	ds	1
  6704  00011D                     ??__tdiv_to_l_:
  6705  00011D                     ?_atoi:
  6706                           	opt stack 0
  6707  00011D                     ?_strncmp:
  6708                           	opt stack 0
  6709  00011D                     ?___awdiv:
  6710                           	opt stack 0
  6711  00011D                     atoi@s:
  6712                           	opt stack 0
  6713  00011D                     ___awdiv@dividend:
  6714                           	opt stack 0
  6715  00011D                     strncpy@cp:
  6716                           	opt stack 0
  6717  00011D                     strncmp@s1:
  6718                           	opt stack 0
  6719                           
  6720                           ; 2 bytes @ 0x1D
  6721  00011D                     	ds	2
  6722  00011F                     ??_atoi:
  6723  00011F                     ??_FLASH_ReadWord:
  6724  00011F                     ??___flge:
  6725  00011F                     ___lldiv@counter:
  6726                           	opt stack 0
  6727  00011F                     ___xxtofl@sign:
  6728                           	opt stack 0
  6729  00011F                     ___awdiv@divisor:
  6730                           	opt stack 0
  6731  00011F                     strncmp@s2:
  6732                           	opt stack 0
  6733  00011F                     __div_to_l_@quot:
  6734                           	opt stack 0
  6735                           
  6736                           ; 4 bytes @ 0x1F
  6737  00011F                     	ds	1
  6738  000120                     ___xxtofl@exp:
  6739                           	opt stack 0
  6740  000120                     __tdiv_to_l_@quot:
  6741                           	opt stack 0
  6742  000120                     ___lldiv@quotient:
  6743                           	opt stack 0
  6744                           
  6745                           ; 4 bytes @ 0x20
  6746  000120                     	ds	1
  6747  000121                     atoi@sign:
  6748                           	opt stack 0
  6749  000121                     ___awdiv@counter:
  6750                           	opt stack 0
  6751  000121                     strncmp@len:
  6752                           	opt stack 0
  6753  000121                     ___xxtofl@arg:
  6754                           	opt stack 0
  6755                           
  6756                           ; 4 bytes @ 0x21
  6757  000121                     	ds	1
  6758  000122                     ??_getMajorRevisionID:
  6759  000122                     ?_getDeviceID:
  6760                           	opt stack 0
  6761  000122                     ?_getUserID:
  6762                           	opt stack 0
  6763  000122                     ___awdiv@sign:
  6764                           	opt stack 0
  6765  000122                     getMinorRevisionID@REVID_RAW:
  6766                           	opt stack 0
  6767  000122                     atoi@a:
  6768                           	opt stack 0
  6769                           
  6770                           ; 2 bytes @ 0x22
  6771  000122                     	ds	1
  6772  000123                     ??_strncmp:
  6773  000123                     __div_to_l_@cntr:
  6774                           	opt stack 0
  6775  000123                     ___awdiv@quotient:
  6776                           	opt stack 0
  6777                           
  6778                           ; 2 bytes @ 0x23
  6779  000123                     	ds	1
  6780  000124                     ?_getDeviceIDString:
  6781                           	opt stack 0
  6782  000124                     ?___llmod:
  6783                           	opt stack 0
  6784  000124                     getUserID@inputUserID:
  6785                           	opt stack 0
  6786  000124                     __div_to_l_@exp1:
  6787                           	opt stack 0
  6788  000124                     __tdiv_to_l_@cntr:
  6789                           	opt stack 0
  6790  000124                     getDeviceIDString@inputDevID:
  6791                           	opt stack 0
  6792  000124                     ___llmod@dividend:
  6793                           	opt stack 0
  6794                           
  6795                           ; 4 bytes @ 0x24
  6796  000124                     	ds	1
  6797  000125                     ?___flneg:
  6798                           	opt stack 0
  6799  000125                     __tdiv_to_l_@exp1:
  6800                           	opt stack 0
  6801  000125                     getMajorRevisionID@REVID_RAW:
  6802                           	opt stack 0
  6803  000125                     getUserID@initialOffset:
  6804                           	opt stack 0
  6805  000125                     ___flneg@f1:
  6806                           	opt stack 0
  6807                           
  6808                           ; 4 bytes @ 0x25
  6809  000125                     	ds	1
  6810  000126                     ??_getDeviceIDString:
  6811  000126                     ?_strstr:
  6812                           	opt stack 0
  6813  000126                     strstr@s1:
  6814                           	opt stack 0
  6815                           
  6816                           ; 2 bytes @ 0x26
  6817  000126                     	ds	2
  6818  000128                     strstr@s2:
  6819                           	opt stack 0
  6820  000128                     ___llmod@divisor:
  6821                           	opt stack 0
  6822  000128                     getDeviceIDString@strings:
  6823                           	opt stack 0
  6824                           
  6825                           ; 6 bytes @ 0x28
  6826  000128                     	ds	1
  6827  000129                     ?___fladd:
  6828                           	opt stack 0
  6829  000129                     getUserID@IDOffset:
  6830                           	opt stack 0
  6831  000129                     ___fladd@b:
  6832                           	opt stack 0
  6833                           
  6834                           ; 4 bytes @ 0x29
  6835  000129                     	ds	1
  6836  00012A                     
  6837                           ; 1 bytes @ 0x2A
  6838  00012A                     	ds	2
  6839  00012C                     ___llmod@counter:
  6840                           	opt stack 0
  6841                           
  6842                           ; 1 bytes @ 0x2C
  6843  00012C                     	ds	1
  6844  00012D                     ___fladd@a:
  6845                           	opt stack 0
  6846                           
  6847                           ; 4 bytes @ 0x2D
  6848  00012D                     	ds	4
  6849  000131                     ??___fladd:
  6850                           
  6851                           ; 1 bytes @ 0x31
  6852  000131                     	ds	8
  6853  000139                     ___fladd@signs:
  6854                           	opt stack 0
  6855                           
  6856                           ; 1 bytes @ 0x39
  6857  000139                     	ds	1
  6858  00013A                     ___fladd@aexp:
  6859                           	opt stack 0
  6860                           
  6861                           ; 1 bytes @ 0x3A
  6862  00013A                     	ds	1
  6863  00013B                     ___fladd@bexp:
  6864                           	opt stack 0
  6865                           
  6866                           ; 1 bytes @ 0x3B
  6867  00013B                     	ds	1
  6868  00013C                     ___fladd@grs:
  6869                           	opt stack 0
  6870                           
  6871                           ; 1 bytes @ 0x3C
  6872  00013C                     	ds	1
  6873  00013D                     ?___fldiv:
  6874                           	opt stack 0
  6875  00013D                     ?___flsub:
  6876                           	opt stack 0
  6877  00013D                     ___flsub@b:
  6878                           	opt stack 0
  6879  00013D                     ___fldiv@b:
  6880                           	opt stack 0
  6881                           
  6882                           ; 4 bytes @ 0x3D
  6883  00013D                     	ds	4
  6884  000141                     ___flsub@a:
  6885                           	opt stack 0
  6886  000141                     ___fldiv@a:
  6887                           	opt stack 0
  6888                           
  6889                           ; 4 bytes @ 0x41
  6890  000141                     	ds	4
  6891  000145                     ??___fldiv:
  6892  000145                     
  6893                           ; 1 bytes @ 0x45
  6894  000145                     	ds	4
  6895  000149                     ___fldiv@sign:
  6896                           	opt stack 0
  6897                           
  6898                           ; 1 bytes @ 0x49
  6899  000149                     	ds	1
  6900  00014A                     ___fldiv@rem:
  6901                           	opt stack 0
  6902                           
  6903                           ; 4 bytes @ 0x4A
  6904  00014A                     	ds	4
  6905  00014E                     ___fldiv@new_exp:
  6906                           	opt stack 0
  6907                           
  6908                           ; 2 bytes @ 0x4E
  6909  00014E                     	ds	2
  6910  000150                     ___fldiv@grs:
  6911                           	opt stack 0
  6912                           
  6913                           ; 4 bytes @ 0x50
  6914  000150                     	ds	4
  6915  000154                     ___fldiv@bexp:
  6916                           	opt stack 0
  6917                           
  6918                           ; 1 bytes @ 0x54
  6919  000154                     	ds	1
  6920  000155                     ___fldiv@aexp:
  6921                           	opt stack 0
  6922                           
  6923                           ; 1 bytes @ 0x55
  6924  000155                     	ds	1
  6925  000156                     ?___flmul:
  6926                           	opt stack 0
  6927  000156                     ___flmul@b:
  6928                           	opt stack 0
  6929                           
  6930                           ; 4 bytes @ 0x56
  6931  000156                     	ds	4
  6932  00015A                     ___flmul@a:
  6933                           	opt stack 0
  6934                           
  6935                           ; 4 bytes @ 0x5A
  6936  00015A                     	ds	4
  6937  00015E                     ??___flmul:
  6938                           
  6939                           ; 1 bytes @ 0x5E
  6940  00015E                     	ds	4
  6941  000162                     ___flmul@sign:
  6942                           	opt stack 0
  6943                           
  6944                           ; 1 bytes @ 0x62
  6945  000162                     	ds	1
  6946  000163                     ___flmul@aexp:
  6947                           	opt stack 0
  6948                           
  6949                           ; 1 bytes @ 0x63
  6950  000163                     	ds	1
  6951  000164                     ___flmul@bexp:
  6952                           	opt stack 0
  6953                           
  6954                           ; 1 bytes @ 0x64
  6955  000164                     	ds	1
  6956  000165                     ___flmul@grs:
  6957                           	opt stack 0
  6958                           
  6959                           ; 4 bytes @ 0x65
  6960  000165                     	ds	4
  6961  000169                     ___flmul@prod:
  6962                           	opt stack 0
  6963                           
  6964                           ; 4 bytes @ 0x69
  6965  000169                     	ds	4
  6966  00016D                     ___flmul@temp:
  6967                           	opt stack 0
  6968                           
  6969                           ; 2 bytes @ 0x6D
  6970  00016D                     	ds	2
  6971  00016F                     ?_fround:
  6972                           	opt stack 0
  6973  00016F                     ?_scale:
  6974                           	opt stack 0
  6975                           
  6976                           ; 4 bytes @ 0x6F
  6977  00016F                     	ds	4
  6978  000173                     _fround$3896:
  6979                           	opt stack 0
  6980  000173                     _scale$3897:
  6981                           	opt stack 0
  6982                           
  6983                           ; 4 bytes @ 0x73
  6984  000173                     	ds	4
  6985  000177                     scale@scl:
  6986                           	opt stack 0
  6987  000177                     _fround$3895:
  6988                           	opt stack 0
  6989                           
  6990                           ; 4 bytes @ 0x77
  6991  000177                     	ds	1
  6992  000178                     ?___fltol:
  6993                           	opt stack 0
  6994  000178                     ___fltol@f1:
  6995                           	opt stack 0
  6996                           
  6997                           ; 4 bytes @ 0x78
  6998  000178                     	ds	3
  6999  00017B                     fround@prec:
  7000                           	opt stack 0
  7001                           
  7002                           ; 1 bytes @ 0x7B
  7003  00017B                     	ds	1
  7004  00017C                     ??___fltol:
  7005                           
  7006                           ; 1 bytes @ 0x7C
  7007  00017C                     	ds	4
  7008  000180                     ___fltol@sign1:
  7009                           	opt stack 0
  7010                           
  7011                           ; 1 bytes @ 0x80
  7012  000180                     	ds	1
  7013  000181                     ___fltol@exp1:
  7014                           	opt stack 0
  7015                           
  7016                           ; 1 bytes @ 0x81
  7017  000181                     	ds	1
  7018  000182                     ?_printf:
  7019                           	opt stack 0
  7020  000182                     printf@f:
  7021                           	opt stack 0
  7022                           
  7023                           ; 2 bytes @ 0x82
  7024  000182                     	ds	10
  7025  00018C                     ??_printf:
  7026                           
  7027                           ; 1 bytes @ 0x8C
  7028  00018C                     	ds	6
  7029  000192                     _printf$3898:
  7030                           	opt stack 0
  7031                           
  7032                           ; 4 bytes @ 0x92
  7033  000192                     	ds	4
  7034  000196                     printf@idx:
  7035                           	opt stack 0
  7036                           
  7037                           ; 1 bytes @ 0x96
  7038  000196                     	ds	1
  7039  000197                     printf@cp:
  7040                           	opt stack 0
  7041                           
  7042                           ; 2 bytes @ 0x97
  7043  000197                     	ds	2
  7044  000199                     printf@len:
  7045                           	opt stack 0
  7046                           
  7047                           ; 2 bytes @ 0x99
  7048  000199                     	ds	2
  7049  00019B                     printf@ap:
  7050                           	opt stack 0
  7051                           
  7052                           ; 2 bytes @ 0x9B
  7053  00019B                     	ds	2
  7054  00019D                     printf@tmpval:
  7055                           	opt stack 0
  7056                           
  7057                           ; 4 bytes @ 0x9D
  7058  00019D                     	ds	4
  7059  0001A1                     printf@exp:
  7060                           	opt stack 0
  7061                           
  7062                           ; 2 bytes @ 0xA1
  7063  0001A1                     	ds	2
  7064  0001A3                     printf@fval:
  7065                           	opt stack 0
  7066                           
  7067                           ; 4 bytes @ 0xA3
  7068  0001A3                     	ds	4
  7069  0001A7                     printf@val:
  7070                           	opt stack 0
  7071                           
  7072                           ; 4 bytes @ 0xA7
  7073  0001A7                     	ds	4
  7074  0001AB                     printf@flag:
  7075                           	opt stack 0
  7076                           
  7077                           ; 2 bytes @ 0xAB
  7078  0001AB                     	ds	2
  7079  0001AD                     printf@width:
  7080                           	opt stack 0
  7081                           
  7082                           ; 2 bytes @ 0xAD
  7083  0001AD                     	ds	2
  7084  0001AF                     printf@prec:
  7085                           	opt stack 0
  7086                           
  7087                           ; 2 bytes @ 0xAF
  7088  0001AF                     	ds	2
  7089  0001B1                     printf@c:
  7090                           	opt stack 0
  7091                           
  7092                           ; 1 bytes @ 0xB1
  7093  0001B1                     	ds	1
  7094  0001B2                     terminal_textAttributes@background_color:
  7095                           	opt stack 0
  7096                           
  7097                           ; 1 bytes @ 0xB2
  7098  0001B2                     	ds	1
  7099  0001B3                     terminal_textAttributes@input_attribute:
  7100                           	opt stack 0
  7101                           
  7102                           ; 1 bytes @ 0xB3
  7103  0001B3                     	ds	1
  7104  0001B4                     ringBufferLUT@line:
  7105                           	opt stack 0
  7106                           
  7107                           ; 2 bytes @ 0xB4
  7108  0001B4                     	ds	2
  7109  0001B6                     ??_ringBufferLUT:
  7110                           
  7111                           ; 1 bytes @ 0xB6
  7112  0001B6                     	ds	2
  7113  0001B8                     ??_terminal_ringBufferPull:
  7114                           
  7115                           ; 1 bytes @ 0xB8
  7116  0001B8                     	ds	3
  7117                           tblptru	equ	0xFF8
  7118                           tblptrh	equ	0xFF7
  7119                           tblptrl	equ	0xFF6
  7120                           tablat	equ	0xFF5
  7121                           postinc0	equ	0xFEE
  7122                           wreg	equ	0xFE8
  7123                           postdec1	equ	0xFE5
  7124                           fsr1l	equ	0xFE1
  7125                           
  7126                           	psect	cstackBANK0
  7127  000060                     __pcstackBANK0:
  7128                           	opt stack 0
  7129  000060                     ??i2___fladd:
  7130                           
  7131                           ; 1 bytes @ 0x0
  7132  000060                     	ds	8
  7133  000068                     i2___fladd@signs:
  7134                           	opt stack 0
  7135                           
  7136                           ; 1 bytes @ 0x8
  7137  000068                     	ds	1
  7138  000069                     i2___fladd@aexp:
  7139                           	opt stack 0
  7140                           
  7141                           ; 1 bytes @ 0x9
  7142  000069                     	ds	1
  7143  00006A                     i2___fladd@bexp:
  7144                           	opt stack 0
  7145                           
  7146                           ; 1 bytes @ 0xA
  7147  00006A                     	ds	1
  7148  00006B                     i2___fladd@grs:
  7149                           	opt stack 0
  7150                           
  7151                           ; 1 bytes @ 0xB
  7152  00006B                     	ds	1
  7153  00006C                     ?_sqrt:
  7154                           	opt stack 0
  7155  00006C                     ?_eval_poly:
  7156                           	opt stack 0
  7157  00006C                     ?i2___fltol:
  7158                           	opt stack 0
  7159  00006C                     eval_poly@x:
  7160                           	opt stack 0
  7161  00006C                     sqrt@a:
  7162                           	opt stack 0
  7163  00006C                     i2___fltol@f1:
  7164                           	opt stack 0
  7165                           
  7166                           ; 4 bytes @ 0xC
  7167  00006C                     	ds	4
  7168  000070                     ??_sqrt:
  7169  000070                     ??i2___fltol:
  7170  000070                     eval_poly@d:
  7171                           	opt stack 0
  7172                           
  7173                           ; 2 bytes @ 0x10
  7174  000070                     	ds	2
  7175  000072                     eval_poly@n:
  7176                           	opt stack 0
  7177                           
  7178                           ; 2 bytes @ 0x12
  7179  000072                     	ds	2
  7180  000074                     ??_eval_poly:
  7181  000074                     sqrt@sign:
  7182                           	opt stack 0
  7183  000074                     i2___fltol@sign1:
  7184                           	opt stack 0
  7185                           
  7186                           ; 1 bytes @ 0x14
  7187  000074                     	ds	1
  7188  000075                     sqrt@i:
  7189                           	opt stack 0
  7190  000075                     i2___fltol@exp1:
  7191                           	opt stack 0
  7192                           
  7193                           ; 1 bytes @ 0x15
  7194  000075                     	ds	1
  7195  000076                     ?_abs:
  7196                           	opt stack 0
  7197  000076                     ?_floor:
  7198                           	opt stack 0
  7199  000076                     abs@a:
  7200                           	opt stack 0
  7201  000076                     sqrt@tfrac:
  7202                           	opt stack 0
  7203  000076                     floor@x:
  7204                           	opt stack 0
  7205                           
  7206                           ; 4 bytes @ 0x16
  7207  000076                     	ds	2
  7208  000078                     ??_abs:
  7209  000078                     eval_poly@res:
  7210                           	opt stack 0
  7211                           
  7212                           ; 4 bytes @ 0x18
  7213  000078                     	ds	2
  7214  00007A                     sqrt@p:
  7215                           	opt stack 0
  7216  00007A                     floor@i:
  7217                           	opt stack 0
  7218                           
  7219                           ; 4 bytes @ 0x1A
  7220  00007A                     	ds	1
  7221  00007B                     sqrt@grs:
  7222                           	opt stack 0
  7223                           
  7224                           ; 4 bytes @ 0x1B
  7225  00007B                     	ds	1
  7226  00007C                     ?_atan:
  7227                           	opt stack 0
  7228  00007C                     atan@f:
  7229                           	opt stack 0
  7230                           
  7231                           ; 4 bytes @ 0x1C
  7232  00007C                     	ds	2
  7233  00007E                     floor@expon:
  7234                           	opt stack 0
  7235                           
  7236                           ; 2 bytes @ 0x1E
  7237  00007E                     	ds	1
  7238  00007F                     sqrt@exp:
  7239                           	opt stack 0
  7240                           
  7241                           ; 2 bytes @ 0x1F
  7242  00007F                     	ds	1
  7243  000080                     ?i2___flsub:
  7244                           	opt stack 0
  7245  000080                     atan@y:
  7246                           	opt stack 0
  7247  000080                     i2___flsub@b:
  7248                           	opt stack 0
  7249                           
  7250                           ; 4 bytes @ 0x20
  7251  000080                     	ds	1
  7252  000081                     sqrt@root:
  7253                           	opt stack 0
  7254                           
  7255                           ; 4 bytes @ 0x21
  7256  000081                     	ds	3
  7257  000084                     atan@x:
  7258                           	opt stack 0
  7259  000084                     i2___flsub@a:
  7260                           	opt stack 0
  7261                           
  7262                           ; 4 bytes @ 0x24
  7263  000084                     	ds	1
  7264  000085                     sqrt@frac:
  7265                           	opt stack 0
  7266                           
  7267                           ; 4 bytes @ 0x25
  7268  000085                     	ds	3
  7269  000088                     ?i2_printf:
  7270                           	opt stack 0
  7271  000088                     ?_sin:
  7272                           	opt stack 0
  7273  000088                     atan@recip:
  7274                           	opt stack 0
  7275  000088                     i2printf@f:
  7276                           	opt stack 0
  7277  000088                     sin@f:
  7278                           	opt stack 0
  7279                           
  7280                           ; 4 bytes @ 0x28
  7281  000088                     	ds	1
  7282  000089                     atan@val_squared:
  7283                           	opt stack 0
  7284                           
  7285                           ; 4 bytes @ 0x29
  7286  000089                     	ds	1
  7287  00008A                     ??i2_printf:
  7288                           
  7289                           ; 1 bytes @ 0x2A
  7290  00008A                     	ds	2
  7291  00008C                     sin@y:
  7292                           	opt stack 0
  7293                           
  7294                           ; 4 bytes @ 0x2C
  7295  00008C                     	ds	1
  7296  00008D                     atan@val:
  7297                           	opt stack 0
  7298                           
  7299                           ; 4 bytes @ 0x2D
  7300  00008D                     	ds	3
  7301  000090                     _sin$4097:
  7302                           	opt stack 0
  7303  000090                     i2_printf$4101:
  7304                           	opt stack 0
  7305                           
  7306                           ; 4 bytes @ 0x30
  7307  000090                     	ds	1
  7308  000091                     ?_asin:
  7309                           	opt stack 0
  7310  000091                     asin@x:
  7311                           	opt stack 0
  7312                           
  7313                           ; 4 bytes @ 0x31
  7314  000091                     	ds	3
  7315  000094                     i2printf@idx:
  7316                           	opt stack 0
  7317  000094                     sin@x2:
  7318                           	opt stack 0
  7319                           
  7320                           ; 4 bytes @ 0x34
  7321  000094                     	ds	1
  7322  000095                     i2printf@cp:
  7323                           	opt stack 0
  7324  000095                     asin@sgn:
  7325                           	opt stack 0
  7326                           
  7327                           ; 4 bytes @ 0x35
  7328  000095                     	ds	2
  7329  000097                     i2printf@len:
  7330                           	opt stack 0
  7331                           
  7332                           ; 2 bytes @ 0x37
  7333  000097                     	ds	1
  7334  000098                     sin@sgn:
  7335                           	opt stack 0
  7336                           
  7337                           ; 1 bytes @ 0x38
  7338  000098                     	ds	1
  7339  000099                     ?_currentMeasuredToPeak:
  7340                           	opt stack 0
  7341  000099                     i2printf@ap:
  7342                           	opt stack 0
  7343  000099                     currentMeasuredToPeak@Measured:
  7344                           	opt stack 0
  7345  000099                     _asin$4096:
  7346                           	opt stack 0
  7347                           
  7348                           ; 4 bytes @ 0x39
  7349  000099                     	ds	2
  7350  00009B                     i2printf@tmpval:
  7351                           	opt stack 0
  7352                           
  7353                           ; 4 bytes @ 0x3B
  7354  00009B                     	ds	2
  7355  00009D                     currentMeasuredToPeak@Angle:
  7356                           	opt stack 0
  7357  00009D                     _asin$4095:
  7358                           	opt stack 0
  7359                           
  7360                           ; 4 bytes @ 0x3D
  7361  00009D                     	ds	2
  7362  00009F                     i2printf@exp:
  7363                           	opt stack 0
  7364                           
  7365                           ; 2 bytes @ 0x3F
  7366  00009F                     	ds	2
  7367  0000A1                     currentMeasuredToPeak@Peak:
  7368                           	opt stack 0
  7369  0000A1                     asin@y:
  7370                           	opt stack 0
  7371  0000A1                     i2printf@val:
  7372                           	opt stack 0
  7373                           
  7374                           ; 4 bytes @ 0x41
  7375  0000A1                     	ds	4
  7376  0000A5                     i2printf@fval:
  7377                           	opt stack 0
  7378  0000A5                     _asin$4094:
  7379                           	opt stack 0
  7380                           
  7381                           ; 4 bytes @ 0x45
  7382  0000A5                     	ds	4
  7383  0000A9                     ?_acos:
  7384                           	opt stack 0
  7385  0000A9                     i2printf@flag:
  7386                           	opt stack 0
  7387  0000A9                     acos@x:
  7388                           	opt stack 0
  7389                           
  7390                           ; 4 bytes @ 0x49
  7391  0000A9                     	ds	2
  7392  0000AB                     i2printf@width:
  7393                           	opt stack 0
  7394                           
  7395                           ; 2 bytes @ 0x4B
  7396  0000AB                     	ds	2
  7397  0000AD                     i2printf@prec:
  7398                           	opt stack 0
  7399  0000AD                     _acos$4093:
  7400                           	opt stack 0
  7401                           
  7402                           ; 4 bytes @ 0x4D
  7403  0000AD                     	ds	2
  7404  0000AF                     i2printf@c:
  7405                           	opt stack 0
  7406                           
  7407                           ; 1 bytes @ 0x4F
  7408  0000AF                     	ds	2
  7409  0000B1                     ?_peakToRMS:
  7410                           	opt stack 0
  7411  0000B1                     peakToRMS@Peak:
  7412                           	opt stack 0
  7413                           
  7414                           ; 4 bytes @ 0x51
  7415  0000B1                     	ds	4
  7416  0000B5                     peakToRMS@Angle:
  7417                           	opt stack 0
  7418                           
  7419                           ; 4 bytes @ 0x55
  7420  0000B5                     	ds	4
  7421  0000B9                     _peakToRMS$4086:
  7422                           	opt stack 0
  7423                           
  7424                           ; 4 bytes @ 0x59
  7425  0000B9                     	ds	4
  7426  0000BD                     _peakToRMS$4087:
  7427                           	opt stack 0
  7428                           
  7429                           ; 4 bytes @ 0x5D
  7430  0000BD                     	ds	4
  7431  0000C1                     _peakToRMS$4085:
  7432                           	opt stack 0
  7433                           
  7434                           ; 4 bytes @ 0x61
  7435  0000C1                     	ds	4
  7436  0000C5                     peakToRMS@RMS:
  7437                           	opt stack 0
  7438                           
  7439                           ; 4 bytes @ 0x65
  7440  0000C5                     	ds	4
  7441  0000C9                     _ADCPostProcessingCallback$4090:
  7442                           	opt stack 0
  7443                           
  7444                           ; 4 bytes @ 0x69
  7445  0000C9                     	ds	4
  7446  0000CD                     _ADCPostProcessingCallback$4091:
  7447                           	opt stack 0
  7448                           
  7449                           ; 4 bytes @ 0x6D
  7450  0000CD                     	ds	4
  7451  0000D1                     _ADCPostProcessingCallback$4092:
  7452                           	opt stack 0
  7453                           
  7454                           ; 4 bytes @ 0x71
  7455  0000D1                     	ds	4
  7456  0000D5                     ADCPostProcessingCallback@current_adc_channel:
  7457                           	opt stack 0
  7458                           
  7459                           ; 1 bytes @ 0x75
  7460  0000D5                     	ds	1
  7461  0000D6                     _ADCPostProcessingCallback$4088:
  7462                           	opt stack 0
  7463                           
  7464                           ; 4 bytes @ 0x76
  7465  0000D6                     	ds	4
  7466  0000DA                     _ADCPostProcessingCallback$4089:
  7467                           	opt stack 0
  7468                           
  7469                           ; 4 bytes @ 0x7A
  7470  0000DA                     	ds	4
  7471  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
  7472                           
  7473                           ; 1 bytes @ 0x7E
  7474  0000DE                     	ds	18
  7475                           tblptru	equ	0xFF8
  7476                           tblptrh	equ	0xFF7
  7477                           tblptrl	equ	0xFF6
  7478                           tablat	equ	0xFF5
  7479                           postinc0	equ	0xFEE
  7480                           wreg	equ	0xFE8
  7481                           postdec1	equ	0xFE5
  7482                           fsr1l	equ	0xFE1
  7483                           
  7484                           	psect	cstackCOMRAM
  7485  000001                     __pcstackCOMRAM:
  7486                           	opt stack 0
  7487  000001                     ??i2_isdigit:
  7488  000001                     ?_ADCC_GetConversionResult:
  7489                           	opt stack 0
  7490  000001                     ?_ADCC_GetFilterValue:
  7491                           	opt stack 0
  7492  000001                     ?i2___wmul:
  7493                           	opt stack 0
  7494  000001                     ?i2___awmod:
  7495                           	opt stack 0
  7496  000001                     ?i2__div_to_l_:
  7497                           	opt stack 0
  7498  000001                     ?i2__tdiv_to_l_:
  7499                           	opt stack 0
  7500  000001                     ?i2___lldiv:
  7501                           	opt stack 0
  7502  000001                     i2EUSART2_Write@txData:
  7503                           	opt stack 0
  7504  000001                     TMR5_WriteTimer@timerVal:
  7505                           	opt stack 0
  7506  000001                     i2___wmul@multiplier:
  7507                           	opt stack 0
  7508  000001                     i2___awmod@dividend:
  7509                           	opt stack 0
  7510  000001                     i2__tdiv_to_l_@f1:
  7511                           	opt stack 0
  7512  000001                     frexp@value:
  7513                           	opt stack 0
  7514  000001                     i2__div_to_l_@f1:
  7515                           	opt stack 0
  7516  000001                     i2___lldiv@dividend:
  7517                           	opt stack 0
  7518                           
  7519                           ; 4 bytes @ 0x0
  7520  000001                     	ds	1
  7521  000002                     i2putch@txData:
  7522                           	opt stack 0
  7523  000002                     i2_isdigit$3181:
  7524                           	opt stack 0
  7525                           
  7526                           ; 1 bytes @ 0x1
  7527  000002                     	ds	1
  7528  000003                     ??_ADCC_GetConversionResult:
  7529  000003                     ??_ADCC_GetFilterValue:
  7530  000003                     i2isdigit@c:
  7531                           	opt stack 0
  7532  000003                     i2___wmul@multiplicand:
  7533                           	opt stack 0
  7534  000003                     i2___awmod@divisor:
  7535                           	opt stack 0
  7536                           
  7537                           ; 2 bytes @ 0x2
  7538  000003                     	ds	1
  7539  000004                     i2__tdiv_to_l_@f2:
  7540                           	opt stack 0
  7541                           
  7542                           ; 3 bytes @ 0x3
  7543  000004                     	ds	1
  7544  000005                     ?i2___xxtofl:
  7545                           	opt stack 0
  7546  000005                     i2___awmod@counter:
  7547                           	opt stack 0
  7548  000005                     frexp@eptr:
  7549                           	opt stack 0
  7550  000005                     i2___wmul@product:
  7551                           	opt stack 0
  7552  000005                     i2__div_to_l_@f2:
  7553                           	opt stack 0
  7554  000005                     i2___lldiv@divisor:
  7555                           	opt stack 0
  7556  000005                     i2___xxtofl@val:
  7557                           	opt stack 0
  7558                           
  7559                           ; 4 bytes @ 0x4
  7560  000005                     	ds	1
  7561  000006                     i2___awmod@sign:
  7562                           	opt stack 0
  7563                           
  7564                           ; 1 bytes @ 0x5
  7565  000006                     	ds	1
  7566  000007                     ??_frexp:
  7567  000007                     ??i2__tdiv_to_l_:
  7568  000007                     ?i2___awdiv:
  7569                           	opt stack 0
  7570  000007                     i2___awdiv@dividend:
  7571                           	opt stack 0
  7572                           
  7573                           ; 2 bytes @ 0x6
  7574  000007                     	ds	2
  7575  000009                     ??i2___xxtofl:
  7576  000009                     i2___awdiv@divisor:
  7577                           	opt stack 0
  7578  000009                     i2__div_to_l_@quot:
  7579                           	opt stack 0
  7580  000009                     i2___lldiv@quotient:
  7581                           	opt stack 0
  7582                           
  7583                           ; 4 bytes @ 0x8
  7584  000009                     	ds	1
  7585  00000A                     i2__tdiv_to_l_@quot:
  7586                           	opt stack 0
  7587                           
  7588                           ; 4 bytes @ 0x9
  7589  00000A                     	ds	1
  7590  00000B                     i2___awdiv@counter:
  7591                           	opt stack 0
  7592                           
  7593                           ; 1 bytes @ 0xA
  7594  00000B                     	ds	1
  7595  00000C                     i2___awdiv@sign:
  7596                           	opt stack 0
  7597                           
  7598                           ; 1 bytes @ 0xB
  7599  00000C                     	ds	1
  7600  00000D                     i2__div_to_l_@cntr:
  7601                           	opt stack 0
  7602  00000D                     i2___lldiv@counter:
  7603                           	opt stack 0
  7604  00000D                     i2___xxtofl@sign:
  7605                           	opt stack 0
  7606  00000D                     i2___awdiv@quotient:
  7607                           	opt stack 0
  7608                           
  7609                           ; 2 bytes @ 0xC
  7610  00000D                     	ds	1
  7611  00000E                     ?i2___llmod:
  7612                           	opt stack 0
  7613  00000E                     i2__div_to_l_@exp1:
  7614                           	opt stack 0
  7615  00000E                     i2__tdiv_to_l_@cntr:
  7616                           	opt stack 0
  7617  00000E                     i2___xxtofl@exp:
  7618                           	opt stack 0
  7619  00000E                     i2___llmod@dividend:
  7620                           	opt stack 0
  7621                           
  7622                           ; 4 bytes @ 0xD
  7623  00000E                     	ds	1
  7624  00000F                     i2__tdiv_to_l_@exp1:
  7625                           	opt stack 0
  7626  00000F                     i2___xxtofl@arg:
  7627                           	opt stack 0
  7628                           
  7629                           ; 4 bytes @ 0xE
  7630  00000F                     	ds	3
  7631  000012                     i2___llmod@divisor:
  7632                           	opt stack 0
  7633                           
  7634                           ; 4 bytes @ 0x11
  7635  000012                     	ds	1
  7636  000013                     ?i2___fldiv:
  7637                           	opt stack 0
  7638  000013                     i2___fldiv@b:
  7639                           	opt stack 0
  7640                           
  7641                           ; 4 bytes @ 0x12
  7642  000013                     	ds	3
  7643  000016                     i2___llmod@counter:
  7644                           	opt stack 0
  7645                           
  7646                           ; 1 bytes @ 0x15
  7647  000016                     	ds	1
  7648  000017                     i2___fldiv@a:
  7649                           	opt stack 0
  7650                           
  7651                           ; 4 bytes @ 0x16
  7652  000017                     	ds	4
  7653  00001B                     ??i2___fldiv:
  7654                           
  7655                           ; 1 bytes @ 0x1A
  7656  00001B                     	ds	4
  7657  00001F                     i2___fldiv@sign:
  7658                           	opt stack 0
  7659                           
  7660                           ; 1 bytes @ 0x1E
  7661  00001F                     	ds	1
  7662  000020                     i2___fldiv@rem:
  7663                           	opt stack 0
  7664                           
  7665                           ; 4 bytes @ 0x1F
  7666  000020                     	ds	4
  7667  000024                     i2___fldiv@new_exp:
  7668                           	opt stack 0
  7669                           
  7670                           ; 2 bytes @ 0x23
  7671  000024                     	ds	2
  7672  000026                     i2___fldiv@grs:
  7673                           	opt stack 0
  7674                           
  7675                           ; 4 bytes @ 0x25
  7676  000026                     	ds	4
  7677  00002A                     i2___fldiv@bexp:
  7678                           	opt stack 0
  7679                           
  7680                           ; 1 bytes @ 0x29
  7681  00002A                     	ds	1
  7682  00002B                     i2___fldiv@aexp:
  7683                           	opt stack 0
  7684                           
  7685                           ; 1 bytes @ 0x2A
  7686  00002B                     	ds	1
  7687  00002C                     ?i2___flneg:
  7688                           	opt stack 0
  7689  00002C                     i2___flneg@f1:
  7690                           	opt stack 0
  7691                           
  7692                           ; 4 bytes @ 0x2B
  7693  00002C                     	ds	4
  7694  000030                     ?_fabs:
  7695                           	opt stack 0
  7696  000030                     ?i2___flmul:
  7697                           	opt stack 0
  7698  000030                     fabs@d:
  7699                           	opt stack 0
  7700  000030                     i2___flmul@b:
  7701                           	opt stack 0
  7702                           
  7703                           ; 4 bytes @ 0x2F
  7704  000030                     	ds	4
  7705  000034                     i2___flge@ff1:
  7706                           	opt stack 0
  7707  000034                     i2___flmul@a:
  7708                           	opt stack 0
  7709                           
  7710                           ; 4 bytes @ 0x33
  7711  000034                     	ds	4
  7712  000038                     ??i2___flmul:
  7713  000038                     i2___flge@ff2:
  7714                           	opt stack 0
  7715                           
  7716                           ; 4 bytes @ 0x37
  7717  000038                     	ds	4
  7718  00003C                     ??i2___flge:
  7719  00003C                     i2___flmul@sign:
  7720                           	opt stack 0
  7721                           
  7722                           ; 1 bytes @ 0x3B
  7723  00003C                     	ds	1
  7724  00003D                     i2___flmul@aexp:
  7725                           	opt stack 0
  7726                           
  7727                           ; 1 bytes @ 0x3C
  7728  00003D                     	ds	1
  7729  00003E                     i2___flmul@grs:
  7730                           	opt stack 0
  7731                           
  7732                           ; 4 bytes @ 0x3D
  7733  00003E                     	ds	4
  7734  000042                     i2___flmul@bexp:
  7735                           	opt stack 0
  7736                           
  7737                           ; 1 bytes @ 0x41
  7738  000042                     	ds	1
  7739  000043                     i2___flmul@prod:
  7740                           	opt stack 0
  7741                           
  7742                           ; 4 bytes @ 0x42
  7743  000043                     	ds	4
  7744  000047                     i2___flmul@temp:
  7745                           	opt stack 0
  7746                           
  7747                           ; 2 bytes @ 0x46
  7748  000047                     	ds	2
  7749  000049                     ?i2_fround:
  7750                           	opt stack 0
  7751  000049                     ?i2_scale:
  7752                           	opt stack 0
  7753                           
  7754                           ; 4 bytes @ 0x48
  7755  000049                     	ds	4
  7756  00004D                     i2_fround$4099:
  7757                           	opt stack 0
  7758  00004D                     i2_scale$4100:
  7759                           	opt stack 0
  7760                           
  7761                           ; 4 bytes @ 0x4C
  7762  00004D                     	ds	4
  7763  000051                     i2scale@scl:
  7764                           	opt stack 0
  7765  000051                     i2_fround$4098:
  7766                           	opt stack 0
  7767                           
  7768                           ; 4 bytes @ 0x50
  7769  000051                     	ds	4
  7770  000055                     i2fround@prec:
  7771                           	opt stack 0
  7772                           
  7773                           ; 1 bytes @ 0x54
  7774  000055                     	ds	1
  7775  000056                     ?i2___fladd:
  7776                           	opt stack 0
  7777  000056                     i2___fladd@b:
  7778                           	opt stack 0
  7779                           
  7780                           ; 4 bytes @ 0x55
  7781  000056                     	ds	4
  7782  00005A                     i2___fladd@a:
  7783                           	opt stack 0
  7784                           
  7785                           ; 4 bytes @ 0x59
  7786  00005A                     	ds	4
  7787  00005E                     tblptru	equ	0xFF8
  7788                           tblptrh	equ	0xFF7
  7789                           tblptrl	equ	0xFF6
  7790                           tablat	equ	0xFF5
  7791                           postinc0	equ	0xFEE
  7792                           wreg	equ	0xFE8
  7793                           postdec1	equ	0xFE5
  7794                           fsr1l	equ	0xFE1
  7795                           
  7796                           ; 1 bytes @ 0x5D
  7797 ;;
  7798 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7799 ;;
  7800 ;; *************** function _main *****************
  7801 ;; Defined at:
  7802 ;;		line 377 in file "main.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;		None
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1    wreg      void 
  7809 ;; Registers used:
  7810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7818 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0
  7819 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0
  7820 ;;Total ram usage:        2 bytes
  7821 ;; Hardware stack levels required when called:   20
  7822 ;; This function calls:
  7823 ;;		_ADCC_SetADTIInterruptHandler
  7824 ;;		_SYSTEM_Initialize
  7825 ;;		_TMR6_SetInterruptHandler
  7826 ;;		_TMR7_SetInterruptHandler
  7827 ;;		_getCauseOfReset
  7828 ;;		_terminal_clearTerminal
  7829 ;;		_terminal_ringBufferPull
  7830 ;;		_terminal_setCursorHome
  7831 ;;		_terminal_textAttributesReset
  7832 ;; This function is called by:
  7833 ;;		Startup code after reset
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text0
  7838  017812                     __ptext0:
  7839                           	opt stack 0
  7840  017812                     _main:
  7841                           	opt stack 11
  7842                           
  7843                           ;main.c: 381: reset_cause = getCauseOfReset();
  7844                           
  7845                           ;incstack = 0
  7846  017812  ECD5  F0BF         	call	_getCauseOfReset	;wreg free
  7847  017816  0102               	movlb	2	; () banked
  7848  017818  6FFF               	movwf	_reset_cause& (0+255),b
  7849                           
  7850                           ; BSR set to: 2
  7851                           ;main.c: 385: _delay((unsigned long)((250)*(64000000/4000.0)));
  7852  01781A  0E15               	movlw	21
  7853  01781C  0103               	movlb	3	; () banked
  7854  01781E  6F87               	movwf	(??_main+1)& (0+255),b
  7855  017820  0E4B               	movlw	75
  7856  017822  6F86               	movwf	??_main& (0+255),b
  7857  017824  0EBE               	movlw	190
  7858  017826                     u25877:
  7859  017826  2EE8               	decfsz	wreg,f,c
  7860  017828  D7FE               	bra	u25877
  7861  01782A  2F86               	decfsz	??_main& (0+255),f,b
  7862  01782C  D7FC               	bra	u25877
  7863  01782E  2F87               	decfsz	(??_main+1)& (0+255),f,b
  7864  017830  D7FA               	bra	u25877
  7865  017832  F000               	nop	
  7866                           
  7867                           ;main.c: 388: SYSTEM_Initialize();
  7868  017834  ECBD  F0C2         	call	_SYSTEM_Initialize	;wreg free
  7869                           
  7870                           ;main.c: 391: LATGbits.LATG0 = 0;
  7871  017838  907F               	bcf	3967,0,c	;volatile
  7872                           
  7873                           ;main.c: 392: LATGbits.LATG1 = 0;
  7874  01783A  927F               	bcf	3967,1,c	;volatile
  7875                           
  7876                           ;main.c: 393: load_enable = 0;
  7877  01783C  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  7878                           
  7879                           ;main.c: 396: ADCON2bits.ADCRS = 7;
  7880  01783E  010F               	movlb	15	; () banked
  7881  017840  895A               	bsf	90,4,b	;volatile
  7882  017842  8B5A               	bsf	90,5,b	;volatile
  7883  017844  8D5A               	bsf	90,6,b	;volatile
  7884                           
  7885                           ; BSR set to: 15
  7886                           ;main.c: 397: ADCAP = 20;
  7887  017846  0E14               	movlw	20
  7888  017848  6F5D               	movwf	93,b	;volatile
  7889                           
  7890                           ; BSR set to: 15
  7891                           ;main.c: 400: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  7892  01784A  0E24               	movlw	low _heartbeatTimerCallback
  7893  01784C  0101               	movlb	1	; () banked
  7894  01784E  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  7895  017850  0E83               	movlw	high _heartbeatTimerCallback
  7896  017852  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7897  017854  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  7898  017856  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7899  017858  EC4C  F0C4         	call	_TMR6_SetInterruptHandler	;wreg free
  7900                           
  7901                           ;main.c: 403: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
  7902  01785C  0E32               	movlw	low _ADCPostProcessingCallback
  7903  01785E  0101               	movlb	1	; () banked
  7904  017860  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  7905  017862  0E29               	movlw	high _ADCPostProcessingCallback
  7906  017864  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  7907  017866  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
  7908  017868  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
  7909  01786A  EC68  F0C4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7910                           
  7911                           ;main.c: 406: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  7912  01786E  0E2A               	movlw	low _acquisitionTimerCallback
  7913  017870  0101               	movlb	1	; () banked
  7914  017872  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  7915  017874  0E88               	movlw	high _acquisitionTimerCallback
  7916  017876  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7917  017878  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  7918  01787A  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7919  01787C  EC45  F0C4         	call	_TMR7_SetInterruptHandler	;wreg free
  7920                           
  7921                           ;main.c: 409: (INTCONbits.GIEH = 1);
  7922  017880  8EF2               	bsf	intcon,7,c	;volatile
  7923                           
  7924                           ;main.c: 412: (INTCONbits.GIEL = 1);
  7925  017882  8CF2               	bsf	intcon,6,c	;volatile
  7926                           
  7927                           ;main.c: 415: terminal_clearTerminal();
  7928  017884  EC2E  F0C4         	call	_terminal_clearTerminal	;wreg free
  7929                           
  7930                           ;main.c: 416: terminal_setCursorHome();
  7931  017888  EC1E  F0C4         	call	_terminal_setCursorHome	;wreg free
  7932                           
  7933                           ;main.c: 417: terminal_textAttributesReset();
  7934  01788C  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  7935  017890                     
  7936                           ;main.c: 421: {
  7937                           ;main.c: 424: if (eusart2RxStringReady) {
  7938  017890  0100               	movlb	0	; () banked
  7939  017892  A1FB               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7940  017894  D7FD               	goto	l998
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;main.c: 426: terminal_ringBufferPull();
  7944  017896  EC1E  F0B6         	call	_terminal_ringBufferPull	;wreg free
  7945  01789A  D7FA               	goto	l998
  7946  01789C                     __end_of_main:
  7947                           	opt stack 0
  7948                           tblptru	equ	0xFF8
  7949                           tblptrh	equ	0xFF7
  7950                           tblptrl	equ	0xFF6
  7951                           tablat	equ	0xFF5
  7952                           intcon	equ	0xFF2
  7953                           postinc0	equ	0xFEE
  7954                           wreg	equ	0xFE8
  7955                           postdec1	equ	0xFE5
  7956                           fsr1l	equ	0xFE1
  7957                           
  7958 ;; *************** function _terminal_setCursorHome *****************
  7959 ;; Defined at:
  7960 ;;		line 85 in file "ring_buffer_interface.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;		None
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;		None
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  1    wreg      void 
  7967 ;; Registers used:
  7968 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7978 ;;Total ram usage:        0 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; Hardware stack levels required when called:   16
  7981 ;; This function calls:
  7982 ;;		_printf
  7983 ;; This function is called by:
  7984 ;;		_main
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text1
  7989  01883C                     __ptext1:
  7990                           	opt stack 0
  7991  01883C                     _terminal_setCursorHome:
  7992                           	opt stack 14
  7993                           
  7994                           ;ring_buffer_interface.c: 86: printf("\033[H");
  7995                           
  7996                           ;incstack = 0
  7997  01883C  0EB9               	movlw	low STR_3
  7998  01883E  0101               	movlb	1	; () banked
  7999  018840  6F82               	movwf	printf@f& (0+255),b
  8000  018842  0EFF               	movlw	high STR_3
  8001  018844  6F83               	movwf	(printf@f+1)& (0+255),b
  8002  018846  EC00  F080         	call	_printf	;wreg free
  8003  01884A  0012               	return		;funcret
  8004  01884C                     __end_of_terminal_setCursorHome:
  8005                           	opt stack 0
  8006                           tblptru	equ	0xFF8
  8007                           tblptrh	equ	0xFF7
  8008                           tblptrl	equ	0xFF6
  8009                           tablat	equ	0xFF5
  8010                           intcon	equ	0xFF2
  8011                           postinc0	equ	0xFEE
  8012                           wreg	equ	0xFE8
  8013                           postdec1	equ	0xFE5
  8014                           fsr1l	equ	0xFE1
  8015                           
  8016 ;; *************** function _terminal_ringBufferPull *****************
  8017 ;; Defined at:
  8018 ;;		line 12 in file "ring_buffer_interface.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;		None
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;  index           2    2[BANK3 ] int 
  8023 ;;  index           2    4[BANK3 ] int 
  8024 ;;  charNumber      2    0[BANK3 ] int 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  1    wreg      void 
  8027 ;; Registers used:
  8028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8035 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0
  8036 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8037 ;;      Totals:         0       0       3       0       6       0       0       0       0       0       0       0       
      +0       0       0
  8038 ;;Total ram usage:        9 bytes
  8039 ;; Hardware stack levels used:    1
  8040 ;; Hardware stack levels required when called:   19
  8041 ;; This function calls:
  8042 ;;		_EUSART2_Read
  8043 ;;		_ringBufferLUT
  8044 ;;		_strlen
  8045 ;; This function is called by:
  8046 ;;		_main
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           	psect	text2
  8051  016C3C                     __ptext2:
  8052                           	opt stack 0
  8053  016C3C                     _terminal_ringBufferPull:
  8054                           	opt stack 11
  8055                           
  8056                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  8057                           
  8058                           ;incstack = 0
  8059  016C3C  C1DF  F380         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  8060  016C40  0103               	movlb	3	; () banked
  8061  016C42  6B81               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  8062                           
  8063                           ; BSR set to: 3
  8064                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  8065  016C44  0E00               	movlw	0
  8066  016C46  6F85               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  8067  016C48  0E00               	movlw	0
  8068  016C4A  6F84               	movwf	terminal_ringBufferPull@index& (0+255),b
  8069  016C4C                     l18894:
  8070                           
  8071                           ; BSR set to: 3
  8072  016C4C  BF85               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  8073  016C4E  D006               	goto	l1037
  8074  016C50  5185               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  8075  016C52  E10F               	bnz	l18904
  8076  016C54  0E40               	movlw	64
  8077  016C56  5D84               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  8078  016C58  B0D8               	btfsc	status,0,c
  8079  016C5A  D00B               	goto	u25640
  8080  016C5C                     l1037:
  8081                           
  8082                           ; BSR set to: 3
  8083                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  8084                           
  8085                           ; BSR set to: 3
  8086  016C5C  0E68               	movlw	low _line
  8087  016C5E  2584               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  8088  016C60  6ED9               	movwf	fsr2l,c
  8089  016C62  0E02               	movlw	high _line
  8090  016C64  2185               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  8091  016C66  6EDA               	movwf	fsr2h,c
  8092  016C68  0E00               	movlw	0
  8093  016C6A  6EDF               	movwf	indf2,c
  8094                           
  8095                           ; BSR set to: 3
  8096  016C6C  4B84               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  8097  016C6E  2B85               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  8098  016C70  D7ED               	goto	l18894
  8099  016C72                     u25640:
  8100  016C72                     l18904:
  8101                           
  8102                           ; BSR set to: 3
  8103                           ;ring_buffer_interface.c: 21: }
  8104                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  8105  016C72  0E00               	movlw	0
  8106  016C74  6F83               	movwf	(terminal_ringBufferPull@index_2397+1)& (0+255),b
  8107  016C76  0E00               	movlw	0
  8108  016C78  6F82               	movwf	terminal_ringBufferPull@index_2397& (0+255),b
  8109  016C7A  D00F               	goto	l1039
  8110  016C7C                     
  8111                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  8112                           
  8113                           ; BSR set to: 3
  8114  016C7C  ECE3  F0C0         	call	_EUSART2_Read	;wreg free
  8115  016C80  0101               	movlb	1	; () banked
  8116  016C82  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8117  016C84  0E68               	movlw	low _line
  8118  016C86  0103               	movlb	3	; () banked
  8119  016C88  2582               	addwf	terminal_ringBufferPull@index_2397& (0+255),w,b
  8120  016C8A  6ED9               	movwf	fsr2l,c
  8121  016C8C  0E02               	movlw	high _line
  8122  016C8E  2183               	addwfc	(terminal_ringBufferPull@index_2397+1)& (0+255),w,b
  8123  016C90  6EDA               	movwf	fsr2h,c
  8124  016C92  C1B8  FFDF         	movff	??_terminal_ringBufferPull,indf2
  8125                           
  8126                           ; BSR set to: 3
  8127  016C96  4B82               	infsnz	terminal_ringBufferPull@index_2397& (0+255),f,b
  8128  016C98  2B83               	incf	(terminal_ringBufferPull@index_2397+1)& (0+255),f,b
  8129  016C9A                     l1039:
  8130                           
  8131                           ; BSR set to: 3
  8132                           
  8133                           ; BSR set to: 3
  8134  016C9A  5180               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  8135  016C9C  5D82               	subwf	terminal_ringBufferPull@index_2397& (0+255),w,b
  8136  016C9E  5183               	movf	(terminal_ringBufferPull@index_2397+1)& (0+255),w,b
  8137  016CA0  0A80               	xorlw	128
  8138  016CA2  0101               	movlb	1	; () banked
  8139  016CA4  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8140  016CA6  0103               	movlb	3	; () banked
  8141  016CA8  5181               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  8142  016CAA  0A80               	xorlw	128
  8143  016CAC  0101               	movlb	1	; () banked
  8144  016CAE  59B8               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  8145  016CB0  A0D8               	btfss	status,0,c
  8146  016CB2  D7E4               	goto	l1040
  8147                           
  8148                           ; BSR set to: 1
  8149                           ;ring_buffer_interface.c: 28: }
  8150                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  8151  016CB4  C0FA  F1E0         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  8152                           
  8153                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  8154                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  8155  016CB8  D017               	goto	l1042
  8156  016CBA                     
  8157                           ; BSR set to: 1
  8158                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  8159                           
  8160                           ; BSR set to: 1
  8161  016CBA  0EFF               	movlw	255
  8162  016CBC  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8163  016CBE  0EFF               	movlw	255
  8164  016CC0  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8165  016CC2  0E68               	movlw	low _line
  8166  016CC4  6F17               	movwf	strlen@s& (0+255),b
  8167  016CC6  0E02               	movlw	high _line
  8168  016CC8  6F18               	movwf	(strlen@s+1)& (0+255),b
  8169  016CCA  ECA9  F0BF         	call	_strlen	;wreg free
  8170  016CCE  0101               	movlb	1	; () banked
  8171  016CD0  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8172  016CD2  2717               	addwf	?_strlen& (0+255),f,b
  8173  016CD4  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8174  016CD6  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8175  016CD8  0E68               	movlw	low _line
  8176  016CDA  2517               	addwf	?_strlen& (0+255),w,b
  8177  016CDC  6ED9               	movwf	fsr2l,c
  8178  016CDE  0E02               	movlw	high _line
  8179  016CE0  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8180  016CE2  6EDA               	movwf	fsr2h,c
  8181  016CE4  0E00               	movlw	0
  8182  016CE6  6EDF               	movwf	indf2,c
  8183  016CE8                     l1042:
  8184                           
  8185                           ; BSR set to: 1
  8186  016CE8  0EFF               	movlw	255
  8187  016CEA  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8188  016CEC  0EFF               	movlw	255
  8189  016CEE  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8190  016CF0  0E68               	movlw	low _line
  8191  016CF2  6F17               	movwf	strlen@s& (0+255),b
  8192  016CF4  0E02               	movlw	high _line
  8193  016CF6  6F18               	movwf	(strlen@s+1)& (0+255),b
  8194  016CF8  ECA9  F0BF         	call	_strlen	;wreg free
  8195  016CFC  0101               	movlb	1	; () banked
  8196  016CFE  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8197  016D00  2717               	addwf	?_strlen& (0+255),f,b
  8198  016D02  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8199  016D04  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8200  016D06  0E68               	movlw	low _line
  8201  016D08  2517               	addwf	?_strlen& (0+255),w,b
  8202  016D0A  6ED9               	movwf	fsr2l,c
  8203  016D0C  0E02               	movlw	high _line
  8204  016D0E  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8205  016D10  6EDA               	movwf	fsr2h,c
  8206  016D12  0E0A               	movlw	10
  8207  016D14  18DE               	xorwf	postinc2,w,c
  8208  016D16  B4D8               	btfsc	status,2,c
  8209  016D18  D7D0               	goto	l1043
  8210                           
  8211                           ; BSR set to: 1
  8212  016D1A  0EFF               	movlw	255
  8213  016D1C  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8214  016D1E  0EFF               	movlw	255
  8215  016D20  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8216  016D22  0E68               	movlw	low _line
  8217  016D24  6F17               	movwf	strlen@s& (0+255),b
  8218  016D26  0E02               	movlw	high _line
  8219  016D28  6F18               	movwf	(strlen@s+1)& (0+255),b
  8220  016D2A  ECA9  F0BF         	call	_strlen	;wreg free
  8221  016D2E  0101               	movlb	1	; () banked
  8222  016D30  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8223  016D32  2717               	addwf	?_strlen& (0+255),f,b
  8224  016D34  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8225  016D36  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8226  016D38  0E68               	movlw	low _line
  8227  016D3A  2517               	addwf	?_strlen& (0+255),w,b
  8228  016D3C  6ED9               	movwf	fsr2l,c
  8229  016D3E  0E02               	movlw	high _line
  8230  016D40  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8231  016D42  6EDA               	movwf	fsr2h,c
  8232  016D44  0E0D               	movlw	13
  8233  016D46  18DE               	xorwf	postinc2,w,c
  8234  016D48  B4D8               	btfsc	status,2,c
  8235  016D4A  D7B7               	goto	l1043
  8236                           
  8237                           ; BSR set to: 1
  8238                           ;ring_buffer_interface.c: 40: }
  8239                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  8240  016D4C  0100               	movlb	0	; () banked
  8241  016D4E  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  8245  016D50  0E68               	movlw	low _line
  8246  016D52  0101               	movlb	1	; () banked
  8247  016D54  6FB4               	movwf	ringBufferLUT@line& (0+255),b
  8248  016D56  0E02               	movlw	high _line
  8249  016D58  6FB5               	movwf	(ringBufferLUT@line+1)& (0+255),b
  8250  016D5A  ECC9  F08D         	call	_ringBufferLUT	;wreg free
  8251  016D5E  0012               	return		;funcret
  8252  016D60                     __end_of_terminal_ringBufferPull:
  8253                           	opt stack 0
  8254                           tblptru	equ	0xFF8
  8255                           tblptrh	equ	0xFF7
  8256                           tblptrl	equ	0xFF6
  8257                           tablat	equ	0xFF5
  8258                           intcon	equ	0xFF2
  8259                           postinc0	equ	0xFEE
  8260                           wreg	equ	0xFE8
  8261                           postdec1	equ	0xFE5
  8262                           fsr1l	equ	0xFE1
  8263                           indf2	equ	0xFDF
  8264                           postinc2	equ	0xFDE
  8265                           fsr2h	equ	0xFDA
  8266                           fsr2l	equ	0xFD9
  8267                           status	equ	0xFD8
  8268                           
  8269 ;; *************** function _ringBufferLUT *****************
  8270 ;; Defined at:
  8271 ;;		line 43 in file "ring_buffer_LUT.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  line            2  180[BANK1 ] PTR unsigned char 
  8274 ;;		 -> line(64), 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  angle_degree    4   38[BANK2 ] PTR unsigned char 
  8277 ;;  index           2   45[BANK2 ] int 
  8278 ;;  channel_name   22   16[BANK2 ] unsigned char [22]
  8279 ;;  userID          2   49[BANK2 ] int 
  8280 ;;  arg_buff        3   42[BANK2 ] unsigned char [3]
  8281 ;;  percentage      2   47[BANK2 ] int 
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  1    wreg      void 
  8284 ;; Registers used:
  8285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8291 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8292 ;;      Locals:         0       0       0      35       0       0       0       0       0       0       0       0       
      +0       0       0
  8293 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;      Totals:         0       0       4      35       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;Total ram usage:       39 bytes
  8296 ;; Hardware stack levels used:    1
  8297 ;; Hardware stack levels required when called:   18
  8298 ;; This function calls:
  8299 ;;		_TMR7_StopTimer
  8300 ;;		___fladd
  8301 ;;		___fldiv
  8302 ;;		___flmul
  8303 ;;		___flneg
  8304 ;;		___wmul
  8305 ;;		___xxtofl
  8306 ;;		_atoi
  8307 ;;		_getCauseOfResetString
  8308 ;;		_getDeviceID
  8309 ;;		_getDeviceIDString
  8310 ;;		_getMajorRevisionID
  8311 ;;		_getMinorRevisionID
  8312 ;;		_getUserID
  8313 ;;		_printf
  8314 ;;		_strcmp
  8315 ;;		_strcpy
  8316 ;;		_strstr
  8317 ;;		_terminal_printNewline
  8318 ;;		_terminal_textAttributes
  8319 ;;		_terminal_textAttributesReset
  8320 ;; This function is called by:
  8321 ;;		_terminal_ringBufferPull
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text3
  8326  011B92                     __ptext3:
  8327                           	opt stack 0
  8328  011B92                     _ringBufferLUT:
  8329                           	opt stack 11
  8330                           
  8331                           ;ring_buffer_LUT.c: 49: if((0 == strcmp(line, "Reset"))) {
  8332                           
  8333                           ;incstack = 0
  8334  011B92  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8335  011B96  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8336  011B9A  0E1A               	movlw	low (STR_130+10)
  8337  011B9C  0101               	movlb	1	; () banked
  8338  011B9E  6F19               	movwf	strcmp@s2& (0+255),b
  8339  011BA0  0EFE               	movlw	high (STR_130+10)
  8340  011BA2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8341  011BA4  ECFE  F0BF         	call	_strcmp	;wreg free
  8342  011BA8  0101               	movlb	1	; () banked
  8343  011BAA  5117               	movf	?_strcmp& (0+255),w,b
  8344  011BAC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8345  011BAE  A4D8               	btfss	status,2,c
  8346  011BB0  D00F               	goto	l1186
  8347                           
  8348                           ; BSR set to: 1
  8349                           ;ring_buffer_LUT.c: 52: printf("\033[2J");
  8350  011BB2  0EB0               	movlw	low STR_2
  8351  011BB4  6F82               	movwf	printf@f& (0+255),b
  8352  011BB6  0EFF               	movlw	high STR_2
  8353  011BB8  6F83               	movwf	(printf@f+1)& (0+255),b
  8354  011BBA  EC00  F080         	call	_printf	;wreg free
  8355                           
  8356                           ;ring_buffer_LUT.c: 55: printf("\033[H");
  8357  011BBE  0EB9               	movlw	low STR_3
  8358  011BC0  0101               	movlb	1	; () banked
  8359  011BC2  6F82               	movwf	printf@f& (0+255),b
  8360  011BC4  0EFF               	movlw	high STR_3
  8361  011BC6  6F83               	movwf	(printf@f+1)& (0+255),b
  8362  011BC8  EC00  F080         	call	_printf	;wreg free
  8363  011BCC  00FF               	reset		;# 
  8364                           
  8365                           ;ring_buffer_LUT.c: 60: }
  8366  011BCE  0012               	return	
  8367  011BD0                     l1186:
  8368                           
  8369                           ;ring_buffer_LUT.c: 63: else if((0 == strcmp(line, "Clear"))) {
  8370  011BD0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8371  011BD4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8372  011BD8  0EA0               	movlw	low STR_44
  8373  011BDA  0101               	movlb	1	; () banked
  8374  011BDC  6F19               	movwf	strcmp@s2& (0+255),b
  8375  011BDE  0EFF               	movlw	high STR_44
  8376  011BE0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8377  011BE2  ECFE  F0BF         	call	_strcmp	;wreg free
  8378  011BE6  0101               	movlb	1	; () banked
  8379  011BE8  5117               	movf	?_strcmp& (0+255),w,b
  8380  011BEA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8381  011BEC  A4D8               	btfss	status,2,c
  8382  011BEE  D00E               	goto	l1188
  8383                           
  8384                           ; BSR set to: 1
  8385                           ;ring_buffer_LUT.c: 66: printf("\033[2J");
  8386  011BF0  0EB0               	movlw	low STR_2
  8387  011BF2  6F82               	movwf	printf@f& (0+255),b
  8388  011BF4  0EFF               	movlw	high STR_2
  8389  011BF6  6F83               	movwf	(printf@f+1)& (0+255),b
  8390  011BF8  EC00  F080         	call	_printf	;wreg free
  8391                           
  8392                           ;ring_buffer_LUT.c: 69: printf("\033[H");
  8393  011BFC  0EB9               	movlw	low STR_3
  8394  011BFE  0101               	movlb	1	; () banked
  8395  011C00  6F82               	movwf	printf@f& (0+255),b
  8396  011C02  0EFF               	movlw	high STR_3
  8397  011C04  6F83               	movwf	(printf@f+1)& (0+255),b
  8398  011C06  EC00  F080         	call	_printf	;wreg free
  8399                           
  8400                           ;ring_buffer_LUT.c: 71: }
  8401  011C0A  0012               	return	
  8402  011C0C                     l1188:
  8403                           
  8404                           ;ring_buffer_LUT.c: 74: else if((0 == strcmp(line, "Cause of Reset?"))) {
  8405  011C0C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8406  011C10  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8407  011C14  0E50               	movlw	low STR_47
  8408  011C16  0101               	movlb	1	; () banked
  8409  011C18  6F19               	movwf	strcmp@s2& (0+255),b
  8410  011C1A  0EFE               	movlw	high STR_47
  8411  011C1C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8412  011C1E  ECFE  F0BF         	call	_strcmp	;wreg free
  8413  011C22  0101               	movlb	1	; () banked
  8414  011C24  5117               	movf	?_strcmp& (0+255),w,b
  8415  011C26  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8416  011C28  A4D8               	btfss	status,2,c
  8417  011C2A  D019               	goto	l1190
  8418                           
  8419                           ; BSR set to: 1
  8420                           ;ring_buffer_LUT.c: 76: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8421  011C2C  0E00               	movlw	0
  8422  011C2E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  8423  011C30  0E00               	movlw	0
  8424  011C32  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8425  011C34  0E02               	movlw	2
  8426  011C36  EC1B  F09E         	call	_terminal_textAttributes
  8427                           
  8428                           ;ring_buffer_LUT.c: 79: printf("The cause of the most recent device reset was: %s\n\r",
  8429                           ;ring_buffer_LUT.c: 80: getCauseOfResetString(reset_cause));
  8430  011C3A  0E06               	movlw	low STR_48
  8431  011C3C  0101               	movlb	1	; () banked
  8432  011C3E  6F82               	movwf	printf@f& (0+255),b
  8433  011C40  0EF9               	movlw	high STR_48
  8434  011C42  6F83               	movwf	(printf@f+1)& (0+255),b
  8435  011C44  0102               	movlb	2	; () banked
  8436  011C46  51FF               	movf	_reset_cause& (0+255),w,b
  8437  011C48  EC8D  F0C2         	call	_getCauseOfResetString
  8438  011C4C  C117  F184         	movff	?_getCauseOfResetString,?_printf+2
  8439  011C50  C118  F185         	movff	?_getCauseOfResetString+1,?_printf+3
  8440  011C54  EC00  F080         	call	_printf	;wreg free
  8441                           
  8442                           ;ring_buffer_LUT.c: 82: terminal_textAttributesReset();
  8443  011C58  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  8444                           
  8445                           ;ring_buffer_LUT.c: 84: }
  8446  011C5C  0012               	return	
  8447  011C5E                     l1190:
  8448                           
  8449                           ;ring_buffer_LUT.c: 87: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  8450  011C5E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8451  011C62  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8452  011C66  0E9A               	movlw	low STR_49
  8453  011C68  0101               	movlb	1	; () banked
  8454  011C6A  6F19               	movwf	strcmp@s2& (0+255),b
  8455  011C6C  0EFF               	movlw	high STR_49
  8456  011C6E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8457  011C70  ECFE  F0BF         	call	_strcmp	;wreg free
  8458  011C74  0101               	movlb	1	; () banked
  8459  011C76  5117               	movf	?_strcmp& (0+255),w,b
  8460  011C78  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8461  011C7A  B4D8               	btfsc	status,2,c
  8462  011C7C  D00F               	goto	u25170
  8463                           
  8464                           ; BSR set to: 1
  8465  011C7E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8466  011C82  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8467  011C86  0EB5               	movlw	low STR_50
  8468  011C88  6F19               	movwf	strcmp@s2& (0+255),b
  8469  011C8A  0EFF               	movlw	high STR_50
  8470  011C8C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8471  011C8E  ECFE  F0BF         	call	_strcmp	;wreg free
  8472  011C92  0101               	movlb	1	; () banked
  8473  011C94  5117               	movf	?_strcmp& (0+255),w,b
  8474  011C96  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8475  011C98  A4D8               	btfss	status,2,c
  8476  011C9A  D018               	goto	l1192
  8477  011C9C                     u25170:
  8478                           
  8479                           ; BSR set to: 1
  8480                           ;ring_buffer_LUT.c: 89: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8481                           
  8482                           ; BSR set to: 1
  8483  011C9C  0E00               	movlw	0
  8484  011C9E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  8485  011CA0  0E00               	movlw	0
  8486  011CA2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8487  011CA4  0E02               	movlw	2
  8488  011CA6  EC1B  F09E         	call	_terminal_textAttributes
  8489                           
  8490                           ;ring_buffer_LUT.c: 90: printf("AC Power Meter\n\r");
  8491  011CAA  0EDD               	movlw	low STR_51
  8492  011CAC  0101               	movlb	1	; () banked
  8493  011CAE  6F82               	movwf	printf@f& (0+255),b
  8494  011CB0  0EFD               	movlw	high STR_51
  8495  011CB2  6F83               	movwf	(printf@f+1)& (0+255),b
  8496  011CB4  EC00  F080         	call	_printf	;wreg free
  8497                           
  8498                           ;ring_buffer_LUT.c: 91: printf("Marquette University ELEN 3035 Final Project\n\r");
  8499  011CB8  0E6A               	movlw	low STR_52
  8500  011CBA  0101               	movlb	1	; () banked
  8501  011CBC  6F82               	movwf	printf@f& (0+255),b
  8502  011CBE  0EF9               	movlw	high STR_52
  8503  011CC0  6F83               	movwf	(printf@f+1)& (0+255),b
  8504  011CC2  EC00  F080         	call	_printf	;wreg free
  8505                           
  8506                           ;ring_buffer_LUT.c: 92: terminal_textAttributesReset();
  8507  011CC6  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  8508                           
  8509                           ;ring_buffer_LUT.c: 94: }
  8510  011CCA  0012               	return	
  8511  011CCC                     l1192:
  8512                           
  8513                           ;ring_buffer_LUT.c: 97: else if((0 == strcmp(line, "Device ID?"))) {
  8514  011CCC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8515  011CD0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8516  011CD4  0E5C               	movlw	low STR_53
  8517  011CD6  0101               	movlb	1	; () banked
  8518  011CD8  6F19               	movwf	strcmp@s2& (0+255),b
  8519  011CDA  0EFF               	movlw	high STR_53
  8520  011CDC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8521  011CDE  ECFE  F0BF         	call	_strcmp	;wreg free
  8522  011CE2  0101               	movlb	1	; () banked
  8523  011CE4  5117               	movf	?_strcmp& (0+255),w,b
  8524  011CE6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8525  011CE8  A4D8               	btfss	status,2,c
  8526  011CEA  D023               	goto	l1196
  8527                           
  8528                           ; BSR set to: 1
  8529                           ;ring_buffer_LUT.c: 99: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8530  011CEC  0E00               	movlw	0
  8531  011CEE  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  8532  011CF0  0E00               	movlw	0
  8533  011CF2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8534  011CF4  0E02               	movlw	2
  8535  011CF6  EC1B  F09E         	call	_terminal_textAttributes
  8536                           
  8537                           ;ring_buffer_LUT.c: 102: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
  8538                           ;ring_buffer_LUT.c: 103: "part number of %s\n\r",
  8539                           ;ring_buffer_LUT.c: 104: getDeviceID(),
  8540                           ;ring_buffer_LUT.c: 105: getDeviceIDString(getDeviceID()));
  8541  011CFA  0EAD               	movlw	low STR_54
  8542  011CFC  0101               	movlb	1	; () banked
  8543  011CFE  6F82               	movwf	printf@f& (0+255),b
  8544  011D00  0EF5               	movlw	high STR_54
  8545  011D02  6F83               	movwf	(printf@f+1)& (0+255),b
  8546  011D04  EC98  F0C3         	call	_getDeviceID	;wreg free
  8547  011D08  C122  F184         	movff	?_getDeviceID,?_printf+2
  8548  011D0C  C123  F185         	movff	?_getDeviceID+1,?_printf+3
  8549  011D10  EC98  F0C3         	call	_getDeviceID	;wreg free
  8550  011D14  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
  8551  011D18  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
  8552  011D1C  EC49  F0BF         	call	_getDeviceIDString	;wreg free
  8553  011D20  C124  F186         	movff	?_getDeviceIDString,?_printf+4
  8554  011D24  C125  F187         	movff	?_getDeviceIDString+1,?_printf+5
  8555  011D28  EC00  F080         	call	_printf	;wreg free
  8556                           
  8557                           ;ring_buffer_LUT.c: 107: terminal_textAttributesReset();
  8558  011D2C  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  8559                           
  8560                           ;ring_buffer_LUT.c: 109: }
  8561  011D30  0012               	return	
  8562  011D32                     l1196:
  8563                           
  8564                           ;ring_buffer_LUT.c: 112: else if((0 == strcmp(line, "Revision ID?"))) {
  8565  011D32  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8566  011D36  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8567  011D3A  0E1D               	movlw	low STR_55
  8568  011D3C  0101               	movlb	1	; () banked
  8569  011D3E  6F19               	movwf	strcmp@s2& (0+255),b
  8570  011D40  0EFF               	movlw	high STR_55
  8571  011D42  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8572  011D44  ECFE  F0BF         	call	_strcmp	;wreg free
  8573  011D48  0101               	movlb	1	; () banked
  8574  011D4A  5117               	movf	?_strcmp& (0+255),w,b
  8575  011D4C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8576  011D4E  A4D8               	btfss	status,2,c
  8577  011D50  D022               	goto	l1198
  8578                           
  8579                           ; BSR set to: 1
  8580                           ;ring_buffer_LUT.c: 114: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8581  011D52  0E00               	movlw	0
  8582  011D54  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  8583  011D56  0E00               	movlw	0
  8584  011D58  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8585  011D5A  0E02               	movlw	2
  8586  011D5C  EC1B  F09E         	call	_terminal_textAttributes
  8587                           
  8588                           ;ring_buffer_LUT.c: 117: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
  8589                           ;ring_buffer_LUT.c: 118: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
  8590  011D60  0E48               	movlw	low STR_56
  8591  011D62  0101               	movlb	1	; () banked
  8592  011D64  6F82               	movwf	printf@f& (0+255),b
  8593  011D66  0EF7               	movlw	high STR_56
  8594  011D68  6F83               	movwf	(printf@f+1)& (0+255),b
  8595  011D6A  ECB2  F0C1         	call	_getMajorRevisionID	;wreg free
  8596  011D6E  0101               	movlb	1	; () banked
  8597  011D70  6FB6               	movwf	??_ringBufferLUT& (0+255),b
  8598  011D72  0E41               	movlw	65
  8599  011D74  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
  8600  011D76  6F84               	movwf	(?_printf+2)& (0+255),b
  8601  011D78  6B85               	clrf	(?_printf+3)& (0+255),b
  8602  011D7A  0E00               	movlw	0
  8603  011D7C  2385               	addwfc	(?_printf+3)& (0+255),f,b
  8604  011D7E  EC3C  F0C3         	call	_getMinorRevisionID	;wreg free
  8605  011D82  0101               	movlb	1	; () banked
  8606  011D84  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
  8607  011D86  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  8608  011D88  6F86               	movwf	(?_printf+4)& (0+255),b
  8609  011D8A  6B87               	clrf	(?_printf+5)& (0+255),b
  8610  011D8C  EC00  F080         	call	_printf	;wreg free
  8611                           
  8612                           ;ring_buffer_LUT.c: 120: terminal_textAttributesReset();
  8613  011D90  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  8614                           
  8615                           ;ring_buffer_LUT.c: 122: }
  8616  011D94  0012               	return	
  8617  011D96                     l1198:
  8618                           
  8619                           ;ring_buffer_LUT.c: 125: else if((0 == strcmp(line, "User IDs?"))) {
  8620  011D96  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8621  011D9A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8622  011D9E  0E72               	movlw	low STR_57
  8623  011DA0  0101               	movlb	1	; () banked
  8624  011DA2  6F19               	movwf	strcmp@s2& (0+255),b
  8625  011DA4  0EFF               	movlw	high STR_57
  8626  011DA6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8627  011DA8  ECFE  F0BF         	call	_strcmp	;wreg free
  8628  011DAC  0101               	movlb	1	; () banked
  8629  011DAE  5117               	movf	?_strcmp& (0+255),w,b
  8630  011DB0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8631  011DB2  A4D8               	btfss	status,2,c
  8632  011DB4  D03E               	goto	l1200
  8633                           
  8634                           ; BSR set to: 1
  8635                           ;ring_buffer_LUT.c: 127: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8636  011DB6  0E00               	movlw	0
  8637  011DB8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  8638  011DBA  0E00               	movlw	0
  8639  011DBC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8640  011DBE  0E02               	movlw	2
  8641  011DC0  EC1B  F09E         	call	_terminal_textAttributes
  8642                           
  8643                           ;ring_buffer_LUT.c: 129: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
  8644  011DC4  0E8B               	movlw	low STR_58
  8645  011DC6  0101               	movlb	1	; () banked
  8646  011DC8  6F82               	movwf	printf@f& (0+255),b
  8647  011DCA  0EF6               	movlw	high STR_58
  8648  011DCC  6F83               	movwf	(printf@f+1)& (0+255),b
  8649  011DCE  EC00  F080         	call	_printf	;wreg free
  8650                           
  8651                           ;ring_buffer_LUT.c: 132: for (int userID = 0; userID <= 7; userID++) {
  8652  011DD2  0E00               	movlw	0
  8653  011DD4  0102               	movlb	2	; () banked
  8654  011DD6  6FDA               	movwf	(ringBufferLUT@userID+1)& (0+255),b
  8655  011DD8  0E00               	movlw	0
  8656  011DDA  6FD9               	movwf	ringBufferLUT@userID& (0+255),b
  8657  011DDC                     l18666:
  8658                           
  8659                           ; BSR set to: 2
  8660  011DDC  BFDA               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
  8661  011DDE  D006               	goto	l1201
  8662  011DE0  51DA               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
  8663  011DE2  E124               	bnz	l18676
  8664  011DE4  0E08               	movlw	8
  8665  011DE6  5DD9               	subwf	ringBufferLUT@userID& (0+255),w,b
  8666  011DE8  B0D8               	btfsc	status,0,c
  8667  011DEA  D020               	goto	u25220
  8668  011DEC                     l1201:
  8669                           
  8670                           ; BSR set to: 2
  8671                           ;ring_buffer_LUT.c: 134: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
  8672                           ;ring_buffer_LUT.c: 135: userID,
  8673                           ;ring_buffer_LUT.c: 136: (2 * userID),
  8674                           ;ring_buffer_LUT.c: 137: getUserID(userID));
  8675                           
  8676                           ; BSR set to: 2
  8677  011DEC  0E66               	movlw	low STR_59
  8678  011DEE  0101               	movlb	1	; () banked
  8679  011DF0  6F82               	movwf	printf@f& (0+255),b
  8680  011DF2  0EF8               	movlw	high STR_59
  8681  011DF4  6F83               	movwf	(printf@f+1)& (0+255),b
  8682  011DF6  C2D9  F184         	movff	ringBufferLUT@userID,?_printf+2
  8683  011DFA  C2DA  F185         	movff	ringBufferLUT@userID+1,?_printf+3
  8684  011DFE  90D8               	bcf	status,0,c
  8685  011E00  0102               	movlb	2	; () banked
  8686  011E02  35D9               	rlcf	ringBufferLUT@userID& (0+255),w,b
  8687  011E04  0101               	movlb	1	; () banked
  8688  011E06  6F86               	movwf	(?_printf+4)& (0+255),b
  8689  011E08  0102               	movlb	2	; () banked
  8690  011E0A  35DA               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
  8691  011E0C  0101               	movlb	1	; () banked
  8692  011E0E  6F87               	movwf	(?_printf+5)& (0+255),b
  8693  011E10  0102               	movlb	2	; () banked
  8694  011E12  51D9               	movf	ringBufferLUT@userID& (0+255),w,b
  8695  011E14  EC4F  F0C1         	call	_getUserID
  8696  011E18  C122  F188         	movff	?_getUserID,?_printf+6
  8697  011E1C  C123  F189         	movff	?_getUserID+1,?_printf+7
  8698  011E20  EC00  F080         	call	_printf	;wreg free
  8699  011E24  0102               	movlb	2	; () banked
  8700  011E26  4BD9               	infsnz	ringBufferLUT@userID& (0+255),f,b
  8701  011E28  2BDA               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
  8702  011E2A  D7D8               	goto	l18666
  8703  011E2C                     u25220:
  8704  011E2C                     l18676:
  8705                           
  8706                           ; BSR set to: 2
  8707                           ;ring_buffer_LUT.c: 139: }
  8708                           ;ring_buffer_LUT.c: 141: terminal_textAttributesReset();
  8709  011E2C  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  8710                           
  8711                           ;ring_buffer_LUT.c: 143: }
  8712  011E30  0012               	return	
  8713  011E32                     l1200:
  8714                           
  8715                           ;ring_buffer_LUT.c: 146: else if((0 == strcmp(line, "ADC Error?"))) {
  8716  011E32  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8717  011E36  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8718  011E3A  0E67               	movlw	low STR_60
  8719  011E3C  0101               	movlb	1	; () banked
  8720  011E3E  6F19               	movwf	strcmp@s2& (0+255),b
  8721  011E40  0EFF               	movlw	high STR_60
  8722  011E42  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8723  011E44  ECFE  F0BF         	call	_strcmp	;wreg free
  8724  011E48  0101               	movlb	1	; () banked
  8725  011E4A  5117               	movf	?_strcmp& (0+255),w,b
  8726  011E4C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8727  011E4E  A4D8               	btfss	status,2,c
  8728  011E50  D0A4               	goto	l1204
  8729                           
  8730                           ; BSR set to: 1
  8731                           ;ring_buffer_LUT.c: 148: if (adc_error_flag) {
  8732  011E52  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8733  011E54  D090               	goto	l1205
  8734                           
  8735                           ; BSR set to: 1
  8736                           ;ring_buffer_LUT.c: 150: terminal_textAttributes(RED, BLACK, NORMAL);
  8737  011E56  0E00               	movlw	0
  8738  011E58  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  8739  011E5A  0E00               	movlw	0
  8740  011E5C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8741  011E5E  0E01               	movlw	1
  8742  011E60  EC1B  F09E         	call	_terminal_textAttributes
  8743                           
  8744                           ;ring_buffer_LUT.c: 153: current_adc_channel = ADPCH;
  8745  011E64  CF5F F1DB          	movff	3935,_current_adc_channel	;volatile
  8746                           
  8747                           ;ring_buffer_LUT.c: 156: char channel_name[22];
  8748                           ;ring_buffer_LUT.c: 158: switch (current_adc_channel) {
  8749  011E68  D060               	goto	l1206
  8750  011E6A                     
  8751                           ;ring_buffer_LUT.c: 161: strcpy(channel_name, "ISNS");
  8752  011E6A  0EB8               	movlw	low ringBufferLUT@channel_name
  8753  011E6C  0101               	movlb	1	; () banked
  8754  011E6E  6F17               	movwf	strcpy@to& (0+255),b
  8755  011E70  0E02               	movlw	high ringBufferLUT@channel_name
  8756  011E72  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8757  011E74  0EA6               	movlw	low STR_61
  8758  011E76  6F19               	movwf	strcpy@from& (0+255),b
  8759  011E78  0EFF               	movlw	high STR_61
  8760  011E7A  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8761  011E7C  EC0A  F0C2         	call	_strcpy	;wreg free
  8762                           
  8763                           ;ring_buffer_LUT.c: 162: break;
  8764  011E80  D06C               	goto	l1208
  8765  011E82                     
  8766                           ;ring_buffer_LUT.c: 165: strcpy(channel_name, "POS12");
  8767  011E82  0EB8               	movlw	low ringBufferLUT@channel_name
  8768  011E84  0101               	movlb	1	; () banked
  8769  011E86  6F17               	movwf	strcpy@to& (0+255),b
  8770  011E88  0E02               	movlw	high ringBufferLUT@channel_name
  8771  011E8A  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8772  011E8C  0E94               	movlw	low STR_62
  8773  011E8E  6F19               	movwf	strcpy@from& (0+255),b
  8774  011E90  0EFF               	movlw	high STR_62
  8775  011E92  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8776  011E94  EC0A  F0C2         	call	_strcpy	;wreg free
  8777                           
  8778                           ;ring_buffer_LUT.c: 166: break;
  8779  011E98  D060               	goto	l1208
  8780  011E9A                     
  8781                           ;ring_buffer_LUT.c: 169: strcpy(channel_name, "POS3P3");
  8782  011E9A  0EB8               	movlw	low ringBufferLUT@channel_name
  8783  011E9C  0101               	movlb	1	; () banked
  8784  011E9E  6F17               	movwf	strcpy@to& (0+255),b
  8785  011EA0  0E02               	movlw	high ringBufferLUT@channel_name
  8786  011EA2  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8787  011EA4  0E8D               	movlw	low STR_63
  8788  011EA6  6F19               	movwf	strcpy@from& (0+255),b
  8789  011EA8  0EFF               	movlw	high STR_63
  8790  011EAA  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8791  011EAC  EC0A  F0C2         	call	_strcpy	;wreg free
  8792                           
  8793                           ;ring_buffer_LUT.c: 170: break;
  8794  011EB0  D054               	goto	l1208
  8795  011EB2                     
  8796                           ;ring_buffer_LUT.c: 173: strcpy(channel_name, "Internal AVSS");
  8797  011EB2  0EB8               	movlw	low ringBufferLUT@channel_name
  8798  011EB4  0101               	movlb	1	; () banked
  8799  011EB6  6F17               	movwf	strcpy@to& (0+255),b
  8800  011EB8  0E02               	movlw	high ringBufferLUT@channel_name
  8801  011EBA  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8802  011EBC  0EF4               	movlw	low STR_64
  8803  011EBE  6F19               	movwf	strcpy@from& (0+255),b
  8804  011EC0  0EFE               	movlw	high STR_64
  8805  011EC2  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8806  011EC4  EC0A  F0C2         	call	_strcpy	;wreg free
  8807                           
  8808                           ;ring_buffer_LUT.c: 174: break;
  8809  011EC8  D048               	goto	l1208
  8810  011ECA                     
  8811                           ;ring_buffer_LUT.c: 177: strcpy(channel_name, "Internal Temp");
  8812  011ECA  0EB8               	movlw	low ringBufferLUT@channel_name
  8813  011ECC  0101               	movlb	1	; () banked
  8814  011ECE  6F17               	movwf	strcpy@to& (0+255),b
  8815  011ED0  0E02               	movlw	high ringBufferLUT@channel_name
  8816  011ED2  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8817  011ED4  0E02               	movlw	low STR_65
  8818  011ED6  6F19               	movwf	strcpy@from& (0+255),b
  8819  011ED8  0EFF               	movlw	high STR_65
  8820  011EDA  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8821  011EDC  EC0A  F0C2         	call	_strcpy	;wreg free
  8822                           
  8823                           ;ring_buffer_LUT.c: 178: break;
  8824  011EE0  D03C               	goto	l1208
  8825  011EE2                     
  8826                           ;ring_buffer_LUT.c: 181: strcpy(channel_name, "Internal DAC1");
  8827  011EE2  0EB8               	movlw	low ringBufferLUT@channel_name
  8828  011EE4  0101               	movlb	1	; () banked
  8829  011EE6  6F17               	movwf	strcpy@to& (0+255),b
  8830  011EE8  0E02               	movlw	high ringBufferLUT@channel_name
  8831  011EEA  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8832  011EEC  0EBC               	movlw	low STR_66
  8833  011EEE  6F19               	movwf	strcpy@from& (0+255),b
  8834  011EF0  0EFE               	movlw	high STR_66
  8835  011EF2  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8836  011EF4  EC0A  F0C2         	call	_strcpy	;wreg free
  8837                           
  8838                           ;ring_buffer_LUT.c: 182: break;
  8839  011EF8  D030               	goto	l1208
  8840  011EFA                     
  8841                           ;ring_buffer_LUT.c: 185: strcpy(channel_name, "Internal FVR Buffer 1");
  8842  011EFA  0EB8               	movlw	low ringBufferLUT@channel_name
  8843  011EFC  0101               	movlb	1	; () banked
  8844  011EFE  6F17               	movwf	strcpy@to& (0+255),b
  8845  011F00  0E02               	movlw	high ringBufferLUT@channel_name
  8846  011F02  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8847  011F04  0E3D               	movlw	low STR_67
  8848  011F06  6F19               	movwf	strcpy@from& (0+255),b
  8849  011F08  0EFD               	movlw	high STR_67
  8850  011F0A  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8851  011F0C  EC0A  F0C2         	call	_strcpy	;wreg free
  8852                           
  8853                           ;ring_buffer_LUT.c: 186: break;
  8854  011F10  D024               	goto	l1208
  8855  011F12                     
  8856                           ;ring_buffer_LUT.c: 189: strcpy(channel_name, "Undefined");
  8857  011F12  0EB8               	movlw	low ringBufferLUT@channel_name
  8858  011F14  0101               	movlb	1	; () banked
  8859  011F16  6F17               	movwf	strcpy@to& (0+255),b
  8860  011F18  0E02               	movlw	high ringBufferLUT@channel_name
  8861  011F1A  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8862  011F1C  0E7C               	movlw	low STR_68
  8863  011F1E  6F19               	movwf	strcpy@from& (0+255),b
  8864  011F20  0EFF               	movlw	high STR_68
  8865  011F22  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8866  011F24  EC0A  F0C2         	call	_strcpy	;wreg free
  8867                           
  8868                           ;ring_buffer_LUT.c: 192: }
  8869                           
  8870                           ;ring_buffer_LUT.c: 190: break;
  8871  011F28  D018               	goto	l1208
  8872  011F2A                     l1206:
  8873  011F2A  0101               	movlb	1	; () banked
  8874  011F2C  51DB               	movf	_current_adc_channel& (0+255),w,b
  8875                           
  8876                           ; Switch size 1, requested type "space"
  8877                           ; Number of cases is 7, Range of values is 0 to 63
  8878                           ; switch strategies available:
  8879                           ; Name         Instructions Cycles
  8880                           ; simple_byte           22    12 (average)
  8881                           ;	Chosen strategy is simple_byte
  8882  011F2E  0A00               	xorlw	0	; case 0
  8883  011F30  B4D8               	btfsc	status,2,c
  8884  011F32  D79B               	goto	l1207
  8885  011F34  0A04               	xorlw	4	; case 4
  8886  011F36  B4D8               	btfsc	status,2,c
  8887  011F38  D7A4               	goto	l1209
  8888  011F3A  0A26               	xorlw	38	; case 34
  8889  011F3C  B4D8               	btfsc	status,2,c
  8890  011F3E  D7AD               	goto	l1210
  8891  011F40  0A1E               	xorlw	30	; case 60
  8892  011F42  B4D8               	btfsc	status,2,c
  8893  011F44  D7B6               	goto	l1211
  8894  011F46  0A01               	xorlw	1	; case 61
  8895  011F48  B4D8               	btfsc	status,2,c
  8896  011F4A  D7BF               	goto	l1212
  8897  011F4C  0A03               	xorlw	3	; case 62
  8898  011F4E  B4D8               	btfsc	status,2,c
  8899  011F50  D7C8               	goto	l1213
  8900  011F52  0A01               	xorlw	1	; case 63
  8901  011F54  B4D8               	btfsc	status,2,c
  8902  011F56  D7D1               	goto	l1214
  8903  011F58  D7DC               	goto	l1215
  8904  011F5A                     l1208:
  8905                           
  8906                           ;ring_buffer_LUT.c: 195: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
  8907                           
  8908                           ; BSR set to: 1
  8909  011F5A  0E3A               	movlw	low STR_69
  8910  011F5C  0101               	movlb	1	; () banked
  8911  011F5E  6F82               	movwf	printf@f& (0+255),b
  8912  011F60  0EF9               	movlw	high STR_69
  8913  011F62  6F83               	movwf	(printf@f+1)& (0+255),b
  8914  011F64  0EB8               	movlw	low ringBufferLUT@channel_name
  8915  011F66  6F84               	movwf	(?_printf+2)& (0+255),b
  8916  011F68  0E02               	movlw	high ringBufferLUT@channel_name
  8917  011F6A  6F85               	movwf	(?_printf+3)& (0+255),b
  8918  011F6C  EC00  F080         	call	_printf	;wreg free
  8919                           
  8920                           ;ring_buffer_LUT.c: 196: terminal_textAttributesReset();
  8921  011F70  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  8922                           
  8923                           ;ring_buffer_LUT.c: 198: }
  8924  011F74  0012               	return	
  8925  011F76                     l1205:
  8926                           
  8927                           ;ring_buffer_LUT.c: 200: else {
  8928                           ;ring_buffer_LUT.c: 202: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8929  011F76  0E00               	movlw	0
  8930  011F78  0101               	movlb	1	; () banked
  8931  011F7A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  8932  011F7C  0E00               	movlw	0
  8933  011F7E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8934  011F80  0E02               	movlw	2
  8935  011F82  EC1B  F09E         	call	_terminal_textAttributes
  8936                           
  8937                           ;ring_buffer_LUT.c: 203: printf("No ADC Error detected\n\r");
  8938  011F86  0E0F               	movlw	low STR_70
  8939  011F88  0101               	movlb	1	; () banked
  8940  011F8A  6F82               	movwf	printf@f& (0+255),b
  8941  011F8C  0EFD               	movlw	high STR_70
  8942  011F8E  6F83               	movwf	(printf@f+1)& (0+255),b
  8943  011F90  EC00  F080         	call	_printf	;wreg free
  8944                           
  8945                           ;ring_buffer_LUT.c: 204: terminal_textAttributesReset();
  8946  011F94  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  8947                           
  8948                           ;ring_buffer_LUT.c: 206: }
  8949                           ;ring_buffer_LUT.c: 208: }
  8950  011F98  0012               	return	
  8951  011F9A                     l1204:
  8952                           
  8953                           ;ring_buffer_LUT.c: 211: else if((0 == strcmp(line, "Clear ADC Error"))) {
  8954  011F9A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  8955  011F9E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8956  011FA2  0E70               	movlw	low STR_71
  8957  011FA4  0101               	movlb	1	; () banked
  8958  011FA6  6F19               	movwf	strcmp@s2& (0+255),b
  8959  011FA8  0EFE               	movlw	high STR_71
  8960  011FAA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8961  011FAC  ECFE  F0BF         	call	_strcmp	;wreg free
  8962  011FB0  0101               	movlb	1	; () banked
  8963  011FB2  5117               	movf	?_strcmp& (0+255),w,b
  8964  011FB4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8965  011FB6  A4D8               	btfss	status,2,c
  8966  011FB8  D018               	goto	l1218
  8967                           
  8968                           ; BSR set to: 1
  8969                           ;ring_buffer_LUT.c: 213: LATFbits.LATF3 = 0;
  8970  011FBA  967E               	bcf	3966,3,c	;volatile
  8971                           
  8972                           ;ring_buffer_LUT.c: 214: adc_error_flag = 0;
  8973  011FBC  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8974                           
  8975                           ;ring_buffer_LUT.c: 216: PIE5bits.TMR7IE = 1;
  8976  011FBE  010E               	movlb	14	; () banked
  8977  011FC0  8D2E               	bsf	46,6,b	;volatile
  8978                           
  8979                           ; BSR set to: 14
  8980                           ;ring_buffer_LUT.c: 217: TMR7_StopTimer();
  8981  011FC2  EC90  F0C4         	call	_TMR7_StopTimer	;wreg free
  8982                           
  8983                           ;ring_buffer_LUT.c: 219: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8984  011FC6  0E00               	movlw	0
  8985  011FC8  0101               	movlb	1	; () banked
  8986  011FCA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  8987  011FCC  0E00               	movlw	0
  8988  011FCE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8989  011FD0  0E02               	movlw	2
  8990  011FD2  EC1B  F09E         	call	_terminal_textAttributes
  8991                           
  8992                           ;ring_buffer_LUT.c: 220: printf("Clearing ADC Error\n\r");
  8993  011FD6  0E68               	movlw	low STR_72
  8994  011FD8  0101               	movlb	1	; () banked
  8995  011FDA  6F82               	movwf	printf@f& (0+255),b
  8996  011FDC  0EFD               	movlw	high STR_72
  8997  011FDE  6F83               	movwf	(printf@f+1)& (0+255),b
  8998  011FE0  EC00  F080         	call	_printf	;wreg free
  8999                           
  9000                           ;ring_buffer_LUT.c: 221: terminal_textAttributesReset();
  9001  011FE4  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9002                           
  9003                           ;ring_buffer_LUT.c: 223: }
  9004  011FE8  0012               	return	
  9005  011FEA                     l1218:
  9006                           
  9007                           ;ring_buffer_LUT.c: 226: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
  9008  011FEA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9009  011FEE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9010  011FF2  0EFF               	movlw	low STR_73
  9011  011FF4  0101               	movlb	1	; () banked
  9012  011FF6  6F19               	movwf	strcmp@s2& (0+255),b
  9013  011FF8  0EFD               	movlw	high STR_73
  9014  011FFA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9015  011FFC  ECFE  F0BF         	call	_strcmp	;wreg free
  9016  012000  0101               	movlb	1	; () banked
  9017  012002  5117               	movf	?_strcmp& (0+255),w,b
  9018  012004  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9019  012006  A4D8               	btfss	status,2,c
  9020  012008  D026               	goto	l1220
  9021                           
  9022                           ; BSR set to: 1
  9023                           ;ring_buffer_LUT.c: 229: if (VCC_overvoltage_flag == 1) {
  9024  01200A  A45E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  9025  01200C  D012               	goto	l1221
  9026                           
  9027                           ; BSR set to: 1
  9028                           ;ring_buffer_LUT.c: 231: terminal_textAttributes(RED, BLACK, NORMAL);
  9029  01200E  0E00               	movlw	0
  9030  012010  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9031  012012  0E00               	movlw	0
  9032  012014  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9033  012016  0E01               	movlw	1
  9034  012018  EC1B  F09E         	call	_terminal_textAttributes
  9035                           
  9036                           ;ring_buffer_LUT.c: 232: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
  9037  01201C  0E49               	movlw	low STR_74
  9038  01201E  0101               	movlb	1	; () banked
  9039  012020  6F82               	movwf	printf@f& (0+255),b
  9040  012022  0EF6               	movlw	high STR_74
  9041  012024  6F83               	movwf	(printf@f+1)& (0+255),b
  9042  012026  EC00  F080         	call	_printf	;wreg free
  9043                           
  9044                           ;ring_buffer_LUT.c: 233: terminal_textAttributesReset();
  9045  01202A  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9046                           
  9047                           ;ring_buffer_LUT.c: 236: VCC_overvoltage_flag = 0;
  9048  01202E  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  9049                           
  9050                           ;ring_buffer_LUT.c: 238: }
  9051  012030  0012               	return	
  9052  012032                     l1221:
  9053                           
  9054                           ;ring_buffer_LUT.c: 240: else {
  9055                           ;ring_buffer_LUT.c: 242: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9056  012032  0E00               	movlw	0
  9057  012034  0101               	movlb	1	; () banked
  9058  012036  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9059  012038  0E00               	movlw	0
  9060  01203A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9061  01203C  0E02               	movlw	2
  9062  01203E  EC1B  F09E         	call	_terminal_textAttributes
  9063                           
  9064                           ;ring_buffer_LUT.c: 243: printf("VCC Overvoltage condition has not occurred\n\r");
  9065  012042  0EF5               	movlw	low STR_75
  9066  012044  0101               	movlb	1	; () banked
  9067  012046  6F82               	movwf	printf@f& (0+255),b
  9068  012048  0EF9               	movlw	high STR_75
  9069  01204A  6F83               	movwf	(printf@f+1)& (0+255),b
  9070  01204C  EC00  F080         	call	_printf	;wreg free
  9071                           
  9072                           ;ring_buffer_LUT.c: 244: terminal_textAttributesReset();
  9073  012050  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9074                           
  9075                           ;ring_buffer_LUT.c: 246: }
  9076                           ;ring_buffer_LUT.c: 248: }
  9077  012054  0012               	return	
  9078  012056                     l1220:
  9079                           
  9080                           ;ring_buffer_LUT.c: 251: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  9081  012056  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9082  01205A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9083  01205E  0E30               	movlw	low STR_76
  9084  012060  0101               	movlb	1	; () banked
  9085  012062  6F19               	movwf	strcmp@s2& (0+255),b
  9086  012064  0EFE               	movlw	high STR_76
  9087  012066  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9088  012068  ECFE  F0BF         	call	_strcmp	;wreg free
  9089  01206C  0101               	movlb	1	; () banked
  9090  01206E  5117               	movf	?_strcmp& (0+255),w,b
  9091  012070  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9092  012072  A4D8               	btfss	status,2,c
  9093  012074  D019               	goto	l1224
  9094                           
  9095                           ; BSR set to: 1
  9096                           ;ring_buffer_LUT.c: 253: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9097  012076  0E00               	movlw	0
  9098  012078  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9099  01207A  0E00               	movlw	0
  9100  01207C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9101  01207E  0E06               	movlw	6
  9102  012080  EC1B  F09E         	call	_terminal_textAttributes
  9103                           
  9104                           ;ring_buffer_LUT.c: 254: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
  9105  012084  0E3C               	movlw	low STR_77
  9106  012086  0101               	movlb	1	; () banked
  9107  012088  6F82               	movwf	printf@f& (0+255),b
  9108  01208A  0EFB               	movlw	high STR_77
  9109  01208C  6F83               	movwf	(printf@f+1)& (0+255),b
  9110  01208E  C0F6  F184         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  9111  012092  C0F7  F185         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  9112  012096  C0F8  F186         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  9113  01209A  C0F9  F187         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
  9114  01209E  EC00  F080         	call	_printf	;wreg free
  9115                           
  9116                           ;ring_buffer_LUT.c: 255: terminal_textAttributesReset();
  9117  0120A2  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9118                           
  9119                           ;ring_buffer_LUT.c: 257: }
  9120  0120A6  0012               	return	
  9121  0120A8                     l1224:
  9122                           
  9123                           ;ring_buffer_LUT.c: 260: else if((0 == strcmp(line, "Measure POS12?"))) {
  9124  0120A8  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9125  0120AC  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9126  0120B0  0E8F               	movlw	low STR_78
  9127  0120B2  0101               	movlb	1	; () banked
  9128  0120B4  6F19               	movwf	strcmp@s2& (0+255),b
  9129  0120B6  0EFE               	movlw	high STR_78
  9130  0120B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9131  0120BA  ECFE  F0BF         	call	_strcmp	;wreg free
  9132  0120BE  0101               	movlb	1	; () banked
  9133  0120C0  5117               	movf	?_strcmp& (0+255),w,b
  9134  0120C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9135  0120C4  A4D8               	btfss	status,2,c
  9136  0120C6  D019               	goto	l1226
  9137                           
  9138                           ; BSR set to: 1
  9139                           ;ring_buffer_LUT.c: 262: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9140  0120C8  0E00               	movlw	0
  9141  0120CA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9142  0120CC  0E00               	movlw	0
  9143  0120CE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9144  0120D0  0E06               	movlw	6
  9145  0120D2  EC1B  F09E         	call	_terminal_textAttributes
  9146                           
  9147                           ;ring_buffer_LUT.c: 263: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
  9148  0120D6  0EAA               	movlw	low STR_79
  9149  0120D8  0101               	movlb	1	; () banked
  9150  0120DA  6F82               	movwf	printf@f& (0+255),b
  9151  0120DC  0EFB               	movlw	high STR_79
  9152  0120DE  6F83               	movwf	(printf@f+1)& (0+255),b
  9153  0120E0  C1CF  F184         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  9154  0120E4  C1D0  F185         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  9155  0120E8  C1D1  F186         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  9156  0120EC  C1D2  F187         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
  9157  0120F0  EC00  F080         	call	_printf	;wreg free
  9158                           
  9159                           ;ring_buffer_LUT.c: 264: terminal_textAttributesReset();
  9160  0120F4  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9161                           
  9162                           ;ring_buffer_LUT.c: 266: }
  9163  0120F8  0012               	return	
  9164  0120FA                     l1226:
  9165                           
  9166                           ;ring_buffer_LUT.c: 269: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  9167  0120FA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9168  0120FE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9169  012102  0EBA               	movlw	low STR_80
  9170  012104  0101               	movlb	1	; () banked
  9171  012106  6F19               	movwf	strcmp@s2& (0+255),b
  9172  012108  0EFD               	movlw	high STR_80
  9173  01210A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9174  01210C  ECFE  F0BF         	call	_strcmp	;wreg free
  9175  012110  0101               	movlb	1	; () banked
  9176  012112  5117               	movf	?_strcmp& (0+255),w,b
  9177  012114  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9178  012116  A4D8               	btfss	status,2,c
  9179  012118  D019               	goto	l1228
  9180                           
  9181                           ; BSR set to: 1
  9182                           ;ring_buffer_LUT.c: 271: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9183  01211A  0E00               	movlw	0
  9184  01211C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9185  01211E  0E00               	movlw	0
  9186  012120  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9187  012122  0E06               	movlw	6
  9188  012124  EC1B  F09E         	call	_terminal_textAttributes
  9189                           
  9190                           ;ring_buffer_LUT.c: 272: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
  9191  012128  0E86               	movlw	low STR_81
  9192  01212A  0101               	movlb	1	; () banked
  9193  01212C  6F82               	movwf	printf@f& (0+255),b
  9194  01212E  0EFB               	movlw	high STR_81
  9195  012130  6F83               	movwf	(printf@f+1)& (0+255),b
  9196  012132  C1CB  F184         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  9197  012136  C1CC  F185         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  9198  01213A  C1CD  F186         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  9199  01213E  C1CE  F187         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
  9200  012142  EC00  F080         	call	_printf	;wreg free
  9201                           
  9202                           ;ring_buffer_LUT.c: 273: terminal_textAttributesReset();
  9203  012146  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9204                           
  9205                           ;ring_buffer_LUT.c: 277: }
  9206  01214A  0012               	return	
  9207  01214C                     l1228:
  9208                           
  9209                           ;ring_buffer_LUT.c: 280: else if((0 == strcmp(line, "Measure FVR?"))) {
  9210  01214C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9211  012150  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9212  012154  0E2A               	movlw	low STR_82
  9213  012156  0101               	movlb	1	; () banked
  9214  012158  6F19               	movwf	strcmp@s2& (0+255),b
  9215  01215A  0EFF               	movlw	high STR_82
  9216  01215C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9217  01215E  ECFE  F0BF         	call	_strcmp	;wreg free
  9218  012162  0101               	movlb	1	; () banked
  9219  012164  5117               	movf	?_strcmp& (0+255),w,b
  9220  012166  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9221  012168  A4D8               	btfss	status,2,c
  9222  01216A  D019               	goto	l1230
  9223                           
  9224                           ; BSR set to: 1
  9225                           ;ring_buffer_LUT.c: 282: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9226  01216C  0E00               	movlw	0
  9227  01216E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9228  012170  0E00               	movlw	0
  9229  012172  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9230  012174  0E06               	movlw	6
  9231  012176  EC1B  F09E         	call	_terminal_textAttributes
  9232                           
  9233                           ;ring_buffer_LUT.c: 283: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
  9234  01217A  0EBD               	movlw	low STR_83
  9235  01217C  0101               	movlb	1	; () banked
  9236  01217E  6F82               	movwf	printf@f& (0+255),b
  9237  012180  0EF7               	movlw	high STR_83
  9238  012182  6F83               	movwf	(printf@f+1)& (0+255),b
  9239  012184  C1E4  F184         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  9240  012188  C1E5  F185         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  9241  01218C  C1E6  F186         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  9242  012190  C1E7  F187         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
  9243  012194  EC00  F080         	call	_printf	;wreg free
  9244                           
  9245                           ;ring_buffer_LUT.c: 284: terminal_textAttributesReset();
  9246  012198  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9247                           
  9248                           ;ring_buffer_LUT.c: 286: }
  9249  01219C  0012               	return	
  9250  01219E                     l1230:
  9251                           
  9252                           ;ring_buffer_LUT.c: 289: else if((0 == strcmp(line, "Measure AVSS?"))) {
  9253  01219E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9254  0121A2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9255  0121A6  0ECA               	movlw	low STR_84
  9256  0121A8  0101               	movlb	1	; () banked
  9257  0121AA  6F19               	movwf	strcmp@s2& (0+255),b
  9258  0121AC  0EFE               	movlw	high STR_84
  9259  0121AE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9260  0121B0  ECFE  F0BF         	call	_strcmp	;wreg free
  9261  0121B4  0101               	movlb	1	; () banked
  9262  0121B6  5117               	movf	?_strcmp& (0+255),w,b
  9263  0121B8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9264  0121BA  A4D8               	btfss	status,2,c
  9265  0121BC  D019               	goto	l1232
  9266                           
  9267                           ; BSR set to: 1
  9268                           ;ring_buffer_LUT.c: 291: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9269  0121BE  0E00               	movlw	0
  9270  0121C0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9271  0121C2  0E00               	movlw	0
  9272  0121C4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9273  0121C6  0E06               	movlw	6
  9274  0121C8  EC1B  F09E         	call	_terminal_textAttributes
  9275                           
  9276                           ;ring_buffer_LUT.c: 292: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  9277  0121CC  0E17               	movlw	low STR_85
  9278  0121CE  0101               	movlb	1	; () banked
  9279  0121D0  6F82               	movwf	printf@f& (0+255),b
  9280  0121D2  0EFB               	movlw	high STR_85
  9281  0121D4  6F83               	movwf	(printf@f+1)& (0+255),b
  9282  0121D6  C1D3  F184         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  9283  0121DA  C1D4  F185         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  9284  0121DE  C1D5  F186         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  9285  0121E2  C1D6  F187         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
  9286  0121E6  EC00  F080         	call	_printf	;wreg free
  9287                           
  9288                           ;ring_buffer_LUT.c: 293: terminal_textAttributesReset();
  9289  0121EA  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9290                           
  9291                           ;ring_buffer_LUT.c: 295: }
  9292  0121EE  0012               	return	
  9293  0121F0                     l1232:
  9294                           
  9295                           ;ring_buffer_LUT.c: 298: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  9296  0121F0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9297  0121F4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9298  0121F8  0EC3               	movlw	low STR_86
  9299  0121FA  0101               	movlb	1	; () banked
  9300  0121FC  6F19               	movwf	strcmp@s2& (0+255),b
  9301  0121FE  0EFC               	movlw	high STR_86
  9302  012200  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9303  012202  ECFE  F0BF         	call	_strcmp	;wreg free
  9304  012206  0101               	movlb	1	; () banked
  9305  012208  5117               	movf	?_strcmp& (0+255),w,b
  9306  01220A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9307  01220C  A4D8               	btfss	status,2,c
  9308  01220E  D019               	goto	l1234
  9309                           
  9310                           ; BSR set to: 1
  9311                           ;ring_buffer_LUT.c: 300: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9312  012210  0E00               	movlw	0
  9313  012212  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9314  012214  0E00               	movlw	0
  9315  012216  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9316  012218  0E06               	movlw	6
  9317  01221A  EC1B  F09E         	call	_terminal_textAttributes
  9318                           
  9319                           ;ring_buffer_LUT.c: 301: printf("Measured Current is %.3f Amps\n\r", Imeas);
  9320  01221E  0E12               	movlw	low STR_87
  9321  012220  0101               	movlb	1	; () banked
  9322  012222  6F82               	movwf	printf@f& (0+255),b
  9323  012224  0EFC               	movlw	high STR_87
  9324  012226  6F83               	movwf	(printf@f+1)& (0+255),b
  9325  012228  C1C3  F184         	movff	_Imeas,?_printf+2	;volatile
  9326  01222C  C1C4  F185         	movff	_Imeas+1,?_printf+3	;volatile
  9327  012230  C1C5  F186         	movff	_Imeas+2,?_printf+4	;volatile
  9328  012234  C1C6  F187         	movff	_Imeas+3,?_printf+5	;volatile
  9329  012238  EC00  F080         	call	_printf	;wreg free
  9330                           
  9331                           ;ring_buffer_LUT.c: 302: terminal_textAttributesReset();
  9332  01223C  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9333                           
  9334                           ;ring_buffer_LUT.c: 304: }
  9335  012240  0012               	return	
  9336  012242                     l1234:
  9337                           
  9338                           ;ring_buffer_LUT.c: 307: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  9339  012242  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9340  012246  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9341  01224A  0E92               	movlw	low STR_88
  9342  01224C  0101               	movlb	1	; () banked
  9343  01224E  6F19               	movwf	strcmp@s2& (0+255),b
  9344  012250  0EFD               	movlw	high STR_88
  9345  012252  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9346  012254  ECFE  F0BF         	call	_strcmp	;wreg free
  9347  012258  0101               	movlb	1	; () banked
  9348  01225A  5117               	movf	?_strcmp& (0+255),w,b
  9349  01225C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9350  01225E  A4D8               	btfss	status,2,c
  9351  012260  D019               	goto	l1236
  9352                           
  9353                           ; BSR set to: 1
  9354                           ;ring_buffer_LUT.c: 309: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9355  012262  0E00               	movlw	0
  9356  012264  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9357  012266  0E00               	movlw	0
  9358  012268  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9359  01226A  0E06               	movlw	6
  9360  01226C  EC1B  F09E         	call	_terminal_textAttributes
  9361                           
  9362                           ;ring_buffer_LUT.c: 310: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  9363  012270  0ECE               	movlw	low STR_89
  9364  012272  0101               	movlb	1	; () banked
  9365  012274  6F82               	movwf	printf@f& (0+255),b
  9366  012276  0EFB               	movlw	high STR_89
  9367  012278  6F83               	movwf	(printf@f+1)& (0+255),b
  9368  01227A  C1BF  F184         	movff	_Irms,?_printf+2	;volatile
  9369  01227E  C1C0  F185         	movff	_Irms+1,?_printf+3	;volatile
  9370  012282  C1C1  F186         	movff	_Irms+2,?_printf+4	;volatile
  9371  012286  C1C2  F187         	movff	_Irms+3,?_printf+5	;volatile
  9372  01228A  EC00  F080         	call	_printf	;wreg free
  9373                           
  9374                           ;ring_buffer_LUT.c: 311: terminal_textAttributesReset();
  9375  01228E  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9376                           
  9377                           ;ring_buffer_LUT.c: 313: }
  9378  012292  0012               	return	
  9379  012294                     l1236:
  9380                           
  9381                           ;ring_buffer_LUT.c: 316: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  9382  012294  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9383  012298  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9384  01229C  0E7D               	movlw	low STR_90
  9385  01229E  0101               	movlb	1	; () banked
  9386  0122A0  6F19               	movwf	strcmp@s2& (0+255),b
  9387  0122A2  0EFD               	movlw	high STR_90
  9388  0122A4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9389  0122A6  ECFE  F0BF         	call	_strcmp	;wreg free
  9390  0122AA  0101               	movlb	1	; () banked
  9391  0122AC  5117               	movf	?_strcmp& (0+255),w,b
  9392  0122AE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9393  0122B0  A4D8               	btfss	status,2,c
  9394  0122B2  D019               	goto	l1238
  9395                           
  9396                           ; BSR set to: 1
  9397                           ;ring_buffer_LUT.c: 318: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9398  0122B4  0E00               	movlw	0
  9399  0122B6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9400  0122B8  0E00               	movlw	0
  9401  0122BA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9402  0122BC  0E06               	movlw	6
  9403  0122BE  EC1B  F09E         	call	_terminal_textAttributes
  9404                           
  9405                           ;ring_buffer_LUT.c: 319: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  9406  0122C2  0EF0               	movlw	low STR_91
  9407  0122C4  0101               	movlb	1	; () banked
  9408  0122C6  6F82               	movwf	printf@f& (0+255),b
  9409  0122C8  0EFB               	movlw	high STR_91
  9410  0122CA  6F83               	movwf	(printf@f+1)& (0+255),b
  9411  0122CC  C1BB  F184         	movff	_Vrms,?_printf+2	;volatile
  9412  0122D0  C1BC  F185         	movff	_Vrms+1,?_printf+3	;volatile
  9413  0122D4  C1BD  F186         	movff	_Vrms+2,?_printf+4	;volatile
  9414  0122D8  C1BE  F187         	movff	_Vrms+3,?_printf+5	;volatile
  9415  0122DC  EC00  F080         	call	_printf	;wreg free
  9416                           
  9417                           ;ring_buffer_LUT.c: 320: terminal_textAttributesReset();
  9418  0122E0  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9419                           
  9420                           ;ring_buffer_LUT.c: 322: }
  9421  0122E4  0012               	return	
  9422  0122E6                     l1238:
  9423                           
  9424                           ;ring_buffer_LUT.c: 325: else if ((0 == strcmp(line, "Measure Power?"))) {
  9425  0122E6  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9426  0122EA  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9427  0122EE  0E9E               	movlw	low STR_92
  9428  0122F0  0101               	movlb	1	; () banked
  9429  0122F2  6F19               	movwf	strcmp@s2& (0+255),b
  9430  0122F4  0EFE               	movlw	high STR_92
  9431  0122F6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9432  0122F8  ECFE  F0BF         	call	_strcmp	;wreg free
  9433  0122FC  0101               	movlb	1	; () banked
  9434  0122FE  5117               	movf	?_strcmp& (0+255),w,b
  9435  012300  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9436  012302  A4D8               	btfss	status,2,c
  9437  012304  D019               	goto	l1240
  9438                           
  9439                           ; BSR set to: 1
  9440                           ;ring_buffer_LUT.c: 327: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9441  012306  0E00               	movlw	0
  9442  012308  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9443  01230A  0E00               	movlw	0
  9444  01230C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9445  01230E  0E06               	movlw	6
  9446  012310  EC1B  F09E         	call	_terminal_textAttributes
  9447                           
  9448                           ;ring_buffer_LUT.c: 328: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
  9449  012314  0EF7               	movlw	low STR_93
  9450  012316  0101               	movlb	1	; () banked
  9451  012318  6F82               	movwf	printf@f& (0+255),b
  9452  01231A  0EF7               	movlw	high STR_93
  9453  01231C  6F83               	movwf	(printf@f+1)& (0+255),b
  9454  01231E  C248  F184         	movff	_Avg_Power,?_printf+2	;volatile
  9455  012322  C249  F185         	movff	_Avg_Power+1,?_printf+3	;volatile
  9456  012326  C24A  F186         	movff	_Avg_Power+2,?_printf+4	;volatile
  9457  01232A  C24B  F187         	movff	_Avg_Power+3,?_printf+5	;volatile
  9458  01232E  EC00  F080         	call	_printf	;wreg free
  9459                           
  9460                           ;ring_buffer_LUT.c: 329: terminal_textAttributesReset();
  9461  012332  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9462                           
  9463                           ;ring_buffer_LUT.c: 331: }
  9464  012336  0012               	return	
  9465  012338                     l1240:
  9466                           
  9467                           ;ring_buffer_LUT.c: 334: else if ((0 == strcmp(line, "Enable Dimming"))) {
  9468  012338  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9469  01233C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9470  012340  0EAD               	movlw	low STR_94
  9471  012342  0101               	movlb	1	; () banked
  9472  012344  6F19               	movwf	strcmp@s2& (0+255),b
  9473  012346  0EFE               	movlw	high STR_94
  9474  012348  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9475  01234A  ECFE  F0BF         	call	_strcmp	;wreg free
  9476  01234E  0101               	movlb	1	; () banked
  9477  012350  5117               	movf	?_strcmp& (0+255),w,b
  9478  012352  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9479  012354  A4D8               	btfss	status,2,c
  9480  012356  D012               	goto	l1242
  9481                           
  9482                           ; BSR set to: 1
  9483                           ;ring_buffer_LUT.c: 337: LATGbits.LATG0 = 0;
  9484  012358  907F               	bcf	3967,0,c	;volatile
  9485                           
  9486                           ; BSR set to: 1
  9487                           ;ring_buffer_LUT.c: 339: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9488  01235A  0E00               	movlw	0
  9489  01235C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9490  01235E  0E00               	movlw	0
  9491  012360  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9492  012362  0E02               	movlw	2
  9493  012364  EC1B  F09E         	call	_terminal_textAttributes
  9494                           
  9495                           ;ring_buffer_LUT.c: 340: printf("TRIAC output dimming has been enabled\n\r");
  9496  012368  0EC8               	movlw	low STR_95
  9497  01236A  0101               	movlb	1	; () banked
  9498  01236C  6F82               	movwf	printf@f& (0+255),b
  9499  01236E  0EFA               	movlw	high STR_95
  9500  012370  6F83               	movwf	(printf@f+1)& (0+255),b
  9501  012372  EC00  F080         	call	_printf	;wreg free
  9502                           
  9503                           ;ring_buffer_LUT.c: 341: terminal_textAttributesReset();
  9504  012376  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9505                           
  9506                           ;ring_buffer_LUT.c: 343: }
  9507  01237A  0012               	return	
  9508  01237C                     l1242:
  9509                           
  9510                           ;ring_buffer_LUT.c: 346: else if ((0 == strcmp(line, "Disable Dimming"))) {
  9511  01237C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9512  012380  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9513  012384  0E60               	movlw	low STR_96
  9514  012386  0101               	movlb	1	; () banked
  9515  012388  6F19               	movwf	strcmp@s2& (0+255),b
  9516  01238A  0EFE               	movlw	high STR_96
  9517  01238C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9518  01238E  ECFE  F0BF         	call	_strcmp	;wreg free
  9519  012392  0101               	movlb	1	; () banked
  9520  012394  5117               	movf	?_strcmp& (0+255),w,b
  9521  012396  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9522  012398  A4D8               	btfss	status,2,c
  9523  01239A  D012               	goto	l1244
  9524                           
  9525                           ; BSR set to: 1
  9526                           ;ring_buffer_LUT.c: 349: LATGbits.LATG0 = 1;
  9527  01239C  807F               	bsf	3967,0,c	;volatile
  9528                           
  9529                           ; BSR set to: 1
  9530                           ;ring_buffer_LUT.c: 351: terminal_textAttributes(RED, BLACK, NORMAL);
  9531  01239E  0E00               	movlw	0
  9532  0123A0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9533  0123A2  0E00               	movlw	0
  9534  0123A4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9535  0123A6  0E01               	movlw	1
  9536  0123A8  EC1B  F09E         	call	_terminal_textAttributes
  9537                           
  9538                           ;ring_buffer_LUT.c: 352: printf("TRIAC output dimming has been disabled\n\r");
  9539  0123AC  0E9F               	movlw	low STR_97
  9540  0123AE  0101               	movlb	1	; () banked
  9541  0123B0  6F82               	movwf	printf@f& (0+255),b
  9542  0123B2  0EFA               	movlw	high STR_97
  9543  0123B4  6F83               	movwf	(printf@f+1)& (0+255),b
  9544  0123B6  EC00  F080         	call	_printf	;wreg free
  9545                           
  9546                           ;ring_buffer_LUT.c: 353: terminal_textAttributesReset();
  9547  0123BA  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9548                           
  9549                           ;ring_buffer_LUT.c: 355: }
  9550  0123BE  0012               	return	
  9551  0123C0                     l1244:
  9552                           
  9553                           ;ring_buffer_LUT.c: 358: else if ((0 == strcmp(line, "Enable Load"))) {
  9554  0123C0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9555  0123C4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9556  0123C8  0E50               	movlw	low STR_98
  9557  0123CA  0101               	movlb	1	; () banked
  9558  0123CC  6F19               	movwf	strcmp@s2& (0+255),b
  9559  0123CE  0EFF               	movlw	high STR_98
  9560  0123D0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9561  0123D2  ECFE  F0BF         	call	_strcmp	;wreg free
  9562  0123D6  0101               	movlb	1	; () banked
  9563  0123D8  5117               	movf	?_strcmp& (0+255),w,b
  9564  0123DA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9565  0123DC  A4D8               	btfss	status,2,c
  9566  0123DE  D014               	goto	l1246
  9567                           
  9568                           ; BSR set to: 1
  9569                           ;ring_buffer_LUT.c: 360: LATGbits.LATG0 = 1;
  9570  0123E0  807F               	bsf	3967,0,c	;volatile
  9571                           
  9572                           ;ring_buffer_LUT.c: 361: LATGbits.LATG1 = 0;
  9573  0123E2  927F               	bcf	3967,1,c	;volatile
  9574                           
  9575                           ;ring_buffer_LUT.c: 362: load_enable = 1;
  9576  0123E4  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9577                           
  9578                           ; BSR set to: 1
  9579                           ;ring_buffer_LUT.c: 364: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9580  0123E6  0E00               	movlw	0
  9581  0123E8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9582  0123EA  0E00               	movlw	0
  9583  0123EC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9584  0123EE  0E02               	movlw	2
  9585  0123F0  EC1B  F09E         	call	_terminal_textAttributes
  9586                           
  9587                           ;ring_buffer_LUT.c: 365: printf("Load has been enabled, dimming disabled\n\r");
  9588  0123F4  0E22               	movlw	low STR_99
  9589  0123F6  0101               	movlb	1	; () banked
  9590  0123F8  6F82               	movwf	printf@f& (0+255),b
  9591  0123FA  0EFA               	movlw	high STR_99
  9592  0123FC  6F83               	movwf	(printf@f+1)& (0+255),b
  9593  0123FE  EC00  F080         	call	_printf	;wreg free
  9594                           
  9595                           ;ring_buffer_LUT.c: 366: terminal_textAttributesReset();
  9596  012402  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9597                           
  9598                           ;ring_buffer_LUT.c: 368: }
  9599  012406  0012               	return	
  9600  012408                     l1246:
  9601                           
  9602                           ;ring_buffer_LUT.c: 371: else if ((0 == strcmp(line, "Load Enabled?"))) {
  9603  012408  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9604  01240C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9605  012410  0ED8               	movlw	low STR_100
  9606  012412  0101               	movlb	1	; () banked
  9607  012414  6F19               	movwf	strcmp@s2& (0+255),b
  9608  012416  0EFE               	movlw	high STR_100
  9609  012418  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9610  01241A  ECFE  F0BF         	call	_strcmp	;wreg free
  9611  01241E  0101               	movlb	1	; () banked
  9612  012420  5117               	movf	?_strcmp& (0+255),w,b
  9613  012422  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9614  012424  A4D8               	btfss	status,2,c
  9615  012426  D025               	goto	l1248
  9616                           
  9617                           ; BSR set to: 1
  9618                           ;ring_buffer_LUT.c: 373: if (load_enable == 1) {
  9619  012428  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9620  01242A  D011               	goto	l1249
  9621                           
  9622                           ; BSR set to: 1
  9623                           ;ring_buffer_LUT.c: 375: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9624  01242C  0E00               	movlw	0
  9625  01242E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9626  012430  0E00               	movlw	0
  9627  012432  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9628  012434  0E02               	movlw	2
  9629  012436  EC1B  F09E         	call	_terminal_textAttributes
  9630                           
  9631                           ;ring_buffer_LUT.c: 376: printf("Load is currently enabled\n\r");
  9632  01243A  0E8C               	movlw	low STR_101
  9633  01243C  0101               	movlb	1	; () banked
  9634  01243E  6F82               	movwf	printf@f& (0+255),b
  9635  012440  0EFC               	movlw	high STR_101
  9636  012442  6F83               	movwf	(printf@f+1)& (0+255),b
  9637  012444  EC00  F080         	call	_printf	;wreg free
  9638                           
  9639                           ;ring_buffer_LUT.c: 377: terminal_textAttributesReset();
  9640  012448  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9641                           
  9642                           ;ring_buffer_LUT.c: 379: }
  9643  01244C  0012               	return	
  9644  01244E                     l1249:
  9645                           
  9646                           ;ring_buffer_LUT.c: 381: else {
  9647                           ;ring_buffer_LUT.c: 383: terminal_textAttributes(RED, BLACK, NORMAL);
  9648  01244E  0E00               	movlw	0
  9649  012450  0101               	movlb	1	; () banked
  9650  012452  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9651  012454  0E00               	movlw	0
  9652  012456  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9653  012458  0E01               	movlw	1
  9654  01245A  EC1B  F09E         	call	_terminal_textAttributes
  9655                           
  9656                           ;ring_buffer_LUT.c: 384: printf("Load is currently disabled\n\r");
  9657  01245E  0E6F               	movlw	low STR_102
  9658  012460  0101               	movlb	1	; () banked
  9659  012462  6F82               	movwf	printf@f& (0+255),b
  9660  012464  0EFC               	movlw	high STR_102
  9661  012466  6F83               	movwf	(printf@f+1)& (0+255),b
  9662  012468  EC00  F080         	call	_printf	;wreg free
  9663                           
  9664                           ;ring_buffer_LUT.c: 385: terminal_textAttributesReset();
  9665  01246C  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9666                           
  9667                           ;ring_buffer_LUT.c: 388: }
  9668                           ;ring_buffer_LUT.c: 390: }
  9669  012470  0012               	return	
  9670  012472                     l1248:
  9671                           
  9672                           ;ring_buffer_LUT.c: 393: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
  9673  012472  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9674  012476  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9675  01247A  0EEE               	movlw	low STR_103
  9676  01247C  0101               	movlb	1	; () banked
  9677  01247E  6F19               	movwf	strcmp@s2& (0+255),b
  9678  012480  0EFD               	movlw	high STR_103
  9679  012482  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9680  012484  ECFE  F0BF         	call	_strcmp	;wreg free
  9681  012488  0101               	movlb	1	; () banked
  9682  01248A  5117               	movf	?_strcmp& (0+255),w,b
  9683  01248C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9684  01248E  A4D8               	btfss	status,2,c
  9685  012490  D039               	goto	l1252
  9686                           
  9687                           ; BSR set to: 1
  9688                           ;ring_buffer_LUT.c: 395: if (load_enable == 1 && LATGbits.LATG0 != 1) {
  9689  012492  B25E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9690                           
  9691                           ; BSR set to: 1
  9692  012494  B07F               	btfsc	3967,0,c	;volatile
  9693  012496  D011               	goto	l1253
  9694                           
  9695                           ; BSR set to: 1
  9696                           ;ring_buffer_LUT.c: 397: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9697  012498  0E00               	movlw	0
  9698  01249A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9699  01249C  0E00               	movlw	0
  9700  01249E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9701  0124A0  0E02               	movlw	2
  9702  0124A2  EC1B  F09E         	call	_terminal_textAttributes
  9703                           
  9704                           ;ring_buffer_LUT.c: 398: printf("Dimming is currently enabled\n\r");
  9705  0124A6  0E32               	movlw	low STR_104
  9706  0124A8  0101               	movlb	1	; () banked
  9707  0124AA  6F82               	movwf	printf@f& (0+255),b
  9708  0124AC  0EFC               	movlw	high STR_104
  9709  0124AE  6F83               	movwf	(printf@f+1)& (0+255),b
  9710  0124B0  EC00  F080         	call	_printf	;wreg free
  9711                           
  9712                           ;ring_buffer_LUT.c: 399: terminal_textAttributesReset();
  9713  0124B4  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9714                           
  9715                           ;ring_buffer_LUT.c: 401: }
  9716  0124B8  0012               	return	
  9717  0124BA                     l1253:
  9718                           
  9719                           ; BSR set to: 1
  9720                           ;ring_buffer_LUT.c: 403: else if (load_enable == 1){
  9721  0124BA  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9722  0124BC  D011               	goto	l1255
  9723                           
  9724                           ; BSR set to: 1
  9725                           ;ring_buffer_LUT.c: 405: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9726  0124BE  0E00               	movlw	0
  9727  0124C0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9728  0124C2  0E00               	movlw	0
  9729  0124C4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9730  0124C6  0E03               	movlw	3
  9731  0124C8  EC1B  F09E         	call	_terminal_textAttributes
  9732                           
  9733                           ;ring_buffer_LUT.c: 406: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
  9734  0124CC  0E9C               	movlw	low STR_105
  9735  0124CE  0101               	movlb	1	; () banked
  9736  0124D0  6F82               	movwf	printf@f& (0+255),b
  9737  0124D2  0EF8               	movlw	high STR_105
  9738  0124D4  6F83               	movwf	(printf@f+1)& (0+255),b
  9739  0124D6  EC00  F080         	call	_printf	;wreg free
  9740                           
  9741                           ;ring_buffer_LUT.c: 407: terminal_textAttributesReset();
  9742  0124DA  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9743                           
  9744                           ;ring_buffer_LUT.c: 409: }
  9745  0124DE  0012               	return	
  9746  0124E0                     l1255:
  9747                           
  9748                           ;ring_buffer_LUT.c: 411: else {
  9749                           ;ring_buffer_LUT.c: 413: terminal_textAttributes(RED, BLACK, NORMAL);
  9750  0124E0  0E00               	movlw	0
  9751  0124E2  0101               	movlb	1	; () banked
  9752  0124E4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9753  0124E6  0E00               	movlw	0
  9754  0124E8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9755  0124EA  0E01               	movlw	1
  9756  0124EC  EC1B  F09E         	call	_terminal_textAttributes
  9757                           
  9758                           ;ring_buffer_LUT.c: 414: printf("Load and dimming are currently disabled\n\r");
  9759  0124F0  0E4C               	movlw	low STR_106
  9760  0124F2  0101               	movlb	1	; () banked
  9761  0124F4  6F82               	movwf	printf@f& (0+255),b
  9762  0124F6  0EFA               	movlw	high STR_106
  9763  0124F8  6F83               	movwf	(printf@f+1)& (0+255),b
  9764  0124FA  EC00  F080         	call	_printf	;wreg free
  9765                           
  9766                           ;ring_buffer_LUT.c: 415: terminal_textAttributesReset();
  9767  0124FE  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9768                           
  9769                           ;ring_buffer_LUT.c: 417: }
  9770                           ;ring_buffer_LUT.c: 421: }
  9771  012502  0012               	return	
  9772  012504                     l1252:
  9773                           
  9774                           ;ring_buffer_LUT.c: 426: else if ((0 == strcmp(line, "Disable Load"))) {
  9775  012504  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9776  012508  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9777  01250C  0E37               	movlw	low STR_107
  9778  01250E  0101               	movlb	1	; () banked
  9779  012510  6F19               	movwf	strcmp@s2& (0+255),b
  9780  012512  0EFF               	movlw	high STR_107
  9781  012514  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9782  012516  ECFE  F0BF         	call	_strcmp	;wreg free
  9783  01251A  0101               	movlb	1	; () banked
  9784  01251C  5117               	movf	?_strcmp& (0+255),w,b
  9785  01251E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9786  012520  A4D8               	btfss	status,2,c
  9787  012522  D014               	goto	l1258
  9788                           
  9789                           ; BSR set to: 1
  9790                           ;ring_buffer_LUT.c: 428: LATGbits.LATG1 = 0;
  9791  012524  927F               	bcf	3967,1,c	;volatile
  9792                           
  9793                           ;ring_buffer_LUT.c: 429: LATGbits.LATG0 = 0;
  9794  012526  907F               	bcf	3967,0,c	;volatile
  9795                           
  9796                           ;ring_buffer_LUT.c: 430: load_enable = 0;
  9797  012528  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9798                           
  9799                           ; BSR set to: 1
  9800                           ;ring_buffer_LUT.c: 432: terminal_textAttributes(RED, BLACK, NORMAL);
  9801  01252A  0E00               	movlw	0
  9802  01252C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9803  01252E  0E00               	movlw	0
  9804  012530  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9805  012532  0E01               	movlw	1
  9806  012534  EC1B  F09E         	call	_terminal_textAttributes
  9807                           
  9808                           ;ring_buffer_LUT.c: 433: printf("Load has been disabled\n\r");
  9809  012538  0EDD               	movlw	low STR_108
  9810  01253A  0101               	movlb	1	; () banked
  9811  01253C  6F82               	movwf	printf@f& (0+255),b
  9812  01253E  0EFC               	movlw	high STR_108
  9813  012540  6F83               	movwf	(printf@f+1)& (0+255),b
  9814  012542  EC00  F080         	call	_printf	;wreg free
  9815                           
  9816                           ;ring_buffer_LUT.c: 434: terminal_textAttributesReset();
  9817  012546  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9818                           
  9819                           ;ring_buffer_LUT.c: 436: }
  9820  01254A  0012               	return	
  9821  01254C                     l1258:
  9822                           
  9823                           ;ring_buffer_LUT.c: 439: else if ((strstr(line, "Set Dimming Percentage: "))) {
  9824  01254C  C1B4  F126         	movff	ringBufferLUT@line,strstr@s1
  9825  012550  C1B5  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  9826  012554  0EF6               	movlw	low STR_109
  9827  012556  0101               	movlb	1	; () banked
  9828  012558  6F28               	movwf	strstr@s2& (0+255),b
  9829  01255A  0EFC               	movlw	high STR_109
  9830  01255C  6F29               	movwf	(strstr@s2+1)& (0+255),b
  9831  01255E  ECC3  F0BB         	call	_strstr	;wreg free
  9832  012562  0101               	movlb	1	; () banked
  9833  012564  5126               	movf	?_strstr& (0+255),w,b
  9834  012566  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  9835  012568  B4D8               	btfsc	status,2,c
  9836  01256A  D131               	goto	l1260
  9837                           
  9838                           ; BSR set to: 1
  9839                           ;ring_buffer_LUT.c: 442: char arg_buff[3];
  9840                           ;ring_buffer_LUT.c: 445: for (int index = 0; index < 3; index++) {
  9841  01256C  0E00               	movlw	0
  9842  01256E  0102               	movlb	2	; () banked
  9843  012570  6FD6               	movwf	(ringBufferLUT@index+1)& (0+255),b
  9844  012572  0E00               	movlw	0
  9845  012574  6FD5               	movwf	ringBufferLUT@index& (0+255),b
  9846  012576                     l18816:
  9847                           
  9848                           ; BSR set to: 2
  9849  012576  BFD6               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  9850  012578  D006               	goto	l1261
  9851  01257A  51D6               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  9852  01257C  E11F               	bnz	l18826
  9853  01257E  0E03               	movlw	3
  9854  012580  5DD5               	subwf	ringBufferLUT@index& (0+255),w,b
  9855  012582  B0D8               	btfsc	status,0,c
  9856  012584  D01B               	goto	u25490
  9857  012586                     l1261:
  9858                           
  9859                           ; BSR set to: 2
  9860                           ;ring_buffer_LUT.c: 447: arg_buff[index] = line[index + 24];
  9861                           
  9862                           ; BSR set to: 2
  9863  012586  0E18               	movlw	24
  9864  012588  25D5               	addwf	ringBufferLUT@index& (0+255),w,b
  9865  01258A  0101               	movlb	1	; () banked
  9866  01258C  6FB6               	movwf	??_ringBufferLUT& (0+255),b
  9867  01258E  0E00               	movlw	0
  9868  012590  0102               	movlb	2	; () banked
  9869  012592  21D6               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9870  012594  0101               	movlb	1	; () banked
  9871  012596  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
  9872  012598  51B6               	movf	??_ringBufferLUT& (0+255),w,b
  9873  01259A  25B4               	addwf	ringBufferLUT@line& (0+255),w,b
  9874  01259C  6ED9               	movwf	fsr2l,c
  9875  01259E  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  9876  0125A0  21B5               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  9877  0125A2  6EDA               	movwf	fsr2h,c
  9878  0125A4  0ED2               	movlw	low ringBufferLUT@arg_buff
  9879  0125A6  0102               	movlb	2	; () banked
  9880  0125A8  25D5               	addwf	ringBufferLUT@index& (0+255),w,b
  9881  0125AA  6EE1               	movwf	fsr1l,c
  9882  0125AC  0E02               	movlw	high ringBufferLUT@arg_buff
  9883  0125AE  21D6               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9884  0125B0  6EE2               	movwf	fsr1h,c
  9885  0125B2  CFDF FFE7          	movff	indf2,indf1
  9886                           
  9887                           ; BSR set to: 2
  9888  0125B6  4BD5               	infsnz	ringBufferLUT@index& (0+255),f,b
  9889  0125B8  2BD6               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  9890  0125BA  D7DD               	goto	l18816
  9891  0125BC                     u25490:
  9892  0125BC                     l18826:
  9893                           
  9894                           ; BSR set to: 2
  9895                           ;ring_buffer_LUT.c: 449: }
  9896                           ;ring_buffer_LUT.c: 451: int percentage = atoi(arg_buff);
  9897  0125BC  0ED2               	movlw	low ringBufferLUT@arg_buff
  9898  0125BE  0101               	movlb	1	; () banked
  9899  0125C0  6F1D               	movwf	atoi@s& (0+255),b
  9900  0125C2  0E02               	movlw	high ringBufferLUT@arg_buff
  9901  0125C4  6F1E               	movwf	(atoi@s+1)& (0+255),b
  9902  0125C6  ECB8  F0B9         	call	_atoi	;wreg free
  9903  0125CA  C11D  F2D7         	movff	?_atoi,ringBufferLUT@percentage
  9904  0125CE  C11E  F2D8         	movff	?_atoi+1,ringBufferLUT@percentage+1
  9905                           
  9906                           ;ring_buffer_LUT.c: 454: if ( (percentage >= 100) ||
  9907                           ;ring_buffer_LUT.c: 455: (percentage <= 0)) {
  9908  0125D2  0102               	movlb	2	; () banked
  9909  0125D4  BFD8               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9910  0125D6  D006               	goto	u25500
  9911  0125D8  51D8               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9912  0125DA  E10B               	bnz	l18832
  9913  0125DC  0E64               	movlw	100
  9914  0125DE  5DD7               	subwf	ringBufferLUT@percentage& (0+255),w,b
  9915  0125E0  B0D8               	btfsc	status,0,c
  9916  0125E2  D007               	goto	u25510
  9917  0125E4                     u25500:
  9918                           
  9919                           ; BSR set to: 2
  9920  0125E4  BFD8               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9921  0125E6  D005               	goto	u25510
  9922  0125E8  51D8               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9923  0125EA  E12B               	bnz	l18834
  9924  0125EC  05D7               	decf	ringBufferLUT@percentage& (0+255),w,b
  9925  0125EE  B0D8               	btfsc	status,0,c
  9926  0125F0  D028               	goto	l1263
  9927  0125F2                     u25510:
  9928  0125F2                     l18832:
  9929                           
  9930                           ; BSR set to: 2
  9931                           ;ring_buffer_LUT.c: 457: terminal_textAttributes(RED, BLACK, NORMAL);
  9932  0125F2  0E00               	movlw	0
  9933  0125F4  0101               	movlb	1	; () banked
  9934  0125F6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9935  0125F8  0E00               	movlw	0
  9936  0125FA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9937  0125FC  0E01               	movlw	1
  9938  0125FE  EC1B  F09E         	call	_terminal_textAttributes
  9939                           
  9940                           ;ring_buffer_LUT.c: 458: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  9941  012602  0E57               	movlw	low STR_110
  9942  012604  0101               	movlb	1	; () banked
  9943  012606  6F82               	movwf	printf@f& (0+255),b
  9944  012608  0EF5               	movlw	high STR_110
  9945  01260A  6F83               	movwf	(printf@f+1)& (0+255),b
  9946  01260C  EC00  F080         	call	_printf	;wreg free
  9947                           
  9948                           ;ring_buffer_LUT.c: 459: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9949  012610  0E00               	movlw	0
  9950  012612  0101               	movlb	1	; () banked
  9951  012614  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9952  012616  0E00               	movlw	0
  9953  012618  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9954  01261A  0E03               	movlw	3
  9955  01261C  EC1B  F09E         	call	_terminal_textAttributes
  9956                           
  9957                           ;ring_buffer_LUT.c: 460: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  9958  012620  0EF1               	movlw	low STR_111
  9959  012622  0101               	movlb	1	; () banked
  9960  012624  6F82               	movwf	printf@f& (0+255),b
  9961  012626  0EF4               	movlw	high STR_111
  9962  012628  6F83               	movwf	(printf@f+1)& (0+255),b
  9963  01262A  EC00  F080         	call	_printf	;wreg free
  9964                           
  9965                           ;ring_buffer_LUT.c: 461: printf("Enter 'Help' for list of available commands\n\r");
  9966  01262E  0EC7               	movlw	low STR_112
  9967  012630  0101               	movlb	1	; () banked
  9968  012632  6F82               	movwf	printf@f& (0+255),b
  9969  012634  0EF9               	movlw	high STR_112
  9970  012636  6F83               	movwf	(printf@f+1)& (0+255),b
  9971  012638  EC00  F080         	call	_printf	;wreg free
  9972                           
  9973                           ;ring_buffer_LUT.c: 462: terminal_textAttributesReset();
  9974  01263C  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
  9975                           
  9976                           ;ring_buffer_LUT.c: 464: }
  9977  012640  0012               	return	
  9978  012642                     l1263:
  9979  012642                     l18834:
  9980                           
  9981                           ;ring_buffer_LUT.c: 467: else {
  9982                           ;ring_buffer_LUT.c: 470: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  9983  012642  0E00               	movlw	0
  9984  012644  0101               	movlb	1	; () banked
  9985  012646  6F41               	movwf	___fldiv@a& (0+255),b
  9986  012648  0E00               	movlw	0
  9987  01264A  6F42               	movwf	(___fldiv@a+1)& (0+255),b
  9988  01264C  0EC8               	movlw	200
  9989  01264E  6F43               	movwf	(___fldiv@a+2)& (0+255),b
  9990  012650  0E42               	movlw	66
  9991  012652  6F44               	movwf	(___fldiv@a+3)& (0+255),b
  9992  012654  0E00               	movlw	0
  9993  012656  6F2D               	movwf	___fladd@a& (0+255),b
  9994  012658  0E00               	movlw	0
  9995  01265A  6F2E               	movwf	(___fladd@a+1)& (0+255),b
  9996  01265C  0EC8               	movlw	200
  9997  01265E  6F2F               	movwf	(___fladd@a+2)& (0+255),b
  9998  012660  0E42               	movlw	66
  9999  012662  6F30               	movwf	(___fladd@a+3)& (0+255),b
 10000  012664  C2D7  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 10001  012668  C2D8  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 10002  01266C  0E00               	movlw	0
 10003  01266E  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 10004  012670  0EFF               	movlw	-1
 10005  012672  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 10006  012674  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 10007  012676  0E01               	movlw	1
 10008  012678  EC70  F0B2         	call	___xxtofl
 10009  01267C  C117  F125         	movff	?___xxtofl,___flneg@f1
 10010  012680  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 10011  012684  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 10012  012688  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 10013  01268C  ECA5  F0C2         	call	___flneg	;wreg free
 10014  012690  C125  F129         	movff	?___flneg,___fladd@b
 10015  012694  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 10016  012698  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 10017  01269C  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 10018  0126A0  EC20  F0A3         	call	___fladd	;wreg free
 10019  0126A4  C129  F13D         	movff	?___fladd,___fldiv@b
 10020  0126A8  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 10021  0126AC  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 10022  0126B0  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 10023  0126B4  EC24  F0AC         	call	___fldiv	;wreg free
 10024  0126B8  C13D  F156         	movff	?___fldiv,___flmul@b
 10025  0126BC  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 10026  0126C0  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 10027  0126C4  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 10028  0126C8  0EDB               	movlw	219
 10029  0126CA  0101               	movlb	1	; () banked
 10030  0126CC  6F5A               	movwf	___flmul@a& (0+255),b
 10031  0126CE  0E0F               	movlw	15
 10032  0126D0  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 10033  0126D2  0E49               	movlw	73
 10034  0126D4  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 10035  0126D6  0E40               	movlw	64
 10036  0126D8  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 10037  0126DA  ECCF  F09F         	call	___flmul	;wreg free
 10038  0126DE  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 10039  0126E2  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 10040  0126E6  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 10041  0126EA  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 10042                           
 10043                           ;ring_buffer_LUT.c: 471: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 10044  0126EE  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 10045  0126F2  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 10046  0126F6  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 10047  0126FA  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 10048  0126FE  0EE1               	movlw	225
 10049  012700  0101               	movlb	1	; () banked
 10050  012702  6F5A               	movwf	___flmul@a& (0+255),b
 10051  012704  0E2E               	movlw	46
 10052  012706  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 10053  012708  0E65               	movlw	101
 10054  01270A  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 10055  01270C  0E42               	movlw	66
 10056  01270E  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 10057  012710  ECCF  F09F         	call	___flmul	;wreg free
 10058  012714  C156  F2CE         	movff	?___flmul,ringBufferLUT@angle_degrees
 10059  012718  C157  F2CF         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 10060  01271C  C158  F2D0         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 10061  012720  C159  F2D1         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 10062                           
 10063                           ;ring_buffer_LUT.c: 472: dimming_period = (100 - percentage) * (0xFFFF / 100);
 10064  012724  C2D7  F1B6         	movff	ringBufferLUT@percentage,??_ringBufferLUT
 10065  012728  C2D8  F1B7         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
 10066  01272C  0101               	movlb	1	; () banked
 10067  01272E  1FB6               	comf	??_ringBufferLUT& (0+255),f,b
 10068  012730  1FB7               	comf	(??_ringBufferLUT+1)& (0+255),f,b
 10069  012732  4BB6               	infsnz	??_ringBufferLUT& (0+255),f,b
 10070  012734  2BB7               	incf	(??_ringBufferLUT+1)& (0+255),f,b
 10071  012736  0E64               	movlw	100
 10072  012738  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
 10073  01273A  6F17               	movwf	___wmul@multiplier& (0+255),b
 10074  01273C  0E00               	movlw	0
 10075  01273E  21B7               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
 10076  012740  6F18               	movwf	(___wmul@multiplier+1)& (0+255),b
 10077  012742  0E02               	movlw	2
 10078  012744  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10079  012746  0E8F               	movlw	143
 10080  012748  6F19               	movwf	___wmul@multiplicand& (0+255),b
 10081  01274A  EC00  F0C3         	call	___wmul	;wreg free
 10082  01274E  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 10083  012752  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 10084                           
 10085                           ;ring_buffer_LUT.c: 474: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10086  012756  0E00               	movlw	0
 10087  012758  0101               	movlb	1	; () banked
 10088  01275A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10089  01275C  0E00               	movlw	0
 10090  01275E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10091  012760  0E02               	movlw	2
 10092  012762  EC1B  F09E         	call	_terminal_textAttributes
 10093                           
 10094                           ;ring_buffer_LUT.c: 475: printf("Dimming has been set to %d percent\n\r", percentage);
 10095  012766  0E61               	movlw	low STR_113
 10096  012768  0101               	movlb	1	; () banked
 10097  01276A  6F82               	movwf	printf@f& (0+255),b
 10098  01276C  0EFB               	movlw	high STR_113
 10099  01276E  6F83               	movwf	(printf@f+1)& (0+255),b
 10100  012770  C2D7  F184         	movff	ringBufferLUT@percentage,?_printf+2
 10101  012774  C2D8  F185         	movff	ringBufferLUT@percentage+1,?_printf+3
 10102  012778  EC00  F080         	call	_printf	;wreg free
 10103                           
 10104                           ;ring_buffer_LUT.c: 476: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 10105  01277C  0ECB               	movlw	low STR_114
 10106  01277E  0101               	movlb	1	; () banked
 10107  012780  6F82               	movwf	printf@f& (0+255),b
 10108  012782  0EF6               	movlw	high STR_114
 10109  012784  6F83               	movwf	(printf@f+1)& (0+255),b
 10110  012786  C0F2  F184         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 10111  01278A  C0F3  F185         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 10112  01278E  C0F4  F186         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 10113  012792  C0F5  F187         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 10114  012796  C2CE  F188         	movff	ringBufferLUT@angle_degrees,?_printf+6
 10115  01279A  C2CF  F189         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 10116  01279E  C2D0  F18A         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 10117  0127A2  C2D1  F18B         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 10118  0127A6  EC00  F080         	call	_printf	;wreg free
 10119                           
 10120                           ;ring_buffer_LUT.c: 477: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 10121  0127AA  0E02               	movlw	low STR_115
 10122  0127AC  0101               	movlb	1	; () banked
 10123  0127AE  6F82               	movwf	printf@f& (0+255),b
 10124  0127B0  0EF6               	movlw	high STR_115
 10125  0127B2  6F83               	movwf	(printf@f+1)& (0+255),b
 10126  0127B4  C0F0  F184         	movff	_dimming_period,?_printf+2	;volatile
 10127  0127B8  C0F1  F185         	movff	_dimming_period+1,?_printf+3	;volatile
 10128  0127BC  C0F0  F186         	movff	_dimming_period,?_printf+4	;volatile
 10129  0127C0  C0F1  F187         	movff	_dimming_period+1,?_printf+5	;volatile
 10130  0127C4  EC00  F080         	call	_printf	;wreg free
 10131                           
 10132                           ;ring_buffer_LUT.c: 478: terminal_textAttributesReset();
 10133  0127C8  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
 10134                           
 10135                           ;ring_buffer_LUT.c: 480: }
 10136                           ;ring_buffer_LUT.c: 482: }
 10137  0127CC  0012               	return	
 10138  0127CE                     l1260:
 10139                           
 10140                           ;ring_buffer_LUT.c: 485: else if((0 == strcmp(line, "Device On Time?"))) {
 10141  0127CE  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10142  0127D2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10143  0127D6  0E40               	movlw	low STR_116
 10144  0127D8  0101               	movlb	1	; () banked
 10145  0127DA  6F19               	movwf	strcmp@s2& (0+255),b
 10146  0127DC  0EFE               	movlw	high STR_116
 10147  0127DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10148  0127E0  ECFE  F0BF         	call	_strcmp	;wreg free
 10149  0127E4  0101               	movlb	1	; () banked
 10150  0127E6  5117               	movf	?_strcmp& (0+255),w,b
 10151  0127E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10152  0127EA  A4D8               	btfss	status,2,c
 10153  0127EC  D019               	goto	l1268
 10154                           
 10155                           ; BSR set to: 1
 10156                           ;ring_buffer_LUT.c: 487: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10157  0127EE  0E00               	movlw	0
 10158  0127F0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10159  0127F2  0E00               	movlw	0
 10160  0127F4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10161  0127F6  0E02               	movlw	2
 10162  0127F8  EC1B  F09E         	call	_terminal_textAttributes
 10163                           
 10164                           ;ring_buffer_LUT.c: 488: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 10165  0127FC  0E83               	movlw	low STR_117
 10166  0127FE  0101               	movlb	1	; () banked
 10167  012800  6F82               	movwf	printf@f& (0+255),b
 10168  012802  0EF7               	movlw	high STR_117
 10169  012804  6F83               	movwf	(printf@f+1)& (0+255),b
 10170  012806  C244  F184         	movff	_dev_on_time,?_printf+2	;volatile
 10171  01280A  C245  F185         	movff	_dev_on_time+1,?_printf+3	;volatile
 10172  01280E  C246  F186         	movff	_dev_on_time+2,?_printf+4	;volatile
 10173  012812  C247  F187         	movff	_dev_on_time+3,?_printf+5	;volatile
 10174  012816  EC00  F080         	call	_printf	;wreg free
 10175                           
 10176                           ;ring_buffer_LUT.c: 489: terminal_textAttributesReset();
 10177  01281A  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
 10178                           
 10179                           ;ring_buffer_LUT.c: 491: }
 10180  01281E  0012               	return	
 10181  012820                     l1268:
 10182                           
 10183                           ;ring_buffer_LUT.c: 494: else if((0 == strcmp(line, "Load On Time?"))) {
 10184  012820  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10185  012824  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10186  012828  0EE6               	movlw	low STR_118
 10187  01282A  0101               	movlb	1	; () banked
 10188  01282C  6F19               	movwf	strcmp@s2& (0+255),b
 10189  01282E  0EFE               	movlw	high STR_118
 10190  012830  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10191  012832  ECFE  F0BF         	call	_strcmp	;wreg free
 10192  012836  0101               	movlb	1	; () banked
 10193  012838  5117               	movf	?_strcmp& (0+255),w,b
 10194  01283A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10195  01283C  A4D8               	btfss	status,2,c
 10196  01283E  D019               	goto	l1270
 10197                           
 10198                           ; BSR set to: 1
 10199                           ;ring_buffer_LUT.c: 496: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10200  012840  0E00               	movlw	0
 10201  012842  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10202  012844  0E00               	movlw	0
 10203  012846  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10204  012848  0E02               	movlw	2
 10205  01284A  EC1B  F09E         	call	_terminal_textAttributes
 10206                           
 10207                           ;ring_buffer_LUT.c: 497: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 10208  01284E  0ED1               	movlw	low STR_119
 10209  012850  0101               	movlb	1	; () banked
 10210  012852  6F82               	movwf	printf@f& (0+255),b
 10211  012854  0EF8               	movlw	high STR_119
 10212  012856  6F83               	movwf	(printf@f+1)& (0+255),b
 10213  012858  C240  F184         	movff	_load_on_time,?_printf+2	;volatile
 10214  01285C  C241  F185         	movff	_load_on_time+1,?_printf+3	;volatile
 10215  012860  C242  F186         	movff	_load_on_time+2,?_printf+4	;volatile
 10216  012864  C243  F187         	movff	_load_on_time+3,?_printf+5	;volatile
 10217  012868  EC00  F080         	call	_printf	;wreg free
 10218                           
 10219                           ;ring_buffer_LUT.c: 498: terminal_textAttributesReset();
 10220  01286C  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
 10221                           
 10222                           ;ring_buffer_LUT.c: 500: }
 10223  012870  0012               	return	
 10224  012872                     l1270:
 10225                           
 10226                           ;ring_buffer_LUT.c: 505: else if((0 == strcmp(line, "Help"))) {
 10227  012872  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10228  012876  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10229  01287A  0EAB               	movlw	low STR_120
 10230  01287C  0101               	movlb	1	; () banked
 10231  01287E  6F19               	movwf	strcmp@s2& (0+255),b
 10232  012880  0EFF               	movlw	high STR_120
 10233  012882  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10234  012884  ECFE  F0BF         	call	_strcmp	;wreg free
 10235  012888  0101               	movlb	1	; () banked
 10236  01288A  5117               	movf	?_strcmp& (0+255),w,b
 10237  01288C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10238  01288E  A4D8               	btfss	status,2,c
 10239  012890  0012               	return	
 10240                           
 10241                           ; BSR set to: 1
 10242                           ;ring_buffer_LUT.c: 507: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 10243  012892  0E00               	movlw	0
 10244  012894  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10245  012896  0E00               	movlw	0
 10246  012898  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10247  01289A  0E03               	movlw	3
 10248  01289C  EC1B  F09E         	call	_terminal_textAttributes
 10249                           
 10250                           ;ring_buffer_LUT.c: 508: printf("List of supported commands:\n\r"
 10251                           ;ring_buffer_LUT.c: 510: "Device Commands:\n\r"
 10252                           ;ring_buffer_LUT.c: 511: "   Reset: Clears the terminal and resets the micro\n\r"
 10253                           ;ring_buffer_LUT.c: 512: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 10254                           ;ring_buffer_LUT.c: 513: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 10255                           ;ring_buffer_LUT.c: 514: "   *IDN?: Returns device identification string\n\r"
 10256                           ;ring_buffer_LUT.c: 515: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 10257  0128A0  0E03               	movlw	low STR_121
 10258  0128A2  0101               	movlb	1	; () banked
 10259  0128A4  6F82               	movwf	printf@f& (0+255),b
 10260  0128A6  0EEB               	movlw	high STR_121
 10261  0128A8  6F83               	movwf	(printf@f+1)& (0+255),b
 10262  0128AA  EC00  F080         	call	_printf	;wreg free
 10263                           
 10264                           ;ring_buffer_LUT.c: 549: terminal_printNewline();
 10265  0128AE  EC26  F0C4         	call	_terminal_printNewline	;wreg free
 10266                           
 10267                           ;ring_buffer_LUT.c: 550: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 10268  0128B2  0E2F               	movlw	low STR_122
 10269  0128B4  0101               	movlb	1	; () banked
 10270  0128B6  6F82               	movwf	printf@f& (0+255),b
 10271  0128B8  0EF8               	movlw	high STR_122
 10272  0128BA  6F83               	movwf	(printf@f+1)& (0+255),b
 10273  0128BC  EC00  F080         	call	_printf	;wreg free
 10274                           
 10275                           ;ring_buffer_LUT.c: 552: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10276  0128C0  0E00               	movlw	0
 10277  0128C2  0101               	movlb	1	; () banked
 10278  0128C4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10279  0128C6  0E00               	movlw	0
 10280  0128C8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10281  0128CA  0E02               	movlw	2
 10282  0128CC  EC1B  F09E         	call	_terminal_textAttributes
 10283                           
 10284                           ;ring_buffer_LUT.c: 553: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 10285  0128D0  0E0A               	movlw	low STR_123
 10286  0128D2  0101               	movlb	1	; () banked
 10287  0128D4  6F82               	movwf	printf@f& (0+255),b
 10288  0128D6  0EF7               	movlw	high STR_123
 10289  0128D8  6F83               	movwf	(printf@f+1)& (0+255),b
 10290  0128DA  EC00  F080         	call	_printf	;wreg free
 10291                           
 10292                           ;ring_buffer_LUT.c: 554: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10293  0128DE  0E00               	movlw	0
 10294  0128E0  0101               	movlb	1	; () banked
 10295  0128E2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10296  0128E4  0E00               	movlw	0
 10297  0128E6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10298  0128E8  0E06               	movlw	6
 10299  0128EA  EC1B  F09E         	call	_terminal_textAttributes
 10300                           
 10301                           ;ring_buffer_LUT.c: 555: printf("Measurement responses appear in cyan\n\r");
 10302  0128EE  0EF0               	movlw	low STR_124
 10303  0128F0  0101               	movlb	1	; () banked
 10304  0128F2  6F82               	movwf	printf@f& (0+255),b
 10305  0128F4  0EFA               	movlw	high STR_124
 10306  0128F6  6F83               	movwf	(printf@f+1)& (0+255),b
 10307  0128F8  EC00  F080         	call	_printf	;wreg free
 10308                           
 10309                           ;ring_buffer_LUT.c: 556: terminal_textAttributes(RED, BLACK, NORMAL);
 10310  0128FC  0E00               	movlw	0
 10311  0128FE  0101               	movlb	1	; () banked
 10312  012900  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10313  012902  0E00               	movlw	0
 10314  012904  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10315  012906  0E01               	movlw	1
 10316  012908  EC1B  F09E         	call	_terminal_textAttributes
 10317                           
 10318                           ;ring_buffer_LUT.c: 557: printf("Errors and negative responses appear in red\n\r");
 10319  01290C  0E99               	movlw	low STR_125
 10320  01290E  0101               	movlb	1	; () banked
 10321  012910  6F82               	movwf	printf@f& (0+255),b
 10322  012912  0EF9               	movlw	high STR_125
 10323  012914  6F83               	movwf	(printf@f+1)& (0+255),b
 10324  012916  EC00  F080         	call	_printf	;wreg free
 10325                           
 10326                           ;ring_buffer_LUT.c: 558: terminal_textAttributesReset();
 10327  01291A  EC0C  F0C4         	call	_terminal_textAttributesReset	;wreg free
 10328                           
 10329                           ;ring_buffer_LUT.c: 559: printf("User input appears in white\n\r");
 10330  01291E  0E51               	movlw	low STR_126
 10331  012920  0101               	movlb	1	; () banked
 10332  012922  6F82               	movwf	printf@f& (0+255),b
 10333  012924  0EFC               	movlw	high STR_126
 10334  012926  6F83               	movwf	(printf@f+1)& (0+255),b
 10335  012928  EC00  F080         	call	_printf	;wreg free
 10336                           
 10337                           ;ring_buffer_LUT.c: 562: terminal_printNewline();
 10338  01292C  EC26  F0C4         	call	_terminal_printNewline	;wreg free
 10339  012930  0012               	return	
 10340  012932                     __end_of_ringBufferLUT:
 10341                           	opt stack 0
 10342                           tblptru	equ	0xFF8
 10343                           tblptrh	equ	0xFF7
 10344                           tblptrl	equ	0xFF6
 10345                           tablat	equ	0xFF5
 10346                           intcon	equ	0xFF2
 10347                           postinc0	equ	0xFEE
 10348                           wreg	equ	0xFE8
 10349                           indf1	equ	0xFE7
 10350                           postdec1	equ	0xFE5
 10351                           fsr1h	equ	0xFE2
 10352                           fsr1l	equ	0xFE1
 10353                           indf2	equ	0xFDF
 10354                           postinc2	equ	0xFDE
 10355                           fsr2h	equ	0xFDA
 10356                           fsr2l	equ	0xFD9
 10357                           status	equ	0xFD8
 10358                           
 10359 ;; *************** function _terminal_textAttributesReset *****************
 10360 ;; Defined at:
 10361 ;;		line 223 in file "ring_buffer_interface.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;		None
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;		None
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      void 
 10368 ;; Registers used:
 10369 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10370 ;; Tracked objects:
 10371 ;;		On entry : 0/0
 10372 ;;		On exit  : 0/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10379 ;;Total ram usage:        0 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:   17
 10382 ;; This function calls:
 10383 ;;		_terminal_textAttributes
 10384 ;; This function is called by:
 10385 ;;		_main
 10386 ;;		_ringBufferLUT
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           	psect	text4
 10391  018818                     __ptext4:
 10392                           	opt stack 0
 10393  018818                     _terminal_textAttributesReset:
 10394                           	opt stack 13
 10395                           
 10396                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 10397                           
 10398                           ;incstack = 0
 10399  018818  0E00               	movlw	0
 10400  01881A  0101               	movlb	1	; () banked
 10401  01881C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10402  01881E  0E00               	movlw	0
 10403  018820  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10404  018822  0E07               	movlw	7
 10405  018824  EC1B  F09E         	call	_terminal_textAttributes
 10406  018828  0012               	return		;funcret
 10407  01882A                     __end_of_terminal_textAttributesReset:
 10408                           	opt stack 0
 10409                           tblptru	equ	0xFF8
 10410                           tblptrh	equ	0xFF7
 10411                           tblptrl	equ	0xFF6
 10412                           tablat	equ	0xFF5
 10413                           intcon	equ	0xFF2
 10414                           postinc0	equ	0xFEE
 10415                           wreg	equ	0xFE8
 10416                           indf1	equ	0xFE7
 10417                           postdec1	equ	0xFE5
 10418                           fsr1h	equ	0xFE2
 10419                           fsr1l	equ	0xFE1
 10420                           indf2	equ	0xFDF
 10421                           postinc2	equ	0xFDE
 10422                           fsr2h	equ	0xFDA
 10423                           fsr2l	equ	0xFD9
 10424                           status	equ	0xFD8
 10425                           
 10426 ;; *************** function _terminal_textAttributes *****************
 10427 ;; Defined at:
 10428 ;;		line 115 in file "ring_buffer_interface.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  foreground_c    1    wreg     enum E17893
 10431 ;;  background_c    1  178[BANK1 ] enum E17893
 10432 ;;  input_attrib    1  179[BANK1 ] enum E17885
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;  foreground_c    1    0[BANK2 ] enum E17893
 10435 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10445 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10446 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10448 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 10449 ;;Total ram usage:       18 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:   16
 10452 ;; This function calls:
 10453 ;;		_printf
 10454 ;;		_strcat
 10455 ;;		_strncpy
 10456 ;; This function is called by:
 10457 ;;		_terminal_textAttributesReset
 10458 ;;		_ringBufferLUT
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text5
 10463  013C36                     __ptext5:
 10464                           	opt stack 0
 10465  013C36                     _terminal_textAttributes:
 10466                           	opt stack 13
 10467                           
 10468                           ;incstack = 0
 10469                           ;terminal_textAttributes@foreground_color stored from wreg
 10470  013C36  0102               	movlb	2	; () banked
 10471  013C38  6FA8               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 10472                           
 10473                           ;ring_buffer_interface.c: 119: char output_buff[15];
 10474                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 10475  013C3A  0EA9               	movlw	low terminal_textAttributes@output_buff
 10476  013C3C  0101               	movlb	1	; () banked
 10477  013C3E  6F17               	movwf	strncpy@to& (0+255),b
 10478  013C40  0E02               	movlw	high terminal_textAttributes@output_buff
 10479  013C42  6F18               	movwf	(strncpy@to+1)& (0+255),b
 10480  013C44  0EF6               	movlw	low STR_11
 10481  013C46  6F19               	movwf	strncpy@from& (0+255),b
 10482  013C48  0EFF               	movlw	high STR_11
 10483  013C4A  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 10484  013C4C  0E00               	movlw	0
 10485  013C4E  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 10486  013C50  0E0F               	movlw	15
 10487  013C52  6F1B               	movwf	strncpy@size& (0+255),b
 10488  013C54  ECAE  F0BE         	call	_strncpy	;wreg free
 10489                           
 10490                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 10491  013C58  D054               	goto	l1066
 10492  013C5A                     
 10493                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 10494  013C5A  0EA9               	movlw	low terminal_textAttributes@output_buff
 10495  013C5C  0101               	movlb	1	; () banked
 10496  013C5E  6F17               	movwf	strcat@to& (0+255),b
 10497  013C60  0E02               	movlw	high terminal_textAttributes@output_buff
 10498  013C62  6F18               	movwf	(strcat@to+1)& (0+255),b
 10499  013C64  0ECA               	movlw	low (STR_20+1)
 10500  013C66  6F19               	movwf	strcat@from& (0+255),b
 10501  013C68  0EFF               	movlw	high (STR_20+1)
 10502  013C6A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10503  013C6C  EC4D  F0C0         	call	_strcat	;wreg free
 10504                           
 10505                           ;ring_buffer_interface.c: 127: break;
 10506  013C70  D05D               	goto	l1068
 10507  013C72                     
 10508                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 10509  013C72  0EA9               	movlw	low terminal_textAttributes@output_buff
 10510  013C74  0101               	movlb	1	; () banked
 10511  013C76  6F17               	movwf	strcat@to& (0+255),b
 10512  013C78  0E02               	movlw	high terminal_textAttributes@output_buff
 10513  013C7A  6F18               	movwf	(strcat@to+1)& (0+255),b
 10514  013C7C  0E51               	movlw	low (STR_67+20)
 10515  013C7E  6F19               	movwf	strcat@from& (0+255),b
 10516  013C80  0EFD               	movlw	high (STR_67+20)
 10517  013C82  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10518  013C84  EC4D  F0C0         	call	_strcat	;wreg free
 10519                           
 10520                           ;ring_buffer_interface.c: 130: break;
 10521  013C88  D051               	goto	l1068
 10522  013C8A                     
 10523                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 10524  013C8A  0EA9               	movlw	low terminal_textAttributes@output_buff
 10525  013C8C  0101               	movlb	1	; () banked
 10526  013C8E  6F17               	movwf	strcat@to& (0+255),b
 10527  013C90  0E02               	movlw	high terminal_textAttributes@output_buff
 10528  013C92  6F18               	movwf	(strcat@to+1)& (0+255),b
 10529  013C94  0EDF               	movlw	low (STR_24+1)
 10530  013C96  6F19               	movwf	strcat@from& (0+255),b
 10531  013C98  0EFF               	movlw	high (STR_24+1)
 10532  013C9A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10533  013C9C  EC4D  F0C0         	call	_strcat	;wreg free
 10534                           
 10535                           ;ring_buffer_interface.c: 133: break;
 10536  013CA0  D045               	goto	l1068
 10537  013CA2                     
 10538                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 10539  013CA2  0EA9               	movlw	low terminal_textAttributes@output_buff
 10540  013CA4  0101               	movlb	1	; () banked
 10541  013CA6  6F17               	movwf	strcat@to& (0+255),b
 10542  013CA8  0E02               	movlw	high terminal_textAttributes@output_buff
 10543  013CAA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10544  013CAC  0EE5               	movlw	low (STR_25+1)
 10545  013CAE  6F19               	movwf	strcat@from& (0+255),b
 10546  013CB0  0EFF               	movlw	high (STR_25+1)
 10547  013CB2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10548  013CB4  EC4D  F0C0         	call	_strcat	;wreg free
 10549                           
 10550                           ;ring_buffer_interface.c: 136: break;
 10551  013CB8  D039               	goto	l1068
 10552  013CBA                     
 10553                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 10554  013CBA  0EA9               	movlw	low terminal_textAttributes@output_buff
 10555  013CBC  0101               	movlb	1	; () banked
 10556  013CBE  6F17               	movwf	strcat@to& (0+255),b
 10557  013CC0  0E02               	movlw	high terminal_textAttributes@output_buff
 10558  013CC2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10559  013CC4  0EF1               	movlw	low (STR_27+1)
 10560  013CC6  6F19               	movwf	strcat@from& (0+255),b
 10561  013CC8  0EFF               	movlw	high (STR_27+1)
 10562  013CCA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10563  013CCC  EC4D  F0C0         	call	_strcat	;wreg free
 10564                           
 10565                           ;ring_buffer_interface.c: 139: break;
 10566  013CD0  D02D               	goto	l1068
 10567  013CD2                     
 10568                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 10569  013CD2  0EA9               	movlw	low terminal_textAttributes@output_buff
 10570  013CD4  0101               	movlb	1	; () banked
 10571  013CD6  6F17               	movwf	strcat@to& (0+255),b
 10572  013CD8  0E02               	movlw	high terminal_textAttributes@output_buff
 10573  013CDA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10574  013CDC  0EF9               	movlw	low STR_17
 10575  013CDE  6F19               	movwf	strcat@from& (0+255),b
 10576  013CE0  0EFF               	movlw	high STR_17
 10577  013CE2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10578  013CE4  EC4D  F0C0         	call	_strcat	;wreg free
 10579                           
 10580                           ;ring_buffer_interface.c: 142: break;
 10581  013CE8  D021               	goto	l1068
 10582  013CEA                     
 10583                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 10584  013CEA  0EA9               	movlw	low terminal_textAttributes@output_buff
 10585  013CEC  0101               	movlb	1	; () banked
 10586  013CEE  6F17               	movwf	strcat@to& (0+255),b
 10587  013CF0  0E02               	movlw	high terminal_textAttributes@output_buff
 10588  013CF2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10589  013CF4  0ECA               	movlw	low (STR_20+1)
 10590  013CF6  6F19               	movwf	strcat@from& (0+255),b
 10591  013CF8  0EFF               	movlw	high (STR_20+1)
 10592  013CFA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10593  013CFC  EC4D  F0C0         	call	_strcat	;wreg free
 10594                           
 10595                           ;ring_buffer_interface.c: 147: }
 10596                           
 10597                           ;ring_buffer_interface.c: 146: break;
 10598  013D00  D015               	goto	l1068
 10599  013D02                     l1066:
 10600  013D02  0101               	movlb	1	; () banked
 10601  013D04  51B3               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 10602                           
 10603                           ; Switch size 1, requested type "space"
 10604                           ; Number of cases is 6, Range of values is 0 to 5
 10605                           ; switch strategies available:
 10606                           ; Name         Instructions Cycles
 10607                           ; simple_byte           19    10 (average)
 10608                           ;	Chosen strategy is simple_byte
 10609  013D06  0A00               	xorlw	0	; case 0
 10610  013D08  B4D8               	btfsc	status,2,c
 10611  013D0A  D7A7               	goto	l1067
 10612  013D0C  0A01               	xorlw	1	; case 1
 10613  013D0E  B4D8               	btfsc	status,2,c
 10614  013D10  D7B0               	goto	l1069
 10615  013D12  0A03               	xorlw	3	; case 2
 10616  013D14  B4D8               	btfsc	status,2,c
 10617  013D16  D7B9               	goto	l1070
 10618  013D18  0A01               	xorlw	1	; case 3
 10619  013D1A  B4D8               	btfsc	status,2,c
 10620  013D1C  D7C2               	goto	l1071
 10621  013D1E  0A07               	xorlw	7	; case 4
 10622  013D20  B4D8               	btfsc	status,2,c
 10623  013D22  D7CB               	goto	l1072
 10624  013D24  0A01               	xorlw	1	; case 5
 10625  013D26  B4D8               	btfsc	status,2,c
 10626  013D28  D7D4               	goto	l1073
 10627  013D2A  D7DF               	goto	l1074
 10628  013D2C                     l1068:
 10629                           
 10630                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 10631                           
 10632                           ; BSR set to: 1
 10633  013D2C  0EA9               	movlw	low terminal_textAttributes@output_buff
 10634  013D2E  0101               	movlb	1	; () banked
 10635  013D30  6F17               	movwf	strcat@to& (0+255),b
 10636  013D32  0E02               	movlw	high terminal_textAttributes@output_buff
 10637  013D34  6F18               	movwf	(strcat@to+1)& (0+255),b
 10638  013D36  0EFB               	movlw	low STR_19
 10639  013D38  6F19               	movwf	strcat@from& (0+255),b
 10640  013D3A  0EFF               	movlw	high STR_19
 10641  013D3C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10642  013D3E  EC4D  F0C0         	call	_strcat	;wreg free
 10643                           
 10644                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 10645  013D42  D06C               	goto	l1075
 10646  013D44                     
 10647                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 10648  013D44  0EA9               	movlw	low terminal_textAttributes@output_buff
 10649  013D46  0101               	movlb	1	; () banked
 10650  013D48  6F17               	movwf	strcat@to& (0+255),b
 10651  013D4A  0E02               	movlw	high terminal_textAttributes@output_buff
 10652  013D4C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10653  013D4E  0EC9               	movlw	low STR_20
 10654  013D50  6F19               	movwf	strcat@from& (0+255),b
 10655  013D52  0EFF               	movlw	high STR_20
 10656  013D54  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10657  013D56  EC4D  F0C0         	call	_strcat	;wreg free
 10658                           
 10659                           ;ring_buffer_interface.c: 155: break;
 10660  013D5A  D07B               	goto	l1077
 10661  013D5C                     
 10662                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 10663  013D5C  0EA9               	movlw	low terminal_textAttributes@output_buff
 10664  013D5E  0101               	movlb	1	; () banked
 10665  013D60  6F17               	movwf	strcat@to& (0+255),b
 10666  013D62  0E02               	movlw	high terminal_textAttributes@output_buff
 10667  013D64  6F18               	movwf	(strcat@to+1)& (0+255),b
 10668  013D66  0ECC               	movlw	low STR_21
 10669  013D68  6F19               	movwf	strcat@from& (0+255),b
 10670  013D6A  0EFF               	movlw	high STR_21
 10671  013D6C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10672  013D6E  EC4D  F0C0         	call	_strcat	;wreg free
 10673                           
 10674                           ;ring_buffer_interface.c: 158: break;
 10675  013D72  D06F               	goto	l1077
 10676  013D74                     
 10677                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 10678  013D74  0EA9               	movlw	low terminal_textAttributes@output_buff
 10679  013D76  0101               	movlb	1	; () banked
 10680  013D78  6F17               	movwf	strcat@to& (0+255),b
 10681  013D7A  0E02               	movlw	high terminal_textAttributes@output_buff
 10682  013D7C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10683  013D7E  0ED2               	movlw	low STR_22
 10684  013D80  6F19               	movwf	strcat@from& (0+255),b
 10685  013D82  0EFF               	movlw	high STR_22
 10686  013D84  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10687  013D86  EC4D  F0C0         	call	_strcat	;wreg free
 10688                           
 10689                           ;ring_buffer_interface.c: 161: break;
 10690  013D8A  D063               	goto	l1077
 10691  013D8C                     
 10692                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 10693  013D8C  0EA9               	movlw	low terminal_textAttributes@output_buff
 10694  013D8E  0101               	movlb	1	; () banked
 10695  013D90  6F17               	movwf	strcat@to& (0+255),b
 10696  013D92  0E02               	movlw	high terminal_textAttributes@output_buff
 10697  013D94  6F18               	movwf	(strcat@to+1)& (0+255),b
 10698  013D96  0ED8               	movlw	low STR_23
 10699  013D98  6F19               	movwf	strcat@from& (0+255),b
 10700  013D9A  0EFF               	movlw	high STR_23
 10701  013D9C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10702  013D9E  EC4D  F0C0         	call	_strcat	;wreg free
 10703                           
 10704                           ;ring_buffer_interface.c: 164: break;
 10705  013DA2  D057               	goto	l1077
 10706  013DA4                     
 10707                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 10708  013DA4  0EA9               	movlw	low terminal_textAttributes@output_buff
 10709  013DA6  0101               	movlb	1	; () banked
 10710  013DA8  6F17               	movwf	strcat@to& (0+255),b
 10711  013DAA  0E02               	movlw	high terminal_textAttributes@output_buff
 10712  013DAC  6F18               	movwf	(strcat@to+1)& (0+255),b
 10713  013DAE  0EDE               	movlw	low STR_24
 10714  013DB0  6F19               	movwf	strcat@from& (0+255),b
 10715  013DB2  0EFF               	movlw	high STR_24
 10716  013DB4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10717  013DB6  EC4D  F0C0         	call	_strcat	;wreg free
 10718                           
 10719                           ;ring_buffer_interface.c: 167: break;
 10720  013DBA  D04B               	goto	l1077
 10721  013DBC                     
 10722                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 10723  013DBC  0EA9               	movlw	low terminal_textAttributes@output_buff
 10724  013DBE  0101               	movlb	1	; () banked
 10725  013DC0  6F17               	movwf	strcat@to& (0+255),b
 10726  013DC2  0E02               	movlw	high terminal_textAttributes@output_buff
 10727  013DC4  6F18               	movwf	(strcat@to+1)& (0+255),b
 10728  013DC6  0EE4               	movlw	low STR_25
 10729  013DC8  6F19               	movwf	strcat@from& (0+255),b
 10730  013DCA  0EFF               	movlw	high STR_25
 10731  013DCC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10732  013DCE  EC4D  F0C0         	call	_strcat	;wreg free
 10733                           
 10734                           ;ring_buffer_interface.c: 170: break;
 10735  013DD2  D03F               	goto	l1077
 10736  013DD4                     
 10737                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 10738  013DD4  0EA9               	movlw	low terminal_textAttributes@output_buff
 10739  013DD6  0101               	movlb	1	; () banked
 10740  013DD8  6F17               	movwf	strcat@to& (0+255),b
 10741  013DDA  0E02               	movlw	high terminal_textAttributes@output_buff
 10742  013DDC  6F18               	movwf	(strcat@to+1)& (0+255),b
 10743  013DDE  0EEA               	movlw	low STR_26
 10744  013DE0  6F19               	movwf	strcat@from& (0+255),b
 10745  013DE2  0EFF               	movlw	high STR_26
 10746  013DE4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10747  013DE6  EC4D  F0C0         	call	_strcat	;wreg free
 10748                           
 10749                           ;ring_buffer_interface.c: 173: break;
 10750  013DEA  D033               	goto	l1077
 10751  013DEC                     
 10752                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 10753  013DEC  0EA9               	movlw	low terminal_textAttributes@output_buff
 10754  013DEE  0101               	movlb	1	; () banked
 10755  013DF0  6F17               	movwf	strcat@to& (0+255),b
 10756  013DF2  0E02               	movlw	high terminal_textAttributes@output_buff
 10757  013DF4  6F18               	movwf	(strcat@to+1)& (0+255),b
 10758  013DF6  0EF0               	movlw	low STR_27
 10759  013DF8  6F19               	movwf	strcat@from& (0+255),b
 10760  013DFA  0EFF               	movlw	high STR_27
 10761  013DFC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10762  013DFE  EC4D  F0C0         	call	_strcat	;wreg free
 10763                           
 10764                           ;ring_buffer_interface.c: 176: break;
 10765  013E02  D027               	goto	l1077
 10766  013E04                     
 10767                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 10768  013E04  0EA9               	movlw	low terminal_textAttributes@output_buff
 10769  013E06  0101               	movlb	1	; () banked
 10770  013E08  6F17               	movwf	strcat@to& (0+255),b
 10771  013E0A  0E02               	movlw	high terminal_textAttributes@output_buff
 10772  013E0C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10773  013E0E  0EF0               	movlw	low STR_27
 10774  013E10  6F19               	movwf	strcat@from& (0+255),b
 10775  013E12  0EFF               	movlw	high STR_27
 10776  013E14  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10777  013E16  EC4D  F0C0         	call	_strcat	;wreg free
 10778                           
 10779                           ;ring_buffer_interface.c: 181: }
 10780                           
 10781                           ;ring_buffer_interface.c: 180: break;
 10782  013E1A  D01B               	goto	l1077
 10783  013E1C                     l1075:
 10784  013E1C  0102               	movlb	2	; () banked
 10785  013E1E  51A8               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 10786                           
 10787                           ; Switch size 1, requested type "space"
 10788                           ; Number of cases is 8, Range of values is 0 to 7
 10789                           ; switch strategies available:
 10790                           ; Name         Instructions Cycles
 10791                           ; simple_byte           25    13 (average)
 10792                           ;	Chosen strategy is simple_byte
 10793  013E20  0A00               	xorlw	0	; case 0
 10794  013E22  B4D8               	btfsc	status,2,c
 10795  013E24  D78F               	goto	l1076
 10796  013E26  0A01               	xorlw	1	; case 1
 10797  013E28  B4D8               	btfsc	status,2,c
 10798  013E2A  D798               	goto	l1078
 10799  013E2C  0A03               	xorlw	3	; case 2
 10800  013E2E  B4D8               	btfsc	status,2,c
 10801  013E30  D7A1               	goto	l1079
 10802  013E32  0A01               	xorlw	1	; case 3
 10803  013E34  B4D8               	btfsc	status,2,c
 10804  013E36  D7AA               	goto	l1080
 10805  013E38  0A07               	xorlw	7	; case 4
 10806  013E3A  B4D8               	btfsc	status,2,c
 10807  013E3C  D7B3               	goto	l1081
 10808  013E3E  0A01               	xorlw	1	; case 5
 10809  013E40  B4D8               	btfsc	status,2,c
 10810  013E42  D7BC               	goto	l1082
 10811  013E44  0A03               	xorlw	3	; case 6
 10812  013E46  B4D8               	btfsc	status,2,c
 10813  013E48  D7C5               	goto	l1083
 10814  013E4A  0A01               	xorlw	1	; case 7
 10815  013E4C  B4D8               	btfsc	status,2,c
 10816  013E4E  D7CE               	goto	l1084
 10817  013E50  D7D9               	goto	l1085
 10818  013E52                     l1077:
 10819                           
 10820                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 10821                           
 10822                           ; BSR set to: 2
 10823  013E52  0EA9               	movlw	low terminal_textAttributes@output_buff
 10824  013E54  0101               	movlb	1	; () banked
 10825  013E56  6F17               	movwf	strcat@to& (0+255),b
 10826  013E58  0E02               	movlw	high terminal_textAttributes@output_buff
 10827  013E5A  6F18               	movwf	(strcat@to+1)& (0+255),b
 10828  013E5C  0EFB               	movlw	low STR_19
 10829  013E5E  6F19               	movwf	strcat@from& (0+255),b
 10830  013E60  0EFF               	movlw	high STR_19
 10831  013E62  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10832  013E64  EC4D  F0C0         	call	_strcat	;wreg free
 10833                           
 10834                           ;ring_buffer_interface.c: 185: switch (background_color) {
 10835  013E68  D06C               	goto	l1086
 10836  013E6A                     
 10837                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 10838  013E6A  0EA9               	movlw	low terminal_textAttributes@output_buff
 10839  013E6C  0101               	movlb	1	; () banked
 10840  013E6E  6F17               	movwf	strcat@to& (0+255),b
 10841  013E70  0E02               	movlw	high terminal_textAttributes@output_buff
 10842  013E72  6F18               	movwf	(strcat@to+1)& (0+255),b
 10843  013E74  0E4D               	movlw	low (STR_127+9)
 10844  013E76  6F19               	movwf	strcat@from& (0+255),b
 10845  013E78  0EFF               	movlw	high (STR_127+9)
 10846  013E7A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10847  013E7C  EC4D  F0C0         	call	_strcat	;wreg free
 10848                           
 10849                           ;ring_buffer_interface.c: 189: break;
 10850  013E80  D07B               	goto	l1088
 10851  013E82                     
 10852                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 10853  013E82  0EA9               	movlw	low terminal_textAttributes@output_buff
 10854  013E84  0101               	movlb	1	; () banked
 10855  013E86  6F17               	movwf	strcat@to& (0+255),b
 10856  013E88  0E02               	movlw	high terminal_textAttributes@output_buff
 10857  013E8A  6F18               	movwf	(strcat@to+1)& (0+255),b
 10858  013E8C  0ECF               	movlw	low STR_31
 10859  013E8E  6F19               	movwf	strcat@from& (0+255),b
 10860  013E90  0EFF               	movlw	high STR_31
 10861  013E92  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10862  013E94  EC4D  F0C0         	call	_strcat	;wreg free
 10863                           
 10864                           ;ring_buffer_interface.c: 192: break;
 10865  013E98  D06F               	goto	l1088
 10866  013E9A                     
 10867                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 10868  013E9A  0EA9               	movlw	low terminal_textAttributes@output_buff
 10869  013E9C  0101               	movlb	1	; () banked
 10870  013E9E  6F17               	movwf	strcat@to& (0+255),b
 10871  013EA0  0E02               	movlw	high terminal_textAttributes@output_buff
 10872  013EA2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10873  013EA4  0ED5               	movlw	low STR_32
 10874  013EA6  6F19               	movwf	strcat@from& (0+255),b
 10875  013EA8  0EFF               	movlw	high STR_32
 10876  013EAA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10877  013EAC  EC4D  F0C0         	call	_strcat	;wreg free
 10878                           
 10879                           ;ring_buffer_interface.c: 195: break;
 10880  013EB0  D063               	goto	l1088
 10881  013EB2                     
 10882                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 10883  013EB2  0EA9               	movlw	low terminal_textAttributes@output_buff
 10884  013EB4  0101               	movlb	1	; () banked
 10885  013EB6  6F17               	movwf	strcat@to& (0+255),b
 10886  013EB8  0E02               	movlw	high terminal_textAttributes@output_buff
 10887  013EBA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10888  013EBC  0EDB               	movlw	low STR_33
 10889  013EBE  6F19               	movwf	strcat@from& (0+255),b
 10890  013EC0  0EFF               	movlw	high STR_33
 10891  013EC2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10892  013EC4  EC4D  F0C0         	call	_strcat	;wreg free
 10893                           
 10894                           ;ring_buffer_interface.c: 198: break;
 10895  013EC8  D057               	goto	l1088
 10896  013ECA                     
 10897                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 10898  013ECA  0EA9               	movlw	low terminal_textAttributes@output_buff
 10899  013ECC  0101               	movlb	1	; () banked
 10900  013ECE  6F17               	movwf	strcat@to& (0+255),b
 10901  013ED0  0E02               	movlw	high terminal_textAttributes@output_buff
 10902  013ED2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10903  013ED4  0EE1               	movlw	low STR_34
 10904  013ED6  6F19               	movwf	strcat@from& (0+255),b
 10905  013ED8  0EFF               	movlw	high STR_34
 10906  013EDA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10907  013EDC  EC4D  F0C0         	call	_strcat	;wreg free
 10908                           
 10909                           ;ring_buffer_interface.c: 201: break;
 10910  013EE0  D04B               	goto	l1088
 10911  013EE2                     
 10912                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 10913  013EE2  0EA9               	movlw	low terminal_textAttributes@output_buff
 10914  013EE4  0101               	movlb	1	; () banked
 10915  013EE6  6F17               	movwf	strcat@to& (0+255),b
 10916  013EE8  0E02               	movlw	high terminal_textAttributes@output_buff
 10917  013EEA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10918  013EEC  0EE7               	movlw	low STR_35
 10919  013EEE  6F19               	movwf	strcat@from& (0+255),b
 10920  013EF0  0EFF               	movlw	high STR_35
 10921  013EF2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10922  013EF4  EC4D  F0C0         	call	_strcat	;wreg free
 10923                           
 10924                           ;ring_buffer_interface.c: 204: break;
 10925  013EF8  D03F               	goto	l1088
 10926  013EFA                     
 10927                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 10928  013EFA  0EA9               	movlw	low terminal_textAttributes@output_buff
 10929  013EFC  0101               	movlb	1	; () banked
 10930  013EFE  6F17               	movwf	strcat@to& (0+255),b
 10931  013F00  0E02               	movlw	high terminal_textAttributes@output_buff
 10932  013F02  6F18               	movwf	(strcat@to+1)& (0+255),b
 10933  013F04  0EED               	movlw	low STR_36
 10934  013F06  6F19               	movwf	strcat@from& (0+255),b
 10935  013F08  0EFF               	movlw	high STR_36
 10936  013F0A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10937  013F0C  EC4D  F0C0         	call	_strcat	;wreg free
 10938                           
 10939                           ;ring_buffer_interface.c: 207: break;
 10940  013F10  D033               	goto	l1088
 10941  013F12                     
 10942                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 10943  013F12  0EA9               	movlw	low terminal_textAttributes@output_buff
 10944  013F14  0101               	movlb	1	; () banked
 10945  013F16  6F17               	movwf	strcat@to& (0+255),b
 10946  013F18  0E02               	movlw	high terminal_textAttributes@output_buff
 10947  013F1A  6F18               	movwf	(strcat@to+1)& (0+255),b
 10948  013F1C  0EF3               	movlw	low STR_37
 10949  013F1E  6F19               	movwf	strcat@from& (0+255),b
 10950  013F20  0EFF               	movlw	high STR_37
 10951  013F22  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10952  013F24  EC4D  F0C0         	call	_strcat	;wreg free
 10953                           
 10954                           ;ring_buffer_interface.c: 210: break;
 10955  013F28  D027               	goto	l1088
 10956  013F2A                     
 10957                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 10958  013F2A  0EA9               	movlw	low terminal_textAttributes@output_buff
 10959  013F2C  0101               	movlb	1	; () banked
 10960  013F2E  6F17               	movwf	strcat@to& (0+255),b
 10961  013F30  0E02               	movlw	high terminal_textAttributes@output_buff
 10962  013F32  6F18               	movwf	(strcat@to+1)& (0+255),b
 10963  013F34  0EF3               	movlw	low STR_37
 10964  013F36  6F19               	movwf	strcat@from& (0+255),b
 10965  013F38  0EFF               	movlw	high STR_37
 10966  013F3A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10967  013F3C  EC4D  F0C0         	call	_strcat	;wreg free
 10968                           
 10969                           ;ring_buffer_interface.c: 215: }
 10970                           
 10971                           ;ring_buffer_interface.c: 214: break;
 10972  013F40  D01B               	goto	l1088
 10973  013F42                     l1086:
 10974  013F42  0101               	movlb	1	; () banked
 10975  013F44  51B2               	movf	terminal_textAttributes@background_color& (0+255),w,b
 10976                           
 10977                           ; Switch size 1, requested type "space"
 10978                           ; Number of cases is 8, Range of values is 0 to 7
 10979                           ; switch strategies available:
 10980                           ; Name         Instructions Cycles
 10981                           ; simple_byte           25    13 (average)
 10982                           ;	Chosen strategy is simple_byte
 10983  013F46  0A00               	xorlw	0	; case 0
 10984  013F48  B4D8               	btfsc	status,2,c
 10985  013F4A  D78F               	goto	l1087
 10986  013F4C  0A01               	xorlw	1	; case 1
 10987  013F4E  B4D8               	btfsc	status,2,c
 10988  013F50  D798               	goto	l1089
 10989  013F52  0A03               	xorlw	3	; case 2
 10990  013F54  B4D8               	btfsc	status,2,c
 10991  013F56  D7A1               	goto	l1090
 10992  013F58  0A01               	xorlw	1	; case 3
 10993  013F5A  B4D8               	btfsc	status,2,c
 10994  013F5C  D7AA               	goto	l1091
 10995  013F5E  0A07               	xorlw	7	; case 4
 10996  013F60  B4D8               	btfsc	status,2,c
 10997  013F62  D7B3               	goto	l1092
 10998  013F64  0A01               	xorlw	1	; case 5
 10999  013F66  B4D8               	btfsc	status,2,c
 11000  013F68  D7BC               	goto	l1093
 11001  013F6A  0A03               	xorlw	3	; case 6
 11002  013F6C  B4D8               	btfsc	status,2,c
 11003  013F6E  D7C5               	goto	l1094
 11004  013F70  0A01               	xorlw	1	; case 7
 11005  013F72  B4D8               	btfsc	status,2,c
 11006  013F74  D7CE               	goto	l1095
 11007  013F76  D7D9               	goto	l1096
 11008  013F78                     l1088:
 11009                           
 11010                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 11011                           
 11012                           ; BSR set to: 1
 11013  013F78  0EA9               	movlw	low terminal_textAttributes@output_buff
 11014  013F7A  0101               	movlb	1	; () banked
 11015  013F7C  6F17               	movwf	strcat@to& (0+255),b
 11016  013F7E  0E02               	movlw	high terminal_textAttributes@output_buff
 11017  013F80  6F18               	movwf	(strcat@to+1)& (0+255),b
 11018  013F82  0EFD               	movlw	low STR_39
 11019  013F84  6F19               	movwf	strcat@from& (0+255),b
 11020  013F86  0EFF               	movlw	high STR_39
 11021  013F88  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11022  013F8A  EC4D  F0C0         	call	_strcat	;wreg free
 11023                           
 11024                           ;ring_buffer_interface.c: 219: printf(output_buff);
 11025  013F8E  0EA9               	movlw	low terminal_textAttributes@output_buff
 11026  013F90  0101               	movlb	1	; () banked
 11027  013F92  6F82               	movwf	printf@f& (0+255),b
 11028  013F94  0E02               	movlw	high terminal_textAttributes@output_buff
 11029  013F96  6F83               	movwf	(printf@f+1)& (0+255),b
 11030  013F98  EC00  F080         	call	_printf	;wreg free
 11031  013F9C  0012               	return		;funcret
 11032  013F9E                     __end_of_terminal_textAttributes:
 11033                           	opt stack 0
 11034                           tblptru	equ	0xFF8
 11035                           tblptrh	equ	0xFF7
 11036                           tblptrl	equ	0xFF6
 11037                           tablat	equ	0xFF5
 11038                           intcon	equ	0xFF2
 11039                           postinc0	equ	0xFEE
 11040                           wreg	equ	0xFE8
 11041                           indf1	equ	0xFE7
 11042                           postdec1	equ	0xFE5
 11043                           fsr1h	equ	0xFE2
 11044                           fsr1l	equ	0xFE1
 11045                           indf2	equ	0xFDF
 11046                           postinc2	equ	0xFDE
 11047                           fsr2h	equ	0xFDA
 11048                           fsr2l	equ	0xFD9
 11049                           status	equ	0xFD8
 11050                           
 11051 ;; *************** function _strncpy *****************
 11052 ;; Defined at:
 11053 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11056 ;;		 -> terminal_textAttributes@output_buff(15), 
 11057 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11058 ;;		 -> STR_11(3), 
 11059 ;;  size            2   27[BANK1 ] unsigned int 
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 11062 ;;		 -> terminal_textAttributes@output_buff(15), 
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  2   23[BANK1 ] PTR unsigned char 
 11065 ;; Registers used:
 11066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11072 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11073 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11075 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11076 ;;Total ram usage:        8 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:   13
 11079 ;; This function calls:
 11080 ;;		Nothing
 11081 ;; This function is called by:
 11082 ;;		_terminal_textAttributes
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           
 11086                           	psect	text6
 11087  017D5C                     __ptext6:
 11088                           	opt stack 0
 11089  017D5C                     _strncpy:
 11090                           	opt stack 15
 11091                           
 11092                           ;incstack = 0
 11093  017D5C  C117  F11D         	movff	strncpy@to,strncpy@cp
 11094  017D60  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 11095  017D64  D018               	goto	l2223
 11096  017D66  0101               	movlb	1	; () banked
 11097  017D68  071B               	decf	strncpy@size& (0+255),f,b
 11098  017D6A  A0D8               	btfss	status,0,c
 11099  017D6C  071C               	decf	(strncpy@size+1)& (0+255),f,b
 11100                           
 11101                           ; BSR set to: 1
 11102  017D6E  C119  FFF6         	movff	strncpy@from,tblptrl
 11103  017D72  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 11104  017D76  4B19               	infsnz	strncpy@from& (0+255),f,b
 11105  017D78  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 11106  017D7A                     	if	0	;tblptru may be non-zero
 11107  017D7A                     	endif
 11108  017D7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11109  017D7A  0E00               	movlw	low (__mediumconst shr (0+16))
 11110  017D7C  6EF8               	movwf	tblptru,c
 11111  017D7E                     	endif
 11112  017D7E  C11D  FFD9         	movff	strncpy@cp,fsr2l
 11113  017D82  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 11114  017D86  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 11115  017D88  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 11116  017D8A  0008               	tblrd		*
 11117  017D8C  CFF5 FFDF          	movff	tablat,indf2
 11118  017D90  50DF               	movf	indf2,w,c
 11119  017D92  B4D8               	btfsc	status,2,c
 11120  017D94  D00E               	goto	l2225
 11121  017D96                     l2223:
 11122                           
 11123                           ; BSR set to: 1
 11124                           
 11125                           ; BSR set to: 1
 11126  017D96  0101               	movlb	1	; () banked
 11127  017D98  511B               	movf	strncpy@size& (0+255),w,b
 11128  017D9A  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 11129  017D9C  B4D8               	btfsc	status,2,c
 11130  017D9E  D009               	goto	l2225
 11131  017DA0  D7E2               	goto	l2222
 11132  017DA2                     l18202:
 11133                           
 11134                           ; BSR set to: 1
 11135  017DA2  C11D  FFD9         	movff	strncpy@cp,fsr2l
 11136  017DA6  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 11137  017DAA  0E00               	movlw	0
 11138  017DAC  6EDF               	movwf	indf2,c
 11139                           
 11140                           ; BSR set to: 1
 11141  017DAE  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 11142  017DB0  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 11143  017DB2                     l2225:
 11144                           
 11145                           ; BSR set to: 1
 11146                           
 11147                           ; BSR set to: 1
 11148  017DB2  071B               	decf	strncpy@size& (0+255),f,b
 11149  017DB4  A0D8               	btfss	status,0,c
 11150  017DB6  071C               	decf	(strncpy@size+1)& (0+255),f,b
 11151  017DB8  291B               	incf	strncpy@size& (0+255),w,b
 11152  017DBA  E1F3               	bnz	l18202
 11153  017DBC  291C               	incf	(strncpy@size+1)& (0+255),w,b
 11154  017DBE  B4D8               	btfsc	status,2,c
 11155  017DC0  0012               	return	
 11156  017DC2  D7EF               	goto	l2226
 11157  017DC4                     __end_of_strncpy:
 11158                           	opt stack 0
 11159                           tblptru	equ	0xFF8
 11160                           tblptrh	equ	0xFF7
 11161                           tblptrl	equ	0xFF6
 11162                           tablat	equ	0xFF5
 11163                           intcon	equ	0xFF2
 11164                           postinc0	equ	0xFEE
 11165                           wreg	equ	0xFE8
 11166                           indf1	equ	0xFE7
 11167                           postdec1	equ	0xFE5
 11168                           fsr1h	equ	0xFE2
 11169                           fsr1l	equ	0xFE1
 11170                           indf2	equ	0xFDF
 11171                           postinc2	equ	0xFDE
 11172                           fsr2h	equ	0xFDA
 11173                           fsr2l	equ	0xFD9
 11174                           status	equ	0xFD8
 11175                           
 11176 ;; *************** function _strcat *****************
 11177 ;; Defined at:
 11178 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11181 ;;		 -> terminal_textAttributes@output_buff(15), 
 11182 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11183 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 11184 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 11185 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 11186 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 11187 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 11188 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 11189 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 11192 ;;		 -> terminal_textAttributes@output_buff(15), 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  2   23[BANK1 ] PTR unsigned char 
 11195 ;; Registers used:
 11196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11202 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11203 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11205 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11206 ;;Total ram usage:        6 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:   13
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_terminal_textAttributes
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           	psect	text7
 11217  01809A                     __ptext7:
 11218                           	opt stack 0
 11219  01809A                     _strcat:
 11220                           	opt stack 15
 11221                           
 11222                           ; BSR set to: 1
 11223                           ;incstack = 0
 11224  01809A  C117  F11B         	movff	strcat@to,strcat@cp
 11225  01809E  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 11226  0180A2  D003               	goto	l2192
 11227  0180A4  0101               	movlb	1	; () banked
 11228  0180A6  4B1B               	infsnz	strcat@cp& (0+255),f,b
 11229  0180A8  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 11230  0180AA                     l2192:
 11231                           
 11232                           ; BSR set to: 1
 11233  0180AA  C11B  FFD9         	movff	strcat@cp,fsr2l
 11234  0180AE  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 11235  0180B2  50DF               	movf	indf2,w,c
 11236  0180B4  B4D8               	btfsc	status,2,c
 11237  0180B6  D006               	goto	l2195
 11238  0180B8  D7F5               	goto	l2193
 11239  0180BA  0101               	movlb	1	; () banked
 11240  0180BC  4B1B               	infsnz	strcat@cp& (0+255),f,b
 11241  0180BE  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 11242  0180C0  4B19               	infsnz	strcat@from& (0+255),f,b
 11243  0180C2  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 11244  0180C4                     l2195:
 11245                           
 11246                           ; BSR set to: 1
 11247  0180C4  C119  FFF6         	movff	strcat@from,tblptrl
 11248  0180C8  C11A  FFF7         	movff	strcat@from+1,tblptrh
 11249  0180CC                     	if	0	;tblptru may be non-zero
 11250  0180CC                     	endif
 11251  0180CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11252  0180CC  0E00               	movlw	low (__mediumconst shr (0+16))
 11253  0180CE  6EF8               	movwf	tblptru,c
 11254  0180D0                     	endif
 11255  0180D0  C11B  FFD9         	movff	strcat@cp,fsr2l
 11256  0180D4  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 11257  0180D8  0008               	tblrd		*
 11258  0180DA  CFF5 FFDF          	movff	tablat,indf2
 11259  0180DE  50DF               	movf	indf2,w,c
 11260  0180E0  B4D8               	btfsc	status,2,c
 11261  0180E2  0012               	return	
 11262  0180E4  D7EA               	goto	l2196
 11263  0180E6                     __end_of_strcat:
 11264                           	opt stack 0
 11265                           tblptru	equ	0xFF8
 11266                           tblptrh	equ	0xFF7
 11267                           tblptrl	equ	0xFF6
 11268                           tablat	equ	0xFF5
 11269                           intcon	equ	0xFF2
 11270                           postinc0	equ	0xFEE
 11271                           wreg	equ	0xFE8
 11272                           indf1	equ	0xFE7
 11273                           postdec1	equ	0xFE5
 11274                           fsr1h	equ	0xFE2
 11275                           fsr1l	equ	0xFE1
 11276                           indf2	equ	0xFDF
 11277                           postinc2	equ	0xFDE
 11278                           fsr2h	equ	0xFDA
 11279                           fsr2l	equ	0xFD9
 11280                           status	equ	0xFD8
 11281                           
 11282 ;; *************** function _terminal_printNewline *****************
 11283 ;; Defined at:
 11284 ;;		line 230 in file "ring_buffer_interface.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;		None
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;		None
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      void 
 11291 ;; Registers used:
 11292 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11302 ;;Total ram usage:        0 bytes
 11303 ;; Hardware stack levels used:    1
 11304 ;; Hardware stack levels required when called:   16
 11305 ;; This function calls:
 11306 ;;		_printf
 11307 ;; This function is called by:
 11308 ;;		_ringBufferLUT
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312                           	psect	text8
 11313  01884C                     __ptext8:
 11314                           	opt stack 0
 11315  01884C                     _terminal_printNewline:
 11316                           	opt stack 12
 11317                           
 11318                           ;ring_buffer_interface.c: 232: printf("\n\r");
 11319                           
 11320                           ;incstack = 0
 11321  01884C  0E46               	movlw	low (STR_115+68)
 11322  01884E  0101               	movlb	1	; () banked
 11323  018850  6F82               	movwf	printf@f& (0+255),b
 11324  018852  0EF6               	movlw	high (STR_115+68)
 11325  018854  6F83               	movwf	(printf@f+1)& (0+255),b
 11326  018856  EC00  F080         	call	_printf	;wreg free
 11327  01885A  0012               	return		;funcret
 11328  01885C                     __end_of_terminal_printNewline:
 11329                           	opt stack 0
 11330                           tblptru	equ	0xFF8
 11331                           tblptrh	equ	0xFF7
 11332                           tblptrl	equ	0xFF6
 11333                           tablat	equ	0xFF5
 11334                           intcon	equ	0xFF2
 11335                           postinc0	equ	0xFEE
 11336                           wreg	equ	0xFE8
 11337                           indf1	equ	0xFE7
 11338                           postdec1	equ	0xFE5
 11339                           fsr1h	equ	0xFE2
 11340                           fsr1l	equ	0xFE1
 11341                           indf2	equ	0xFDF
 11342                           postinc2	equ	0xFDE
 11343                           fsr2h	equ	0xFDA
 11344                           fsr2l	equ	0xFD9
 11345                           status	equ	0xFD8
 11346                           
 11347 ;; *************** function _strstr *****************
 11348 ;; Defined at:
 11349 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 11352 ;;		 -> NULL(0), line(64), 
 11353 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 11354 ;;		 -> STR_109(25), 
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;		None
 11357 ;; Return value:  Size  Location     Type
 11358 ;;                  2   38[BANK1 ] PTR unsigned char 
 11359 ;; Registers used:
 11360 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11361 ;; Tracked objects:
 11362 ;;		On entry : 0/0
 11363 ;;		On exit  : 0/0
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11366 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11369 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11370 ;;Total ram usage:        4 bytes
 11371 ;; Hardware stack levels used:    1
 11372 ;; Hardware stack levels required when called:   14
 11373 ;; This function calls:
 11374 ;;		_strchr
 11375 ;;		_strlen
 11376 ;;		_strncmp
 11377 ;; This function is called by:
 11378 ;;		_ringBufferLUT
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382                           	psect	text9
 11383  017786                     __ptext9:
 11384                           	opt stack 0
 11385  017786                     _strstr:
 11386                           	opt stack 14
 11387                           
 11388                           ;incstack = 0
 11389  017786  D034               	goto	l2237
 11390  017788  C126  F11D         	movff	strstr@s1,strncmp@s1
 11391  01778C  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 11392  017790  C128  F11F         	movff	strstr@s2,strncmp@s2
 11393  017794  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 11394  017798  C128  F117         	movff	strstr@s2,strlen@s
 11395  01779C  C129  F118         	movff	strstr@s2+1,strlen@s+1
 11396  0177A0  ECA9  F0BF         	call	_strlen	;wreg free
 11397  0177A4  C117  F121         	movff	?_strlen,strncmp@len
 11398  0177A8  C118  F122         	movff	?_strlen+1,strncmp@len+1
 11399  0177AC  EC7B  F0BB         	call	_strncmp	;wreg free
 11400  0177B0  0101               	movlb	1	; () banked
 11401  0177B2  511D               	movf	?_strncmp& (0+255),w,b
 11402  0177B4  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 11403  0177B6  A4D8               	btfss	status,2,c
 11404  0177B8  D005               	goto	l2239
 11405                           
 11406                           ; BSR set to: 1
 11407  0177BA  C126  F126         	movff	strstr@s1,?_strstr
 11408  0177BE  C127  F127         	movff	strstr@s1+1,?_strstr+1
 11409                           
 11410                           ; BSR set to: 1
 11411  0177C2  0012               	return	
 11412  0177C4                     l2239:
 11413                           
 11414                           ; BSR set to: 1
 11415                           
 11416                           ; BSR set to: 1
 11417  0177C4  0E01               	movlw	1
 11418  0177C6  2526               	addwf	strstr@s1& (0+255),w,b
 11419  0177C8  6F17               	movwf	strchr@ptr& (0+255),b
 11420  0177CA  0E00               	movlw	0
 11421  0177CC  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 11422  0177CE  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 11423  0177D0  C128  FFF6         	movff	strstr@s2,tblptrl
 11424  0177D4  C129  FFF7         	movff	strstr@s2+1,tblptrh
 11425  0177D8                     	if	0	;tblptru may be non-zero
 11426  0177D8                     	endif
 11427  0177D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11428  0177D8  0E00               	movlw	low (__mediumconst shr (0+16))
 11429  0177DA  6EF8               	movwf	tblptru,c
 11430  0177DC                     	endif
 11431  0177DC  0008               	tblrd		*
 11432  0177DE  50F5               	movf	tablat,w,c
 11433  0177E0  6F19               	movwf	strchr@chr& (0+255),b
 11434  0177E2  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 11435  0177E4  ECEE  F0C1         	call	_strchr	;wreg free
 11436  0177E8  C117  F126         	movff	?_strchr,strstr@s1
 11437  0177EC  C118  F127         	movff	?_strchr+1,strstr@s1+1
 11438  0177F0                     l2237:
 11439  0177F0  0101               	movlb	1	; () banked
 11440  0177F2  5126               	movf	strstr@s1& (0+255),w,b
 11441  0177F4  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 11442  0177F6  B4D8               	btfsc	status,2,c
 11443  0177F8  D007               	goto	u24810
 11444                           
 11445                           ; BSR set to: 1
 11446  0177FA  C126  FFD9         	movff	strstr@s1,fsr2l
 11447  0177FE  C127  FFDA         	movff	strstr@s1+1,fsr2h
 11448  017802  50DF               	movf	indf2,w,c
 11449  017804  A4D8               	btfss	status,2,c
 11450  017806  D7C0               	goto	l2238
 11451  017808                     u24810:
 11452                           
 11453                           ; BSR set to: 1
 11454                           
 11455                           ; BSR set to: 1
 11456                           
 11457                           ; BSR set to: 1
 11458  017808  0E00               	movlw	0
 11459  01780A  6F26               	movwf	?_strstr& (0+255),b
 11460  01780C  0E00               	movlw	0
 11461  01780E  6F27               	movwf	(?_strstr+1)& (0+255),b
 11462  017810  0012               	return	
 11463  017812                     __end_of_strstr:
 11464                           	opt stack 0
 11465                           tblptru	equ	0xFF8
 11466                           tblptrh	equ	0xFF7
 11467                           tblptrl	equ	0xFF6
 11468                           tablat	equ	0xFF5
 11469                           intcon	equ	0xFF2
 11470                           postinc0	equ	0xFEE
 11471                           wreg	equ	0xFE8
 11472                           indf1	equ	0xFE7
 11473                           postdec1	equ	0xFE5
 11474                           fsr1h	equ	0xFE2
 11475                           fsr1l	equ	0xFE1
 11476                           indf2	equ	0xFDF
 11477                           postinc2	equ	0xFDE
 11478                           fsr2h	equ	0xFDA
 11479                           fsr2l	equ	0xFD9
 11480                           status	equ	0xFD8
 11481                           
 11482 ;; *************** function _strncmp *****************
 11483 ;; Defined at:
 11484 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 11485 ;; Parameters:    Size  Location     Type
 11486 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 11487 ;;		 -> NULL(0), line(64), 
 11488 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 11489 ;;		 -> STR_109(25), 
 11490 ;;  len             2   33[BANK1 ] unsigned int 
 11491 ;; Auto vars:     Size  Location     Type
 11492 ;;		None
 11493 ;; Return value:  Size  Location     Type
 11494 ;;                  2   29[BANK1 ] int 
 11495 ;; Registers used:
 11496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11497 ;; Tracked objects:
 11498 ;;		On entry : 0/0
 11499 ;;		On exit  : 0/0
 11500 ;;		Unchanged: 0/0
 11501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11502 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11504 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11505 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11506 ;;Total ram usage:        9 bytes
 11507 ;; Hardware stack levels used:    1
 11508 ;; Hardware stack levels required when called:   13
 11509 ;; This function calls:
 11510 ;;		Nothing
 11511 ;; This function is called by:
 11512 ;;		_strstr
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           	psect	text10
 11517  0176F6                     __ptext10:
 11518                           	opt stack 0
 11519  0176F6                     _strncmp:
 11520                           	opt stack 14
 11521                           
 11522                           ; BSR set to: 1
 11523                           ;incstack = 0
 11524  0176F6  D039               	goto	l2296
 11525  0176F8                     l18306:
 11526  0176F8  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11527  0176FC  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11528  017700  50DF               	movf	indf2,w,c
 11529  017702  B4D8               	btfsc	status,2,c
 11530  017704  D012               	goto	u24690
 11531  017706  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11532  01770A  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11533  01770E  50DF               	movf	indf2,w,c
 11534  017710  0101               	movlb	1	; () banked
 11535  017712  6F23               	movwf	??_strncmp& (0+255),b
 11536  017714  C11F  FFF6         	movff	strncmp@s2,tblptrl
 11537  017718  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 11538  01771C                     	if	0	;tblptru may be non-zero
 11539  01771C                     	endif
 11540  01771C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11541  01771C  0E00               	movlw	low (__mediumconst shr (0+16))
 11542  01771E  6EF8               	movwf	tblptru,c
 11543  017720                     	endif
 11544  017720  0008               	tblrd		*
 11545  017722  50F5               	movf	tablat,w,c
 11546  017724  1923               	xorwf	??_strncmp& (0+255),w,b
 11547  017726  B4D8               	btfsc	status,2,c
 11548  017728  D01C               	goto	l2298
 11549  01772A                     u24690:
 11550                           
 11551                           ; BSR set to: 1
 11552  01772A  C11F  FFF6         	movff	strncmp@s2,tblptrl
 11553  01772E  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 11554  017732                     	if	0	;tblptru may be non-zero
 11555  017732                     	endif
 11556  017732                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11557  017732  0E00               	movlw	low (__mediumconst shr (0+16))
 11558  017734  6EF8               	movwf	tblptru,c
 11559  017736                     	endif
 11560  017736  0008               	tblrd		*
 11561  017738  50F5               	movf	tablat,w,c
 11562  01773A  0101               	movlb	1	; () banked
 11563  01773C  6F23               	movwf	??_strncmp& (0+255),b
 11564  01773E  6B24               	clrf	(??_strncmp+1)& (0+255),b
 11565  017740  1F23               	comf	??_strncmp& (0+255),f,b
 11566  017742  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 11567  017744  4B23               	infsnz	??_strncmp& (0+255),f,b
 11568  017746  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 11569  017748  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11570  01774C  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11571  017750  50DF               	movf	indf2,w,c
 11572  017752  6F25               	movwf	(??_strncmp+2)& (0+255),b
 11573  017754  5125               	movf	(??_strncmp+2)& (0+255),w,b
 11574  017756  2523               	addwf	??_strncmp& (0+255),w,b
 11575  017758  6F1D               	movwf	?_strncmp& (0+255),b
 11576  01775A  0E00               	movlw	0
 11577  01775C  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 11578  01775E  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 11579                           
 11580                           ; BSR set to: 1
 11581  017760  0012               	return	
 11582  017762                     l2298:
 11583                           
 11584                           ; BSR set to: 1
 11585                           
 11586                           ; BSR set to: 1
 11587  017762  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 11588  017764  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 11589  017766  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 11590  017768  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 11591  01776A                     l2296:
 11592                           
 11593                           ; BSR set to: 1
 11594  01776A  0101               	movlb	1	; () banked
 11595  01776C  0721               	decf	strncmp@len& (0+255),f,b
 11596  01776E  A0D8               	btfss	status,0,c
 11597  017770  0722               	decf	(strncmp@len+1)& (0+255),f,b
 11598  017772  2921               	incf	strncmp@len& (0+255),w,b
 11599  017774  E1C1               	bnz	l18306
 11600  017776  2922               	incf	(strncmp@len+1)& (0+255),w,b
 11601  017778  A4D8               	btfss	status,2,c
 11602  01777A  D7BE               	goto	l2297
 11603                           
 11604                           ; BSR set to: 1
 11605                           
 11606                           ; BSR set to: 1
 11607  01777C  0E00               	movlw	0
 11608  01777E  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 11609  017780  0E00               	movlw	0
 11610  017782  6F1D               	movwf	?_strncmp& (0+255),b
 11611  017784  0012               	return	
 11612  017786                     __end_of_strncmp:
 11613                           	opt stack 0
 11614                           tblptru	equ	0xFF8
 11615                           tblptrh	equ	0xFF7
 11616                           tblptrl	equ	0xFF6
 11617                           tablat	equ	0xFF5
 11618                           intcon	equ	0xFF2
 11619                           postinc0	equ	0xFEE
 11620                           wreg	equ	0xFE8
 11621                           indf1	equ	0xFE7
 11622                           postdec1	equ	0xFE5
 11623                           fsr1h	equ	0xFE2
 11624                           fsr1l	equ	0xFE1
 11625                           indf2	equ	0xFDF
 11626                           postinc2	equ	0xFDE
 11627                           fsr2h	equ	0xFDA
 11628                           fsr2l	equ	0xFD9
 11629                           status	equ	0xFD8
 11630                           
 11631 ;; *************** function _strlen *****************
 11632 ;; Defined at:
 11633 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 11636 ;;		 -> STR_109(25), line(64), 
 11637 ;; Auto vars:     Size  Location     Type
 11638 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 11639 ;;		 -> STR_109(25), line(64), 
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  2   23[BANK1 ] unsigned int 
 11642 ;; Registers used:
 11643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11649 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11650 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11651 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11652 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11653 ;;Total ram usage:        6 bytes
 11654 ;; Hardware stack levels used:    1
 11655 ;; Hardware stack levels required when called:   13
 11656 ;; This function calls:
 11657 ;;		Nothing
 11658 ;; This function is called by:
 11659 ;;		_terminal_ringBufferPull
 11660 ;;		_strstr
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664                           	psect	text11
 11665  017F52                     __ptext11:
 11666                           	opt stack 0
 11667  017F52                     _strlen:
 11668                           	opt stack 16
 11669                           
 11670                           ; BSR set to: 1
 11671                           ;incstack = 0
 11672  017F52  C117  F11B         	movff	strlen@s,strlen@cp
 11673  017F56  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 11674  017F5A  D003               	goto	l2215
 11675  017F5C  0101               	movlb	1	; () banked
 11676  017F5E  4B1B               	infsnz	strlen@cp& (0+255),f,b
 11677  017F60  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 11678  017F62                     l2215:
 11679                           
 11680                           ; BSR set to: 1
 11681  017F62  C11B  FFF6         	movff	strlen@cp,tblptrl
 11682  017F66  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 11683  017F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 11684  017F6C  6EF8               	movwf	tblptru,c
 11685  017F6E  0E0D               	movlw	(high __ramtop+-1)
 11686  017F70  64F7               	cpfsgt	tblptrh,c
 11687  017F72  D003               	bra	u24667
 11688  017F74  0008               	tblrd		*
 11689  017F76  50F5               	movf	tablat,w,c
 11690  017F78  D005               	bra	u24660
 11691  017F7A                     u24667:
 11692  017F7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 11693  017F7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 11694  017F82  50EF               	movf	indf0,w,c
 11695  017F84                     u24660:
 11696  017F84  0900               	iorlw	0
 11697  017F86  A4D8               	btfss	status,2,c
 11698  017F88  D7E9               	goto	l2216
 11699  017F8A  C117  F119         	movff	strlen@s,??_strlen
 11700  017F8E  C118  F11A         	movff	strlen@s+1,??_strlen+1
 11701  017F92  0101               	movlb	1	; () banked
 11702  017F94  1F19               	comf	??_strlen& (0+255),f,b
 11703  017F96  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 11704  017F98  4B19               	infsnz	??_strlen& (0+255),f,b
 11705  017F9A  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 11706  017F9C  511B               	movf	strlen@cp& (0+255),w,b
 11707  017F9E  2519               	addwf	??_strlen& (0+255),w,b
 11708  017FA0  6F17               	movwf	?_strlen& (0+255),b
 11709  017FA2  511C               	movf	(strlen@cp+1)& (0+255),w,b
 11710  017FA4  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 11711  017FA6  6F18               	movwf	(?_strlen+1)& (0+255),b
 11712  017FA8  0012               	return	
 11713  017FAA                     __end_of_strlen:
 11714                           	opt stack 0
 11715                           tblptru	equ	0xFF8
 11716                           tblptrh	equ	0xFF7
 11717                           tblptrl	equ	0xFF6
 11718                           tablat	equ	0xFF5
 11719                           intcon	equ	0xFF2
 11720                           indf0	equ	0xFEF
 11721                           postinc0	equ	0xFEE
 11722                           fsr0h	equ	0xFEA
 11723                           fsr0l	equ	0xFE9
 11724                           wreg	equ	0xFE8
 11725                           indf1	equ	0xFE7
 11726                           postdec1	equ	0xFE5
 11727                           fsr1h	equ	0xFE2
 11728                           fsr1l	equ	0xFE1
 11729                           indf2	equ	0xFDF
 11730                           postinc2	equ	0xFDE
 11731                           fsr2h	equ	0xFDA
 11732                           fsr2l	equ	0xFD9
 11733                           status	equ	0xFD8
 11734                           
 11735 ;; *************** function _strchr *****************
 11736 ;; Defined at:
 11737 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 11738 ;; Parameters:    Size  Location     Type
 11739 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 11740 ;;		 -> NULL(0), line(64), 
 11741 ;;  chr             2   25[BANK1 ] int 
 11742 ;; Auto vars:     Size  Location     Type
 11743 ;;		None
 11744 ;; Return value:  Size  Location     Type
 11745 ;;                  2   23[BANK1 ] PTR unsigned char 
 11746 ;; Registers used:
 11747 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11748 ;; Tracked objects:
 11749 ;;		On entry : 0/0
 11750 ;;		On exit  : 0/0
 11751 ;;		Unchanged: 0/0
 11752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11753 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11755 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11756 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11757 ;;Total ram usage:        5 bytes
 11758 ;; Hardware stack levels used:    1
 11759 ;; Hardware stack levels required when called:   13
 11760 ;; This function calls:
 11761 ;;		Nothing
 11762 ;; This function is called by:
 11763 ;;		_strstr
 11764 ;; This function uses a non-reentrant model
 11765 ;;
 11766                           
 11767                           	psect	text12
 11768  0183DC                     __ptext12:
 11769                           	opt stack 0
 11770  0183DC                     _strchr:
 11771                           	opt stack 14
 11772                           
 11773                           ; BSR set to: 1
 11774                           ;incstack = 0
 11775  0183DC  C117  FFD9         	movff	strchr@ptr,fsr2l
 11776  0183E0  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11777  0183E4  0101               	movlb	1	; () banked
 11778  0183E6  5119               	movf	strchr@chr& (0+255),w,b
 11779  0183E8  18DE               	xorwf	postinc2,w,c
 11780  0183EA  A4D8               	btfss	status,2,c
 11781  0183EC  D005               	goto	l2291
 11782                           
 11783                           ; BSR set to: 1
 11784  0183EE  C117  F117         	movff	strchr@ptr,?_strchr
 11785  0183F2  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 11786                           
 11787                           ; BSR set to: 1
 11788  0183F6  0012               	return	
 11789  0183F8                     l2291:
 11790                           
 11791                           ; BSR set to: 1
 11792                           
 11793                           ; BSR set to: 1
 11794  0183F8  C117  FFD9         	movff	strchr@ptr,fsr2l
 11795  0183FC  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11796  018400  4B17               	infsnz	strchr@ptr& (0+255),f,b
 11797  018402  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 11798  018404  50DF               	movf	indf2,w,c
 11799  018406  A4D8               	btfss	status,2,c
 11800  018408  D7E9               	goto	_strchr
 11801                           
 11802                           ; BSR set to: 1
 11803                           
 11804                           ; BSR set to: 1
 11805  01840A  0E00               	movlw	0
 11806  01840C  6F17               	movwf	?_strchr& (0+255),b
 11807  01840E  0E00               	movlw	0
 11808  018410  6F18               	movwf	(?_strchr+1)& (0+255),b
 11809  018412  0012               	return	
 11810  018414                     __end_of_strchr:
 11811                           	opt stack 0
 11812                           tblptru	equ	0xFF8
 11813                           tblptrh	equ	0xFF7
 11814                           tblptrl	equ	0xFF6
 11815                           tablat	equ	0xFF5
 11816                           intcon	equ	0xFF2
 11817                           indf0	equ	0xFEF
 11818                           postinc0	equ	0xFEE
 11819                           fsr0h	equ	0xFEA
 11820                           fsr0l	equ	0xFE9
 11821                           wreg	equ	0xFE8
 11822                           indf1	equ	0xFE7
 11823                           postdec1	equ	0xFE5
 11824                           fsr1h	equ	0xFE2
 11825                           fsr1l	equ	0xFE1
 11826                           indf2	equ	0xFDF
 11827                           postinc2	equ	0xFDE
 11828                           fsr2h	equ	0xFDA
 11829                           fsr2l	equ	0xFD9
 11830                           status	equ	0xFD8
 11831                           
 11832 ;; *************** function _strcpy *****************
 11833 ;; Defined at:
 11834 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 11835 ;; Parameters:    Size  Location     Type
 11836 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11837 ;;		 -> ringBufferLUT@channel_name(22), 
 11838 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11839 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 11840 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 11843 ;;		 -> ringBufferLUT@channel_name(22), 
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  2   23[BANK1 ] PTR unsigned char 
 11846 ;; Registers used:
 11847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11853 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11854 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11856 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11857 ;;Total ram usage:        6 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; Hardware stack levels required when called:   13
 11860 ;; This function calls:
 11861 ;;		Nothing
 11862 ;; This function is called by:
 11863 ;;		_ringBufferLUT
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           	psect	text13
 11868  018414                     __ptext13:
 11869                           	opt stack 0
 11870  018414                     _strcpy:
 11871                           	opt stack 15
 11872                           
 11873                           ; BSR set to: 1
 11874                           ;incstack = 0
 11875  018414  C117  F11B         	movff	strcpy@to,strcpy@cp
 11876  018418  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 11877  01841C  D005               	goto	l2209
 11878  01841E  0101               	movlb	1	; () banked
 11879  018420  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 11880  018422  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 11881  018424  4B19               	infsnz	strcpy@from& (0+255),f,b
 11882  018426  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 11883  018428                     l2209:
 11884                           
 11885                           ; BSR set to: 1
 11886  018428  C119  FFF6         	movff	strcpy@from,tblptrl
 11887  01842C  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 11888  018430                     	if	0	;tblptru may be non-zero
 11889  018430                     	endif
 11890  018430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11891  018430  0E00               	movlw	low (__mediumconst shr (0+16))
 11892  018432  6EF8               	movwf	tblptru,c
 11893  018434                     	endif
 11894  018434  C11B  FFD9         	movff	strcpy@cp,fsr2l
 11895  018438  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 11896  01843C  0008               	tblrd		*
 11897  01843E  CFF5 FFDF          	movff	tablat,indf2
 11898  018442  50DF               	movf	indf2,w,c
 11899  018444  B4D8               	btfsc	status,2,c
 11900  018446  0012               	return	
 11901  018448  D7EA               	goto	l2210
 11902  01844A                     __end_of_strcpy:
 11903                           	opt stack 0
 11904                           tblptru	equ	0xFF8
 11905                           tblptrh	equ	0xFF7
 11906                           tblptrl	equ	0xFF6
 11907                           tablat	equ	0xFF5
 11908                           intcon	equ	0xFF2
 11909                           indf0	equ	0xFEF
 11910                           postinc0	equ	0xFEE
 11911                           fsr0h	equ	0xFEA
 11912                           fsr0l	equ	0xFE9
 11913                           wreg	equ	0xFE8
 11914                           indf1	equ	0xFE7
 11915                           postdec1	equ	0xFE5
 11916                           fsr1h	equ	0xFE2
 11917                           fsr1l	equ	0xFE1
 11918                           indf2	equ	0xFDF
 11919                           postinc2	equ	0xFDE
 11920                           fsr2h	equ	0xFDA
 11921                           fsr2l	equ	0xFD9
 11922                           status	equ	0xFD8
 11923                           
 11924 ;; *************** function _strcmp *****************
 11925 ;; Defined at:
 11926 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 11929 ;;		 -> line(64), 
 11930 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 11931 ;;		 -> STR_120(5), STR_118(14), STR_116(16), STR_107(13), 
 11932 ;;		 -> STR_103(17), STR_100(14), STR_98(12), STR_96(16), 
 11933 ;;		 -> STR_94(15), STR_92(15), STR_90(21), STR_88(21), 
 11934 ;;		 -> STR_86(26), STR_84(14), STR_82(13), STR_80(18), 
 11935 ;;		 -> STR_78(15), STR_76(16), STR_73(17), STR_71(16), 
 11936 ;;		 -> STR_60(11), STR_57(10), STR_55(13), STR_53(11), 
 11937 ;;		 -> STR_50(4), STR_49(6), STR_47(16), STR_44(6), 
 11938 ;;		 -> STR_41(6), 
 11939 ;; Auto vars:     Size  Location     Type
 11940 ;;  r               1   28[BANK1 ] char 
 11941 ;; Return value:  Size  Location     Type
 11942 ;;                  2   23[BANK1 ] int 
 11943 ;; Registers used:
 11944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11945 ;; Tracked objects:
 11946 ;;		On entry : 0/0
 11947 ;;		On exit  : 0/0
 11948 ;;		Unchanged: 0/0
 11949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11950 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11951 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11952 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11953 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11954 ;;Total ram usage:        6 bytes
 11955 ;; Hardware stack levels used:    1
 11956 ;; Hardware stack levels required when called:   13
 11957 ;; This function calls:
 11958 ;;		Nothing
 11959 ;; This function is called by:
 11960 ;;		_ringBufferLUT
 11961 ;; This function uses a non-reentrant model
 11962 ;;
 11963                           
 11964                           	psect	text14
 11965  017FFC                     __ptext14:
 11966                           	opt stack 0
 11967  017FFC                     _strcmp:
 11968                           	opt stack 15
 11969                           
 11970                           ;incstack = 0
 11971  017FFC  D005               	goto	l2201
 11972  017FFE  0101               	movlb	1	; () banked
 11973  018000  4B17               	infsnz	strcmp@s1& (0+255),f,b
 11974  018002  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 11975  018004  4B19               	infsnz	strcmp@s2& (0+255),f,b
 11976  018006  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 11977  018008                     l2201:
 11978                           
 11979                           ; BSR set to: 1
 11980  018008  C117  FFD9         	movff	strcmp@s1,fsr2l
 11981  01800C  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11982  018010  50DF               	movf	indf2,w,c
 11983  018012  0101               	movlb	1	; () banked
 11984  018014  6F1B               	movwf	??_strcmp& (0+255),b
 11985  018016  C119  FFF6         	movff	strcmp@s2,tblptrl
 11986  01801A  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 11987  01801E                     	if	0	;tblptru may be non-zero
 11988  01801E                     	endif
 11989  01801E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11990  01801E  0E00               	movlw	low (__mediumconst shr (0+16))
 11991  018020  6EF8               	movwf	tblptru,c
 11992  018022                     	endif
 11993  018022  0008               	tblrd		*
 11994  018024  50F5               	movf	tablat,w,c
 11995  018026  0800               	sublw	0
 11996  018028  251B               	addwf	??_strcmp& (0+255),w,b
 11997  01802A  6F1C               	movwf	strcmp@r& (0+255),b
 11998  01802C  511C               	movf	strcmp@r& (0+255),w,b
 11999  01802E  A4D8               	btfss	status,2,c
 12000  018030  D007               	goto	u24740
 12001                           
 12002                           ; BSR set to: 1
 12003  018032  C117  FFD9         	movff	strcmp@s1,fsr2l
 12004  018036  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 12005  01803A  50DF               	movf	indf2,w,c
 12006  01803C  A4D8               	btfss	status,2,c
 12007  01803E  D7DF               	goto	l2202
 12008  018040                     u24740:
 12009                           
 12010                           ; BSR set to: 1
 12011                           
 12012                           ; BSR set to: 1
 12013                           
 12014                           ; BSR set to: 1
 12015  018040  511C               	movf	strcmp@r& (0+255),w,b
 12016  018042  6F17               	movwf	?_strcmp& (0+255),b
 12017  018044  6B18               	clrf	(?_strcmp+1)& (0+255),b
 12018  018046  BF17               	btfsc	?_strcmp& (0+255),7,b
 12019  018048  0718               	decf	(?_strcmp+1)& (0+255),f,b
 12020  01804A  0012               	return	
 12021  01804C                     __end_of_strcmp:
 12022                           	opt stack 0
 12023                           tblptru	equ	0xFF8
 12024                           tblptrh	equ	0xFF7
 12025                           tblptrl	equ	0xFF6
 12026                           tablat	equ	0xFF5
 12027                           intcon	equ	0xFF2
 12028                           indf0	equ	0xFEF
 12029                           postinc0	equ	0xFEE
 12030                           fsr0h	equ	0xFEA
 12031                           fsr0l	equ	0xFE9
 12032                           wreg	equ	0xFE8
 12033                           indf1	equ	0xFE7
 12034                           postdec1	equ	0xFE5
 12035                           fsr1h	equ	0xFE2
 12036                           fsr1l	equ	0xFE1
 12037                           indf2	equ	0xFDF
 12038                           postinc2	equ	0xFDE
 12039                           fsr2h	equ	0xFDA
 12040                           fsr2l	equ	0xFD9
 12041                           status	equ	0xFD8
 12042                           
 12043 ;; *************** function _getUserID *****************
 12044 ;; Defined at:
 12045 ;;		line 65 in file "device_IDs.c"
 12046 ;; Parameters:    Size  Location     Type
 12047 ;;  inputUserID     1    wreg     unsigned char 
 12048 ;; Auto vars:     Size  Location     Type
 12049 ;;  inputUserID     1   36[BANK1 ] unsigned char 
 12050 ;;  initialOffse    4   37[BANK1 ] unsigned long 
 12051 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  2   34[BANK1 ] unsigned int 
 12054 ;; Registers used:
 12055 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12056 ;; Tracked objects:
 12057 ;;		On entry : 0/0
 12058 ;;		On exit  : 0/0
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12061 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12062 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12064 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12065 ;;Total ram usage:        8 bytes
 12066 ;; Hardware stack levels used:    1
 12067 ;; Hardware stack levels required when called:   15
 12068 ;; This function calls:
 12069 ;;		_FLASH_ReadWord
 12070 ;; This function is called by:
 12071 ;;		_ringBufferLUT
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075                           	psect	text15
 12076  01829E                     __ptext15:
 12077                           	opt stack 0
 12078  01829E                     _getUserID:
 12079                           	opt stack 13
 12080                           
 12081                           ; BSR set to: 1
 12082                           ;incstack = 0
 12083                           ;getUserID@inputUserID stored from wreg
 12084  01829E  0101               	movlb	1	; () banked
 12085  0182A0  6F24               	movwf	getUserID@inputUserID& (0+255),b
 12086                           
 12087                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 12088  0182A2  0E00               	movlw	0
 12089  0182A4  0101               	movlb	1	; () banked
 12090  0182A6  6F25               	movwf	getUserID@initialOffset& (0+255),b
 12091  0182A8  0E00               	movlw	0
 12092  0182AA  6F26               	movwf	(getUserID@initialOffset+1)& (0+255),b
 12093  0182AC  0E20               	movlw	32
 12094  0182AE  6F27               	movwf	(getUserID@initialOffset+2)& (0+255),b
 12095  0182B0  0E00               	movlw	0
 12096  0182B2  6F28               	movwf	(getUserID@initialOffset+3)& (0+255),b
 12097                           
 12098                           ; BSR set to: 1
 12099                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 12100  0182B4  5124               	movf	getUserID@inputUserID& (0+255),w,b
 12101  0182B6  0D02               	mullw	2
 12102  0182B8  CFF3 F129          	movff	prodl,getUserID@IDOffset
 12103                           
 12104                           ; BSR set to: 1
 12105                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 12106  0182BC  5129               	movf	getUserID@IDOffset& (0+255),w,b
 12107  0182BE  2525               	addwf	getUserID@initialOffset& (0+255),w,b
 12108  0182C0  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12109  0182C2  0E00               	movlw	0
 12110  0182C4  2126               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 12111  0182C6  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12112  0182C8  0E00               	movlw	0
 12113  0182CA  2127               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 12114  0182CC  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12115  0182CE  0E00               	movlw	0
 12116  0182D0  2128               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 12117  0182D2  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12118  0182D4  EC71  F0C1         	call	_FLASH_ReadWord	;wreg free
 12119  0182D8  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 12120  0182DC  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 12121  0182E0  0012               	return	
 12122  0182E2                     __end_of_getUserID:
 12123                           	opt stack 0
 12124                           tblptru	equ	0xFF8
 12125                           tblptrh	equ	0xFF7
 12126                           tblptrl	equ	0xFF6
 12127                           tablat	equ	0xFF5
 12128                           prodl	equ	0xFF3
 12129                           intcon	equ	0xFF2
 12130                           indf0	equ	0xFEF
 12131                           postinc0	equ	0xFEE
 12132                           fsr0h	equ	0xFEA
 12133                           fsr0l	equ	0xFE9
 12134                           wreg	equ	0xFE8
 12135                           indf1	equ	0xFE7
 12136                           postdec1	equ	0xFE5
 12137                           fsr1h	equ	0xFE2
 12138                           fsr1l	equ	0xFE1
 12139                           indf2	equ	0xFDF
 12140                           postinc2	equ	0xFDE
 12141                           fsr2h	equ	0xFDA
 12142                           fsr2l	equ	0xFD9
 12143                           status	equ	0xFD8
 12144                           
 12145 ;; *************** function _getMinorRevisionID *****************
 12146 ;; Defined at:
 12147 ;;		line 23 in file "device_IDs.c"
 12148 ;; Parameters:    Size  Location     Type
 12149 ;;		None
 12150 ;; Auto vars:     Size  Location     Type
 12151 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 12152 ;; Return value:  Size  Location     Type
 12153 ;;                  1    wreg      unsigned char 
 12154 ;; Registers used:
 12155 ;;		wreg, status,2, status,0, cstack
 12156 ;; Tracked objects:
 12157 ;;		On entry : 0/0
 12158 ;;		On exit  : 0/0
 12159 ;;		Unchanged: 0/0
 12160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12162 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12164 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12165 ;;Total ram usage:        2 bytes
 12166 ;; Hardware stack levels used:    1
 12167 ;; Hardware stack levels required when called:   15
 12168 ;; This function calls:
 12169 ;;		_FLASH_ReadWord
 12170 ;; This function is called by:
 12171 ;;		_ringBufferLUT
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175                           	psect	text16
 12176  018678                     __ptext16:
 12177                           	opt stack 0
 12178  018678                     _getMinorRevisionID:
 12179                           	opt stack 13
 12180                           
 12181                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 12182                           
 12183                           ;incstack = 0
 12184  018678  0EFC               	movlw	252
 12185  01867A  0101               	movlb	1	; () banked
 12186  01867C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12187  01867E  0EFF               	movlw	255
 12188  018680  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12189  018682  0E3F               	movlw	63
 12190  018684  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12191  018686  0E00               	movlw	0
 12192  018688  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12193  01868A  EC71  F0C1         	call	_FLASH_ReadWord	;wreg free
 12194  01868E  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 12195  018692  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 12196                           
 12197                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 12198  018696  0101               	movlb	1	; () banked
 12199  018698  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 12200  01869A  0B1F               	andlw	31
 12201  01869C  0012               	return	
 12202  01869E                     __end_of_getMinorRevisionID:
 12203                           	opt stack 0
 12204                           tblptru	equ	0xFF8
 12205                           tblptrh	equ	0xFF7
 12206                           tblptrl	equ	0xFF6
 12207                           tablat	equ	0xFF5
 12208                           prodl	equ	0xFF3
 12209                           intcon	equ	0xFF2
 12210                           indf0	equ	0xFEF
 12211                           postinc0	equ	0xFEE
 12212                           fsr0h	equ	0xFEA
 12213                           fsr0l	equ	0xFE9
 12214                           wreg	equ	0xFE8
 12215                           indf1	equ	0xFE7
 12216                           postdec1	equ	0xFE5
 12217                           fsr1h	equ	0xFE2
 12218                           fsr1l	equ	0xFE1
 12219                           indf2	equ	0xFDF
 12220                           postinc2	equ	0xFDE
 12221                           fsr2h	equ	0xFDA
 12222                           fsr2l	equ	0xFD9
 12223                           status	equ	0xFD8
 12224                           
 12225 ;; *************** function _getMajorRevisionID *****************
 12226 ;; Defined at:
 12227 ;;		line 12 in file "device_IDs.c"
 12228 ;; Parameters:    Size  Location     Type
 12229 ;;		None
 12230 ;; Auto vars:     Size  Location     Type
 12231 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 12232 ;; Return value:  Size  Location     Type
 12233 ;;                  1    wreg      unsigned char 
 12234 ;; Registers used:
 12235 ;;		wreg, status,2, status,0, cstack
 12236 ;; Tracked objects:
 12237 ;;		On entry : 0/0
 12238 ;;		On exit  : 0/0
 12239 ;;		Unchanged: 0/0
 12240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12242 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12243 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12244 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12245 ;;Total ram usage:        5 bytes
 12246 ;; Hardware stack levels used:    1
 12247 ;; Hardware stack levels required when called:   15
 12248 ;; This function calls:
 12249 ;;		_FLASH_ReadWord
 12250 ;; This function is called by:
 12251 ;;		_ringBufferLUT
 12252 ;; This function uses a non-reentrant model
 12253 ;;
 12254                           
 12255                           	psect	text17
 12256  018364                     __ptext17:
 12257                           	opt stack 0
 12258  018364                     _getMajorRevisionID:
 12259                           	opt stack 13
 12260                           
 12261                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 12262                           
 12263                           ; BSR set to: 1
 12264                           ;incstack = 0
 12265  018364  0EFC               	movlw	252
 12266  018366  0101               	movlb	1	; () banked
 12267  018368  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12268  01836A  0EFF               	movlw	255
 12269  01836C  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12270  01836E  0E3F               	movlw	63
 12271  018370  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12272  018372  0E00               	movlw	0
 12273  018374  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12274  018376  EC71  F0C1         	call	_FLASH_ReadWord	;wreg free
 12275  01837A  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 12276  01837E  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 12277                           
 12278                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 12279  018382  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 12280  018386  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 12281  01838A  0E06               	movlw	6
 12282  01838C  0101               	movlb	1	; () banked
 12283  01838E  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 12284  018390                     u24775:
 12285  018390  90D8               	bcf	status,0,c
 12286  018392  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 12287  018394  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 12288  018396  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 12289  018398  D7FB               	goto	u24775
 12290  01839A  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 12291  01839C  0B1F               	andlw	31
 12292  01839E  0012               	return	
 12293  0183A0                     __end_of_getMajorRevisionID:
 12294                           	opt stack 0
 12295                           tblptru	equ	0xFF8
 12296                           tblptrh	equ	0xFF7
 12297                           tblptrl	equ	0xFF6
 12298                           tablat	equ	0xFF5
 12299                           prodl	equ	0xFF3
 12300                           intcon	equ	0xFF2
 12301                           indf0	equ	0xFEF
 12302                           postinc0	equ	0xFEE
 12303                           fsr0h	equ	0xFEA
 12304                           fsr0l	equ	0xFE9
 12305                           wreg	equ	0xFE8
 12306                           indf1	equ	0xFE7
 12307                           postdec1	equ	0xFE5
 12308                           fsr1h	equ	0xFE2
 12309                           fsr1l	equ	0xFE1
 12310                           indf2	equ	0xFDF
 12311                           postinc2	equ	0xFDE
 12312                           fsr2h	equ	0xFDA
 12313                           fsr2l	equ	0xFD9
 12314                           status	equ	0xFD8
 12315                           
 12316 ;; *************** function _getDeviceIDString *****************
 12317 ;; Defined at:
 12318 ;;		line 34 in file "device_IDs.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 12323 ;;		 -> STR_129(10), STR_128(13), STR_127(12), 
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  2   36[BANK1 ] PTR inline unsigned char
 12326 ;; Registers used:
 12327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12333 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12334 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12335 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12336 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12337 ;;Total ram usage:       10 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; Hardware stack levels required when called:   13
 12340 ;; This function calls:
 12341 ;;		Nothing
 12342 ;; This function is called by:
 12343 ;;		_ringBufferLUT
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           	psect	text18
 12348  017E92                     __ptext18:
 12349                           	opt stack 0
 12350  017E92                     _getDeviceIDString:
 12351                           	opt stack 15
 12352                           
 12353                           ;device_IDs.c: 37: const char *strings[] = {
 12354                           ;device_IDs.c: 39: "PIC18F67K40",
 12355                           ;device_IDs.c: 40: "PIC18LF67K40",
 12356                           ;device_IDs.c: 41: "Undefined"
 12357                           ;device_IDs.c: 43: };
 12358                           
 12359                           ; BSR set to: 1
 12360                           ;incstack = 0
 12361  017E92  EE22  F0ED         	lfsr	2,getDeviceIDString@F17550
 12362  017E96  EE11  F028         	lfsr	1,getDeviceIDString@strings
 12363  017E9A  0E05               	movlw	5
 12364  017E9C                     u24761:
 12365  017E9C  CFDB FFE3          	movff	plusw2,plusw1
 12366  017EA0  06E8               	decf	wreg,f,c
 12367  017EA2  E2FC               	bc	u24761
 12368                           
 12369                           ;device_IDs.c: 47: switch (inputDevID) {
 12370  017EA4  D00F               	goto	l1289
 12371  017EA6                     
 12372                           ;device_IDs.c: 50: return strings[0];
 12373  017EA6  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 12374  017EAA  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 12375                           
 12376                           ;device_IDs.c: 51: break;
 12377  017EAE  0012               	return	
 12378  017EB0                     
 12379                           ;device_IDs.c: 54: return strings[1];
 12380  017EB0  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 12381  017EB4  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 12382                           
 12383                           ;device_IDs.c: 55: break;
 12384  017EB8  0012               	return	
 12385  017EBA                     
 12386                           ;device_IDs.c: 58: return strings[2];
 12387  017EBA  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 12388  017EBE  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 12389                           
 12390                           ;device_IDs.c: 61: }
 12391                           
 12392                           ;device_IDs.c: 59: break;
 12393  017EC2  0012               	return	
 12394  017EC4                     l1289:
 12395  017EC4  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 12396  017EC8  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 12397                           
 12398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12399                           ; Switch size 1, requested type "space"
 12400                           ; Number of cases is 2, Range of values is 106 to 107
 12401                           ; switch strategies available:
 12402                           ; Name         Instructions Cycles
 12403                           ; simple_byte            7     4 (average)
 12404                           ;	Chosen strategy is simple_byte
 12405  017ECC  0101               	movlb	1	; () banked
 12406  017ECE  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 12407  017ED0  0A6A               	xorlw	106	; case 106
 12408  017ED2  B4D8               	btfsc	status,2,c
 12409  017ED4  D004               	goto	l19054
 12410  017ED6  0A01               	xorlw	1	; case 107
 12411  017ED8  B4D8               	btfsc	status,2,c
 12412  017EDA  D006               	goto	l19056
 12413  017EDC  D7EE               	goto	l1294
 12414  017EDE                     l19054:
 12415                           
 12416                           ; BSR set to: 1
 12417                           ; Switch size 1, requested type "space"
 12418                           ; Number of cases is 1, Range of values is 192 to 192
 12419                           ; switch strategies available:
 12420                           ; Name         Instructions Cycles
 12421                           ; simple_byte            4     3 (average)
 12422                           ;	Chosen strategy is simple_byte
 12423  017EDE  5126               	movf	??_getDeviceIDString& (0+255),w,b
 12424  017EE0  0AC0               	xorlw	192	; case 192
 12425  017EE2  B4D8               	btfsc	status,2,c
 12426  017EE4  D7E0               	goto	l1290
 12427  017EE6  D7E9               	goto	l1294
 12428  017EE8                     l19056:
 12429                           
 12430                           ; BSR set to: 1
 12431                           ; Switch size 1, requested type "space"
 12432                           ; Number of cases is 1, Range of values is 32 to 32
 12433                           ; switch strategies available:
 12434                           ; Name         Instructions Cycles
 12435                           ; simple_byte            4     3 (average)
 12436                           ;	Chosen strategy is simple_byte
 12437  017EE8  5126               	movf	??_getDeviceIDString& (0+255),w,b
 12438  017EEA  0A20               	xorlw	32	; case 32
 12439  017EEC  B4D8               	btfsc	status,2,c
 12440  017EEE  D7E0               	goto	l1293
 12441  017EF0  D7E4               	goto	l1294
 12442  017EF2                     __end_of_getDeviceIDString:
 12443                           	opt stack 0
 12444                           tblptru	equ	0xFF8
 12445                           tblptrh	equ	0xFF7
 12446                           tblptrl	equ	0xFF6
 12447                           tablat	equ	0xFF5
 12448                           prodl	equ	0xFF3
 12449                           intcon	equ	0xFF2
 12450                           indf0	equ	0xFEF
 12451                           postinc0	equ	0xFEE
 12452                           fsr0h	equ	0xFEA
 12453                           fsr0l	equ	0xFE9
 12454                           wreg	equ	0xFE8
 12455                           indf1	equ	0xFE7
 12456                           postdec1	equ	0xFE5
 12457                           plusw1	equ	0xFE3
 12458                           fsr1h	equ	0xFE2
 12459                           fsr1l	equ	0xFE1
 12460                           indf2	equ	0xFDF
 12461                           postinc2	equ	0xFDE
 12462                           plusw2	equ	0xFDB
 12463                           fsr2h	equ	0xFDA
 12464                           fsr2l	equ	0xFD9
 12465                           status	equ	0xFD8
 12466                           
 12467 ;; *************** function _getDeviceID *****************
 12468 ;; Defined at:
 12469 ;;		line 4 in file "device_IDs.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;		None
 12472 ;; Auto vars:     Size  Location     Type
 12473 ;;		None
 12474 ;; Return value:  Size  Location     Type
 12475 ;;                  2   34[BANK1 ] unsigned int 
 12476 ;; Registers used:
 12477 ;;		wreg, status,2, status,0, cstack
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12483 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12486 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12487 ;;Total ram usage:        2 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; Hardware stack levels required when called:   15
 12490 ;; This function calls:
 12491 ;;		_FLASH_ReadWord
 12492 ;; This function is called by:
 12493 ;;		_ringBufferLUT
 12494 ;; This function uses a non-reentrant model
 12495 ;;
 12496                           
 12497                           	psect	text19
 12498  018730                     __ptext19:
 12499                           	opt stack 0
 12500  018730                     _getDeviceID:
 12501                           	opt stack 13
 12502                           
 12503                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 12504                           
 12505                           ;incstack = 0
 12506  018730  0EFE               	movlw	254
 12507  018732  0101               	movlb	1	; () banked
 12508  018734  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12509  018736  0EFF               	movlw	255
 12510  018738  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12511  01873A  0E3F               	movlw	63
 12512  01873C  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12513  01873E  0E00               	movlw	0
 12514  018740  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12515  018742  EC71  F0C1         	call	_FLASH_ReadWord	;wreg free
 12516  018746  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 12517  01874A  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 12518  01874E  0012               	return	
 12519  018750                     __end_of_getDeviceID:
 12520                           	opt stack 0
 12521                           tblptru	equ	0xFF8
 12522                           tblptrh	equ	0xFF7
 12523                           tblptrl	equ	0xFF6
 12524                           tablat	equ	0xFF5
 12525                           prodl	equ	0xFF3
 12526                           intcon	equ	0xFF2
 12527                           indf0	equ	0xFEF
 12528                           postinc0	equ	0xFEE
 12529                           fsr0h	equ	0xFEA
 12530                           fsr0l	equ	0xFE9
 12531                           wreg	equ	0xFE8
 12532                           indf1	equ	0xFE7
 12533                           postdec1	equ	0xFE5
 12534                           plusw1	equ	0xFE3
 12535                           fsr1h	equ	0xFE2
 12536                           fsr1l	equ	0xFE1
 12537                           indf2	equ	0xFDF
 12538                           postinc2	equ	0xFDE
 12539                           plusw2	equ	0xFDB
 12540                           fsr2h	equ	0xFDA
 12541                           fsr2l	equ	0xFD9
 12542                           status	equ	0xFD8
 12543                           
 12544 ;; *************** function _FLASH_ReadWord *****************
 12545 ;; Defined at:
 12546 ;;		line 71 in file "mcc_generated_files/memory.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;		None
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  2   27[BANK1 ] unsigned int 
 12553 ;; Registers used:
 12554 ;;		wreg, status,2, status,0, cstack
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 0/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12560 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12562 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12563 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12564 ;;Total ram usage:        7 bytes
 12565 ;; Hardware stack levels used:    1
 12566 ;; Hardware stack levels required when called:   14
 12567 ;; This function calls:
 12568 ;;		_FLASH_ReadByte
 12569 ;; This function is called by:
 12570 ;;		_getDeviceID
 12571 ;;		_getMajorRevisionID
 12572 ;;		_getMinorRevisionID
 12573 ;;		_getUserID
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           	psect	text20
 12578  0182E2                     __ptext20:
 12579                           	opt stack 0
 12580  0182E2                     _FLASH_ReadWord:
 12581                           	opt stack 13
 12582                           
 12583                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 12584                           
 12585                           ;incstack = 0
 12586  0182E2  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 12587  0182E6  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 12588  0182EA  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 12589  0182EE  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 12590  0182F2  ECE1  F0C3         	call	_FLASH_ReadByte	;wreg free
 12591  0182F6  0101               	movlb	1	; () banked
 12592  0182F8  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 12593  0182FA  0E01               	movlw	1
 12594  0182FC  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 12595  0182FE  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 12596  018300  0E00               	movlw	0
 12597  018302  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 12598  018304  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 12599  018306  0E00               	movlw	0
 12600  018308  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 12601  01830A  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 12602  01830C  0E00               	movlw	0
 12603  01830E  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 12604  018310  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 12605  018312  ECE1  F0C3         	call	_FLASH_ReadByte	;wreg free
 12606  018316  0101               	movlb	1	; () banked
 12607  018318  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 12608  01831A  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 12609  01831C  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 12610  01831E  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 12611  018322  0012               	return	
 12612  018324                     __end_of_FLASH_ReadWord:
 12613                           	opt stack 0
 12614                           tblptru	equ	0xFF8
 12615                           tblptrh	equ	0xFF7
 12616                           tblptrl	equ	0xFF6
 12617                           tablat	equ	0xFF5
 12618                           prodl	equ	0xFF3
 12619                           intcon	equ	0xFF2
 12620                           indf0	equ	0xFEF
 12621                           postinc0	equ	0xFEE
 12622                           fsr0h	equ	0xFEA
 12623                           fsr0l	equ	0xFE9
 12624                           wreg	equ	0xFE8
 12625                           indf1	equ	0xFE7
 12626                           postdec1	equ	0xFE5
 12627                           plusw1	equ	0xFE3
 12628                           fsr1h	equ	0xFE2
 12629                           fsr1l	equ	0xFE1
 12630                           indf2	equ	0xFDF
 12631                           postinc2	equ	0xFDE
 12632                           plusw2	equ	0xFDB
 12633                           fsr2h	equ	0xFDA
 12634                           fsr2l	equ	0xFD9
 12635                           status	equ	0xFD8
 12636                           
 12637 ;; *************** function _FLASH_ReadByte *****************
 12638 ;; Defined at:
 12639 ;;		line 59 in file "mcc_generated_files/memory.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 12642 ;; Auto vars:     Size  Location     Type
 12643 ;;		None
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  1    wreg      unsigned char 
 12646 ;; Registers used:
 12647 ;;		wreg, status,2
 12648 ;; Tracked objects:
 12649 ;;		On entry : 0/0
 12650 ;;		On exit  : 0/0
 12651 ;;		Unchanged: 0/0
 12652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12653 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12656 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12657 ;;Total ram usage:        4 bytes
 12658 ;; Hardware stack levels used:    1
 12659 ;; Hardware stack levels required when called:   13
 12660 ;; This function calls:
 12661 ;;		Nothing
 12662 ;; This function is called by:
 12663 ;;		_FLASH_ReadWord
 12664 ;;		_FLASH_WriteByte
 12665 ;; This function uses a non-reentrant model
 12666 ;;
 12667                           
 12668                           	psect	text21
 12669  0187C2                     __ptext21:
 12670                           	opt stack 0
 12671  0187C2                     _FLASH_ReadByte:
 12672                           	opt stack 13
 12673                           
 12674                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 12675                           
 12676                           ; BSR set to: 1
 12677                           ;incstack = 0
 12678  0187C2  5077               	movf	3959,w,c	;volsfr
 12679  0187C4  0B3F               	andlw	-193
 12680  0187C6  0980               	iorlw	128
 12681  0187C8  6E77               	movwf	3959,c	;volsfr
 12682                           
 12683                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 12684  0187CA  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 12685                           
 12686                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 12687  0187CE  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 12688                           
 12689                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 12690  0187D2  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 12691  0187D6  0008               	tblrd		*	;# 
 12692                           
 12693                           ;memory.c: 68: return (TABLAT);
 12694  0187D8  50F5               	movf	tablat,w,c	;volatile
 12695  0187DA  0012               	return	
 12696  0187DC                     __end_of_FLASH_ReadByte:
 12697                           	opt stack 0
 12698                           tblptru	equ	0xFF8
 12699                           tblptrh	equ	0xFF7
 12700                           tblptrl	equ	0xFF6
 12701                           tablat	equ	0xFF5
 12702                           prodl	equ	0xFF3
 12703                           intcon	equ	0xFF2
 12704                           indf0	equ	0xFEF
 12705                           postinc0	equ	0xFEE
 12706                           fsr0h	equ	0xFEA
 12707                           fsr0l	equ	0xFE9
 12708                           wreg	equ	0xFE8
 12709                           indf1	equ	0xFE7
 12710                           postdec1	equ	0xFE5
 12711                           plusw1	equ	0xFE3
 12712                           fsr1h	equ	0xFE2
 12713                           fsr1l	equ	0xFE1
 12714                           indf2	equ	0xFDF
 12715                           postinc2	equ	0xFDE
 12716                           plusw2	equ	0xFDB
 12717                           fsr2h	equ	0xFDA
 12718                           fsr2l	equ	0xFD9
 12719                           status	equ	0xFD8
 12720                           
 12721 ;; *************** function _getCauseOfResetString *****************
 12722 ;; Defined at:
 12723 ;;		line 81 in file "cause_of_reset.c"
 12724 ;; Parameters:    Size  Location     Type
 12725 ;;  r               1    wreg     enum E17455
 12726 ;; Auto vars:     Size  Location     Type
 12727 ;;  r               1   25[BANK1 ] enum E17455
 12728 ;; Return value:  Size  Location     Type
 12729 ;;                  2   23[BANK1 ] PTR inline unsigned char
 12730 ;; Registers used:
 12731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12732 ;; Tracked objects:
 12733 ;;		On entry : 0/0
 12734 ;;		On exit  : 0/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12737 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12738 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12740 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12741 ;;Total ram usage:        3 bytes
 12742 ;; Hardware stack levels used:    1
 12743 ;; Hardware stack levels required when called:   13
 12744 ;; This function calls:
 12745 ;;		Nothing
 12746 ;; This function is called by:
 12747 ;;		_ringBufferLUT
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           	psect	text22
 12752  01851A                     __ptext22:
 12753                           	opt stack 0
 12754  01851A                     _getCauseOfResetString:
 12755                           	opt stack 15
 12756                           
 12757                           ;incstack = 0
 12758                           ;getCauseOfResetString@r stored from wreg
 12759  01851A  0101               	movlb	1	; () banked
 12760  01851C  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 12761                           
 12762                           ;cause_of_reset.c: 84: static char *strings[] = {
 12763                           ;cause_of_reset.c: 85: "Undefined Reset",
 12764                           ;cause_of_reset.c: 86: "Power On Reset",
 12765                           ;cause_of_reset.c: 87: "Brown Out Reset",
 12766                           ;cause_of_reset.c: 88: "Master Clear Reset",
 12767                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 12768                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 12769                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 12770                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 12771                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 12772                           ;cause_of_reset.c: 94: };
 12773  01851E  0E09               	movlw	9
 12774  018520  0101               	movlb	1	; () banked
 12775  018522  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 12776  018524  D00D               	goto	l1321
 12777                           
 12778                           ; BSR set to: 1
 12779                           ;cause_of_reset.c: 99: return strings[r];
 12780  018526  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 12781  018528  0D02               	mullw	2
 12782  01852A  0EDB               	movlw	low getCauseOfResetString@strings
 12783  01852C  24F3               	addwf	prodl,w,c
 12784  01852E  6ED9               	movwf	fsr2l,c
 12785  018530  0E02               	movlw	high getCauseOfResetString@strings
 12786  018532  20F4               	addwfc	prodh,w,c
 12787  018534  6EDA               	movwf	fsr2h,c
 12788  018536  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 12789  01853A  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 12790                           
 12791                           ; BSR set to: 1
 12792                           ;cause_of_reset.c: 101: }
 12793                           
 12794                           ; BSR set to: 1
 12795  01853E  0012               	return	
 12796  018540                     l1321:
 12797                           
 12798                           ; BSR set to: 1
 12799                           ;cause_of_reset.c: 103: else {
 12800                           ;cause_of_reset.c: 105: return "Undefined Reset";
 12801                           
 12802                           ; BSR set to: 1
 12803  018540  0E10               	movlw	low STR_130
 12804  018542  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 12805  018544  0EFE               	movlw	high STR_130
 12806  018546  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 12807                           
 12808                           ; BSR set to: 1
 12809  018548  0012               	return	
 12810  01854A                     __end_of_getCauseOfResetString:
 12811                           	opt stack 0
 12812                           tblptru	equ	0xFF8
 12813                           tblptrh	equ	0xFF7
 12814                           tblptrl	equ	0xFF6
 12815                           tablat	equ	0xFF5
 12816                           prodh	equ	0xFF4
 12817                           prodl	equ	0xFF3
 12818                           intcon	equ	0xFF2
 12819                           indf0	equ	0xFEF
 12820                           postinc0	equ	0xFEE
 12821                           fsr0h	equ	0xFEA
 12822                           fsr0l	equ	0xFE9
 12823                           wreg	equ	0xFE8
 12824                           indf1	equ	0xFE7
 12825                           postdec1	equ	0xFE5
 12826                           plusw1	equ	0xFE3
 12827                           fsr1h	equ	0xFE2
 12828                           fsr1l	equ	0xFE1
 12829                           indf2	equ	0xFDF
 12830                           postinc2	equ	0xFDE
 12831                           postdec2	equ	0xFDD
 12832                           plusw2	equ	0xFDB
 12833                           fsr2h	equ	0xFDA
 12834                           fsr2l	equ	0xFD9
 12835                           status	equ	0xFD8
 12836                           
 12837 ;; *************** function _atoi *****************
 12838 ;; Defined at:
 12839 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 12842 ;;		 -> ringBufferLUT@arg_buff(3), 
 12843 ;; Auto vars:     Size  Location     Type
 12844 ;;  a               2   34[BANK1 ] int 
 12845 ;;  sign            1   33[BANK1 ] unsigned char 
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  2   29[BANK1 ] int 
 12848 ;; Registers used:
 12849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12855 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12856 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12857 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12858 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12859 ;;Total ram usage:        7 bytes
 12860 ;; Hardware stack levels used:    1
 12861 ;; Hardware stack levels required when called:   14
 12862 ;; This function calls:
 12863 ;;		___wmul
 12864 ;;		_isdigit
 12865 ;; This function is called by:
 12866 ;;		_ringBufferLUT
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           	psect	text23
 12871  017370                     __ptext23:
 12872                           	opt stack 0
 12873  017370                     _atoi:
 12874                           	opt stack 14
 12875                           
 12876                           ; BSR set to: 1
 12877                           ;incstack = 0
 12878  017370  D003               	goto	l1703
 12879  017372  0101               	movlb	1	; () banked
 12880  017374  4B1D               	infsnz	atoi@s& (0+255),f,b
 12881  017376  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 12882  017378                     l1703:
 12883                           
 12884                           ; BSR set to: 1
 12885  017378  C11D  FFD9         	movff	atoi@s,fsr2l
 12886  01737C  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12887  017380  0E20               	movlw	32
 12888  017382  18DE               	xorwf	postinc2,w,c
 12889  017384  B4D8               	btfsc	status,2,c
 12890  017386  D7F5               	goto	l1704
 12891  017388  C11D  FFD9         	movff	atoi@s,fsr2l
 12892  01738C  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12893  017390  0E09               	movlw	9
 12894  017392  18DE               	xorwf	postinc2,w,c
 12895  017394  B4D8               	btfsc	status,2,c
 12896  017396  D7ED               	goto	l1704
 12897  017398  0E00               	movlw	0
 12898  01739A  0101               	movlb	1	; () banked
 12899  01739C  6F23               	movwf	(atoi@a+1)& (0+255),b
 12900  01739E  0E00               	movlw	0
 12901  0173A0  6F22               	movwf	atoi@a& (0+255),b
 12902  0173A2  0E00               	movlw	0
 12903  0173A4  6F21               	movwf	atoi@sign& (0+255),b
 12904                           
 12905                           ; BSR set to: 1
 12906  0173A6  C11D  FFD9         	movff	atoi@s,fsr2l
 12907  0173AA  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12908  0173AE  0E2D               	movlw	45
 12909  0173B0  18DE               	xorwf	postinc2,w,c
 12910  0173B2  A4D8               	btfss	status,2,c
 12911  0173B4  D002               	goto	l1706
 12912                           
 12913                           ; BSR set to: 1
 12914  0173B6  2B21               	incf	atoi@sign& (0+255),f,b
 12915  0173B8  D026               	goto	l18464
 12916  0173BA                     l1706:
 12917                           
 12918                           ; BSR set to: 1
 12919                           
 12920                           ; BSR set to: 1
 12921  0173BA  C11D  FFD9         	movff	atoi@s,fsr2l
 12922  0173BE  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12923  0173C2  0E2B               	movlw	43
 12924  0173C4  18DE               	xorwf	postinc2,w,c
 12925  0173C6  A4D8               	btfss	status,2,c
 12926  0173C8  D020               	goto	l1709
 12927  0173CA  D01D               	goto	l18464
 12928  0173CC                     
 12929                           ; BSR set to: 1
 12930  0173CC  C122  F117         	movff	atoi@a,___wmul@multiplier
 12931  0173D0  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 12932  0173D4  0E00               	movlw	0
 12933  0173D6  0101               	movlb	1	; () banked
 12934  0173D8  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12935  0173DA  0E0A               	movlw	10
 12936  0173DC  6F19               	movwf	___wmul@multiplicand& (0+255),b
 12937  0173DE  EC00  F0C3         	call	___wmul	;wreg free
 12938  0173E2  C11D  FFD9         	movff	atoi@s,fsr2l
 12939  0173E6  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12940  0173EA  50DF               	movf	indf2,w,c
 12941  0173EC  0101               	movlb	1	; () banked
 12942  0173EE  6F1F               	movwf	??_atoi& (0+255),b
 12943  0173F0  6B20               	clrf	(??_atoi+1)& (0+255),b
 12944  0173F2  5117               	movf	?___wmul& (0+255),w,b
 12945  0173F4  271F               	addwf	??_atoi& (0+255),f,b
 12946  0173F6  5118               	movf	(?___wmul+1)& (0+255),w,b
 12947  0173F8  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 12948  0173FA  0ED0               	movlw	208
 12949  0173FC  251F               	addwf	??_atoi& (0+255),w,b
 12950  0173FE  6F22               	movwf	atoi@a& (0+255),b
 12951  017400  0EFF               	movlw	255
 12952  017402  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 12953  017404  6F23               	movwf	(atoi@a+1)& (0+255),b
 12954  017406                     l18464:
 12955                           
 12956                           ; BSR set to: 1
 12957  017406  4B1D               	infsnz	atoi@s& (0+255),f,b
 12958  017408  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 12959  01740A                     l1709:
 12960                           
 12961                           ; BSR set to: 1
 12962                           
 12963                           ; BSR set to: 1
 12964  01740A  C11D  FFD9         	movff	atoi@s,fsr2l
 12965  01740E  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12966  017412  50DF               	movf	indf2,w,c
 12967  017414  EC87  F0C3         	call	_isdigit
 12968  017418  B0D8               	btfsc	status,0,c
 12969  01741A  D7D8               	goto	l1710
 12970  01741C  0101               	movlb	1	; () banked
 12971  01741E  5121               	movf	atoi@sign& (0+255),w,b
 12972  017420  B4D8               	btfsc	status,2,c
 12973  017422  D00D               	goto	l1712
 12974                           
 12975                           ; BSR set to: 1
 12976  017424  C122  F11F         	movff	atoi@a,??_atoi
 12977  017428  C123  F120         	movff	atoi@a+1,??_atoi+1
 12978  01742C  1F1F               	comf	??_atoi& (0+255),f,b
 12979  01742E  1F20               	comf	(??_atoi+1)& (0+255),f,b
 12980  017430  4B1F               	infsnz	??_atoi& (0+255),f,b
 12981  017432  2B20               	incf	(??_atoi+1)& (0+255),f,b
 12982  017434  C11F  F11D         	movff	??_atoi,?_atoi
 12983  017438  C120  F11E         	movff	??_atoi+1,?_atoi+1
 12984  01743C  0012               	return	
 12985  01743E                     l1712:
 12986                           
 12987                           ; BSR set to: 1
 12988  01743E  C122  F11D         	movff	atoi@a,?_atoi
 12989  017442  C123  F11E         	movff	atoi@a+1,?_atoi+1
 12990                           
 12991                           ; BSR set to: 1
 12992  017446  0012               	return		;funcret
 12993  017448                     __end_of_atoi:
 12994                           	opt stack 0
 12995                           tblptru	equ	0xFF8
 12996                           tblptrh	equ	0xFF7
 12997                           tblptrl	equ	0xFF6
 12998                           tablat	equ	0xFF5
 12999                           prodh	equ	0xFF4
 13000                           prodl	equ	0xFF3
 13001                           intcon	equ	0xFF2
 13002                           indf0	equ	0xFEF
 13003                           postinc0	equ	0xFEE
 13004                           fsr0h	equ	0xFEA
 13005                           fsr0l	equ	0xFE9
 13006                           wreg	equ	0xFE8
 13007                           indf1	equ	0xFE7
 13008                           postdec1	equ	0xFE5
 13009                           plusw1	equ	0xFE3
 13010                           fsr1h	equ	0xFE2
 13011                           fsr1l	equ	0xFE1
 13012                           indf2	equ	0xFDF
 13013                           postinc2	equ	0xFDE
 13014                           postdec2	equ	0xFDD
 13015                           plusw2	equ	0xFDB
 13016                           fsr2h	equ	0xFDA
 13017                           fsr2l	equ	0xFD9
 13018                           status	equ	0xFD8
 13019                           
 13020 ;; *************** function ___fldiv *****************
 13021 ;; Defined at:
 13022 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 13023 ;; Parameters:    Size  Location     Type
 13024 ;;  b               4   61[BANK1 ] int 
 13025 ;;  a               4   65[BANK1 ] int 
 13026 ;; Auto vars:     Size  Location     Type
 13027 ;;  grs             4   80[BANK1 ] unsigned long 
 13028 ;;  rem             4   74[BANK1 ] unsigned long 
 13029 ;;  new_exp         2   78[BANK1 ] int 
 13030 ;;  aexp            1   85[BANK1 ] unsigned char 
 13031 ;;  bexp            1   84[BANK1 ] unsigned char 
 13032 ;;  sign            1   73[BANK1 ] unsigned char 
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  4   61[BANK1 ] unsigned char 
 13035 ;; Registers used:
 13036 ;;		wreg, status,2, status,0
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13042 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13043 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13044 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13045 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13046 ;;Total ram usage:       25 bytes
 13047 ;; Hardware stack levels used:    1
 13048 ;; Hardware stack levels required when called:   13
 13049 ;; This function calls:
 13050 ;;		Nothing
 13051 ;; This function is called by:
 13052 ;;		_ringBufferLUT
 13053 ;; This function uses a non-reentrant model
 13054 ;;
 13055                           
 13056                           	psect	text24
 13057  015848                     __ptext24:
 13058                           	opt stack 0
 13059  015848                     ___fldiv:
 13060                           	opt stack 15
 13061                           
 13062                           ; BSR set to: 1
 13063                           ;incstack = 0
 13064  015848  0101               	movlb	1	; () banked
 13065  01584A  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 13066  01584C  0B80               	andlw	128
 13067  01584E  6F49               	movwf	___fldiv@sign& (0+255),b
 13068  015850  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 13069  015852  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 13070  015854  6F54               	movwf	___fldiv@bexp& (0+255),b
 13071                           
 13072                           ; BSR set to: 1
 13073  015856  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 13074                           
 13075                           ; BSR set to: 1
 13076  015858  8154               	bsf	___fldiv@bexp& (0+255),0,b
 13077                           
 13078                           ; BSR set to: 1
 13079                           
 13080                           ; BSR set to: 1
 13081  01585A  5154               	movf	___fldiv@bexp& (0+255),w,b
 13082  01585C  B4D8               	btfsc	status,2,c
 13083  01585E  D00D               	goto	l2110
 13084                           
 13085                           ; BSR set to: 1
 13086  015860  2954               	incf	___fldiv@bexp& (0+255),w,b
 13087  015862  A4D8               	btfss	status,2,c
 13088  015864  D008               	goto	l2111
 13089                           
 13090                           ; BSR set to: 1
 13091  015866  0E00               	movlw	0
 13092  015868  6F3D               	movwf	___fldiv@b& (0+255),b
 13093  01586A  0E00               	movlw	0
 13094  01586C  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13095  01586E  0E00               	movlw	0
 13096  015870  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13097  015872  0E00               	movlw	0
 13098  015874  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13099  015876                     l2111:
 13100                           
 13101                           ; BSR set to: 1
 13102                           
 13103                           ; BSR set to: 1
 13104  015876  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 13105  015878  D006               	goto	L1
 13106  01587A                     l2110:
 13107                           
 13108                           ; BSR set to: 1
 13109                           
 13110                           ; BSR set to: 1
 13111  01587A  0E00               	movlw	0
 13112  01587C  6F3D               	movwf	___fldiv@b& (0+255),b
 13113  01587E  0E00               	movlw	0
 13114  015880  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13115  015882  0E00               	movlw	0
 13116  015884  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13117  015886                     L1:
 13118  015886  0E00               	movlw	0
 13119  015888  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13120                           
 13121                           ; BSR set to: 1
 13122                           
 13123                           ; BSR set to: 1
 13124  01588A  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 13125  01588C  0B80               	andlw	128
 13126  01588E  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 13127                           
 13128                           ; BSR set to: 1
 13129  015890  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 13130  015892  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 13131  015894  6F55               	movwf	___fldiv@aexp& (0+255),b
 13132                           
 13133                           ; BSR set to: 1
 13134  015896  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 13135                           
 13136                           ; BSR set to: 1
 13137  015898  8155               	bsf	___fldiv@aexp& (0+255),0,b
 13138                           
 13139                           ; BSR set to: 1
 13140                           
 13141                           ; BSR set to: 1
 13142  01589A  5155               	movf	___fldiv@aexp& (0+255),w,b
 13143  01589C  B4D8               	btfsc	status,2,c
 13144  01589E  D00D               	goto	l2114
 13145                           
 13146                           ; BSR set to: 1
 13147  0158A0  2955               	incf	___fldiv@aexp& (0+255),w,b
 13148  0158A2  A4D8               	btfss	status,2,c
 13149  0158A4  D008               	goto	l2115
 13150                           
 13151                           ; BSR set to: 1
 13152  0158A6  0E00               	movlw	0
 13153  0158A8  6F41               	movwf	___fldiv@a& (0+255),b
 13154  0158AA  0E00               	movlw	0
 13155  0158AC  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 13156  0158AE  0E00               	movlw	0
 13157  0158B0  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 13158  0158B2  0E00               	movlw	0
 13159  0158B4  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 13160  0158B6                     l2115:
 13161                           
 13162                           ; BSR set to: 1
 13163                           
 13164                           ; BSR set to: 1
 13165  0158B6  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 13166  0158B8  D006               	goto	L2
 13167  0158BA                     l2114:
 13168                           
 13169                           ; BSR set to: 1
 13170                           
 13171                           ; BSR set to: 1
 13172  0158BA  0E00               	movlw	0
 13173  0158BC  6F41               	movwf	___fldiv@a& (0+255),b
 13174  0158BE  0E00               	movlw	0
 13175  0158C0  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 13176  0158C2  0E00               	movlw	0
 13177  0158C4  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 13178  0158C6                     L2:
 13179  0158C6  0E00               	movlw	0
 13180  0158C8  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 13181                           
 13182                           ; BSR set to: 1
 13183                           
 13184                           ; BSR set to: 1
 13185  0158CA  5141               	movf	___fldiv@a& (0+255),w,b
 13186  0158CC  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 13187  0158CE  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 13188  0158D0  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 13189  0158D2  A4D8               	btfss	status,2,c
 13190  0158D4  D015               	goto	l2117
 13191                           
 13192                           ; BSR set to: 1
 13193  0158D6  0E00               	movlw	0
 13194  0158D8  6F3D               	movwf	___fldiv@b& (0+255),b
 13195  0158DA  0E00               	movlw	0
 13196  0158DC  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13197  0158DE  0E00               	movlw	0
 13198  0158E0  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13199  0158E2  0E00               	movlw	0
 13200  0158E4  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13201                           
 13202                           ; BSR set to: 1
 13203  0158E6  0E80               	movlw	128
 13204  0158E8  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 13205  0158EA  0E7F               	movlw	127
 13206  0158EC  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13207                           
 13208                           ; BSR set to: 1
 13209  0158EE  C13D  F13D         	movff	___fldiv@b,?___fldiv
 13210  0158F2  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 13211  0158F6  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 13212  0158FA  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 13213                           
 13214                           ; BSR set to: 1
 13215  0158FE  0012               	return	
 13216  015900                     l2117:
 13217                           
 13218                           ; BSR set to: 1
 13219                           
 13220                           ; BSR set to: 1
 13221  015900  5154               	movf	___fldiv@bexp& (0+255),w,b
 13222  015902  A4D8               	btfss	status,2,c
 13223  015904  D011               	goto	l2119
 13224                           
 13225                           ; BSR set to: 1
 13226  015906  0E00               	movlw	0
 13227  015908  6F3D               	movwf	___fldiv@b& (0+255),b
 13228  01590A  0E00               	movlw	0
 13229  01590C  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13230  01590E  0E00               	movlw	0
 13231  015910  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13232  015912  0E00               	movlw	0
 13233  015914  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13234                           
 13235                           ; BSR set to: 1
 13236  015916  C13D  F13D         	movff	___fldiv@b,?___fldiv
 13237  01591A  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 13238  01591E  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 13239  015922  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 13240                           
 13241                           ; BSR set to: 1
 13242  015926  0012               	return	
 13243  015928                     l2119:
 13244                           
 13245                           ; BSR set to: 1
 13246                           
 13247                           ; BSR set to: 1
 13248  015928  5155               	movf	___fldiv@aexp& (0+255),w,b
 13249  01592A  6F45               	movwf	??___fldiv& (0+255),b
 13250  01592C  6B46               	clrf	(??___fldiv+1)& (0+255),b
 13251  01592E  1F45               	comf	??___fldiv& (0+255),f,b
 13252  015930  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 13253  015932  4B45               	infsnz	??___fldiv& (0+255),f,b
 13254  015934  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 13255  015936  5154               	movf	___fldiv@bexp& (0+255),w,b
 13256  015938  6F47               	movwf	(??___fldiv+2)& (0+255),b
 13257  01593A  6B48               	clrf	(??___fldiv+3)& (0+255),b
 13258  01593C  5145               	movf	??___fldiv& (0+255),w,b
 13259  01593E  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 13260  015940  5146               	movf	(??___fldiv+1)& (0+255),w,b
 13261  015942  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 13262  015944  0E7F               	movlw	127
 13263  015946  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 13264  015948  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 13265  01594A  0E00               	movlw	0
 13266  01594C  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 13267  01594E  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13268                           
 13269                           ; BSR set to: 1
 13270  015950  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 13271  015954  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 13272  015958  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 13273  01595C  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 13274                           
 13275                           ; BSR set to: 1
 13276  015960  0E00               	movlw	0
 13277  015962  6F3D               	movwf	___fldiv@b& (0+255),b
 13278  015964  0E00               	movlw	0
 13279  015966  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13280  015968  0E00               	movlw	0
 13281  01596A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13282  01596C  0E00               	movlw	0
 13283  01596E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13284                           
 13285                           ; BSR set to: 1
 13286  015970  0E00               	movlw	0
 13287  015972  6F50               	movwf	___fldiv@grs& (0+255),b
 13288  015974  0E00               	movlw	0
 13289  015976  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 13290  015978  0E00               	movlw	0
 13291  01597A  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 13292  01597C  0E00               	movlw	0
 13293  01597E  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 13294                           
 13295                           ; BSR set to: 1
 13296  015980  0E00               	movlw	0
 13297  015982  6F55               	movwf	___fldiv@aexp& (0+255),b
 13298  015984  D028               	goto	l2120
 13299  015986                     
 13300                           ; BSR set to: 1
 13301                           
 13302                           ; BSR set to: 1
 13303  015986  5155               	movf	___fldiv@aexp& (0+255),w,b
 13304  015988  B4D8               	btfsc	status,2,c
 13305  01598A  D011               	goto	l2122
 13306                           
 13307                           ; BSR set to: 1
 13308  01598C  90D8               	bcf	status,0,c
 13309  01598E  374A               	rlcf	___fldiv@rem& (0+255),f,b
 13310  015990  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13311  015992  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13312  015994  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13313  015996  90D8               	bcf	status,0,c
 13314  015998  373D               	rlcf	___fldiv@b& (0+255),f,b
 13315  01599A  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13316  01599C  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13317  01599E  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13318                           
 13319                           ; BSR set to: 1
 13320  0159A0  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 13321                           
 13322                           ; BSR set to: 1
 13323  0159A2  813D               	bsf	___fldiv@b& (0+255),0,b
 13324                           
 13325                           ; BSR set to: 1
 13326  0159A4  90D8               	bcf	status,0,c
 13327  0159A6  3750               	rlcf	___fldiv@grs& (0+255),f,b
 13328  0159A8  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13329  0159AA  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13330  0159AC  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13331  0159AE                     l2122:
 13332                           
 13333                           ; BSR set to: 1
 13334                           
 13335                           ; BSR set to: 1
 13336  0159AE  5141               	movf	___fldiv@a& (0+255),w,b
 13337  0159B0  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 13338  0159B2  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 13339  0159B4  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13340  0159B6  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 13341  0159B8  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13342  0159BA  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 13343  0159BC  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13344  0159BE  A0D8               	btfss	status,0,c
 13345  0159C0  D009               	goto	l2124
 13346                           
 13347                           ; BSR set to: 1
 13348  0159C2  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13349                           
 13350                           ; BSR set to: 1
 13351  0159C4  5141               	movf	___fldiv@a& (0+255),w,b
 13352  0159C6  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 13353  0159C8  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 13354  0159CA  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13355  0159CC  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 13356  0159CE  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13357  0159D0  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 13358  0159D2  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13359  0159D4                     l2124:
 13360                           
 13361                           ; BSR set to: 1
 13362                           
 13363                           ; BSR set to: 1
 13364  0159D4  2B55               	incf	___fldiv@aexp& (0+255),f,b
 13365  0159D6                     l2120:
 13366                           
 13367                           ; BSR set to: 1
 13368  0159D6  0E19               	movlw	25
 13369  0159D8  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 13370  0159DA  D7D5               	goto	l2121
 13371                           
 13372                           ; BSR set to: 1
 13373                           
 13374                           ; BSR set to: 1
 13375  0159DC  514A               	movf	___fldiv@rem& (0+255),w,b
 13376  0159DE  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13377  0159E0  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13378  0159E2  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13379  0159E4  B4D8               	btfsc	status,2,c
 13380  0159E6  D011               	goto	l2127
 13381                           
 13382                           ; BSR set to: 1
 13383  0159E8  8150               	bsf	___fldiv@grs& (0+255),0,b
 13384                           
 13385                           ; BSR set to: 1
 13386  0159EA  D00F               	goto	l2127
 13387  0159EC                     
 13388                           ; BSR set to: 1
 13389                           
 13390                           ; BSR set to: 1
 13391  0159EC  90D8               	bcf	status,0,c
 13392  0159EE  373D               	rlcf	___fldiv@b& (0+255),f,b
 13393  0159F0  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13394  0159F2  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13395  0159F4  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13396                           
 13397                           ; BSR set to: 1
 13398  0159F6  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 13399                           
 13400                           ; BSR set to: 1
 13401  0159F8  813D               	bsf	___fldiv@b& (0+255),0,b
 13402                           
 13403                           ; BSR set to: 1
 13404  0159FA  90D8               	bcf	status,0,c
 13405  0159FC  3750               	rlcf	___fldiv@grs& (0+255),f,b
 13406  0159FE  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13407  015A00  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13408  015A02  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13409  015A04  074E               	decf	___fldiv@new_exp& (0+255),f,b
 13410  015A06  A0D8               	btfss	status,0,c
 13411  015A08  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13412  015A0A                     l2127:
 13413                           
 13414                           ; BSR set to: 1
 13415                           
 13416                           ; BSR set to: 1
 13417  015A0A  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 13418  015A0C  D7EF               	goto	l2128
 13419                           
 13420                           ; BSR set to: 1
 13421                           
 13422                           ; BSR set to: 1
 13423  015A0E  0E00               	movlw	0
 13424  015A10  6F55               	movwf	___fldiv@aexp& (0+255),b
 13425                           
 13426                           ; BSR set to: 1
 13427  015A12  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13428  015A14  D016               	goto	l2134
 13429                           
 13430                           ; BSR set to: 1
 13431  015A16  0EFF               	movlw	255
 13432  015A18  1550               	andwf	___fldiv@grs& (0+255),w,b
 13433  015A1A  6F45               	movwf	??___fldiv& (0+255),b
 13434  015A1C  0EFF               	movlw	255
 13435  015A1E  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13436  015A20  6F46               	movwf	(??___fldiv+1)& (0+255),b
 13437  015A22  0EFF               	movlw	255
 13438  015A24  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13439  015A26  6F47               	movwf	(??___fldiv+2)& (0+255),b
 13440  015A28  0E7F               	movlw	127
 13441  015A2A  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13442  015A2C  6F48               	movwf	(??___fldiv+3)& (0+255),b
 13443  015A2E  5145               	movf	??___fldiv& (0+255),w,b
 13444  015A30  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 13445  015A32  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 13446  015A34  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 13447  015A36  A4D8               	btfss	status,2,c
 13448  015A38  D002               	goto	u25050
 13449                           
 13450                           ; BSR set to: 1
 13451                           
 13452                           ; BSR set to: 1
 13453  015A3A  A13D               	btfss	___fldiv@b& (0+255),0,b
 13454  015A3C  D002               	goto	l2134
 13455  015A3E                     u25050:
 13456                           
 13457                           ; BSR set to: 1
 13458  015A3E  0E01               	movlw	1
 13459  015A40  6F55               	movwf	___fldiv@aexp& (0+255),b
 13460  015A42                     l2134:
 13461                           
 13462                           ; BSR set to: 1
 13463                           
 13464                           ; BSR set to: 1
 13465                           
 13466                           ; BSR set to: 1
 13467  015A42  5155               	movf	___fldiv@aexp& (0+255),w,b
 13468  015A44  B4D8               	btfsc	status,2,c
 13469  015A46  D01F               	goto	l2136
 13470                           
 13471                           ; BSR set to: 1
 13472  015A48  0E01               	movlw	1
 13473  015A4A  273D               	addwf	___fldiv@b& (0+255),f,b
 13474  015A4C  0E00               	movlw	0
 13475  015A4E  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13476  015A50  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13477  015A52  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13478                           
 13479                           ; BSR set to: 1
 13480  015A54  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 13481  015A56  D017               	goto	l2136
 13482                           
 13483                           ; BSR set to: 1
 13484  015A58  C13D  F145         	movff	___fldiv@b,??___fldiv
 13485  015A5C  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 13486  015A60  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 13487  015A64  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 13488  015A68  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 13489  015A6A  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 13490  015A6C  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 13491  015A6E  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 13492  015A70  3345               	rrcf	??___fldiv& (0+255),f,b
 13493  015A72  C145  F13D         	movff	??___fldiv,___fldiv@b
 13494  015A76  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 13495  015A7A  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 13496  015A7E  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 13497                           
 13498                           ; BSR set to: 1
 13499  015A82  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 13500  015A84  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13501  015A86                     l2136:
 13502                           
 13503                           ; BSR set to: 1
 13504                           
 13505                           ; BSR set to: 1
 13506                           
 13507                           ; BSR set to: 1
 13508  015A86  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13509  015A88  D010               	goto	l2137
 13510  015A8A  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13511  015A8C  E103               	bnz	u25080
 13512  015A8E  294E               	incf	___fldiv@new_exp& (0+255),w,b
 13513  015A90  A0D8               	btfss	status,0,c
 13514  015A92  D00B               	goto	l2137
 13515  015A94                     u25080:
 13516                           
 13517                           ; BSR set to: 1
 13518  015A94  0E00               	movlw	0
 13519  015A96  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13520  015A98  694E               	setf	___fldiv@new_exp& (0+255),b
 13521  015A9A  0E00               	movlw	0
 13522  015A9C  6F3D               	movwf	___fldiv@b& (0+255),b
 13523  015A9E  0E00               	movlw	0
 13524  015AA0  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13525  015AA2  0E00               	movlw	0
 13526  015AA4  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13527  015AA6  0E00               	movlw	0
 13528  015AA8  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13529  015AAA                     l2137:
 13530                           
 13531                           ; BSR set to: 1
 13532                           
 13533                           ; BSR set to: 1
 13534  015AAA  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13535  015AAC  D005               	goto	u25090
 13536  015AAE  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13537  015AB0  E111               	bnz	l18592
 13538  015AB2  054E               	decf	___fldiv@new_exp& (0+255),w,b
 13539  015AB4  B0D8               	btfsc	status,0,c
 13540  015AB6  D00E               	goto	l2138
 13541  015AB8                     u25090:
 13542                           
 13543                           ; BSR set to: 1
 13544  015AB8  0E00               	movlw	0
 13545  015ABA  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13546  015ABC  0E00               	movlw	0
 13547  015ABE  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 13548  015AC0  0E00               	movlw	0
 13549  015AC2  6F3D               	movwf	___fldiv@b& (0+255),b
 13550  015AC4  0E00               	movlw	0
 13551  015AC6  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13552  015AC8  0E00               	movlw	0
 13553  015ACA  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13554  015ACC  0E00               	movlw	0
 13555  015ACE  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13556  015AD0  0E00               	movlw	0
 13557  015AD2  6F49               	movwf	___fldiv@sign& (0+255),b
 13558  015AD4                     l2138:
 13559  015AD4                     l18592:
 13560                           
 13561                           ; BSR set to: 1
 13562  015AD4  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 13563                           
 13564                           ; BSR set to: 1
 13565  015AD8  A154               	btfss	___fldiv@bexp& (0+255),0,b
 13566  015ADA  D002               	goto	l2139
 13567                           
 13568                           ; BSR set to: 1
 13569  015ADC  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 13570  015ADE  D001               	goto	l2140
 13571  015AE0                     l2139:
 13572                           
 13573                           ; BSR set to: 1
 13574                           
 13575                           ; BSR set to: 1
 13576  015AE0  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 13577  015AE2                     l2140:
 13578                           
 13579                           ; BSR set to: 1
 13580                           
 13581                           ; BSR set to: 1
 13582  015AE2  90D8               	bcf	status,0,c
 13583  015AE4  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 13584  015AE6  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13585                           
 13586                           ; BSR set to: 1
 13587  015AE8  5149               	movf	___fldiv@sign& (0+255),w,b
 13588  015AEA  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13589                           
 13590                           ; BSR set to: 1
 13591  015AEC  C13D  F13D         	movff	___fldiv@b,?___fldiv
 13592  015AF0  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 13593  015AF4  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 13594  015AF8  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 13595  015AFC  0012               	return	
 13596  015AFE                     __end_of___fldiv:
 13597                           	opt stack 0
 13598                           tblptru	equ	0xFF8
 13599                           tblptrh	equ	0xFF7
 13600                           tblptrl	equ	0xFF6
 13601                           tablat	equ	0xFF5
 13602                           prodh	equ	0xFF4
 13603                           prodl	equ	0xFF3
 13604                           intcon	equ	0xFF2
 13605                           indf0	equ	0xFEF
 13606                           postinc0	equ	0xFEE
 13607                           fsr0h	equ	0xFEA
 13608                           fsr0l	equ	0xFE9
 13609                           wreg	equ	0xFE8
 13610                           indf1	equ	0xFE7
 13611                           postdec1	equ	0xFE5
 13612                           plusw1	equ	0xFE3
 13613                           fsr1h	equ	0xFE2
 13614                           fsr1l	equ	0xFE1
 13615                           indf2	equ	0xFDF
 13616                           postinc2	equ	0xFDE
 13617                           postdec2	equ	0xFDD
 13618                           plusw2	equ	0xFDB
 13619                           fsr2h	equ	0xFDA
 13620                           fsr2l	equ	0xFD9
 13621                           status	equ	0xFD8
 13622                           
 13623 ;; *************** function _TMR7_StopTimer *****************
 13624 ;; Defined at:
 13625 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 13626 ;; Parameters:    Size  Location     Type
 13627 ;;		None
 13628 ;; Auto vars:     Size  Location     Type
 13629 ;;		None
 13630 ;; Return value:  Size  Location     Type
 13631 ;;                  1    wreg      void 
 13632 ;; Registers used:
 13633 ;;		None
 13634 ;; Tracked objects:
 13635 ;;		On entry : 0/0
 13636 ;;		On exit  : 0/0
 13637 ;;		Unchanged: 0/0
 13638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13643 ;;Total ram usage:        0 bytes
 13644 ;; Hardware stack levels used:    1
 13645 ;; Hardware stack levels required when called:   13
 13646 ;; This function calls:
 13647 ;;		Nothing
 13648 ;; This function is called by:
 13649 ;;		_ringBufferLUT
 13650 ;; This function uses a non-reentrant model
 13651 ;;
 13652                           
 13653                           	psect	text25
 13654  018920                     __ptext25:
 13655                           	opt stack 0
 13656  018920                     _TMR7_StopTimer:
 13657                           	opt stack 15
 13658                           
 13659                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 13660                           
 13661                           ; BSR set to: 1
 13662                           ;incstack = 0
 13663  018920  010F               	movlb	15	; () banked
 13664  018922  9130               	bcf	48,0,b	;volatile
 13665                           
 13666                           ; BSR set to: 15
 13667  018924  0012               	return		;funcret
 13668  018926                     __end_of_TMR7_StopTimer:
 13669                           	opt stack 0
 13670                           tblptru	equ	0xFF8
 13671                           tblptrh	equ	0xFF7
 13672                           tblptrl	equ	0xFF6
 13673                           tablat	equ	0xFF5
 13674                           prodh	equ	0xFF4
 13675                           prodl	equ	0xFF3
 13676                           intcon	equ	0xFF2
 13677                           indf0	equ	0xFEF
 13678                           postinc0	equ	0xFEE
 13679                           fsr0h	equ	0xFEA
 13680                           fsr0l	equ	0xFE9
 13681                           wreg	equ	0xFE8
 13682                           indf1	equ	0xFE7
 13683                           postdec1	equ	0xFE5
 13684                           plusw1	equ	0xFE3
 13685                           fsr1h	equ	0xFE2
 13686                           fsr1l	equ	0xFE1
 13687                           indf2	equ	0xFDF
 13688                           postinc2	equ	0xFDE
 13689                           postdec2	equ	0xFDD
 13690                           plusw2	equ	0xFDB
 13691                           fsr2h	equ	0xFDA
 13692                           fsr2l	equ	0xFD9
 13693                           status	equ	0xFD8
 13694                           
 13695 ;; *************** function _EUSART2_Read *****************
 13696 ;; Defined at:
 13697 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 13698 ;; Parameters:    Size  Location     Type
 13699 ;;		None
 13700 ;; Auto vars:     Size  Location     Type
 13701 ;;  readValue       1   23[BANK1 ] unsigned char 
 13702 ;; Return value:  Size  Location     Type
 13703 ;;                  1    wreg      unsigned char 
 13704 ;; Registers used:
 13705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13706 ;; Tracked objects:
 13707 ;;		On entry : 0/0
 13708 ;;		On exit  : 0/0
 13709 ;;		Unchanged: 0/0
 13710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13712 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13714 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13715 ;;Total ram usage:        1 bytes
 13716 ;; Hardware stack levels used:    1
 13717 ;; Hardware stack levels required when called:   13
 13718 ;; This function calls:
 13719 ;;		Nothing
 13720 ;; This function is called by:
 13721 ;;		_terminal_ringBufferPull
 13722 ;;		_getch
 13723 ;; This function uses a non-reentrant model
 13724 ;;
 13725                           
 13726                           	psect	text26
 13727  0181C6                     __ptext26:
 13728                           	opt stack 0
 13729  0181C6                     _EUSART2_Read:
 13730                           	opt stack 16
 13731                           
 13732                           ;eusart2.c: 139: uint8_t readValue = 0;
 13733                           
 13734                           ; BSR set to: 15
 13735                           ;incstack = 0
 13736  0181C6  0E00               	movlw	0
 13737  0181C8  0101               	movlb	1	; () banked
 13738  0181CA  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13739                           
 13740                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 13741  0181CC  D002               	goto	l381
 13742  0181CE                     l382:
 13743                           
 13744                           ; BSR set to: 1
 13745  0181CE  0004               	clrwdt		;# 
 13746                           
 13747                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 13748  0181D0  827E               	bsf	3966,1,c	;volatile
 13749  0181D2                     l381:
 13750  0181D2  0101               	movlb	1	; () banked
 13751  0181D4  51DF               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 13752  0181D6  B4D8               	btfsc	status,2,c
 13753  0181D8  D7FA               	goto	l382
 13754                           
 13755                           ; BSR set to: 1
 13756                           ;eusart2.c: 145: }
 13757                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 13758  0181DA  927E               	bcf	3966,1,c	;volatile
 13759                           
 13760                           ; BSR set to: 1
 13761                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 13762  0181DC  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 13763  0181DE  0D01               	mullw	1
 13764  0181E0  0E00               	movlw	low _eusart2RxBuffer
 13765  0181E2  24F3               	addwf	prodl,w,c
 13766  0181E4  6ED9               	movwf	fsr2l,c
 13767  0181E6  0E02               	movlw	high _eusart2RxBuffer
 13768  0181E8  20F4               	addwfc	prodh,w,c
 13769  0181EA  6EDA               	movwf	fsr2h,c
 13770  0181EC  50DF               	movf	indf2,w,c
 13771  0181EE  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13772                           
 13773                           ; BSR set to: 1
 13774  0181F0  2BE0               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 13775                           
 13776                           ; BSR set to: 1
 13777                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 13778  0181F2  0E3F               	movlw	63
 13779  0181F4  65E0               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 13780  0181F6  D002               	goto	l384
 13781                           
 13782                           ; BSR set to: 1
 13783                           ;eusart2.c: 151: {
 13784                           ;eusart2.c: 152: eusart2RxTail = 0;
 13785  0181F8  0E00               	movlw	0
 13786  0181FA  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 13787  0181FC                     l384:
 13788                           
 13789                           ; BSR set to: 1
 13790                           ;eusart2.c: 153: }
 13791                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 13792                           
 13793                           ; BSR set to: 1
 13794  0181FC  010E               	movlb	14	; () banked
 13795  0181FE  9F2C               	bcf	44,7,b	;volatile
 13796                           
 13797                           ; BSR set to: 14
 13798                           ;eusart2.c: 155: eusart2RxCount--;
 13799  018200  0101               	movlb	1	; () banked
 13800  018202  07DF               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 13801                           
 13802                           ; BSR set to: 1
 13803                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 13804  018204  010E               	movlb	14	; () banked
 13805  018206  8F2C               	bsf	44,7,b	;volatile
 13806                           
 13807                           ; BSR set to: 14
 13808                           ;eusart2.c: 158: return readValue;
 13809  018208  0101               	movlb	1	; () banked
 13810  01820A  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 13811  01820C  0012               	return	
 13812  01820E                     __end_of_EUSART2_Read:
 13813                           	opt stack 0
 13814                           tblptru	equ	0xFF8
 13815                           tblptrh	equ	0xFF7
 13816                           tblptrl	equ	0xFF6
 13817                           tablat	equ	0xFF5
 13818                           prodh	equ	0xFF4
 13819                           prodl	equ	0xFF3
 13820                           intcon	equ	0xFF2
 13821                           indf0	equ	0xFEF
 13822                           postinc0	equ	0xFEE
 13823                           fsr0h	equ	0xFEA
 13824                           fsr0l	equ	0xFE9
 13825                           wreg	equ	0xFE8
 13826                           indf1	equ	0xFE7
 13827                           postdec1	equ	0xFE5
 13828                           plusw1	equ	0xFE3
 13829                           fsr1h	equ	0xFE2
 13830                           fsr1l	equ	0xFE1
 13831                           indf2	equ	0xFDF
 13832                           postinc2	equ	0xFDE
 13833                           postdec2	equ	0xFDD
 13834                           plusw2	equ	0xFDB
 13835                           fsr2h	equ	0xFDA
 13836                           fsr2l	equ	0xFD9
 13837                           status	equ	0xFD8
 13838                           
 13839 ;; *************** function _terminal_clearTerminal *****************
 13840 ;; Defined at:
 13841 ;;		line 80 in file "ring_buffer_interface.c"
 13842 ;; Parameters:    Size  Location     Type
 13843 ;;		None
 13844 ;; Auto vars:     Size  Location     Type
 13845 ;;		None
 13846 ;; Return value:  Size  Location     Type
 13847 ;;                  1    wreg      void 
 13848 ;; Registers used:
 13849 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13850 ;; Tracked objects:
 13851 ;;		On entry : 0/0
 13852 ;;		On exit  : 0/0
 13853 ;;		Unchanged: 0/0
 13854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13859 ;;Total ram usage:        0 bytes
 13860 ;; Hardware stack levels used:    1
 13861 ;; Hardware stack levels required when called:   16
 13862 ;; This function calls:
 13863 ;;		_printf
 13864 ;; This function is called by:
 13865 ;;		_main
 13866 ;; This function uses a non-reentrant model
 13867 ;;
 13868                           
 13869                           	psect	text27
 13870  01885C                     __ptext27:
 13871                           	opt stack 0
 13872  01885C                     _terminal_clearTerminal:
 13873                           	opt stack 14
 13874                           
 13875                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 13876                           
 13877                           ; BSR set to: 1
 13878                           ;incstack = 0
 13879  01885C  0EB0               	movlw	low STR_2
 13880  01885E  0101               	movlb	1	; () banked
 13881  018860  6F82               	movwf	printf@f& (0+255),b
 13882  018862  0EFF               	movlw	high STR_2
 13883  018864  6F83               	movwf	(printf@f+1)& (0+255),b
 13884  018866  EC00  F080         	call	_printf	;wreg free
 13885  01886A  0012               	return		;funcret
 13886  01886C                     __end_of_terminal_clearTerminal:
 13887                           	opt stack 0
 13888                           tblptru	equ	0xFF8
 13889                           tblptrh	equ	0xFF7
 13890                           tblptrl	equ	0xFF6
 13891                           tablat	equ	0xFF5
 13892                           prodh	equ	0xFF4
 13893                           prodl	equ	0xFF3
 13894                           intcon	equ	0xFF2
 13895                           indf0	equ	0xFEF
 13896                           postinc0	equ	0xFEE
 13897                           fsr0h	equ	0xFEA
 13898                           fsr0l	equ	0xFE9
 13899                           wreg	equ	0xFE8
 13900                           indf1	equ	0xFE7
 13901                           postdec1	equ	0xFE5
 13902                           plusw1	equ	0xFE3
 13903                           fsr1h	equ	0xFE2
 13904                           fsr1l	equ	0xFE1
 13905                           indf2	equ	0xFDF
 13906                           postinc2	equ	0xFDE
 13907                           postdec2	equ	0xFDD
 13908                           plusw2	equ	0xFDB
 13909                           fsr2h	equ	0xFDA
 13910                           fsr2l	equ	0xFD9
 13911                           status	equ	0xFD8
 13912                           
 13913 ;; *************** function _printf *****************
 13914 ;; Defined at:
 13915 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 13916 ;; Parameters:    Size  Location     Type
 13917 ;;  f               2  130[BANK1 ] PTR const unsigned char 
 13918 ;;		 -> STR_126(30), STR_125(46), STR_124(39), STR_123(62), 
 13919 ;;		 -> STR_122(55), STR_121(2170), STR_119(53), STR_117(58), 
 13920 ;;		 -> STR_115(71), STR_114(63), STR_113(37), STR_112(46), 
 13921 ;;		 -> STR_111(102), STR_110(86), STR_108(25), STR_106(42), 
 13922 ;;		 -> STR_105(53), STR_104(31), STR_102(29), STR_101(28), 
 13923 ;;		 -> STR_99(42), STR_97(41), STR_95(40), STR_93(56), 
 13924 ;;		 -> STR_91(34), STR_89(34), STR_87(32), STR_85(37), 
 13925 ;;		 -> STR_83(58), STR_81(36), STR_79(36), STR_77(37), 
 13926 ;;		 -> STR_75(45), STR_74(66), STR_72(21), STR_70(24), 
 13927 ;;		 -> STR_69(48), STR_59(54), STR_58(64), STR_56(59), 
 13928 ;;		 -> STR_54(85), STR_52(47), STR_51(17), STR_48(52), 
 13929 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
 13930 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
 13931 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
 13932 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
 13933 ;; Auto vars:     Size  Location     Type
 13934 ;;  idx             1  150[BANK1 ] unsigned char 
 13935 ;;  val             4  167[BANK1 ] unsigned long 
 13936 ;;  fval            4  163[BANK1 ] unsigned long 
 13937 ;;  tmpval          4  157[BANK1 ] struct .
 13938 ;;  prec            2  175[BANK1 ] int 
 13939 ;;  width           2  173[BANK1 ] int 
 13940 ;;  flag            2  171[BANK1 ] unsigned short 
 13941 ;;  exp             2  161[BANK1 ] int 
 13942 ;;  ap              2  155[BANK1 ] PTR void [1]
 13943 ;;		 -> ?i2_printf(2), ?_printf(2), 
 13944 ;;  len             2  153[BANK1 ] unsigned int 
 13945 ;;  cp              2  151[BANK1 ] PTR const unsigned char 
 13946 ;;		 -> STR_140(7), printf@c(1), STR_139(16), STR_138(22), 
 13947 ;;		 -> STR_137(21), STR_136(27), STR_135(41), STR_134(32), 
 13948 ;;		 -> STR_133(19), STR_132(16), STR_131(15), STR_130(16), 
 13949 ;;		 -> STR_129(10), STR_128(13), STR_127(12), ringBufferLUT@channel_name(22), 
 13950 ;;		 -> TRIAC_Firing_Angle(4), 
 13951 ;;  c               1  177[BANK1 ] char 
 13952 ;;  d               1    0        unsigned char 
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  2  130[BANK1 ] int 
 13955 ;; Registers used:
 13956 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13962 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13963 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13964 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13965 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13966 ;;Total ram usage:       48 bytes
 13967 ;; Hardware stack levels used:    1
 13968 ;; Hardware stack levels required when called:   15
 13969 ;; This function calls:
 13970 ;;		___awdiv
 13971 ;;		___fladd
 13972 ;;		___flge
 13973 ;;		___flmul
 13974 ;;		___flneg
 13975 ;;		___flsub
 13976 ;;		___fltol
 13977 ;;		___lldiv
 13978 ;;		___llmod
 13979 ;;		___wmul
 13980 ;;		___xxtofl
 13981 ;;		__div_to_l_
 13982 ;;		__tdiv_to_l_
 13983 ;;		_fround
 13984 ;;		_isdigit
 13985 ;;		_putch
 13986 ;;		_scale
 13987 ;; This function is called by:
 13988 ;;		_terminal_clearTerminal
 13989 ;;		_terminal_setCursorHome
 13990 ;;		_terminal_textAttributes
 13991 ;;		_terminal_printNewline
 13992 ;;		_ringBufferLUT
 13993 ;;		_terminal_printResetMessage
 13994 ;;		_terminal_clearLine
 13995 ;;		_terminal_saveCursor
 13996 ;;		_terminal_returnCursor
 13997 ;; This function uses a non-reentrant model
 13998 ;;
 13999                           
 14000                           	psect	text28
 14001  010000                     __ptext28:
 14002                           	opt stack 0
 14003  010000                     _printf:
 14004                           	opt stack 13
 14005                           
 14006                           ;doprnt.c: 466: va_list ap;
 14007                           ;doprnt.c: 499: signed char c;
 14008                           ;doprnt.c: 501: int width;
 14009                           ;doprnt.c: 504: int prec;
 14010                           ;doprnt.c: 508: unsigned short flag;
 14011                           ;doprnt.c: 515: char d;
 14012                           ;doprnt.c: 516: double fval;
 14013                           ;doprnt.c: 517: int exp;
 14014                           ;doprnt.c: 523: union {
 14015                           ;doprnt.c: 524: unsigned long vd;
 14016                           ;doprnt.c: 525: double integ;
 14017                           ;doprnt.c: 526: } tmpval;
 14018                           ;doprnt.c: 528: unsigned long val;
 14019                           ;doprnt.c: 529: unsigned len;
 14020                           ;doprnt.c: 530: const char * cp;
 14021                           ;doprnt.c: 533: *ap = __va_start();
 14022                           
 14023                           ;incstack = 0
 14024  010000  0E84               	movlw	low (?_printf+2)
 14025  010002  0101               	movlb	1	; () banked
 14026  010004  6F9B               	movwf	printf@ap& (0+255),b
 14027  010006  0E01               	movlw	high (?_printf+2)
 14028  010008  6F9C               	movwf	(printf@ap+1)& (0+255),b
 14029                           
 14030                           ;doprnt.c: 536: while(c = *f++) {
 14031  01000A  EFC8  F086         	goto	u24580
 14032  01000E                     
 14033                           ; BSR set to: 1
 14034                           ;doprnt.c: 538: if(c != '%')
 14035                           
 14036                           ; BSR set to: 1
 14037  01000E  0E25               	movlw	37
 14038  010010  19B1               	xorwf	printf@c& (0+255),w,b
 14039  010012  B4D8               	btfsc	status,2,c
 14040  010014  D005               	goto	l1364
 14041                           
 14042                           ; BSR set to: 1
 14043                           ;doprnt.c: 540: {
 14044                           ;doprnt.c: 541: (putch(c) );
 14045  010016  51B1               	movf	printf@c& (0+255),w,b
 14046  010018  EC3E  F0C4         	call	_putch
 14047                           
 14048                           ;doprnt.c: 542: continue;
 14049  01001C  EFC8  F086         	goto	u24580
 14050  010020                     l1364:
 14051                           
 14052                           ;doprnt.c: 543: }
 14053                           ;doprnt.c: 546: width = 0;
 14054  010020  0E00               	movlw	0
 14055  010022  0101               	movlb	1	; () banked
 14056  010024  6FAE               	movwf	(printf@width+1)& (0+255),b
 14057  010026  0E00               	movlw	0
 14058  010028  6FAD               	movwf	printf@width& (0+255),b
 14059                           
 14060                           ;doprnt.c: 548: flag = 0;
 14061  01002A  0E00               	movlw	0
 14062  01002C  6FAC               	movwf	(printf@flag+1)& (0+255),b
 14063  01002E  0E00               	movlw	0
 14064  010030  6FAB               	movwf	printf@flag& (0+255),b
 14065                           
 14066                           ; BSR set to: 1
 14067                           ;doprnt.c: 551: switch(*f) {
 14068                           
 14069                           ;doprnt.c: 550: for(;;) {
 14070  010032  D004               	goto	l1366
 14071  010034                     
 14072                           ;doprnt.c: 580: flag |= 0x04;
 14073                           
 14074                           ; BSR set to: 1
 14075  010034  0101               	movlb	1	; () banked
 14076  010036  85AB               	bsf	printf@flag& (0+255),2,b
 14077                           
 14078                           ;doprnt.c: 581: f++;
 14079  010038  4B82               	infsnz	printf@f& (0+255),f,b
 14080  01003A  2B83               	incf	(printf@f+1)& (0+255),f,b
 14081  01003C                     l1366:
 14082                           
 14083                           ; BSR set to: 1
 14084  01003C  C182  FFF6         	movff	printf@f,tblptrl
 14085  010040  C183  FFF7         	movff	printf@f+1,tblptrh
 14086  010044  0E00               	movlw	low (__mediumconst shr (0+16))
 14087  010046  6EF8               	movwf	tblptru,c
 14088  010048  0E0D               	movlw	(high __ramtop+-1)
 14089  01004A  64F7               	cpfsgt	tblptrh,c
 14090  01004C  D003               	bra	u23847
 14091  01004E  0008               	tblrd		*
 14092  010050  50F5               	movf	tablat,w,c
 14093  010052  D005               	bra	u23840
 14094  010054                     u23847:
 14095  010054  CFF6 FFE9          	movff	tblptrl,fsr0l
 14096  010058  CFF7 FFEA          	movff	tblptrh,fsr0h
 14097  01005C  50EF               	movf	indf0,w,c
 14098  01005E                     u23840:
 14099                           
 14100                           ; Switch size 1, requested type "space"
 14101                           ; Number of cases is 1, Range of values is 48 to 48
 14102                           ; switch strategies available:
 14103                           ; Name         Instructions Cycles
 14104                           ; simple_byte            4     3 (average)
 14105                           ;	Chosen strategy is simple_byte
 14106  01005E  0A30               	xorlw	48	; case 48
 14107  010060  B4D8               	btfsc	status,2,c
 14108  010062  D7E8               	goto	l1367
 14109                           
 14110                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 14111                           
 14112                           ;doprnt.c: 586: }
 14113                           
 14114                           ;doprnt.c: 585: break;
 14115  010064  C182  FFF6         	movff	printf@f,tblptrl
 14116  010068  C183  FFF7         	movff	printf@f+1,tblptrh
 14117  01006C  0E00               	movlw	low (__mediumconst shr (0+16))
 14118  01006E  6EF8               	movwf	tblptru,c
 14119  010070  0E0D               	movlw	(high __ramtop+-1)
 14120  010072  64F7               	cpfsgt	tblptrh,c
 14121  010074  D003               	bra	u23857
 14122  010076  0008               	tblrd		*
 14123  010078  50F5               	movf	tablat,w,c
 14124  01007A  D005               	bra	u23850
 14125  01007C                     u23857:
 14126  01007C  CFF6 FFE9          	movff	tblptrl,fsr0l
 14127  010080  CFF7 FFEA          	movff	tblptrh,fsr0h
 14128  010084  50EF               	movf	indf0,w,c
 14129  010086                     u23850:
 14130  010086  EC87  F0C3         	call	_isdigit
 14131  01008A  A0D8               	btfss	status,0,c
 14132  01008C  D04C               	goto	u23890
 14133                           
 14134                           ;doprnt.c: 598: width = 0;
 14135  01008E  0E00               	movlw	0
 14136  010090  0101               	movlb	1	; () banked
 14137  010092  6FAE               	movwf	(printf@width+1)& (0+255),b
 14138  010094  0E00               	movlw	0
 14139  010096  6FAD               	movwf	printf@width& (0+255),b
 14140  010098                     
 14141                           ;doprnt.c: 600: width *= 10;
 14142                           
 14143                           ; BSR set to: 1
 14144  010098  C1AD  F117         	movff	printf@width,___wmul@multiplier
 14145  01009C  C1AE  F118         	movff	printf@width+1,___wmul@multiplier+1
 14146  0100A0  0E00               	movlw	0
 14147  0100A2  0101               	movlb	1	; () banked
 14148  0100A4  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14149  0100A6  0E0A               	movlw	10
 14150  0100A8  6F19               	movwf	___wmul@multiplicand& (0+255),b
 14151  0100AA  EC00  F0C3         	call	___wmul	;wreg free
 14152  0100AE  C117  F1AD         	movff	?___wmul,printf@width
 14153  0100B2  C118  F1AE         	movff	?___wmul+1,printf@width+1
 14154                           
 14155                           ;doprnt.c: 601: width += *f++ - '0';
 14156  0100B6  0ED0               	movlw	208
 14157  0100B8  0101               	movlb	1	; () banked
 14158  0100BA  6F8C               	movwf	??_printf& (0+255),b
 14159  0100BC  0EFF               	movlw	255
 14160  0100BE  6F8D               	movwf	(??_printf+1)& (0+255),b
 14161  0100C0  C182  FFF6         	movff	printf@f,tblptrl
 14162  0100C4  C183  FFF7         	movff	printf@f+1,tblptrh
 14163  0100C8  0E00               	movlw	low (__mediumconst shr (0+16))
 14164  0100CA  6EF8               	movwf	tblptru,c
 14165  0100CC  0E0D               	movlw	(high __ramtop+-1)
 14166  0100CE  64F7               	cpfsgt	tblptrh,c
 14167  0100D0  D003               	bra	u23877
 14168  0100D2  0008               	tblrd		*
 14169  0100D4  50F5               	movf	tablat,w,c
 14170  0100D6  D005               	bra	u23870
 14171  0100D8                     u23877:
 14172  0100D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 14173  0100DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 14174  0100E0  50EF               	movf	indf0,w,c
 14175  0100E2                     u23870:
 14176  0100E2  0101               	movlb	1	; () banked
 14177  0100E4  6F8E               	movwf	(??_printf+2)& (0+255),b
 14178  0100E6  6B8F               	clrf	(??_printf+3)& (0+255),b
 14179  0100E8  518C               	movf	??_printf& (0+255),w,b
 14180  0100EA  278E               	addwf	(??_printf+2)& (0+255),f,b
 14181  0100EC  518D               	movf	(??_printf+1)& (0+255),w,b
 14182  0100EE  238F               	addwfc	(??_printf+3)& (0+255),f,b
 14183  0100F0  518E               	movf	(??_printf+2)& (0+255),w,b
 14184  0100F2  27AD               	addwf	printf@width& (0+255),f,b
 14185  0100F4  518F               	movf	(??_printf+3)& (0+255),w,b
 14186  0100F6  23AE               	addwfc	(printf@width+1)& (0+255),f,b
 14187                           
 14188                           ; BSR set to: 1
 14189  0100F8  4B82               	infsnz	printf@f& (0+255),f,b
 14190  0100FA  2B83               	incf	(printf@f+1)& (0+255),f,b
 14191                           
 14192                           ; BSR set to: 1
 14193                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 14194  0100FC  C182  FFF6         	movff	printf@f,tblptrl
 14195  010100  C183  FFF7         	movff	printf@f+1,tblptrh
 14196  010104  0E00               	movlw	low (__mediumconst shr (0+16))
 14197  010106  6EF8               	movwf	tblptru,c
 14198  010108  0E0D               	movlw	(high __ramtop+-1)
 14199  01010A  64F7               	cpfsgt	tblptrh,c
 14200  01010C  D003               	bra	u23887
 14201  01010E  0008               	tblrd		*
 14202  010110  50F5               	movf	tablat,w,c
 14203  010112  D005               	bra	u23880
 14204  010114                     u23887:
 14205  010114  CFF6 FFE9          	movff	tblptrl,fsr0l
 14206  010118  CFF7 FFEA          	movff	tblptrh,fsr0h
 14207  01011C  50EF               	movf	indf0,w,c
 14208  01011E                     u23880:
 14209  01011E  EC87  F0C3         	call	_isdigit
 14210  010122  B0D8               	btfsc	status,0,c
 14211  010124  D7B9               	goto	l1372
 14212  010126                     u23890:
 14213                           
 14214                           ;doprnt.c: 608: }
 14215                           ;doprnt.c: 611: if(*f == '.') {
 14216  010126  C182  FFF6         	movff	printf@f,tblptrl
 14217  01012A  C183  FFF7         	movff	printf@f+1,tblptrh
 14218  01012E  0E00               	movlw	low (__mediumconst shr (0+16))
 14219  010130  6EF8               	movwf	tblptru,c
 14220  010132  0E0D               	movlw	(high __ramtop+-1)
 14221  010134  64F7               	cpfsgt	tblptrh,c
 14222  010136  D003               	bra	u23907
 14223  010138  0008               	tblrd		*
 14224  01013A  50F5               	movf	tablat,w,c
 14225  01013C  D005               	bra	u23900
 14226  01013E                     u23907:
 14227  01013E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14228  010142  CFF7 FFEA          	movff	tblptrh,fsr0h
 14229  010146  50EF               	movf	indf0,w,c
 14230  010148                     u23900:
 14231  010148  0A2E               	xorlw	46
 14232  01014A  A4D8               	btfss	status,2,c
 14233  01014C  D049               	goto	l1374
 14234                           
 14235                           ;doprnt.c: 612: flag |= 0x4000;
 14236  01014E  0101               	movlb	1	; () banked
 14237  010150  8DAC               	bsf	(printf@flag+1)& (0+255),6,b
 14238                           
 14239                           ;doprnt.c: 613: f++;
 14240  010152  4B82               	infsnz	printf@f& (0+255),f,b
 14241  010154  2B83               	incf	(printf@f+1)& (0+255),f,b
 14242                           
 14243                           ; BSR set to: 1
 14244                           ;doprnt.c: 620: {
 14245                           ;doprnt.c: 621: prec = 0;
 14246  010156  0E00               	movlw	0
 14247  010158  6FB0               	movwf	(printf@prec+1)& (0+255),b
 14248  01015A  0E00               	movlw	0
 14249  01015C  6FAF               	movwf	printf@prec& (0+255),b
 14250                           
 14251                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 14252  01015E  D02A               	goto	l1375
 14253  010160                     
 14254                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 14255                           
 14256                           ; BSR set to: 1
 14257  010160  C1AF  F117         	movff	printf@prec,___wmul@multiplier
 14258  010164  C1B0  F118         	movff	printf@prec+1,___wmul@multiplier+1
 14259  010168  0E00               	movlw	0
 14260  01016A  0101               	movlb	1	; () banked
 14261  01016C  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14262  01016E  0E0A               	movlw	10
 14263  010170  6F19               	movwf	___wmul@multiplicand& (0+255),b
 14264  010172  EC00  F0C3         	call	___wmul	;wreg free
 14265  010176  C182  FFF6         	movff	printf@f,tblptrl
 14266  01017A  C183  FFF7         	movff	printf@f+1,tblptrh
 14267  01017E  0E00               	movlw	low (__mediumconst shr (0+16))
 14268  010180  6EF8               	movwf	tblptru,c
 14269  010182  0E0D               	movlw	(high __ramtop+-1)
 14270  010184  64F7               	cpfsgt	tblptrh,c
 14271  010186  D003               	bra	u23927
 14272  010188  0008               	tblrd		*
 14273  01018A  50F5               	movf	tablat,w,c
 14274  01018C  D005               	bra	u23920
 14275  01018E                     u23927:
 14276  01018E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14277  010192  CFF7 FFEA          	movff	tblptrh,fsr0h
 14278  010196  50EF               	movf	indf0,w,c
 14279  010198                     u23920:
 14280  010198  0101               	movlb	1	; () banked
 14281  01019A  6F8C               	movwf	??_printf& (0+255),b
 14282  01019C  518C               	movf	??_printf& (0+255),w,b
 14283  01019E  2717               	addwf	?___wmul& (0+255),f,b
 14284  0101A0  0E00               	movlw	0
 14285  0101A2  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 14286  0101A4  0ED0               	movlw	208
 14287  0101A6  2517               	addwf	?___wmul& (0+255),w,b
 14288  0101A8  6FAF               	movwf	printf@prec& (0+255),b
 14289  0101AA  0EFF               	movlw	255
 14290  0101AC  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 14291  0101AE  6FB0               	movwf	(printf@prec+1)& (0+255),b
 14292                           
 14293                           ; BSR set to: 1
 14294  0101B0  4B82               	infsnz	printf@f& (0+255),f,b
 14295  0101B2  2B83               	incf	(printf@f+1)& (0+255),f,b
 14296  0101B4                     l1375:
 14297                           
 14298                           ; BSR set to: 1
 14299                           
 14300                           ; BSR set to: 1
 14301  0101B4  C182  FFF6         	movff	printf@f,tblptrl
 14302  0101B8  C183  FFF7         	movff	printf@f+1,tblptrh
 14303  0101BC  0E00               	movlw	low (__mediumconst shr (0+16))
 14304  0101BE  6EF8               	movwf	tblptru,c
 14305  0101C0  0E0D               	movlw	(high __ramtop+-1)
 14306  0101C2  64F7               	cpfsgt	tblptrh,c
 14307  0101C4  D003               	bra	u23937
 14308  0101C6  0008               	tblrd		*
 14309  0101C8  50F5               	movf	tablat,w,c
 14310  0101CA  D005               	bra	u23930
 14311  0101CC                     u23937:
 14312  0101CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 14313  0101D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 14314  0101D4  50EF               	movf	indf0,w,c
 14315  0101D6                     u23930:
 14316  0101D6  EC87  F0C3         	call	_isdigit
 14317  0101DA  A0D8               	btfss	status,0,c
 14318  0101DC  D0A4               	goto	l1379
 14319  0101DE  D7C0               	goto	l1376
 14320  0101E0                     l1374:
 14321                           
 14322                           ;doprnt.c: 626: prec = 0;
 14323  0101E0  0E00               	movlw	0
 14324  0101E2  0101               	movlb	1	; () banked
 14325  0101E4  6FB0               	movwf	(printf@prec+1)& (0+255),b
 14326  0101E6  0E00               	movlw	0
 14327  0101E8  6FAF               	movwf	printf@prec& (0+255),b
 14328                           
 14329                           ; BSR set to: 1
 14330                           ;doprnt.c: 628: flag |= 0x1000;
 14331  0101EA  89AC               	bsf	(printf@flag+1)& (0+255),4,b
 14332                           
 14333                           ; BSR set to: 1
 14334                           ;doprnt.c: 630: }
 14335                           ;doprnt.c: 635: switch(c = *f++) {
 14336  0101EC  D09C               	goto	l1379
 14337  0101EE                     
 14338                           ; BSR set to: 1
 14339                           ;doprnt.c: 663: flag |= 0x400;
 14340                           
 14341                           ; BSR set to: 1
 14342  0101EE  85AC               	bsf	(printf@flag+1)& (0+255),2,b
 14343                           
 14344                           ; BSR set to: 1
 14345                           ;doprnt.c: 698: case 'i':
 14346                           ;doprnt.c: 699: break;
 14347                           
 14348                           ; BSR set to: 1
 14349                           
 14350                           ;doprnt.c: 697: case 'd':
 14351                           
 14352                           ;doprnt.c: 664: break;
 14353  0101F0  D0D1               	goto	l1383
 14354  0101F2                     
 14355                           ; BSR set to: 1
 14356                           ;doprnt.c: 718: case 'x':
 14357                           ;doprnt.c: 721: flag |= 0x80;
 14358                           
 14359                           ; BSR set to: 1
 14360                           
 14361                           ; BSR set to: 1
 14362  0101F2  8FAB               	bsf	printf@flag& (0+255),7,b
 14363                           
 14364                           ;doprnt.c: 723: break;
 14365  0101F4  D0CF               	goto	l1383
 14366  0101F6                     
 14367                           ; BSR set to: 1
 14368                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14369                           
 14370                           ; BSR set to: 1
 14371  0101F6  C19B  FFD9         	movff	printf@ap,fsr2l
 14372  0101FA  C19C  FFDA         	movff	printf@ap+1,fsr2h
 14373  0101FE  CFDE F197          	movff	postinc2,printf@cp
 14374  010202  CFDD F198          	movff	postdec2,printf@cp+1
 14375                           
 14376                           ; BSR set to: 1
 14377  010206  0E02               	movlw	2
 14378  010208  279B               	addwf	printf@ap& (0+255),f,b
 14379  01020A  0E00               	movlw	0
 14380  01020C  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 14381                           
 14382                           ; BSR set to: 1
 14383                           ;doprnt.c: 740: if(!cp)
 14384  01020E  5197               	movf	printf@cp& (0+255),w,b
 14385  010210  1198               	iorwf	(printf@cp+1)& (0+255),w,b
 14386  010212  A4D8               	btfss	status,2,c
 14387  010214  D004               	goto	l1389
 14388                           
 14389                           ; BSR set to: 1
 14390                           ;doprnt.c: 741: cp = "(null)";
 14391  010216  0E86               	movlw	low STR_140
 14392  010218  6F97               	movwf	printf@cp& (0+255),b
 14393  01021A  0EFF               	movlw	high STR_140
 14394  01021C  6F98               	movwf	(printf@cp+1)& (0+255),b
 14395  01021E                     l1389:
 14396                           
 14397                           ; BSR set to: 1
 14398                           ;doprnt.c: 745: len = 0;
 14399                           
 14400                           ; BSR set to: 1
 14401  01021E  0E00               	movlw	0
 14402  010220  6F9A               	movwf	(printf@len+1)& (0+255),b
 14403  010222  0E00               	movlw	0
 14404  010224  6F99               	movwf	printf@len& (0+255),b
 14405                           
 14406                           ;doprnt.c: 746: while(cp[len])
 14407  010226  D003               	goto	l1390
 14408  010228                     
 14409                           ;doprnt.c: 747: len++;
 14410                           
 14411                           ; BSR set to: 1
 14412  010228  0101               	movlb	1	; () banked
 14413  01022A  4B99               	infsnz	printf@len& (0+255),f,b
 14414  01022C  2B9A               	incf	(printf@len+1)& (0+255),f,b
 14415  01022E                     l1390:
 14416                           
 14417                           ; BSR set to: 1
 14418                           
 14419                           ; BSR set to: 1
 14420  01022E  5199               	movf	printf@len& (0+255),w,b
 14421  010230  2597               	addwf	printf@cp& (0+255),w,b
 14422  010232  6F8C               	movwf	??_printf& (0+255),b
 14423  010234  519A               	movf	(printf@len+1)& (0+255),w,b
 14424  010236  2198               	addwfc	(printf@cp+1)& (0+255),w,b
 14425  010238  6F8D               	movwf	(??_printf+1)& (0+255),b
 14426  01023A  C18C  FFF6         	movff	??_printf,tblptrl
 14427  01023E  C18D  FFF7         	movff	??_printf+1,tblptrh
 14428  010242  0E00               	movlw	low (__mediumconst shr (0+16))
 14429  010244  6EF8               	movwf	tblptru,c
 14430  010246  0E0D               	movlw	(high __ramtop+-1)
 14431  010248  64F7               	cpfsgt	tblptrh,c
 14432  01024A  D003               	bra	u23967
 14433  01024C  0008               	tblrd		*
 14434  01024E  50F5               	movf	tablat,w,c
 14435  010250  D005               	bra	u23960
 14436  010252                     u23967:
 14437  010252  CFF6 FFE9          	movff	tblptrl,fsr0l
 14438  010256  CFF7 FFEA          	movff	tblptrh,fsr0h
 14439  01025A  50EF               	movf	indf0,w,c
 14440  01025C                     u23960:
 14441  01025C  0900               	iorlw	0
 14442  01025E  A4D8               	btfss	status,2,c
 14443  010260  D7E3               	goto	l1391
 14444  010262                     u23970:
 14445                           
 14446                           ;doprnt.c: 753: if(prec && prec < len)
 14447                           
 14448                           ;doprnt.c: 750: dostring:
 14449  010262  0101               	movlb	1	; () banked
 14450  010264  51AF               	movf	printf@prec& (0+255),w,b
 14451  010266  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 14452  010268  B4D8               	btfsc	status,2,c
 14453  01026A  D00A               	goto	l1394
 14454                           
 14455                           ; BSR set to: 1
 14456  01026C  5199               	movf	printf@len& (0+255),w,b
 14457  01026E  5DAF               	subwf	printf@prec& (0+255),w,b
 14458  010270  519A               	movf	(printf@len+1)& (0+255),w,b
 14459  010272  59B0               	subwfb	(printf@prec+1)& (0+255),w,b
 14460  010274  B0D8               	btfsc	status,0,c
 14461  010276  D004               	goto	l1394
 14462                           
 14463                           ; BSR set to: 1
 14464                           ;doprnt.c: 754: len = prec;
 14465  010278  C1AF  F199         	movff	printf@prec,printf@len
 14466  01027C  C1B0  F19A         	movff	printf@prec+1,printf@len+1
 14467  010280                     l1394:
 14468                           
 14469                           ; BSR set to: 1
 14470                           ;doprnt.c: 757: if(width > len)
 14471                           
 14472                           ; BSR set to: 1
 14473  010280  51AD               	movf	printf@width& (0+255),w,b
 14474  010282  5D99               	subwf	printf@len& (0+255),w,b
 14475  010284  51AE               	movf	(printf@width+1)& (0+255),w,b
 14476  010286  599A               	subwfb	(printf@len+1)& (0+255),w,b
 14477  010288  B0D8               	btfsc	status,0,c
 14478  01028A  D005               	goto	l1395
 14479                           
 14480                           ; BSR set to: 1
 14481                           ;doprnt.c: 758: width -= len;
 14482  01028C  5199               	movf	printf@len& (0+255),w,b
 14483  01028E  5FAD               	subwf	printf@width& (0+255),f,b
 14484  010290  519A               	movf	(printf@len+1)& (0+255),w,b
 14485  010292  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 14486  010294  D008               	goto	l1397
 14487  010296                     l1395:
 14488                           
 14489                           ; BSR set to: 1
 14490                           ;doprnt.c: 759: else
 14491                           ;doprnt.c: 760: width = 0;
 14492                           
 14493                           ; BSR set to: 1
 14494  010296  0E00               	movlw	0
 14495  010298  6FAE               	movwf	(printf@width+1)& (0+255),b
 14496  01029A  0E00               	movlw	0
 14497  01029C  6FAD               	movwf	printf@width& (0+255),b
 14498                           
 14499                           ; BSR set to: 1
 14500                           ;doprnt.c: 764: while(width--)
 14501  01029E  D003               	goto	l1397
 14502  0102A0                     l17876:
 14503                           
 14504                           ; BSR set to: 1
 14505                           ;doprnt.c: 765: (putch(' ') );
 14506  0102A0  0E20               	movlw	32
 14507  0102A2  EC3E  F0C4         	call	_putch
 14508  0102A6                     l1397:
 14509  0102A6  0101               	movlb	1	; () banked
 14510  0102A8  07AD               	decf	printf@width& (0+255),f,b
 14511  0102AA  A0D8               	btfss	status,0,c
 14512  0102AC  07AE               	decf	(printf@width+1)& (0+255),f,b
 14513  0102AE  29AD               	incf	printf@width& (0+255),w,b
 14514  0102B0  E1F7               	bnz	l17876
 14515  0102B2  29AE               	incf	(printf@width+1)& (0+255),w,b
 14516  0102B4  B4D8               	btfsc	status,2,c
 14517  0102B6  D017               	goto	l1400
 14518  0102B8  D7F3               	goto	l1398
 14519  0102BA                     l17880:
 14520                           
 14521                           ; BSR set to: 1
 14522                           ;doprnt.c: 768: (putch(*cp++) );
 14523  0102BA  C197  FFF6         	movff	printf@cp,tblptrl
 14524  0102BE  C198  FFF7         	movff	printf@cp+1,tblptrh
 14525  0102C2  0E00               	movlw	low (__mediumconst shr (0+16))
 14526  0102C4  6EF8               	movwf	tblptru,c
 14527  0102C6  0E0D               	movlw	(high __ramtop+-1)
 14528  0102C8  64F7               	cpfsgt	tblptrh,c
 14529  0102CA  D003               	bra	u24027
 14530  0102CC  0008               	tblrd		*
 14531  0102CE  50F5               	movf	tablat,w,c
 14532  0102D0  D005               	bra	u24020
 14533  0102D2                     u24027:
 14534  0102D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14535  0102D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14536  0102DA  50EF               	movf	indf0,w,c
 14537  0102DC                     u24020:
 14538  0102DC  EC3E  F0C4         	call	_putch
 14539  0102E0  0101               	movlb	1	; () banked
 14540  0102E2  4B97               	infsnz	printf@cp& (0+255),f,b
 14541  0102E4  2B98               	incf	(printf@cp+1)& (0+255),f,b
 14542  0102E6                     l1400:
 14543                           
 14544                           ; BSR set to: 1
 14545                           
 14546                           ; BSR set to: 1
 14547  0102E6  0799               	decf	printf@len& (0+255),f,b
 14548  0102E8  A0D8               	btfss	status,0,c
 14549  0102EA  079A               	decf	(printf@len+1)& (0+255),f,b
 14550  0102EC  2999               	incf	printf@len& (0+255),w,b
 14551  0102EE  E1E5               	bnz	l17880
 14552  0102F0  299A               	incf	(printf@len+1)& (0+255),w,b
 14553  0102F2  B4D8               	btfsc	status,2,c
 14554  0102F4  EFC8  F086         	goto	u24580
 14555  0102F8  D7E0               	goto	l1401
 14556  0102FA                     
 14557                           ; BSR set to: 1
 14558                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 14559                           
 14560                           ; BSR set to: 1
 14561  0102FA  C19B  FFD9         	movff	printf@ap,fsr2l
 14562  0102FE  C19C  FFDA         	movff	printf@ap+1,fsr2h
 14563  010302  50DF               	movf	indf2,w,c
 14564  010304  6FB1               	movwf	printf@c& (0+255),b
 14565                           
 14566                           ; BSR set to: 1
 14567  010306  0E02               	movlw	2
 14568  010308  279B               	addwf	printf@ap& (0+255),f,b
 14569  01030A  0E00               	movlw	0
 14570  01030C  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 14571  01030E                     
 14572                           ; BSR set to: 1
 14573                           ;doprnt.c: 805: cp = (char *)&c;
 14574                           
 14575                           ; BSR set to: 1
 14576  01030E  0EB1               	movlw	low printf@c
 14577  010310  6F97               	movwf	printf@cp& (0+255),b
 14578  010312  0E01               	movlw	high printf@c
 14579  010314  6F98               	movwf	(printf@cp+1)& (0+255),b
 14580                           
 14581                           ; BSR set to: 1
 14582                           ;doprnt.c: 806: len = 1;
 14583  010316  0E00               	movlw	0
 14584  010318  6F9A               	movwf	(printf@len+1)& (0+255),b
 14585  01031A  0E01               	movlw	1
 14586  01031C  6F99               	movwf	printf@len& (0+255),b
 14587                           
 14588                           ;doprnt.c: 807: goto dostring;
 14589  01031E  D7A1               	goto	u23970
 14590  010320                     
 14591                           ; BSR set to: 1
 14592                           ;doprnt.c: 818: flag |= 0xC0;
 14593                           
 14594                           ; BSR set to: 1
 14595  010320  0EC0               	movlw	192
 14596  010322  13AB               	iorwf	printf@flag& (0+255),f,b
 14597                           
 14598                           ; BSR set to: 1
 14599                           ;doprnt.c: 822: }
 14600                           
 14601                           ;doprnt.c: 819: break;
 14602  010324  D037               	goto	l1383
 14603  010326                     l1379:
 14604                           
 14605                           ; BSR set to: 1
 14606  010326  0101               	movlb	1	; () banked
 14607  010328  5182               	movf	printf@f& (0+255),w,b
 14608  01032A  6F8C               	movwf	??_printf& (0+255),b
 14609  01032C  5183               	movf	(printf@f+1)& (0+255),w,b
 14610  01032E  6F8D               	movwf	(??_printf+1)& (0+255),b
 14611  010330  4B82               	infsnz	printf@f& (0+255),f,b
 14612  010332  2B83               	incf	(printf@f+1)& (0+255),f,b
 14613  010334  C18C  FFF6         	movff	??_printf,tblptrl
 14614  010338  C18D  FFF7         	movff	??_printf+1,tblptrh
 14615  01033C  0E00               	movlw	low (__mediumconst shr (0+16))
 14616  01033E  6EF8               	movwf	tblptru,c
 14617  010340  0E0D               	movlw	(high __ramtop+-1)
 14618  010342  64F7               	cpfsgt	tblptrh,c
 14619  010344  D003               	bra	u24047
 14620  010346  0008               	tblrd		*
 14621  010348  50F5               	movf	tablat,w,c
 14622  01034A  D005               	bra	u24040
 14623  01034C                     u24047:
 14624  01034C  CFF6 FFE9          	movff	tblptrl,fsr0l
 14625  010350  CFF7 FFEA          	movff	tblptrh,fsr0h
 14626  010354  50EF               	movf	indf0,w,c
 14627  010356                     u24040:
 14628  010356  0101               	movlb	1	; () banked
 14629  010358  6FB1               	movwf	printf@c& (0+255),b
 14630  01035A  51B1               	movf	printf@c& (0+255),w,b
 14631                           
 14632                           ; Switch size 1, requested type "space"
 14633                           ; Number of cases is 9, Range of values is 0 to 120
 14634                           ; switch strategies available:
 14635                           ; Name         Instructions Cycles
 14636                           ; simple_byte           28    15 (average)
 14637                           ;	Chosen strategy is simple_byte
 14638  01035C  0A00               	xorlw	0	; case 0
 14639  01035E  B4D8               	btfsc	status,2,c
 14640  010360  0012               	return	
 14641  010362  0A58               	xorlw	88	; case 88
 14642  010364  B4D8               	btfsc	status,2,c
 14643  010366  D745               	goto	l1386
 14644  010368  0A3B               	xorlw	59	; case 99
 14645  01036A  B4D8               	btfsc	status,2,c
 14646  01036C  D7C6               	goto	l1403
 14647  01036E  0A07               	xorlw	7	; case 100
 14648  010370  B4D8               	btfsc	status,2,c
 14649  010372  D010               	goto	l1383
 14650  010374  0A02               	xorlw	2	; case 102
 14651  010376  B4D8               	btfsc	status,2,c
 14652  010378  D73A               	goto	l1382
 14653  01037A  0A0F               	xorlw	15	; case 105
 14654  01037C  B4D8               	btfsc	status,2,c
 14655  01037E  D00A               	goto	l1383
 14656  010380  0A1A               	xorlw	26	; case 115
 14657  010382  B4D8               	btfsc	status,2,c
 14658  010384  D738               	goto	l1388
 14659  010386  0A06               	xorlw	6	; case 117
 14660  010388  B4D8               	btfsc	status,2,c
 14661  01038A  D7CA               	goto	l1405
 14662  01038C  0A0D               	xorlw	13	; case 120
 14663  01038E  B4D8               	btfsc	status,2,c
 14664  010390  D730               	goto	l1386
 14665  010392  D7BD               	goto	l1404
 14666  010394                     l1383:
 14667                           
 14668                           ; BSR set to: 1
 14669                           ;doprnt.c: 825: if(flag & (0x700)) {
 14670                           
 14671                           ; BSR set to: 1
 14672  010394  0E07               	movlw	7
 14673  010396  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 14674  010398  B4D8               	btfsc	status,2,c
 14675  01039A  D33D               	goto	l1406
 14676                           
 14677                           ; BSR set to: 1
 14678                           ;doprnt.c: 827: if(flag & 0x1000)
 14679  01039C  A9AC               	btfss	(printf@flag+1)& (0+255),4,b
 14680  01039E  D004               	goto	l1407
 14681                           
 14682                           ; BSR set to: 1
 14683                           ;doprnt.c: 829: prec = 6;
 14684  0103A0  0E00               	movlw	0
 14685  0103A2  6FB0               	movwf	(printf@prec+1)& (0+255),b
 14686  0103A4  0E06               	movlw	6
 14687  0103A6  6FAF               	movwf	printf@prec& (0+255),b
 14688  0103A8                     l1407:
 14689                           
 14690                           ; BSR set to: 1
 14691                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 14692                           
 14693                           ; BSR set to: 1
 14694  0103A8  C19B  FFD9         	movff	printf@ap,fsr2l
 14695  0103AC  C19C  FFDA         	movff	printf@ap+1,fsr2h
 14696  0103B0  CFDE F1A3          	movff	postinc2,printf@fval
 14697  0103B4  CFDE F1A4          	movff	postinc2,printf@fval+1
 14698  0103B8  CFDE F1A5          	movff	postinc2,printf@fval+2
 14699  0103BC  CFDE F1A6          	movff	postinc2,printf@fval+3
 14700                           
 14701                           ; BSR set to: 1
 14702  0103C0  0E04               	movlw	4
 14703  0103C2  279B               	addwf	printf@ap& (0+255),f,b
 14704  0103C4  0E00               	movlw	0
 14705  0103C6  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 14706                           
 14707                           ; BSR set to: 1
 14708                           ;doprnt.c: 831: if(fval < 0.0) {
 14709  0103C8  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 14710  0103CA  D015               	goto	l1408
 14711                           
 14712                           ; BSR set to: 1
 14713                           ;doprnt.c: 832: fval = -fval;
 14714  0103CC  C1A3  F125         	movff	printf@fval,___flneg@f1
 14715  0103D0  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 14716  0103D4  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 14717  0103D8  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 14718  0103DC  ECA5  F0C2         	call	___flneg	;wreg free
 14719  0103E0  C125  F1A3         	movff	?___flneg,printf@fval
 14720  0103E4  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 14721  0103E8  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 14722  0103EC  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 14723                           
 14724                           ;doprnt.c: 833: flag |= 0x03;
 14725  0103F0  0E03               	movlw	3
 14726  0103F2  0101               	movlb	1	; () banked
 14727  0103F4  13AB               	iorwf	printf@flag& (0+255),f,b
 14728  0103F6                     l1408:
 14729                           
 14730                           ; BSR set to: 1
 14731                           ;doprnt.c: 834: }
 14732                           ;doprnt.c: 835: exp = 0;
 14733                           
 14734                           ; BSR set to: 1
 14735  0103F6  0E00               	movlw	0
 14736  0103F8  6FA2               	movwf	(printf@exp+1)& (0+255),b
 14737  0103FA  0E00               	movlw	0
 14738  0103FC  6FA1               	movwf	printf@exp& (0+255),b
 14739                           
 14740                           ; BSR set to: 1
 14741                           ;doprnt.c: 836: if( fval!=0) {
 14742  0103FE  51A3               	movf	printf@fval& (0+255),w,b
 14743  010400  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 14744  010402  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 14745  010404  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 14746  010406  B4D8               	btfsc	status,2,c
 14747  010408  D084               	goto	l1413
 14748                           
 14749                           ; BSR set to: 1
 14750                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 14751  01040A  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 14752  01040C  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 14753  01040E  0F82               	addlw	130
 14754  010410  6FA1               	movwf	printf@exp& (0+255),b
 14755  010412  6BA2               	clrf	(printf@exp+1)& (0+255),b
 14756  010414  0EFF               	movlw	255
 14757  010416  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 14758                           
 14759                           ; BSR set to: 1
 14760                           ;doprnt.c: 838: exp--;
 14761  010418  07A1               	decf	printf@exp& (0+255),f,b
 14762  01041A  A0D8               	btfss	status,0,c
 14763  01041C  07A2               	decf	(printf@exp+1)& (0+255),f,b
 14764                           
 14765                           ; BSR set to: 1
 14766                           ;doprnt.c: 839: exp *= 3;
 14767  01041E  C1A1  F117         	movff	printf@exp,___wmul@multiplier
 14768  010422  C1A2  F118         	movff	printf@exp+1,___wmul@multiplier+1
 14769  010426  0E00               	movlw	0
 14770  010428  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14771  01042A  0E03               	movlw	3
 14772  01042C  6F19               	movwf	___wmul@multiplicand& (0+255),b
 14773  01042E  EC00  F0C3         	call	___wmul	;wreg free
 14774  010432  C117  F1A1         	movff	?___wmul,printf@exp
 14775  010436  C118  F1A2         	movff	?___wmul+1,printf@exp+1
 14776                           
 14777                           ;doprnt.c: 840: exp /= 10;
 14778  01043A  C1A1  F11D         	movff	printf@exp,___awdiv@dividend
 14779  01043E  C1A2  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 14780  010442  0E00               	movlw	0
 14781  010444  0101               	movlb	1	; () banked
 14782  010446  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 14783  010448  0E0A               	movlw	10
 14784  01044A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 14785  01044C  EC4E  F0BC         	call	___awdiv	;wreg free
 14786  010450  C11D  F1A1         	movff	?___awdiv,printf@exp
 14787  010454  C11E  F1A2         	movff	?___awdiv+1,printf@exp+1
 14788                           
 14789                           ;doprnt.c: 841: if(exp < 0)
 14790  010458  0101               	movlb	1	; () banked
 14791  01045A  AFA2               	btfss	(printf@exp+1)& (0+255),7,b
 14792  01045C  D003               	goto	l1410
 14793                           
 14794                           ; BSR set to: 1
 14795                           ;doprnt.c: 842: exp--;
 14796  01045E  07A1               	decf	printf@exp& (0+255),f,b
 14797  010460  A0D8               	btfss	status,0,c
 14798  010462  07A2               	decf	(printf@exp+1)& (0+255),f,b
 14799  010464                     l1410:
 14800                           
 14801                           ; BSR set to: 1
 14802                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 14803                           
 14804                           ; BSR set to: 1
 14805  010464  51A1               	movf	printf@exp& (0+255),w,b
 14806  010466  0800               	sublw	0
 14807  010468  EC89  F099         	call	_scale
 14808  01046C  C16F  F19D         	movff	?_scale,printf@tmpval
 14809  010470  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 14810  010474  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 14811  010478  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 14812                           
 14813                           ;doprnt.c: 847: tmpval.integ *= fval;
 14814  01047C  C19D  F156         	movff	printf@tmpval,___flmul@b
 14815  010480  C19E  F157         	movff	printf@tmpval+1,___flmul@b+1
 14816  010484  C19F  F158         	movff	printf@tmpval+2,___flmul@b+2
 14817  010488  C1A0  F159         	movff	printf@tmpval+3,___flmul@b+3
 14818  01048C  C1A3  F15A         	movff	printf@fval,___flmul@a
 14819  010490  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 14820  010494  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 14821  010498  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 14822  01049C  ECCF  F09F         	call	___flmul	;wreg free
 14823  0104A0  C156  F19D         	movff	?___flmul,printf@tmpval
 14824  0104A4  C157  F19E         	movff	?___flmul+1,printf@tmpval+1
 14825  0104A8  C158  F19F         	movff	?___flmul+2,printf@tmpval+2
 14826  0104AC  C159  F1A0         	movff	?___flmul+3,printf@tmpval+3
 14827                           
 14828                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 14829  0104B0  C19D  F117         	movff	printf@tmpval,___flge@ff1
 14830  0104B4  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 14831  0104B8  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 14832  0104BC  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 14833  0104C0  0E00               	movlw	0
 14834  0104C2  0101               	movlb	1	; () banked
 14835  0104C4  6F1B               	movwf	___flge@ff2& (0+255),b
 14836  0104C6  0E00               	movlw	0
 14837  0104C8  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 14838  0104CA  0E80               	movlw	128
 14839  0104CC  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 14840  0104CE  0E3F               	movlw	63
 14841  0104D0  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 14842  0104D2  ECB0  F0B6         	call	___flge	;wreg free
 14843  0104D6  0101               	movlb	1	; () banked
 14844  0104D8  B0D8               	btfsc	status,0,c
 14845  0104DA  D004               	goto	l1411
 14846                           
 14847                           ; BSR set to: 1
 14848                           ;doprnt.c: 849: exp--;
 14849  0104DC  07A1               	decf	printf@exp& (0+255),f,b
 14850  0104DE  A0D8               	btfss	status,0,c
 14851  0104E0  07A2               	decf	(printf@exp+1)& (0+255),f,b
 14852  0104E2  D017               	goto	l1413
 14853  0104E4                     l1411:
 14854                           
 14855                           ; BSR set to: 1
 14856                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 14857                           
 14858                           ; BSR set to: 1
 14859  0104E4  C19D  F117         	movff	printf@tmpval,___flge@ff1
 14860  0104E8  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 14861  0104EC  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 14862  0104F0  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 14863  0104F4  0E00               	movlw	0
 14864  0104F6  6F1B               	movwf	___flge@ff2& (0+255),b
 14865  0104F8  0E00               	movlw	0
 14866  0104FA  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 14867  0104FC  0E20               	movlw	32
 14868  0104FE  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 14869  010500  0E41               	movlw	65
 14870  010502  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 14871  010504  ECB0  F0B6         	call	___flge	;wreg free
 14872  010508  0101               	movlb	1	; () banked
 14873  01050A  A0D8               	btfss	status,0,c
 14874  01050C  D002               	goto	l1413
 14875                           
 14876                           ; BSR set to: 1
 14877                           ;doprnt.c: 851: exp++;
 14878  01050E  4BA1               	infsnz	printf@exp& (0+255),f,b
 14879  010510  2BA2               	incf	(printf@exp+1)& (0+255),f,b
 14880  010512                     l1413:
 14881                           
 14882                           ; BSR set to: 1
 14883                           ;doprnt.c: 852: }
 14884                           ;doprnt.c: 1112: if(prec <= 12)
 14885                           
 14886                           ; BSR set to: 1
 14887                           
 14888                           ; BSR set to: 1
 14889                           
 14890                           ; BSR set to: 1
 14891  010512  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 14892  010514  D006               	goto	u24120
 14893  010516  51B0               	movf	(printf@prec+1)& (0+255),w,b
 14894  010518  E121               	bnz	l17948
 14895  01051A  0E0D               	movlw	13
 14896  01051C  5DAF               	subwf	printf@prec& (0+255),w,b
 14897  01051E  B0D8               	btfsc	status,0,c
 14898  010520  D01D               	goto	l1414
 14899  010522                     u24120:
 14900                           
 14901                           ; BSR set to: 1
 14902                           ;doprnt.c: 1113: fval += fround(prec);
 14903  010522  C1A3  F129         	movff	printf@fval,___fladd@b
 14904  010526  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 14905  01052A  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 14906  01052E  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 14907  010532  51AF               	movf	printf@prec& (0+255),w,b
 14908  010534  ECC1  F0AA         	call	_fround
 14909  010538  C16F  F12D         	movff	?_fround,___fladd@a
 14910  01053C  C170  F12E         	movff	?_fround+1,___fladd@a+1
 14911  010540  C171  F12F         	movff	?_fround+2,___fladd@a+2
 14912  010544  C172  F130         	movff	?_fround+3,___fladd@a+3
 14913  010548  EC20  F0A3         	call	___fladd	;wreg free
 14914  01054C  C129  F1A3         	movff	?___fladd,printf@fval
 14915  010550  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 14916  010554  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 14917  010558  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 14918  01055C                     l1414:
 14919  01055C                     l17948:
 14920                           
 14921                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 14922  01055C  0101               	movlb	1	; () banked
 14923  01055E  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 14924  010560  D006               	goto	u24130
 14925  010562  51A2               	movf	(printf@exp+1)& (0+255),w,b
 14926  010564  E122               	bnz	l17956
 14927  010566  0E0A               	movlw	10
 14928  010568  5DA1               	subwf	printf@exp& (0+255),w,b
 14929  01056A  B0D8               	btfsc	status,0,c
 14930  01056C  D01E               	goto	u24160
 14931  01056E                     u24130:
 14932                           
 14933                           ; BSR set to: 1
 14934  01056E  51A3               	movf	printf@fval& (0+255),w,b
 14935  010570  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 14936  010572  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 14937  010574  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 14938  010576  B4D8               	btfsc	status,2,c
 14939  010578  D062               	goto	l1415
 14940                           
 14941                           ; BSR set to: 1
 14942  01057A  C1A3  F178         	movff	printf@fval,___fltol@f1
 14943  01057E  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 14944  010582  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 14945  010586  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 14946  01058A  ECDA  F0B8         	call	___fltol	;wreg free
 14947  01058E  0101               	movlb	1	; () banked
 14948  010590  5178               	movf	?___fltol& (0+255),w,b
 14949  010592  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 14950  010594  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 14951  010596  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 14952  010598  B4D8               	btfsc	status,2,c
 14953                           
 14954                           ; BSR set to: 1
 14955  01059A  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 14956  01059C  D050               	goto	l1415
 14957  01059E  51A2               	movf	(printf@exp+1)& (0+255),w,b
 14958  0105A0  E104               	bnz	l17956
 14959  0105A2  0E02               	movlw	2
 14960  0105A4  5DA1               	subwf	printf@exp& (0+255),w,b
 14961  0105A6  A0D8               	btfss	status,0,c
 14962  0105A8  D04A               	goto	l1415
 14963  0105AA                     u24160:
 14964  0105AA                     l17956:
 14965                           
 14966                           ; BSR set to: 1
 14967                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 14968  0105AA  C19D  F117         	movff	printf@tmpval,___flge@ff1
 14969  0105AE  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 14970  0105B2  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 14971  0105B6  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 14972  0105BA  0E5F               	movlw	95
 14973  0105BC  6F1B               	movwf	___flge@ff2& (0+255),b
 14974  0105BE  0E70               	movlw	112
 14975  0105C0  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 14976  0105C2  0E89               	movlw	137
 14977  0105C4  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 14978  0105C6  0E40               	movlw	64
 14979  0105C8  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 14980  0105CA  ECB0  F0B6         	call	___flge	;wreg free
 14981  0105CE  0101               	movlb	1	; () banked
 14982  0105D0  B0D8               	btfsc	status,0,c
 14983  0105D2  D002               	goto	l1418
 14984                           
 14985                           ; BSR set to: 1
 14986                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 14987  0105D4  0EF7               	movlw	247
 14988  0105D6  D001               	goto	L3
 14989  0105D8                     l1418:
 14990                           
 14991                           ; BSR set to: 1
 14992                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 14993                           
 14994                           ; BSR set to: 1
 14995  0105D8  0EF8               	movlw	248
 14996  0105DA                     L3:
 14997  0105DA  27A1               	addwf	printf@exp& (0+255),f,b
 14998  0105DC  0EFF               	movlw	255
 14999  0105DE  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 15000                           
 15001                           ; BSR set to: 1
 15002                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 15003                           
 15004                           ; BSR set to: 1
 15005  0105E0  51A1               	movf	printf@exp& (0+255),w,b
 15006  0105E2  EC89  F099         	call	_scale
 15007  0105E6  C16F  F19D         	movff	?_scale,printf@tmpval
 15008  0105EA  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 15009  0105EE  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 15010  0105F2  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 15011  0105F6  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 15012  0105FA  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 15013  0105FE  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 15014  010602  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 15015  010606  C19D  F11B         	movff	printf@tmpval,__div_to_l_@f2
 15016  01060A  C19E  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 15017  01060E  C19F  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 15018  010612  C1A0  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 15019  010616  ECF5  F0B4         	call	__div_to_l_	;wreg free
 15020  01061A  C117  F1A7         	movff	?__div_to_l_,printf@val
 15021  01061E  C118  F1A8         	movff	?__div_to_l_+1,printf@val+1
 15022  010622  C119  F1A9         	movff	?__div_to_l_+2,printf@val+2
 15023  010626  C11A  F1AA         	movff	?__div_to_l_+3,printf@val+3
 15024                           
 15025                           ;doprnt.c: 1129: fval = 0.0;
 15026  01062A  0E00               	movlw	0
 15027  01062C  0101               	movlb	1	; () banked
 15028  01062E  6FA3               	movwf	printf@fval& (0+255),b
 15029  010630  0E00               	movlw	0
 15030  010632  6FA4               	movwf	(printf@fval+1)& (0+255),b
 15031  010634  0E00               	movlw	0
 15032  010636  6FA5               	movwf	(printf@fval+2)& (0+255),b
 15033  010638  0E00               	movlw	0
 15034  01063A  6FA6               	movwf	(printf@fval+3)& (0+255),b
 15035                           
 15036                           ;doprnt.c: 1130: } else {
 15037  01063C  D03C               	goto	l1424
 15038  01063E                     l1415:
 15039                           
 15040                           ; BSR set to: 1
 15041                           ;doprnt.c: 1131: val = (unsigned long)fval;
 15042                           
 15043                           ; BSR set to: 1
 15044  01063E  C1A3  F178         	movff	printf@fval,___fltol@f1
 15045  010642  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 15046  010646  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 15047  01064A  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 15048  01064E  ECDA  F0B8         	call	___fltol	;wreg free
 15049  010652  C178  F1A7         	movff	?___fltol,printf@val
 15050  010656  C179  F1A8         	movff	?___fltol+1,printf@val+1
 15051  01065A  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 15052  01065E  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 15053                           
 15054                           ;doprnt.c: 1132: fval -= (double)val;
 15055  010662  C1A3  F13D         	movff	printf@fval,___flsub@b
 15056  010666  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 15057  01066A  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 15058  01066E  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 15059  010672  C1A7  F117         	movff	printf@val,___xxtofl@val
 15060  010676  C1A8  F118         	movff	printf@val+1,___xxtofl@val+1
 15061  01067A  C1A9  F119         	movff	printf@val+2,___xxtofl@val+2
 15062  01067E  C1AA  F11A         	movff	printf@val+3,___xxtofl@val+3
 15063  010682  0E00               	movlw	0
 15064  010684  EC70  F0B2         	call	___xxtofl
 15065  010688  C117  F141         	movff	?___xxtofl,___flsub@a
 15066  01068C  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 15067  010690  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 15068  010694  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 15069  010698  EC07  F0C1         	call	___flsub	;wreg free
 15070  01069C  C13D  F1A3         	movff	?___flsub,printf@fval
 15071  0106A0  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 15072  0106A4  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 15073  0106A8  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 15074                           
 15075                           ;doprnt.c: 1133: exp = 0;
 15076  0106AC  0E00               	movlw	0
 15077  0106AE  0101               	movlb	1	; () banked
 15078  0106B0  6FA2               	movwf	(printf@exp+1)& (0+255),b
 15079  0106B2  0E00               	movlw	0
 15080  0106B4  6FA1               	movwf	printf@exp& (0+255),b
 15081  0106B6                     l1424:
 15082                           
 15083                           ; BSR set to: 1
 15084                           ;doprnt.c: 1134: }
 15085                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 15086                           
 15087                           ; BSR set to: 1
 15088  0106B6  0E01               	movlw	1
 15089  0106B8  6FB1               	movwf	printf@c& (0+255),b
 15090  0106BA                     l17976:
 15091                           
 15092                           ; BSR set to: 1
 15093  0106BA  0E0A               	movlw	10
 15094  0106BC  19B1               	xorwf	printf@c& (0+255),w,b
 15095  0106BE  B4D8               	btfsc	status,2,c
 15096  0106C0  D01B               	goto	u24200
 15097                           
 15098                           ; BSR set to: 1
 15099                           ;doprnt.c: 1137: if(val < dpowers[c])
 15100                           
 15101                           ; BSR set to: 1
 15102                           
 15103                           ; BSR set to: 1
 15104  0106C2  51B1               	movf	printf@c& (0+255),w,b
 15105  0106C4  0D04               	mullw	4
 15106  0106C6  0E6B               	movlw	low _dpowers
 15107  0106C8  24F3               	addwf	prodl,w,c
 15108  0106CA  6EF6               	movwf	tblptrl,c
 15109  0106CC  0EEA               	movlw	high _dpowers
 15110  0106CE  20F4               	addwfc	prodh,w,c
 15111  0106D0  6EF7               	movwf	tblptrh,c
 15112  0106D2                     	if	1	;There are 3 active tblptr bytes
 15113  0106D2  6AF8               	clrf	tblptru,c
 15114  0106D4  0E00               	movlw	low (__mediumconst shr (0+16))
 15115  0106D6  22F8               	addwfc	tblptru,f,c
 15116  0106D8                     	endif
 15117  0106D8  0009               	tblrd		*+
 15118  0106DA  50F5               	movf	tablat,w,c
 15119  0106DC  5DA7               	subwf	printf@val& (0+255),w,b
 15120  0106DE  0009               	tblrd		*+
 15121  0106E0  50F5               	movf	tablat,w,c
 15122  0106E2  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 15123  0106E4  0009               	tblrd		*+
 15124  0106E6  50F5               	movf	tablat,w,c
 15125  0106E8  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 15126  0106EA  0009               	tblrd		*+
 15127  0106EC  50F5               	movf	tablat,w,c
 15128  0106EE  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 15129  0106F0  A0D8               	btfss	status,0,c
 15130  0106F2  D002               	goto	u24200
 15131                           
 15132                           ; BSR set to: 1
 15133                           
 15134                           ; BSR set to: 1
 15135                           
 15136                           ; BSR set to: 1
 15137                           ;doprnt.c: 1138: break;
 15138  0106F4  2BB1               	incf	printf@c& (0+255),f,b
 15139  0106F6  D7E1               	goto	l17976
 15140  0106F8                     u24200:
 15141                           
 15142                           ; BSR set to: 1
 15143                           ;doprnt.c: 1142: width -= prec + c + exp;
 15144                           
 15145                           ; BSR set to: 1
 15146  0106F8  C1B1  F18C         	movff	printf@c,??_printf
 15147  0106FC  6B8D               	clrf	(??_printf+1)& (0+255),b
 15148  0106FE  BF8C               	btfsc	??_printf& (0+255),7,b
 15149  010700  078D               	decf	(??_printf+1)& (0+255),f,b
 15150  010702  51AF               	movf	printf@prec& (0+255),w,b
 15151  010704  278C               	addwf	??_printf& (0+255),f,b
 15152  010706  51B0               	movf	(printf@prec+1)& (0+255),w,b
 15153  010708  238D               	addwfc	(??_printf+1)& (0+255),f,b
 15154  01070A  51A1               	movf	printf@exp& (0+255),w,b
 15155  01070C  278C               	addwf	??_printf& (0+255),f,b
 15156  01070E  51A2               	movf	(printf@exp+1)& (0+255),w,b
 15157  010710  238D               	addwfc	(??_printf+1)& (0+255),f,b
 15158  010712  518C               	movf	??_printf& (0+255),w,b
 15159  010714  5FAD               	subwf	printf@width& (0+255),f,b
 15160  010716  518D               	movf	(??_printf+1)& (0+255),w,b
 15161  010718  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 15162                           
 15163                           ;doprnt.c: 1143: if(
 15164                           ;doprnt.c: 1147: prec)
 15165  01071A  51AF               	movf	printf@prec& (0+255),w,b
 15166  01071C  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 15167  01071E  B4D8               	btfsc	status,2,c
 15168  010720  D003               	goto	l1428
 15169                           
 15170                           ; BSR set to: 1
 15171                           ;doprnt.c: 1148: width--;
 15172  010722  07AD               	decf	printf@width& (0+255),f,b
 15173  010724  A0D8               	btfss	status,0,c
 15174  010726  07AE               	decf	(printf@width+1)& (0+255),f,b
 15175  010728                     l1428:
 15176                           
 15177                           ; BSR set to: 1
 15178                           ;doprnt.c: 1149: if(flag & 0x03)
 15179                           
 15180                           ; BSR set to: 1
 15181  010728  0E03               	movlw	3
 15182  01072A  15AB               	andwf	printf@flag& (0+255),w,b
 15183  01072C  6F8C               	movwf	??_printf& (0+255),b
 15184  01072E  0E00               	movlw	0
 15185  010730  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 15186  010732  6F8D               	movwf	(??_printf+1)& (0+255),b
 15187  010734  518C               	movf	??_printf& (0+255),w,b
 15188  010736  118D               	iorwf	(??_printf+1)& (0+255),w,b
 15189  010738  B4D8               	btfsc	status,2,c
 15190  01073A  D003               	goto	l1429
 15191                           
 15192                           ; BSR set to: 1
 15193                           ;doprnt.c: 1150: width--;
 15194  01073C  07AD               	decf	printf@width& (0+255),f,b
 15195  01073E  A0D8               	btfss	status,0,c
 15196  010740  07AE               	decf	(printf@width+1)& (0+255),f,b
 15197  010742                     l1429:
 15198                           
 15199                           ; BSR set to: 1
 15200                           ;doprnt.c: 1153: if(flag & 0x04) {
 15201                           
 15202                           ; BSR set to: 1
 15203  010742  A5AB               	btfss	printf@flag& (0+255),2,b
 15204  010744  D025               	goto	l1436
 15205                           
 15206                           ; BSR set to: 1
 15207                           ;doprnt.c: 1157: if(flag & 0x03)
 15208  010746  0E03               	movlw	3
 15209  010748  15AB               	andwf	printf@flag& (0+255),w,b
 15210  01074A  6F8C               	movwf	??_printf& (0+255),b
 15211  01074C  0E00               	movlw	0
 15212  01074E  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 15213  010750  6F8D               	movwf	(??_printf+1)& (0+255),b
 15214  010752  518C               	movf	??_printf& (0+255),w,b
 15215  010754  118D               	iorwf	(??_printf+1)& (0+255),w,b
 15216  010756  B4D8               	btfsc	status,2,c
 15217  010758  D00B               	goto	l1432
 15218                           
 15219                           ; BSR set to: 1
 15220                           ;doprnt.c: 1159: (putch('-') );
 15221  01075A  0E2D               	movlw	45
 15222  01075C  EC3E  F0C4         	call	_putch
 15223                           
 15224                           ;doprnt.c: 1168: while(width > 0) {
 15225  010760  D007               	goto	l1432
 15226  010762                     l18002:
 15227                           
 15228                           ;doprnt.c: 1169: (putch('0') );
 15229  010762  0E30               	movlw	48
 15230  010764  EC3E  F0C4         	call	_putch
 15231                           
 15232                           ;doprnt.c: 1170: width--;
 15233  010768  0101               	movlb	1	; () banked
 15234  01076A  07AD               	decf	printf@width& (0+255),f,b
 15235  01076C  A0D8               	btfss	status,0,c
 15236  01076E  07AE               	decf	(printf@width+1)& (0+255),f,b
 15237  010770                     l1432:
 15238                           
 15239                           ; BSR set to: 1
 15240  010770  0101               	movlb	1	; () banked
 15241  010772  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 15242  010774  D06C               	goto	l1440
 15243  010776  51AE               	movf	(printf@width+1)& (0+255),w,b
 15244  010778  E1F4               	bnz	l18002
 15245  01077A  05AD               	decf	printf@width& (0+255),w,b
 15246  01077C  A0D8               	btfss	status,0,c
 15247  01077E  D067               	goto	l1440
 15248  010780  D7F0               	goto	l1433
 15249  010782                     l18008:
 15250                           
 15251                           ; BSR set to: 1
 15252                           ;doprnt.c: 1181: (putch(' ') );
 15253  010782  0E20               	movlw	32
 15254  010784  EC3E  F0C4         	call	_putch
 15255                           
 15256                           ;doprnt.c: 1182: width--;
 15257  010788  0101               	movlb	1	; () banked
 15258  01078A  07AD               	decf	printf@width& (0+255),f,b
 15259  01078C  A0D8               	btfss	status,0,c
 15260  01078E  07AE               	decf	(printf@width+1)& (0+255),f,b
 15261  010790                     l1436:
 15262                           
 15263                           ; BSR set to: 1
 15264                           
 15265                           ; BSR set to: 1
 15266  010790  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 15267  010792  D005               	goto	u24260
 15268  010794  51AE               	movf	(printf@width+1)& (0+255),w,b
 15269  010796  E1F5               	bnz	l18008
 15270  010798  05AD               	decf	printf@width& (0+255),w,b
 15271  01079A  B0D8               	btfsc	status,0,c
 15272  01079C  D7F2               	goto	l1437
 15273  01079E                     u24260:
 15274                           
 15275                           ; BSR set to: 1
 15276                           ;doprnt.c: 1183: }
 15277                           ;doprnt.c: 1188: if(flag & 0x03)
 15278                           
 15279                           ; BSR set to: 1
 15280  01079E  0E03               	movlw	3
 15281  0107A0  15AB               	andwf	printf@flag& (0+255),w,b
 15282  0107A2  6F8C               	movwf	??_printf& (0+255),b
 15283  0107A4  0E00               	movlw	0
 15284  0107A6  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 15285  0107A8  6F8D               	movwf	(??_printf+1)& (0+255),b
 15286  0107AA  518C               	movf	??_printf& (0+255),w,b
 15287  0107AC  118D               	iorwf	(??_printf+1)& (0+255),w,b
 15288  0107AE  B4D8               	btfsc	status,2,c
 15289  0107B0  D04E               	goto	l1440
 15290                           
 15291                           ; BSR set to: 1
 15292                           ;doprnt.c: 1190: (putch('-') );
 15293  0107B2  0E2D               	movlw	45
 15294  0107B4  EC3E  F0C4         	call	_putch
 15295                           
 15296                           ;doprnt.c: 1195: }
 15297                           ;doprnt.c: 1196: while(c--) {
 15298  0107B8  D04A               	goto	l1440
 15299  0107BA                     
 15300                           ;doprnt.c: 1200: {
 15301                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 15302  0107BA  C1A7  F117         	movff	printf@val,___lldiv@dividend
 15303  0107BE  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 15304  0107C2  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 15305  0107C6  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15306  0107CA  0101               	movlb	1	; () banked
 15307  0107CC  51B1               	movf	printf@c& (0+255),w,b
 15308  0107CE  0D04               	mullw	4
 15309  0107D0  0E6B               	movlw	low _dpowers
 15310  0107D2  24F3               	addwf	prodl,w,c
 15311  0107D4  6EF6               	movwf	tblptrl,c
 15312  0107D6  0EEA               	movlw	high _dpowers
 15313  0107D8  20F4               	addwfc	prodh,w,c
 15314  0107DA  6EF7               	movwf	tblptrh,c
 15315  0107DC                     	if	1	;There are 3 active tblptr bytes
 15316  0107DC  6AF8               	clrf	tblptru,c
 15317  0107DE  0E00               	movlw	low (__mediumconst shr (0+16))
 15318  0107E0  22F8               	addwfc	tblptru,f,c
 15319  0107E2                     	endif
 15320  0107E2  0009               	tblrd		*+
 15321  0107E4  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15322  0107E8  0009               	tblrd		*+
 15323  0107EA  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15324  0107EE  0009               	tblrd		*+
 15325  0107F0  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15326  0107F4  000A               	tblrd		*-
 15327  0107F6  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15328  0107FA  EC91  F0BC         	call	___lldiv	;wreg free
 15329  0107FE  C117  F19D         	movff	?___lldiv,printf@tmpval
 15330  010802  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 15331  010806  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 15332  01080A  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 15333                           
 15334                           ;doprnt.c: 1202: tmpval.vd %= 10;
 15335  01080E  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 15336  010812  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 15337  010816  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 15338  01081A  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 15339  01081E  0E0A               	movlw	10
 15340  010820  0101               	movlb	1	; () banked
 15341  010822  6F28               	movwf	___llmod@divisor& (0+255),b
 15342  010824  0E00               	movlw	0
 15343  010826  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 15344  010828  0E00               	movlw	0
 15345  01082A  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 15346  01082C  0E00               	movlw	0
 15347  01082E  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 15348  010830  ECE2  F0BE         	call	___llmod	;wreg free
 15349  010834  C124  F19D         	movff	?___llmod,printf@tmpval
 15350  010838  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 15351  01083C  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 15352  010840  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 15353                           
 15354                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 15355  010844  0101               	movlb	1	; () banked
 15356  010846  519D               	movf	printf@tmpval& (0+255),w,b
 15357  010848  0F30               	addlw	48
 15358  01084A  EC3E  F0C4         	call	_putch
 15359  01084E                     l1440:
 15360  01084E  0101               	movlb	1	; () banked
 15361  010850  07B1               	decf	printf@c& (0+255),f,b
 15362  010852  29B1               	incf	printf@c& (0+255),w,b
 15363  010854  B4D8               	btfsc	status,2,c
 15364  010856  D008               	goto	l1443
 15365  010858  D7B0               	goto	l1441
 15366  01085A                     l18026:
 15367                           
 15368                           ; BSR set to: 1
 15369                           ;doprnt.c: 1208: (putch('0') );
 15370  01085A  0E30               	movlw	48
 15371  01085C  EC3E  F0C4         	call	_putch
 15372                           
 15373                           ;doprnt.c: 1209: exp--;
 15374  010860  0101               	movlb	1	; () banked
 15375  010862  07A1               	decf	printf@exp& (0+255),f,b
 15376  010864  A0D8               	btfss	status,0,c
 15377  010866  07A2               	decf	(printf@exp+1)& (0+255),f,b
 15378  010868                     l1443:
 15379                           
 15380                           ; BSR set to: 1
 15381                           
 15382                           ; BSR set to: 1
 15383  010868  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 15384  01086A  D005               	goto	u24290
 15385  01086C  51A2               	movf	(printf@exp+1)& (0+255),w,b
 15386  01086E  E1F5               	bnz	l18026
 15387  010870  05A1               	decf	printf@exp& (0+255),w,b
 15388  010872  B0D8               	btfsc	status,0,c
 15389  010874  D7F2               	goto	l1444
 15390  010876                     u24290:
 15391                           
 15392                           ; BSR set to: 1
 15393                           ;doprnt.c: 1210: }
 15394                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 15395                           
 15396                           ; BSR set to: 1
 15397  010876  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 15398  010878  D009               	goto	l1446
 15399  01087A  51B0               	movf	(printf@prec+1)& (0+255),w,b
 15400  01087C  E104               	bnz	u24300
 15401  01087E  0E09               	movlw	9
 15402  010880  5DAF               	subwf	printf@prec& (0+255),w,b
 15403  010882  A0D8               	btfss	status,0,c
 15404  010884  D003               	goto	l1446
 15405  010886                     u24300:
 15406                           
 15407                           ; BSR set to: 1
 15408                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 15409  010886  0E08               	movlw	8
 15410  010888  6FB1               	movwf	printf@c& (0+255),b
 15411  01088A  D002               	goto	l1447
 15412  01088C                     l1446:
 15413                           
 15414                           ; BSR set to: 1
 15415                           ;doprnt.c: 1213: else
 15416                           ;doprnt.c: 1214: c = prec;
 15417  01088C  C1AF  F1B1         	movff	printf@prec,printf@c
 15418  010890                     l1447:
 15419                           
 15420                           ; BSR set to: 1
 15421                           ;doprnt.c: 1215: prec -= c;
 15422                           
 15423                           ; BSR set to: 1
 15424  010890  51B1               	movf	printf@c& (0+255),w,b
 15425  010892  5FAF               	subwf	printf@prec& (0+255),f,b
 15426  010894  0E00               	movlw	0
 15427  010896  BFB1               	btfsc	printf@c& (0+255),7,b
 15428  010898  0EFF               	movlw	255
 15429  01089A  5BB0               	subwfb	(printf@prec+1)& (0+255),f,b
 15430                           
 15431                           ; BSR set to: 1
 15432                           ;doprnt.c: 1219: if(c)
 15433  01089C  51B1               	movf	printf@c& (0+255),w,b
 15434  01089E  B4D8               	btfsc	status,2,c
 15435  0108A0  D003               	goto	l1448
 15436                           
 15437                           ; BSR set to: 1
 15438                           ;doprnt.c: 1221: (putch('.') );
 15439  0108A2  0E2E               	movlw	46
 15440  0108A4  EC3E  F0C4         	call	_putch
 15441  0108A8                     l1448:
 15442                           
 15443                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 15444  0108A8  0101               	movlb	1	; () banked
 15445  0108AA  51B1               	movf	printf@c& (0+255),w,b
 15446  0108AC  EC89  F099         	call	_scale
 15447  0108B0  C16F  F192         	movff	?_scale,_printf$3898
 15448  0108B4  C170  F193         	movff	?_scale+1,_printf$3898+1
 15449  0108B8  C171  F194         	movff	?_scale+2,_printf$3898+2
 15450  0108BC  C172  F195         	movff	?_scale+3,_printf$3898+3
 15451                           
 15452                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 15453  0108C0  C1A3  F15A         	movff	printf@fval,___flmul@a
 15454  0108C4  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 15455  0108C8  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 15456  0108CC  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 15457  0108D0  C192  F156         	movff	_printf$3898,___flmul@b
 15458  0108D4  C193  F157         	movff	_printf$3898+1,___flmul@b+1
 15459  0108D8  C194  F158         	movff	_printf$3898+2,___flmul@b+2
 15460  0108DC  C195  F159         	movff	_printf$3898+3,___flmul@b+3
 15461  0108E0  ECCF  F09F         	call	___flmul	;wreg free
 15462  0108E4  C156  F178         	movff	?___flmul,___fltol@f1
 15463  0108E8  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 15464  0108EC  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 15465  0108F0  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 15466  0108F4  ECDA  F0B8         	call	___fltol	;wreg free
 15467  0108F8  C178  F1A7         	movff	?___fltol,printf@val
 15468  0108FC  C179  F1A8         	movff	?___fltol+1,printf@val+1
 15469  010900  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 15470  010904  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 15471                           
 15472                           ;doprnt.c: 1228: while(c--) {
 15473  010908  D074               	goto	l1449
 15474  01090A                     
 15475                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 15476  01090A  C1A7  F117         	movff	printf@val,___lldiv@dividend
 15477  01090E  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 15478  010912  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 15479  010916  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15480  01091A  0101               	movlb	1	; () banked
 15481  01091C  51B1               	movf	printf@c& (0+255),w,b
 15482  01091E  0D04               	mullw	4
 15483  010920  0E6B               	movlw	low _dpowers
 15484  010922  24F3               	addwf	prodl,w,c
 15485  010924  6EF6               	movwf	tblptrl,c
 15486  010926  0EEA               	movlw	high _dpowers
 15487  010928  20F4               	addwfc	prodh,w,c
 15488  01092A  6EF7               	movwf	tblptrh,c
 15489  01092C                     	if	1	;There are 3 active tblptr bytes
 15490  01092C  6AF8               	clrf	tblptru,c
 15491  01092E  0E00               	movlw	low (__mediumconst shr (0+16))
 15492  010930  22F8               	addwfc	tblptru,f,c
 15493  010932                     	endif
 15494  010932  0009               	tblrd		*+
 15495  010934  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15496  010938  0009               	tblrd		*+
 15497  01093A  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15498  01093E  0009               	tblrd		*+
 15499  010940  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15500  010944  000A               	tblrd		*-
 15501  010946  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15502  01094A  EC91  F0BC         	call	___lldiv	;wreg free
 15503  01094E  C117  F19D         	movff	?___lldiv,printf@tmpval
 15504  010952  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 15505  010956  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 15506  01095A  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 15507                           
 15508                           ;doprnt.c: 1230: tmpval.vd %= 10;
 15509  01095E  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 15510  010962  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 15511  010966  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 15512  01096A  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 15513  01096E  0E0A               	movlw	10
 15514  010970  0101               	movlb	1	; () banked
 15515  010972  6F28               	movwf	___llmod@divisor& (0+255),b
 15516  010974  0E00               	movlw	0
 15517  010976  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 15518  010978  0E00               	movlw	0
 15519  01097A  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 15520  01097C  0E00               	movlw	0
 15521  01097E  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 15522  010980  ECE2  F0BE         	call	___llmod	;wreg free
 15523  010984  C124  F19D         	movff	?___llmod,printf@tmpval
 15524  010988  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 15525  01098C  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 15526  010990  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 15527                           
 15528                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 15529  010994  0101               	movlb	1	; () banked
 15530  010996  519D               	movf	printf@tmpval& (0+255),w,b
 15531  010998  0F30               	addlw	48
 15532  01099A  EC3E  F0C4         	call	_putch
 15533                           
 15534                           ;doprnt.c: 1232: val %= dpowers[c];
 15535  01099E  C1A7  F124         	movff	printf@val,___llmod@dividend
 15536  0109A2  C1A8  F125         	movff	printf@val+1,___llmod@dividend+1
 15537  0109A6  C1A9  F126         	movff	printf@val+2,___llmod@dividend+2
 15538  0109AA  C1AA  F127         	movff	printf@val+3,___llmod@dividend+3
 15539  0109AE  0101               	movlb	1	; () banked
 15540  0109B0  51B1               	movf	printf@c& (0+255),w,b
 15541  0109B2  0D04               	mullw	4
 15542  0109B4  0E6B               	movlw	low _dpowers
 15543  0109B6  24F3               	addwf	prodl,w,c
 15544  0109B8  6EF6               	movwf	tblptrl,c
 15545  0109BA  0EEA               	movlw	high _dpowers
 15546  0109BC  20F4               	addwfc	prodh,w,c
 15547  0109BE  6EF7               	movwf	tblptrh,c
 15548  0109C0                     	if	1	;There are 3 active tblptr bytes
 15549  0109C0  6AF8               	clrf	tblptru,c
 15550  0109C2  0E00               	movlw	low (__mediumconst shr (0+16))
 15551  0109C4  22F8               	addwfc	tblptru,f,c
 15552  0109C6                     	endif
 15553  0109C6  0009               	tblrd		*+
 15554  0109C8  CFF5 F128          	movff	tablat,___llmod@divisor
 15555  0109CC  0009               	tblrd		*+
 15556  0109CE  CFF5 F129          	movff	tablat,___llmod@divisor+1
 15557  0109D2  0009               	tblrd		*+
 15558  0109D4  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 15559  0109D8  000A               	tblrd		*-
 15560  0109DA  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 15561  0109DE  ECE2  F0BE         	call	___llmod	;wreg free
 15562  0109E2  C124  F1A7         	movff	?___llmod,printf@val
 15563  0109E6  C125  F1A8         	movff	?___llmod+1,printf@val+1
 15564  0109EA  C126  F1A9         	movff	?___llmod+2,printf@val+2
 15565  0109EE  C127  F1AA         	movff	?___llmod+3,printf@val+3
 15566  0109F2                     l1449:
 15567  0109F2  0101               	movlb	1	; () banked
 15568  0109F4  07B1               	decf	printf@c& (0+255),f,b
 15569  0109F6  29B1               	incf	printf@c& (0+255),w,b
 15570  0109F8  B4D8               	btfsc	status,2,c
 15571  0109FA  D008               	goto	l1452
 15572  0109FC  D786               	goto	l1450
 15573  0109FE                     
 15574                           ; BSR set to: 1
 15575                           ;doprnt.c: 1236: (putch('0') );
 15576                           
 15577                           ; BSR set to: 1
 15578  0109FE  0E30               	movlw	48
 15579  010A00  EC3E  F0C4         	call	_putch
 15580                           
 15581                           ;doprnt.c: 1237: prec--;
 15582  010A04  0101               	movlb	1	; () banked
 15583  010A06  07AF               	decf	printf@prec& (0+255),f,b
 15584  010A08  A0D8               	btfss	status,0,c
 15585  010A0A  07B0               	decf	(printf@prec+1)& (0+255),f,b
 15586  010A0C                     l1452:
 15587                           
 15588                           ; BSR set to: 1
 15589                           
 15590                           ; BSR set to: 1
 15591  010A0C  51AF               	movf	printf@prec& (0+255),w,b
 15592  010A0E  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 15593  010A10  B4D8               	btfsc	status,2,c
 15594  010A12  D1BE               	goto	u24580
 15595  010A14  D7F4               	goto	l1453
 15596  010A16                     l1406:
 15597                           
 15598                           ; BSR set to: 1
 15599                           ;doprnt.c: 1246: }
 15600                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 15601                           
 15602                           ; BSR set to: 1
 15603  010A16  0EC0               	movlw	192
 15604  010A18  15AB               	andwf	printf@flag& (0+255),w,b
 15605  010A1A  6F8C               	movwf	??_printf& (0+255),b
 15606  010A1C  0E00               	movlw	0
 15607  010A1E  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 15608  010A20  6F8D               	movwf	(??_printf+1)& (0+255),b
 15609  010A22  518C               	movf	??_printf& (0+255),w,b
 15610  010A24  118D               	iorwf	(??_printf+1)& (0+255),w,b
 15611  010A26  A4D8               	btfss	status,2,c
 15612  010A28  D01E               	goto	l1455
 15613                           
 15614                           ; BSR set to: 1
 15615                           ;doprnt.c: 1253: {
 15616                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 15617  010A2A  C19B  FFD9         	movff	printf@ap,fsr2l
 15618  010A2E  C19C  FFDA         	movff	printf@ap+1,fsr2h
 15619  010A32  CFDE F1A7          	movff	postinc2,printf@val
 15620  010A36  CFDD F1A8          	movff	postdec2,printf@val+1
 15621  010A3A  0E00               	movlw	0
 15622  010A3C  BFA8               	btfsc	(printf@val+1)& (0+255),7,b
 15623  010A3E  0EFF               	movlw	-1
 15624  010A40  6FA9               	movwf	(printf@val+2)& (0+255),b
 15625  010A42  6FAA               	movwf	(printf@val+3)& (0+255),b
 15626                           
 15627                           ; BSR set to: 1
 15628  010A44  0E02               	movlw	2
 15629  010A46  279B               	addwf	printf@ap& (0+255),f,b
 15630  010A48  0E00               	movlw	0
 15631  010A4A  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 15632                           
 15633                           ; BSR set to: 1
 15634                           ;doprnt.c: 1261: if((long)val < 0) {
 15635  010A4C  AFAA               	btfss	(printf@val+3)& (0+255),7,b
 15636  010A4E  D01D               	goto	l1457
 15637                           
 15638                           ; BSR set to: 1
 15639                           ;doprnt.c: 1262: flag |= 0x03;
 15640  010A50  0E03               	movlw	3
 15641  010A52  13AB               	iorwf	printf@flag& (0+255),f,b
 15642                           
 15643                           ; BSR set to: 1
 15644                           ;doprnt.c: 1263: val = -val;
 15645  010A54  1FAA               	comf	(printf@val+3)& (0+255),f,b
 15646  010A56  1FA9               	comf	(printf@val+2)& (0+255),f,b
 15647  010A58  1FA8               	comf	(printf@val+1)& (0+255),f,b
 15648  010A5A  6DA7               	negf	printf@val& (0+255),b
 15649  010A5C  0E00               	movlw	0
 15650  010A5E  23A8               	addwfc	(printf@val+1)& (0+255),f,b
 15651  010A60  23A9               	addwfc	(printf@val+2)& (0+255),f,b
 15652  010A62  23AA               	addwfc	(printf@val+3)& (0+255),f,b
 15653                           
 15654                           ; BSR set to: 1
 15655                           ;doprnt.c: 1264: }
 15656                           ;doprnt.c: 1266: }
 15657  010A64  D012               	goto	l1457
 15658  010A66                     l1455:
 15659                           
 15660                           ; BSR set to: 1
 15661                           ;doprnt.c: 1268: else
 15662                           ;doprnt.c: 1273: {
 15663                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 15664                           
 15665                           ; BSR set to: 1
 15666  010A66  C19B  FFD9         	movff	printf@ap,fsr2l
 15667  010A6A  C19C  FFDA         	movff	printf@ap+1,fsr2h
 15668  010A6E  CFDE F18C          	movff	postinc2,??_printf
 15669  010A72  CFDD F18D          	movff	postdec2,??_printf+1
 15670  010A76  C18C  F1A7         	movff	??_printf,printf@val
 15671  010A7A  C18D  F1A8         	movff	??_printf+1,printf@val+1
 15672  010A7E  6BA9               	clrf	(printf@val+2)& (0+255),b
 15673  010A80  6BAA               	clrf	(printf@val+3)& (0+255),b
 15674                           
 15675                           ; BSR set to: 1
 15676  010A82  0E02               	movlw	2
 15677  010A84  279B               	addwf	printf@ap& (0+255),f,b
 15678  010A86  0E00               	movlw	0
 15679  010A88  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 15680  010A8A                     l1457:
 15681                           
 15682                           ; BSR set to: 1
 15683                           ;doprnt.c: 1287: }
 15684                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 15685                           
 15686                           ; BSR set to: 1
 15687  010A8A  51AF               	movf	printf@prec& (0+255),w,b
 15688  010A8C  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 15689  010A8E  A4D8               	btfss	status,2,c
 15690  010A90  D04B               	goto	l1459
 15691                           
 15692                           ; BSR set to: 1
 15693  010A92  51A7               	movf	printf@val& (0+255),w,b
 15694  010A94  11A8               	iorwf	(printf@val+1)& (0+255),w,b
 15695  010A96  11A9               	iorwf	(printf@val+2)& (0+255),w,b
 15696  010A98  11AA               	iorwf	(printf@val+3)& (0+255),w,b
 15697  010A9A  A4D8               	btfss	status,2,c
 15698  010A9C  D045               	goto	l1459
 15699                           
 15700                           ; BSR set to: 1
 15701                           ;doprnt.c: 1291: prec++;
 15702  010A9E  4BAF               	infsnz	printf@prec& (0+255),f,b
 15703  010AA0  2BB0               	incf	(printf@prec+1)& (0+255),f,b
 15704                           
 15705                           ; BSR set to: 1
 15706                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 15707  010AA2  D042               	goto	l1459
 15708  010AA4                     
 15709                           ; BSR set to: 1
 15710                           ;doprnt.c: 1302: case 0xC0:
 15711                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15712                           
 15713                           ; BSR set to: 1
 15714                           
 15715                           ; BSR set to: 1
 15716  010AA4  0E01               	movlw	1
 15717  010AA6  6FB1               	movwf	printf@c& (0+255),b
 15718  010AA8                     l18086:
 15719                           
 15720                           ; BSR set to: 1
 15721  010AA8  0E0A               	movlw	10
 15722  010AAA  19B1               	xorwf	printf@c& (0+255),w,b
 15723  010AAC  B4D8               	btfsc	status,2,c
 15724  010AAE  D047               	goto	l1465
 15725                           
 15726                           ; BSR set to: 1
 15727                           ;doprnt.c: 1306: if(val < dpowers[c])
 15728                           
 15729                           ; BSR set to: 1
 15730                           
 15731                           ; BSR set to: 1
 15732  010AB0  51B1               	movf	printf@c& (0+255),w,b
 15733  010AB2  0D04               	mullw	4
 15734  010AB4  0E6B               	movlw	low _dpowers
 15735  010AB6  24F3               	addwf	prodl,w,c
 15736  010AB8  6EF6               	movwf	tblptrl,c
 15737  010ABA  0EEA               	movlw	high _dpowers
 15738  010ABC  20F4               	addwfc	prodh,w,c
 15739  010ABE  6EF7               	movwf	tblptrh,c
 15740  010AC0                     	if	1	;There are 3 active tblptr bytes
 15741  010AC0  6AF8               	clrf	tblptru,c
 15742  010AC2  0E00               	movlw	low (__mediumconst shr (0+16))
 15743  010AC4  22F8               	addwfc	tblptru,f,c
 15744  010AC6                     	endif
 15745  010AC6  0009               	tblrd		*+
 15746  010AC8  50F5               	movf	tablat,w,c
 15747  010ACA  5DA7               	subwf	printf@val& (0+255),w,b
 15748  010ACC  0009               	tblrd		*+
 15749  010ACE  50F5               	movf	tablat,w,c
 15750  010AD0  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 15751  010AD2  0009               	tblrd		*+
 15752  010AD4  50F5               	movf	tablat,w,c
 15753  010AD6  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 15754  010AD8  0009               	tblrd		*+
 15755  010ADA  50F5               	movf	tablat,w,c
 15756  010ADC  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 15757  010ADE  A0D8               	btfss	status,0,c
 15758  010AE0  D02E               	goto	l1465
 15759                           
 15760                           ; BSR set to: 1
 15761                           
 15762                           ; BSR set to: 1
 15763                           
 15764                           ; BSR set to: 1
 15765                           ;doprnt.c: 1307: break;
 15766  010AE2  2BB1               	incf	printf@c& (0+255),f,b
 15767  010AE4  D7E1               	goto	l18086
 15768  010AE6                     
 15769                           ; BSR set to: 1
 15770                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 15771                           
 15772                           ; BSR set to: 1
 15773  010AE6  0E01               	movlw	1
 15774  010AE8  6FB1               	movwf	printf@c& (0+255),b
 15775  010AEA                     l18100:
 15776                           
 15777                           ; BSR set to: 1
 15778  010AEA  0E08               	movlw	8
 15779  010AEC  19B1               	xorwf	printf@c& (0+255),w,b
 15780  010AEE  B4D8               	btfsc	status,2,c
 15781  010AF0  D026               	goto	l1465
 15782                           
 15783                           ; BSR set to: 1
 15784                           ;doprnt.c: 1317: if(val < hexpowers[c])
 15785                           
 15786                           ; BSR set to: 1
 15787                           
 15788                           ; BSR set to: 1
 15789  010AF2  51B1               	movf	printf@c& (0+255),w,b
 15790  010AF4  0D04               	mullw	4
 15791  010AF6  0E93               	movlw	low _hexpowers
 15792  010AF8  24F3               	addwf	prodl,w,c
 15793  010AFA  6EF6               	movwf	tblptrl,c
 15794  010AFC  0EEA               	movlw	high _hexpowers
 15795  010AFE  20F4               	addwfc	prodh,w,c
 15796  010B00  6EF7               	movwf	tblptrh,c
 15797  010B02                     	if	1	;There are 3 active tblptr bytes
 15798  010B02  6AF8               	clrf	tblptru,c
 15799  010B04  0E00               	movlw	low (__mediumconst shr (0+16))
 15800  010B06  22F8               	addwfc	tblptru,f,c
 15801  010B08                     	endif
 15802  010B08  0009               	tblrd		*+
 15803  010B0A  50F5               	movf	tablat,w,c
 15804  010B0C  5DA7               	subwf	printf@val& (0+255),w,b
 15805  010B0E  0009               	tblrd		*+
 15806  010B10  50F5               	movf	tablat,w,c
 15807  010B12  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 15808  010B14  0009               	tblrd		*+
 15809  010B16  50F5               	movf	tablat,w,c
 15810  010B18  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 15811  010B1A  0009               	tblrd		*+
 15812  010B1C  50F5               	movf	tablat,w,c
 15813  010B1E  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 15814  010B20  A0D8               	btfss	status,0,c
 15815  010B22  D00D               	goto	l1465
 15816                           
 15817                           ; BSR set to: 1
 15818                           
 15819                           ; BSR set to: 1
 15820                           
 15821                           ; BSR set to: 1
 15822                           ;doprnt.c: 1318: break;
 15823  010B24  2BB1               	incf	printf@c& (0+255),f,b
 15824  010B26  D7E1               	goto	l18100
 15825  010B28                     l1459:
 15826                           
 15827                           ; BSR set to: 1
 15828                           
 15829                           ; BSR set to: 1
 15830  010B28  51AB               	movf	printf@flag& (0+255),w,b
 15831  010B2A  0BC0               	andlw	192
 15832                           
 15833                           ; Switch size 1, requested type "space"
 15834                           ; Number of cases is 3, Range of values is 0 to 192
 15835                           ; switch strategies available:
 15836                           ; Name         Instructions Cycles
 15837                           ; simple_byte           10     6 (average)
 15838                           ;	Chosen strategy is simple_byte
 15839  010B2C  0A00               	xorlw	0	; case 0
 15840  010B2E  B4D8               	btfsc	status,2,c
 15841  010B30  D7B9               	goto	l1460
 15842  010B32  0A80               	xorlw	128	; case 128
 15843  010B34  B4D8               	btfsc	status,2,c
 15844  010B36  D7D7               	goto	l1466
 15845  010B38  0A40               	xorlw	64	; case 192
 15846  010B3A  B4D8               	btfsc	status,2,c
 15847  010B3C  D7B3               	goto	l1460
 15848  010B3E                     l1465:
 15849                           
 15850                           ; BSR set to: 1
 15851                           ;doprnt.c: 1339: if(c < prec)
 15852                           
 15853                           ; BSR set to: 1
 15854  010B3E  0E80               	movlw	128
 15855  010B40  BFB1               	btfsc	printf@c& (0+255),7,b
 15856  010B42  0E7F               	movlw	127
 15857  010B44  6F8C               	movwf	??_printf& (0+255),b
 15858  010B46  51AF               	movf	printf@prec& (0+255),w,b
 15859  010B48  5DB1               	subwf	printf@c& (0+255),w,b
 15860  010B4A  51B0               	movf	(printf@prec+1)& (0+255),w,b
 15861  010B4C  0A80               	xorlw	128
 15862  010B4E  598C               	subwfb	??_printf& (0+255),w,b
 15863  010B50  B0D8               	btfsc	status,0,c
 15864  010B52  D003               	goto	l1470
 15865                           
 15866                           ; BSR set to: 1
 15867                           ;doprnt.c: 1340: c = prec;
 15868  010B54  C1AF  F1B1         	movff	printf@prec,printf@c
 15869  010B58  D010               	goto	l1472
 15870  010B5A                     l1470:
 15871                           
 15872                           ; BSR set to: 1
 15873                           ;doprnt.c: 1341: else if(prec < c)
 15874                           
 15875                           ; BSR set to: 1
 15876  010B5A  51B0               	movf	(printf@prec+1)& (0+255),w,b
 15877  010B5C  0A80               	xorlw	128
 15878  010B5E  6F8C               	movwf	??_printf& (0+255),b
 15879  010B60  51B1               	movf	printf@c& (0+255),w,b
 15880  010B62  5DAF               	subwf	printf@prec& (0+255),w,b
 15881  010B64  0E80               	movlw	128
 15882  010B66  BFB1               	btfsc	printf@c& (0+255),7,b
 15883  010B68  0E7F               	movlw	127
 15884  010B6A  598C               	subwfb	??_printf& (0+255),w,b
 15885  010B6C  B0D8               	btfsc	status,0,c
 15886  010B6E  D005               	goto	l1472
 15887                           
 15888                           ; BSR set to: 1
 15889                           ;doprnt.c: 1342: prec = c;
 15890  010B70  51B1               	movf	printf@c& (0+255),w,b
 15891  010B72  6FAF               	movwf	printf@prec& (0+255),b
 15892  010B74  6BB0               	clrf	(printf@prec+1)& (0+255),b
 15893  010B76  BFAF               	btfsc	printf@prec& (0+255),7,b
 15894  010B78  07B0               	decf	(printf@prec+1)& (0+255),f,b
 15895  010B7A                     l1472:
 15896                           
 15897                           ; BSR set to: 1
 15898                           ;doprnt.c: 1345: if(width && flag & 0x03)
 15899                           
 15900                           ; BSR set to: 1
 15901                           
 15902                           ; BSR set to: 1
 15903  010B7A  51AD               	movf	printf@width& (0+255),w,b
 15904  010B7C  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 15905  010B7E  B4D8               	btfsc	status,2,c
 15906  010B80  D00D               	goto	l1473
 15907                           
 15908                           ; BSR set to: 1
 15909  010B82  0E03               	movlw	3
 15910  010B84  15AB               	andwf	printf@flag& (0+255),w,b
 15911  010B86  6F8C               	movwf	??_printf& (0+255),b
 15912  010B88  0E00               	movlw	0
 15913  010B8A  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 15914  010B8C  6F8D               	movwf	(??_printf+1)& (0+255),b
 15915  010B8E  518C               	movf	??_printf& (0+255),w,b
 15916  010B90  118D               	iorwf	(??_printf+1)& (0+255),w,b
 15917  010B92  B4D8               	btfsc	status,2,c
 15918  010B94  D003               	goto	l1473
 15919                           
 15920                           ; BSR set to: 1
 15921                           ;doprnt.c: 1346: width--;
 15922  010B96  07AD               	decf	printf@width& (0+255),f,b
 15923  010B98  A0D8               	btfss	status,0,c
 15924  010B9A  07AE               	decf	(printf@width+1)& (0+255),f,b
 15925  010B9C                     l1473:
 15926                           
 15927                           ; BSR set to: 1
 15928                           ;doprnt.c: 1348: if(flag & 0x4000) {
 15929                           
 15930                           ; BSR set to: 1
 15931  010B9C  ADAC               	btfss	(printf@flag+1)& (0+255),6,b
 15932  010B9E  D013               	goto	l1476
 15933                           
 15934                           ; BSR set to: 1
 15935                           ;doprnt.c: 1349: if(width > prec)
 15936  010BA0  51AD               	movf	printf@width& (0+255),w,b
 15937  010BA2  5DAF               	subwf	printf@prec& (0+255),w,b
 15938  010BA4  51B0               	movf	(printf@prec+1)& (0+255),w,b
 15939  010BA6  0A80               	xorlw	128
 15940  010BA8  6F8C               	movwf	??_printf& (0+255),b
 15941  010BAA  51AE               	movf	(printf@width+1)& (0+255),w,b
 15942  010BAC  0A80               	xorlw	128
 15943  010BAE  598C               	subwfb	??_printf& (0+255),w,b
 15944  010BB0  B0D8               	btfsc	status,0,c
 15945  010BB2  D005               	goto	l1475
 15946                           
 15947                           ; BSR set to: 1
 15948                           ;doprnt.c: 1350: width -= prec;
 15949  010BB4  51AF               	movf	printf@prec& (0+255),w,b
 15950  010BB6  5FAD               	subwf	printf@width& (0+255),f,b
 15951  010BB8  51B0               	movf	(printf@prec+1)& (0+255),w,b
 15952  010BBA  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 15953  010BBC  D004               	goto	l1476
 15954  010BBE                     l1475:
 15955                           
 15956                           ; BSR set to: 1
 15957                           ;doprnt.c: 1351: else
 15958                           ;doprnt.c: 1352: width = 0;
 15959                           
 15960                           ; BSR set to: 1
 15961  010BBE  0E00               	movlw	0
 15962  010BC0  6FAE               	movwf	(printf@width+1)& (0+255),b
 15963  010BC2  0E00               	movlw	0
 15964  010BC4  6FAD               	movwf	printf@width& (0+255),b
 15965  010BC6                     l1476:
 15966                           
 15967                           ; BSR set to: 1
 15968                           ;doprnt.c: 1353: }
 15969                           ;doprnt.c: 1381: if(width > c)
 15970                           
 15971                           ; BSR set to: 1
 15972                           
 15973                           ; BSR set to: 1
 15974  010BC6  0E80               	movlw	128
 15975  010BC8  BFB1               	btfsc	printf@c& (0+255),7,b
 15976  010BCA  0E7F               	movlw	127
 15977  010BCC  6F8C               	movwf	??_printf& (0+255),b
 15978  010BCE  51AD               	movf	printf@width& (0+255),w,b
 15979  010BD0  5DB1               	subwf	printf@c& (0+255),w,b
 15980  010BD2  51AE               	movf	(printf@width+1)& (0+255),w,b
 15981  010BD4  0A80               	xorlw	128
 15982  010BD6  598C               	subwfb	??_printf& (0+255),w,b
 15983  010BD8  B0D8               	btfsc	status,0,c
 15984  010BDA  D007               	goto	l1477
 15985                           
 15986                           ; BSR set to: 1
 15987                           ;doprnt.c: 1382: width -= c;
 15988  010BDC  51B1               	movf	printf@c& (0+255),w,b
 15989  010BDE  5FAD               	subwf	printf@width& (0+255),f,b
 15990  010BE0  0E00               	movlw	0
 15991  010BE2  BFB1               	btfsc	printf@c& (0+255),7,b
 15992  010BE4  0EFF               	movlw	255
 15993  010BE6  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 15994  010BE8  D004               	goto	l1478
 15995  010BEA                     l1477:
 15996                           
 15997                           ; BSR set to: 1
 15998                           ;doprnt.c: 1383: else
 15999                           ;doprnt.c: 1384: width = 0;
 16000                           
 16001                           ; BSR set to: 1
 16002  010BEA  0E00               	movlw	0
 16003  010BEC  6FAE               	movwf	(printf@width+1)& (0+255),b
 16004  010BEE  0E00               	movlw	0
 16005  010BF0  6FAD               	movwf	printf@width& (0+255),b
 16006  010BF2                     l1478:
 16007                           
 16008                           ; BSR set to: 1
 16009                           ;doprnt.c: 1387: if(flag & 0x04) {
 16010                           
 16011                           ; BSR set to: 1
 16012  010BF2  A5AB               	btfss	printf@flag& (0+255),2,b
 16013  010BF4  D01A               	goto	l1479
 16014                           
 16015                           ; BSR set to: 1
 16016                           ;doprnt.c: 1392: if(flag & 0x03)
 16017  010BF6  0E03               	movlw	3
 16018  010BF8  15AB               	andwf	printf@flag& (0+255),w,b
 16019  010BFA  6F8C               	movwf	??_printf& (0+255),b
 16020  010BFC  0E00               	movlw	0
 16021  010BFE  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16022  010C00  6F8D               	movwf	(??_printf+1)& (0+255),b
 16023  010C02  518C               	movf	??_printf& (0+255),w,b
 16024  010C04  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16025  010C06  B4D8               	btfsc	status,2,c
 16026  010C08  D003               	goto	l1480
 16027                           
 16028                           ; BSR set to: 1
 16029                           ;doprnt.c: 1393: (putch('-') );
 16030  010C0A  0E2D               	movlw	45
 16031  010C0C  EC3E  F0C4         	call	_putch
 16032  010C10                     l1480:
 16033                           
 16034                           ;doprnt.c: 1415: if(width)
 16035  010C10  0101               	movlb	1	; () banked
 16036  010C12  51AD               	movf	printf@width& (0+255),w,b
 16037  010C14  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 16038  010C16  B4D8               	btfsc	status,2,c
 16039  010C18  D0B2               	goto	l1489
 16040                           
 16041                           ; BSR set to: 1
 16042                           ;doprnt.c: 1417: (putch('0') );
 16043                           
 16044                           ; BSR set to: 1
 16045                           
 16046                           ;doprnt.c: 1416: do
 16047  010C1A  0E30               	movlw	48
 16048  010C1C  EC3E  F0C4         	call	_putch
 16049                           
 16050                           ;doprnt.c: 1418: while(--width);
 16051  010C20  0101               	movlb	1	; () banked
 16052  010C22  07AD               	decf	printf@width& (0+255),f,b
 16053  010C24  A0D8               	btfss	status,0,c
 16054  010C26  07AE               	decf	(printf@width+1)& (0+255),f,b
 16055  010C28  D7F4               	goto	L24
 16056  010C2A                     l1479:
 16057                           
 16058                           ; BSR set to: 1
 16059                           ;doprnt.c: 1422: {
 16060                           ;doprnt.c: 1424: if(width
 16061                           ;doprnt.c: 1428: )
 16062                           
 16063                           ; BSR set to: 1
 16064  010C2A  51AD               	movf	printf@width& (0+255),w,b
 16065  010C2C  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 16066  010C2E  B4D8               	btfsc	status,2,c
 16067  010C30  D00B               	goto	u24560
 16068  010C32                     u24550:
 16069                           
 16070                           ; BSR set to: 1
 16071                           ;doprnt.c: 1430: (putch(' ') );
 16072                           
 16073                           ; BSR set to: 1
 16074                           
 16075                           ;doprnt.c: 1429: do
 16076  010C32  0E20               	movlw	32
 16077  010C34  EC3E  F0C4         	call	_putch
 16078                           
 16079                           ;doprnt.c: 1431: while(--width);
 16080  010C38  0101               	movlb	1	; () banked
 16081  010C3A  07AD               	decf	printf@width& (0+255),f,b
 16082  010C3C  A0D8               	btfss	status,0,c
 16083  010C3E  07AE               	decf	(printf@width+1)& (0+255),f,b
 16084  010C40  51AD               	movf	printf@width& (0+255),w,b
 16085  010C42  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 16086  010C44  A4D8               	btfss	status,2,c
 16087  010C46  D7F5               	goto	u24550
 16088  010C48                     u24560:
 16089                           
 16090                           ; BSR set to: 1
 16091                           ;doprnt.c: 1438: if(flag & 0x03)
 16092                           
 16093                           ; BSR set to: 1
 16094                           
 16095                           ; BSR set to: 1
 16096  010C48  0E03               	movlw	3
 16097  010C4A  15AB               	andwf	printf@flag& (0+255),w,b
 16098  010C4C  6F8C               	movwf	??_printf& (0+255),b
 16099  010C4E  0E00               	movlw	0
 16100  010C50  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16101  010C52  6F8D               	movwf	(??_printf+1)& (0+255),b
 16102  010C54  518C               	movf	??_printf& (0+255),w,b
 16103  010C56  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16104  010C58  B4D8               	btfsc	status,2,c
 16105  010C5A  D091               	goto	l1489
 16106                           
 16107                           ; BSR set to: 1
 16108                           ;doprnt.c: 1439: (putch('-') );
 16109  010C5C  0E2D               	movlw	45
 16110  010C5E  EC3E  F0C4         	call	_putch
 16111                           
 16112                           ;doprnt.c: 1469: }
 16113                           ;doprnt.c: 1474: while(prec--) {
 16114  010C62  D08D               	goto	l1489
 16115  010C64                     
 16116                           ;doprnt.c: 1486: case 0xC0:
 16117                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 16118  010C64  C1AF  F18C         	movff	printf@prec,??_printf
 16119  010C68  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 16120  010C6C  0101               	movlb	1	; () banked
 16121  010C6E  90D8               	bcf	status,0,c
 16122  010C70  378C               	rlcf	??_printf& (0+255),f,b
 16123  010C72  378D               	rlcf	(??_printf+1)& (0+255),f,b
 16124  010C74  90D8               	bcf	status,0,c
 16125  010C76  378C               	rlcf	??_printf& (0+255),f,b
 16126  010C78  378D               	rlcf	(??_printf+1)& (0+255),f,b
 16127  010C7A  0E6B               	movlw	low _dpowers
 16128  010C7C  258C               	addwf	??_printf& (0+255),w,b
 16129  010C7E  6EF6               	movwf	tblptrl,c
 16130  010C80  0EEA               	movlw	high _dpowers
 16131  010C82  218D               	addwfc	(??_printf+1)& (0+255),w,b
 16132  010C84  6EF7               	movwf	tblptrh,c
 16133  010C86                     	if	1	;There are 3 active tblptr bytes
 16134  010C86  6AF8               	clrf	tblptru,c
 16135  010C88  0E00               	movlw	low (__mediumconst shr (0+16))
 16136  010C8A  22F8               	addwfc	tblptru,f,c
 16137  010C8C                     	endif
 16138  010C8C  0009               	tblrd		*+
 16139  010C8E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 16140  010C92  0009               	tblrd		*+
 16141  010C94  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 16142  010C98  0009               	tblrd		*+
 16143  010C9A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 16144  010C9E  000A               	tblrd		*-
 16145  010CA0  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 16146  010CA4  C1A7  F117         	movff	printf@val,___lldiv@dividend
 16147  010CA8  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 16148  010CAC  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 16149  010CB0  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 16150  010CB4  EC91  F0BC         	call	___lldiv	;wreg free
 16151  010CB8  C117  F124         	movff	?___lldiv,___llmod@dividend
 16152  010CBC  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 16153  010CC0  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 16154  010CC4  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 16155  010CC8  0E0A               	movlw	10
 16156  010CCA  0101               	movlb	1	; () banked
 16157  010CCC  6F28               	movwf	___llmod@divisor& (0+255),b
 16158  010CCE  0E00               	movlw	0
 16159  010CD0  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 16160  010CD2  0E00               	movlw	0
 16161  010CD4  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 16162  010CD6  0E00               	movlw	0
 16163  010CD8  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 16164  010CDA  ECE2  F0BE         	call	___llmod	;wreg free
 16165  010CDE  0101               	movlb	1	; () banked
 16166  010CE0  5124               	movf	?___llmod& (0+255),w,b
 16167  010CE2  0F30               	addlw	48
 16168  010CE4  6FB1               	movwf	printf@c& (0+255),b
 16169                           
 16170                           ;doprnt.c: 1491: break;
 16171  010CE6  D048               	goto	l1494
 16172  010CE8                     
 16173                           ; BSR set to: 1
 16174                           ;doprnt.c: 1499: {
 16175                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 16176                           
 16177                           ; BSR set to: 1
 16178  010CE8  C1A7  F117         	movff	printf@val,___lldiv@dividend
 16179  010CEC  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 16180  010CF0  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 16181  010CF4  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 16182  010CF8  C1AF  F18C         	movff	printf@prec,??_printf
 16183  010CFC  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 16184  010D00  90D8               	bcf	status,0,c
 16185  010D02  378C               	rlcf	??_printf& (0+255),f,b
 16186  010D04  378D               	rlcf	(??_printf+1)& (0+255),f,b
 16187  010D06  90D8               	bcf	status,0,c
 16188  010D08  378C               	rlcf	??_printf& (0+255),f,b
 16189  010D0A  378D               	rlcf	(??_printf+1)& (0+255),f,b
 16190  010D0C  0E93               	movlw	low _hexpowers
 16191  010D0E  258C               	addwf	??_printf& (0+255),w,b
 16192  010D10  6EF6               	movwf	tblptrl,c
 16193  010D12  0EEA               	movlw	high _hexpowers
 16194  010D14  218D               	addwfc	(??_printf+1)& (0+255),w,b
 16195  010D16  6EF7               	movwf	tblptrh,c
 16196  010D18                     	if	1	;There are 3 active tblptr bytes
 16197  010D18  6AF8               	clrf	tblptru,c
 16198  010D1A  0E00               	movlw	low (__mediumconst shr (0+16))
 16199  010D1C  22F8               	addwfc	tblptru,f,c
 16200  010D1E                     	endif
 16201  010D1E  0009               	tblrd		*+
 16202  010D20  CFF5 F11B          	movff	tablat,___lldiv@divisor
 16203  010D24  0009               	tblrd		*+
 16204  010D26  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 16205  010D2A  0009               	tblrd		*+
 16206  010D2C  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 16207  010D30  000A               	tblrd		*-
 16208  010D32  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 16209  010D36  EC91  F0BC         	call	___lldiv	;wreg free
 16210  010D3A  0101               	movlb	1	; () banked
 16211  010D3C  5117               	movf	?___lldiv& (0+255),w,b
 16212  010D3E  0B0F               	andlw	15
 16213  010D40  6F96               	movwf	printf@idx& (0+255),b
 16214                           
 16215                           ; BSR set to: 1
 16216                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 16217  010D42  5196               	movf	printf@idx& (0+255),w,b
 16218  010D44  0D01               	mullw	1
 16219  010D46  0ECC               	movlw	low STR_141
 16220  010D48  24F3               	addwf	prodl,w,c
 16221  010D4A  6EF6               	movwf	tblptrl,c
 16222  010D4C  0EFD               	movlw	high STR_141
 16223  010D4E  20F4               	addwfc	prodh,w,c
 16224  010D50  6EF7               	movwf	tblptrh,c
 16225  010D52                     	if	1	;There are 3 active tblptr bytes
 16226  010D52  6AF8               	clrf	tblptru,c
 16227  010D54  0E00               	movlw	low (__mediumconst shr (0+16))
 16228  010D56  22F8               	addwfc	tblptru,f,c
 16229  010D58                     	endif
 16230  010D58  0008               	tblrd		*
 16231  010D5A  CFF5 F1B1          	movff	tablat,printf@c
 16232                           
 16233                           ; BSR set to: 1
 16234                           ;doprnt.c: 1523: }
 16235                           
 16236                           ;doprnt.c: 1508: }
 16237                           ;doprnt.c: 1510: break;
 16238  010D5E  D00C               	goto	l1494
 16239  010D60                     l18174:
 16240  010D60  0101               	movlb	1	; () banked
 16241  010D62  51AB               	movf	printf@flag& (0+255),w,b
 16242  010D64  0BC0               	andlw	192
 16243                           
 16244                           ; Switch size 1, requested type "space"
 16245                           ; Number of cases is 3, Range of values is 0 to 192
 16246                           ; switch strategies available:
 16247                           ; Name         Instructions Cycles
 16248                           ; simple_byte           10     6 (average)
 16249                           ;	Chosen strategy is simple_byte
 16250  010D66  0A00               	xorlw	0	; case 0
 16251  010D68  B4D8               	btfsc	status,2,c
 16252  010D6A  D77C               	goto	l1492
 16253  010D6C  0A80               	xorlw	128	; case 128
 16254  010D6E  B4D8               	btfsc	status,2,c
 16255  010D70  D7BB               	goto	l1495
 16256  010D72  0A40               	xorlw	64	; case 192
 16257  010D74  B4D8               	btfsc	status,2,c
 16258  010D76  D776               	goto	l1492
 16259  010D78                     l1494:
 16260                           
 16261                           ; BSR set to: 1
 16262                           ;doprnt.c: 1524: (putch(c) );
 16263                           
 16264                           ; BSR set to: 1
 16265  010D78  51B1               	movf	printf@c& (0+255),w,b
 16266  010D7A  EC3E  F0C4         	call	_putch
 16267  010D7E                     l1489:
 16268  010D7E  0101               	movlb	1	; () banked
 16269  010D80  07AF               	decf	printf@prec& (0+255),f,b
 16270  010D82  A0D8               	btfss	status,0,c
 16271  010D84  07B0               	decf	(printf@prec+1)& (0+255),f,b
 16272  010D86  29AF               	incf	printf@prec& (0+255),w,b
 16273  010D88  E1EB               	bnz	l18174
 16274  010D8A  29B0               	incf	(printf@prec+1)& (0+255),w,b
 16275  010D8C  A4D8               	btfss	status,2,c
 16276  010D8E  D7E8               	goto	l1491
 16277  010D90                     u24580:
 16278                           
 16279                           ; BSR set to: 1
 16280                           
 16281                           ; BSR set to: 1
 16282  010D90  0101               	movlb	1	; () banked
 16283  010D92  5182               	movf	printf@f& (0+255),w,b
 16284  010D94  6F8C               	movwf	??_printf& (0+255),b
 16285  010D96  5183               	movf	(printf@f+1)& (0+255),w,b
 16286  010D98  6F8D               	movwf	(??_printf+1)& (0+255),b
 16287  010D9A  4B82               	infsnz	printf@f& (0+255),f,b
 16288  010D9C  2B83               	incf	(printf@f+1)& (0+255),f,b
 16289  010D9E  C18C  FFF6         	movff	??_printf,tblptrl
 16290  010DA2  C18D  FFF7         	movff	??_printf+1,tblptrh
 16291  010DA6  0E00               	movlw	low (__mediumconst shr (0+16))
 16292  010DA8  6EF8               	movwf	tblptru,c
 16293  010DAA  0E0D               	movlw	(high __ramtop+-1)
 16294  010DAC  64F7               	cpfsgt	tblptrh,c
 16295  010DAE  D003               	bra	u24597
 16296  010DB0  0008               	tblrd		*
 16297  010DB2  50F5               	movf	tablat,w,c
 16298  010DB4  D005               	bra	u24590
 16299  010DB6                     u24597:
 16300  010DB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 16301  010DBA  CFF7 FFEA          	movff	tblptrh,fsr0h
 16302  010DBE  50EF               	movf	indf0,w,c
 16303  010DC0                     u24590:
 16304  010DC0  0101               	movlb	1	; () banked
 16305  010DC2  6FB1               	movwf	printf@c& (0+255),b
 16306  010DC4  51B1               	movf	printf@c& (0+255),w,b
 16307  010DC6  B4D8               	btfsc	status,2,c
 16308  010DC8  0012               	return	
 16309  010DCA  EF07  F080         	goto	l1363
 16310  010DCE                     __end_of_printf:
 16311                           	opt stack 0
 16312                           tblptru	equ	0xFF8
 16313                           tblptrh	equ	0xFF7
 16314                           tblptrl	equ	0xFF6
 16315                           tablat	equ	0xFF5
 16316                           prodh	equ	0xFF4
 16317                           prodl	equ	0xFF3
 16318                           intcon	equ	0xFF2
 16319                           indf0	equ	0xFEF
 16320                           postinc0	equ	0xFEE
 16321                           fsr0h	equ	0xFEA
 16322                           fsr0l	equ	0xFE9
 16323                           wreg	equ	0xFE8
 16324                           indf1	equ	0xFE7
 16325                           postdec1	equ	0xFE5
 16326                           plusw1	equ	0xFE3
 16327                           fsr1h	equ	0xFE2
 16328                           fsr1l	equ	0xFE1
 16329                           indf2	equ	0xFDF
 16330                           postinc2	equ	0xFDE
 16331                           postdec2	equ	0xFDD
 16332                           plusw2	equ	0xFDB
 16333                           fsr2h	equ	0xFDA
 16334                           fsr2l	equ	0xFD9
 16335                           status	equ	0xFD8
 16336                           
 16337 ;; *************** function _scale *****************
 16338 ;; Defined at:
 16339 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 16340 ;; Parameters:    Size  Location     Type
 16341 ;;  scl             1    wreg     char 
 16342 ;; Auto vars:     Size  Location     Type
 16343 ;;  scl             1  119[BANK1 ] char 
 16344 ;; Return value:  Size  Location     Type
 16345 ;;                  4  111[BANK1 ] char 
 16346 ;; Registers used:
 16347 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16348 ;; Tracked objects:
 16349 ;;		On entry : 0/0
 16350 ;;		On exit  : 0/0
 16351 ;;		Unchanged: 0/0
 16352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16353 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16354 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16356 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16357 ;;Total ram usage:        9 bytes
 16358 ;; Hardware stack levels used:    1
 16359 ;; Hardware stack levels required when called:   14
 16360 ;; This function calls:
 16361 ;;		___awdiv
 16362 ;;		___awmod
 16363 ;;		___flmul
 16364 ;; This function is called by:
 16365 ;;		_printf
 16366 ;; This function uses a non-reentrant model
 16367 ;;
 16368                           
 16369                           	psect	text29
 16370  013312                     __ptext29:
 16371                           	opt stack 0
 16372  013312                     _scale:
 16373                           	opt stack 13
 16374                           
 16375                           ; BSR set to: 1
 16376                           ;incstack = 0
 16377                           ;scale@scl stored from wreg
 16378  013312  0101               	movlb	1	; () banked
 16379  013314  6F77               	movwf	scale@scl& (0+255),b
 16380                           
 16381                           ;doprnt.c: 428: if(scl < 0) {
 16382  013316  0101               	movlb	1	; () banked
 16383  013318  AF77               	btfss	scale@scl& (0+255),7,b
 16384  01331A  D127               	goto	l1352
 16385                           
 16386                           ; BSR set to: 1
 16387                           ;doprnt.c: 429: scl = -scl;
 16388  01331C  6D77               	negf	scale@scl& (0+255),b
 16389                           
 16390                           ;doprnt.c: 430: if(scl>=110)
 16391  01331E  5177               	movf	scale@scl& (0+255),w,b
 16392  013320  0A80               	xorlw	128
 16393  013322  0F12               	addlw	-238
 16394  013324  A0D8               	btfss	status,0,c
 16395  013326  D0A5               	goto	l1353
 16396                           
 16397                           ; BSR set to: 1
 16398                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16399  013328  0E00               	movlw	0
 16400  01332A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16401  01332C  0E0A               	movlw	10
 16402  01332E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16403  013330  0E00               	movlw	0
 16404  013332  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16405  013334  0E64               	movlw	100
 16406  013336  6F19               	movwf	___awmod@divisor& (0+255),b
 16407  013338  5177               	movf	scale@scl& (0+255),w,b
 16408  01333A  6F17               	movwf	___awmod@dividend& (0+255),b
 16409  01333C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16410  01333E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16411  013340  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16412  013342  ECD1  F0BD         	call	___awmod	;wreg free
 16413  013346  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16414  01334A  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16415  01334E  EC4E  F0BC         	call	___awdiv	;wreg free
 16416  013352  0101               	movlb	1	; () banked
 16417  013354  90D8               	bcf	status,0,c
 16418  013356  371D               	rlcf	?___awdiv& (0+255),f,b
 16419  013358  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16420  01335A  90D8               	bcf	status,0,c
 16421  01335C  371D               	rlcf	?___awdiv& (0+255),f,b
 16422  01335E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16423  013360  0E24               	movlw	36
 16424  013362  271D               	addwf	?___awdiv& (0+255),f,b
 16425  013364  0E00               	movlw	0
 16426  013366  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16427  013368  0E37               	movlw	low __npowers_
 16428  01336A  251D               	addwf	?___awdiv& (0+255),w,b
 16429  01336C  6EF6               	movwf	tblptrl,c
 16430  01336E  0EEA               	movlw	high __npowers_
 16431  013370  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16432  013372  6EF7               	movwf	tblptrh,c
 16433  013374                     	if	1	;There are 3 active tblptr bytes
 16434  013374  6AF8               	clrf	tblptru,c
 16435  013376  0E00               	movlw	low (__mediumconst shr (0+16))
 16436  013378  22F8               	addwfc	tblptru,f,c
 16437  01337A                     	endif
 16438  01337A  0009               	tblrd		*+
 16439  01337C  CFF5 F15A          	movff	tablat,___flmul@a
 16440  013380  0009               	tblrd		*+
 16441  013382  CFF5 F15B          	movff	tablat,___flmul@a+1
 16442  013386  0009               	tblrd		*+
 16443  013388  CFF5 F15C          	movff	tablat,___flmul@a+2
 16444  01338C  000A               	tblrd		*-
 16445  01338E  CFF5 F15D          	movff	tablat,___flmul@a+3
 16446  013392  0E00               	movlw	0
 16447  013394  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16448  013396  0E64               	movlw	100
 16449  013398  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16450  01339A  5177               	movf	scale@scl& (0+255),w,b
 16451  01339C  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16452  01339E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16453  0133A0  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16454  0133A2  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16455  0133A4  EC4E  F0BC         	call	___awdiv	;wreg free
 16456  0133A8  0101               	movlb	1	; () banked
 16457  0133AA  90D8               	bcf	status,0,c
 16458  0133AC  371D               	rlcf	?___awdiv& (0+255),f,b
 16459  0133AE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16460  0133B0  90D8               	bcf	status,0,c
 16461  0133B2  371D               	rlcf	?___awdiv& (0+255),f,b
 16462  0133B4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16463  0133B6  0E48               	movlw	72
 16464  0133B8  271D               	addwf	?___awdiv& (0+255),f,b
 16465  0133BA  0E00               	movlw	0
 16466  0133BC  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16467  0133BE  0E37               	movlw	low __npowers_
 16468  0133C0  251D               	addwf	?___awdiv& (0+255),w,b
 16469  0133C2  6EF6               	movwf	tblptrl,c
 16470  0133C4  0EEA               	movlw	high __npowers_
 16471  0133C6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16472  0133C8  6EF7               	movwf	tblptrh,c
 16473  0133CA                     	if	1	;There are 3 active tblptr bytes
 16474  0133CA  6AF8               	clrf	tblptru,c
 16475  0133CC  0E00               	movlw	low (__mediumconst shr (0+16))
 16476  0133CE  22F8               	addwfc	tblptru,f,c
 16477  0133D0                     	endif
 16478  0133D0  0009               	tblrd		*+
 16479  0133D2  CFF5 F156          	movff	tablat,___flmul@b
 16480  0133D6  0009               	tblrd		*+
 16481  0133D8  CFF5 F157          	movff	tablat,___flmul@b+1
 16482  0133DC  0009               	tblrd		*+
 16483  0133DE  CFF5 F158          	movff	tablat,___flmul@b+2
 16484  0133E2  000A               	tblrd		*-
 16485  0133E4  CFF5 F159          	movff	tablat,___flmul@b+3
 16486  0133E8  ECCF  F09F         	call	___flmul	;wreg free
 16487  0133EC  C156  F173         	movff	?___flmul,_scale$3897
 16488  0133F0  C157  F174         	movff	?___flmul+1,_scale$3897+1
 16489  0133F4  C158  F175         	movff	?___flmul+2,_scale$3897+2
 16490  0133F8  C159  F176         	movff	?___flmul+3,_scale$3897+3
 16491                           
 16492                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16493  0133FC  C173  F156         	movff	_scale$3897,___flmul@b
 16494  013400  C174  F157         	movff	_scale$3897+1,___flmul@b+1
 16495  013404  C175  F158         	movff	_scale$3897+2,___flmul@b+2
 16496  013408  C176  F159         	movff	_scale$3897+3,___flmul@b+3
 16497  01340C  0E00               	movlw	0
 16498  01340E  0101               	movlb	1	; () banked
 16499  013410  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16500  013412  0E0A               	movlw	10
 16501  013414  6F19               	movwf	___awmod@divisor& (0+255),b
 16502  013416  5177               	movf	scale@scl& (0+255),w,b
 16503  013418  6F17               	movwf	___awmod@dividend& (0+255),b
 16504  01341A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16505  01341C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16506  01341E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16507  013420  ECD1  F0BD         	call	___awmod	;wreg free
 16508  013424  0101               	movlb	1	; () banked
 16509  013426  90D8               	bcf	status,0,c
 16510  013428  3717               	rlcf	?___awmod& (0+255),f,b
 16511  01342A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16512  01342C  90D8               	bcf	status,0,c
 16513  01342E  3717               	rlcf	?___awmod& (0+255),f,b
 16514  013430  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16515  013432  0E37               	movlw	low __npowers_
 16516  013434  2517               	addwf	?___awmod& (0+255),w,b
 16517  013436  6EF6               	movwf	tblptrl,c
 16518  013438  0EEA               	movlw	high __npowers_
 16519  01343A  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16520  01343C  6EF7               	movwf	tblptrh,c
 16521  01343E                     	if	1	;There are 3 active tblptr bytes
 16522  01343E  6AF8               	clrf	tblptru,c
 16523  013440  0E00               	movlw	low (__mediumconst shr (0+16))
 16524  013442  22F8               	addwfc	tblptru,f,c
 16525  013444                     	endif
 16526  013444  0009               	tblrd		*+
 16527  013446  CFF5 F15A          	movff	tablat,___flmul@a
 16528  01344A  0009               	tblrd		*+
 16529  01344C  CFF5 F15B          	movff	tablat,___flmul@a+1
 16530  013450  0009               	tblrd		*+
 16531  013452  CFF5 F15C          	movff	tablat,___flmul@a+2
 16532  013456  000A               	tblrd		*-
 16533  013458  CFF5 F15D          	movff	tablat,___flmul@a+3
 16534  01345C  ECCF  F09F         	call	___flmul	;wreg free
 16535  013460  C156  F16F         	movff	?___flmul,?_scale
 16536  013464  C157  F170         	movff	?___flmul+1,?_scale+1
 16537  013468  C158  F171         	movff	?___flmul+2,?_scale+2
 16538  01346C  C159  F172         	movff	?___flmul+3,?_scale+3
 16539  013470  0012               	return	
 16540  013472                     l1353:
 16541                           
 16542                           ;doprnt.c: 432: else if(scl > 10)
 16543  013472  0101               	movlb	1	; () banked
 16544  013474  5177               	movf	scale@scl& (0+255),w,b
 16545  013476  0A80               	xorlw	128
 16546  013478  0F75               	addlw	-139
 16547  01347A  A0D8               	btfss	status,0,c
 16548  01347C  D05D               	goto	l1356
 16549                           
 16550                           ; BSR set to: 1
 16551                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 16552  01347E  0E00               	movlw	0
 16553  013480  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16554  013482  0E0A               	movlw	10
 16555  013484  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16556  013486  5177               	movf	scale@scl& (0+255),w,b
 16557  013488  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16558  01348A  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16559  01348C  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16560  01348E  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16561  013490  EC4E  F0BC         	call	___awdiv	;wreg free
 16562  013494  0101               	movlb	1	; () banked
 16563  013496  90D8               	bcf	status,0,c
 16564  013498  371D               	rlcf	?___awdiv& (0+255),f,b
 16565  01349A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16566  01349C  90D8               	bcf	status,0,c
 16567  01349E  371D               	rlcf	?___awdiv& (0+255),f,b
 16568  0134A0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16569  0134A2  0E24               	movlw	36
 16570  0134A4  271D               	addwf	?___awdiv& (0+255),f,b
 16571  0134A6  0E00               	movlw	0
 16572  0134A8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16573  0134AA  0E37               	movlw	low __npowers_
 16574  0134AC  251D               	addwf	?___awdiv& (0+255),w,b
 16575  0134AE  6EF6               	movwf	tblptrl,c
 16576  0134B0  0EEA               	movlw	high __npowers_
 16577  0134B2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16578  0134B4  6EF7               	movwf	tblptrh,c
 16579  0134B6                     	if	1	;There are 3 active tblptr bytes
 16580  0134B6  6AF8               	clrf	tblptru,c
 16581  0134B8  0E00               	movlw	low (__mediumconst shr (0+16))
 16582  0134BA  22F8               	addwfc	tblptru,f,c
 16583  0134BC                     	endif
 16584  0134BC  0009               	tblrd		*+
 16585  0134BE  CFF5 F156          	movff	tablat,___flmul@b
 16586  0134C2  0009               	tblrd		*+
 16587  0134C4  CFF5 F157          	movff	tablat,___flmul@b+1
 16588  0134C8  0009               	tblrd		*+
 16589  0134CA  CFF5 F158          	movff	tablat,___flmul@b+2
 16590  0134CE  000A               	tblrd		*-
 16591  0134D0  CFF5 F159          	movff	tablat,___flmul@b+3
 16592  0134D4  0E00               	movlw	0
 16593  0134D6  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16594  0134D8  0E0A               	movlw	10
 16595  0134DA  6F19               	movwf	___awmod@divisor& (0+255),b
 16596  0134DC  5177               	movf	scale@scl& (0+255),w,b
 16597  0134DE  6F17               	movwf	___awmod@dividend& (0+255),b
 16598  0134E0  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16599  0134E2  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16600  0134E4  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16601  0134E6  ECD1  F0BD         	call	___awmod	;wreg free
 16602  0134EA  0101               	movlb	1	; () banked
 16603  0134EC  90D8               	bcf	status,0,c
 16604  0134EE  3717               	rlcf	?___awmod& (0+255),f,b
 16605  0134F0  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16606  0134F2  90D8               	bcf	status,0,c
 16607  0134F4  3717               	rlcf	?___awmod& (0+255),f,b
 16608  0134F6  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16609  0134F8  0E37               	movlw	low __npowers_
 16610  0134FA  2517               	addwf	?___awmod& (0+255),w,b
 16611  0134FC  6EF6               	movwf	tblptrl,c
 16612  0134FE  0EEA               	movlw	high __npowers_
 16613  013500  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16614  013502  6EF7               	movwf	tblptrh,c
 16615  013504                     	if	1	;There are 3 active tblptr bytes
 16616  013504  6AF8               	clrf	tblptru,c
 16617  013506  0E00               	movlw	low (__mediumconst shr (0+16))
 16618  013508  22F8               	addwfc	tblptru,f,c
 16619  01350A                     	endif
 16620  01350A  0009               	tblrd		*+
 16621  01350C  CFF5 F15A          	movff	tablat,___flmul@a
 16622  013510  0009               	tblrd		*+
 16623  013512  CFF5 F15B          	movff	tablat,___flmul@a+1
 16624  013516  0009               	tblrd		*+
 16625  013518  CFF5 F15C          	movff	tablat,___flmul@a+2
 16626  01351C  000A               	tblrd		*-
 16627  01351E  CFF5 F15D          	movff	tablat,___flmul@a+3
 16628  013522  ECCF  F09F         	call	___flmul	;wreg free
 16629  013526  C156  F16F         	movff	?___flmul,?_scale
 16630  01352A  C157  F170         	movff	?___flmul+1,?_scale+1
 16631  01352E  C158  F171         	movff	?___flmul+2,?_scale+2
 16632  013532  C159  F172         	movff	?___flmul+3,?_scale+3
 16633  013536  0012               	return	
 16634  013538                     l1356:
 16635                           
 16636                           ;doprnt.c: 434: return _npowers_[scl];
 16637  013538  0101               	movlb	1	; () banked
 16638  01353A  5177               	movf	scale@scl& (0+255),w,b
 16639  01353C  0D04               	mullw	4
 16640  01353E  0E37               	movlw	low __npowers_
 16641  013540  24F3               	addwf	prodl,w,c
 16642  013542  6EF6               	movwf	tblptrl,c
 16643  013544  0EEA               	movlw	high __npowers_
 16644  013546  20F4               	addwfc	prodh,w,c
 16645  013548  6EF7               	movwf	tblptrh,c
 16646  01354A                     	if	1	;There are 3 active tblptr bytes
 16647  01354A  6AF8               	clrf	tblptru,c
 16648  01354C  0E00               	movlw	low (__mediumconst shr (0+16))
 16649  01354E  22F8               	addwfc	tblptru,f,c
 16650  013550                     	endif
 16651  013550  0009               	tblrd		*+
 16652  013552  CFF5 F16F          	movff	tablat,?_scale
 16653  013556  0009               	tblrd		*+
 16654  013558  CFF5 F170          	movff	tablat,?_scale+1
 16655  01355C  0009               	tblrd		*+
 16656  01355E  CFF5 F171          	movff	tablat,?_scale+2
 16657  013562  000A               	tblrd		*-
 16658  013564  CFF5 F172          	movff	tablat,?_scale+3
 16659                           
 16660                           ; BSR set to: 1
 16661  013568  0012               	return	
 16662  01356A                     l1352:
 16663                           
 16664                           ; BSR set to: 1
 16665                           ;doprnt.c: 435: }
 16666                           ;doprnt.c: 436: if(scl>=110)
 16667                           
 16668                           ; BSR set to: 1
 16669  01356A  5177               	movf	scale@scl& (0+255),w,b
 16670  01356C  0A80               	xorlw	128
 16671  01356E  0F12               	addlw	-238
 16672  013570  A0D8               	btfss	status,0,c
 16673  013572  D0A5               	goto	l1357
 16674                           
 16675                           ; BSR set to: 1
 16676                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16677  013574  0E00               	movlw	0
 16678  013576  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16679  013578  0E0A               	movlw	10
 16680  01357A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16681  01357C  0E00               	movlw	0
 16682  01357E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16683  013580  0E64               	movlw	100
 16684  013582  6F19               	movwf	___awmod@divisor& (0+255),b
 16685  013584  5177               	movf	scale@scl& (0+255),w,b
 16686  013586  6F17               	movwf	___awmod@dividend& (0+255),b
 16687  013588  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16688  01358A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16689  01358C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16690  01358E  ECD1  F0BD         	call	___awmod	;wreg free
 16691  013592  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16692  013596  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16693  01359A  EC4E  F0BC         	call	___awdiv	;wreg free
 16694  01359E  0101               	movlb	1	; () banked
 16695  0135A0  90D8               	bcf	status,0,c
 16696  0135A2  371D               	rlcf	?___awdiv& (0+255),f,b
 16697  0135A4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16698  0135A6  90D8               	bcf	status,0,c
 16699  0135A8  371D               	rlcf	?___awdiv& (0+255),f,b
 16700  0135AA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16701  0135AC  0E24               	movlw	36
 16702  0135AE  271D               	addwf	?___awdiv& (0+255),f,b
 16703  0135B0  0E00               	movlw	0
 16704  0135B2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16705  0135B4  0E03               	movlw	low __powers_
 16706  0135B6  251D               	addwf	?___awdiv& (0+255),w,b
 16707  0135B8  6EF6               	movwf	tblptrl,c
 16708  0135BA  0EEA               	movlw	high __powers_
 16709  0135BC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16710  0135BE  6EF7               	movwf	tblptrh,c
 16711  0135C0                     	if	1	;There are 3 active tblptr bytes
 16712  0135C0  6AF8               	clrf	tblptru,c
 16713  0135C2  0E00               	movlw	low (__mediumconst shr (0+16))
 16714  0135C4  22F8               	addwfc	tblptru,f,c
 16715  0135C6                     	endif
 16716  0135C6  0009               	tblrd		*+
 16717  0135C8  CFF5 F15A          	movff	tablat,___flmul@a
 16718  0135CC  0009               	tblrd		*+
 16719  0135CE  CFF5 F15B          	movff	tablat,___flmul@a+1
 16720  0135D2  0009               	tblrd		*+
 16721  0135D4  CFF5 F15C          	movff	tablat,___flmul@a+2
 16722  0135D8  000A               	tblrd		*-
 16723  0135DA  CFF5 F15D          	movff	tablat,___flmul@a+3
 16724  0135DE  0E00               	movlw	0
 16725  0135E0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16726  0135E2  0E64               	movlw	100
 16727  0135E4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16728  0135E6  5177               	movf	scale@scl& (0+255),w,b
 16729  0135E8  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16730  0135EA  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16731  0135EC  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16732  0135EE  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16733  0135F0  EC4E  F0BC         	call	___awdiv	;wreg free
 16734  0135F4  0101               	movlb	1	; () banked
 16735  0135F6  90D8               	bcf	status,0,c
 16736  0135F8  371D               	rlcf	?___awdiv& (0+255),f,b
 16737  0135FA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16738  0135FC  90D8               	bcf	status,0,c
 16739  0135FE  371D               	rlcf	?___awdiv& (0+255),f,b
 16740  013600  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16741  013602  0E48               	movlw	72
 16742  013604  271D               	addwf	?___awdiv& (0+255),f,b
 16743  013606  0E00               	movlw	0
 16744  013608  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16745  01360A  0E03               	movlw	low __powers_
 16746  01360C  251D               	addwf	?___awdiv& (0+255),w,b
 16747  01360E  6EF6               	movwf	tblptrl,c
 16748  013610  0EEA               	movlw	high __powers_
 16749  013612  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16750  013614  6EF7               	movwf	tblptrh,c
 16751  013616                     	if	1	;There are 3 active tblptr bytes
 16752  013616  6AF8               	clrf	tblptru,c
 16753  013618  0E00               	movlw	low (__mediumconst shr (0+16))
 16754  01361A  22F8               	addwfc	tblptru,f,c
 16755  01361C                     	endif
 16756  01361C  0009               	tblrd		*+
 16757  01361E  CFF5 F156          	movff	tablat,___flmul@b
 16758  013622  0009               	tblrd		*+
 16759  013624  CFF5 F157          	movff	tablat,___flmul@b+1
 16760  013628  0009               	tblrd		*+
 16761  01362A  CFF5 F158          	movff	tablat,___flmul@b+2
 16762  01362E  000A               	tblrd		*-
 16763  013630  CFF5 F159          	movff	tablat,___flmul@b+3
 16764  013634  ECCF  F09F         	call	___flmul	;wreg free
 16765  013638  C156  F173         	movff	?___flmul,_scale$3897
 16766  01363C  C157  F174         	movff	?___flmul+1,_scale$3897+1
 16767  013640  C158  F175         	movff	?___flmul+2,_scale$3897+2
 16768  013644  C159  F176         	movff	?___flmul+3,_scale$3897+3
 16769                           
 16770                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16771  013648  C173  F156         	movff	_scale$3897,___flmul@b
 16772  01364C  C174  F157         	movff	_scale$3897+1,___flmul@b+1
 16773  013650  C175  F158         	movff	_scale$3897+2,___flmul@b+2
 16774  013654  C176  F159         	movff	_scale$3897+3,___flmul@b+3
 16775  013658  0E00               	movlw	0
 16776  01365A  0101               	movlb	1	; () banked
 16777  01365C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16778  01365E  0E0A               	movlw	10
 16779  013660  6F19               	movwf	___awmod@divisor& (0+255),b
 16780  013662  5177               	movf	scale@scl& (0+255),w,b
 16781  013664  6F17               	movwf	___awmod@dividend& (0+255),b
 16782  013666  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16783  013668  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16784  01366A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16785  01366C  ECD1  F0BD         	call	___awmod	;wreg free
 16786  013670  0101               	movlb	1	; () banked
 16787  013672  90D8               	bcf	status,0,c
 16788  013674  3717               	rlcf	?___awmod& (0+255),f,b
 16789  013676  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16790  013678  90D8               	bcf	status,0,c
 16791  01367A  3717               	rlcf	?___awmod& (0+255),f,b
 16792  01367C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16793  01367E  0E03               	movlw	low __powers_
 16794  013680  2517               	addwf	?___awmod& (0+255),w,b
 16795  013682  6EF6               	movwf	tblptrl,c
 16796  013684  0EEA               	movlw	high __powers_
 16797  013686  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16798  013688  6EF7               	movwf	tblptrh,c
 16799  01368A                     	if	1	;There are 3 active tblptr bytes
 16800  01368A  6AF8               	clrf	tblptru,c
 16801  01368C  0E00               	movlw	low (__mediumconst shr (0+16))
 16802  01368E  22F8               	addwfc	tblptru,f,c
 16803  013690                     	endif
 16804  013690  0009               	tblrd		*+
 16805  013692  CFF5 F15A          	movff	tablat,___flmul@a
 16806  013696  0009               	tblrd		*+
 16807  013698  CFF5 F15B          	movff	tablat,___flmul@a+1
 16808  01369C  0009               	tblrd		*+
 16809  01369E  CFF5 F15C          	movff	tablat,___flmul@a+2
 16810  0136A2  000A               	tblrd		*-
 16811  0136A4  CFF5 F15D          	movff	tablat,___flmul@a+3
 16812  0136A8  ECCF  F09F         	call	___flmul	;wreg free
 16813  0136AC  C156  F16F         	movff	?___flmul,?_scale
 16814  0136B0  C157  F170         	movff	?___flmul+1,?_scale+1
 16815  0136B4  C158  F171         	movff	?___flmul+2,?_scale+2
 16816  0136B8  C159  F172         	movff	?___flmul+3,?_scale+3
 16817  0136BC  0012               	return	
 16818  0136BE                     l1357:
 16819                           
 16820                           ;doprnt.c: 438: else if(scl > 10)
 16821  0136BE  0101               	movlb	1	; () banked
 16822  0136C0  5177               	movf	scale@scl& (0+255),w,b
 16823  0136C2  0A80               	xorlw	128
 16824  0136C4  0F75               	addlw	-139
 16825  0136C6  A0D8               	btfss	status,0,c
 16826  0136C8  D05D               	goto	l1359
 16827                           
 16828                           ; BSR set to: 1
 16829                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 16830  0136CA  0E00               	movlw	0
 16831  0136CC  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16832  0136CE  0E0A               	movlw	10
 16833  0136D0  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16834  0136D2  5177               	movf	scale@scl& (0+255),w,b
 16835  0136D4  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16836  0136D6  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16837  0136D8  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16838  0136DA  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16839  0136DC  EC4E  F0BC         	call	___awdiv	;wreg free
 16840  0136E0  0101               	movlb	1	; () banked
 16841  0136E2  90D8               	bcf	status,0,c
 16842  0136E4  371D               	rlcf	?___awdiv& (0+255),f,b
 16843  0136E6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16844  0136E8  90D8               	bcf	status,0,c
 16845  0136EA  371D               	rlcf	?___awdiv& (0+255),f,b
 16846  0136EC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16847  0136EE  0E24               	movlw	36
 16848  0136F0  271D               	addwf	?___awdiv& (0+255),f,b
 16849  0136F2  0E00               	movlw	0
 16850  0136F4  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16851  0136F6  0E03               	movlw	low __powers_
 16852  0136F8  251D               	addwf	?___awdiv& (0+255),w,b
 16853  0136FA  6EF6               	movwf	tblptrl,c
 16854  0136FC  0EEA               	movlw	high __powers_
 16855  0136FE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16856  013700  6EF7               	movwf	tblptrh,c
 16857  013702                     	if	1	;There are 3 active tblptr bytes
 16858  013702  6AF8               	clrf	tblptru,c
 16859  013704  0E00               	movlw	low (__mediumconst shr (0+16))
 16860  013706  22F8               	addwfc	tblptru,f,c
 16861  013708                     	endif
 16862  013708  0009               	tblrd		*+
 16863  01370A  CFF5 F156          	movff	tablat,___flmul@b
 16864  01370E  0009               	tblrd		*+
 16865  013710  CFF5 F157          	movff	tablat,___flmul@b+1
 16866  013714  0009               	tblrd		*+
 16867  013716  CFF5 F158          	movff	tablat,___flmul@b+2
 16868  01371A  000A               	tblrd		*-
 16869  01371C  CFF5 F159          	movff	tablat,___flmul@b+3
 16870  013720  0E00               	movlw	0
 16871  013722  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16872  013724  0E0A               	movlw	10
 16873  013726  6F19               	movwf	___awmod@divisor& (0+255),b
 16874  013728  5177               	movf	scale@scl& (0+255),w,b
 16875  01372A  6F17               	movwf	___awmod@dividend& (0+255),b
 16876  01372C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16877  01372E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16878  013730  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16879  013732  ECD1  F0BD         	call	___awmod	;wreg free
 16880  013736  0101               	movlb	1	; () banked
 16881  013738  90D8               	bcf	status,0,c
 16882  01373A  3717               	rlcf	?___awmod& (0+255),f,b
 16883  01373C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16884  01373E  90D8               	bcf	status,0,c
 16885  013740  3717               	rlcf	?___awmod& (0+255),f,b
 16886  013742  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16887  013744  0E03               	movlw	low __powers_
 16888  013746  2517               	addwf	?___awmod& (0+255),w,b
 16889  013748  6EF6               	movwf	tblptrl,c
 16890  01374A  0EEA               	movlw	high __powers_
 16891  01374C  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16892  01374E  6EF7               	movwf	tblptrh,c
 16893  013750                     	if	1	;There are 3 active tblptr bytes
 16894  013750  6AF8               	clrf	tblptru,c
 16895  013752  0E00               	movlw	low (__mediumconst shr (0+16))
 16896  013754  22F8               	addwfc	tblptru,f,c
 16897  013756                     	endif
 16898  013756  0009               	tblrd		*+
 16899  013758  CFF5 F15A          	movff	tablat,___flmul@a
 16900  01375C  0009               	tblrd		*+
 16901  01375E  CFF5 F15B          	movff	tablat,___flmul@a+1
 16902  013762  0009               	tblrd		*+
 16903  013764  CFF5 F15C          	movff	tablat,___flmul@a+2
 16904  013768  000A               	tblrd		*-
 16905  01376A  CFF5 F15D          	movff	tablat,___flmul@a+3
 16906  01376E  ECCF  F09F         	call	___flmul	;wreg free
 16907  013772  C156  F16F         	movff	?___flmul,?_scale
 16908  013776  C157  F170         	movff	?___flmul+1,?_scale+1
 16909  01377A  C158  F171         	movff	?___flmul+2,?_scale+2
 16910  01377E  C159  F172         	movff	?___flmul+3,?_scale+3
 16911  013782  0012               	return	
 16912  013784                     l1359:
 16913                           
 16914                           ;doprnt.c: 440: return _powers_[scl];
 16915  013784  0101               	movlb	1	; () banked
 16916  013786  5177               	movf	scale@scl& (0+255),w,b
 16917  013788  0D04               	mullw	4
 16918  01378A  0E03               	movlw	low __powers_
 16919  01378C  24F3               	addwf	prodl,w,c
 16920  01378E  6EF6               	movwf	tblptrl,c
 16921  013790  0EEA               	movlw	high __powers_
 16922  013792  20F4               	addwfc	prodh,w,c
 16923  013794  6EF7               	movwf	tblptrh,c
 16924  013796                     	if	1	;There are 3 active tblptr bytes
 16925  013796  6AF8               	clrf	tblptru,c
 16926  013798  0E00               	movlw	low (__mediumconst shr (0+16))
 16927  01379A  22F8               	addwfc	tblptru,f,c
 16928  01379C                     	endif
 16929  01379C  0009               	tblrd		*+
 16930  01379E  CFF5 F16F          	movff	tablat,?_scale
 16931  0137A2  0009               	tblrd		*+
 16932  0137A4  CFF5 F170          	movff	tablat,?_scale+1
 16933  0137A8  0009               	tblrd		*+
 16934  0137AA  CFF5 F171          	movff	tablat,?_scale+2
 16935  0137AE  000A               	tblrd		*-
 16936  0137B0  CFF5 F172          	movff	tablat,?_scale+3
 16937  0137B4  0012               	return	
 16938  0137B6                     __end_of_scale:
 16939                           	opt stack 0
 16940                           tblptru	equ	0xFF8
 16941                           tblptrh	equ	0xFF7
 16942                           tblptrl	equ	0xFF6
 16943                           tablat	equ	0xFF5
 16944                           prodh	equ	0xFF4
 16945                           prodl	equ	0xFF3
 16946                           intcon	equ	0xFF2
 16947                           indf0	equ	0xFEF
 16948                           postinc0	equ	0xFEE
 16949                           fsr0h	equ	0xFEA
 16950                           fsr0l	equ	0xFE9
 16951                           wreg	equ	0xFE8
 16952                           indf1	equ	0xFE7
 16953                           postdec1	equ	0xFE5
 16954                           plusw1	equ	0xFE3
 16955                           fsr1h	equ	0xFE2
 16956                           fsr1l	equ	0xFE1
 16957                           indf2	equ	0xFDF
 16958                           postinc2	equ	0xFDE
 16959                           postdec2	equ	0xFDD
 16960                           plusw2	equ	0xFDB
 16961                           fsr2h	equ	0xFDA
 16962                           fsr2l	equ	0xFD9
 16963                           status	equ	0xFD8
 16964                           
 16965 ;; *************** function _putch *****************
 16966 ;; Defined at:
 16967 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 16968 ;; Parameters:    Size  Location     Type
 16969 ;;  txData          1    wreg     unsigned char 
 16970 ;; Auto vars:     Size  Location     Type
 16971 ;;  txData          1   24[BANK1 ] unsigned char 
 16972 ;; Return value:  Size  Location     Type
 16973 ;;                  1    wreg      void 
 16974 ;; Registers used:
 16975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16976 ;; Tracked objects:
 16977 ;;		On entry : 0/0
 16978 ;;		On exit  : 0/0
 16979 ;;		Unchanged: 0/0
 16980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16982 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16984 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16985 ;;Total ram usage:        1 bytes
 16986 ;; Hardware stack levels used:    1
 16987 ;; Hardware stack levels required when called:   14
 16988 ;; This function calls:
 16989 ;;		_EUSART2_Write
 16990 ;; This function is called by:
 16991 ;;		_printf
 16992 ;; This function uses a non-reentrant model
 16993 ;;
 16994                           
 16995                           	psect	text30
 16996  01887C                     __ptext30:
 16997                           	opt stack 0
 16998  01887C                     _putch:
 16999                           	opt stack 13
 17000                           
 17001                           ;incstack = 0
 17002                           ;putch@txData stored from wreg
 17003  01887C  0101               	movlb	1	; () banked
 17004  01887E  6F18               	movwf	putch@txData& (0+255),b
 17005                           
 17006                           ;eusart2.c: 195: EUSART2_Write(txData);
 17007  018880  0101               	movlb	1	; () banked
 17008  018882  5118               	movf	putch@txData& (0+255),w,b
 17009  018884  EC73  F0C0         	call	_EUSART2_Write
 17010  018888  0012               	return		;funcret
 17011  01888A                     __end_of_putch:
 17012                           	opt stack 0
 17013                           tblptru	equ	0xFF8
 17014                           tblptrh	equ	0xFF7
 17015                           tblptrl	equ	0xFF6
 17016                           tablat	equ	0xFF5
 17017                           prodh	equ	0xFF4
 17018                           prodl	equ	0xFF3
 17019                           intcon	equ	0xFF2
 17020                           indf0	equ	0xFEF
 17021                           postinc0	equ	0xFEE
 17022                           fsr0h	equ	0xFEA
 17023                           fsr0l	equ	0xFE9
 17024                           wreg	equ	0xFE8
 17025                           indf1	equ	0xFE7
 17026                           postdec1	equ	0xFE5
 17027                           plusw1	equ	0xFE3
 17028                           fsr1h	equ	0xFE2
 17029                           fsr1l	equ	0xFE1
 17030                           indf2	equ	0xFDF
 17031                           postinc2	equ	0xFDE
 17032                           postdec2	equ	0xFDD
 17033                           plusw2	equ	0xFDB
 17034                           fsr2h	equ	0xFDA
 17035                           fsr2l	equ	0xFD9
 17036                           status	equ	0xFD8
 17037                           
 17038 ;; *************** function _EUSART2_Write *****************
 17039 ;; Defined at:
 17040 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 17041 ;; Parameters:    Size  Location     Type
 17042 ;;  txData          1    wreg     unsigned char 
 17043 ;; Auto vars:     Size  Location     Type
 17044 ;;  txData          1   23[BANK1 ] unsigned char 
 17045 ;; Return value:  Size  Location     Type
 17046 ;;                  1    wreg      void 
 17047 ;; Registers used:
 17048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17049 ;; Tracked objects:
 17050 ;;		On entry : 0/0
 17051 ;;		On exit  : 0/0
 17052 ;;		Unchanged: 0/0
 17053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17055 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17057 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17058 ;;Total ram usage:        1 bytes
 17059 ;; Hardware stack levels used:    1
 17060 ;; Hardware stack levels required when called:   13
 17061 ;; This function calls:
 17062 ;;		Nothing
 17063 ;; This function is called by:
 17064 ;;		_putch
 17065 ;; This function uses a non-reentrant model
 17066 ;;
 17067                           
 17068                           	psect	text31
 17069  0180E6                     __ptext31:
 17070                           	opt stack 0
 17071  0180E6                     _EUSART2_Write:
 17072                           	opt stack 13
 17073                           
 17074                           ;incstack = 0
 17075                           ;EUSART2_Write@txData stored from wreg
 17076  0180E6  0101               	movlb	1	; () banked
 17077  0180E8  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 17078                           
 17079                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 17080  0180EA  D002               	goto	l388
 17081  0180EC                     l389:
 17082                           
 17083                           ; BSR set to: 1
 17084  0180EC  0004               	clrwdt		;# 
 17085                           
 17086                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 17087  0180EE  827E               	bsf	3966,1,c	;volatile
 17088  0180F0                     l388:
 17089  0180F0  0101               	movlb	1	; () banked
 17090  0180F2  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 17091  0180F4  B4D8               	btfsc	status,2,c
 17092  0180F6  D7FA               	goto	l389
 17093                           
 17094                           ; BSR set to: 1
 17095                           ;eusart2.c: 167: }
 17096                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 17097  0180F8  927E               	bcf	3966,1,c	;volatile
 17098                           
 17099                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 17100  0180FA  010E               	movlb	14	; () banked
 17101  0180FC  BD2C               	btfsc	44,6,b	;volatile
 17102  0180FE  D003               	goto	l391
 17103                           
 17104                           ; BSR set to: 14
 17105                           ;eusart2.c: 172: {
 17106                           ;eusart2.c: 173: TX2REG = txData;
 17107  018100  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 17108                           
 17109                           ;eusart2.c: 174: }
 17110  018104  D013               	goto	l392
 17111  018106                     l391:
 17112                           
 17113                           ; BSR set to: 14
 17114                           ;eusart2.c: 175: else
 17115                           ;eusart2.c: 176: {
 17116                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 17117  018106  9D2C               	bcf	44,6,b	;volatile
 17118                           
 17119                           ; BSR set to: 14
 17120                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 17121  018108  0101               	movlb	1	; () banked
 17122  01810A  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 17123  01810C  0D01               	mullw	1
 17124  01810E  0E00               	movlw	low _eusart2TxBuffer
 17125  018110  24F3               	addwf	prodl,w,c
 17126  018112  6ED9               	movwf	fsr2l,c
 17127  018114  0E03               	movlw	high _eusart2TxBuffer
 17128  018116  20F4               	addwfc	prodh,w,c
 17129  018118  6EDA               	movwf	fsr2h,c
 17130  01811A  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 17131                           
 17132                           ; BSR set to: 1
 17133  01811E  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 17134                           
 17135                           ; BSR set to: 1
 17136                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 17137  018120  0E7F               	movlw	127
 17138  018122  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 17139  018124  D002               	goto	l393
 17140                           
 17141                           ; BSR set to: 1
 17142                           ;eusart2.c: 180: {
 17143                           ;eusart2.c: 181: eusart2TxHead = 0;
 17144  018126  0E00               	movlw	0
 17145  018128  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 17146  01812A                     l393:
 17147                           
 17148                           ; BSR set to: 1
 17149                           ;eusart2.c: 182: }
 17150                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 17151                           
 17152                           ; BSR set to: 1
 17153  01812A  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 17154  01812C                     l392:
 17155                           
 17156                           ;eusart2.c: 184: }
 17157                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 17158                           
 17159                           ; BSR set to: 1
 17160  01812C  010E               	movlb	14	; () banked
 17161  01812E  8D2C               	bsf	44,6,b	;volatile
 17162                           
 17163                           ; BSR set to: 14
 17164  018130  0012               	return		;funcret
 17165  018132                     __end_of_EUSART2_Write:
 17166                           	opt stack 0
 17167                           tblptru	equ	0xFF8
 17168                           tblptrh	equ	0xFF7
 17169                           tblptrl	equ	0xFF6
 17170                           tablat	equ	0xFF5
 17171                           prodh	equ	0xFF4
 17172                           prodl	equ	0xFF3
 17173                           intcon	equ	0xFF2
 17174                           indf0	equ	0xFEF
 17175                           postinc0	equ	0xFEE
 17176                           fsr0h	equ	0xFEA
 17177                           fsr0l	equ	0xFE9
 17178                           wreg	equ	0xFE8
 17179                           indf1	equ	0xFE7
 17180                           postdec1	equ	0xFE5
 17181                           plusw1	equ	0xFE3
 17182                           fsr1h	equ	0xFE2
 17183                           fsr1l	equ	0xFE1
 17184                           indf2	equ	0xFDF
 17185                           postinc2	equ	0xFDE
 17186                           postdec2	equ	0xFDD
 17187                           plusw2	equ	0xFDB
 17188                           fsr2h	equ	0xFDA
 17189                           fsr2l	equ	0xFD9
 17190                           status	equ	0xFD8
 17191                           
 17192 ;; *************** function _isdigit *****************
 17193 ;; Defined at:
 17194 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 17195 ;; Parameters:    Size  Location     Type
 17196 ;;  c               1    wreg     unsigned char 
 17197 ;; Auto vars:     Size  Location     Type
 17198 ;;  c               1   25[BANK1 ] unsigned char 
 17199 ;; Return value:  Size  Location     Type
 17200 ;;		None               void
 17201 ;; Registers used:
 17202 ;;		wreg, status,2, status,0
 17203 ;; Tracked objects:
 17204 ;;		On entry : 0/0
 17205 ;;		On exit  : 0/0
 17206 ;;		Unchanged: 0/0
 17207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17209 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17210 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17211 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17212 ;;Total ram usage:        3 bytes
 17213 ;; Hardware stack levels used:    1
 17214 ;; Hardware stack levels required when called:   13
 17215 ;; This function calls:
 17216 ;;		Nothing
 17217 ;; This function is called by:
 17218 ;;		_printf
 17219 ;;		_atoi
 17220 ;; This function uses a non-reentrant model
 17221 ;;
 17222                           
 17223                           	psect	text32
 17224  01870E                     __ptext32:
 17225                           	opt stack 0
 17226  01870E                     _isdigit:
 17227                           	opt stack 14
 17228                           
 17229                           ; BSR set to: 14
 17230                           ;incstack = 0
 17231                           ;isdigit@c stored from wreg
 17232  01870E  0101               	movlb	1	; () banked
 17233  018710  6F19               	movwf	isdigit@c& (0+255),b
 17234  018712  0E00               	movlw	0
 17235  018714  0101               	movlb	1	; () banked
 17236  018716  6F18               	movwf	_isdigit$3181& (0+255),b
 17237                           
 17238                           ; BSR set to: 1
 17239  018718  0E3A               	movlw	58
 17240  01871A  6119               	cpfslt	isdigit@c& (0+255),b
 17241  01871C  D005               	goto	l1930
 17242                           
 17243                           ; BSR set to: 1
 17244  01871E  0E2F               	movlw	47
 17245  018720  6519               	cpfsgt	isdigit@c& (0+255),b
 17246  018722  D002               	goto	l1930
 17247                           
 17248                           ; BSR set to: 1
 17249  018724  0E01               	movlw	1
 17250  018726  6F18               	movwf	_isdigit$3181& (0+255),b
 17251  018728                     l1930:
 17252                           
 17253                           ; BSR set to: 1
 17254                           
 17255                           ; BSR set to: 1
 17256  018728  C118  F117         	movff	_isdigit$3181,??_isdigit
 17257  01872C  3117               	rrcf	??_isdigit& (0+255),w,b
 17258  01872E  0012               	return	
 17259  018730                     __end_of_isdigit:
 17260                           	opt stack 0
 17261                           tblptru	equ	0xFF8
 17262                           tblptrh	equ	0xFF7
 17263                           tblptrl	equ	0xFF6
 17264                           tablat	equ	0xFF5
 17265                           prodh	equ	0xFF4
 17266                           prodl	equ	0xFF3
 17267                           intcon	equ	0xFF2
 17268                           indf0	equ	0xFEF
 17269                           postinc0	equ	0xFEE
 17270                           fsr0h	equ	0xFEA
 17271                           fsr0l	equ	0xFE9
 17272                           wreg	equ	0xFE8
 17273                           indf1	equ	0xFE7
 17274                           postdec1	equ	0xFE5
 17275                           plusw1	equ	0xFE3
 17276                           fsr1h	equ	0xFE2
 17277                           fsr1l	equ	0xFE1
 17278                           indf2	equ	0xFDF
 17279                           postinc2	equ	0xFDE
 17280                           postdec2	equ	0xFDD
 17281                           plusw2	equ	0xFDB
 17282                           fsr2h	equ	0xFDA
 17283                           fsr2l	equ	0xFD9
 17284                           status	equ	0xFD8
 17285                           
 17286 ;; *************** function _fround *****************
 17287 ;; Defined at:
 17288 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 17289 ;; Parameters:    Size  Location     Type
 17290 ;;  prec            1    wreg     unsigned char 
 17291 ;; Auto vars:     Size  Location     Type
 17292 ;;  prec            1  123[BANK1 ] unsigned char 
 17293 ;; Return value:  Size  Location     Type
 17294 ;;                  4  111[BANK1 ] unsigned char 
 17295 ;; Registers used:
 17296 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17297 ;; Tracked objects:
 17298 ;;		On entry : 0/0
 17299 ;;		On exit  : 0/0
 17300 ;;		Unchanged: 0/0
 17301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17302 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17303 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17305 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17306 ;;Total ram usage:       13 bytes
 17307 ;; Hardware stack levels used:    1
 17308 ;; Hardware stack levels required when called:   14
 17309 ;; This function calls:
 17310 ;;		___awdiv
 17311 ;;		___awmod
 17312 ;;		___flmul
 17313 ;; This function is called by:
 17314 ;;		_printf
 17315 ;; This function uses a non-reentrant model
 17316 ;;
 17317                           
 17318                           	psect	text33
 17319  015582                     __ptext33:
 17320                           	opt stack 0
 17321  015582                     _fround:
 17322                           	opt stack 13
 17323                           
 17324                           ; BSR set to: 1
 17325                           ;incstack = 0
 17326                           ;fround@prec stored from wreg
 17327  015582  0101               	movlb	1	; () banked
 17328  015584  6F7B               	movwf	fround@prec& (0+255),b
 17329                           
 17330                           ;doprnt.c: 413: if(prec>=110)
 17331  015586  0E6D               	movlw	109
 17332  015588  0101               	movlb	1	; () banked
 17333  01558A  657B               	cpfsgt	fround@prec& (0+255),b
 17334  01558C  D0BA               	goto	l1346
 17335                           
 17336                           ; BSR set to: 1
 17337                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17338  01558E  0E00               	movlw	0
 17339  015590  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17340  015592  0E0A               	movlw	10
 17341  015594  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17342  015596  0E00               	movlw	0
 17343  015598  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17344  01559A  0E64               	movlw	100
 17345  01559C  6F19               	movwf	___awmod@divisor& (0+255),b
 17346  01559E  C17B  F117         	movff	fround@prec,___awmod@dividend
 17347  0155A2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17348  0155A4  ECD1  F0BD         	call	___awmod	;wreg free
 17349  0155A8  C117  F11D         	movff	?___awmod,___awdiv@dividend
 17350  0155AC  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 17351  0155B0  EC4E  F0BC         	call	___awdiv	;wreg free
 17352  0155B4  0101               	movlb	1	; () banked
 17353  0155B6  90D8               	bcf	status,0,c
 17354  0155B8  371D               	rlcf	?___awdiv& (0+255),f,b
 17355  0155BA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17356  0155BC  90D8               	bcf	status,0,c
 17357  0155BE  371D               	rlcf	?___awdiv& (0+255),f,b
 17358  0155C0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17359  0155C2  0E24               	movlw	36
 17360  0155C4  271D               	addwf	?___awdiv& (0+255),f,b
 17361  0155C6  0E00               	movlw	0
 17362  0155C8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17363  0155CA  0E37               	movlw	low __npowers_
 17364  0155CC  251D               	addwf	?___awdiv& (0+255),w,b
 17365  0155CE  6EF6               	movwf	tblptrl,c
 17366  0155D0  0EEA               	movlw	high __npowers_
 17367  0155D2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17368  0155D4  6EF7               	movwf	tblptrh,c
 17369  0155D6                     	if	1	;There are 3 active tblptr bytes
 17370  0155D6  6AF8               	clrf	tblptru,c
 17371  0155D8  0E00               	movlw	low (__mediumconst shr (0+16))
 17372  0155DA  22F8               	addwfc	tblptru,f,c
 17373  0155DC                     	endif
 17374  0155DC  0009               	tblrd		*+
 17375  0155DE  CFF5 F15A          	movff	tablat,___flmul@a
 17376  0155E2  0009               	tblrd		*+
 17377  0155E4  CFF5 F15B          	movff	tablat,___flmul@a+1
 17378  0155E8  0009               	tblrd		*+
 17379  0155EA  CFF5 F15C          	movff	tablat,___flmul@a+2
 17380  0155EE  000A               	tblrd		*-
 17381  0155F0  CFF5 F15D          	movff	tablat,___flmul@a+3
 17382  0155F4  0E00               	movlw	0
 17383  0155F6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17384  0155F8  0E64               	movlw	100
 17385  0155FA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17386  0155FC  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 17387  015600  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17388  015602  EC4E  F0BC         	call	___awdiv	;wreg free
 17389  015606  0101               	movlb	1	; () banked
 17390  015608  90D8               	bcf	status,0,c
 17391  01560A  371D               	rlcf	?___awdiv& (0+255),f,b
 17392  01560C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17393  01560E  90D8               	bcf	status,0,c
 17394  015610  371D               	rlcf	?___awdiv& (0+255),f,b
 17395  015612  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17396  015614  0E48               	movlw	72
 17397  015616  271D               	addwf	?___awdiv& (0+255),f,b
 17398  015618  0E00               	movlw	0
 17399  01561A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17400  01561C  0E37               	movlw	low __npowers_
 17401  01561E  251D               	addwf	?___awdiv& (0+255),w,b
 17402  015620  6EF6               	movwf	tblptrl,c
 17403  015622  0EEA               	movlw	high __npowers_
 17404  015624  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17405  015626  6EF7               	movwf	tblptrh,c
 17406  015628                     	if	1	;There are 3 active tblptr bytes
 17407  015628  6AF8               	clrf	tblptru,c
 17408  01562A  0E00               	movlw	low (__mediumconst shr (0+16))
 17409  01562C  22F8               	addwfc	tblptru,f,c
 17410  01562E                     	endif
 17411  01562E  0009               	tblrd		*+
 17412  015630  CFF5 F156          	movff	tablat,___flmul@b
 17413  015634  0009               	tblrd		*+
 17414  015636  CFF5 F157          	movff	tablat,___flmul@b+1
 17415  01563A  0009               	tblrd		*+
 17416  01563C  CFF5 F158          	movff	tablat,___flmul@b+2
 17417  015640  000A               	tblrd		*-
 17418  015642  CFF5 F159          	movff	tablat,___flmul@b+3
 17419  015646  ECCF  F09F         	call	___flmul	;wreg free
 17420  01564A  C156  F177         	movff	?___flmul,_fround$3895
 17421  01564E  C157  F178         	movff	?___flmul+1,_fround$3895+1
 17422  015652  C158  F179         	movff	?___flmul+2,_fround$3895+2
 17423  015656  C159  F17A         	movff	?___flmul+3,_fround$3895+3
 17424                           
 17425                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17426  01565A  0E00               	movlw	0
 17427  01565C  0101               	movlb	1	; () banked
 17428  01565E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17429  015660  0E0A               	movlw	10
 17430  015662  6F19               	movwf	___awmod@divisor& (0+255),b
 17431  015664  C17B  F117         	movff	fround@prec,___awmod@dividend
 17432  015668  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17433  01566A  ECD1  F0BD         	call	___awmod	;wreg free
 17434  01566E  0101               	movlb	1	; () banked
 17435  015670  90D8               	bcf	status,0,c
 17436  015672  3717               	rlcf	?___awmod& (0+255),f,b
 17437  015674  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17438  015676  90D8               	bcf	status,0,c
 17439  015678  3717               	rlcf	?___awmod& (0+255),f,b
 17440  01567A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17441  01567C  0E37               	movlw	low __npowers_
 17442  01567E  2517               	addwf	?___awmod& (0+255),w,b
 17443  015680  6EF6               	movwf	tblptrl,c
 17444  015682  0EEA               	movlw	high __npowers_
 17445  015684  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 17446  015686  6EF7               	movwf	tblptrh,c
 17447  015688                     	if	1	;There are 3 active tblptr bytes
 17448  015688  6AF8               	clrf	tblptru,c
 17449  01568A  0E00               	movlw	low (__mediumconst shr (0+16))
 17450  01568C  22F8               	addwfc	tblptru,f,c
 17451  01568E                     	endif
 17452  01568E  0009               	tblrd		*+
 17453  015690  CFF5 F15A          	movff	tablat,___flmul@a
 17454  015694  0009               	tblrd		*+
 17455  015696  CFF5 F15B          	movff	tablat,___flmul@a+1
 17456  01569A  0009               	tblrd		*+
 17457  01569C  CFF5 F15C          	movff	tablat,___flmul@a+2
 17458  0156A0  000A               	tblrd		*-
 17459  0156A2  CFF5 F15D          	movff	tablat,___flmul@a+3
 17460  0156A6  C177  F156         	movff	_fround$3895,___flmul@b
 17461  0156AA  C178  F157         	movff	_fround$3895+1,___flmul@b+1
 17462  0156AE  C179  F158         	movff	_fround$3895+2,___flmul@b+2
 17463  0156B2  C17A  F159         	movff	_fround$3895+3,___flmul@b+3
 17464  0156B6  ECCF  F09F         	call	___flmul	;wreg free
 17465  0156BA  C156  F173         	movff	?___flmul,_fround$3896
 17466  0156BE  C157  F174         	movff	?___flmul+1,_fround$3896+1
 17467  0156C2  C158  F175         	movff	?___flmul+2,_fround$3896+2
 17468  0156C6  C159  F176         	movff	?___flmul+3,_fround$3896+3
 17469                           
 17470                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17471  0156CA  C173  F156         	movff	_fround$3896,___flmul@b
 17472  0156CE  C174  F157         	movff	_fround$3896+1,___flmul@b+1
 17473  0156D2  C175  F158         	movff	_fround$3896+2,___flmul@b+2
 17474  0156D6  C176  F159         	movff	_fround$3896+3,___flmul@b+3
 17475  0156DA  0E00               	movlw	0
 17476  0156DC  0101               	movlb	1	; () banked
 17477  0156DE  6F5A               	movwf	___flmul@a& (0+255),b
 17478  0156E0  0E00               	movlw	0
 17479  0156E2  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17480  0156E4  0E00               	movlw	0
 17481  0156E6  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17482  0156E8  0E3F               	movlw	63
 17483  0156EA  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17484  0156EC  ECCF  F09F         	call	___flmul	;wreg free
 17485  0156F0  C156  F16F         	movff	?___flmul,?_fround
 17486  0156F4  C157  F170         	movff	?___flmul+1,?_fround+1
 17487  0156F8  C158  F171         	movff	?___flmul+2,?_fround+2
 17488  0156FC  C159  F172         	movff	?___flmul+3,?_fround+3
 17489  015700  0012               	return	
 17490  015702                     l1346:
 17491                           
 17492                           ;doprnt.c: 415: else if(prec > 10)
 17493  015702  0E0A               	movlw	10
 17494  015704  0101               	movlb	1	; () banked
 17495  015706  657B               	cpfsgt	fround@prec& (0+255),b
 17496  015708  D074               	goto	l1349
 17497                           
 17498                           ; BSR set to: 1
 17499                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17500  01570A  0E00               	movlw	0
 17501  01570C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17502  01570E  0E0A               	movlw	10
 17503  015710  6F19               	movwf	___awmod@divisor& (0+255),b
 17504  015712  C17B  F117         	movff	fround@prec,___awmod@dividend
 17505  015716  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17506  015718  ECD1  F0BD         	call	___awmod	;wreg free
 17507  01571C  0101               	movlb	1	; () banked
 17508  01571E  90D8               	bcf	status,0,c
 17509  015720  3717               	rlcf	?___awmod& (0+255),f,b
 17510  015722  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17511  015724  90D8               	bcf	status,0,c
 17512  015726  3717               	rlcf	?___awmod& (0+255),f,b
 17513  015728  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17514  01572A  0E37               	movlw	low __npowers_
 17515  01572C  2517               	addwf	?___awmod& (0+255),w,b
 17516  01572E  6EF6               	movwf	tblptrl,c
 17517  015730  0EEA               	movlw	high __npowers_
 17518  015732  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 17519  015734  6EF7               	movwf	tblptrh,c
 17520  015736                     	if	1	;There are 3 active tblptr bytes
 17521  015736  6AF8               	clrf	tblptru,c
 17522  015738  0E00               	movlw	low (__mediumconst shr (0+16))
 17523  01573A  22F8               	addwfc	tblptru,f,c
 17524  01573C                     	endif
 17525  01573C  0009               	tblrd		*+
 17526  01573E  CFF5 F15A          	movff	tablat,___flmul@a
 17527  015742  0009               	tblrd		*+
 17528  015744  CFF5 F15B          	movff	tablat,___flmul@a+1
 17529  015748  0009               	tblrd		*+
 17530  01574A  CFF5 F15C          	movff	tablat,___flmul@a+2
 17531  01574E  000A               	tblrd		*-
 17532  015750  CFF5 F15D          	movff	tablat,___flmul@a+3
 17533  015754  0E00               	movlw	0
 17534  015756  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17535  015758  0E0A               	movlw	10
 17536  01575A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17537  01575C  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 17538  015760  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17539  015762  EC4E  F0BC         	call	___awdiv	;wreg free
 17540  015766  0101               	movlb	1	; () banked
 17541  015768  90D8               	bcf	status,0,c
 17542  01576A  371D               	rlcf	?___awdiv& (0+255),f,b
 17543  01576C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17544  01576E  90D8               	bcf	status,0,c
 17545  015770  371D               	rlcf	?___awdiv& (0+255),f,b
 17546  015772  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17547  015774  0E24               	movlw	36
 17548  015776  271D               	addwf	?___awdiv& (0+255),f,b
 17549  015778  0E00               	movlw	0
 17550  01577A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17551  01577C  0E37               	movlw	low __npowers_
 17552  01577E  251D               	addwf	?___awdiv& (0+255),w,b
 17553  015780  6EF6               	movwf	tblptrl,c
 17554  015782  0EEA               	movlw	high __npowers_
 17555  015784  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17556  015786  6EF7               	movwf	tblptrh,c
 17557  015788                     	if	1	;There are 3 active tblptr bytes
 17558  015788  6AF8               	clrf	tblptru,c
 17559  01578A  0E00               	movlw	low (__mediumconst shr (0+16))
 17560  01578C  22F8               	addwfc	tblptru,f,c
 17561  01578E                     	endif
 17562  01578E  0009               	tblrd		*+
 17563  015790  CFF5 F156          	movff	tablat,___flmul@b
 17564  015794  0009               	tblrd		*+
 17565  015796  CFF5 F157          	movff	tablat,___flmul@b+1
 17566  01579A  0009               	tblrd		*+
 17567  01579C  CFF5 F158          	movff	tablat,___flmul@b+2
 17568  0157A0  000A               	tblrd		*-
 17569  0157A2  CFF5 F159          	movff	tablat,___flmul@b+3
 17570  0157A6  ECCF  F09F         	call	___flmul	;wreg free
 17571  0157AA  C156  F177         	movff	?___flmul,_fround$3895
 17572  0157AE  C157  F178         	movff	?___flmul+1,_fround$3895+1
 17573  0157B2  C158  F179         	movff	?___flmul+2,_fround$3895+2
 17574  0157B6  C159  F17A         	movff	?___flmul+3,_fround$3895+3
 17575                           
 17576                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17577  0157BA  C177  F156         	movff	_fround$3895,___flmul@b
 17578  0157BE  C178  F157         	movff	_fround$3895+1,___flmul@b+1
 17579  0157C2  C179  F158         	movff	_fround$3895+2,___flmul@b+2
 17580  0157C6  C17A  F159         	movff	_fround$3895+3,___flmul@b+3
 17581  0157CA  0E00               	movlw	0
 17582  0157CC  0101               	movlb	1	; () banked
 17583  0157CE  6F5A               	movwf	___flmul@a& (0+255),b
 17584  0157D0  0E00               	movlw	0
 17585  0157D2  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17586  0157D4  0E00               	movlw	0
 17587  0157D6  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17588  0157D8  0E3F               	movlw	63
 17589  0157DA  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17590  0157DC  ECCF  F09F         	call	___flmul	;wreg free
 17591  0157E0  C156  F16F         	movff	?___flmul,?_fround
 17592  0157E4  C157  F170         	movff	?___flmul+1,?_fround+1
 17593  0157E8  C158  F171         	movff	?___flmul+2,?_fround+2
 17594  0157EC  C159  F172         	movff	?___flmul+3,?_fround+3
 17595  0157F0  0012               	return	
 17596  0157F2                     l1349:
 17597                           
 17598                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 17599  0157F2  0101               	movlb	1	; () banked
 17600  0157F4  517B               	movf	fround@prec& (0+255),w,b
 17601  0157F6  0D04               	mullw	4
 17602  0157F8  0E37               	movlw	low __npowers_
 17603  0157FA  24F3               	addwf	prodl,w,c
 17604  0157FC  6EF6               	movwf	tblptrl,c
 17605  0157FE  0EEA               	movlw	high __npowers_
 17606  015800  20F4               	addwfc	prodh,w,c
 17607  015802  6EF7               	movwf	tblptrh,c
 17608  015804                     	if	1	;There are 3 active tblptr bytes
 17609  015804  6AF8               	clrf	tblptru,c
 17610  015806  0E00               	movlw	low (__mediumconst shr (0+16))
 17611  015808  22F8               	addwfc	tblptru,f,c
 17612  01580A                     	endif
 17613  01580A  0009               	tblrd		*+
 17614  01580C  CFF5 F156          	movff	tablat,___flmul@b
 17615  015810  0009               	tblrd		*+
 17616  015812  CFF5 F157          	movff	tablat,___flmul@b+1
 17617  015816  0009               	tblrd		*+
 17618  015818  CFF5 F158          	movff	tablat,___flmul@b+2
 17619  01581C  000A               	tblrd		*-
 17620  01581E  CFF5 F159          	movff	tablat,___flmul@b+3
 17621  015822  0E00               	movlw	0
 17622  015824  6F5A               	movwf	___flmul@a& (0+255),b
 17623  015826  0E00               	movlw	0
 17624  015828  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17625  01582A  0E00               	movlw	0
 17626  01582C  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17627  01582E  0E3F               	movlw	63
 17628  015830  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17629  015832  ECCF  F09F         	call	___flmul	;wreg free
 17630  015836  C156  F16F         	movff	?___flmul,?_fround
 17631  01583A  C157  F170         	movff	?___flmul+1,?_fround+1
 17632  01583E  C158  F171         	movff	?___flmul+2,?_fround+2
 17633  015842  C159  F172         	movff	?___flmul+3,?_fround+3
 17634  015846  0012               	return	
 17635  015848                     __end_of_fround:
 17636                           	opt stack 0
 17637                           tblptru	equ	0xFF8
 17638                           tblptrh	equ	0xFF7
 17639                           tblptrl	equ	0xFF6
 17640                           tablat	equ	0xFF5
 17641                           prodh	equ	0xFF4
 17642                           prodl	equ	0xFF3
 17643                           intcon	equ	0xFF2
 17644                           indf0	equ	0xFEF
 17645                           postinc0	equ	0xFEE
 17646                           fsr0h	equ	0xFEA
 17647                           fsr0l	equ	0xFE9
 17648                           wreg	equ	0xFE8
 17649                           indf1	equ	0xFE7
 17650                           postdec1	equ	0xFE5
 17651                           plusw1	equ	0xFE3
 17652                           fsr1h	equ	0xFE2
 17653                           fsr1l	equ	0xFE1
 17654                           indf2	equ	0xFDF
 17655                           postinc2	equ	0xFDE
 17656                           postdec2	equ	0xFDD
 17657                           plusw2	equ	0xFDB
 17658                           fsr2h	equ	0xFDA
 17659                           fsr2l	equ	0xFD9
 17660                           status	equ	0xFD8
 17661                           
 17662 ;; *************** function ___flmul *****************
 17663 ;; Defined at:
 17664 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 17665 ;; Parameters:    Size  Location     Type
 17666 ;;  b               4   86[BANK1 ] unsigned char 
 17667 ;;  a               4   90[BANK1 ] unsigned char 
 17668 ;; Auto vars:     Size  Location     Type
 17669 ;;  prod            4  105[BANK1 ] struct .
 17670 ;;  grs             4  101[BANK1 ] unsigned long 
 17671 ;;  temp            2  109[BANK1 ] struct .
 17672 ;;  bexp            1  100[BANK1 ] unsigned char 
 17673 ;;  aexp            1   99[BANK1 ] unsigned char 
 17674 ;;  sign            1   98[BANK1 ] unsigned char 
 17675 ;; Return value:  Size  Location     Type
 17676 ;;                  4   86[BANK1 ] unsigned char 
 17677 ;; Registers used:
 17678 ;;		wreg, status,2, status,0, prodl, prodh
 17679 ;; Tracked objects:
 17680 ;;		On entry : 0/0
 17681 ;;		On exit  : 0/0
 17682 ;;		Unchanged: 0/0
 17683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17684 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17685 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17686 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17687 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17688 ;;Total ram usage:       25 bytes
 17689 ;; Hardware stack levels used:    1
 17690 ;; Hardware stack levels required when called:   13
 17691 ;; This function calls:
 17692 ;;		Nothing
 17693 ;; This function is called by:
 17694 ;;		_ringBufferLUT
 17695 ;;		_fround
 17696 ;;		_scale
 17697 ;;		_printf
 17698 ;; This function uses a non-reentrant model
 17699 ;;
 17700                           
 17701                           	psect	text34
 17702  013F9E                     __ptext34:
 17703                           	opt stack 0
 17704  013F9E                     ___flmul:
 17705                           	opt stack 13
 17706                           
 17707                           ;incstack = 0
 17708  013F9E  0101               	movlb	1	; () banked
 17709  013FA0  5159               	movf	(___flmul@b+3)& (0+255),w,b
 17710  013FA2  0B80               	andlw	128
 17711  013FA4  6F62               	movwf	___flmul@sign& (0+255),b
 17712  013FA6  5159               	movf	(___flmul@b+3)& (0+255),w,b
 17713  013FA8  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 17714  013FAA  6F64               	movwf	___flmul@bexp& (0+255),b
 17715                           
 17716                           ; BSR set to: 1
 17717  013FAC  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 17718                           
 17719                           ; BSR set to: 1
 17720  013FAE  8164               	bsf	___flmul@bexp& (0+255),0,b
 17721                           
 17722                           ; BSR set to: 1
 17723                           
 17724                           ; BSR set to: 1
 17725  013FB0  5164               	movf	___flmul@bexp& (0+255),w,b
 17726  013FB2  B4D8               	btfsc	status,2,c
 17727  013FB4  D00D               	goto	l2144
 17728                           
 17729                           ; BSR set to: 1
 17730  013FB6  2964               	incf	___flmul@bexp& (0+255),w,b
 17731  013FB8  A4D8               	btfss	status,2,c
 17732  013FBA  D008               	goto	l2145
 17733                           
 17734                           ; BSR set to: 1
 17735  013FBC  0E00               	movlw	0
 17736  013FBE  6F56               	movwf	___flmul@b& (0+255),b
 17737  013FC0  0E00               	movlw	0
 17738  013FC2  6F57               	movwf	(___flmul@b+1)& (0+255),b
 17739  013FC4  0E00               	movlw	0
 17740  013FC6  6F58               	movwf	(___flmul@b+2)& (0+255),b
 17741  013FC8  0E00               	movlw	0
 17742  013FCA  6F59               	movwf	(___flmul@b+3)& (0+255),b
 17743  013FCC                     l2145:
 17744                           
 17745                           ; BSR set to: 1
 17746                           
 17747                           ; BSR set to: 1
 17748  013FCC  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 17749  013FCE  D008               	goto	l2146
 17750  013FD0                     l2144:
 17751                           
 17752                           ; BSR set to: 1
 17753                           
 17754                           ; BSR set to: 1
 17755  013FD0  0E00               	movlw	0
 17756  013FD2  6F56               	movwf	___flmul@b& (0+255),b
 17757  013FD4  0E00               	movlw	0
 17758  013FD6  6F57               	movwf	(___flmul@b+1)& (0+255),b
 17759  013FD8  0E00               	movlw	0
 17760  013FDA  6F58               	movwf	(___flmul@b+2)& (0+255),b
 17761  013FDC  0E00               	movlw	0
 17762  013FDE  6F59               	movwf	(___flmul@b+3)& (0+255),b
 17763  013FE0                     l2146:
 17764                           
 17765                           ; BSR set to: 1
 17766                           
 17767                           ; BSR set to: 1
 17768  013FE0  515D               	movf	(___flmul@a+3)& (0+255),w,b
 17769  013FE2  0B80               	andlw	128
 17770  013FE4  1B62               	xorwf	___flmul@sign& (0+255),f,b
 17771                           
 17772                           ; BSR set to: 1
 17773  013FE6  515D               	movf	(___flmul@a+3)& (0+255),w,b
 17774  013FE8  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 17775  013FEA  6F63               	movwf	___flmul@aexp& (0+255),b
 17776                           
 17777                           ; BSR set to: 1
 17778  013FEC  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 17779                           
 17780                           ; BSR set to: 1
 17781  013FEE  8163               	bsf	___flmul@aexp& (0+255),0,b
 17782                           
 17783                           ; BSR set to: 1
 17784                           
 17785                           ; BSR set to: 1
 17786  013FF0  5163               	movf	___flmul@aexp& (0+255),w,b
 17787  013FF2  B4D8               	btfsc	status,2,c
 17788  013FF4  D00D               	goto	l2148
 17789                           
 17790                           ; BSR set to: 1
 17791  013FF6  2963               	incf	___flmul@aexp& (0+255),w,b
 17792  013FF8  A4D8               	btfss	status,2,c
 17793  013FFA  D008               	goto	l2149
 17794                           
 17795                           ; BSR set to: 1
 17796  013FFC  0E00               	movlw	0
 17797  013FFE  6F5A               	movwf	___flmul@a& (0+255),b
 17798  014000  0E00               	movlw	0
 17799  014002  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17800  014004  0E00               	movlw	0
 17801  014006  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17802  014008  0E00               	movlw	0
 17803  01400A  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17804  01400C                     l2149:
 17805                           
 17806                           ; BSR set to: 1
 17807                           
 17808                           ; BSR set to: 1
 17809  01400C  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 17810  01400E  D008               	goto	l2150
 17811  014010                     l2148:
 17812                           
 17813                           ; BSR set to: 1
 17814                           
 17815                           ; BSR set to: 1
 17816  014010  0E00               	movlw	0
 17817  014012  6F5A               	movwf	___flmul@a& (0+255),b
 17818  014014  0E00               	movlw	0
 17819  014016  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17820  014018  0E00               	movlw	0
 17821  01401A  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17822  01401C  0E00               	movlw	0
 17823  01401E  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17824  014020                     l2150:
 17825                           
 17826                           ; BSR set to: 1
 17827  014020  5163               	movf	___flmul@aexp& (0+255),w,b
 17828  014022  B4D8               	btfsc	status,2,c
 17829  014024  D003               	goto	u23050
 17830                           
 17831                           ; BSR set to: 1
 17832  014026  5164               	movf	___flmul@bexp& (0+255),w,b
 17833  014028  A4D8               	btfss	status,2,c
 17834  01402A  D009               	goto	l2151
 17835  01402C                     u23050:
 17836                           
 17837                           ; BSR set to: 1
 17838                           
 17839                           ; BSR set to: 1
 17840  01402C  0E00               	movlw	0
 17841  01402E  6F56               	movwf	?___flmul& (0+255),b
 17842  014030  0E00               	movlw	0
 17843  014032  6F57               	movwf	(?___flmul+1)& (0+255),b
 17844  014034  0E00               	movlw	0
 17845  014036  6F58               	movwf	(?___flmul+2)& (0+255),b
 17846  014038  0E00               	movlw	0
 17847  01403A  6F59               	movwf	(?___flmul+3)& (0+255),b
 17848                           
 17849                           ; BSR set to: 1
 17850  01403C  0012               	return	
 17851  01403E                     l2151:
 17852                           
 17853                           ; BSR set to: 1
 17854                           
 17855                           ; BSR set to: 1
 17856  01403E  515C               	movf	(___flmul@a+2)& (0+255),w,b
 17857  014040  0356               	mulwf	___flmul@b& (0+255),b
 17858  014042  CFF3 F16D          	movff	prodl,___flmul@temp
 17859  014046  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17860                           
 17861                           ; BSR set to: 1
 17862  01404A  516D               	movf	___flmul@temp& (0+255),w,b
 17863  01404C  6F65               	movwf	___flmul@grs& (0+255),b
 17864  01404E  6B66               	clrf	(___flmul@grs+1)& (0+255),b
 17865  014050  6B67               	clrf	(___flmul@grs+2)& (0+255),b
 17866  014052  6B68               	clrf	(___flmul@grs+3)& (0+255),b
 17867                           
 17868                           ; BSR set to: 1
 17869  014054  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17870  014056  6F69               	movwf	___flmul@prod& (0+255),b
 17871  014058  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 17872  01405A  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 17873  01405C  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 17874  01405E  515B               	movf	(___flmul@a+1)& (0+255),w,b
 17875  014060  0357               	mulwf	(___flmul@b+1)& (0+255),b
 17876  014062  CFF3 F16D          	movff	prodl,___flmul@temp
 17877  014066  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17878                           
 17879                           ; BSR set to: 1
 17880  01406A  516D               	movf	___flmul@temp& (0+255),w,b
 17881  01406C  2765               	addwf	___flmul@grs& (0+255),f,b
 17882  01406E  0E00               	movlw	0
 17883  014070  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17884  014072  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17885  014074  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17886                           
 17887                           ; BSR set to: 1
 17888  014076  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17889  014078  2769               	addwf	___flmul@prod& (0+255),f,b
 17890  01407A  0E00               	movlw	0
 17891  01407C  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17892  01407E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17893  014080  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17894  014082  515A               	movf	___flmul@a& (0+255),w,b
 17895  014084  0358               	mulwf	(___flmul@b+2)& (0+255),b
 17896  014086  CFF3 F16D          	movff	prodl,___flmul@temp
 17897  01408A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17898                           
 17899                           ; BSR set to: 1
 17900  01408E  516D               	movf	___flmul@temp& (0+255),w,b
 17901  014090  2765               	addwf	___flmul@grs& (0+255),f,b
 17902  014092  0E00               	movlw	0
 17903  014094  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17904  014096  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17905  014098  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17906                           
 17907                           ; BSR set to: 1
 17908  01409A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17909  01409C  2769               	addwf	___flmul@prod& (0+255),f,b
 17910  01409E  0E00               	movlw	0
 17911  0140A0  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17912  0140A2  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17913  0140A4  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17914                           
 17915                           ; BSR set to: 1
 17916  0140A6  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 17917  0140AA  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 17918  0140AE  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 17919  0140B2  6B65               	clrf	___flmul@grs& (0+255),b
 17920                           
 17921                           ; BSR set to: 1
 17922  0140B4  515A               	movf	___flmul@a& (0+255),w,b
 17923  0140B6  0357               	mulwf	(___flmul@b+1)& (0+255),b
 17924  0140B8  CFF3 F16D          	movff	prodl,___flmul@temp
 17925  0140BC  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17926                           
 17927                           ; BSR set to: 1
 17928  0140C0  516D               	movf	___flmul@temp& (0+255),w,b
 17929  0140C2  2765               	addwf	___flmul@grs& (0+255),f,b
 17930  0140C4  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17931  0140C6  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17932  0140C8  0E00               	movlw	0
 17933  0140CA  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17934  0140CC  0E00               	movlw	0
 17935  0140CE  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17936                           
 17937                           ; BSR set to: 1
 17938  0140D0  515B               	movf	(___flmul@a+1)& (0+255),w,b
 17939  0140D2  0356               	mulwf	___flmul@b& (0+255),b
 17940  0140D4  CFF3 F16D          	movff	prodl,___flmul@temp
 17941  0140D8  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17942                           
 17943                           ; BSR set to: 1
 17944  0140DC  516D               	movf	___flmul@temp& (0+255),w,b
 17945  0140DE  2765               	addwf	___flmul@grs& (0+255),f,b
 17946  0140E0  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17947  0140E2  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17948  0140E4  0E00               	movlw	0
 17949  0140E6  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17950  0140E8  0E00               	movlw	0
 17951  0140EA  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17952                           
 17953                           ; BSR set to: 1
 17954  0140EC  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 17955  0140F0  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 17956  0140F4  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 17957  0140F8  6B65               	clrf	___flmul@grs& (0+255),b
 17958  0140FA  515A               	movf	___flmul@a& (0+255),w,b
 17959  0140FC  0356               	mulwf	___flmul@b& (0+255),b
 17960  0140FE  CFF3 F16D          	movff	prodl,___flmul@temp
 17961  014102  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17962                           
 17963                           ; BSR set to: 1
 17964  014106  516D               	movf	___flmul@temp& (0+255),w,b
 17965  014108  2765               	addwf	___flmul@grs& (0+255),f,b
 17966  01410A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17967  01410C  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17968  01410E  0E00               	movlw	0
 17969  014110  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17970  014112  0E00               	movlw	0
 17971  014114  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17972                           
 17973                           ; BSR set to: 1
 17974  014116  515C               	movf	(___flmul@a+2)& (0+255),w,b
 17975  014118  0357               	mulwf	(___flmul@b+1)& (0+255),b
 17976  01411A  CFF3 F16D          	movff	prodl,___flmul@temp
 17977  01411E  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17978  014122  516D               	movf	___flmul@temp& (0+255),w,b
 17979  014124  2769               	addwf	___flmul@prod& (0+255),f,b
 17980  014126  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17981  014128  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17982  01412A  0E00               	movlw	0
 17983  01412C  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17984  01412E  0E00               	movlw	0
 17985  014130  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17986                           
 17987                           ; BSR set to: 1
 17988  014132  515B               	movf	(___flmul@a+1)& (0+255),w,b
 17989  014134  0358               	mulwf	(___flmul@b+2)& (0+255),b
 17990  014136  CFF3 F16D          	movff	prodl,___flmul@temp
 17991  01413A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17992                           
 17993                           ; BSR set to: 1
 17994  01413E  516D               	movf	___flmul@temp& (0+255),w,b
 17995  014140  2769               	addwf	___flmul@prod& (0+255),f,b
 17996  014142  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17997  014144  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17998  014146  0E00               	movlw	0
 17999  014148  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18000  01414A  0E00               	movlw	0
 18001  01414C  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18002  01414E  515C               	movf	(___flmul@a+2)& (0+255),w,b
 18003  014150  0358               	mulwf	(___flmul@b+2)& (0+255),b
 18004  014152  CFF3 F16D          	movff	prodl,___flmul@temp
 18005  014156  CFF4 F16E          	movff	prodh,___flmul@temp+1
 18006                           
 18007                           ; BSR set to: 1
 18008  01415A  516D               	movf	___flmul@temp& (0+255),w,b
 18009  01415C  6F5E               	movwf	??___flmul& (0+255),b
 18010  01415E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 18011  014160  6F5F               	movwf	(??___flmul+1)& (0+255),b
 18012  014162  6B60               	clrf	(??___flmul+2)& (0+255),b
 18013  014164  6B61               	clrf	(??___flmul+3)& (0+255),b
 18014  014166  C160  F161         	movff	??___flmul+2,??___flmul+3
 18015  01416A  C15F  F160         	movff	??___flmul+1,??___flmul+2
 18016  01416E  C15E  F15F         	movff	??___flmul,??___flmul+1
 18017  014172  6B5E               	clrf	??___flmul& (0+255),b
 18018  014174  515E               	movf	??___flmul& (0+255),w,b
 18019  014176  2769               	addwf	___flmul@prod& (0+255),f,b
 18020  014178  515F               	movf	(??___flmul+1)& (0+255),w,b
 18021  01417A  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18022  01417C  5160               	movf	(??___flmul+2)& (0+255),w,b
 18023  01417E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18024  014180  5161               	movf	(??___flmul+3)& (0+255),w,b
 18025  014182  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18026                           
 18027                           ; BSR set to: 1
 18028  014184  C165  F15E         	movff	___flmul@grs,??___flmul
 18029  014188  C166  F15F         	movff	___flmul@grs+1,??___flmul+1
 18030  01418C  C167  F160         	movff	___flmul@grs+2,??___flmul+2
 18031  014190  C168  F161         	movff	___flmul@grs+3,??___flmul+3
 18032  014194  0E19               	movlw	25
 18033  014196  D005               	goto	u23060
 18034  014198                     u23065:
 18035  014198  90D8               	bcf	status,0,c
 18036  01419A  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 18037  01419C  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 18038  01419E  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 18039  0141A0  335E               	rrcf	??___flmul& (0+255),f,b
 18040  0141A2                     u23060:
 18041  0141A2  2EE8               	decfsz	wreg,f,c
 18042  0141A4  D7F9               	goto	u23065
 18043  0141A6  515E               	movf	??___flmul& (0+255),w,b
 18044  0141A8  2769               	addwf	___flmul@prod& (0+255),f,b
 18045  0141AA  515F               	movf	(??___flmul+1)& (0+255),w,b
 18046  0141AC  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18047  0141AE  5160               	movf	(??___flmul+2)& (0+255),w,b
 18048  0141B0  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18049  0141B2  5161               	movf	(??___flmul+3)& (0+255),w,b
 18050  0141B4  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18051                           
 18052                           ; BSR set to: 1
 18053  0141B6  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 18054  0141BA  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 18055  0141BE  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 18056  0141C2  6B65               	clrf	___flmul@grs& (0+255),b
 18057                           
 18058                           ; BSR set to: 1
 18059  0141C4  5163               	movf	___flmul@aexp& (0+255),w,b
 18060  0141C6  C164  F15E         	movff	___flmul@bexp,??___flmul
 18061  0141CA  6B5F               	clrf	(??___flmul+1)& (0+255),b
 18062  0141CC  275E               	addwf	??___flmul& (0+255),f,b
 18063  0141CE  0E00               	movlw	0
 18064  0141D0  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 18065  0141D2  0E82               	movlw	130
 18066  0141D4  255E               	addwf	??___flmul& (0+255),w,b
 18067  0141D6  6F6D               	movwf	___flmul@temp& (0+255),b
 18068  0141D8  0EFF               	movlw	255
 18069  0141DA  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 18070  0141DC  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 18071  0141DE  D00F               	goto	l2155
 18072  0141E0                     
 18073                           ; BSR set to: 1
 18074                           
 18075                           ; BSR set to: 1
 18076  0141E0  90D8               	bcf	status,0,c
 18077  0141E2  3769               	rlcf	___flmul@prod& (0+255),f,b
 18078  0141E4  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 18079  0141E6  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 18080  0141E8  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 18081                           
 18082                           ; BSR set to: 1
 18083  0141EA  BF68               	btfsc	(___flmul@grs+3)& (0+255),7,b
 18084                           
 18085                           ; BSR set to: 1
 18086  0141EC  8169               	bsf	___flmul@prod& (0+255),0,b
 18087                           
 18088                           ; BSR set to: 1
 18089  0141EE  90D8               	bcf	status,0,c
 18090  0141F0  3765               	rlcf	___flmul@grs& (0+255),f,b
 18091  0141F2  3766               	rlcf	(___flmul@grs+1)& (0+255),f,b
 18092  0141F4  3767               	rlcf	(___flmul@grs+2)& (0+255),f,b
 18093  0141F6  3768               	rlcf	(___flmul@grs+3)& (0+255),f,b
 18094  0141F8  076D               	decf	___flmul@temp& (0+255),f,b
 18095  0141FA  A0D8               	btfss	status,0,c
 18096  0141FC  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 18097  0141FE                     l2155:
 18098                           
 18099                           ; BSR set to: 1
 18100                           
 18101                           ; BSR set to: 1
 18102  0141FE  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 18103  014200  D7EF               	goto	l2156
 18104                           
 18105                           ; BSR set to: 1
 18106                           
 18107                           ; BSR set to: 1
 18108  014202  0E00               	movlw	0
 18109  014204  6F63               	movwf	___flmul@aexp& (0+255),b
 18110                           
 18111                           ; BSR set to: 1
 18112  014206  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
 18113  014208  D016               	goto	l2162
 18114                           
 18115                           ; BSR set to: 1
 18116  01420A  0EFF               	movlw	255
 18117  01420C  1565               	andwf	___flmul@grs& (0+255),w,b
 18118  01420E  6F5E               	movwf	??___flmul& (0+255),b
 18119  014210  0EFF               	movlw	255
 18120  014212  1566               	andwf	(___flmul@grs+1)& (0+255),w,b
 18121  014214  6F5F               	movwf	(??___flmul+1)& (0+255),b
 18122  014216  0EFF               	movlw	255
 18123  014218  1567               	andwf	(___flmul@grs+2)& (0+255),w,b
 18124  01421A  6F60               	movwf	(??___flmul+2)& (0+255),b
 18125  01421C  0E7F               	movlw	127
 18126  01421E  1568               	andwf	(___flmul@grs+3)& (0+255),w,b
 18127  014220  6F61               	movwf	(??___flmul+3)& (0+255),b
 18128  014222  515E               	movf	??___flmul& (0+255),w,b
 18129  014224  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 18130  014226  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 18131  014228  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 18132  01422A  A4D8               	btfss	status,2,c
 18133  01422C  D002               	goto	u23110
 18134                           
 18135                           ; BSR set to: 1
 18136                           
 18137                           ; BSR set to: 1
 18138  01422E  A169               	btfss	___flmul@prod& (0+255),0,b
 18139  014230  D002               	goto	l2162
 18140  014232                     u23110:
 18141                           
 18142                           ; BSR set to: 1
 18143  014232  0E01               	movlw	1
 18144  014234  6F63               	movwf	___flmul@aexp& (0+255),b
 18145  014236                     l2162:
 18146                           
 18147                           ; BSR set to: 1
 18148                           
 18149                           ; BSR set to: 1
 18150                           
 18151                           ; BSR set to: 1
 18152  014236  5163               	movf	___flmul@aexp& (0+255),w,b
 18153  014238  B4D8               	btfsc	status,2,c
 18154  01423A  D01F               	goto	l2164
 18155                           
 18156                           ; BSR set to: 1
 18157  01423C  0E01               	movlw	1
 18158  01423E  2769               	addwf	___flmul@prod& (0+255),f,b
 18159  014240  0E00               	movlw	0
 18160  014242  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18161  014244  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18162  014246  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18163                           
 18164                           ; BSR set to: 1
 18165  014248  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 18166  01424A  D017               	goto	l2164
 18167                           
 18168                           ; BSR set to: 1
 18169  01424C  C169  F15E         	movff	___flmul@prod,??___flmul
 18170  014250  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 18171  014254  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 18172  014258  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 18173  01425C  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 18174  01425E  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 18175  014260  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 18176  014262  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 18177  014264  335E               	rrcf	??___flmul& (0+255),f,b
 18178  014266  C15E  F169         	movff	??___flmul,___flmul@prod
 18179  01426A  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 18180  01426E  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 18181  014272  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 18182                           
 18183                           ; BSR set to: 1
 18184  014276  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 18185  014278  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 18186  01427A                     l2164:
 18187                           
 18188                           ; BSR set to: 1
 18189                           
 18190                           ; BSR set to: 1
 18191                           
 18192                           ; BSR set to: 1
 18193  01427A  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 18194  01427C  D00D               	goto	l2165
 18195  01427E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 18196  014280  E103               	bnz	u23140
 18197  014282  296D               	incf	___flmul@temp& (0+255),w,b
 18198  014284  A0D8               	btfss	status,0,c
 18199  014286  D008               	goto	l2165
 18200  014288                     u23140:
 18201                           
 18202                           ; BSR set to: 1
 18203  014288  0E00               	movlw	0
 18204  01428A  6F69               	movwf	___flmul@prod& (0+255),b
 18205  01428C  0E00               	movlw	0
 18206  01428E  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 18207  014290  0E80               	movlw	128
 18208  014292  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 18209  014294  0E7F               	movlw	127
 18210  014296  D020               	goto	L4
 18211  014298                     l2165:
 18212                           
 18213                           ; BSR set to: 1
 18214                           
 18215                           ; BSR set to: 1
 18216  014298  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 18217  01429A  D005               	goto	u23150
 18218  01429C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 18219  01429E  E10E               	bnz	l2167
 18220  0142A0  056D               	decf	___flmul@temp& (0+255),w,b
 18221  0142A2  B0D8               	btfsc	status,0,c
 18222  0142A4  D00B               	goto	l2167
 18223  0142A6                     u23150:
 18224                           
 18225                           ; BSR set to: 1
 18226  0142A6  0E00               	movlw	0
 18227  0142A8  6F69               	movwf	___flmul@prod& (0+255),b
 18228  0142AA  0E00               	movlw	0
 18229  0142AC  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 18230  0142AE  0E00               	movlw	0
 18231  0142B0  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 18232  0142B2  0E00               	movlw	0
 18233  0142B4  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 18234  0142B6  0E00               	movlw	0
 18235  0142B8  6F62               	movwf	___flmul@sign& (0+255),b
 18236  0142BA  D00F               	goto	l2168
 18237  0142BC                     l2167:
 18238                           
 18239                           ; BSR set to: 1
 18240  0142BC  C16D  F164         	movff	___flmul@temp,___flmul@bexp
 18241                           
 18242                           ; BSR set to: 1
 18243  0142C0  0EFF               	movlw	255
 18244  0142C2  1769               	andwf	___flmul@prod& (0+255),f,b
 18245  0142C4  0EFF               	movlw	255
 18246  0142C6  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 18247  0142C8  0E7F               	movlw	127
 18248  0142CA  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 18249  0142CC  0E00               	movlw	0
 18250  0142CE  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 18251                           
 18252                           ; BSR set to: 1
 18253  0142D0  B164               	btfsc	___flmul@bexp& (0+255),0,b
 18254                           
 18255                           ; BSR set to: 1
 18256  0142D2  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 18257                           
 18258                           ; BSR set to: 1
 18259                           
 18260                           ; BSR set to: 1
 18261  0142D4  90D8               	bcf	status,0,c
 18262  0142D6  3164               	rrcf	___flmul@bexp& (0+255),w,b
 18263  0142D8                     L4:
 18264  0142D8  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 18265  0142DA                     l2168:
 18266                           
 18267                           ; BSR set to: 1
 18268                           
 18269                           ; BSR set to: 1
 18270                           
 18271                           ; BSR set to: 1
 18272  0142DA  5162               	movf	___flmul@sign& (0+255),w,b
 18273  0142DC  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 18274                           
 18275                           ; BSR set to: 1
 18276  0142DE  C169  F156         	movff	___flmul@prod,?___flmul
 18277  0142E2  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 18278  0142E6  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 18279  0142EA  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 18280  0142EE  0012               	return	
 18281  0142F0                     __end_of___flmul:
 18282                           	opt stack 0
 18283                           tblptru	equ	0xFF8
 18284                           tblptrh	equ	0xFF7
 18285                           tblptrl	equ	0xFF6
 18286                           tablat	equ	0xFF5
 18287                           prodh	equ	0xFF4
 18288                           prodl	equ	0xFF3
 18289                           intcon	equ	0xFF2
 18290                           indf0	equ	0xFEF
 18291                           postinc0	equ	0xFEE
 18292                           fsr0h	equ	0xFEA
 18293                           fsr0l	equ	0xFE9
 18294                           wreg	equ	0xFE8
 18295                           indf1	equ	0xFE7
 18296                           postdec1	equ	0xFE5
 18297                           plusw1	equ	0xFE3
 18298                           fsr1h	equ	0xFE2
 18299                           fsr1l	equ	0xFE1
 18300                           indf2	equ	0xFDF
 18301                           postinc2	equ	0xFDE
 18302                           postdec2	equ	0xFDD
 18303                           plusw2	equ	0xFDB
 18304                           fsr2h	equ	0xFDA
 18305                           fsr2l	equ	0xFD9
 18306                           status	equ	0xFD8
 18307                           
 18308 ;; *************** function ___awmod *****************
 18309 ;; Defined at:
 18310 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 18311 ;; Parameters:    Size  Location     Type
 18312 ;;  dividend        2   23[BANK1 ] int 
 18313 ;;  divisor         2   25[BANK1 ] int 
 18314 ;; Auto vars:     Size  Location     Type
 18315 ;;  sign            1   28[BANK1 ] unsigned char 
 18316 ;;  counter         1   27[BANK1 ] unsigned char 
 18317 ;; Return value:  Size  Location     Type
 18318 ;;                  2   23[BANK1 ] int 
 18319 ;; Registers used:
 18320 ;;		wreg, status,2, status,0
 18321 ;; Tracked objects:
 18322 ;;		On entry : 0/0
 18323 ;;		On exit  : 0/0
 18324 ;;		Unchanged: 0/0
 18325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18326 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18327 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18329 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18330 ;;Total ram usage:        6 bytes
 18331 ;; Hardware stack levels used:    1
 18332 ;; Hardware stack levels required when called:   13
 18333 ;; This function calls:
 18334 ;;		Nothing
 18335 ;; This function is called by:
 18336 ;;		_fround
 18337 ;;		_scale
 18338 ;; This function uses a non-reentrant model
 18339 ;;
 18340                           
 18341                           	psect	text35
 18342  017BA2                     __ptext35:
 18343                           	opt stack 0
 18344  017BA2                     ___awmod:
 18345                           	opt stack 13
 18346                           
 18347                           ; BSR set to: 1
 18348                           ;incstack = 0
 18349  017BA2  0E00               	movlw	0
 18350  017BA4  0101               	movlb	1	; () banked
 18351  017BA6  6F1C               	movwf	___awmod@sign& (0+255),b
 18352                           
 18353                           ; BSR set to: 1
 18354  017BA8  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 18355  017BAA  D006               	goto	l1735
 18356                           
 18357                           ; BSR set to: 1
 18358  017BAC  6D17               	negf	___awmod@dividend& (0+255),b
 18359  017BAE  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 18360  017BB0  B0D8               	btfsc	status,0,c
 18361  017BB2  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 18362                           
 18363                           ; BSR set to: 1
 18364  017BB4  0E01               	movlw	1
 18365  017BB6  6F1C               	movwf	___awmod@sign& (0+255),b
 18366  017BB8                     l1735:
 18367                           
 18368                           ; BSR set to: 1
 18369                           
 18370                           ; BSR set to: 1
 18371  017BB8  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 18372  017BBA  D004               	goto	l1736
 18373                           
 18374                           ; BSR set to: 1
 18375  017BBC  6D19               	negf	___awmod@divisor& (0+255),b
 18376  017BBE  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 18377  017BC0  B0D8               	btfsc	status,0,c
 18378  017BC2  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 18379  017BC4                     l1736:
 18380                           
 18381                           ; BSR set to: 1
 18382                           
 18383                           ; BSR set to: 1
 18384  017BC4  5119               	movf	___awmod@divisor& (0+255),w,b
 18385  017BC6  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 18386  017BC8  B4D8               	btfsc	status,2,c
 18387  017BCA  D018               	goto	l1743
 18388                           
 18389                           ; BSR set to: 1
 18390  017BCC  0E01               	movlw	1
 18391  017BCE  6F1B               	movwf	___awmod@counter& (0+255),b
 18392  017BD0  D004               	goto	l1738
 18393  017BD2                     
 18394                           ; BSR set to: 1
 18395                           
 18396                           ; BSR set to: 1
 18397  017BD2  90D8               	bcf	status,0,c
 18398  017BD4  3719               	rlcf	___awmod@divisor& (0+255),f,b
 18399  017BD6  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 18400  017BD8  2B1B               	incf	___awmod@counter& (0+255),f,b
 18401  017BDA                     l1738:
 18402                           
 18403                           ; BSR set to: 1
 18404                           
 18405                           ; BSR set to: 1
 18406  017BDA  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 18407  017BDC  D7FA               	goto	l1739
 18408  017BDE                     u23260:
 18409                           
 18410                           ; BSR set to: 1
 18411                           
 18412                           ; BSR set to: 1
 18413                           
 18414                           ; BSR set to: 1
 18415  017BDE  5119               	movf	___awmod@divisor& (0+255),w,b
 18416  017BE0  5D17               	subwf	___awmod@dividend& (0+255),w,b
 18417  017BE2  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 18418  017BE4  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 18419  017BE6  A0D8               	btfss	status,0,c
 18420  017BE8  D004               	goto	l1742
 18421                           
 18422                           ; BSR set to: 1
 18423  017BEA  5119               	movf	___awmod@divisor& (0+255),w,b
 18424  017BEC  5F17               	subwf	___awmod@dividend& (0+255),f,b
 18425  017BEE  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 18426  017BF0  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 18427  017BF2                     l1742:
 18428                           
 18429                           ; BSR set to: 1
 18430                           
 18431                           ; BSR set to: 1
 18432  017BF2  90D8               	bcf	status,0,c
 18433  017BF4  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 18434  017BF6  3319               	rrcf	___awmod@divisor& (0+255),f,b
 18435                           
 18436                           ; BSR set to: 1
 18437  017BF8  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 18438  017BFA  D7F1               	goto	u23260
 18439  017BFC                     l1743:
 18440                           
 18441                           ; BSR set to: 1
 18442                           
 18443                           ; BSR set to: 1
 18444                           
 18445                           ; BSR set to: 1
 18446  017BFC  511C               	movf	___awmod@sign& (0+255),w,b
 18447  017BFE  B4D8               	btfsc	status,2,c
 18448  017C00  D004               	goto	l1744
 18449                           
 18450                           ; BSR set to: 1
 18451  017C02  6D17               	negf	___awmod@dividend& (0+255),b
 18452  017C04  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 18453  017C06  B0D8               	btfsc	status,0,c
 18454  017C08  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 18455  017C0A                     l1744:
 18456                           
 18457                           ; BSR set to: 1
 18458                           
 18459                           ; BSR set to: 1
 18460  017C0A  C117  F117         	movff	___awmod@dividend,?___awmod
 18461  017C0E  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 18462  017C12  0012               	return	
 18463  017C14                     __end_of___awmod:
 18464                           	opt stack 0
 18465                           tblptru	equ	0xFF8
 18466                           tblptrh	equ	0xFF7
 18467                           tblptrl	equ	0xFF6
 18468                           tablat	equ	0xFF5
 18469                           prodh	equ	0xFF4
 18470                           prodl	equ	0xFF3
 18471                           intcon	equ	0xFF2
 18472                           indf0	equ	0xFEF
 18473                           postinc0	equ	0xFEE
 18474                           fsr0h	equ	0xFEA
 18475                           fsr0l	equ	0xFE9
 18476                           wreg	equ	0xFE8
 18477                           indf1	equ	0xFE7
 18478                           postdec1	equ	0xFE5
 18479                           plusw1	equ	0xFE3
 18480                           fsr1h	equ	0xFE2
 18481                           fsr1l	equ	0xFE1
 18482                           indf2	equ	0xFDF
 18483                           postinc2	equ	0xFDE
 18484                           postdec2	equ	0xFDD
 18485                           plusw2	equ	0xFDB
 18486                           fsr2h	equ	0xFDA
 18487                           fsr2l	equ	0xFD9
 18488                           status	equ	0xFD8
 18489                           
 18490 ;; *************** function ___awdiv *****************
 18491 ;; Defined at:
 18492 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 18493 ;; Parameters:    Size  Location     Type
 18494 ;;  dividend        2   29[BANK1 ] int 
 18495 ;;  divisor         2   31[BANK1 ] int 
 18496 ;; Auto vars:     Size  Location     Type
 18497 ;;  quotient        2   35[BANK1 ] int 
 18498 ;;  sign            1   34[BANK1 ] unsigned char 
 18499 ;;  counter         1   33[BANK1 ] unsigned char 
 18500 ;; Return value:  Size  Location     Type
 18501 ;;                  2   29[BANK1 ] int 
 18502 ;; Registers used:
 18503 ;;		wreg, status,2, status,0
 18504 ;; Tracked objects:
 18505 ;;		On entry : 0/0
 18506 ;;		On exit  : 0/0
 18507 ;;		Unchanged: 0/0
 18508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18509 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18510 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18512 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18513 ;;Total ram usage:        8 bytes
 18514 ;; Hardware stack levels used:    1
 18515 ;; Hardware stack levels required when called:   13
 18516 ;; This function calls:
 18517 ;;		Nothing
 18518 ;; This function is called by:
 18519 ;;		_fround
 18520 ;;		_scale
 18521 ;;		_printf
 18522 ;; This function uses a non-reentrant model
 18523 ;;
 18524                           
 18525                           	psect	text36
 18526  01789C                     __ptext36:
 18527                           	opt stack 0
 18528  01789C                     ___awdiv:
 18529                           	opt stack 13
 18530                           
 18531                           ; BSR set to: 1
 18532                           ;incstack = 0
 18533  01789C  0E00               	movlw	0
 18534  01789E  0101               	movlb	1	; () banked
 18535  0178A0  6F22               	movwf	___awdiv@sign& (0+255),b
 18536                           
 18537                           ; BSR set to: 1
 18538  0178A2  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18539  0178A4  D006               	goto	l1722
 18540                           
 18541                           ; BSR set to: 1
 18542  0178A6  6D1F               	negf	___awdiv@divisor& (0+255),b
 18543  0178A8  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 18544  0178AA  B0D8               	btfsc	status,0,c
 18545  0178AC  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 18546                           
 18547                           ; BSR set to: 1
 18548  0178AE  0E01               	movlw	1
 18549  0178B0  6F22               	movwf	___awdiv@sign& (0+255),b
 18550  0178B2                     l1722:
 18551                           
 18552                           ; BSR set to: 1
 18553                           
 18554                           ; BSR set to: 1
 18555  0178B2  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 18556  0178B4  D006               	goto	l1723
 18557                           
 18558                           ; BSR set to: 1
 18559  0178B6  6D1D               	negf	___awdiv@dividend& (0+255),b
 18560  0178B8  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 18561  0178BA  B0D8               	btfsc	status,0,c
 18562  0178BC  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 18563                           
 18564                           ; BSR set to: 1
 18565  0178BE  0E01               	movlw	1
 18566  0178C0  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 18567  0178C2                     l1723:
 18568                           
 18569                           ; BSR set to: 1
 18570                           
 18571                           ; BSR set to: 1
 18572  0178C2  0E00               	movlw	0
 18573  0178C4  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 18574  0178C6  0E00               	movlw	0
 18575  0178C8  6F23               	movwf	___awdiv@quotient& (0+255),b
 18576                           
 18577                           ; BSR set to: 1
 18578  0178CA  511F               	movf	___awdiv@divisor& (0+255),w,b
 18579  0178CC  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 18580  0178CE  B4D8               	btfsc	status,2,c
 18581  0178D0  D01C               	goto	l1730
 18582                           
 18583                           ; BSR set to: 1
 18584  0178D2  0E01               	movlw	1
 18585  0178D4  6F21               	movwf	___awdiv@counter& (0+255),b
 18586  0178D6  D004               	goto	l1725
 18587  0178D8                     
 18588                           ; BSR set to: 1
 18589                           
 18590                           ; BSR set to: 1
 18591  0178D8  90D8               	bcf	status,0,c
 18592  0178DA  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 18593  0178DC  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 18594  0178DE  2B21               	incf	___awdiv@counter& (0+255),f,b
 18595  0178E0                     l1725:
 18596                           
 18597                           ; BSR set to: 1
 18598                           
 18599                           ; BSR set to: 1
 18600  0178E0  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18601  0178E2  D7FA               	goto	l1726
 18602  0178E4                     u23200:
 18603                           
 18604                           ; BSR set to: 1
 18605                           
 18606                           ; BSR set to: 1
 18607                           
 18608                           ; BSR set to: 1
 18609  0178E4  90D8               	bcf	status,0,c
 18610  0178E6  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 18611  0178E8  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 18612                           
 18613                           ; BSR set to: 1
 18614  0178EA  511F               	movf	___awdiv@divisor& (0+255),w,b
 18615  0178EC  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 18616  0178EE  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18617  0178F0  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 18618  0178F2  A0D8               	btfss	status,0,c
 18619  0178F4  D005               	goto	l1729
 18620                           
 18621                           ; BSR set to: 1
 18622  0178F6  511F               	movf	___awdiv@divisor& (0+255),w,b
 18623  0178F8  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 18624  0178FA  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18625  0178FC  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 18626                           
 18627                           ; BSR set to: 1
 18628  0178FE  8123               	bsf	___awdiv@quotient& (0+255),0,b
 18629  017900                     l1729:
 18630                           
 18631                           ; BSR set to: 1
 18632                           
 18633                           ; BSR set to: 1
 18634  017900  90D8               	bcf	status,0,c
 18635  017902  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 18636  017904  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 18637                           
 18638                           ; BSR set to: 1
 18639  017906  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 18640  017908  D7ED               	goto	u23200
 18641  01790A                     l1730:
 18642                           
 18643                           ; BSR set to: 1
 18644                           
 18645                           ; BSR set to: 1
 18646                           
 18647                           ; BSR set to: 1
 18648  01790A  5122               	movf	___awdiv@sign& (0+255),w,b
 18649  01790C  B4D8               	btfsc	status,2,c
 18650  01790E  D004               	goto	l1731
 18651                           
 18652                           ; BSR set to: 1
 18653  017910  6D23               	negf	___awdiv@quotient& (0+255),b
 18654  017912  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 18655  017914  B0D8               	btfsc	status,0,c
 18656  017916  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 18657  017918                     l1731:
 18658                           
 18659                           ; BSR set to: 1
 18660                           
 18661                           ; BSR set to: 1
 18662  017918  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 18663  01791C  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 18664  017920  0012               	return	
 18665  017922                     __end_of___awdiv:
 18666                           	opt stack 0
 18667                           tblptru	equ	0xFF8
 18668                           tblptrh	equ	0xFF7
 18669                           tblptrl	equ	0xFF6
 18670                           tablat	equ	0xFF5
 18671                           prodh	equ	0xFF4
 18672                           prodl	equ	0xFF3
 18673                           intcon	equ	0xFF2
 18674                           indf0	equ	0xFEF
 18675                           postinc0	equ	0xFEE
 18676                           fsr0h	equ	0xFEA
 18677                           fsr0l	equ	0xFE9
 18678                           wreg	equ	0xFE8
 18679                           indf1	equ	0xFE7
 18680                           postdec1	equ	0xFE5
 18681                           plusw1	equ	0xFE3
 18682                           fsr1h	equ	0xFE2
 18683                           fsr1l	equ	0xFE1
 18684                           indf2	equ	0xFDF
 18685                           postinc2	equ	0xFDE
 18686                           postdec2	equ	0xFDD
 18687                           plusw2	equ	0xFDB
 18688                           fsr2h	equ	0xFDA
 18689                           fsr2l	equ	0xFD9
 18690                           status	equ	0xFD8
 18691                           
 18692 ;; *************** function __tdiv_to_l_ *****************
 18693 ;; Defined at:
 18694 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 18695 ;; Parameters:    Size  Location     Type
 18696 ;;  f1              3   23[BANK1 ] float 
 18697 ;;  f2              3   26[BANK1 ] float 
 18698 ;; Auto vars:     Size  Location     Type
 18699 ;;  quot            4   32[BANK1 ] unsigned long 
 18700 ;;  exp1            1   37[BANK1 ] unsigned char 
 18701 ;;  cntr            1   36[BANK1 ] unsigned char 
 18702 ;; Return value:  Size  Location     Type
 18703 ;;                  4   23[BANK1 ] unsigned long 
 18704 ;; Registers used:
 18705 ;;		wreg, status,2, status,0
 18706 ;; Tracked objects:
 18707 ;;		On entry : 0/0
 18708 ;;		On exit  : 0/0
 18709 ;;		Unchanged: 0/0
 18710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18711 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18712 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18713 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18714 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18715 ;;Total ram usage:       15 bytes
 18716 ;; Hardware stack levels used:    1
 18717 ;; Hardware stack levels required when called:   13
 18718 ;; This function calls:
 18719 ;;		Nothing
 18720 ;; This function is called by:
 18721 ;;		_printf
 18722 ;; This function uses a non-reentrant model
 18723 ;;
 18724                           
 18725                           	psect	text37
 18726  016784                     __ptext37:
 18727                           	opt stack 0
 18728  016784                     __tdiv_to_l_:
 18729                           	opt stack 14
 18730                           
 18731                           ; BSR set to: 1
 18732                           ;incstack = 0
 18733  016784  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 18734  016788  0101               	movlb	1	; () banked
 18735  01678A  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 18736  01678C  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 18737  01678E  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 18738  016790  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 18739  016792  E301               	bnc	u23381
 18740  016794  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 18741  016796                     u23381:
 18742  016796  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 18743  016798  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 18744  01679A  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18745  01679C  A4D8               	btfss	status,2,c
 18746  01679E  D009               	goto	l1870
 18747                           
 18748                           ; BSR set to: 1
 18749  0167A0  0E00               	movlw	0
 18750  0167A2  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18751  0167A4  0E00               	movlw	0
 18752  0167A6  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18753  0167A8  0E00               	movlw	0
 18754  0167AA  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18755  0167AC  0E00               	movlw	0
 18756  0167AE  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18757                           
 18758                           ; BSR set to: 1
 18759  0167B0  0012               	return	
 18760  0167B2                     l1870:
 18761                           
 18762                           ; BSR set to: 1
 18763                           
 18764                           ; BSR set to: 1
 18765  0167B2  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 18766  0167B6  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 18767  0167B8  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 18768  0167BA  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 18769  0167BC  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 18770  0167BE  E301               	bnc	u23401
 18771  0167C0  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 18772  0167C2                     u23401:
 18773  0167C2  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 18774  0167C4  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 18775  0167C6  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 18776  0167C8  A4D8               	btfss	status,2,c
 18777  0167CA  D009               	goto	l1872
 18778                           
 18779                           ; BSR set to: 1
 18780  0167CC  0E00               	movlw	0
 18781  0167CE  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18782  0167D0  0E00               	movlw	0
 18783  0167D2  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18784  0167D4  0E00               	movlw	0
 18785  0167D6  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18786  0167D8  0E00               	movlw	0
 18787  0167DA  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18788                           
 18789                           ; BSR set to: 1
 18790  0167DC  0012               	return	
 18791  0167DE                     l1872:
 18792                           
 18793                           ; BSR set to: 1
 18794                           
 18795                           ; BSR set to: 1
 18796  0167DE  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 18797                           
 18798                           ; BSR set to: 1
 18799  0167E0  0EFF               	movlw	255
 18800  0167E2  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 18801  0167E4  0EFF               	movlw	255
 18802  0167E6  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 18803  0167E8  0E00               	movlw	0
 18804  0167EA  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 18805  0167EC  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 18806                           
 18807                           ; BSR set to: 1
 18808  0167EE  0EFF               	movlw	255
 18809  0167F0  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 18810  0167F2  0EFF               	movlw	255
 18811  0167F4  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 18812  0167F6  0E00               	movlw	0
 18813  0167F8  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 18814                           
 18815                           ; BSR set to: 1
 18816  0167FA  0E00               	movlw	0
 18817  0167FC  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 18818  0167FE  0E00               	movlw	0
 18819  016800  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 18820  016802  0E00               	movlw	0
 18821  016804  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 18822  016806  0E00               	movlw	0
 18823  016808  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 18824                           
 18825                           ; BSR set to: 1
 18826  01680A  0E7F               	movlw	127
 18827  01680C  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 18828                           
 18829                           ; BSR set to: 1
 18830  01680E  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 18831  016810  0F98               	addlw	152
 18832  016812  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 18833                           
 18834                           ; BSR set to: 1
 18835  016814  0E18               	movlw	24
 18836  016816  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 18837  016818                     l1873:
 18838                           
 18839                           ; BSR set to: 1
 18840  016818  90D8               	bcf	status,0,c
 18841  01681A  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 18842  01681C  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18843  01681E  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18844  016820  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18845                           
 18846                           ; BSR set to: 1
 18847  016822  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 18848  016824  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 18849  016826  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 18850  016828  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 18851  01682A  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 18852  01682C  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 18853  01682E  A0D8               	btfss	status,0,c
 18854  016830  D007               	goto	l1874
 18855                           
 18856                           ; BSR set to: 1
 18857  016832  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 18858  016834  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 18859  016836  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 18860  016838  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 18861  01683A  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 18862  01683C  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 18863                           
 18864                           ; BSR set to: 1
 18865  01683E  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 18866  016840                     l1874:
 18867                           
 18868                           ; BSR set to: 1
 18869  016840  90D8               	bcf	status,0,c
 18870  016842  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 18871  016844  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 18872  016846  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 18873                           
 18874                           ; BSR set to: 1
 18875  016848  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 18876  01684A  D7E6               	goto	l1873
 18877                           
 18878                           ; BSR set to: 1
 18879                           
 18880                           ; BSR set to: 1
 18881  01684C  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 18882  01684E  D016               	goto	l1876
 18883                           
 18884                           ; BSR set to: 1
 18885  016850  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18886  016852  0A80               	xorlw	128
 18887  016854  0F97               	addlw	151
 18888  016856  B0D8               	btfsc	status,0,c
 18889  016858  D009               	goto	l1877
 18890                           
 18891                           ; BSR set to: 1
 18892  01685A  0E00               	movlw	0
 18893  01685C  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18894  01685E  0E00               	movlw	0
 18895  016860  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18896  016862  0E00               	movlw	0
 18897  016864  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18898  016866  0E00               	movlw	0
 18899  016868  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18900                           
 18901                           ; BSR set to: 1
 18902  01686A  0012               	return	
 18903  01686C                     l1877:
 18904                           
 18905                           ; BSR set to: 1
 18906                           
 18907                           ; BSR set to: 1
 18908                           
 18909                           ; BSR set to: 1
 18910  01686C  90D8               	bcf	status,0,c
 18911  01686E  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18912  016870  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18913  016872  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18914  016874  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 18915                           
 18916                           ; BSR set to: 1
 18917  016876  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 18918  016878  D7F9               	goto	l1877
 18919                           
 18920                           ; BSR set to: 1
 18921  01687A  D015               	goto	u23460
 18922  01687C                     l1876:
 18923                           
 18924                           ; BSR set to: 1
 18925                           
 18926                           ; BSR set to: 1
 18927  01687C  0E17               	movlw	23
 18928  01687E  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 18929  016880  D00F               	goto	l1882
 18930                           
 18931                           ; BSR set to: 1
 18932  016882  0E00               	movlw	0
 18933  016884  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18934  016886  0E00               	movlw	0
 18935  016888  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18936  01688A  0E00               	movlw	0
 18937  01688C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18938  01688E  0E00               	movlw	0
 18939  016890  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18940                           
 18941                           ; BSR set to: 1
 18942  016892  0012               	return	
 18943  016894                     
 18944                           ; BSR set to: 1
 18945                           
 18946                           ; BSR set to: 1
 18947  016894  90D8               	bcf	status,0,c
 18948  016896  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 18949  016898  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18950  01689A  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18951  01689C  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18952  01689E  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 18953  0168A0                     l1882:
 18954                           
 18955                           ; BSR set to: 1
 18956                           
 18957                           ; BSR set to: 1
 18958  0168A0  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18959  0168A2  A4D8               	btfss	status,2,c
 18960  0168A4  D7F7               	goto	l1883
 18961  0168A6                     u23460:
 18962                           
 18963                           ; BSR set to: 1
 18964                           
 18965                           ; BSR set to: 1
 18966  0168A6  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 18967  0168AA  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 18968  0168AE  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 18969  0168B2  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 18970                           
 18971                           ; BSR set to: 1
 18972  0168B6  0012               	return		;funcret
 18973  0168B8                     __end_of__tdiv_to_l_:
 18974                           	opt stack 0
 18975                           tblptru	equ	0xFF8
 18976                           tblptrh	equ	0xFF7
 18977                           tblptrl	equ	0xFF6
 18978                           tablat	equ	0xFF5
 18979                           prodh	equ	0xFF4
 18980                           prodl	equ	0xFF3
 18981                           intcon	equ	0xFF2
 18982                           indf0	equ	0xFEF
 18983                           postinc0	equ	0xFEE
 18984                           fsr0h	equ	0xFEA
 18985                           fsr0l	equ	0xFE9
 18986                           wreg	equ	0xFE8
 18987                           indf1	equ	0xFE7
 18988                           postdec1	equ	0xFE5
 18989                           plusw1	equ	0xFE3
 18990                           fsr1h	equ	0xFE2
 18991                           fsr1l	equ	0xFE1
 18992                           indf2	equ	0xFDF
 18993                           postinc2	equ	0xFDE
 18994                           postdec2	equ	0xFDD
 18995                           plusw2	equ	0xFDB
 18996                           fsr2h	equ	0xFDA
 18997                           fsr2l	equ	0xFD9
 18998                           status	equ	0xFD8
 18999                           
 19000 ;; *************** function __div_to_l_ *****************
 19001 ;; Defined at:
 19002 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 19003 ;; Parameters:    Size  Location     Type
 19004 ;;  f1              4   23[BANK1 ] unsigned long 
 19005 ;;  f2              4   27[BANK1 ] unsigned long 
 19006 ;; Auto vars:     Size  Location     Type
 19007 ;;  quot            4   31[BANK1 ] unsigned long 
 19008 ;;  exp1            1   36[BANK1 ] unsigned char 
 19009 ;;  cntr            1   35[BANK1 ] unsigned char 
 19010 ;; Return value:  Size  Location     Type
 19011 ;;                  4   23[BANK1 ] unsigned long 
 19012 ;; Registers used:
 19013 ;;		wreg, status,2, status,0
 19014 ;; Tracked objects:
 19015 ;;		On entry : 0/0
 19016 ;;		On exit  : 0/0
 19017 ;;		Unchanged: 0/0
 19018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19019 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19020 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19022 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19023 ;;Total ram usage:       14 bytes
 19024 ;; Hardware stack levels used:    1
 19025 ;; Hardware stack levels required when called:   13
 19026 ;; This function calls:
 19027 ;;		Nothing
 19028 ;; This function is called by:
 19029 ;;		_printf
 19030 ;; This function uses a non-reentrant model
 19031 ;;
 19032                           
 19033                           	psect	text38
 19034  0169EA                     __ptext38:
 19035                           	opt stack 0
 19036  0169EA                     __div_to_l_:
 19037                           	opt stack 14
 19038                           
 19039                           ; BSR set to: 1
 19040                           ;incstack = 0
 19041  0169EA  0101               	movlb	1	; () banked
 19042  0169EC  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 19043  0169EE  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 19044  0169F0  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 19045  0169F2  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 19046  0169F4  A4D8               	btfss	status,2,c
 19047  0169F6  D009               	goto	l1766
 19048                           
 19049                           ; BSR set to: 1
 19050  0169F8  0E00               	movlw	0
 19051  0169FA  6F17               	movwf	?__div_to_l_& (0+255),b
 19052  0169FC  0E00               	movlw	0
 19053  0169FE  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 19054  016A00  0E00               	movlw	0
 19055  016A02  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 19056  016A04  0E00               	movlw	0
 19057  016A06  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 19058                           
 19059                           ; BSR set to: 1
 19060  016A08  0012               	return	
 19061  016A0A                     l1766:
 19062                           
 19063                           ; BSR set to: 1
 19064                           
 19065                           ; BSR set to: 1
 19066  016A0A  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 19067  016A0C  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 19068  016A0E  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 19069  016A10  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 19070  016A12  A4D8               	btfss	status,2,c
 19071  016A14  D009               	goto	l1768
 19072                           
 19073                           ; BSR set to: 1
 19074  016A16  0E00               	movlw	0
 19075  016A18  6F17               	movwf	?__div_to_l_& (0+255),b
 19076  016A1A  0E00               	movlw	0
 19077  016A1C  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 19078  016A1E  0E00               	movlw	0
 19079  016A20  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 19080  016A22  0E00               	movlw	0
 19081  016A24  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 19082                           
 19083                           ; BSR set to: 1
 19084  016A26  0012               	return	
 19085  016A28                     l1768:
 19086                           
 19087                           ; BSR set to: 1
 19088                           
 19089                           ; BSR set to: 1
 19090  016A28  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 19091                           
 19092                           ; BSR set to: 1
 19093  016A2A  0EFF               	movlw	255
 19094  016A2C  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 19095  016A2E  0EFF               	movlw	255
 19096  016A30  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 19097  016A32  0EFF               	movlw	255
 19098  016A34  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 19099  016A36  0E00               	movlw	0
 19100  016A38  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 19101                           
 19102                           ; BSR set to: 1
 19103  016A3A  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 19104  016A3C  0EFF               	movlw	255
 19105  016A3E  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 19106  016A40  0EFF               	movlw	255
 19107  016A42  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 19108  016A44  0EFF               	movlw	255
 19109  016A46  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 19110  016A48  0E00               	movlw	0
 19111  016A4A  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 19112                           
 19113                           ; BSR set to: 1
 19114  016A4C  0E00               	movlw	0
 19115  016A4E  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 19116  016A50  0E00               	movlw	0
 19117  016A52  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 19118  016A54  0E00               	movlw	0
 19119  016A56  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 19120  016A58  0E00               	movlw	0
 19121  016A5A  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 19122                           
 19123                           ; BSR set to: 1
 19124  016A5C  0E7F               	movlw	127
 19125  016A5E  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 19126                           
 19127                           ; BSR set to: 1
 19128  016A60  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 19129  016A62  0FA0               	addlw	160
 19130  016A64  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 19131                           
 19132                           ; BSR set to: 1
 19133  016A66  0E20               	movlw	32
 19134  016A68  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 19135  016A6A                     
 19136                           ; BSR set to: 1
 19137                           
 19138                           ; BSR set to: 1
 19139  016A6A  90D8               	bcf	status,0,c
 19140  016A6C  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 19141  016A6E  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 19142  016A70  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 19143  016A72  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 19144                           
 19145                           ; BSR set to: 1
 19146  016A74  511B               	movf	__div_to_l_@f2& (0+255),w,b
 19147  016A76  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 19148  016A78  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 19149  016A7A  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 19150  016A7C  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 19151  016A7E  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 19152  016A80  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 19153  016A82  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 19154  016A84  A0D8               	btfss	status,0,c
 19155  016A86  D009               	goto	l1770
 19156                           
 19157                           ; BSR set to: 1
 19158  016A88  511B               	movf	__div_to_l_@f2& (0+255),w,b
 19159  016A8A  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 19160  016A8C  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 19161  016A8E  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 19162  016A90  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 19163  016A92  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 19164  016A94  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 19165  016A96  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 19166                           
 19167                           ; BSR set to: 1
 19168  016A98  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 19169  016A9A                     l1770:
 19170                           
 19171                           ; BSR set to: 1
 19172                           
 19173                           ; BSR set to: 1
 19174  016A9A  90D8               	bcf	status,0,c
 19175  016A9C  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 19176  016A9E  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 19177  016AA0  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 19178  016AA2  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 19179                           
 19180                           ; BSR set to: 1
 19181  016AA4  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 19182  016AA6  D7E1               	goto	l1769
 19183                           
 19184                           ; BSR set to: 1
 19185                           
 19186                           ; BSR set to: 1
 19187  016AA8  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 19188  016AAA  D016               	goto	l1772
 19189                           
 19190                           ; BSR set to: 1
 19191  016AAC  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 19192  016AAE  0A80               	xorlw	128
 19193  016AB0  0F9F               	addlw	159
 19194  016AB2  B0D8               	btfsc	status,0,c
 19195  016AB4  D009               	goto	l1773
 19196                           
 19197                           ; BSR set to: 1
 19198  016AB6  0E00               	movlw	0
 19199  016AB8  6F17               	movwf	?__div_to_l_& (0+255),b
 19200  016ABA  0E00               	movlw	0
 19201  016ABC  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 19202  016ABE  0E00               	movlw	0
 19203  016AC0  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 19204  016AC2  0E00               	movlw	0
 19205  016AC4  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 19206                           
 19207                           ; BSR set to: 1
 19208  016AC6  0012               	return	
 19209  016AC8                     l1773:
 19210                           
 19211                           ; BSR set to: 1
 19212                           
 19213                           ; BSR set to: 1
 19214                           
 19215                           ; BSR set to: 1
 19216  016AC8  90D8               	bcf	status,0,c
 19217  016ACA  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 19218  016ACC  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 19219  016ACE  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 19220  016AD0  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 19221                           
 19222                           ; BSR set to: 1
 19223  016AD2  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 19224  016AD4  D7F9               	goto	l1773
 19225                           
 19226                           ; BSR set to: 1
 19227  016AD6  D015               	goto	u23530
 19228  016AD8                     l1772:
 19229                           
 19230                           ; BSR set to: 1
 19231                           
 19232                           ; BSR set to: 1
 19233  016AD8  0E1F               	movlw	31
 19234  016ADA  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 19235  016ADC  D00F               	goto	l1778
 19236                           
 19237                           ; BSR set to: 1
 19238  016ADE  0E00               	movlw	0
 19239  016AE0  6F17               	movwf	?__div_to_l_& (0+255),b
 19240  016AE2  0E00               	movlw	0
 19241  016AE4  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 19242  016AE6  0E00               	movlw	0
 19243  016AE8  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 19244  016AEA  0E00               	movlw	0
 19245  016AEC  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 19246                           
 19247                           ; BSR set to: 1
 19248  016AEE  0012               	return	
 19249  016AF0                     
 19250                           ; BSR set to: 1
 19251                           
 19252                           ; BSR set to: 1
 19253  016AF0  90D8               	bcf	status,0,c
 19254  016AF2  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 19255  016AF4  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 19256  016AF6  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 19257  016AF8  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 19258  016AFA  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 19259  016AFC                     l1778:
 19260                           
 19261                           ; BSR set to: 1
 19262                           
 19263                           ; BSR set to: 1
 19264  016AFC  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 19265  016AFE  A4D8               	btfss	status,2,c
 19266  016B00  D7F7               	goto	l1779
 19267  016B02                     u23530:
 19268                           
 19269                           ; BSR set to: 1
 19270                           
 19271                           ; BSR set to: 1
 19272  016B02  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 19273  016B06  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 19274  016B0A  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 19275  016B0E  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 19276                           
 19277                           ; BSR set to: 1
 19278  016B12  0012               	return		;funcret
 19279  016B14                     __end_of__div_to_l_:
 19280                           	opt stack 0
 19281                           tblptru	equ	0xFF8
 19282                           tblptrh	equ	0xFF7
 19283                           tblptrl	equ	0xFF6
 19284                           tablat	equ	0xFF5
 19285                           prodh	equ	0xFF4
 19286                           prodl	equ	0xFF3
 19287                           intcon	equ	0xFF2
 19288                           indf0	equ	0xFEF
 19289                           postinc0	equ	0xFEE
 19290                           fsr0h	equ	0xFEA
 19291                           fsr0l	equ	0xFE9
 19292                           wreg	equ	0xFE8
 19293                           indf1	equ	0xFE7
 19294                           postdec1	equ	0xFE5
 19295                           plusw1	equ	0xFE3
 19296                           fsr1h	equ	0xFE2
 19297                           fsr1l	equ	0xFE1
 19298                           indf2	equ	0xFDF
 19299                           postinc2	equ	0xFDE
 19300                           postdec2	equ	0xFDD
 19301                           plusw2	equ	0xFDB
 19302                           fsr2h	equ	0xFDA
 19303                           fsr2l	equ	0xFD9
 19304                           status	equ	0xFD8
 19305                           
 19306 ;; *************** function ___xxtofl *****************
 19307 ;; Defined at:
 19308 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 19309 ;; Parameters:    Size  Location     Type
 19310 ;;  sign            1    wreg     unsigned char 
 19311 ;;  val             4   23[BANK1 ] long 
 19312 ;; Auto vars:     Size  Location     Type
 19313 ;;  sign            1   31[BANK1 ] unsigned char 
 19314 ;;  arg             4   33[BANK1 ] unsigned long 
 19315 ;;  exp             1   32[BANK1 ] unsigned char 
 19316 ;; Return value:  Size  Location     Type
 19317 ;;                  4   23[BANK1 ] unsigned char 
 19318 ;; Registers used:
 19319 ;;		wreg, status,2, status,0
 19320 ;; Tracked objects:
 19321 ;;		On entry : 0/0
 19322 ;;		On exit  : 0/0
 19323 ;;		Unchanged: 0/0
 19324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19325 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19326 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19327 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19328 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19329 ;;Total ram usage:       14 bytes
 19330 ;; Hardware stack levels used:    1
 19331 ;; Hardware stack levels required when called:   13
 19332 ;; This function calls:
 19333 ;;		Nothing
 19334 ;; This function is called by:
 19335 ;;		_ringBufferLUT
 19336 ;;		_printf
 19337 ;; This function uses a non-reentrant model
 19338 ;;
 19339                           
 19340                           	psect	text39
 19341  0164E0                     __ptext39:
 19342                           	opt stack 0
 19343  0164E0                     ___xxtofl:
 19344                           	opt stack 14
 19345                           
 19346                           ; BSR set to: 1
 19347                           ;incstack = 0
 19348                           ;___xxtofl@sign stored from wreg
 19349  0164E0  0101               	movlb	1	; () banked
 19350  0164E2  6F1F               	movwf	___xxtofl@sign& (0+255),b
 19351  0164E4  0101               	movlb	1	; () banked
 19352  0164E6  511F               	movf	___xxtofl@sign& (0+255),w,b
 19353  0164E8  A4D8               	btfss	status,2,c
 19354                           
 19355                           ; BSR set to: 1
 19356  0164EA  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 19357  0164EC  D01A               	goto	l2246
 19358                           
 19359                           ; BSR set to: 1
 19360  0164EE  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 19361  0164F2  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 19362  0164F6  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 19363  0164FA  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 19364  0164FE  1F1B               	comf	??___xxtofl& (0+255),f,b
 19365  016500  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 19366  016502  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 19367  016504  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 19368  016506  2B1B               	incf	??___xxtofl& (0+255),f,b
 19369  016508  0E00               	movlw	0
 19370  01650A  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 19371  01650C  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 19372  01650E  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 19373  016510  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 19374  016514  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 19375  016518  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 19376  01651C  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 19377  016520  D008               	goto	l2247
 19378  016522                     l2246:
 19379                           
 19380                           ; BSR set to: 1
 19381  016522  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 19382  016526  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 19383  01652A  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 19384  01652E  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 19385  016532                     l2247:
 19386                           
 19387                           ; BSR set to: 1
 19388                           
 19389                           ; BSR set to: 1
 19390  016532  5117               	movf	___xxtofl@val& (0+255),w,b
 19391  016534  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 19392  016536  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 19393  016538  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 19394  01653A  A4D8               	btfss	status,2,c
 19395  01653C  D009               	goto	l2248
 19396                           
 19397                           ; BSR set to: 1
 19398  01653E  0E00               	movlw	0
 19399  016540  6F17               	movwf	?___xxtofl& (0+255),b
 19400  016542  0E00               	movlw	0
 19401  016544  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 19402  016546  0E00               	movlw	0
 19403  016548  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 19404  01654A  0E00               	movlw	0
 19405  01654C  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 19406                           
 19407                           ; BSR set to: 1
 19408  01654E  0012               	return	
 19409  016550                     l2248:
 19410                           
 19411                           ; BSR set to: 1
 19412                           
 19413                           ; BSR set to: 1
 19414  016550  0E96               	movlw	150
 19415  016552  6F20               	movwf	___xxtofl@exp& (0+255),b
 19416  016554  D006               	goto	l2250
 19417  016556                     
 19418                           ; BSR set to: 1
 19419                           
 19420                           ; BSR set to: 1
 19421  016556  2B20               	incf	___xxtofl@exp& (0+255),f,b
 19422  016558  90D8               	bcf	status,0,c
 19423  01655A  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 19424  01655C  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 19425  01655E  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 19426  016560  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 19427  016562                     l2250:
 19428                           
 19429                           ; BSR set to: 1
 19430                           
 19431                           ; BSR set to: 1
 19432  016562  0E00               	movlw	0
 19433  016564  1521               	andwf	___xxtofl@arg& (0+255),w,b
 19434  016566  6F1B               	movwf	??___xxtofl& (0+255),b
 19435  016568  0E00               	movlw	0
 19436  01656A  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 19437  01656C  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 19438  01656E  0E00               	movlw	0
 19439  016570  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 19440  016572  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 19441  016574  0EFE               	movlw	254
 19442  016576  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 19443  016578  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 19444  01657A  511B               	movf	??___xxtofl& (0+255),w,b
 19445  01657C  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 19446  01657E  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 19447  016580  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 19448  016582  B4D8               	btfsc	status,2,c
 19449  016584  D00D               	goto	l2253
 19450  016586  D7E7               	goto	l2251
 19451  016588                     
 19452                           ; BSR set to: 1
 19453                           
 19454                           ; BSR set to: 1
 19455  016588  2B20               	incf	___xxtofl@exp& (0+255),f,b
 19456                           
 19457                           ; BSR set to: 1
 19458  01658A  0E01               	movlw	1
 19459  01658C  2721               	addwf	___xxtofl@arg& (0+255),f,b
 19460  01658E  0E00               	movlw	0
 19461  016590  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 19462  016592  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 19463  016594  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 19464                           
 19465                           ; BSR set to: 1
 19466  016596  90D8               	bcf	status,0,c
 19467  016598  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 19468  01659A  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 19469  01659C  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 19470  01659E  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 19471  0165A0                     l2253:
 19472                           
 19473                           ; BSR set to: 1
 19474  0165A0  0E00               	movlw	0
 19475  0165A2  1521               	andwf	___xxtofl@arg& (0+255),w,b
 19476  0165A4  6F1B               	movwf	??___xxtofl& (0+255),b
 19477  0165A6  0E00               	movlw	0
 19478  0165A8  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 19479  0165AA  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 19480  0165AC  0E00               	movlw	0
 19481  0165AE  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 19482  0165B0  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 19483  0165B2  0EFF               	movlw	255
 19484  0165B4  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 19485  0165B6  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 19486  0165B8  511B               	movf	??___xxtofl& (0+255),w,b
 19487  0165BA  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 19488  0165BC  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 19489  0165BE  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 19490  0165C0  B4D8               	btfsc	status,2,c
 19491  0165C2  D007               	goto	l2256
 19492  0165C4  D7E1               	goto	l2254
 19493  0165C6                     
 19494                           ; BSR set to: 1
 19495                           
 19496                           ; BSR set to: 1
 19497  0165C6  0720               	decf	___xxtofl@exp& (0+255),f,b
 19498  0165C8  90D8               	bcf	status,0,c
 19499  0165CA  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 19500  0165CC  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 19501  0165CE  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 19502  0165D0  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 19503  0165D2                     l2256:
 19504                           
 19505                           ; BSR set to: 1
 19506                           
 19507                           ; BSR set to: 1
 19508  0165D2  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 19509  0165D4  D003               	goto	u23790
 19510                           
 19511                           ; BSR set to: 1
 19512  0165D6  0E02               	movlw	2
 19513  0165D8  6120               	cpfslt	___xxtofl@exp& (0+255),b
 19514  0165DA  D7F5               	goto	l2257
 19515  0165DC                     u23790:
 19516                           
 19517                           ; BSR set to: 1
 19518                           
 19519                           ; BSR set to: 1
 19520  0165DC  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 19521  0165DE  D008               	goto	l2261
 19522                           
 19523                           ; BSR set to: 1
 19524  0165E0  0EFF               	movlw	255
 19525  0165E2  1721               	andwf	___xxtofl@arg& (0+255),f,b
 19526  0165E4  0EFF               	movlw	255
 19527  0165E6  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 19528  0165E8  0E7F               	movlw	127
 19529  0165EA  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 19530  0165EC  0EFF               	movlw	255
 19531  0165EE  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 19532  0165F0                     l2261:
 19533                           
 19534                           ; BSR set to: 1
 19535  0165F0  90D8               	bcf	status,0,c
 19536  0165F2  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 19537  0165F4  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 19538  0165F8  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 19539  0165FA  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 19540  0165FC  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 19541  0165FE  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 19542  016602  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 19543  016604  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 19544  016606  6B1B               	clrf	??___xxtofl& (0+255),b
 19545  016608  511B               	movf	??___xxtofl& (0+255),w,b
 19546  01660A  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 19547  01660C  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 19548  01660E  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 19549  016610  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 19550  016612  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 19551  016614  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 19552  016616  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 19553                           
 19554                           ; BSR set to: 1
 19555  016618  511F               	movf	___xxtofl@sign& (0+255),w,b
 19556  01661A  A4D8               	btfss	status,2,c
 19557                           
 19558                           ; BSR set to: 1
 19559  01661C  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 19560  01661E  D001               	goto	l2262
 19561                           
 19562                           ; BSR set to: 1
 19563  016620  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 19564  016622                     l2262:
 19565                           
 19566                           ; BSR set to: 1
 19567                           
 19568                           ; BSR set to: 1
 19569  016622  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 19570  016626  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 19571  01662A  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 19572  01662E  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 19573  016632  0012               	return	
 19574  016634                     __end_of___xxtofl:
 19575                           	opt stack 0
 19576                           tblptru	equ	0xFF8
 19577                           tblptrh	equ	0xFF7
 19578                           tblptrl	equ	0xFF6
 19579                           tablat	equ	0xFF5
 19580                           prodh	equ	0xFF4
 19581                           prodl	equ	0xFF3
 19582                           intcon	equ	0xFF2
 19583                           indf0	equ	0xFEF
 19584                           postinc0	equ	0xFEE
 19585                           fsr0h	equ	0xFEA
 19586                           fsr0l	equ	0xFE9
 19587                           wreg	equ	0xFE8
 19588                           indf1	equ	0xFE7
 19589                           postdec1	equ	0xFE5
 19590                           plusw1	equ	0xFE3
 19591                           fsr1h	equ	0xFE2
 19592                           fsr1l	equ	0xFE1
 19593                           indf2	equ	0xFDF
 19594                           postinc2	equ	0xFDE
 19595                           postdec2	equ	0xFDD
 19596                           plusw2	equ	0xFDB
 19597                           fsr2h	equ	0xFDA
 19598                           fsr2l	equ	0xFD9
 19599                           status	equ	0xFD8
 19600                           
 19601 ;; *************** function ___wmul *****************
 19602 ;; Defined at:
 19603 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 19604 ;; Parameters:    Size  Location     Type
 19605 ;;  multiplier      2   23[BANK1 ] unsigned int 
 19606 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 19607 ;; Auto vars:     Size  Location     Type
 19608 ;;  product         2   27[BANK1 ] unsigned int 
 19609 ;; Return value:  Size  Location     Type
 19610 ;;                  2   23[BANK1 ] unsigned int 
 19611 ;; Registers used:
 19612 ;;		wreg, status,2, status,0, prodl, prodh
 19613 ;; Tracked objects:
 19614 ;;		On entry : 0/0
 19615 ;;		On exit  : 0/0
 19616 ;;		Unchanged: 0/0
 19617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19618 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19619 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19621 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19622 ;;Total ram usage:        6 bytes
 19623 ;; Hardware stack levels used:    1
 19624 ;; Hardware stack levels required when called:   13
 19625 ;; This function calls:
 19626 ;;		Nothing
 19627 ;; This function is called by:
 19628 ;;		_ringBufferLUT
 19629 ;;		_printf
 19630 ;;		_atoi
 19631 ;; This function uses a non-reentrant model
 19632 ;;
 19633                           
 19634                           	psect	text40
 19635  018600                     __ptext40:
 19636                           	opt stack 0
 19637  018600                     ___wmul:
 19638                           	opt stack 14
 19639                           
 19640                           ; BSR set to: 1
 19641                           ;incstack = 0
 19642  018600  0101               	movlb	1	; () banked
 19643  018602  5117               	movf	___wmul@multiplier& (0+255),w,b
 19644  018604  0319               	mulwf	___wmul@multiplicand& (0+255),b
 19645  018606  CFF3 F11B          	movff	prodl,___wmul@product
 19646  01860A  CFF4 F11C          	movff	prodh,___wmul@product+1
 19647  01860E  5117               	movf	___wmul@multiplier& (0+255),w,b
 19648  018610  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19649  018612  50F3               	movf	prodl,w,c
 19650  018614  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 19651  018616  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19652  018618  0319               	mulwf	___wmul@multiplicand& (0+255),b
 19653  01861A  50F3               	movf	prodl,w,c
 19654  01861C  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 19655                           
 19656                           ; BSR set to: 1
 19657  01861E  C11B  F117         	movff	___wmul@product,?___wmul
 19658  018622  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 19659  018626  0012               	return	
 19660  018628                     __end_of___wmul:
 19661                           	opt stack 0
 19662                           tblptru	equ	0xFF8
 19663                           tblptrh	equ	0xFF7
 19664                           tblptrl	equ	0xFF6
 19665                           tablat	equ	0xFF5
 19666                           prodh	equ	0xFF4
 19667                           prodl	equ	0xFF3
 19668                           intcon	equ	0xFF2
 19669                           indf0	equ	0xFEF
 19670                           postinc0	equ	0xFEE
 19671                           fsr0h	equ	0xFEA
 19672                           fsr0l	equ	0xFE9
 19673                           wreg	equ	0xFE8
 19674                           indf1	equ	0xFE7
 19675                           postdec1	equ	0xFE5
 19676                           plusw1	equ	0xFE3
 19677                           fsr1h	equ	0xFE2
 19678                           fsr1l	equ	0xFE1
 19679                           indf2	equ	0xFDF
 19680                           postinc2	equ	0xFDE
 19681                           postdec2	equ	0xFDD
 19682                           plusw2	equ	0xFDB
 19683                           fsr2h	equ	0xFDA
 19684                           fsr2l	equ	0xFD9
 19685                           status	equ	0xFD8
 19686                           
 19687 ;; *************** function ___llmod *****************
 19688 ;; Defined at:
 19689 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 19690 ;; Parameters:    Size  Location     Type
 19691 ;;  dividend        4   36[BANK1 ] unsigned long 
 19692 ;;  divisor         4   40[BANK1 ] unsigned long 
 19693 ;; Auto vars:     Size  Location     Type
 19694 ;;  counter         1   44[BANK1 ] unsigned char 
 19695 ;; Return value:  Size  Location     Type
 19696 ;;                  4   36[BANK1 ] unsigned long 
 19697 ;; Registers used:
 19698 ;;		wreg, status,2, status,0
 19699 ;; Tracked objects:
 19700 ;;		On entry : 0/0
 19701 ;;		On exit  : 0/0
 19702 ;;		Unchanged: 0/0
 19703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19704 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19705 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19707 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19708 ;;Total ram usage:        9 bytes
 19709 ;; Hardware stack levels used:    1
 19710 ;; Hardware stack levels required when called:   13
 19711 ;; This function calls:
 19712 ;;		Nothing
 19713 ;; This function is called by:
 19714 ;;		_printf
 19715 ;; This function uses a non-reentrant model
 19716 ;;
 19717                           
 19718                           	psect	text41
 19719  017DC4                     __ptext41:
 19720                           	opt stack 0
 19721  017DC4                     ___llmod:
 19722                           	opt stack 14
 19723                           
 19724                           ; BSR set to: 1
 19725                           ;incstack = 0
 19726  017DC4  0101               	movlb	1	; () banked
 19727  017DC6  5128               	movf	___llmod@divisor& (0+255),w,b
 19728  017DC8  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 19729  017DCA  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 19730  017DCC  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 19731  017DCE  B4D8               	btfsc	status,2,c
 19732  017DD0  D024               	goto	l1971
 19733                           
 19734                           ; BSR set to: 1
 19735  017DD2  0E01               	movlw	1
 19736  017DD4  6F2C               	movwf	___llmod@counter& (0+255),b
 19737  017DD6  D006               	goto	l1966
 19738  017DD8                     
 19739                           ; BSR set to: 1
 19740                           
 19741                           ; BSR set to: 1
 19742  017DD8  90D8               	bcf	status,0,c
 19743  017DDA  3728               	rlcf	___llmod@divisor& (0+255),f,b
 19744  017DDC  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 19745  017DDE  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 19746  017DE0  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 19747  017DE2  2B2C               	incf	___llmod@counter& (0+255),f,b
 19748  017DE4                     l1966:
 19749                           
 19750                           ; BSR set to: 1
 19751                           
 19752                           ; BSR set to: 1
 19753  017DE4  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 19754  017DE6  D7F8               	goto	l1967
 19755  017DE8                     u23710:
 19756                           
 19757                           ; BSR set to: 1
 19758                           
 19759                           ; BSR set to: 1
 19760                           
 19761                           ; BSR set to: 1
 19762  017DE8  5128               	movf	___llmod@divisor& (0+255),w,b
 19763  017DEA  5D24               	subwf	___llmod@dividend& (0+255),w,b
 19764  017DEC  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 19765  017DEE  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 19766  017DF0  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 19767  017DF2  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 19768  017DF4  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 19769  017DF6  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 19770  017DF8  A0D8               	btfss	status,0,c
 19771  017DFA  D008               	goto	l1970
 19772                           
 19773                           ; BSR set to: 1
 19774  017DFC  5128               	movf	___llmod@divisor& (0+255),w,b
 19775  017DFE  5F24               	subwf	___llmod@dividend& (0+255),f,b
 19776  017E00  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 19777  017E02  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 19778  017E04  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 19779  017E06  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 19780  017E08  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 19781  017E0A  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 19782  017E0C                     l1970:
 19783                           
 19784                           ; BSR set to: 1
 19785                           
 19786                           ; BSR set to: 1
 19787  017E0C  90D8               	bcf	status,0,c
 19788  017E0E  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 19789  017E10  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 19790  017E12  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 19791  017E14  3328               	rrcf	___llmod@divisor& (0+255),f,b
 19792                           
 19793                           ; BSR set to: 1
 19794  017E16  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 19795  017E18  D7E7               	goto	u23710
 19796  017E1A                     l1971:
 19797                           
 19798                           ; BSR set to: 1
 19799                           
 19800                           ; BSR set to: 1
 19801  017E1A  C124  F124         	movff	___llmod@dividend,?___llmod
 19802  017E1E  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 19803  017E22  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 19804  017E26  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 19805                           
 19806                           ; BSR set to: 1
 19807  017E2A  0012               	return		;funcret
 19808  017E2C                     __end_of___llmod:
 19809                           	opt stack 0
 19810                           tblptru	equ	0xFF8
 19811                           tblptrh	equ	0xFF7
 19812                           tblptrl	equ	0xFF6
 19813                           tablat	equ	0xFF5
 19814                           prodh	equ	0xFF4
 19815                           prodl	equ	0xFF3
 19816                           intcon	equ	0xFF2
 19817                           indf0	equ	0xFEF
 19818                           postinc0	equ	0xFEE
 19819                           fsr0h	equ	0xFEA
 19820                           fsr0l	equ	0xFE9
 19821                           wreg	equ	0xFE8
 19822                           indf1	equ	0xFE7
 19823                           postdec1	equ	0xFE5
 19824                           plusw1	equ	0xFE3
 19825                           fsr1h	equ	0xFE2
 19826                           fsr1l	equ	0xFE1
 19827                           indf2	equ	0xFDF
 19828                           postinc2	equ	0xFDE
 19829                           postdec2	equ	0xFDD
 19830                           plusw2	equ	0xFDB
 19831                           fsr2h	equ	0xFDA
 19832                           fsr2l	equ	0xFD9
 19833                           status	equ	0xFD8
 19834                           
 19835 ;; *************** function ___lldiv *****************
 19836 ;; Defined at:
 19837 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 19838 ;; Parameters:    Size  Location     Type
 19839 ;;  dividend        4   23[BANK1 ] unsigned long 
 19840 ;;  divisor         4   27[BANK1 ] unsigned long 
 19841 ;; Auto vars:     Size  Location     Type
 19842 ;;  quotient        4   32[BANK1 ] unsigned long 
 19843 ;;  counter         1   31[BANK1 ] unsigned char 
 19844 ;; Return value:  Size  Location     Type
 19845 ;;                  4   23[BANK1 ] unsigned long 
 19846 ;; Registers used:
 19847 ;;		wreg, status,2, status,0
 19848 ;; Tracked objects:
 19849 ;;		On entry : 0/0
 19850 ;;		On exit  : 0/0
 19851 ;;		Unchanged: 0/0
 19852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19853 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19854 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19856 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19857 ;;Total ram usage:       13 bytes
 19858 ;; Hardware stack levels used:    1
 19859 ;; Hardware stack levels required when called:   13
 19860 ;; This function calls:
 19861 ;;		Nothing
 19862 ;; This function is called by:
 19863 ;;		_printf
 19864 ;; This function uses a non-reentrant model
 19865 ;;
 19866                           
 19867                           	psect	text42
 19868  017922                     __ptext42:
 19869                           	opt stack 0
 19870  017922                     ___lldiv:
 19871                           	opt stack 14
 19872                           
 19873                           ; BSR set to: 1
 19874                           ;incstack = 0
 19875  017922  0E00               	movlw	0
 19876  017924  0101               	movlb	1	; () banked
 19877  017926  6F20               	movwf	___lldiv@quotient& (0+255),b
 19878  017928  0E00               	movlw	0
 19879  01792A  6F21               	movwf	(___lldiv@quotient+1)& (0+255),b
 19880  01792C  0E00               	movlw	0
 19881  01792E  6F22               	movwf	(___lldiv@quotient+2)& (0+255),b
 19882  017930  0E00               	movlw	0
 19883  017932  6F23               	movwf	(___lldiv@quotient+3)& (0+255),b
 19884                           
 19885                           ; BSR set to: 1
 19886  017934  511B               	movf	___lldiv@divisor& (0+255),w,b
 19887  017936  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 19888  017938  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 19889  01793A  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 19890  01793C  B4D8               	btfsc	status,2,c
 19891  01793E  D02A               	goto	l1961
 19892                           
 19893                           ; BSR set to: 1
 19894  017940  0E01               	movlw	1
 19895  017942  6F1F               	movwf	___lldiv@counter& (0+255),b
 19896  017944  D006               	goto	l1956
 19897  017946                     
 19898                           ; BSR set to: 1
 19899                           
 19900                           ; BSR set to: 1
 19901  017946  90D8               	bcf	status,0,c
 19902  017948  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 19903  01794A  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 19904  01794C  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 19905  01794E  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 19906  017950  2B1F               	incf	___lldiv@counter& (0+255),f,b
 19907  017952                     l1956:
 19908                           
 19909                           ; BSR set to: 1
 19910                           
 19911                           ; BSR set to: 1
 19912  017952  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 19913  017954  D7F8               	goto	l1957
 19914  017956                     u23680:
 19915                           
 19916                           ; BSR set to: 1
 19917                           
 19918                           ; BSR set to: 1
 19919                           
 19920                           ; BSR set to: 1
 19921  017956  90D8               	bcf	status,0,c
 19922  017958  3720               	rlcf	___lldiv@quotient& (0+255),f,b
 19923  01795A  3721               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 19924  01795C  3722               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 19925  01795E  3723               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 19926                           
 19927                           ; BSR set to: 1
 19928  017960  511B               	movf	___lldiv@divisor& (0+255),w,b
 19929  017962  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 19930  017964  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19931  017966  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 19932  017968  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19933  01796A  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 19934  01796C  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19935  01796E  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 19936  017970  A0D8               	btfss	status,0,c
 19937  017972  D009               	goto	l1960
 19938                           
 19939                           ; BSR set to: 1
 19940  017974  511B               	movf	___lldiv@divisor& (0+255),w,b
 19941  017976  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 19942  017978  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19943  01797A  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 19944  01797C  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19945  01797E  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 19946  017980  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19947  017982  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 19948                           
 19949                           ; BSR set to: 1
 19950  017984  8120               	bsf	___lldiv@quotient& (0+255),0,b
 19951  017986                     l1960:
 19952                           
 19953                           ; BSR set to: 1
 19954                           
 19955                           ; BSR set to: 1
 19956  017986  90D8               	bcf	status,0,c
 19957  017988  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 19958  01798A  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 19959  01798C  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 19960  01798E  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 19961                           
 19962                           ; BSR set to: 1
 19963  017990  2F1F               	decfsz	___lldiv@counter& (0+255),f,b
 19964  017992  D7E1               	goto	u23680
 19965  017994                     l1961:
 19966                           
 19967                           ; BSR set to: 1
 19968                           
 19969                           ; BSR set to: 1
 19970  017994  C120  F117         	movff	___lldiv@quotient,?___lldiv
 19971  017998  C121  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 19972  01799C  C122  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 19973  0179A0  C123  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 19974                           
 19975                           ; BSR set to: 1
 19976  0179A4  0012               	return		;funcret
 19977  0179A6                     __end_of___lldiv:
 19978                           	opt stack 0
 19979                           tblptru	equ	0xFF8
 19980                           tblptrh	equ	0xFF7
 19981                           tblptrl	equ	0xFF6
 19982                           tablat	equ	0xFF5
 19983                           prodh	equ	0xFF4
 19984                           prodl	equ	0xFF3
 19985                           intcon	equ	0xFF2
 19986                           indf0	equ	0xFEF
 19987                           postinc0	equ	0xFEE
 19988                           fsr0h	equ	0xFEA
 19989                           fsr0l	equ	0xFE9
 19990                           wreg	equ	0xFE8
 19991                           indf1	equ	0xFE7
 19992                           postdec1	equ	0xFE5
 19993                           plusw1	equ	0xFE3
 19994                           fsr1h	equ	0xFE2
 19995                           fsr1l	equ	0xFE1
 19996                           indf2	equ	0xFDF
 19997                           postinc2	equ	0xFDE
 19998                           postdec2	equ	0xFDD
 19999                           plusw2	equ	0xFDB
 20000                           fsr2h	equ	0xFDA
 20001                           fsr2l	equ	0xFD9
 20002                           status	equ	0xFD8
 20003                           
 20004 ;; *************** function ___fltol *****************
 20005 ;; Defined at:
 20006 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 20007 ;; Parameters:    Size  Location     Type
 20008 ;;  f1              4  120[BANK1 ] unsigned long 
 20009 ;; Auto vars:     Size  Location     Type
 20010 ;;  exp1            1  129[BANK1 ] unsigned char 
 20011 ;;  sign1           1  128[BANK1 ] unsigned char 
 20012 ;; Return value:  Size  Location     Type
 20013 ;;                  4  120[BANK1 ] long 
 20014 ;; Registers used:
 20015 ;;		wreg, status,2, status,0
 20016 ;; Tracked objects:
 20017 ;;		On entry : 0/0
 20018 ;;		On exit  : 0/0
 20019 ;;		Unchanged: 0/0
 20020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20021 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20022 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20023 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20024 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20025 ;;Total ram usage:       10 bytes
 20026 ;; Hardware stack levels used:    1
 20027 ;; Hardware stack levels required when called:   13
 20028 ;; This function calls:
 20029 ;;		Nothing
 20030 ;; This function is called by:
 20031 ;;		_printf
 20032 ;; This function uses a non-reentrant model
 20033 ;;
 20034                           
 20035                           	psect	text43
 20036  0171B4                     __ptext43:
 20037                           	opt stack 0
 20038  0171B4                     ___fltol:
 20039                           	opt stack 14
 20040                           
 20041                           ; BSR set to: 1
 20042                           ;incstack = 0
 20043  0171B4  0101               	movlb	1	; () banked
 20044  0171B6  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 20045  0171B8  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 20046  0171BA  6F81               	movwf	___fltol@exp1& (0+255),b
 20047  0171BC  5181               	movf	___fltol@exp1& (0+255),w,b
 20048  0171BE  A4D8               	btfss	status,2,c
 20049  0171C0  D009               	goto	l1813
 20050                           
 20051                           ; BSR set to: 1
 20052  0171C2  0E00               	movlw	0
 20053  0171C4  6F78               	movwf	?___fltol& (0+255),b
 20054  0171C6  0E00               	movlw	0
 20055  0171C8  6F79               	movwf	(?___fltol+1)& (0+255),b
 20056  0171CA  0E00               	movlw	0
 20057  0171CC  6F7A               	movwf	(?___fltol+2)& (0+255),b
 20058  0171CE  0E00               	movlw	0
 20059  0171D0  6F7B               	movwf	(?___fltol+3)& (0+255),b
 20060                           
 20061                           ; BSR set to: 1
 20062  0171D2  0012               	return	
 20063  0171D4                     l1813:
 20064                           
 20065                           ; BSR set to: 1
 20066                           
 20067                           ; BSR set to: 1
 20068  0171D4  C178  F17C         	movff	___fltol@f1,??___fltol
 20069  0171D8  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 20070  0171DC  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 20071  0171E0  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 20072  0171E4  0E20               	movlw	32
 20073  0171E6  D005               	goto	u23610
 20074  0171E8                     u23615:
 20075  0171E8  90D8               	bcf	status,0,c
 20076  0171EA  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 20077  0171EC  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 20078  0171EE  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 20079  0171F0  337C               	rrcf	??___fltol& (0+255),f,b
 20080  0171F2                     u23610:
 20081  0171F2  2EE8               	decfsz	wreg,f,c
 20082  0171F4  D7F9               	goto	u23615
 20083  0171F6  517C               	movf	??___fltol& (0+255),w,b
 20084  0171F8  6F80               	movwf	___fltol@sign1& (0+255),b
 20085                           
 20086                           ; BSR set to: 1
 20087  0171FA  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 20088                           
 20089                           ; BSR set to: 1
 20090  0171FC  0EFF               	movlw	255
 20091  0171FE  1778               	andwf	___fltol@f1& (0+255),f,b
 20092  017200  0EFF               	movlw	255
 20093  017202  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 20094  017204  0EFF               	movlw	255
 20095  017206  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 20096  017208  0E00               	movlw	0
 20097  01720A  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 20098                           
 20099                           ; BSR set to: 1
 20100  01720C  0E96               	movlw	150
 20101  01720E  5F81               	subwf	___fltol@exp1& (0+255),f,b
 20102                           
 20103                           ; BSR set to: 1
 20104  017210  AF81               	btfss	___fltol@exp1& (0+255),7,b
 20105  017212  D016               	goto	l1815
 20106                           
 20107                           ; BSR set to: 1
 20108  017214  5181               	movf	___fltol@exp1& (0+255),w,b
 20109  017216  0A80               	xorlw	128
 20110  017218  0F97               	addlw	151
 20111  01721A  B0D8               	btfsc	status,0,c
 20112  01721C  D009               	goto	l1816
 20113                           
 20114                           ; BSR set to: 1
 20115  01721E  0E00               	movlw	0
 20116  017220  6F78               	movwf	?___fltol& (0+255),b
 20117  017222  0E00               	movlw	0
 20118  017224  6F79               	movwf	(?___fltol+1)& (0+255),b
 20119  017226  0E00               	movlw	0
 20120  017228  6F7A               	movwf	(?___fltol+2)& (0+255),b
 20121  01722A  0E00               	movlw	0
 20122  01722C  6F7B               	movwf	(?___fltol+3)& (0+255),b
 20123                           
 20124                           ; BSR set to: 1
 20125  01722E  0012               	return	
 20126  017230                     l1816:
 20127                           
 20128                           ; BSR set to: 1
 20129                           
 20130                           ; BSR set to: 1
 20131                           
 20132                           ; BSR set to: 1
 20133  017230  90D8               	bcf	status,0,c
 20134  017232  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 20135  017234  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 20136  017236  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 20137  017238  3378               	rrcf	___fltol@f1& (0+255),f,b
 20138                           
 20139                           ; BSR set to: 1
 20140  01723A  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 20141  01723C  D7F9               	goto	l1816
 20142                           
 20143                           ; BSR set to: 1
 20144  01723E  D015               	goto	u23650
 20145  017240                     l1815:
 20146                           
 20147                           ; BSR set to: 1
 20148                           
 20149                           ; BSR set to: 1
 20150  017240  0E1F               	movlw	31
 20151  017242  6581               	cpfsgt	___fltol@exp1& (0+255),b
 20152  017244  D00F               	goto	l1821
 20153                           
 20154                           ; BSR set to: 1
 20155  017246  0E00               	movlw	0
 20156  017248  6F78               	movwf	?___fltol& (0+255),b
 20157  01724A  0E00               	movlw	0
 20158  01724C  6F79               	movwf	(?___fltol+1)& (0+255),b
 20159  01724E  0E00               	movlw	0
 20160  017250  6F7A               	movwf	(?___fltol+2)& (0+255),b
 20161  017252  0E00               	movlw	0
 20162  017254  6F7B               	movwf	(?___fltol+3)& (0+255),b
 20163                           
 20164                           ; BSR set to: 1
 20165  017256  0012               	return	
 20166  017258                     
 20167                           ; BSR set to: 1
 20168                           
 20169                           ; BSR set to: 1
 20170  017258  90D8               	bcf	status,0,c
 20171  01725A  3778               	rlcf	___fltol@f1& (0+255),f,b
 20172  01725C  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 20173  01725E  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 20174  017260  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 20175  017262  0781               	decf	___fltol@exp1& (0+255),f,b
 20176  017264                     l1821:
 20177                           
 20178                           ; BSR set to: 1
 20179                           
 20180                           ; BSR set to: 1
 20181  017264  5181               	movf	___fltol@exp1& (0+255),w,b
 20182  017266  A4D8               	btfss	status,2,c
 20183  017268  D7F7               	goto	l1822
 20184  01726A                     u23650:
 20185                           
 20186                           ; BSR set to: 1
 20187                           
 20188                           ; BSR set to: 1
 20189                           
 20190                           ; BSR set to: 1
 20191  01726A  5180               	movf	___fltol@sign1& (0+255),w,b
 20192  01726C  B4D8               	btfsc	status,2,c
 20193  01726E  D008               	goto	l1824
 20194                           
 20195                           ; BSR set to: 1
 20196  017270  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 20197  017272  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 20198  017274  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 20199  017276  6D78               	negf	___fltol@f1& (0+255),b
 20200  017278  0E00               	movlw	0
 20201  01727A  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 20202  01727C  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 20203  01727E  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 20204  017280                     l1824:
 20205                           
 20206                           ; BSR set to: 1
 20207                           
 20208                           ; BSR set to: 1
 20209  017280  C178  F178         	movff	___fltol@f1,?___fltol
 20210  017284  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 20211  017288  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 20212  01728C  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 20213  017290  0012               	return	
 20214  017292                     __end_of___fltol:
 20215                           	opt stack 0
 20216                           tblptru	equ	0xFF8
 20217                           tblptrh	equ	0xFF7
 20218                           tblptrl	equ	0xFF6
 20219                           tablat	equ	0xFF5
 20220                           prodh	equ	0xFF4
 20221                           prodl	equ	0xFF3
 20222                           intcon	equ	0xFF2
 20223                           indf0	equ	0xFEF
 20224                           postinc0	equ	0xFEE
 20225                           fsr0h	equ	0xFEA
 20226                           fsr0l	equ	0xFE9
 20227                           wreg	equ	0xFE8
 20228                           indf1	equ	0xFE7
 20229                           postdec1	equ	0xFE5
 20230                           plusw1	equ	0xFE3
 20231                           fsr1h	equ	0xFE2
 20232                           fsr1l	equ	0xFE1
 20233                           indf2	equ	0xFDF
 20234                           postinc2	equ	0xFDE
 20235                           postdec2	equ	0xFDD
 20236                           plusw2	equ	0xFDB
 20237                           fsr2h	equ	0xFDA
 20238                           fsr2l	equ	0xFD9
 20239                           status	equ	0xFD8
 20240                           
 20241 ;; *************** function ___flsub *****************
 20242 ;; Defined at:
 20243 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 20244 ;; Parameters:    Size  Location     Type
 20245 ;;  b               4   61[BANK1 ] long 
 20246 ;;  a               4   65[BANK1 ] long 
 20247 ;; Auto vars:     Size  Location     Type
 20248 ;;		None
 20249 ;; Return value:  Size  Location     Type
 20250 ;;                  4   61[BANK1 ] long 
 20251 ;; Registers used:
 20252 ;;		wreg, status,2, status,0, cstack
 20253 ;; Tracked objects:
 20254 ;;		On entry : 0/0
 20255 ;;		On exit  : 0/0
 20256 ;;		Unchanged: 0/0
 20257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20258 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20261 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20262 ;;Total ram usage:        8 bytes
 20263 ;; Hardware stack levels used:    1
 20264 ;; Hardware stack levels required when called:   14
 20265 ;; This function calls:
 20266 ;;		___fladd
 20267 ;; This function is called by:
 20268 ;;		_printf
 20269 ;; This function uses a non-reentrant model
 20270 ;;
 20271                           
 20272                           	psect	text44
 20273  01820E                     __ptext44:
 20274                           	opt stack 0
 20275  01820E                     ___flsub:
 20276                           	opt stack 13
 20277                           
 20278                           ; BSR set to: 1
 20279                           ;incstack = 0
 20280  01820E  0E00               	movlw	0
 20281  018210  0101               	movlb	1	; () banked
 20282  018212  1B41               	xorwf	___flsub@a& (0+255),f,b
 20283  018214  0E00               	movlw	0
 20284  018216  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 20285  018218  0E00               	movlw	0
 20286  01821A  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 20287  01821C  0E80               	movlw	128
 20288  01821E  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 20289                           
 20290                           ; BSR set to: 1
 20291  018220  C13D  F129         	movff	___flsub@b,___fladd@b
 20292  018224  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 20293  018228  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 20294  01822C  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 20295  018230  C141  F12D         	movff	___flsub@a,___fladd@a
 20296  018234  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 20297  018238  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 20298  01823C  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 20299  018240  EC20  F0A3         	call	___fladd	;wreg free
 20300  018244  C129  F13D         	movff	?___fladd,?___flsub
 20301  018248  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 20302  01824C  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 20303  018250  C12C  F140         	movff	?___fladd+3,?___flsub+3
 20304  018254  0012               	return	
 20305  018256                     __end_of___flsub:
 20306                           	opt stack 0
 20307                           tblptru	equ	0xFF8
 20308                           tblptrh	equ	0xFF7
 20309                           tblptrl	equ	0xFF6
 20310                           tablat	equ	0xFF5
 20311                           prodh	equ	0xFF4
 20312                           prodl	equ	0xFF3
 20313                           intcon	equ	0xFF2
 20314                           indf0	equ	0xFEF
 20315                           postinc0	equ	0xFEE
 20316                           fsr0h	equ	0xFEA
 20317                           fsr0l	equ	0xFE9
 20318                           wreg	equ	0xFE8
 20319                           indf1	equ	0xFE7
 20320                           postdec1	equ	0xFE5
 20321                           plusw1	equ	0xFE3
 20322                           fsr1h	equ	0xFE2
 20323                           fsr1l	equ	0xFE1
 20324                           indf2	equ	0xFDF
 20325                           postinc2	equ	0xFDE
 20326                           postdec2	equ	0xFDD
 20327                           plusw2	equ	0xFDB
 20328                           fsr2h	equ	0xFDA
 20329                           fsr2l	equ	0xFD9
 20330                           status	equ	0xFD8
 20331                           
 20332 ;; *************** function ___fladd *****************
 20333 ;; Defined at:
 20334 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 20335 ;; Parameters:    Size  Location     Type
 20336 ;;  b               4   41[BANK1 ] long 
 20337 ;;  a               4   45[BANK1 ] long 
 20338 ;; Auto vars:     Size  Location     Type
 20339 ;;  grs             1   60[BANK1 ] unsigned char 
 20340 ;;  bexp            1   59[BANK1 ] unsigned char 
 20341 ;;  aexp            1   58[BANK1 ] unsigned char 
 20342 ;;  signs           1   57[BANK1 ] unsigned char 
 20343 ;; Return value:  Size  Location     Type
 20344 ;;                  4   41[BANK1 ] unsigned char 
 20345 ;; Registers used:
 20346 ;;		wreg, status,2, status,0
 20347 ;; Tracked objects:
 20348 ;;		On entry : 0/0
 20349 ;;		On exit  : 0/0
 20350 ;;		Unchanged: 0/0
 20351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20352 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20353 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20354 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20355 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20356 ;;Total ram usage:       20 bytes
 20357 ;; Hardware stack levels used:    1
 20358 ;; Hardware stack levels required when called:   13
 20359 ;; This function calls:
 20360 ;;		Nothing
 20361 ;; This function is called by:
 20362 ;;		_ringBufferLUT
 20363 ;;		_printf
 20364 ;;		___flsub
 20365 ;; This function uses a non-reentrant model
 20366 ;;
 20367                           
 20368                           	psect	text45
 20369  014640                     __ptext45:
 20370                           	opt stack 0
 20371  014640                     ___fladd:
 20372                           	opt stack 13
 20373                           
 20374                           ;incstack = 0
 20375  014640  0101               	movlb	1	; () banked
 20376  014642  512C               	movf	(___fladd@b+3)& (0+255),w,b
 20377  014644  0B80               	andlw	128
 20378  014646  6F39               	movwf	___fladd@signs& (0+255),b
 20379  014648  512C               	movf	(___fladd@b+3)& (0+255),w,b
 20380  01464A  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 20381  01464C  6F3B               	movwf	___fladd@bexp& (0+255),b
 20382                           
 20383                           ; BSR set to: 1
 20384  01464E  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 20385                           
 20386                           ; BSR set to: 1
 20387  014650  813B               	bsf	___fladd@bexp& (0+255),0,b
 20388                           
 20389                           ; BSR set to: 1
 20390                           
 20391                           ; BSR set to: 1
 20392  014652  513B               	movf	___fladd@bexp& (0+255),w,b
 20393  014654  B4D8               	btfsc	status,2,c
 20394  014656  D00D               	goto	l2053
 20395                           
 20396                           ; BSR set to: 1
 20397  014658  293B               	incf	___fladd@bexp& (0+255),w,b
 20398  01465A  A4D8               	btfss	status,2,c
 20399  01465C  D008               	goto	l2054
 20400                           
 20401                           ; BSR set to: 1
 20402  01465E  0E00               	movlw	0
 20403  014660  6F29               	movwf	___fladd@b& (0+255),b
 20404  014662  0E00               	movlw	0
 20405  014664  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 20406  014666  0E00               	movlw	0
 20407  014668  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 20408  01466A  0E00               	movlw	0
 20409  01466C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 20410  01466E                     l2054:
 20411                           
 20412                           ; BSR set to: 1
 20413                           
 20414                           ; BSR set to: 1
 20415  01466E  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 20416  014670  D006               	goto	L5
 20417  014672                     l2053:
 20418                           
 20419                           ; BSR set to: 1
 20420                           
 20421                           ; BSR set to: 1
 20422  014672  0E00               	movlw	0
 20423  014674  6F29               	movwf	___fladd@b& (0+255),b
 20424  014676  0E00               	movlw	0
 20425  014678  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 20426  01467A  0E00               	movlw	0
 20427  01467C  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 20428  01467E                     L5:
 20429  01467E  0E00               	movlw	0
 20430  014680  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 20431                           
 20432                           ; BSR set to: 1
 20433                           
 20434                           ; BSR set to: 1
 20435  014682  5130               	movf	(___fladd@a+3)& (0+255),w,b
 20436  014684  0B80               	andlw	128
 20437  014686  6F3A               	movwf	___fladd@aexp& (0+255),b
 20438                           
 20439                           ; BSR set to: 1
 20440  014688  5139               	movf	___fladd@signs& (0+255),w,b
 20441  01468A  193A               	xorwf	___fladd@aexp& (0+255),w,b
 20442  01468C  A4D8               	btfss	status,2,c
 20443                           
 20444                           ; BSR set to: 1
 20445  01468E  8D39               	bsf	___fladd@signs& (0+255),6,b
 20446                           
 20447                           ; BSR set to: 1
 20448                           
 20449                           ; BSR set to: 1
 20450  014690  5130               	movf	(___fladd@a+3)& (0+255),w,b
 20451  014692  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 20452  014694  6F3A               	movwf	___fladd@aexp& (0+255),b
 20453                           
 20454                           ; BSR set to: 1
 20455  014696  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 20456                           
 20457                           ; BSR set to: 1
 20458  014698  813A               	bsf	___fladd@aexp& (0+255),0,b
 20459                           
 20460                           ; BSR set to: 1
 20461                           
 20462                           ; BSR set to: 1
 20463  01469A  513A               	movf	___fladd@aexp& (0+255),w,b
 20464  01469C  B4D8               	btfsc	status,2,c
 20465  01469E  D00D               	goto	l2058
 20466                           
 20467                           ; BSR set to: 1
 20468  0146A0  293A               	incf	___fladd@aexp& (0+255),w,b
 20469  0146A2  A4D8               	btfss	status,2,c
 20470  0146A4  D008               	goto	l2059
 20471                           
 20472                           ; BSR set to: 1
 20473  0146A6  0E00               	movlw	0
 20474  0146A8  6F2D               	movwf	___fladd@a& (0+255),b
 20475  0146AA  0E00               	movlw	0
 20476  0146AC  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 20477  0146AE  0E00               	movlw	0
 20478  0146B0  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 20479  0146B2  0E00               	movlw	0
 20480  0146B4  6F30               	movwf	(___fladd@a+3)& (0+255),b
 20481  0146B6                     l2059:
 20482                           
 20483                           ; BSR set to: 1
 20484                           
 20485                           ; BSR set to: 1
 20486  0146B6  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 20487  0146B8  D006               	goto	L6
 20488  0146BA                     l2058:
 20489                           
 20490                           ; BSR set to: 1
 20491                           
 20492                           ; BSR set to: 1
 20493  0146BA  0E00               	movlw	0
 20494  0146BC  6F2D               	movwf	___fladd@a& (0+255),b
 20495  0146BE  0E00               	movlw	0
 20496  0146C0  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 20497  0146C2  0E00               	movlw	0
 20498  0146C4  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 20499  0146C6                     L6:
 20500  0146C6  0E00               	movlw	0
 20501  0146C8  6F30               	movwf	(___fladd@a+3)& (0+255),b
 20502                           
 20503                           ; BSR set to: 1
 20504                           
 20505                           ; BSR set to: 1
 20506  0146CA  513B               	movf	___fladd@bexp& (0+255),w,b
 20507  0146CC  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 20508  0146CE  B0D8               	btfsc	status,0,c
 20509  0146D0  D022               	goto	l2061
 20510                           
 20511                           ; BSR set to: 1
 20512  0146D2  AD39               	btfss	___fladd@signs& (0+255),6,b
 20513  0146D4  D002               	goto	l2062
 20514                           
 20515                           ; BSR set to: 1
 20516  0146D6  0E80               	movlw	128
 20517  0146D8  1B39               	xorwf	___fladd@signs& (0+255),f,b
 20518  0146DA                     l2062:
 20519                           
 20520                           ; BSR set to: 1
 20521                           
 20522                           ; BSR set to: 1
 20523  0146DA  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 20524                           
 20525                           ; BSR set to: 1
 20526  0146DE  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 20527                           
 20528                           ; BSR set to: 1
 20529  0146E2  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 20530                           
 20531                           ; BSR set to: 1
 20532  0146E6  C129  F13C         	movff	___fladd@b,___fladd@grs
 20533                           
 20534                           ; BSR set to: 1
 20535  0146EA  C12D  F129         	movff	___fladd@a,___fladd@b
 20536                           
 20537                           ; BSR set to: 1
 20538  0146EE  C13C  F12D         	movff	___fladd@grs,___fladd@a
 20539                           
 20540                           ; BSR set to: 1
 20541  0146F2  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 20542                           
 20543                           ; BSR set to: 1
 20544  0146F6  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 20545                           
 20546                           ; BSR set to: 1
 20547  0146FA  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 20548                           
 20549                           ; BSR set to: 1
 20550  0146FE  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 20551                           
 20552                           ; BSR set to: 1
 20553  014702  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 20554                           
 20555                           ; BSR set to: 1
 20556  014706  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 20557                           
 20558                           ; BSR set to: 1
 20559  01470A  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 20560                           
 20561                           ; BSR set to: 1
 20562  01470E  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 20563                           
 20564                           ; BSR set to: 1
 20565  014712  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 20566  014716                     l2061:
 20567                           
 20568                           ; BSR set to: 1
 20569                           
 20570                           ; BSR set to: 1
 20571  014716  0E00               	movlw	0
 20572  014718  6F3C               	movwf	___fladd@grs& (0+255),b
 20573                           
 20574                           ; BSR set to: 1
 20575  01471A  513B               	movf	___fladd@bexp& (0+255),w,b
 20576  01471C  6F31               	movwf	??___fladd& (0+255),b
 20577  01471E  6B32               	clrf	(??___fladd+1)& (0+255),b
 20578  014720  1F31               	comf	??___fladd& (0+255),f,b
 20579  014722  1F32               	comf	(??___fladd+1)& (0+255),f,b
 20580  014724  4B31               	infsnz	??___fladd& (0+255),f,b
 20581  014726  2B32               	incf	(??___fladd+1)& (0+255),f,b
 20582  014728  513A               	movf	___fladd@aexp& (0+255),w,b
 20583  01472A  6F33               	movwf	(??___fladd+2)& (0+255),b
 20584  01472C  6B34               	clrf	(??___fladd+3)& (0+255),b
 20585  01472E  5131               	movf	??___fladd& (0+255),w,b
 20586  014730  2733               	addwf	(??___fladd+2)& (0+255),f,b
 20587  014732  5132               	movf	(??___fladd+1)& (0+255),w,b
 20588  014734  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 20589  014736  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 20590  014738  D02C               	goto	l2065
 20591  01473A  5134               	movf	(??___fladd+3)& (0+255),w,b
 20592  01473C  E104               	bnz	u22680
 20593  01473E  0E1A               	movlw	26
 20594  014740  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 20595  014742  A0D8               	btfss	status,0,c
 20596  014744  D026               	goto	l2065
 20597  014746                     u22680:
 20598                           
 20599                           ; BSR set to: 1
 20600  014746  5129               	movf	___fladd@b& (0+255),w,b
 20601  014748  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 20602  01474A  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 20603  01474C  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 20604  01474E  B4D8               	btfsc	status,2,c
 20605  014750  D002               	goto	u22690
 20606  014752  0E01               	movlw	1
 20607  014754  D001               	goto	u22700
 20608  014756                     u22690:
 20609  014756  0E00               	movlw	0
 20610  014758                     u22700:
 20611  014758  6F3C               	movwf	___fladd@grs& (0+255),b
 20612                           
 20613                           ; BSR set to: 1
 20614  01475A  0E00               	movlw	0
 20615  01475C  6F29               	movwf	___fladd@b& (0+255),b
 20616  01475E  0E00               	movlw	0
 20617  014760  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 20618  014762  0E00               	movlw	0
 20619  014764  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 20620  014766  0E00               	movlw	0
 20621  014768  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 20622                           
 20623                           ; BSR set to: 1
 20624  01476A  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 20625  01476E  D015               	goto	u22730
 20626  014770                     l2066:
 20627                           
 20628                           ; BSR set to: 1
 20629  014770  A13C               	btfss	___fladd@grs& (0+255),0,b
 20630  014772  D005               	goto	l2067
 20631                           
 20632                           ; BSR set to: 1
 20633  014774  90D8               	bcf	status,0,c
 20634  014776  313C               	rrcf	___fladd@grs& (0+255),w,b
 20635  014778  0901               	iorlw	1
 20636  01477A  6F3C               	movwf	___fladd@grs& (0+255),b
 20637  01477C  D002               	goto	l2068
 20638  01477E                     l2067:
 20639                           
 20640                           ; BSR set to: 1
 20641                           
 20642                           ; BSR set to: 1
 20643  01477E  90D8               	bcf	status,0,c
 20644  014780  333C               	rrcf	___fladd@grs& (0+255),f,b
 20645  014782                     l2068:
 20646                           
 20647                           ; BSR set to: 1
 20648                           
 20649                           ; BSR set to: 1
 20650  014782  B129               	btfsc	___fladd@b& (0+255),0,b
 20651                           
 20652                           ; BSR set to: 1
 20653  014784  8F3C               	bsf	___fladd@grs& (0+255),7,b
 20654                           
 20655                           ; BSR set to: 1
 20656                           
 20657                           ; BSR set to: 1
 20658  014786  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 20659  014788  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 20660  01478A  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 20661  01478C  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 20662  01478E  3329               	rrcf	___fladd@b& (0+255),f,b
 20663                           
 20664                           ; BSR set to: 1
 20665  014790  2B3B               	incf	___fladd@bexp& (0+255),f,b
 20666  014792                     l2065:
 20667                           
 20668                           ; BSR set to: 1
 20669  014792  513A               	movf	___fladd@aexp& (0+255),w,b
 20670  014794  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 20671  014796  A0D8               	btfss	status,0,c
 20672  014798  D7EB               	goto	l2066
 20673  01479A                     u22730:
 20674                           
 20675                           ; BSR set to: 1
 20676                           
 20677                           ; BSR set to: 1
 20678  01479A  BD39               	btfsc	___fladd@signs& (0+255),6,b
 20679  01479C  D029               	goto	l2071
 20680                           
 20681                           ; BSR set to: 1
 20682  01479E  513B               	movf	___fladd@bexp& (0+255),w,b
 20683  0147A0  A4D8               	btfss	status,2,c
 20684  0147A2  D009               	goto	l2072
 20685                           
 20686                           ; BSR set to: 1
 20687  0147A4  0E00               	movlw	0
 20688  0147A6  6F29               	movwf	?___fladd& (0+255),b
 20689  0147A8  0E00               	movlw	0
 20690  0147AA  6F2A               	movwf	(?___fladd+1)& (0+255),b
 20691  0147AC  0E00               	movlw	0
 20692  0147AE  6F2B               	movwf	(?___fladd+2)& (0+255),b
 20693  0147B0  0E00               	movlw	0
 20694  0147B2  6F2C               	movwf	(?___fladd+3)& (0+255),b
 20695                           
 20696                           ; BSR set to: 1
 20697  0147B4  0012               	return	
 20698  0147B6                     l2072:
 20699                           
 20700                           ; BSR set to: 1
 20701                           
 20702                           ; BSR set to: 1
 20703  0147B6  512D               	movf	___fladd@a& (0+255),w,b
 20704  0147B8  2729               	addwf	___fladd@b& (0+255),f,b
 20705  0147BA  512E               	movf	(___fladd@a+1)& (0+255),w,b
 20706  0147BC  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 20707  0147BE  512F               	movf	(___fladd@a+2)& (0+255),w,b
 20708  0147C0  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 20709  0147C2  5130               	movf	(___fladd@a+3)& (0+255),w,b
 20710  0147C4  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 20711                           
 20712                           ; BSR set to: 1
 20713  0147C6  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 20714  0147C8  D083               	goto	u22860
 20715                           
 20716                           ; BSR set to: 1
 20717  0147CA  A13C               	btfss	___fladd@grs& (0+255),0,b
 20718  0147CC  D006               	goto	l2075
 20719                           
 20720                           ; BSR set to: 1
 20721  0147CE  90D8               	bcf	status,0,c
 20722  0147D0  333C               	rrcf	___fladd@grs& (0+255),f,b
 20723  0147D2  513C               	movf	___fladd@grs& (0+255),w,b
 20724  0147D4  0901               	iorlw	1
 20725  0147D6  6F3C               	movwf	___fladd@grs& (0+255),b
 20726  0147D8  D002               	goto	l2076
 20727  0147DA                     l2075:
 20728                           
 20729                           ; BSR set to: 1
 20730                           
 20731                           ; BSR set to: 1
 20732  0147DA  90D8               	bcf	status,0,c
 20733  0147DC  333C               	rrcf	___fladd@grs& (0+255),f,b
 20734  0147DE                     l2076:
 20735                           
 20736                           ; BSR set to: 1
 20737                           
 20738                           ; BSR set to: 1
 20739  0147DE  B129               	btfsc	___fladd@b& (0+255),0,b
 20740                           
 20741                           ; BSR set to: 1
 20742  0147E0  8F3C               	bsf	___fladd@grs& (0+255),7,b
 20743                           
 20744                           ; BSR set to: 1
 20745                           
 20746                           ; BSR set to: 1
 20747  0147E2  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 20748  0147E4  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 20749  0147E6  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 20750  0147E8  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 20751  0147EA  3329               	rrcf	___fladd@b& (0+255),f,b
 20752                           
 20753                           ; BSR set to: 1
 20754  0147EC  2B3B               	incf	___fladd@bexp& (0+255),f,b
 20755                           
 20756                           ; BSR set to: 1
 20757  0147EE  D070               	goto	u22860
 20758  0147F0                     l2071:
 20759                           
 20760                           ; BSR set to: 1
 20761                           
 20762                           ; BSR set to: 1
 20763  0147F0  512D               	movf	___fladd@a& (0+255),w,b
 20764  0147F2  5D29               	subwf	___fladd@b& (0+255),w,b
 20765  0147F4  512E               	movf	(___fladd@a+1)& (0+255),w,b
 20766  0147F6  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 20767  0147F8  512F               	movf	(___fladd@a+2)& (0+255),w,b
 20768  0147FA  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 20769  0147FC  512C               	movf	(___fladd@b+3)& (0+255),w,b
 20770  0147FE  0A80               	xorlw	128
 20771  014800  6F31               	movwf	??___fladd& (0+255),b
 20772  014802  5130               	movf	(___fladd@a+3)& (0+255),w,b
 20773  014804  0A80               	xorlw	128
 20774  014806  5931               	subwfb	??___fladd& (0+255),w,b
 20775  014808  B0D8               	btfsc	status,0,c
 20776  01480A  D036               	goto	l2079
 20777                           
 20778                           ; BSR set to: 1
 20779  01480C  C129  F131         	movff	___fladd@b,??___fladd
 20780  014810  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 20781  014814  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 20782  014818  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 20783  01481C  1F31               	comf	??___fladd& (0+255),f,b
 20784  01481E  1F32               	comf	(??___fladd+1)& (0+255),f,b
 20785  014820  1F33               	comf	(??___fladd+2)& (0+255),f,b
 20786  014822  1F34               	comf	(??___fladd+3)& (0+255),f,b
 20787  014824  2B31               	incf	??___fladd& (0+255),f,b
 20788  014826  0E00               	movlw	0
 20789  014828  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 20790  01482A  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 20791  01482C  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 20792  01482E  512D               	movf	___fladd@a& (0+255),w,b
 20793  014830  2531               	addwf	??___fladd& (0+255),w,b
 20794  014832  6F35               	movwf	(??___fladd+4)& (0+255),b
 20795  014834  512E               	movf	(___fladd@a+1)& (0+255),w,b
 20796  014836  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 20797  014838  6F36               	movwf	(??___fladd+5)& (0+255),b
 20798  01483A  512F               	movf	(___fladd@a+2)& (0+255),w,b
 20799  01483C  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 20800  01483E  6F37               	movwf	(??___fladd+6)& (0+255),b
 20801  014840  5130               	movf	(___fladd@a+3)& (0+255),w,b
 20802  014842  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 20803  014844  6F38               	movwf	(??___fladd+7)& (0+255),b
 20804  014846  0EFF               	movlw	255
 20805  014848  2535               	addwf	(??___fladd+4)& (0+255),w,b
 20806  01484A  6F29               	movwf	___fladd@b& (0+255),b
 20807  01484C  0EFF               	movlw	255
 20808  01484E  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 20809  014850  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 20810  014852  0EFF               	movlw	255
 20811  014854  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 20812  014856  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 20813  014858  0EFF               	movlw	255
 20814  01485A  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 20815  01485C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 20816  01485E  0E80               	movlw	128
 20817  014860  1B39               	xorwf	___fladd@signs& (0+255),f,b
 20818                           
 20819                           ; BSR set to: 1
 20820  014862  6D3C               	negf	___fladd@grs& (0+255),b
 20821                           
 20822                           ; BSR set to: 1
 20823  014864  513C               	movf	___fladd@grs& (0+255),w,b
 20824  014866  A4D8               	btfss	status,2,c
 20825  014868  D00F               	goto	l2081
 20826                           
 20827                           ; BSR set to: 1
 20828  01486A  0E01               	movlw	1
 20829  01486C  2729               	addwf	___fladd@b& (0+255),f,b
 20830  01486E  0E00               	movlw	0
 20831  014870  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 20832  014872  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 20833  014874  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 20834                           
 20835                           ; BSR set to: 1
 20836  014876  D008               	goto	l2081
 20837  014878                     l2079:
 20838                           
 20839                           ; BSR set to: 1
 20840                           
 20841                           ; BSR set to: 1
 20842  014878  512D               	movf	___fladd@a& (0+255),w,b
 20843  01487A  5F29               	subwf	___fladd@b& (0+255),f,b
 20844  01487C  512E               	movf	(___fladd@a+1)& (0+255),w,b
 20845  01487E  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 20846  014880  512F               	movf	(___fladd@a+2)& (0+255),w,b
 20847  014882  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 20848  014884  5130               	movf	(___fladd@a+3)& (0+255),w,b
 20849  014886  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 20850  014888                     l2081:
 20851                           
 20852                           ; BSR set to: 1
 20853  014888  5129               	movf	___fladd@b& (0+255),w,b
 20854  01488A  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 20855  01488C  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 20856  01488E  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 20857  014890  A4D8               	btfss	status,2,c
 20858  014892  D01C               	goto	l2088
 20859                           
 20860                           ; BSR set to: 1
 20861  014894  513C               	movf	___fladd@grs& (0+255),w,b
 20862  014896  A4D8               	btfss	status,2,c
 20863  014898  D019               	goto	l2088
 20864                           
 20865                           ; BSR set to: 1
 20866  01489A  0E00               	movlw	0
 20867  01489C  6F29               	movwf	?___fladd& (0+255),b
 20868  01489E  0E00               	movlw	0
 20869  0148A0  6F2A               	movwf	(?___fladd+1)& (0+255),b
 20870  0148A2  0E00               	movlw	0
 20871  0148A4  6F2B               	movwf	(?___fladd+2)& (0+255),b
 20872  0148A6  0E00               	movlw	0
 20873  0148A8  6F2C               	movwf	(?___fladd+3)& (0+255),b
 20874                           
 20875                           ; BSR set to: 1
 20876  0148AA  0012               	return	
 20877  0148AC                     
 20878                           ; BSR set to: 1
 20879                           
 20880                           ; BSR set to: 1
 20881  0148AC  90D8               	bcf	status,0,c
 20882  0148AE  3729               	rlcf	___fladd@b& (0+255),f,b
 20883  0148B0  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 20884  0148B2  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 20885  0148B4  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 20886                           
 20887                           ; BSR set to: 1
 20888  0148B6  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 20889                           
 20890                           ; BSR set to: 1
 20891  0148B8  8129               	bsf	___fladd@b& (0+255),0,b
 20892                           
 20893                           ; BSR set to: 1
 20894                           
 20895                           ; BSR set to: 1
 20896  0148BA  A13C               	btfss	___fladd@grs& (0+255),0,b
 20897  0148BC  D002               	goto	l2086
 20898                           
 20899                           ; BSR set to: 1
 20900  0148BE  80D8               	bsf	status,0,c
 20901  0148C0  D001               	goto	L7
 20902  0148C2                     l2086:
 20903                           
 20904                           ; BSR set to: 1
 20905                           
 20906                           ; BSR set to: 1
 20907  0148C2  90D8               	bcf	status,0,c
 20908  0148C4                     L7:
 20909  0148C4  373C               	rlcf	___fladd@grs& (0+255),f,b
 20910                           
 20911                           ; BSR set to: 1
 20912                           
 20913                           ; BSR set to: 1
 20914  0148C6  513B               	movf	___fladd@bexp& (0+255),w,b
 20915  0148C8  A4D8               	btfss	status,2,c
 20916                           
 20917                           ; BSR set to: 1
 20918  0148CA  073B               	decf	___fladd@bexp& (0+255),f,b
 20919  0148CC                     l2088:
 20920                           
 20921                           ; BSR set to: 1
 20922                           
 20923                           ; BSR set to: 1
 20924                           
 20925                           ; BSR set to: 1
 20926  0148CC  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 20927  0148CE  D7EE               	goto	l2084
 20928  0148D0                     u22860:
 20929                           
 20930                           ; BSR set to: 1
 20931                           
 20932                           ; BSR set to: 1
 20933                           
 20934                           ; BSR set to: 1
 20935  0148D0  0E00               	movlw	0
 20936  0148D2  6F3A               	movwf	___fladd@aexp& (0+255),b
 20937                           
 20938                           ; BSR set to: 1
 20939  0148D4  AF3C               	btfss	___fladd@grs& (0+255),7,b
 20940  0148D6  D00A               	goto	l2093
 20941                           
 20942                           ; BSR set to: 1
 20943  0148D8  C13C  F131         	movff	___fladd@grs,??___fladd
 20944  0148DC  0E7F               	movlw	127
 20945  0148DE  1731               	andwf	??___fladd& (0+255),f,b
 20946  0148E0  A4D8               	btfss	status,2,c
 20947  0148E2  D002               	goto	u22890
 20948                           
 20949                           ; BSR set to: 1
 20950                           
 20951                           ; BSR set to: 1
 20952  0148E4  A129               	btfss	___fladd@b& (0+255),0,b
 20953  0148E6  D002               	goto	l2093
 20954  0148E8                     u22890:
 20955                           
 20956                           ; BSR set to: 1
 20957  0148E8  0E01               	movlw	1
 20958  0148EA  6F3A               	movwf	___fladd@aexp& (0+255),b
 20959  0148EC                     l2093:
 20960                           
 20961                           ; BSR set to: 1
 20962                           
 20963                           ; BSR set to: 1
 20964                           
 20965                           ; BSR set to: 1
 20966  0148EC  513A               	movf	___fladd@aexp& (0+255),w,b
 20967  0148EE  B4D8               	btfsc	status,2,c
 20968  0148F0  D020               	goto	l2096
 20969                           
 20970                           ; BSR set to: 1
 20971  0148F2  0E01               	movlw	1
 20972  0148F4  2729               	addwf	___fladd@b& (0+255),f,b
 20973  0148F6  0E00               	movlw	0
 20974  0148F8  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 20975  0148FA  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 20976  0148FC  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 20977                           
 20978                           ; BSR set to: 1
 20979  0148FE  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 20980  014900  D018               	goto	l2096
 20981                           
 20982                           ; BSR set to: 1
 20983  014902  C129  F131         	movff	___fladd@b,??___fladd
 20984  014906  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 20985  01490A  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 20986  01490E  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 20987  014912  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 20988  014914  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 20989  014916  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 20990  014918  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 20991  01491A  3331               	rrcf	??___fladd& (0+255),f,b
 20992  01491C  C131  F129         	movff	??___fladd,___fladd@b
 20993  014920  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 20994  014924  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 20995  014928  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 20996  01492C  293B               	incf	___fladd@bexp& (0+255),w,b
 20997  01492E  A4D8               	btfss	status,2,c
 20998                           
 20999                           ; BSR set to: 1
 21000  014930  2B3B               	incf	___fladd@bexp& (0+255),f,b
 21001  014932                     l2096:
 21002                           
 21003                           ; BSR set to: 1
 21004                           
 21005                           ; BSR set to: 1
 21006                           
 21007                           ; BSR set to: 1
 21008                           
 21009                           ; BSR set to: 1
 21010  014932  293B               	incf	___fladd@bexp& (0+255),w,b
 21011  014934  B4D8               	btfsc	status,2,c
 21012  014936  D003               	goto	u22940
 21013                           
 21014                           ; BSR set to: 1
 21015  014938  513B               	movf	___fladd@bexp& (0+255),w,b
 21016  01493A  A4D8               	btfss	status,2,c
 21017  01493C  D00D               	goto	l2100
 21018  01493E                     u22940:
 21019                           
 21020                           ; BSR set to: 1
 21021                           
 21022                           ; BSR set to: 1
 21023  01493E  0E00               	movlw	0
 21024  014940  6F29               	movwf	___fladd@b& (0+255),b
 21025  014942  0E00               	movlw	0
 21026  014944  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 21027  014946  0E00               	movlw	0
 21028  014948  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 21029  01494A  0E00               	movlw	0
 21030  01494C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 21031  01494E  513B               	movf	___fladd@bexp& (0+255),w,b
 21032  014950  A4D8               	btfss	status,2,c
 21033  014952  D002               	goto	l2100
 21034                           
 21035                           ; BSR set to: 1
 21036  014954  0E00               	movlw	0
 21037  014956  6F39               	movwf	___fladd@signs& (0+255),b
 21038  014958                     l2100:
 21039                           
 21040                           ; BSR set to: 1
 21041                           
 21042                           ; BSR set to: 1
 21043                           
 21044                           ; BSR set to: 1
 21045  014958  A13B               	btfss	___fladd@bexp& (0+255),0,b
 21046  01495A  D002               	goto	l2101
 21047                           
 21048                           ; BSR set to: 1
 21049  01495C  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 21050  01495E  D001               	goto	l2102
 21051  014960                     l2101:
 21052                           
 21053                           ; BSR set to: 1
 21054                           
 21055                           ; BSR set to: 1
 21056  014960  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 21057  014962                     l2102:
 21058                           
 21059                           ; BSR set to: 1
 21060                           
 21061                           ; BSR set to: 1
 21062  014962  90D8               	bcf	status,0,c
 21063  014964  313B               	rrcf	___fladd@bexp& (0+255),w,b
 21064  014966  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 21065                           
 21066                           ; BSR set to: 1
 21067  014968  BF39               	btfsc	___fladd@signs& (0+255),7,b
 21068                           
 21069                           ; BSR set to: 1
 21070  01496A  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 21071                           
 21072                           ; BSR set to: 1
 21073                           
 21074                           ; BSR set to: 1
 21075  01496C  C129  F129         	movff	___fladd@b,?___fladd
 21076  014970  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 21077  014974  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 21078  014978  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 21079  01497C  0012               	return	
 21080  01497E                     __end_of___fladd:
 21081                           	opt stack 0
 21082                           tblptru	equ	0xFF8
 21083                           tblptrh	equ	0xFF7
 21084                           tblptrl	equ	0xFF6
 21085                           tablat	equ	0xFF5
 21086                           prodh	equ	0xFF4
 21087                           prodl	equ	0xFF3
 21088                           intcon	equ	0xFF2
 21089                           indf0	equ	0xFEF
 21090                           postinc0	equ	0xFEE
 21091                           fsr0h	equ	0xFEA
 21092                           fsr0l	equ	0xFE9
 21093                           wreg	equ	0xFE8
 21094                           indf1	equ	0xFE7
 21095                           postdec1	equ	0xFE5
 21096                           plusw1	equ	0xFE3
 21097                           fsr1h	equ	0xFE2
 21098                           fsr1l	equ	0xFE1
 21099                           indf2	equ	0xFDF
 21100                           postinc2	equ	0xFDE
 21101                           postdec2	equ	0xFDD
 21102                           plusw2	equ	0xFDB
 21103                           fsr2h	equ	0xFDA
 21104                           fsr2l	equ	0xFD9
 21105                           status	equ	0xFD8
 21106                           
 21107 ;; *************** function ___flneg *****************
 21108 ;; Defined at:
 21109 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 21110 ;; Parameters:    Size  Location     Type
 21111 ;;  f1              4   37[BANK1 ] unsigned char 
 21112 ;; Auto vars:     Size  Location     Type
 21113 ;;		None
 21114 ;; Return value:  Size  Location     Type
 21115 ;;                  4   37[BANK1 ] unsigned char 
 21116 ;; Registers used:
 21117 ;;		wreg, status,2, status,0
 21118 ;; Tracked objects:
 21119 ;;		On entry : 0/0
 21120 ;;		On exit  : 0/0
 21121 ;;		Unchanged: 0/0
 21122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21123 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21126 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21127 ;;Total ram usage:        4 bytes
 21128 ;; Hardware stack levels used:    1
 21129 ;; Hardware stack levels required when called:   13
 21130 ;; This function calls:
 21131 ;;		Nothing
 21132 ;; This function is called by:
 21133 ;;		_ringBufferLUT
 21134 ;;		_printf
 21135 ;; This function uses a non-reentrant model
 21136 ;;
 21137                           
 21138                           	psect	text46
 21139  01854A                     __ptext46:
 21140                           	opt stack 0
 21141  01854A                     ___flneg:
 21142                           	opt stack 14
 21143                           
 21144                           ; BSR set to: 1
 21145                           ;incstack = 0
 21146  01854A  0101               	movlb	1	; () banked
 21147  01854C  5125               	movf	___flneg@f1& (0+255),w,b
 21148  01854E  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 21149  018550  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 21150  018552  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 21151  018554  B4D8               	btfsc	status,2,c
 21152  018556  D008               	goto	l1790
 21153                           
 21154                           ; BSR set to: 1
 21155  018558  0E00               	movlw	0
 21156  01855A  1B25               	xorwf	___flneg@f1& (0+255),f,b
 21157  01855C  0E00               	movlw	0
 21158  01855E  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 21159  018560  0E00               	movlw	0
 21160  018562  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 21161  018564  0E80               	movlw	128
 21162  018566  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 21163  018568                     l1790:
 21164                           
 21165                           ; BSR set to: 1
 21166                           
 21167                           ; BSR set to: 1
 21168  018568  C125  F125         	movff	___flneg@f1,?___flneg
 21169  01856C  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 21170  018570  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 21171  018574  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 21172  018578  0012               	return	
 21173  01857A                     __end_of___flneg:
 21174                           	opt stack 0
 21175                           tblptru	equ	0xFF8
 21176                           tblptrh	equ	0xFF7
 21177                           tblptrl	equ	0xFF6
 21178                           tablat	equ	0xFF5
 21179                           prodh	equ	0xFF4
 21180                           prodl	equ	0xFF3
 21181                           intcon	equ	0xFF2
 21182                           indf0	equ	0xFEF
 21183                           postinc0	equ	0xFEE
 21184                           fsr0h	equ	0xFEA
 21185                           fsr0l	equ	0xFE9
 21186                           wreg	equ	0xFE8
 21187                           indf1	equ	0xFE7
 21188                           postdec1	equ	0xFE5
 21189                           plusw1	equ	0xFE3
 21190                           fsr1h	equ	0xFE2
 21191                           fsr1l	equ	0xFE1
 21192                           indf2	equ	0xFDF
 21193                           postinc2	equ	0xFDE
 21194                           postdec2	equ	0xFDD
 21195                           plusw2	equ	0xFDB
 21196                           fsr2h	equ	0xFDA
 21197                           fsr2l	equ	0xFD9
 21198                           status	equ	0xFD8
 21199                           
 21200 ;; *************** function ___flge *****************
 21201 ;; Defined at:
 21202 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 21203 ;; Parameters:    Size  Location     Type
 21204 ;;  ff1             4   23[BANK1 ] unsigned char 
 21205 ;;  ff2             4   27[BANK1 ] unsigned char 
 21206 ;; Auto vars:     Size  Location     Type
 21207 ;;		None
 21208 ;; Return value:  Size  Location     Type
 21209 ;;		None               void
 21210 ;; Registers used:
 21211 ;;		wreg, status,2, status,0
 21212 ;; Tracked objects:
 21213 ;;		On entry : 0/0
 21214 ;;		On exit  : 0/0
 21215 ;;		Unchanged: 0/0
 21216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21217 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21219 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21220 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21221 ;;Total ram usage:       12 bytes
 21222 ;; Hardware stack levels used:    1
 21223 ;; Hardware stack levels required when called:   13
 21224 ;; This function calls:
 21225 ;;		Nothing
 21226 ;; This function is called by:
 21227 ;;		_printf
 21228 ;; This function uses a non-reentrant model
 21229 ;;
 21230                           
 21231                           	psect	text47
 21232  016D60                     __ptext47:
 21233                           	opt stack 0
 21234  016D60                     ___flge:
 21235                           	opt stack 14
 21236                           
 21237                           ; BSR set to: 1
 21238                           ;incstack = 0
 21239  016D60  0E00               	movlw	0
 21240  016D62  0101               	movlb	1	; () banked
 21241  016D64  1517               	andwf	___flge@ff1& (0+255),w,b
 21242  016D66  6F1F               	movwf	??___flge& (0+255),b
 21243  016D68  0E00               	movlw	0
 21244  016D6A  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 21245  016D6C  6F20               	movwf	(??___flge+1)& (0+255),b
 21246  016D6E  0E80               	movlw	128
 21247  016D70  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 21248  016D72  6F21               	movwf	(??___flge+2)& (0+255),b
 21249  016D74  0E7F               	movlw	127
 21250  016D76  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 21251  016D78  6F22               	movwf	(??___flge+3)& (0+255),b
 21252  016D7A  511F               	movf	??___flge& (0+255),w,b
 21253  016D7C  1120               	iorwf	(??___flge+1)& (0+255),w,b
 21254  016D7E  1121               	iorwf	(??___flge+2)& (0+255),w,b
 21255  016D80  1122               	iorwf	(??___flge+3)& (0+255),w,b
 21256  016D82  A4D8               	btfss	status,2,c
 21257  016D84  D008               	goto	l1783
 21258                           
 21259                           ; BSR set to: 1
 21260  016D86  0E00               	movlw	0
 21261  016D88  6F17               	movwf	___flge@ff1& (0+255),b
 21262  016D8A  0E00               	movlw	0
 21263  016D8C  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 21264  016D8E  0E00               	movlw	0
 21265  016D90  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 21266  016D92  0E00               	movlw	0
 21267  016D94  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 21268  016D96                     l1783:
 21269                           
 21270                           ; BSR set to: 1
 21271                           
 21272                           ; BSR set to: 1
 21273  016D96  0E00               	movlw	0
 21274  016D98  151B               	andwf	___flge@ff2& (0+255),w,b
 21275  016D9A  6F1F               	movwf	??___flge& (0+255),b
 21276  016D9C  0E00               	movlw	0
 21277  016D9E  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 21278  016DA0  6F20               	movwf	(??___flge+1)& (0+255),b
 21279  016DA2  0E80               	movlw	128
 21280  016DA4  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 21281  016DA6  6F21               	movwf	(??___flge+2)& (0+255),b
 21282  016DA8  0E7F               	movlw	127
 21283  016DAA  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 21284  016DAC  6F22               	movwf	(??___flge+3)& (0+255),b
 21285  016DAE  511F               	movf	??___flge& (0+255),w,b
 21286  016DB0  1120               	iorwf	(??___flge+1)& (0+255),w,b
 21287  016DB2  1121               	iorwf	(??___flge+2)& (0+255),w,b
 21288  016DB4  1122               	iorwf	(??___flge+3)& (0+255),w,b
 21289  016DB6  A4D8               	btfss	status,2,c
 21290  016DB8  D008               	goto	l1784
 21291                           
 21292                           ; BSR set to: 1
 21293  016DBA  0E00               	movlw	0
 21294  016DBC  6F1B               	movwf	___flge@ff2& (0+255),b
 21295  016DBE  0E00               	movlw	0
 21296  016DC0  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 21297  016DC2  0E00               	movlw	0
 21298  016DC4  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 21299  016DC6  0E00               	movlw	0
 21300  016DC8  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 21301  016DCA                     l1784:
 21302                           
 21303                           ; BSR set to: 1
 21304                           
 21305                           ; BSR set to: 1
 21306  016DCA  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 21307  016DCC  D01D               	goto	l1785
 21308                           
 21309                           ; BSR set to: 1
 21310  016DCE  C117  F11F         	movff	___flge@ff1,??___flge
 21311  016DD2  C118  F120         	movff	___flge@ff1+1,??___flge+1
 21312  016DD6  C119  F121         	movff	___flge@ff1+2,??___flge+2
 21313  016DDA  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 21314  016DDE  1F1F               	comf	??___flge& (0+255),f,b
 21315  016DE0  1F20               	comf	(??___flge+1)& (0+255),f,b
 21316  016DE2  1F21               	comf	(??___flge+2)& (0+255),f,b
 21317  016DE4  1F22               	comf	(??___flge+3)& (0+255),f,b
 21318  016DE6  2B1F               	incf	??___flge& (0+255),f,b
 21319  016DE8  0E00               	movlw	0
 21320  016DEA  2320               	addwfc	(??___flge+1)& (0+255),f,b
 21321  016DEC  2321               	addwfc	(??___flge+2)& (0+255),f,b
 21322  016DEE  2322               	addwfc	(??___flge+3)& (0+255),f,b
 21323  016DF0  0E00               	movlw	0
 21324  016DF2  251F               	addwf	??___flge& (0+255),w,b
 21325  016DF4  6F17               	movwf	___flge@ff1& (0+255),b
 21326  016DF6  0E00               	movlw	0
 21327  016DF8  2120               	addwfc	(??___flge+1)& (0+255),w,b
 21328  016DFA  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 21329  016DFC  0E00               	movlw	0
 21330  016DFE  2121               	addwfc	(??___flge+2)& (0+255),w,b
 21331  016E00  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 21332  016E02  0E80               	movlw	128
 21333  016E04  2122               	addwfc	(??___flge+3)& (0+255),w,b
 21334  016E06  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 21335  016E08                     l1785:
 21336                           
 21337                           ; BSR set to: 1
 21338                           
 21339                           ; BSR set to: 1
 21340  016E08  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 21341  016E0A  D01D               	goto	l1786
 21342                           
 21343                           ; BSR set to: 1
 21344  016E0C  C11B  F11F         	movff	___flge@ff2,??___flge
 21345  016E10  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 21346  016E14  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 21347  016E18  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 21348  016E1C  1F1F               	comf	??___flge& (0+255),f,b
 21349  016E1E  1F20               	comf	(??___flge+1)& (0+255),f,b
 21350  016E20  1F21               	comf	(??___flge+2)& (0+255),f,b
 21351  016E22  1F22               	comf	(??___flge+3)& (0+255),f,b
 21352  016E24  2B1F               	incf	??___flge& (0+255),f,b
 21353  016E26  0E00               	movlw	0
 21354  016E28  2320               	addwfc	(??___flge+1)& (0+255),f,b
 21355  016E2A  2321               	addwfc	(??___flge+2)& (0+255),f,b
 21356  016E2C  2322               	addwfc	(??___flge+3)& (0+255),f,b
 21357  016E2E  0E00               	movlw	0
 21358  016E30  251F               	addwf	??___flge& (0+255),w,b
 21359  016E32  6F1B               	movwf	___flge@ff2& (0+255),b
 21360  016E34  0E00               	movlw	0
 21361  016E36  2120               	addwfc	(??___flge+1)& (0+255),w,b
 21362  016E38  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 21363  016E3A  0E00               	movlw	0
 21364  016E3C  2121               	addwfc	(??___flge+2)& (0+255),w,b
 21365  016E3E  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 21366  016E40  0E80               	movlw	128
 21367  016E42  2122               	addwfc	(??___flge+3)& (0+255),w,b
 21368  016E44  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 21369  016E46                     l1786:
 21370                           
 21371                           ; BSR set to: 1
 21372  016E46  0E00               	movlw	0
 21373  016E48  1B17               	xorwf	___flge@ff1& (0+255),f,b
 21374  016E4A  0E00               	movlw	0
 21375  016E4C  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 21376  016E4E  0E00               	movlw	0
 21377  016E50  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 21378  016E52  0E80               	movlw	128
 21379  016E54  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 21380  016E56  0E00               	movlw	0
 21381  016E58  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 21382  016E5A  0E00               	movlw	0
 21383  016E5C  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 21384  016E5E  0E00               	movlw	0
 21385  016E60  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 21386  016E62  0E80               	movlw	128
 21387  016E64  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 21388  016E66  511B               	movf	___flge@ff2& (0+255),w,b
 21389  016E68  5D17               	subwf	___flge@ff1& (0+255),w,b
 21390  016E6A  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 21391  016E6C  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 21392  016E6E  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 21393  016E70  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 21394  016E72  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 21395  016E74  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 21396  016E76  B0D8               	btfsc	status,0,c
 21397  016E78  D002               	goto	l17014
 21398                           
 21399                           ; BSR set to: 1
 21400  016E7A  90D8               	bcf	status,0,c
 21401  016E7C  0012               	return	
 21402  016E7E                     l17014:
 21403                           
 21404                           ; BSR set to: 1
 21405                           
 21406                           ; BSR set to: 1
 21407  016E7E  80D8               	bsf	status,0,c
 21408                           
 21409                           ; BSR set to: 1
 21410  016E80  0012               	return	
 21411  016E82                     __end_of___flge:
 21412                           	opt stack 0
 21413                           tblptru	equ	0xFF8
 21414                           tblptrh	equ	0xFF7
 21415                           tblptrl	equ	0xFF6
 21416                           tablat	equ	0xFF5
 21417                           prodh	equ	0xFF4
 21418                           prodl	equ	0xFF3
 21419                           intcon	equ	0xFF2
 21420                           indf0	equ	0xFEF
 21421                           postinc0	equ	0xFEE
 21422                           fsr0h	equ	0xFEA
 21423                           fsr0l	equ	0xFE9
 21424                           wreg	equ	0xFE8
 21425                           indf1	equ	0xFE7
 21426                           postdec1	equ	0xFE5
 21427                           plusw1	equ	0xFE3
 21428                           fsr1h	equ	0xFE2
 21429                           fsr1l	equ	0xFE1
 21430                           indf2	equ	0xFDF
 21431                           postinc2	equ	0xFDE
 21432                           postdec2	equ	0xFDD
 21433                           plusw2	equ	0xFDB
 21434                           fsr2h	equ	0xFDA
 21435                           fsr2l	equ	0xFD9
 21436                           status	equ	0xFD8
 21437                           
 21438 ;; *************** function _getCauseOfReset *****************
 21439 ;; Defined at:
 21440 ;;		line 11 in file "cause_of_reset.c"
 21441 ;; Parameters:    Size  Location     Type
 21442 ;;		None
 21443 ;; Auto vars:     Size  Location     Type
 21444 ;;  return_reset    1   23[BANK1 ] enum E17455
 21445 ;; Return value:  Size  Location     Type
 21446 ;;                  1    wreg      enum E17948
 21447 ;; Registers used:
 21448 ;;		wreg, status,2
 21449 ;; Tracked objects:
 21450 ;;		On entry : 0/0
 21451 ;;		On exit  : 0/0
 21452 ;;		Unchanged: 0/0
 21453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21455 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21457 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21458 ;;Total ram usage:        1 bytes
 21459 ;; Hardware stack levels used:    1
 21460 ;; Hardware stack levels required when called:   13
 21461 ;; This function calls:
 21462 ;;		Nothing
 21463 ;; This function is called by:
 21464 ;;		_main
 21465 ;; This function uses a non-reentrant model
 21466 ;;
 21467                           
 21468                           	psect	text48
 21469  017FAA                     __ptext48:
 21470                           	opt stack 0
 21471  017FAA                     _getCauseOfReset:
 21472                           	opt stack 17
 21473                           
 21474                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 21475                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 21476                           
 21477                           ; BSR set to: 1
 21478                           ;incstack = 0
 21479  017FAA  AED7               	btfss	4055,7,c	;volatile
 21480  017FAC  D002               	goto	l1302
 21481                           
 21482                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 21483  017FAE  0E07               	movlw	7
 21484  017FB0  D019               	goto	L14
 21485  017FB2                     l1302:
 21486                           
 21487                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 21488  017FB2  ACD7               	btfss	4055,6,c	;volatile
 21489  017FB4  D002               	goto	l1304
 21490                           
 21491                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 21492  017FB6  0E08               	movlw	8
 21493  017FB8  D015               	goto	L14
 21494  017FBA                     l1304:
 21495                           
 21496                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 21497  017FBA  BAD7               	btfsc	4055,5,c	;volatile
 21498  017FBC  D002               	goto	l1306
 21499                           
 21500                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 21501  017FBE  0E05               	movlw	5
 21502  017FC0  D011               	goto	L14
 21503  017FC2                     l1306:
 21504                           
 21505                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 21506  017FC2  B6D7               	btfsc	4055,3,c	;volatile
 21507  017FC4  D002               	goto	l1308
 21508                           
 21509                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 21510  017FC6  0E03               	movlw	3
 21511  017FC8  D00D               	goto	L14
 21512  017FCA                     l1308:
 21513                           
 21514                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 21515  017FCA  B4D7               	btfsc	4055,2,c	;volatile
 21516  017FCC  D002               	goto	l1310
 21517                           
 21518                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 21519  017FCE  0E06               	movlw	6
 21520  017FD0  D009               	goto	L14
 21521  017FD2                     l1310:
 21522                           
 21523                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 21524  017FD2  B2D7               	btfsc	4055,1,c	;volatile
 21525  017FD4  D002               	goto	l1312
 21526                           
 21527                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 21528  017FD6  0E01               	movlw	1
 21529  017FD8  D005               	goto	L14
 21530  017FDA                     l1312:
 21531                           
 21532                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 21533  017FDA  B0D7               	btfsc	4055,0,c	;volatile
 21534  017FDC  D002               	goto	l1314
 21535                           
 21536                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 21537  017FDE  0E02               	movlw	2
 21538  017FE0  D001               	goto	L14
 21539  017FE2                     l1314:
 21540                           
 21541                           ;cause_of_reset.c: 60: else {
 21542                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 21543                           
 21544                           ; BSR set to: 1
 21545  017FE2  0E00               	movlw	0
 21546  017FE4                     L14:
 21547  017FE4  0101               	movlb	1	; () banked
 21548  017FE6  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 21549                           
 21550                           ; BSR set to: 1
 21551                           ;cause_of_reset.c: 64: }
 21552                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 21553                           
 21554                           ; BSR set to: 1
 21555                           
 21556                           ; BSR set to: 1
 21557                           
 21558                           ; BSR set to: 1
 21559                           
 21560                           ; BSR set to: 1
 21561                           
 21562                           ; BSR set to: 1
 21563                           
 21564                           ; BSR set to: 1
 21565                           
 21566                           ; BSR set to: 1
 21567  017FE8  9ED7               	bcf	4055,7,c	;volatile
 21568                           
 21569                           ; BSR set to: 1
 21570                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 21571  017FEA  9CD7               	bcf	4055,6,c	;volatile
 21572                           
 21573                           ; BSR set to: 1
 21574                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 21575  017FEC  8AD7               	bsf	4055,5,c	;volatile
 21576                           
 21577                           ; BSR set to: 1
 21578                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 21579  017FEE  88D7               	bsf	4055,4,c	;volatile
 21580                           
 21581                           ; BSR set to: 1
 21582                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 21583  017FF0  86D7               	bsf	4055,3,c	;volatile
 21584                           
 21585                           ; BSR set to: 1
 21586                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 21587  017FF2  84D7               	bsf	4055,2,c	;volatile
 21588                           
 21589                           ; BSR set to: 1
 21590                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 21591  017FF4  82D7               	bsf	4055,1,c	;volatile
 21592                           
 21593                           ; BSR set to: 1
 21594                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 21595  017FF6  80D7               	bsf	4055,0,c	;volatile
 21596                           
 21597                           ;cause_of_reset.c: 76: return return_reset_cause;
 21598  017FF8  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 21599  017FFA  0012               	return	
 21600  017FFC                     __end_of_getCauseOfReset:
 21601                           	opt stack 0
 21602                           tblptru	equ	0xFF8
 21603                           tblptrh	equ	0xFF7
 21604                           tblptrl	equ	0xFF6
 21605                           tablat	equ	0xFF5
 21606                           prodh	equ	0xFF4
 21607                           prodl	equ	0xFF3
 21608                           intcon	equ	0xFF2
 21609                           indf0	equ	0xFEF
 21610                           postinc0	equ	0xFEE
 21611                           fsr0h	equ	0xFEA
 21612                           fsr0l	equ	0xFE9
 21613                           wreg	equ	0xFE8
 21614                           indf1	equ	0xFE7
 21615                           postdec1	equ	0xFE5
 21616                           plusw1	equ	0xFE3
 21617                           fsr1h	equ	0xFE2
 21618                           fsr1l	equ	0xFE1
 21619                           indf2	equ	0xFDF
 21620                           postinc2	equ	0xFDE
 21621                           postdec2	equ	0xFDD
 21622                           plusw2	equ	0xFDB
 21623                           fsr2h	equ	0xFDA
 21624                           fsr2l	equ	0xFD9
 21625                           status	equ	0xFD8
 21626                           
 21627 ;; *************** function _SYSTEM_Initialize *****************
 21628 ;; Defined at:
 21629 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21630 ;; Parameters:    Size  Location     Type
 21631 ;;		None
 21632 ;; Auto vars:     Size  Location     Type
 21633 ;;		None
 21634 ;; Return value:  Size  Location     Type
 21635 ;;                  1    wreg      void 
 21636 ;; Registers used:
 21637 ;;		wreg, status,2, status,0, cstack
 21638 ;; Tracked objects:
 21639 ;;		On entry : 0/0
 21640 ;;		On exit  : 0/0
 21641 ;;		Unchanged: 0/0
 21642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21647 ;;Total ram usage:        0 bytes
 21648 ;; Hardware stack levels used:    1
 21649 ;; Hardware stack levels required when called:   15
 21650 ;; This function calls:
 21651 ;;		_ADCC_Initialize
 21652 ;;		_EUSART2_Initialize
 21653 ;;		_FVR_Initialize
 21654 ;;		_HLVD_Initialize
 21655 ;;		_INTERRUPT_Initialize
 21656 ;;		_OSCILLATOR_Initialize
 21657 ;;		_PIN_MANAGER_Initialize
 21658 ;;		_PMD_Initialize
 21659 ;;		_TMR5_Initialize
 21660 ;;		_TMR6_Initialize
 21661 ;;		_TMR7_Initialize
 21662 ;; This function is called by:
 21663 ;;		_main
 21664 ;; This function uses a non-reentrant model
 21665 ;;
 21666                           
 21667                           	psect	text49
 21668  01857A                     __ptext49:
 21669                           	opt stack 0
 21670  01857A                     _SYSTEM_Initialize:
 21671                           	opt stack 15
 21672                           
 21673                           ;mcc.c: 52: INTERRUPT_Initialize();
 21674                           
 21675                           ; BSR set to: 1
 21676                           ;incstack = 0
 21677  01857A  ECEE  F0C3         	call	_INTERRUPT_Initialize	;wreg free
 21678                           
 21679                           ;mcc.c: 53: PMD_Initialize();
 21680  01857E  ECB7  F0C3         	call	_PMD_Initialize	;wreg free
 21681                           
 21682                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 21683  018582  ECE1  F0BA         	call	_PIN_MANAGER_Initialize	;wreg free
 21684                           
 21685                           ;mcc.c: 55: OSCILLATOR_Initialize();
 21686  018586  ECC5  F0C3         	call	_OSCILLATOR_Initialize	;wreg free
 21687                           
 21688                           ;mcc.c: 56: HLVD_Initialize();
 21689  01858A  EC36  F0C4         	call	_HLVD_Initialize	;wreg free
 21690                           
 21691                           ;mcc.c: 57: FVR_Initialize();
 21692  01858E  EC81  F0C4         	call	_FVR_Initialize	;wreg free
 21693                           
 21694                           ;mcc.c: 58: TMR7_Initialize();
 21695  018592  EC26  F0C0         	call	_TMR7_Initialize	;wreg free
 21696                           
 21697                           ;mcc.c: 59: TMR6_Initialize();
 21698  018596  EC74  F0C2         	call	_TMR6_Initialize	;wreg free
 21699                           
 21700                           ;mcc.c: 60: ADCC_Initialize();
 21701  01859A  EC79  F0BF         	call	_ADCC_Initialize	;wreg free
 21702                           
 21703                           ;mcc.c: 61: TMR5_Initialize();
 21704  01859E  EC99  F0C0         	call	_TMR5_Initialize	;wreg free
 21705                           
 21706                           ;mcc.c: 62: EUSART2_Initialize();
 21707  0185A2  EC79  F0BE         	call	_EUSART2_Initialize	;wreg free
 21708  0185A6  0012               	return		;funcret
 21709  0185A8                     __end_of_SYSTEM_Initialize:
 21710                           	opt stack 0
 21711                           tblptru	equ	0xFF8
 21712                           tblptrh	equ	0xFF7
 21713                           tblptrl	equ	0xFF6
 21714                           tablat	equ	0xFF5
 21715                           prodh	equ	0xFF4
 21716                           prodl	equ	0xFF3
 21717                           intcon	equ	0xFF2
 21718                           indf0	equ	0xFEF
 21719                           postinc0	equ	0xFEE
 21720                           fsr0h	equ	0xFEA
 21721                           fsr0l	equ	0xFE9
 21722                           wreg	equ	0xFE8
 21723                           indf1	equ	0xFE7
 21724                           postdec1	equ	0xFE5
 21725                           plusw1	equ	0xFE3
 21726                           fsr1h	equ	0xFE2
 21727                           fsr1l	equ	0xFE1
 21728                           indf2	equ	0xFDF
 21729                           postinc2	equ	0xFDE
 21730                           postdec2	equ	0xFDD
 21731                           plusw2	equ	0xFDB
 21732                           fsr2h	equ	0xFDA
 21733                           fsr2l	equ	0xFD9
 21734                           status	equ	0xFD8
 21735                           
 21736 ;; *************** function _TMR7_Initialize *****************
 21737 ;; Defined at:
 21738 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 21739 ;; Parameters:    Size  Location     Type
 21740 ;;		None
 21741 ;; Auto vars:     Size  Location     Type
 21742 ;;		None
 21743 ;; Return value:  Size  Location     Type
 21744 ;;                  1    wreg      void 
 21745 ;; Registers used:
 21746 ;;		wreg, status,2, status,0, cstack
 21747 ;; Tracked objects:
 21748 ;;		On entry : 0/0
 21749 ;;		On exit  : 0/0
 21750 ;;		Unchanged: 0/0
 21751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21754 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21755 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21756 ;;Total ram usage:        2 bytes
 21757 ;; Hardware stack levels used:    1
 21758 ;; Hardware stack levels required when called:   14
 21759 ;; This function calls:
 21760 ;;		_TMR7_SetInterruptHandler
 21761 ;; This function is called by:
 21762 ;;		_SYSTEM_Initialize
 21763 ;; This function uses a non-reentrant model
 21764 ;;
 21765                           
 21766                           	psect	text50
 21767  01804C                     __ptext50:
 21768                           	opt stack 0
 21769  01804C                     _TMR7_Initialize:
 21770                           	opt stack 15
 21771                           
 21772                           ;tmr7.c: 69: T7GCON = 0x00;
 21773                           
 21774                           ;incstack = 0
 21775  01804C  0E00               	movlw	0
 21776  01804E  010F               	movlb	15	; () banked
 21777  018050  6F31               	movwf	49,b	;volatile
 21778                           
 21779                           ;tmr7.c: 72: T7GATE = 0x00;
 21780  018052  0E00               	movlw	0
 21781  018054  6F32               	movwf	50,b	;volatile
 21782                           
 21783                           ;tmr7.c: 75: T7CLK = 0x03;
 21784  018056  0E03               	movlw	3
 21785  018058  6F33               	movwf	51,b	;volatile
 21786                           
 21787                           ;tmr7.c: 78: TMR7H = 0xEC;
 21788  01805A  0EEC               	movlw	236
 21789  01805C  6F2F               	movwf	47,b	;volatile
 21790                           
 21791                           ;tmr7.c: 81: TMR7L = 0x78;
 21792  01805E  0E78               	movlw	120
 21793  018060  6F2E               	movwf	46,b	;volatile
 21794                           
 21795                           ; BSR set to: 15
 21796                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 21797  018062  512E               	movf	46,w,b	;volatile
 21798  018064  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 21799  018068  0101               	movlb	1	; () banked
 21800  01806A  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 21801  01806C  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 21802  018070  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 21803  018072  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 21804  018074  6FD9               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 21805  018076  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 21806  018078  6FDA               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 21807                           
 21808                           ; BSR set to: 1
 21809                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 21810  01807A  010E               	movlb	14	; () banked
 21811  01807C  9D38               	bcf	56,6,b	;volatile
 21812                           
 21813                           ; BSR set to: 14
 21814                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 21815  01807E  8D2E               	bsf	46,6,b	;volatile
 21816                           
 21817                           ; BSR set to: 14
 21818                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 21819  018080  0E36               	movlw	low _TMR7_DefaultInterruptHandler
 21820  018082  0101               	movlb	1	; () banked
 21821  018084  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 21822  018086  0E89               	movlw	high _TMR7_DefaultInterruptHandler
 21823  018088  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 21824  01808A  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 21825  01808C  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 21826  01808E  EC45  F0C4         	call	_TMR7_SetInterruptHandler	;wreg free
 21827                           
 21828                           ;tmr7.c: 96: T7CON = 0x31;
 21829  018092  0E31               	movlw	49
 21830  018094  010F               	movlb	15	; () banked
 21831  018096  6F30               	movwf	48,b	;volatile
 21832                           
 21833                           ; BSR set to: 15
 21834  018098  0012               	return		;funcret
 21835  01809A                     __end_of_TMR7_Initialize:
 21836                           	opt stack 0
 21837                           tblptru	equ	0xFF8
 21838                           tblptrh	equ	0xFF7
 21839                           tblptrl	equ	0xFF6
 21840                           tablat	equ	0xFF5
 21841                           prodh	equ	0xFF4
 21842                           prodl	equ	0xFF3
 21843                           intcon	equ	0xFF2
 21844                           indf0	equ	0xFEF
 21845                           postinc0	equ	0xFEE
 21846                           fsr0h	equ	0xFEA
 21847                           fsr0l	equ	0xFE9
 21848                           wreg	equ	0xFE8
 21849                           indf1	equ	0xFE7
 21850                           postdec1	equ	0xFE5
 21851                           plusw1	equ	0xFE3
 21852                           fsr1h	equ	0xFE2
 21853                           fsr1l	equ	0xFE1
 21854                           indf2	equ	0xFDF
 21855                           postinc2	equ	0xFDE
 21856                           postdec2	equ	0xFDD
 21857                           plusw2	equ	0xFDB
 21858                           fsr2h	equ	0xFDA
 21859                           fsr2l	equ	0xFD9
 21860                           status	equ	0xFD8
 21861                           
 21862 ;; *************** function _TMR7_SetInterruptHandler *****************
 21863 ;; Defined at:
 21864 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 21865 ;; Parameters:    Size  Location     Type
 21866 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 21867 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 21868 ;; Auto vars:     Size  Location     Type
 21869 ;;		None
 21870 ;; Return value:  Size  Location     Type
 21871 ;;                  1    wreg      void 
 21872 ;; Registers used:
 21873 ;;		wreg, status,2, status,0
 21874 ;; Tracked objects:
 21875 ;;		On entry : 0/0
 21876 ;;		On exit  : 0/0
 21877 ;;		Unchanged: 0/0
 21878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21879 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21882 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21883 ;;Total ram usage:        3 bytes
 21884 ;; Hardware stack levels used:    1
 21885 ;; Hardware stack levels required when called:   13
 21886 ;; This function calls:
 21887 ;;		Nothing
 21888 ;; This function is called by:
 21889 ;;		_TMR7_Initialize
 21890 ;;		_main
 21891 ;; This function uses a non-reentrant model
 21892 ;;
 21893                           
 21894                           	psect	text51
 21895  01888A                     __ptext51:
 21896                           	opt stack 0
 21897  01888A                     _TMR7_SetInterruptHandler:
 21898                           	opt stack 17
 21899                           
 21900                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 21901                           
 21902                           ; BSR set to: 15
 21903                           ;incstack = 0
 21904  01888A  C117  F257         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 21905  01888E  C118  F258         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 21906  018892  C119  F259         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 21907  018896  0012               	return		;funcret
 21908  018898                     __end_of_TMR7_SetInterruptHandler:
 21909                           	opt stack 0
 21910                           tblptru	equ	0xFF8
 21911                           tblptrh	equ	0xFF7
 21912                           tblptrl	equ	0xFF6
 21913                           tablat	equ	0xFF5
 21914                           prodh	equ	0xFF4
 21915                           prodl	equ	0xFF3
 21916                           intcon	equ	0xFF2
 21917                           indf0	equ	0xFEF
 21918                           postinc0	equ	0xFEE
 21919                           fsr0h	equ	0xFEA
 21920                           fsr0l	equ	0xFE9
 21921                           wreg	equ	0xFE8
 21922                           indf1	equ	0xFE7
 21923                           postdec1	equ	0xFE5
 21924                           plusw1	equ	0xFE3
 21925                           fsr1h	equ	0xFE2
 21926                           fsr1l	equ	0xFE1
 21927                           indf2	equ	0xFDF
 21928                           postinc2	equ	0xFDE
 21929                           postdec2	equ	0xFDD
 21930                           plusw2	equ	0xFDB
 21931                           fsr2h	equ	0xFDA
 21932                           fsr2l	equ	0xFD9
 21933                           status	equ	0xFD8
 21934                           
 21935 ;; *************** function _TMR6_Initialize *****************
 21936 ;; Defined at:
 21937 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 21938 ;; Parameters:    Size  Location     Type
 21939 ;;		None
 21940 ;; Auto vars:     Size  Location     Type
 21941 ;;		None
 21942 ;; Return value:  Size  Location     Type
 21943 ;;                  1    wreg      void 
 21944 ;; Registers used:
 21945 ;;		wreg, status,2, status,0, cstack
 21946 ;; Tracked objects:
 21947 ;;		On entry : 0/0
 21948 ;;		On exit  : 0/0
 21949 ;;		Unchanged: 0/0
 21950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21955 ;;Total ram usage:        0 bytes
 21956 ;; Hardware stack levels used:    1
 21957 ;; Hardware stack levels required when called:   14
 21958 ;; This function calls:
 21959 ;;		_TMR6_SetInterruptHandler
 21960 ;; This function is called by:
 21961 ;;		_SYSTEM_Initialize
 21962 ;; This function uses a non-reentrant model
 21963 ;;
 21964                           
 21965                           	psect	text52
 21966  0184E8                     __ptext52:
 21967                           	opt stack 0
 21968  0184E8                     _TMR6_Initialize:
 21969                           	opt stack 15
 21970                           
 21971                           ;tmr6.c: 69: T6CLKCON = 0x04;
 21972                           
 21973                           ;incstack = 0
 21974  0184E8  0E04               	movlw	4
 21975  0184EA  6EB3               	movwf	4019,c	;volatile
 21976                           
 21977                           ;tmr6.c: 72: T6HLT = 0x20;
 21978  0184EC  0E20               	movlw	32
 21979  0184EE  6EB2               	movwf	4018,c	;volatile
 21980                           
 21981                           ;tmr6.c: 75: T6RST = 0x00;
 21982  0184F0  0E00               	movlw	0
 21983  0184F2  6EB4               	movwf	4020,c	;volatile
 21984                           
 21985                           ;tmr6.c: 78: T6PR = 0xF1;
 21986  0184F4  0EF1               	movlw	241
 21987  0184F6  6EB0               	movwf	4016,c	;volatile
 21988                           
 21989                           ;tmr6.c: 81: T6TMR = 0x00;
 21990  0184F8  0E00               	movlw	0
 21991  0184FA  6EAF               	movwf	4015,c	;volatile
 21992                           
 21993                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 21994  0184FC  010E               	movlb	14	; () banked
 21995  0184FE  9B38               	bcf	56,5,b	;volatile
 21996                           
 21997                           ; BSR set to: 14
 21998                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 21999  018500  8B2E               	bsf	46,5,b	;volatile
 22000                           
 22001                           ; BSR set to: 14
 22002                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 22003  018502  0E38               	movlw	low _TMR6_DefaultInterruptHandler
 22004  018504  0101               	movlb	1	; () banked
 22005  018506  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 22006  018508  0E89               	movlw	high _TMR6_DefaultInterruptHandler
 22007  01850A  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 22008  01850C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22009  01850E  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 22010  018510  EC4C  F0C4         	call	_TMR6_SetInterruptHandler	;wreg free
 22011                           
 22012                           ;tmr6.c: 93: T6CON = 0xBF;
 22013  018514  0EBF               	movlw	191
 22014  018516  6EB1               	movwf	4017,c	;volatile
 22015  018518  0012               	return		;funcret
 22016  01851A                     __end_of_TMR6_Initialize:
 22017                           	opt stack 0
 22018                           tblptru	equ	0xFF8
 22019                           tblptrh	equ	0xFF7
 22020                           tblptrl	equ	0xFF6
 22021                           tablat	equ	0xFF5
 22022                           prodh	equ	0xFF4
 22023                           prodl	equ	0xFF3
 22024                           intcon	equ	0xFF2
 22025                           indf0	equ	0xFEF
 22026                           postinc0	equ	0xFEE
 22027                           fsr0h	equ	0xFEA
 22028                           fsr0l	equ	0xFE9
 22029                           wreg	equ	0xFE8
 22030                           indf1	equ	0xFE7
 22031                           postdec1	equ	0xFE5
 22032                           plusw1	equ	0xFE3
 22033                           fsr1h	equ	0xFE2
 22034                           fsr1l	equ	0xFE1
 22035                           indf2	equ	0xFDF
 22036                           postinc2	equ	0xFDE
 22037                           postdec2	equ	0xFDD
 22038                           plusw2	equ	0xFDB
 22039                           fsr2h	equ	0xFDA
 22040                           fsr2l	equ	0xFD9
 22041                           status	equ	0xFD8
 22042                           
 22043 ;; *************** function _TMR6_SetInterruptHandler *****************
 22044 ;; Defined at:
 22045 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 22046 ;; Parameters:    Size  Location     Type
 22047 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 22048 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 22049 ;; Auto vars:     Size  Location     Type
 22050 ;;		None
 22051 ;; Return value:  Size  Location     Type
 22052 ;;                  1    wreg      void 
 22053 ;; Registers used:
 22054 ;;		wreg, status,2, status,0
 22055 ;; Tracked objects:
 22056 ;;		On entry : 0/0
 22057 ;;		On exit  : 0/0
 22058 ;;		Unchanged: 0/0
 22059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22060 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22063 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22064 ;;Total ram usage:        3 bytes
 22065 ;; Hardware stack levels used:    1
 22066 ;; Hardware stack levels required when called:   13
 22067 ;; This function calls:
 22068 ;;		Nothing
 22069 ;; This function is called by:
 22070 ;;		_TMR6_Initialize
 22071 ;;		_main
 22072 ;; This function uses a non-reentrant model
 22073 ;;
 22074                           
 22075                           	psect	text53
 22076  018898                     __ptext53:
 22077                           	opt stack 0
 22078  018898                     _TMR6_SetInterruptHandler:
 22079                           	opt stack 17
 22080                           
 22081                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 22082                           
 22083                           ;incstack = 0
 22084  018898  C117  F25D         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 22085  01889C  C118  F25E         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 22086  0188A0  C119  F25F         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 22087  0188A4  0012               	return		;funcret
 22088  0188A6                     __end_of_TMR6_SetInterruptHandler:
 22089                           	opt stack 0
 22090                           tblptru	equ	0xFF8
 22091                           tblptrh	equ	0xFF7
 22092                           tblptrl	equ	0xFF6
 22093                           tablat	equ	0xFF5
 22094                           prodh	equ	0xFF4
 22095                           prodl	equ	0xFF3
 22096                           intcon	equ	0xFF2
 22097                           indf0	equ	0xFEF
 22098                           postinc0	equ	0xFEE
 22099                           fsr0h	equ	0xFEA
 22100                           fsr0l	equ	0xFE9
 22101                           wreg	equ	0xFE8
 22102                           indf1	equ	0xFE7
 22103                           postdec1	equ	0xFE5
 22104                           plusw1	equ	0xFE3
 22105                           fsr1h	equ	0xFE2
 22106                           fsr1l	equ	0xFE1
 22107                           indf2	equ	0xFDF
 22108                           postinc2	equ	0xFDE
 22109                           postdec2	equ	0xFDD
 22110                           plusw2	equ	0xFDB
 22111                           fsr2h	equ	0xFDA
 22112                           fsr2l	equ	0xFD9
 22113                           status	equ	0xFD8
 22114                           
 22115 ;; *************** function _TMR5_Initialize *****************
 22116 ;; Defined at:
 22117 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 22118 ;; Parameters:    Size  Location     Type
 22119 ;;		None
 22120 ;; Auto vars:     Size  Location     Type
 22121 ;;		None
 22122 ;; Return value:  Size  Location     Type
 22123 ;;                  1    wreg      void 
 22124 ;; Registers used:
 22125 ;;		wreg, status,2, status,0, cstack
 22126 ;; Tracked objects:
 22127 ;;		On entry : 0/0
 22128 ;;		On exit  : 0/0
 22129 ;;		Unchanged: 0/0
 22130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22133 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22134 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22135 ;;Total ram usage:        2 bytes
 22136 ;; Hardware stack levels used:    1
 22137 ;; Hardware stack levels required when called:   14
 22138 ;; This function calls:
 22139 ;;		_TMR5_SetInterruptHandler
 22140 ;; This function is called by:
 22141 ;;		_SYSTEM_Initialize
 22142 ;; This function uses a non-reentrant model
 22143 ;;
 22144                           
 22145                           	psect	text54
 22146  018132                     __ptext54:
 22147                           	opt stack 0
 22148  018132                     _TMR5_Initialize:
 22149                           	opt stack 15
 22150                           
 22151                           ;tmr5.c: 69: T5GCON = 0x00;
 22152                           
 22153                           ;incstack = 0
 22154  018132  0E00               	movlw	0
 22155  018134  6EC4               	movwf	4036,c	;volatile
 22156                           
 22157                           ;tmr5.c: 72: T5GATE = 0x00;
 22158  018136  0E00               	movlw	0
 22159  018138  6EC5               	movwf	4037,c	;volatile
 22160                           
 22161                           ;tmr5.c: 75: T5CLK = 0x01;
 22162  01813A  0E01               	movlw	1
 22163  01813C  6EC6               	movwf	4038,c	;volatile
 22164                           
 22165                           ;tmr5.c: 78: TMR5H = 0x00;
 22166  01813E  0E00               	movlw	0
 22167  018140  6EC2               	movwf	4034,c	;volatile
 22168                           
 22169                           ;tmr5.c: 81: TMR5L = 0x00;
 22170  018142  0E00               	movlw	0
 22171  018144  6EC1               	movwf	4033,c	;volatile
 22172                           
 22173                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 22174  018146  50C1               	movf	4033,w,c	;volatile
 22175  018148  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 22176  01814C  0101               	movlb	1	; () banked
 22177  01814E  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 22178  018150  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 22179  018154  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 22180  018156  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 22181  018158  6FD7               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 22182  01815A  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 22183  01815C  6FD8               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 22184                           
 22185                           ; BSR set to: 1
 22186                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 22187  01815E  010E               	movlb	14	; () banked
 22188  018160  9938               	bcf	56,4,b	;volatile
 22189                           
 22190                           ; BSR set to: 14
 22191                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 22192  018162  892E               	bsf	46,4,b	;volatile
 22193                           
 22194                           ; BSR set to: 14
 22195                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 22196  018164  0E3A               	movlw	low _TMR5_DefaultInterruptHandler
 22197  018166  0101               	movlb	1	; () banked
 22198  018168  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 22199  01816A  0E89               	movlw	high _TMR5_DefaultInterruptHandler
 22200  01816C  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 22201  01816E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22202  018170  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 22203  018172  EC53  F0C4         	call	_TMR5_SetInterruptHandler	;wreg free
 22204                           
 22205                           ;tmr5.c: 96: T5CON = 0x13;
 22206  018176  0E13               	movlw	19
 22207  018178  6EC3               	movwf	4035,c	;volatile
 22208  01817A  0012               	return		;funcret
 22209  01817C                     __end_of_TMR5_Initialize:
 22210                           	opt stack 0
 22211                           tblptru	equ	0xFF8
 22212                           tblptrh	equ	0xFF7
 22213                           tblptrl	equ	0xFF6
 22214                           tablat	equ	0xFF5
 22215                           prodh	equ	0xFF4
 22216                           prodl	equ	0xFF3
 22217                           intcon	equ	0xFF2
 22218                           indf0	equ	0xFEF
 22219                           postinc0	equ	0xFEE
 22220                           fsr0h	equ	0xFEA
 22221                           fsr0l	equ	0xFE9
 22222                           wreg	equ	0xFE8
 22223                           indf1	equ	0xFE7
 22224                           postdec1	equ	0xFE5
 22225                           plusw1	equ	0xFE3
 22226                           fsr1h	equ	0xFE2
 22227                           fsr1l	equ	0xFE1
 22228                           indf2	equ	0xFDF
 22229                           postinc2	equ	0xFDE
 22230                           postdec2	equ	0xFDD
 22231                           plusw2	equ	0xFDB
 22232                           fsr2h	equ	0xFDA
 22233                           fsr2l	equ	0xFD9
 22234                           status	equ	0xFD8
 22235                           
 22236 ;; *************** function _TMR5_SetInterruptHandler *****************
 22237 ;; Defined at:
 22238 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 22239 ;; Parameters:    Size  Location     Type
 22240 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 22241 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22242 ;; Auto vars:     Size  Location     Type
 22243 ;;		None
 22244 ;; Return value:  Size  Location     Type
 22245 ;;                  1    wreg      void 
 22246 ;; Registers used:
 22247 ;;		wreg, status,2, status,0
 22248 ;; Tracked objects:
 22249 ;;		On entry : 0/0
 22250 ;;		On exit  : 0/0
 22251 ;;		Unchanged: 0/0
 22252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22253 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22256 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22257 ;;Total ram usage:        3 bytes
 22258 ;; Hardware stack levels used:    1
 22259 ;; Hardware stack levels required when called:   13
 22260 ;; This function calls:
 22261 ;;		Nothing
 22262 ;; This function is called by:
 22263 ;;		_TMR5_Initialize
 22264 ;; This function uses a non-reentrant model
 22265 ;;
 22266                           
 22267                           	psect	text55
 22268  0188A6                     __ptext55:
 22269                           	opt stack 0
 22270  0188A6                     _TMR5_SetInterruptHandler:
 22271                           	opt stack 15
 22272                           
 22273                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 22274                           
 22275                           ;incstack = 0
 22276  0188A6  C117  F254         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 22277  0188AA  C118  F255         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 22278  0188AE  C119  F256         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 22279  0188B2  0012               	return		;funcret
 22280  0188B4                     __end_of_TMR5_SetInterruptHandler:
 22281                           	opt stack 0
 22282                           tblptru	equ	0xFF8
 22283                           tblptrh	equ	0xFF7
 22284                           tblptrl	equ	0xFF6
 22285                           tablat	equ	0xFF5
 22286                           prodh	equ	0xFF4
 22287                           prodl	equ	0xFF3
 22288                           intcon	equ	0xFF2
 22289                           indf0	equ	0xFEF
 22290                           postinc0	equ	0xFEE
 22291                           fsr0h	equ	0xFEA
 22292                           fsr0l	equ	0xFE9
 22293                           wreg	equ	0xFE8
 22294                           indf1	equ	0xFE7
 22295                           postdec1	equ	0xFE5
 22296                           plusw1	equ	0xFE3
 22297                           fsr1h	equ	0xFE2
 22298                           fsr1l	equ	0xFE1
 22299                           indf2	equ	0xFDF
 22300                           postinc2	equ	0xFDE
 22301                           postdec2	equ	0xFDD
 22302                           plusw2	equ	0xFDB
 22303                           fsr2h	equ	0xFDA
 22304                           fsr2l	equ	0xFD9
 22305                           status	equ	0xFD8
 22306                           
 22307 ;; *************** function _PMD_Initialize *****************
 22308 ;; Defined at:
 22309 ;;		line 83 in file "mcc_generated_files/mcc.c"
 22310 ;; Parameters:    Size  Location     Type
 22311 ;;		None
 22312 ;; Auto vars:     Size  Location     Type
 22313 ;;		None
 22314 ;; Return value:  Size  Location     Type
 22315 ;;                  1    wreg      void 
 22316 ;; Registers used:
 22317 ;;		wreg, status,2
 22318 ;; Tracked objects:
 22319 ;;		On entry : 0/0
 22320 ;;		On exit  : 0/0
 22321 ;;		Unchanged: 0/0
 22322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22327 ;;Total ram usage:        0 bytes
 22328 ;; Hardware stack levels used:    1
 22329 ;; Hardware stack levels required when called:   13
 22330 ;; This function calls:
 22331 ;;		Nothing
 22332 ;; This function is called by:
 22333 ;;		_SYSTEM_Initialize
 22334 ;; This function uses a non-reentrant model
 22335 ;;
 22336                           
 22337                           	psect	text56
 22338  01876E                     __ptext56:
 22339                           	opt stack 0
 22340  01876E                     _PMD_Initialize:
 22341                           	opt stack 16
 22342                           
 22343                           ;mcc.c: 86: PMD0 = 0x00;
 22344                           
 22345                           ;incstack = 0
 22346  01876E  0E00               	movlw	0
 22347  018770  010E               	movlb	14	; () banked
 22348  018772  6F4C               	movwf	76,b	;volatile
 22349                           
 22350                           ;mcc.c: 88: PMD1 = 0x00;
 22351  018774  0E00               	movlw	0
 22352  018776  6F4D               	movwf	77,b	;volatile
 22353                           
 22354                           ;mcc.c: 90: PMD2 = 0x00;
 22355  018778  0E00               	movlw	0
 22356  01877A  6F4E               	movwf	78,b	;volatile
 22357                           
 22358                           ;mcc.c: 92: PMD3 = 0x00;
 22359  01877C  0E00               	movlw	0
 22360  01877E  6F4F               	movwf	79,b	;volatile
 22361                           
 22362                           ;mcc.c: 94: PMD4 = 0x00;
 22363  018780  0E00               	movlw	0
 22364  018782  6F50               	movwf	80,b	;volatile
 22365                           
 22366                           ;mcc.c: 96: PMD5 = 0x00;
 22367  018784  0E00               	movlw	0
 22368  018786  6F51               	movwf	81,b	;volatile
 22369                           
 22370                           ; BSR set to: 14
 22371  018788  0012               	return		;funcret
 22372  01878A                     __end_of_PMD_Initialize:
 22373                           	opt stack 0
 22374                           tblptru	equ	0xFF8
 22375                           tblptrh	equ	0xFF7
 22376                           tblptrl	equ	0xFF6
 22377                           tablat	equ	0xFF5
 22378                           prodh	equ	0xFF4
 22379                           prodl	equ	0xFF3
 22380                           intcon	equ	0xFF2
 22381                           indf0	equ	0xFEF
 22382                           postinc0	equ	0xFEE
 22383                           fsr0h	equ	0xFEA
 22384                           fsr0l	equ	0xFE9
 22385                           wreg	equ	0xFE8
 22386                           indf1	equ	0xFE7
 22387                           postdec1	equ	0xFE5
 22388                           plusw1	equ	0xFE3
 22389                           fsr1h	equ	0xFE2
 22390                           fsr1l	equ	0xFE1
 22391                           indf2	equ	0xFDF
 22392                           postinc2	equ	0xFDE
 22393                           postdec2	equ	0xFDD
 22394                           plusw2	equ	0xFDB
 22395                           fsr2h	equ	0xFDA
 22396                           fsr2l	equ	0xFD9
 22397                           status	equ	0xFD8
 22398                           
 22399 ;; *************** function _PIN_MANAGER_Initialize *****************
 22400 ;; Defined at:
 22401 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22402 ;; Parameters:    Size  Location     Type
 22403 ;;		None
 22404 ;; Auto vars:     Size  Location     Type
 22405 ;;		None
 22406 ;; Return value:  Size  Location     Type
 22407 ;;                  1    wreg      void 
 22408 ;; Registers used:
 22409 ;;		wreg, status,2
 22410 ;; Tracked objects:
 22411 ;;		On entry : 0/0
 22412 ;;		On exit  : 0/0
 22413 ;;		Unchanged: 0/0
 22414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22419 ;;Total ram usage:        0 bytes
 22420 ;; Hardware stack levels used:    1
 22421 ;; Hardware stack levels required when called:   13
 22422 ;; This function calls:
 22423 ;;		Nothing
 22424 ;; This function is called by:
 22425 ;;		_SYSTEM_Initialize
 22426 ;; This function uses a non-reentrant model
 22427 ;;
 22428                           
 22429                           	psect	text57
 22430  0175C2                     __ptext57:
 22431                           	opt stack 0
 22432  0175C2                     _PIN_MANAGER_Initialize:
 22433                           	opt stack 16
 22434                           
 22435                           ;pin_manager.c: 62: LATE = 0x00;
 22436                           
 22437                           ; BSR set to: 14
 22438                           ;incstack = 0
 22439  0175C2  0E00               	movlw	0
 22440  0175C4  6E7D               	movwf	3965,c	;volatile
 22441                           
 22442                           ;pin_manager.c: 63: LATD = 0x00;
 22443  0175C6  0E00               	movlw	0
 22444  0175C8  6E7C               	movwf	3964,c	;volatile
 22445                           
 22446                           ;pin_manager.c: 64: LATA = 0x00;
 22447  0175CA  0E00               	movlw	0
 22448  0175CC  6E79               	movwf	3961,c	;volatile
 22449                           
 22450                           ;pin_manager.c: 65: LATF = 0x00;
 22451  0175CE  0E00               	movlw	0
 22452  0175D0  6E7E               	movwf	3966,c	;volatile
 22453                           
 22454                           ;pin_manager.c: 66: LATB = 0x00;
 22455  0175D2  0E00               	movlw	0
 22456  0175D4  6E7A               	movwf	3962,c	;volatile
 22457                           
 22458                           ;pin_manager.c: 67: LATG = 0x00;
 22459  0175D6  0E00               	movlw	0
 22460  0175D8  6E7F               	movwf	3967,c	;volatile
 22461                           
 22462                           ;pin_manager.c: 68: LATC = 0x00;
 22463  0175DA  0E00               	movlw	0
 22464  0175DC  6E7B               	movwf	3963,c	;volatile
 22465                           
 22466                           ;pin_manager.c: 69: LATH = 0x00;
 22467  0175DE  0E00               	movlw	0
 22468  0175E0  6E80               	movwf	3968,c	;volatile
 22469                           
 22470                           ;pin_manager.c: 74: TRISE = 0xFF;
 22471  0175E2  6885               	setf	3973,c	;volatile
 22472                           
 22473                           ;pin_manager.c: 75: TRISF = 0xF0;
 22474  0175E4  0EF0               	movlw	240
 22475  0175E6  6E86               	movwf	3974,c	;volatile
 22476                           
 22477                           ;pin_manager.c: 76: TRISA = 0xFF;
 22478  0175E8  6881               	setf	3969,c	;volatile
 22479                           
 22480                           ;pin_manager.c: 77: TRISG = 0x5C;
 22481  0175EA  0E5C               	movlw	92
 22482  0175EC  6E87               	movwf	3975,c	;volatile
 22483                           
 22484                           ;pin_manager.c: 78: TRISB = 0xFF;
 22485  0175EE  6882               	setf	3970,c	;volatile
 22486                           
 22487                           ;pin_manager.c: 79: TRISH = 0x0F;
 22488  0175F0  0E0F               	movlw	15
 22489  0175F2  6E88               	movwf	3976,c	;volatile
 22490                           
 22491                           ;pin_manager.c: 80: TRISC = 0xFF;
 22492  0175F4  6883               	setf	3971,c	;volatile
 22493                           
 22494                           ;pin_manager.c: 81: TRISD = 0xFF;
 22495  0175F6  6884               	setf	3972,c	;volatile
 22496                           
 22497                           ;pin_manager.c: 86: ANSELD = 0xFF;
 22498  0175F8  010E               	movlb	14	; () banked
 22499  0175FA  69A7               	setf	167,b	;volatile
 22500                           
 22501                           ; BSR set to: 14
 22502                           ;pin_manager.c: 87: ANSELB = 0xFF;
 22503  0175FC  699A               	setf	154,b	;volatile
 22504                           
 22505                           ; BSR set to: 14
 22506                           ;pin_manager.c: 88: ANSELE = 0xFF;
 22507  0175FE  69AF               	setf	175,b	;volatile
 22508                           
 22509                           ;pin_manager.c: 89: ANSELG = 0x3C;
 22510  017600  0E3C               	movlw	60
 22511  017602  6FBC               	movwf	188,b	;volatile
 22512                           
 22513                           ;pin_manager.c: 90: ANSELF = 0xF0;
 22514  017604  0EF0               	movlw	240
 22515  017606  6FB4               	movwf	180,b	;volatile
 22516                           
 22517                           ; BSR set to: 14
 22518                           ;pin_manager.c: 91: ANSELA = 0xFF;
 22519  017608  6992               	setf	146,b	;volatile
 22520                           
 22521                           ;pin_manager.c: 96: WPUD = 0x00;
 22522  01760A  0E00               	movlw	0
 22523  01760C  6FA6               	movwf	166,b	;volatile
 22524                           
 22525                           ;pin_manager.c: 97: WPUF = 0x00;
 22526  01760E  0E00               	movlw	0
 22527  017610  6FB3               	movwf	179,b	;volatile
 22528                           
 22529                           ;pin_manager.c: 98: WPUE = 0x00;
 22530  017612  0E00               	movlw	0
 22531  017614  6FAE               	movwf	174,b	;volatile
 22532                           
 22533                           ;pin_manager.c: 99: WPUB = 0x00;
 22534  017616  0E00               	movlw	0
 22535  017618  6F99               	movwf	153,b	;volatile
 22536                           
 22537                           ;pin_manager.c: 100: WPUG = 0x00;
 22538  01761A  0E00               	movlw	0
 22539  01761C  6FBB               	movwf	187,b	;volatile
 22540                           
 22541                           ;pin_manager.c: 101: WPUA = 0x00;
 22542  01761E  0E00               	movlw	0
 22543  017620  6F91               	movwf	145,b	;volatile
 22544                           
 22545                           ;pin_manager.c: 102: WPUC = 0x00;
 22546  017622  0E00               	movlw	0
 22547  017624  6FA1               	movwf	161,b	;volatile
 22548                           
 22549                           ;pin_manager.c: 103: WPUH = 0x00;
 22550  017626  0E00               	movlw	0
 22551  017628  6FC0               	movwf	192,b	;volatile
 22552                           
 22553                           ;pin_manager.c: 108: ODCONE = 0x00;
 22554  01762A  0E00               	movlw	0
 22555  01762C  6FAD               	movwf	173,b	;volatile
 22556                           
 22557                           ;pin_manager.c: 109: ODCONF = 0x01;
 22558  01762E  0E01               	movlw	1
 22559  017630  6FB2               	movwf	178,b	;volatile
 22560                           
 22561                           ;pin_manager.c: 110: ODCONA = 0x00;
 22562  017632  0E00               	movlw	0
 22563  017634  6F90               	movwf	144,b	;volatile
 22564                           
 22565                           ;pin_manager.c: 111: ODCONG = 0x00;
 22566  017636  0E00               	movlw	0
 22567  017638  6FBA               	movwf	186,b	;volatile
 22568                           
 22569                           ;pin_manager.c: 112: ODCONB = 0x00;
 22570  01763A  0E00               	movlw	0
 22571  01763C  6F98               	movwf	152,b	;volatile
 22572                           
 22573                           ;pin_manager.c: 113: ODCONH = 0x00;
 22574  01763E  0E00               	movlw	0
 22575  017640  6FBF               	movwf	191,b	;volatile
 22576                           
 22577                           ;pin_manager.c: 114: ODCONC = 0x00;
 22578  017642  0E00               	movlw	0
 22579  017644  6FA0               	movwf	160,b	;volatile
 22580                           
 22581                           ;pin_manager.c: 115: ODCOND = 0x00;
 22582  017646  0E00               	movlw	0
 22583  017648  6FA5               	movwf	165,b	;volatile
 22584                           
 22585                           ; BSR set to: 14
 22586                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 22587  01764A  698F               	setf	143,b	;volatile
 22588                           
 22589                           ; BSR set to: 14
 22590                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 22591  01764C  6997               	setf	151,b	;volatile
 22592                           
 22593                           ; BSR set to: 14
 22594                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 22595  01764E  699F               	setf	159,b	;volatile
 22596                           
 22597                           ; BSR set to: 14
 22598                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 22599  017650  69A4               	setf	164,b	;volatile
 22600                           
 22601                           ; BSR set to: 14
 22602                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 22603  017652  69AC               	setf	172,b	;volatile
 22604                           
 22605                           ; BSR set to: 14
 22606                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 22607  017654  69B1               	setf	177,b	;volatile
 22608                           
 22609                           ; BSR set to: 14
 22610                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 22611  017656  69B9               	setf	185,b	;volatile
 22612                           
 22613                           ; BSR set to: 14
 22614                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 22615  017658  69BE               	setf	190,b	;volatile
 22616                           
 22617                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 22618  01765A  0E0E               	movlw	14
 22619  01765C  6F89               	movwf	137,b	;volatile
 22620                           
 22621                           ;pin_manager.c: 137: RX2PPS = 0x36;
 22622  01765E  0E36               	movlw	54
 22623  017660  6F11               	movwf	17,b	;volatile
 22624                           
 22625                           ; BSR set to: 14
 22626  017662  0012               	return		;funcret
 22627  017664                     __end_of_PIN_MANAGER_Initialize:
 22628                           	opt stack 0
 22629                           tblptru	equ	0xFF8
 22630                           tblptrh	equ	0xFF7
 22631                           tblptrl	equ	0xFF6
 22632                           tablat	equ	0xFF5
 22633                           prodh	equ	0xFF4
 22634                           prodl	equ	0xFF3
 22635                           intcon	equ	0xFF2
 22636                           indf0	equ	0xFEF
 22637                           postinc0	equ	0xFEE
 22638                           fsr0h	equ	0xFEA
 22639                           fsr0l	equ	0xFE9
 22640                           wreg	equ	0xFE8
 22641                           indf1	equ	0xFE7
 22642                           postdec1	equ	0xFE5
 22643                           plusw1	equ	0xFE3
 22644                           fsr1h	equ	0xFE2
 22645                           fsr1l	equ	0xFE1
 22646                           indf2	equ	0xFDF
 22647                           postinc2	equ	0xFDE
 22648                           postdec2	equ	0xFDD
 22649                           plusw2	equ	0xFDB
 22650                           fsr2h	equ	0xFDA
 22651                           fsr2l	equ	0xFD9
 22652                           status	equ	0xFD8
 22653                           
 22654 ;; *************** function _OSCILLATOR_Initialize *****************
 22655 ;; Defined at:
 22656 ;;		line 65 in file "mcc_generated_files/mcc.c"
 22657 ;; Parameters:    Size  Location     Type
 22658 ;;		None
 22659 ;; Auto vars:     Size  Location     Type
 22660 ;;		None
 22661 ;; Return value:  Size  Location     Type
 22662 ;;                  1    wreg      void 
 22663 ;; Registers used:
 22664 ;;		wreg, status,2
 22665 ;; Tracked objects:
 22666 ;;		On entry : 0/0
 22667 ;;		On exit  : 0/0
 22668 ;;		Unchanged: 0/0
 22669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22674 ;;Total ram usage:        0 bytes
 22675 ;; Hardware stack levels used:    1
 22676 ;; Hardware stack levels required when called:   13
 22677 ;; This function calls:
 22678 ;;		Nothing
 22679 ;; This function is called by:
 22680 ;;		_SYSTEM_Initialize
 22681 ;; This function uses a non-reentrant model
 22682 ;;
 22683                           
 22684                           	psect	text58
 22685  01878A                     __ptext58:
 22686                           	opt stack 0
 22687  01878A                     _OSCILLATOR_Initialize:
 22688                           	opt stack 16
 22689                           
 22690                           ;mcc.c: 68: OSCCON1 = 0x20;
 22691                           
 22692                           ; BSR set to: 14
 22693                           ;incstack = 0
 22694  01878A  0E20               	movlw	32
 22695  01878C  010E               	movlb	14	; () banked
 22696  01878E  6F43               	movwf	67,b	;volatile
 22697                           
 22698                           ;mcc.c: 70: OSCCON3 = 0x00;
 22699  018790  0E00               	movlw	0
 22700  018792  6F45               	movwf	69,b	;volatile
 22701                           
 22702                           ;mcc.c: 72: OSCEN = 0x00;
 22703  018794  0E00               	movlw	0
 22704  018796  6F47               	movwf	71,b	;volatile
 22705                           
 22706                           ;mcc.c: 74: OSCFRQ = 0x02;
 22707  018798  0E02               	movlw	2
 22708  01879A  6F49               	movwf	73,b	;volatile
 22709                           
 22710                           ;mcc.c: 76: OSCTUNE = 0x00;
 22711  01879C  0E00               	movlw	0
 22712  01879E  6F48               	movwf	72,b	;volatile
 22713  0187A0                     
 22714                           ; BSR set to: 14
 22715                           
 22716                           ; BSR set to: 14
 22717                           ;mcc.c: 79: {
 22718  0187A0  B146               	btfsc	70,0,b	;volatile
 22719  0187A2  0012               	return	
 22720  0187A4  D7FD               	goto	l57
 22721  0187A6                     __end_of_OSCILLATOR_Initialize:
 22722                           	opt stack 0
 22723                           tblptru	equ	0xFF8
 22724                           tblptrh	equ	0xFF7
 22725                           tblptrl	equ	0xFF6
 22726                           tablat	equ	0xFF5
 22727                           prodh	equ	0xFF4
 22728                           prodl	equ	0xFF3
 22729                           intcon	equ	0xFF2
 22730                           indf0	equ	0xFEF
 22731                           postinc0	equ	0xFEE
 22732                           fsr0h	equ	0xFEA
 22733                           fsr0l	equ	0xFE9
 22734                           wreg	equ	0xFE8
 22735                           indf1	equ	0xFE7
 22736                           postdec1	equ	0xFE5
 22737                           plusw1	equ	0xFE3
 22738                           fsr1h	equ	0xFE2
 22739                           fsr1l	equ	0xFE1
 22740                           indf2	equ	0xFDF
 22741                           postinc2	equ	0xFDE
 22742                           postdec2	equ	0xFDD
 22743                           plusw2	equ	0xFDB
 22744                           fsr2h	equ	0xFDA
 22745                           fsr2l	equ	0xFD9
 22746                           status	equ	0xFD8
 22747                           
 22748 ;; *************** function _INTERRUPT_Initialize *****************
 22749 ;; Defined at:
 22750 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22751 ;; Parameters:    Size  Location     Type
 22752 ;;		None
 22753 ;; Auto vars:     Size  Location     Type
 22754 ;;		None
 22755 ;; Return value:  Size  Location     Type
 22756 ;;                  1    wreg      void 
 22757 ;; Registers used:
 22758 ;;		None
 22759 ;; Tracked objects:
 22760 ;;		On entry : 0/0
 22761 ;;		On exit  : 0/0
 22762 ;;		Unchanged: 0/0
 22763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22768 ;;Total ram usage:        0 bytes
 22769 ;; Hardware stack levels used:    1
 22770 ;; Hardware stack levels required when called:   13
 22771 ;; This function calls:
 22772 ;;		Nothing
 22773 ;; This function is called by:
 22774 ;;		_SYSTEM_Initialize
 22775 ;; This function uses a non-reentrant model
 22776 ;;
 22777                           
 22778                           	psect	text59
 22779  0187DC                     __ptext59:
 22780                           	opt stack 0
 22781  0187DC                     _INTERRUPT_Initialize:
 22782                           	opt stack 16
 22783                           
 22784                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 22785                           
 22786                           ; BSR set to: 14
 22787                           ;incstack = 0
 22788  0187DC  8AF2               	bsf	intcon,5,c	;volatile
 22789                           
 22790                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 22791  0187DE  010E               	movlb	14	; () banked
 22792  0187E0  8F22               	bsf	34,7,b	;volatile
 22793                           
 22794                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 22795  0187E2  8924               	bsf	36,4,b	;volatile
 22796                           
 22797                           ;interrupt_manager.c: 66: IPR1bits.ADTIP = 1;
 22798  0187E4  8320               	bsf	32,1,b	;volatile
 22799                           
 22800                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 22801  0187E6  9B24               	bcf	36,5,b	;volatile
 22802                           
 22803                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 22804  0187E8  9D22               	bcf	34,6,b	;volatile
 22805                           
 22806                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 22807  0187EA  9D24               	bcf	36,6,b	;volatile
 22808                           
 22809                           ;interrupt_manager.c: 79: IPR2bits.HLVDIP = 0;
 22810  0187EC  9F21               	bcf	33,7,b	;volatile
 22811                           
 22812                           ; BSR set to: 14
 22813  0187EE  0012               	return		;funcret
 22814  0187F0                     __end_of_INTERRUPT_Initialize:
 22815                           	opt stack 0
 22816                           tblptru	equ	0xFF8
 22817                           tblptrh	equ	0xFF7
 22818                           tblptrl	equ	0xFF6
 22819                           tablat	equ	0xFF5
 22820                           prodh	equ	0xFF4
 22821                           prodl	equ	0xFF3
 22822                           intcon	equ	0xFF2
 22823                           indf0	equ	0xFEF
 22824                           postinc0	equ	0xFEE
 22825                           fsr0h	equ	0xFEA
 22826                           fsr0l	equ	0xFE9
 22827                           wreg	equ	0xFE8
 22828                           indf1	equ	0xFE7
 22829                           postdec1	equ	0xFE5
 22830                           plusw1	equ	0xFE3
 22831                           fsr1h	equ	0xFE2
 22832                           fsr1l	equ	0xFE1
 22833                           indf2	equ	0xFDF
 22834                           postinc2	equ	0xFDE
 22835                           postdec2	equ	0xFDD
 22836                           plusw2	equ	0xFDB
 22837                           fsr2h	equ	0xFDA
 22838                           fsr2l	equ	0xFD9
 22839                           status	equ	0xFD8
 22840                           
 22841 ;; *************** function _HLVD_Initialize *****************
 22842 ;; Defined at:
 22843 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 22844 ;; Parameters:    Size  Location     Type
 22845 ;;		None
 22846 ;; Auto vars:     Size  Location     Type
 22847 ;;		None
 22848 ;; Return value:  Size  Location     Type
 22849 ;;                  1    wreg      void 
 22850 ;; Registers used:
 22851 ;;		wreg, status,2
 22852 ;; Tracked objects:
 22853 ;;		On entry : 0/0
 22854 ;;		On exit  : 0/0
 22855 ;;		Unchanged: 0/0
 22856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22861 ;;Total ram usage:        0 bytes
 22862 ;; Hardware stack levels used:    1
 22863 ;; Hardware stack levels required when called:   13
 22864 ;; This function calls:
 22865 ;;		Nothing
 22866 ;; This function is called by:
 22867 ;;		_SYSTEM_Initialize
 22868 ;; This function uses a non-reentrant model
 22869 ;;
 22870                           
 22871                           	psect	text60
 22872  01886C                     __ptext60:
 22873                           	opt stack 0
 22874  01886C                     _HLVD_Initialize:
 22875                           	opt stack 16
 22876                           
 22877                           ;hlvd.c: 62: HLVDCON1 = 0x09;
 22878                           
 22879                           ; BSR set to: 14
 22880                           ;incstack = 0
 22881  01886C  0E09               	movlw	9
 22882  01886E  010E               	movlb	14	; () banked
 22883  018870  6FC3               	movwf	195,b	;volatile
 22884                           
 22885                           ;hlvd.c: 64: HLVDCON0 = 0x82;
 22886  018872  0E82               	movlw	130
 22887  018874  6FC2               	movwf	194,b	;volatile
 22888                           
 22889                           ; BSR set to: 14
 22890                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 22891  018876  9F35               	bcf	53,7,b	;volatile
 22892                           
 22893                           ; BSR set to: 14
 22894                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 22895  018878  8F2B               	bsf	43,7,b	;volatile
 22896                           
 22897                           ; BSR set to: 14
 22898  01887A  0012               	return		;funcret
 22899  01887C                     __end_of_HLVD_Initialize:
 22900                           	opt stack 0
 22901                           tblptru	equ	0xFF8
 22902                           tblptrh	equ	0xFF7
 22903                           tblptrl	equ	0xFF6
 22904                           tablat	equ	0xFF5
 22905                           prodh	equ	0xFF4
 22906                           prodl	equ	0xFF3
 22907                           intcon	equ	0xFF2
 22908                           indf0	equ	0xFEF
 22909                           postinc0	equ	0xFEE
 22910                           fsr0h	equ	0xFEA
 22911                           fsr0l	equ	0xFE9
 22912                           wreg	equ	0xFE8
 22913                           indf1	equ	0xFE7
 22914                           postdec1	equ	0xFE5
 22915                           plusw1	equ	0xFE3
 22916                           fsr1h	equ	0xFE2
 22917                           fsr1l	equ	0xFE1
 22918                           indf2	equ	0xFDF
 22919                           postinc2	equ	0xFDE
 22920                           postdec2	equ	0xFDD
 22921                           plusw2	equ	0xFDB
 22922                           fsr2h	equ	0xFDA
 22923                           fsr2l	equ	0xFD9
 22924                           status	equ	0xFD8
 22925                           
 22926 ;; *************** function _FVR_Initialize *****************
 22927 ;; Defined at:
 22928 ;;		line 58 in file "mcc_generated_files/fvr.c"
 22929 ;; Parameters:    Size  Location     Type
 22930 ;;		None
 22931 ;; Auto vars:     Size  Location     Type
 22932 ;;		None
 22933 ;; Return value:  Size  Location     Type
 22934 ;;                  1    wreg      void 
 22935 ;; Registers used:
 22936 ;;		wreg, status,2
 22937 ;; Tracked objects:
 22938 ;;		On entry : 0/0
 22939 ;;		On exit  : 0/0
 22940 ;;		Unchanged: 0/0
 22941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22946 ;;Total ram usage:        0 bytes
 22947 ;; Hardware stack levels used:    1
 22948 ;; Hardware stack levels required when called:   13
 22949 ;; This function calls:
 22950 ;;		Nothing
 22951 ;; This function is called by:
 22952 ;;		_SYSTEM_Initialize
 22953 ;; This function uses a non-reentrant model
 22954 ;;
 22955                           
 22956                           	psect	text61
 22957  018902                     __ptext61:
 22958                           	opt stack 0
 22959  018902                     _FVR_Initialize:
 22960                           	opt stack 16
 22961                           
 22962                           ;fvr.c: 61: FVRCON = 0xA6;
 22963                           
 22964                           ; BSR set to: 14
 22965                           ;incstack = 0
 22966  018902  0EA6               	movlw	166
 22967  018904  010E               	movlb	14	; () banked
 22968  018906  6FC4               	movwf	196,b	;volatile
 22969                           
 22970                           ; BSR set to: 14
 22971  018908  0012               	return		;funcret
 22972  01890A                     __end_of_FVR_Initialize:
 22973                           	opt stack 0
 22974                           tblptru	equ	0xFF8
 22975                           tblptrh	equ	0xFF7
 22976                           tblptrl	equ	0xFF6
 22977                           tablat	equ	0xFF5
 22978                           prodh	equ	0xFF4
 22979                           prodl	equ	0xFF3
 22980                           intcon	equ	0xFF2
 22981                           indf0	equ	0xFEF
 22982                           postinc0	equ	0xFEE
 22983                           fsr0h	equ	0xFEA
 22984                           fsr0l	equ	0xFE9
 22985                           wreg	equ	0xFE8
 22986                           indf1	equ	0xFE7
 22987                           postdec1	equ	0xFE5
 22988                           plusw1	equ	0xFE3
 22989                           fsr1h	equ	0xFE2
 22990                           fsr1l	equ	0xFE1
 22991                           indf2	equ	0xFDF
 22992                           postinc2	equ	0xFDE
 22993                           postdec2	equ	0xFDD
 22994                           plusw2	equ	0xFDB
 22995                           fsr2h	equ	0xFDA
 22996                           fsr2l	equ	0xFD9
 22997                           status	equ	0xFD8
 22998                           
 22999 ;; *************** function _EUSART2_Initialize *****************
 23000 ;; Defined at:
 23001 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 23002 ;; Parameters:    Size  Location     Type
 23003 ;;		None
 23004 ;; Auto vars:     Size  Location     Type
 23005 ;;		None
 23006 ;; Return value:  Size  Location     Type
 23007 ;;                  1    wreg      void 
 23008 ;; Registers used:
 23009 ;;		wreg, status,2, status,0, cstack
 23010 ;; Tracked objects:
 23011 ;;		On entry : 0/0
 23012 ;;		On exit  : 0/0
 23013 ;;		Unchanged: 0/0
 23014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23019 ;;Total ram usage:        0 bytes
 23020 ;; Hardware stack levels used:    1
 23021 ;; Hardware stack levels required when called:   14
 23022 ;; This function calls:
 23023 ;;		_EUSART2_SetRxInterruptHandler
 23024 ;;		_EUSART2_SetTxInterruptHandler
 23025 ;; This function is called by:
 23026 ;;		_SYSTEM_Initialize
 23027 ;; This function uses a non-reentrant model
 23028 ;;
 23029                           
 23030                           	psect	text62
 23031  017CF2                     __ptext62:
 23032                           	opt stack 0
 23033  017CF2                     _EUSART2_Initialize:
 23034                           	opt stack 15
 23035                           
 23036                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 23037                           
 23038                           ; BSR set to: 14
 23039                           ;incstack = 0
 23040  017CF2  827E               	bsf	3966,1,c	;volatile
 23041                           
 23042                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 23043  017CF4  010E               	movlb	14	; () banked
 23044  017CF6  9F2C               	bcf	44,7,b	;volatile
 23045                           
 23046                           ; BSR set to: 14
 23047                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 23048  017CF8  0E14               	movlw	low _EUSART2_Receive_ISR
 23049  017CFA  0101               	movlb	1	; () banked
 23050  017CFC  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 23051  017CFE  0E75               	movlw	high _EUSART2_Receive_ISR
 23052  017D00  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 23053  017D02  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 23054  017D04  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 23055  017D06  EC61  F0C4         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 23056                           
 23057                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 23058  017D0A  010E               	movlb	14	; () banked
 23059  017D0C  9D2C               	bcf	44,6,b	;volatile
 23060                           
 23061                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 23062  017D0E  0E4A               	movlw	low _EUSART2_Transmit_ISR
 23063  017D10  0101               	movlb	1	; () banked
 23064  017D12  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 23065  017D14  0E84               	movlw	high _EUSART2_Transmit_ISR
 23066  017D16  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 23067  017D18  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 23068  017D1A  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 23069  017D1C  EC5A  F0C4         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 23070                           
 23071                           ;eusart2.c: 91: BAUD2CON = 0x08;
 23072  017D20  0E08               	movlw	8
 23073  017D22  010E               	movlb	14	; () banked
 23074  017D24  6FF7               	movwf	247,b	;volatile
 23075                           
 23076                           ; BSR set to: 14
 23077                           ;eusart2.c: 94: RC2STA = 0x90;
 23078  017D26  0E90               	movlw	144
 23079  017D28  6FF5               	movwf	245,b	;volatile
 23080                           
 23081                           ; BSR set to: 14
 23082                           ;eusart2.c: 97: TX2STA = 0x24;
 23083  017D2A  0E24               	movlw	36
 23084  017D2C  6FF6               	movwf	246,b	;volatile
 23085                           
 23086                           ; BSR set to: 14
 23087                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 23088  017D2E  0E8A               	movlw	138
 23089  017D30  6FF3               	movwf	243,b	;volatile
 23090                           
 23091                           ; BSR set to: 14
 23092                           ;eusart2.c: 103: SP2BRGH = 0x00;
 23093  017D32  0E00               	movlw	0
 23094  017D34  6FF4               	movwf	244,b	;volatile
 23095                           
 23096                           ; BSR set to: 14
 23097                           ;eusart2.c: 107: eusart2TxHead = 0;
 23098  017D36  0E00               	movlw	0
 23099  017D38  0101               	movlb	1	; () banked
 23100  017D3A  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 23101                           
 23102                           ; BSR set to: 1
 23103                           ;eusart2.c: 108: eusart2TxTail = 0;
 23104  017D3C  0E00               	movlw	0
 23105  017D3E  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 23106                           
 23107                           ; BSR set to: 1
 23108                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 23109  017D40  0E80               	movlw	128
 23110  017D42  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 23111                           
 23112                           ; BSR set to: 1
 23113                           ;eusart2.c: 111: eusart2RxHead = 0;
 23114  017D44  0E00               	movlw	0
 23115  017D46  0100               	movlb	0	; () banked
 23116  017D48  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 23117                           
 23118                           ; BSR set to: 0
 23119                           ;eusart2.c: 112: eusart2RxTail = 0;
 23120  017D4A  0E00               	movlw	0
 23121  017D4C  0101               	movlb	1	; () banked
 23122  017D4E  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 23123                           
 23124                           ; BSR set to: 1
 23125                           ;eusart2.c: 113: eusart2RxCount = 0;
 23126  017D50  0E00               	movlw	0
 23127  017D52  6FDF               	movwf	_eusart2RxCount& (0+255),b	;volatile
 23128                           
 23129                           ; BSR set to: 1
 23130                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 23131  017D54  010E               	movlb	14	; () banked
 23132  017D56  8F2C               	bsf	44,7,b	;volatile
 23133                           
 23134                           ; BSR set to: 14
 23135                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 23136  017D58  927E               	bcf	3966,1,c	;volatile
 23137                           
 23138                           ; BSR set to: 14
 23139  017D5A  0012               	return		;funcret
 23140  017D5C                     __end_of_EUSART2_Initialize:
 23141                           	opt stack 0
 23142                           tblptru	equ	0xFF8
 23143                           tblptrh	equ	0xFF7
 23144                           tblptrl	equ	0xFF6
 23145                           tablat	equ	0xFF5
 23146                           prodh	equ	0xFF4
 23147                           prodl	equ	0xFF3
 23148                           intcon	equ	0xFF2
 23149                           indf0	equ	0xFEF
 23150                           postinc0	equ	0xFEE
 23151                           fsr0h	equ	0xFEA
 23152                           fsr0l	equ	0xFE9
 23153                           wreg	equ	0xFE8
 23154                           indf1	equ	0xFE7
 23155                           postdec1	equ	0xFE5
 23156                           plusw1	equ	0xFE3
 23157                           fsr1h	equ	0xFE2
 23158                           fsr1l	equ	0xFE1
 23159                           indf2	equ	0xFDF
 23160                           postinc2	equ	0xFDE
 23161                           postdec2	equ	0xFDD
 23162                           plusw2	equ	0xFDB
 23163                           fsr2h	equ	0xFDA
 23164                           fsr2l	equ	0xFD9
 23165                           status	equ	0xFD8
 23166                           
 23167 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 23168 ;; Defined at:
 23169 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 23170 ;; Parameters:    Size  Location     Type
 23171 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 23172 ;;		 -> EUSART2_Transmit_ISR(1), 
 23173 ;; Auto vars:     Size  Location     Type
 23174 ;;		None
 23175 ;; Return value:  Size  Location     Type
 23176 ;;                  1    wreg      void 
 23177 ;; Registers used:
 23178 ;;		wreg, status,2, status,0
 23179 ;; Tracked objects:
 23180 ;;		On entry : 0/0
 23181 ;;		On exit  : 0/0
 23182 ;;		Unchanged: 0/0
 23183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23184 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23187 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23188 ;;Total ram usage:        3 bytes
 23189 ;; Hardware stack levels used:    1
 23190 ;; Hardware stack levels required when called:   13
 23191 ;; This function calls:
 23192 ;;		Nothing
 23193 ;; This function is called by:
 23194 ;;		_EUSART2_Initialize
 23195 ;; This function uses a non-reentrant model
 23196 ;;
 23197                           
 23198                           	psect	text63
 23199  0188B4                     __ptext63:
 23200                           	opt stack 0
 23201  0188B4                     _EUSART2_SetTxInterruptHandler:
 23202                           	opt stack 15
 23203                           
 23204                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 23205                           
 23206                           ; BSR set to: 14
 23207                           ;incstack = 0
 23208  0188B4  C117  F263         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 23209  0188B8  C118  F264         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 23210  0188BC  C119  F265         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 23211  0188C0  0012               	return		;funcret
 23212  0188C2                     __end_of_EUSART2_SetTxInterruptHandler:
 23213                           	opt stack 0
 23214                           tblptru	equ	0xFF8
 23215                           tblptrh	equ	0xFF7
 23216                           tblptrl	equ	0xFF6
 23217                           tablat	equ	0xFF5
 23218                           prodh	equ	0xFF4
 23219                           prodl	equ	0xFF3
 23220                           intcon	equ	0xFF2
 23221                           indf0	equ	0xFEF
 23222                           postinc0	equ	0xFEE
 23223                           fsr0h	equ	0xFEA
 23224                           fsr0l	equ	0xFE9
 23225                           wreg	equ	0xFE8
 23226                           indf1	equ	0xFE7
 23227                           postdec1	equ	0xFE5
 23228                           plusw1	equ	0xFE3
 23229                           fsr1h	equ	0xFE2
 23230                           fsr1l	equ	0xFE1
 23231                           indf2	equ	0xFDF
 23232                           postinc2	equ	0xFDE
 23233                           postdec2	equ	0xFDD
 23234                           plusw2	equ	0xFDB
 23235                           fsr2h	equ	0xFDA
 23236                           fsr2l	equ	0xFD9
 23237                           status	equ	0xFD8
 23238                           
 23239 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 23240 ;; Defined at:
 23241 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 23242 ;; Parameters:    Size  Location     Type
 23243 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 23244 ;;		 -> EUSART2_Receive_ISR(1), 
 23245 ;; Auto vars:     Size  Location     Type
 23246 ;;		None
 23247 ;; Return value:  Size  Location     Type
 23248 ;;                  1    wreg      void 
 23249 ;; Registers used:
 23250 ;;		wreg, status,2, status,0
 23251 ;; Tracked objects:
 23252 ;;		On entry : 0/0
 23253 ;;		On exit  : 0/0
 23254 ;;		Unchanged: 0/0
 23255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23256 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23259 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23260 ;;Total ram usage:        3 bytes
 23261 ;; Hardware stack levels used:    1
 23262 ;; Hardware stack levels required when called:   13
 23263 ;; This function calls:
 23264 ;;		Nothing
 23265 ;; This function is called by:
 23266 ;;		_EUSART2_Initialize
 23267 ;; This function uses a non-reentrant model
 23268 ;;
 23269                           
 23270                           	psect	text64
 23271  0188C2                     __ptext64:
 23272                           	opt stack 0
 23273  0188C2                     _EUSART2_SetRxInterruptHandler:
 23274                           	opt stack 15
 23275                           
 23276                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 23277                           
 23278                           ;incstack = 0
 23279  0188C2  C117  F260         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 23280  0188C6  C118  F261         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 23281  0188CA  C119  F262         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 23282  0188CE  0012               	return		;funcret
 23283  0188D0                     __end_of_EUSART2_SetRxInterruptHandler:
 23284                           	opt stack 0
 23285                           tblptru	equ	0xFF8
 23286                           tblptrh	equ	0xFF7
 23287                           tblptrl	equ	0xFF6
 23288                           tablat	equ	0xFF5
 23289                           prodh	equ	0xFF4
 23290                           prodl	equ	0xFF3
 23291                           intcon	equ	0xFF2
 23292                           indf0	equ	0xFEF
 23293                           postinc0	equ	0xFEE
 23294                           fsr0h	equ	0xFEA
 23295                           fsr0l	equ	0xFE9
 23296                           wreg	equ	0xFE8
 23297                           indf1	equ	0xFE7
 23298                           postdec1	equ	0xFE5
 23299                           plusw1	equ	0xFE3
 23300                           fsr1h	equ	0xFE2
 23301                           fsr1l	equ	0xFE1
 23302                           indf2	equ	0xFDF
 23303                           postinc2	equ	0xFDE
 23304                           postdec2	equ	0xFDD
 23305                           plusw2	equ	0xFDB
 23306                           fsr2h	equ	0xFDA
 23307                           fsr2l	equ	0xFD9
 23308                           status	equ	0xFD8
 23309                           
 23310 ;; *************** function _ADCC_Initialize *****************
 23311 ;; Defined at:
 23312 ;;		line 63 in file "mcc_generated_files/adcc.c"
 23313 ;; Parameters:    Size  Location     Type
 23314 ;;		None
 23315 ;; Auto vars:     Size  Location     Type
 23316 ;;		None
 23317 ;; Return value:  Size  Location     Type
 23318 ;;                  1    wreg      void 
 23319 ;; Registers used:
 23320 ;;		wreg, status,2, status,0, cstack
 23321 ;; Tracked objects:
 23322 ;;		On entry : 0/0
 23323 ;;		On exit  : 0/0
 23324 ;;		Unchanged: 0/0
 23325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23330 ;;Total ram usage:        0 bytes
 23331 ;; Hardware stack levels used:    1
 23332 ;; Hardware stack levels required when called:   14
 23333 ;; This function calls:
 23334 ;;		_ADCC_SetADTIInterruptHandler
 23335 ;; This function is called by:
 23336 ;;		_SYSTEM_Initialize
 23337 ;; This function uses a non-reentrant model
 23338 ;;
 23339                           
 23340                           	psect	text65
 23341  017EF2                     __ptext65:
 23342                           	opt stack 0
 23343  017EF2                     _ADCC_Initialize:
 23344                           	opt stack 15
 23345                           
 23346                           ;adcc.c: 67: ADLTHL = 0x00;
 23347                           
 23348                           ;incstack = 0
 23349  017EF2  0E00               	movlw	0
 23350  017EF4  6E6A               	movwf	3946,c	;volatile
 23351                           
 23352                           ;adcc.c: 69: ADLTHH = 0x00;
 23353  017EF6  0E00               	movlw	0
 23354  017EF8  6E6B               	movwf	3947,c	;volatile
 23355                           
 23356                           ;adcc.c: 71: ADUTHL = 0x00;
 23357  017EFA  0E00               	movlw	0
 23358  017EFC  6E6C               	movwf	3948,c	;volatile
 23359                           
 23360                           ;adcc.c: 73: ADUTHH = 0x00;
 23361  017EFE  0E00               	movlw	0
 23362  017F00  6E6D               	movwf	3949,c	;volatile
 23363                           
 23364                           ;adcc.c: 75: ADSTPTL = 0x00;
 23365  017F02  0E00               	movlw	0
 23366  017F04  6E68               	movwf	3944,c	;volatile
 23367                           
 23368                           ;adcc.c: 77: ADSTPTH = 0x00;
 23369  017F06  0E00               	movlw	0
 23370  017F08  6E69               	movwf	3945,c	;volatile
 23371                           
 23372                           ;adcc.c: 79: ADRPT = 0xFF;
 23373  017F0A  6866               	setf	3942,c	;volatile
 23374                           
 23375                           ;adcc.c: 81: ADPCH = 0x00;
 23376  017F0C  0E00               	movlw	0
 23377  017F0E  010F               	movlb	15	; () banked
 23378  017F10  6F5F               	movwf	95,b	;volatile
 23379                           
 23380                           ;adcc.c: 83: ADCAP = 0x00;
 23381  017F12  0E00               	movlw	0
 23382  017F14  6F5D               	movwf	93,b	;volatile
 23383                           
 23384                           ;adcc.c: 85: ADCON1 = 0x00;
 23385  017F16  0E00               	movlw	0
 23386  017F18  6F59               	movwf	89,b	;volatile
 23387                           
 23388                           ;adcc.c: 87: ADCON2 = 0x04;
 23389  017F1A  0E04               	movlw	4
 23390  017F1C  6F5A               	movwf	90,b	;volatile
 23391                           
 23392                           ;adcc.c: 89: ADCON3 = 0x5F;
 23393  017F1E  0E5F               	movlw	95
 23394  017F20  6F5B               	movwf	91,b	;volatile
 23395                           
 23396                           ;adcc.c: 91: ADSTAT = 0x00;
 23397  017F22  0E00               	movlw	0
 23398  017F24  6E65               	movwf	3941,c	;volatile
 23399                           
 23400                           ;adcc.c: 93: ADREF = 0x12;
 23401  017F26  0E12               	movlw	18
 23402  017F28  6F58               	movwf	88,b	;volatile
 23403                           
 23404                           ;adcc.c: 95: ADACT = 0x00;
 23405  017F2A  0E00               	movlw	0
 23406  017F2C  6F56               	movwf	86,b	;volatile
 23407                           
 23408                           ;adcc.c: 97: ADCLK = 0x1F;
 23409  017F2E  0E1F               	movlw	31
 23410  017F30  6F57               	movwf	87,b	;volatile
 23411                           
 23412                           ;adcc.c: 99: ADCON0 = 0xC4;
 23413  017F32  0EC4               	movlw	196
 23414  017F34  6E60               	movwf	3936,c	;volatile
 23415                           
 23416                           ; BSR set to: 15
 23417                           ;adcc.c: 101: ADACQ = 0xFF;
 23418  017F36  695C               	setf	92,b	;volatile
 23419                           
 23420                           ; BSR set to: 15
 23421                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 23422  017F38  010E               	movlb	14	; () banked
 23423  017F3A  9334               	bcf	52,1,b	;volatile
 23424                           
 23425                           ; BSR set to: 14
 23426                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 23427  017F3C  832A               	bsf	42,1,b	;volatile
 23428                           
 23429                           ; BSR set to: 14
 23430                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 23431  017F3E  0E3C               	movlw	low _ADCC_DefaultInterruptHandler
 23432  017F40  0101               	movlb	1	; () banked
 23433  017F42  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 23434  017F44  0E89               	movlw	high _ADCC_DefaultInterruptHandler
 23435  017F46  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 23436  017F48  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23437  017F4A  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 23438  017F4C  EC68  F0C4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23439  017F50  0012               	return		;funcret
 23440  017F52                     __end_of_ADCC_Initialize:
 23441                           	opt stack 0
 23442                           tblptru	equ	0xFF8
 23443                           tblptrh	equ	0xFF7
 23444                           tblptrl	equ	0xFF6
 23445                           tablat	equ	0xFF5
 23446                           prodh	equ	0xFF4
 23447                           prodl	equ	0xFF3
 23448                           intcon	equ	0xFF2
 23449                           indf0	equ	0xFEF
 23450                           postinc0	equ	0xFEE
 23451                           fsr0h	equ	0xFEA
 23452                           fsr0l	equ	0xFE9
 23453                           wreg	equ	0xFE8
 23454                           indf1	equ	0xFE7
 23455                           postdec1	equ	0xFE5
 23456                           plusw1	equ	0xFE3
 23457                           fsr1h	equ	0xFE2
 23458                           fsr1l	equ	0xFE1
 23459                           indf2	equ	0xFDF
 23460                           postinc2	equ	0xFDE
 23461                           postdec2	equ	0xFDD
 23462                           plusw2	equ	0xFDB
 23463                           fsr2h	equ	0xFDA
 23464                           fsr2l	equ	0xFD9
 23465                           status	equ	0xFD8
 23466                           
 23467 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23468 ;; Defined at:
 23469 ;;		line 307 in file "mcc_generated_files/adcc.c"
 23470 ;; Parameters:    Size  Location     Type
 23471 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 23472 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 23473 ;; Auto vars:     Size  Location     Type
 23474 ;;		None
 23475 ;; Return value:  Size  Location     Type
 23476 ;;                  1    wreg      void 
 23477 ;; Registers used:
 23478 ;;		wreg, status,2, status,0
 23479 ;; Tracked objects:
 23480 ;;		On entry : 0/0
 23481 ;;		On exit  : 0/0
 23482 ;;		Unchanged: 0/0
 23483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23484 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23487 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23488 ;;Total ram usage:        3 bytes
 23489 ;; Hardware stack levels used:    1
 23490 ;; Hardware stack levels required when called:   13
 23491 ;; This function calls:
 23492 ;;		Nothing
 23493 ;; This function is called by:
 23494 ;;		_ADCC_Initialize
 23495 ;;		_main
 23496 ;; This function uses a non-reentrant model
 23497 ;;
 23498                           
 23499                           	psect	text66
 23500  0188D0                     __ptext66:
 23501                           	opt stack 0
 23502  0188D0                     _ADCC_SetADTIInterruptHandler:
 23503                           	opt stack 15
 23504                           
 23505                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 23506                           
 23507                           ;incstack = 0
 23508  0188D0  C117  F25A         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 23509  0188D4  C118  F25B         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 23510  0188D8  C119  F25C         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 23511  0188DC  0012               	return		;funcret
 23512  0188DE                     __end_of_ADCC_SetADTIInterruptHandler:
 23513                           	opt stack 0
 23514                           tblptru	equ	0xFF8
 23515                           tblptrh	equ	0xFF7
 23516                           tblptrl	equ	0xFF6
 23517                           tablat	equ	0xFF5
 23518                           prodh	equ	0xFF4
 23519                           prodl	equ	0xFF3
 23520                           intcon	equ	0xFF2
 23521                           indf0	equ	0xFEF
 23522                           postinc0	equ	0xFEE
 23523                           fsr0h	equ	0xFEA
 23524                           fsr0l	equ	0xFE9
 23525                           wreg	equ	0xFE8
 23526                           indf1	equ	0xFE7
 23527                           postdec1	equ	0xFE5
 23528                           plusw1	equ	0xFE3
 23529                           fsr1h	equ	0xFE2
 23530                           fsr1l	equ	0xFE1
 23531                           indf2	equ	0xFDF
 23532                           postinc2	equ	0xFDE
 23533                           postdec2	equ	0xFDD
 23534                           plusw2	equ	0xFDB
 23535                           fsr2h	equ	0xFDA
 23536                           fsr2l	equ	0xFD9
 23537                           status	equ	0xFD8
 23538                           
 23539 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 23540 ;; Defined at:
 23541 ;;		line 104 in file "mcc_generated_files/interrupt_manager.c"
 23542 ;; Parameters:    Size  Location     Type
 23543 ;;		None
 23544 ;; Auto vars:     Size  Location     Type
 23545 ;;		None
 23546 ;; Return value:  Size  Location     Type
 23547 ;;                  1    wreg      void 
 23548 ;; Registers used:
 23549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23550 ;; Tracked objects:
 23551 ;;		On entry : 0/0
 23552 ;;		On exit  : 0/0
 23553 ;;		Unchanged: 0/0
 23554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23557 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23558 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23559 ;;Total ram usage:       21 bytes
 23560 ;; Hardware stack levels used:    1
 23561 ;; Hardware stack levels required when called:   12
 23562 ;; This function calls:
 23563 ;;		Absolute function
 23564 ;;		_EUSART2_Transmit_ISR
 23565 ;;		_HLVD_ISR
 23566 ;;		_TMR6_ISR
 23567 ;;		_TMR7_ISR
 23568 ;; This function is called by:
 23569 ;;		Interrupt level 1
 23570 ;; This function uses a non-reentrant model
 23571 ;;
 23572                           
 23573                           	psect	intcodelo
 23574  000018                     __pintcodelo:
 23575                           	opt stack 0
 23576  000018                     _INTERRUPT_InterruptManagerLow:
 23577                           	opt stack 11
 23578                           
 23579                           ;incstack = 0
 23580  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 23581  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 23582  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 23583  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 23584  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 23585  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 23586  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 23587  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 23588  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 23589  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 23590  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 23591  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 23592  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 23593  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 23594  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 23595  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 23596  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 23597  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 23598  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 23599  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 23600  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 23601  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 23602                           
 23603                           ;interrupt_manager.c: 107: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 23604  00006E  010E               	movlb	14	; () banked
 23605  000070  BB2E               	btfsc	46,5,b	;volatile
 23606                           
 23607                           ; BSR set to: 14
 23608  000072  AB38               	btfss	56,5,b	;volatile
 23609  000074  D003               	goto	i1l223
 23610                           
 23611                           ; BSR set to: 14
 23612                           ;interrupt_manager.c: 108: {
 23613                           ;interrupt_manager.c: 109: TMR6_ISR();
 23614  000076  EC14  F0C3         	call	_TMR6_ISR	;wreg free
 23615                           
 23616                           ;interrupt_manager.c: 110: }
 23617  00007A  D01B               	goto	i1l229
 23618  00007C                     i1l223:
 23619                           
 23620                           ; BSR set to: 14
 23621                           ;interrupt_manager.c: 111: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 23622  00007C  BD2C               	btfsc	44,6,b	;volatile
 23623                           
 23624                           ; BSR set to: 14
 23625  00007E  AD36               	btfss	54,6,b	;volatile
 23626  000080  D00D               	goto	i1l225
 23627                           
 23628                           ; BSR set to: 14
 23629                           ;interrupt_manager.c: 112: {
 23630                           ;interrupt_manager.c: 113: EUSART2_TxDefaultInterruptHandler();
 23631  000082  D801               	call	i1u2579_28
 23632  000084  D016               	goto	i1l229
 23633  000086                     i1u2579_28:
 23634  000086  0005               	push	
 23635  000088  6EFA               	movwf	pclath,c
 23636  00008A  0102               	movlb	2	; () banked
 23637  00008C  5163               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 23638  00008E  6EFD               	movwf	tosl,c
 23639  000090  5164               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 23640  000092  6EFE               	movwf	tosh,c
 23641  000094  5165               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 23642  000096  6EFF               	movwf	tosu,c
 23643  000098  50FA               	movf	pclath,w,c
 23644  00009A  0012               	return		;indir
 23645  00009C                     i1l225:
 23646                           
 23647                           ; BSR set to: 14
 23648                           ;interrupt_manager.c: 115: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 23649  00009C  BD2E               	btfsc	46,6,b	;volatile
 23650                           
 23651                           ; BSR set to: 14
 23652  00009E  AD38               	btfss	56,6,b	;volatile
 23653  0000A0  D003               	goto	i1l227
 23654                           
 23655                           ; BSR set to: 14
 23656                           ;interrupt_manager.c: 116: {
 23657                           ;interrupt_manager.c: 117: TMR7_ISR();
 23658  0000A2  EC40  F0C2         	call	_TMR7_ISR	;wreg free
 23659                           
 23660                           ;interrupt_manager.c: 118: }
 23661  0000A6  D005               	goto	i1l229
 23662  0000A8                     i1l227:
 23663                           
 23664                           ; BSR set to: 14
 23665                           ;interrupt_manager.c: 119: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 23666  0000A8  BF2B               	btfsc	43,7,b	;volatile
 23667                           
 23668                           ; BSR set to: 14
 23669  0000AA  AF35               	btfss	53,7,b	;volatile
 23670  0000AC  D002               	goto	i1l229
 23671                           
 23672                           ; BSR set to: 14
 23673                           ;interrupt_manager.c: 120: {
 23674                           ;interrupt_manager.c: 121: HLVD_ISR();
 23675  0000AE  EC89  F0C4         	call	_HLVD_ISR	;wreg free
 23676  0000B2                     i1l229:
 23677                           
 23678                           ;interrupt_manager.c: 123: else
 23679                           ;interrupt_manager.c: 124: {
 23680  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 23681  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 23682  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 23683  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 23684  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 23685  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 23686  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 23687  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 23688  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 23689  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 23690  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 23691  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 23692  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 23693  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 23694  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 23695  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 23696  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 23697  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 23698  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 23699  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 23700  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 23701  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 23702  000108  0010               	retfie	
 23703  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 23704                           	opt stack 0
 23705                           tosu	equ	0xFFF
 23706                           tosh	equ	0xFFE
 23707                           tosl	equ	0xFFD
 23708                           pclatu	equ	0xFFB
 23709                           pclath	equ	0xFFA
 23710                           tblptru	equ	0xFF8
 23711                           tblptrh	equ	0xFF7
 23712                           tblptrl	equ	0xFF6
 23713                           tablat	equ	0xFF5
 23714                           prodh	equ	0xFF4
 23715                           prodl	equ	0xFF3
 23716                           intcon	equ	0xFF2
 23717                           indf0	equ	0xFEF
 23718                           postinc0	equ	0xFEE
 23719                           fsr0h	equ	0xFEA
 23720                           fsr0l	equ	0xFE9
 23721                           wreg	equ	0xFE8
 23722                           indf1	equ	0xFE7
 23723                           postdec1	equ	0xFE5
 23724                           plusw1	equ	0xFE3
 23725                           fsr1h	equ	0xFE2
 23726                           fsr1l	equ	0xFE1
 23727                           bsr	equ	0xFE0
 23728                           indf2	equ	0xFDF
 23729                           postinc2	equ	0xFDE
 23730                           postdec2	equ	0xFDD
 23731                           plusw2	equ	0xFDB
 23732                           fsr2h	equ	0xFDA
 23733                           fsr2l	equ	0xFD9
 23734                           status	equ	0xFD8
 23735                           
 23736 ;; *************** function _TMR7_ISR *****************
 23737 ;; Defined at:
 23738 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 23739 ;; Parameters:    Size  Location     Type
 23740 ;;		None
 23741 ;; Auto vars:     Size  Location     Type
 23742 ;;		None
 23743 ;; Return value:  Size  Location     Type
 23744 ;;                  1    wreg      void 
 23745 ;; Registers used:
 23746 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 23747 ;; Tracked objects:
 23748 ;;		On entry : 0/0
 23749 ;;		On exit  : 0/0
 23750 ;;		Unchanged: 0/0
 23751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23756 ;;Total ram usage:        0 bytes
 23757 ;; Hardware stack levels used:    1
 23758 ;; Hardware stack levels required when called:   11
 23759 ;; This function calls:
 23760 ;;		Absolute function
 23761 ;;		_TMR7_DefaultInterruptHandler
 23762 ;;		_TMR7_WriteTimer
 23763 ;;		_acquisitionTimerCallback
 23764 ;; This function is called by:
 23765 ;;		_INTERRUPT_InterruptManagerLow
 23766 ;; This function uses a non-reentrant model
 23767 ;;
 23768                           
 23769                           	psect	text68
 23770  018480                     __ptext68:
 23771                           	opt stack 0
 23772  018480                     _TMR7_ISR:
 23773                           	opt stack 11
 23774                           
 23775                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 23776                           
 23777                           ;incstack = 0
 23778  018480  010E               	movlb	14	; () banked
 23779  018482  9D38               	bcf	56,6,b	;volatile
 23780                           
 23781                           ; BSR set to: 14
 23782                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 23783  018484  C1D9  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 23784  018488  C1DA  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 23785  01848C  EC4F  F0C3         	call	_TMR7_WriteTimer	;wreg free
 23786                           
 23787                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 23788  018490  0102               	movlb	2	; () banked
 23789  018492  5157               	movf	_TMR7_InterruptHandler& (0+255),w,b
 23790  018494  1158               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 23791  018496  1159               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 23792  018498  B4D8               	btfsc	status,2,c
 23793  01849A  0012               	return	
 23794                           
 23795                           ; BSR set to: 2
 23796                           ;tmr7.c: 172: {
 23797                           ;tmr7.c: 173: TMR7_InterruptHandler();
 23798  01849C  D801               	call	i1u2562_28
 23799  01849E  0012               	return	
 23800  0184A0                     i1u2562_28:
 23801  0184A0  0005               	push	
 23802  0184A2  6EFA               	movwf	pclath,c
 23803  0184A4  5157               	movf	_TMR7_InterruptHandler& (0+255),w,b
 23804  0184A6  6EFD               	movwf	tosl,c
 23805  0184A8  5158               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 23806  0184AA  6EFE               	movwf	tosh,c
 23807  0184AC  5159               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 23808  0184AE  6EFF               	movwf	tosu,c
 23809  0184B0  50FA               	movf	pclath,w,c
 23810  0184B2  0012               	return		;indir
 23811  0184B4                     __end_of_TMR7_ISR:
 23812                           	opt stack 0
 23813                           tosu	equ	0xFFF
 23814                           tosh	equ	0xFFE
 23815                           tosl	equ	0xFFD
 23816                           pclatu	equ	0xFFB
 23817                           pclath	equ	0xFFA
 23818                           tblptru	equ	0xFF8
 23819                           tblptrh	equ	0xFF7
 23820                           tblptrl	equ	0xFF6
 23821                           tablat	equ	0xFF5
 23822                           prodh	equ	0xFF4
 23823                           prodl	equ	0xFF3
 23824                           intcon	equ	0xFF2
 23825                           indf0	equ	0xFEF
 23826                           postinc0	equ	0xFEE
 23827                           fsr0h	equ	0xFEA
 23828                           fsr0l	equ	0xFE9
 23829                           wreg	equ	0xFE8
 23830                           indf1	equ	0xFE7
 23831                           postdec1	equ	0xFE5
 23832                           plusw1	equ	0xFE3
 23833                           fsr1h	equ	0xFE2
 23834                           fsr1l	equ	0xFE1
 23835                           bsr	equ	0xFE0
 23836                           indf2	equ	0xFDF
 23837                           postinc2	equ	0xFDE
 23838                           postdec2	equ	0xFDD
 23839                           plusw2	equ	0xFDB
 23840                           fsr2h	equ	0xFDA
 23841                           fsr2l	equ	0xFD9
 23842                           status	equ	0xFD8
 23843                           
 23844 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 23845 ;; Defined at:
 23846 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 23847 ;; Parameters:    Size  Location     Type
 23848 ;;		None
 23849 ;; Auto vars:     Size  Location     Type
 23850 ;;		None
 23851 ;; Return value:  Size  Location     Type
 23852 ;;                  1    wreg      void 
 23853 ;; Registers used:
 23854 ;;		None
 23855 ;; Tracked objects:
 23856 ;;		On entry : 0/0
 23857 ;;		On exit  : 0/0
 23858 ;;		Unchanged: 0/0
 23859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23864 ;;Total ram usage:        0 bytes
 23865 ;; Hardware stack levels used:    1
 23866 ;; Hardware stack levels required when called:    9
 23867 ;; This function calls:
 23868 ;;		Nothing
 23869 ;; This function is called by:
 23870 ;;		_TMR7_Initialize
 23871 ;;		_TMR7_ISR
 23872 ;; This function uses a non-reentrant model
 23873 ;;
 23874                           
 23875                           	psect	text69
 23876  018936                     __ptext69:
 23877                           	opt stack 0
 23878  018936                     _TMR7_DefaultInterruptHandler:
 23879                           	opt stack 12
 23880                           
 23881                           ;incstack = 0
 23882  018936  0012               	return		;funcret
 23883  018938                     __end_of_TMR7_DefaultInterruptHandler:
 23884                           	opt stack 0
 23885                           tosu	equ	0xFFF
 23886                           tosh	equ	0xFFE
 23887                           tosl	equ	0xFFD
 23888                           pclatu	equ	0xFFB
 23889                           pclath	equ	0xFFA
 23890                           tblptru	equ	0xFF8
 23891                           tblptrh	equ	0xFF7
 23892                           tblptrl	equ	0xFF6
 23893                           tablat	equ	0xFF5
 23894                           prodh	equ	0xFF4
 23895                           prodl	equ	0xFF3
 23896                           intcon	equ	0xFF2
 23897                           indf0	equ	0xFEF
 23898                           postinc0	equ	0xFEE
 23899                           fsr0h	equ	0xFEA
 23900                           fsr0l	equ	0xFE9
 23901                           wreg	equ	0xFE8
 23902                           indf1	equ	0xFE7
 23903                           postdec1	equ	0xFE5
 23904                           plusw1	equ	0xFE3
 23905                           fsr1h	equ	0xFE2
 23906                           fsr1l	equ	0xFE1
 23907                           bsr	equ	0xFE0
 23908                           indf2	equ	0xFDF
 23909                           postinc2	equ	0xFDE
 23910                           postdec2	equ	0xFDD
 23911                           plusw2	equ	0xFDB
 23912                           fsr2h	equ	0xFDA
 23913                           fsr2l	equ	0xFD9
 23914                           status	equ	0xFD8
 23915                           
 23916 ;; *************** function _acquisitionTimerCallback *****************
 23917 ;; Defined at:
 23918 ;;		line 359 in file "main.c"
 23919 ;; Parameters:    Size  Location     Type
 23920 ;;		None
 23921 ;; Auto vars:     Size  Location     Type
 23922 ;;		None
 23923 ;; Return value:  Size  Location     Type
 23924 ;;                  1    wreg      void 
 23925 ;; Registers used:
 23926 ;;		wreg, status,2, cstack
 23927 ;; Tracked objects:
 23928 ;;		On entry : 0/0
 23929 ;;		On exit  : 0/0
 23930 ;;		Unchanged: 0/0
 23931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23936 ;;Total ram usage:        0 bytes
 23937 ;; Hardware stack levels used:    1
 23938 ;; Hardware stack levels required when called:   10
 23939 ;; This function calls:
 23940 ;;		_ADCC_ClearAccumulator
 23941 ;;		_ADCC_DischargeSampleCapacitor
 23942 ;;		_ADCC_StartConversion
 23943 ;; This function is called by:
 23944 ;;		_main
 23945 ;;		_TMR7_ISR
 23946 ;; This function uses a non-reentrant model
 23947 ;;
 23948                           
 23949                           	psect	text70
 23950  01882A                     __ptext70:
 23951                           	opt stack 0
 23952  01882A                     _acquisitionTimerCallback:
 23953                           	opt stack 11
 23954                           
 23955                           ;main.c: 362: ADCC_DischargeSampleCapacitor();
 23956                           
 23957                           ;incstack = 0
 23958  01882A  EC85  F0C4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 23959                           
 23960                           ;main.c: 365: ADCC_ClearAccumulator();
 23961  01882E  EC93  F0C4         	call	_ADCC_ClearAccumulator	;wreg free
 23962                           
 23963                           ;main.c: 368: ADCC_StartConversion(next_channel);
 23964  018832  0101               	movlb	1	; () banked
 23965  018834  51E8               	movf	_next_channel& (0+255),w,b
 23966  018836  EC6F  F0C4         	call	_ADCC_StartConversion
 23967  01883A  0012               	return		;funcret
 23968  01883C                     __end_of_acquisitionTimerCallback:
 23969                           	opt stack 0
 23970                           tosu	equ	0xFFF
 23971                           tosh	equ	0xFFE
 23972                           tosl	equ	0xFFD
 23973                           pclatu	equ	0xFFB
 23974                           pclath	equ	0xFFA
 23975                           tblptru	equ	0xFF8
 23976                           tblptrh	equ	0xFF7
 23977                           tblptrl	equ	0xFF6
 23978                           tablat	equ	0xFF5
 23979                           prodh	equ	0xFF4
 23980                           prodl	equ	0xFF3
 23981                           intcon	equ	0xFF2
 23982                           indf0	equ	0xFEF
 23983                           postinc0	equ	0xFEE
 23984                           fsr0h	equ	0xFEA
 23985                           fsr0l	equ	0xFE9
 23986                           wreg	equ	0xFE8
 23987                           indf1	equ	0xFE7
 23988                           postdec1	equ	0xFE5
 23989                           plusw1	equ	0xFE3
 23990                           fsr1h	equ	0xFE2
 23991                           fsr1l	equ	0xFE1
 23992                           bsr	equ	0xFE0
 23993                           indf2	equ	0xFDF
 23994                           postinc2	equ	0xFDE
 23995                           postdec2	equ	0xFDD
 23996                           plusw2	equ	0xFDB
 23997                           fsr2h	equ	0xFDA
 23998                           fsr2l	equ	0xFD9
 23999                           status	equ	0xFD8
 24000                           
 24001 ;; *************** function _ADCC_StartConversion *****************
 24002 ;; Defined at:
 24003 ;;		line 112 in file "mcc_generated_files/adcc.c"
 24004 ;; Parameters:    Size  Location     Type
 24005 ;;  channel         1    wreg     enum E17310
 24006 ;; Auto vars:     Size  Location     Type
 24007 ;;  channel         1    0[BANK1 ] enum E17310
 24008 ;; Return value:  Size  Location     Type
 24009 ;;                  1    wreg      void 
 24010 ;; Registers used:
 24011 ;;		wreg
 24012 ;; Tracked objects:
 24013 ;;		On entry : 0/0
 24014 ;;		On exit  : 0/0
 24015 ;;		Unchanged: 0/0
 24016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24018 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24020 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24021 ;;Total ram usage:        1 bytes
 24022 ;; Hardware stack levels used:    1
 24023 ;; Hardware stack levels required when called:    9
 24024 ;; This function calls:
 24025 ;;		Nothing
 24026 ;; This function is called by:
 24027 ;;		_acquisitionTimerCallback
 24028 ;; This function uses a non-reentrant model
 24029 ;;
 24030                           
 24031                           	psect	text71
 24032  0188DE                     __ptext71:
 24033                           	opt stack 0
 24034  0188DE                     _ADCC_StartConversion:
 24035                           	opt stack 11
 24036                           
 24037                           ;incstack = 0
 24038                           ;ADCC_StartConversion@channel stored from wreg
 24039  0188DE  0101               	movlb	1	; () banked
 24040  0188E0  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 24041                           
 24042                           ;adcc.c: 115: ADPCH = channel;
 24043  0188E2  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 24044                           
 24045                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 24046  0188E6  8E60               	bsf	3936,7,c	;volatile
 24047                           
 24048                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 24049  0188E8  8060               	bsf	3936,0,c	;volatile
 24050  0188EA  0012               	return		;funcret
 24051  0188EC                     __end_of_ADCC_StartConversion:
 24052                           	opt stack 0
 24053                           tosu	equ	0xFFF
 24054                           tosh	equ	0xFFE
 24055                           tosl	equ	0xFFD
 24056                           pclatu	equ	0xFFB
 24057                           pclath	equ	0xFFA
 24058                           tblptru	equ	0xFF8
 24059                           tblptrh	equ	0xFF7
 24060                           tblptrl	equ	0xFF6
 24061                           tablat	equ	0xFF5
 24062                           prodh	equ	0xFF4
 24063                           prodl	equ	0xFF3
 24064                           intcon	equ	0xFF2
 24065                           indf0	equ	0xFEF
 24066                           postinc0	equ	0xFEE
 24067                           fsr0h	equ	0xFEA
 24068                           fsr0l	equ	0xFE9
 24069                           wreg	equ	0xFE8
 24070                           indf1	equ	0xFE7
 24071                           postdec1	equ	0xFE5
 24072                           plusw1	equ	0xFE3
 24073                           fsr1h	equ	0xFE2
 24074                           fsr1l	equ	0xFE1
 24075                           bsr	equ	0xFE0
 24076                           indf2	equ	0xFDF
 24077                           postinc2	equ	0xFDE
 24078                           postdec2	equ	0xFDD
 24079                           plusw2	equ	0xFDB
 24080                           fsr2h	equ	0xFDA
 24081                           fsr2l	equ	0xFD9
 24082                           status	equ	0xFD8
 24083                           
 24084 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 24085 ;; Defined at:
 24086 ;;		line 174 in file "mcc_generated_files/adcc.c"
 24087 ;; Parameters:    Size  Location     Type
 24088 ;;		None
 24089 ;; Auto vars:     Size  Location     Type
 24090 ;;		None
 24091 ;; Return value:  Size  Location     Type
 24092 ;;                  1    wreg      void 
 24093 ;; Registers used:
 24094 ;;		wreg, status,2
 24095 ;; Tracked objects:
 24096 ;;		On entry : 0/0
 24097 ;;		On exit  : 0/0
 24098 ;;		Unchanged: 0/0
 24099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24104 ;;Total ram usage:        0 bytes
 24105 ;; Hardware stack levels used:    1
 24106 ;; Hardware stack levels required when called:    9
 24107 ;; This function calls:
 24108 ;;		Nothing
 24109 ;; This function is called by:
 24110 ;;		_acquisitionTimerCallback
 24111 ;; This function uses a non-reentrant model
 24112 ;;
 24113                           
 24114                           	psect	text72
 24115  01890A                     __ptext72:
 24116                           	opt stack 0
 24117  01890A                     _ADCC_DischargeSampleCapacitor:
 24118                           	opt stack 11
 24119                           
 24120                           ;adcc.c: 177: ADPCH = 0x3c;
 24121                           
 24122                           ;incstack = 0
 24123  01890A  0E3C               	movlw	60
 24124  01890C  010F               	movlb	15	; () banked
 24125  01890E  6F5F               	movwf	95,b	;volatile
 24126                           
 24127                           ; BSR set to: 15
 24128  018910  0012               	return		;funcret
 24129  018912                     __end_of_ADCC_DischargeSampleCapacitor:
 24130                           	opt stack 0
 24131                           tosu	equ	0xFFF
 24132                           tosh	equ	0xFFE
 24133                           tosl	equ	0xFFD
 24134                           pclatu	equ	0xFFB
 24135                           pclath	equ	0xFFA
 24136                           tblptru	equ	0xFF8
 24137                           tblptrh	equ	0xFF7
 24138                           tblptrl	equ	0xFF6
 24139                           tablat	equ	0xFF5
 24140                           prodh	equ	0xFF4
 24141                           prodl	equ	0xFF3
 24142                           intcon	equ	0xFF2
 24143                           indf0	equ	0xFEF
 24144                           postinc0	equ	0xFEE
 24145                           fsr0h	equ	0xFEA
 24146                           fsr0l	equ	0xFE9
 24147                           wreg	equ	0xFE8
 24148                           indf1	equ	0xFE7
 24149                           postdec1	equ	0xFE5
 24150                           plusw1	equ	0xFE3
 24151                           fsr1h	equ	0xFE2
 24152                           fsr1l	equ	0xFE1
 24153                           bsr	equ	0xFE0
 24154                           indf2	equ	0xFDF
 24155                           postinc2	equ	0xFDE
 24156                           postdec2	equ	0xFDD
 24157                           plusw2	equ	0xFDB
 24158                           fsr2h	equ	0xFDA
 24159                           fsr2l	equ	0xFD9
 24160                           status	equ	0xFD8
 24161                           
 24162 ;; *************** function _ADCC_ClearAccumulator *****************
 24163 ;; Defined at:
 24164 ;;		line 204 in file "mcc_generated_files/adcc.c"
 24165 ;; Parameters:    Size  Location     Type
 24166 ;;		None
 24167 ;; Auto vars:     Size  Location     Type
 24168 ;;		None
 24169 ;; Return value:  Size  Location     Type
 24170 ;;                  1    wreg      void 
 24171 ;; Registers used:
 24172 ;;		None
 24173 ;; Tracked objects:
 24174 ;;		On entry : 0/0
 24175 ;;		On exit  : 0/0
 24176 ;;		Unchanged: 0/0
 24177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24182 ;;Total ram usage:        0 bytes
 24183 ;; Hardware stack levels used:    1
 24184 ;; Hardware stack levels required when called:    9
 24185 ;; This function calls:
 24186 ;;		Nothing
 24187 ;; This function is called by:
 24188 ;;		_acquisitionTimerCallback
 24189 ;; This function uses a non-reentrant model
 24190 ;;
 24191                           
 24192                           	psect	text73
 24193  018926                     __ptext73:
 24194                           	opt stack 0
 24195  018926                     _ADCC_ClearAccumulator:
 24196                           	opt stack 11
 24197                           
 24198                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 24199                           
 24200                           ; BSR set to: 15
 24201                           ;incstack = 0
 24202  018926  010F               	movlb	15	; () banked
 24203  018928  875A               	bsf	90,3,b	;volatile
 24204                           
 24205                           ; BSR set to: 15
 24206  01892A  0012               	return		;funcret
 24207  01892C                     __end_of_ADCC_ClearAccumulator:
 24208                           	opt stack 0
 24209                           tosu	equ	0xFFF
 24210                           tosh	equ	0xFFE
 24211                           tosl	equ	0xFFD
 24212                           pclatu	equ	0xFFB
 24213                           pclath	equ	0xFFA
 24214                           tblptru	equ	0xFF8
 24215                           tblptrh	equ	0xFF7
 24216                           tblptrl	equ	0xFF6
 24217                           tablat	equ	0xFF5
 24218                           prodh	equ	0xFF4
 24219                           prodl	equ	0xFF3
 24220                           intcon	equ	0xFF2
 24221                           indf0	equ	0xFEF
 24222                           postinc0	equ	0xFEE
 24223                           fsr0h	equ	0xFEA
 24224                           fsr0l	equ	0xFE9
 24225                           wreg	equ	0xFE8
 24226                           indf1	equ	0xFE7
 24227                           postdec1	equ	0xFE5
 24228                           plusw1	equ	0xFE3
 24229                           fsr1h	equ	0xFE2
 24230                           fsr1l	equ	0xFE1
 24231                           bsr	equ	0xFE0
 24232                           indf2	equ	0xFDF
 24233                           postinc2	equ	0xFDE
 24234                           postdec2	equ	0xFDD
 24235                           plusw2	equ	0xFDB
 24236                           fsr2h	equ	0xFDA
 24237                           fsr2l	equ	0xFD9
 24238                           status	equ	0xFD8
 24239                           
 24240 ;; *************** function _TMR7_WriteTimer *****************
 24241 ;; Defined at:
 24242 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 24243 ;; Parameters:    Size  Location     Type
 24244 ;;  timerVal        2    0[BANK1 ] unsigned int 
 24245 ;; Auto vars:     Size  Location     Type
 24246 ;;		None
 24247 ;; Return value:  Size  Location     Type
 24248 ;;                  1    wreg      void 
 24249 ;; Registers used:
 24250 ;;		wreg, status,2
 24251 ;; Tracked objects:
 24252 ;;		On entry : 0/0
 24253 ;;		On exit  : 0/0
 24254 ;;		Unchanged: 0/0
 24255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24256 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24259 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24260 ;;Total ram usage:        2 bytes
 24261 ;; Hardware stack levels used:    1
 24262 ;; Hardware stack levels required when called:    9
 24263 ;; This function calls:
 24264 ;;		Nothing
 24265 ;; This function is called by:
 24266 ;;		_TMR7_ISR
 24267 ;;		_TMR7_Reload
 24268 ;; This function uses a non-reentrant model
 24269 ;;
 24270                           
 24271                           	psect	text74
 24272  01869E                     __ptext74:
 24273                           	opt stack 0
 24274  01869E                     _TMR7_WriteTimer:
 24275                           	opt stack 12
 24276                           
 24277                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 24278                           
 24279                           ; BSR set to: 15
 24280                           ;incstack = 0
 24281  01869E  010F               	movlb	15	; () banked
 24282  0186A0  A530               	btfss	48,2,b	;volatile
 24283  0186A2  D009               	goto	i1l640
 24284                           
 24285                           ; BSR set to: 15
 24286                           ;tmr7.c: 130: {
 24287                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 24288  0186A4  9130               	bcf	48,0,b	;volatile
 24289                           
 24290                           ; BSR set to: 15
 24291                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 24292  0186A6  0101               	movlb	1	; () banked
 24293  0186A8  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 24294  0186AA  010F               	movlb	15	; () banked
 24295  0186AC  6F2F               	movwf	47,b	;volatile
 24296                           
 24297                           ; BSR set to: 15
 24298                           ;tmr7.c: 136: TMR7L = timerVal;
 24299  0186AE  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 24300                           
 24301                           ; BSR set to: 15
 24302                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 24303  0186B2  8130               	bsf	48,0,b	;volatile
 24304                           
 24305                           ;tmr7.c: 140: }
 24306  0186B4  0012               	return	
 24307  0186B6                     i1l640:
 24308                           
 24309                           ; BSR set to: 15
 24310                           ;tmr7.c: 141: else
 24311                           ;tmr7.c: 142: {
 24312                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 24313                           
 24314                           ; BSR set to: 15
 24315  0186B6  0101               	movlb	1	; () banked
 24316  0186B8  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 24317  0186BA  010F               	movlb	15	; () banked
 24318  0186BC  6F2F               	movwf	47,b	;volatile
 24319                           
 24320                           ; BSR set to: 15
 24321                           ;tmr7.c: 145: TMR7L = timerVal;
 24322  0186BE  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 24323  0186C2  0012               	return	
 24324  0186C4                     __end_of_TMR7_WriteTimer:
 24325                           	opt stack 0
 24326                           tosu	equ	0xFFF
 24327                           tosh	equ	0xFFE
 24328                           tosl	equ	0xFFD
 24329                           pclatu	equ	0xFFB
 24330                           pclath	equ	0xFFA
 24331                           tblptru	equ	0xFF8
 24332                           tblptrh	equ	0xFF7
 24333                           tblptrl	equ	0xFF6
 24334                           tablat	equ	0xFF5
 24335                           prodh	equ	0xFF4
 24336                           prodl	equ	0xFF3
 24337                           intcon	equ	0xFF2
 24338                           indf0	equ	0xFEF
 24339                           postinc0	equ	0xFEE
 24340                           fsr0h	equ	0xFEA
 24341                           fsr0l	equ	0xFE9
 24342                           wreg	equ	0xFE8
 24343                           indf1	equ	0xFE7
 24344                           postdec1	equ	0xFE5
 24345                           plusw1	equ	0xFE3
 24346                           fsr1h	equ	0xFE2
 24347                           fsr1l	equ	0xFE1
 24348                           bsr	equ	0xFE0
 24349                           indf2	equ	0xFDF
 24350                           postinc2	equ	0xFDE
 24351                           postdec2	equ	0xFDD
 24352                           plusw2	equ	0xFDB
 24353                           fsr2h	equ	0xFDA
 24354                           fsr2l	equ	0xFD9
 24355                           status	equ	0xFD8
 24356                           
 24357 ;; *************** function _TMR6_ISR *****************
 24358 ;; Defined at:
 24359 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 24360 ;; Parameters:    Size  Location     Type
 24361 ;;		None
 24362 ;; Auto vars:     Size  Location     Type
 24363 ;;		None
 24364 ;; Return value:  Size  Location     Type
 24365 ;;                  1    wreg      void 
 24366 ;; Registers used:
 24367 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 24368 ;; Tracked objects:
 24369 ;;		On entry : 0/0
 24370 ;;		On exit  : 0/0
 24371 ;;		Unchanged: 0/0
 24372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24377 ;;Total ram usage:        0 bytes
 24378 ;; Hardware stack levels used:    1
 24379 ;; Hardware stack levels required when called:   10
 24380 ;; This function calls:
 24381 ;;		Absolute function
 24382 ;;		_TMR6_DefaultInterruptHandler
 24383 ;;		_heartbeatTimerCallback
 24384 ;; This function is called by:
 24385 ;;		_INTERRUPT_InterruptManagerLow
 24386 ;; This function uses a non-reentrant model
 24387 ;;
 24388                           
 24389                           	psect	text75
 24390  018628                     __ptext75:
 24391                           	opt stack 0
 24392  018628                     _TMR6_ISR:
 24393                           	opt stack 12
 24394                           
 24395                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 24396                           
 24397                           ; BSR set to: 15
 24398                           ;incstack = 0
 24399  018628  010E               	movlb	14	; () banked
 24400  01862A  9B38               	bcf	56,5,b	;volatile
 24401                           
 24402                           ; BSR set to: 14
 24403                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 24404  01862C  0102               	movlb	2	; () banked
 24405  01862E  515D               	movf	_TMR6_InterruptHandler& (0+255),w,b
 24406  018630  115E               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 24407  018632  115F               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 24408  018634  B4D8               	btfsc	status,2,c
 24409  018636  0012               	return	
 24410                           
 24411                           ; BSR set to: 2
 24412                           ;tmr6.c: 172: {
 24413                           ;tmr6.c: 173: TMR6_InterruptHandler();
 24414  018638  D801               	call	i1u2560_28
 24415  01863A  0012               	return	
 24416  01863C                     i1u2560_28:
 24417  01863C  0005               	push	
 24418  01863E  6EFA               	movwf	pclath,c
 24419  018640  515D               	movf	_TMR6_InterruptHandler& (0+255),w,b
 24420  018642  6EFD               	movwf	tosl,c
 24421  018644  515E               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 24422  018646  6EFE               	movwf	tosh,c
 24423  018648  515F               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 24424  01864A  6EFF               	movwf	tosu,c
 24425  01864C  50FA               	movf	pclath,w,c
 24426  01864E  0012               	return		;indir
 24427  018650                     __end_of_TMR6_ISR:
 24428                           	opt stack 0
 24429                           tosu	equ	0xFFF
 24430                           tosh	equ	0xFFE
 24431                           tosl	equ	0xFFD
 24432                           pclatu	equ	0xFFB
 24433                           pclath	equ	0xFFA
 24434                           tblptru	equ	0xFF8
 24435                           tblptrh	equ	0xFF7
 24436                           tblptrl	equ	0xFF6
 24437                           tablat	equ	0xFF5
 24438                           prodh	equ	0xFF4
 24439                           prodl	equ	0xFF3
 24440                           intcon	equ	0xFF2
 24441                           indf0	equ	0xFEF
 24442                           postinc0	equ	0xFEE
 24443                           fsr0h	equ	0xFEA
 24444                           fsr0l	equ	0xFE9
 24445                           wreg	equ	0xFE8
 24446                           indf1	equ	0xFE7
 24447                           postdec1	equ	0xFE5
 24448                           plusw1	equ	0xFE3
 24449                           fsr1h	equ	0xFE2
 24450                           fsr1l	equ	0xFE1
 24451                           bsr	equ	0xFE0
 24452                           indf2	equ	0xFDF
 24453                           postinc2	equ	0xFDE
 24454                           postdec2	equ	0xFDD
 24455                           plusw2	equ	0xFDB
 24456                           fsr2h	equ	0xFDA
 24457                           fsr2l	equ	0xFD9
 24458                           status	equ	0xFD8
 24459                           
 24460 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 24461 ;; Defined at:
 24462 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 24463 ;; Parameters:    Size  Location     Type
 24464 ;;		None
 24465 ;; Auto vars:     Size  Location     Type
 24466 ;;		None
 24467 ;; Return value:  Size  Location     Type
 24468 ;;                  1    wreg      void 
 24469 ;; Registers used:
 24470 ;;		None
 24471 ;; Tracked objects:
 24472 ;;		On entry : 0/0
 24473 ;;		On exit  : 0/0
 24474 ;;		Unchanged: 0/0
 24475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24480 ;;Total ram usage:        0 bytes
 24481 ;; Hardware stack levels used:    1
 24482 ;; Hardware stack levels required when called:    9
 24483 ;; This function calls:
 24484 ;;		Nothing
 24485 ;; This function is called by:
 24486 ;;		_TMR6_Initialize
 24487 ;;		_TMR6_ISR
 24488 ;; This function uses a non-reentrant model
 24489 ;;
 24490                           
 24491                           	psect	text76
 24492  018938                     __ptext76:
 24493                           	opt stack 0
 24494  018938                     _TMR6_DefaultInterruptHandler:
 24495                           	opt stack 12
 24496                           
 24497                           ;incstack = 0
 24498  018938  0012               	return		;funcret
 24499  01893A                     __end_of_TMR6_DefaultInterruptHandler:
 24500                           	opt stack 0
 24501                           tosu	equ	0xFFF
 24502                           tosh	equ	0xFFE
 24503                           tosl	equ	0xFFD
 24504                           pclatu	equ	0xFFB
 24505                           pclath	equ	0xFFA
 24506                           tblptru	equ	0xFF8
 24507                           tblptrh	equ	0xFF7
 24508                           tblptrl	equ	0xFF6
 24509                           tablat	equ	0xFF5
 24510                           prodh	equ	0xFF4
 24511                           prodl	equ	0xFF3
 24512                           intcon	equ	0xFF2
 24513                           indf0	equ	0xFEF
 24514                           postinc0	equ	0xFEE
 24515                           fsr0h	equ	0xFEA
 24516                           fsr0l	equ	0xFE9
 24517                           wreg	equ	0xFE8
 24518                           indf1	equ	0xFE7
 24519                           postdec1	equ	0xFE5
 24520                           plusw1	equ	0xFE3
 24521                           fsr1h	equ	0xFE2
 24522                           fsr1l	equ	0xFE1
 24523                           bsr	equ	0xFE0
 24524                           indf2	equ	0xFDF
 24525                           postinc2	equ	0xFDE
 24526                           postdec2	equ	0xFDD
 24527                           plusw2	equ	0xFDB
 24528                           fsr2h	equ	0xFDA
 24529                           fsr2l	equ	0xFD9
 24530                           status	equ	0xFD8
 24531                           
 24532 ;; *************** function _heartbeatTimerCallback *****************
 24533 ;; Defined at:
 24534 ;;		line 140 in file "main.c"
 24535 ;; Parameters:    Size  Location     Type
 24536 ;;		None
 24537 ;; Auto vars:     Size  Location     Type
 24538 ;;		None
 24539 ;; Return value:  Size  Location     Type
 24540 ;;                  1    wreg      void 
 24541 ;; Registers used:
 24542 ;;		wreg, status,2, status,0
 24543 ;; Tracked objects:
 24544 ;;		On entry : 0/0
 24545 ;;		On exit  : 0/0
 24546 ;;		Unchanged: 0/0
 24547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24550 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24551 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24552 ;;Total ram usage:        1 bytes
 24553 ;; Hardware stack levels used:    1
 24554 ;; Hardware stack levels required when called:    9
 24555 ;; This function calls:
 24556 ;;		Nothing
 24557 ;; This function is called by:
 24558 ;;		_main
 24559 ;;		_TMR6_ISR
 24560 ;; This function uses a non-reentrant model
 24561 ;;
 24562                           
 24563                           	psect	text77
 24564  018324                     __ptext77:
 24565                           	opt stack 0
 24566  018324                     _heartbeatTimerCallback:
 24567                           	opt stack 12
 24568                           
 24569                           ;main.c: 143: LATFbits.LATF2 = !LATFbits.LATF2;
 24570                           
 24571                           ;incstack = 0
 24572  018324  B47E               	btfsc	3966,2,c	;volatile
 24573  018326  D004               	goto	i1u1090_20
 24574  018328  0101               	movlb	1	; () banked
 24575  01832A  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 24576  01832C  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 24577  01832E  D002               	goto	i1u1091_28
 24578  018330                     i1u1090_20:
 24579  018330  0101               	movlb	1	; () banked
 24580  018332  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 24581  018334                     i1u1091_28:
 24582  018334  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 24583  018336  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 24584  018338  507E               	movf	3966,w,c	;volatile
 24585  01833A  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 24586  01833C  0BFB               	andlw	-5
 24587  01833E  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 24588  018340  6E7E               	movwf	3966,c	;volatile
 24589                           
 24590                           ;main.c: 146: dev_on_time++;
 24591  018342  0E01               	movlw	1
 24592  018344  0102               	movlb	2	; () banked
 24593  018346  2744               	addwf	_dev_on_time& (0+255),f,b	;volatile
 24594  018348  0E00               	movlw	0
 24595  01834A  2345               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 24596  01834C  2346               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 24597  01834E  2347               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 24598                           
 24599                           ; BSR set to: 2
 24600                           ;main.c: 149: if (load_enable) {
 24601  018350  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 24602  018352  D006               	goto	i1l953
 24603                           
 24604                           ; BSR set to: 2
 24605                           ;main.c: 151: load_on_time++;
 24606  018354  0E01               	movlw	1
 24607  018356  2740               	addwf	_load_on_time& (0+255),f,b	;volatile
 24608  018358  0E00               	movlw	0
 24609  01835A  2341               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 24610  01835C  2342               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 24611  01835E  2343               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 24612  018360                     i1l953:
 24613                           
 24614                           ; BSR set to: 2
 24615  018360  0004               	clrwdt		;# 
 24616  018362  0012               	return		;funcret
 24617  018364                     __end_of_heartbeatTimerCallback:
 24618                           	opt stack 0
 24619                           tosu	equ	0xFFF
 24620                           tosh	equ	0xFFE
 24621                           tosl	equ	0xFFD
 24622                           pclatu	equ	0xFFB
 24623                           pclath	equ	0xFFA
 24624                           tblptru	equ	0xFF8
 24625                           tblptrh	equ	0xFF7
 24626                           tblptrl	equ	0xFF6
 24627                           tablat	equ	0xFF5
 24628                           prodh	equ	0xFF4
 24629                           prodl	equ	0xFF3
 24630                           intcon	equ	0xFF2
 24631                           indf0	equ	0xFEF
 24632                           postinc0	equ	0xFEE
 24633                           fsr0h	equ	0xFEA
 24634                           fsr0l	equ	0xFE9
 24635                           wreg	equ	0xFE8
 24636                           indf1	equ	0xFE7
 24637                           postdec1	equ	0xFE5
 24638                           plusw1	equ	0xFE3
 24639                           fsr1h	equ	0xFE2
 24640                           fsr1l	equ	0xFE1
 24641                           bsr	equ	0xFE0
 24642                           indf2	equ	0xFDF
 24643                           postinc2	equ	0xFDE
 24644                           postdec2	equ	0xFDD
 24645                           plusw2	equ	0xFDB
 24646                           fsr2h	equ	0xFDA
 24647                           fsr2l	equ	0xFD9
 24648                           status	equ	0xFD8
 24649                           
 24650 ;; *************** function _HLVD_ISR *****************
 24651 ;; Defined at:
 24652 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 24653 ;; Parameters:    Size  Location     Type
 24654 ;;		None
 24655 ;; Auto vars:     Size  Location     Type
 24656 ;;		None
 24657 ;; Return value:  Size  Location     Type
 24658 ;;                  1    wreg      void 
 24659 ;; Registers used:
 24660 ;;		None
 24661 ;; Tracked objects:
 24662 ;;		On entry : 0/0
 24663 ;;		On exit  : 0/0
 24664 ;;		Unchanged: 0/0
 24665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24670 ;;Total ram usage:        0 bytes
 24671 ;; Hardware stack levels used:    1
 24672 ;; Hardware stack levels required when called:    9
 24673 ;; This function calls:
 24674 ;;		Nothing
 24675 ;; This function is called by:
 24676 ;;		_INTERRUPT_InterruptManagerLow
 24677 ;; This function uses a non-reentrant model
 24678 ;;
 24679                           
 24680                           	psect	text78
 24681  018912                     __ptext78:
 24682                           	opt stack 0
 24683  018912                     _HLVD_ISR:
 24684                           	opt stack 13
 24685                           
 24686                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 24687                           
 24688                           ;incstack = 0
 24689  018912  010E               	movlb	14	; () banked
 24690  018914  9F35               	bcf	53,7,b	;volatile
 24691                           
 24692                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 24693  018916  845E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 24694                           
 24695                           ; BSR set to: 14
 24696  018918  0012               	return		;funcret
 24697  01891A                     __end_of_HLVD_ISR:
 24698                           	opt stack 0
 24699                           tosu	equ	0xFFF
 24700                           tosh	equ	0xFFE
 24701                           tosl	equ	0xFFD
 24702                           pclatu	equ	0xFFB
 24703                           pclath	equ	0xFFA
 24704                           tblptru	equ	0xFF8
 24705                           tblptrh	equ	0xFF7
 24706                           tblptrl	equ	0xFF6
 24707                           tablat	equ	0xFF5
 24708                           prodh	equ	0xFF4
 24709                           prodl	equ	0xFF3
 24710                           intcon	equ	0xFF2
 24711                           indf0	equ	0xFEF
 24712                           postinc0	equ	0xFEE
 24713                           fsr0h	equ	0xFEA
 24714                           fsr0l	equ	0xFE9
 24715                           wreg	equ	0xFE8
 24716                           indf1	equ	0xFE7
 24717                           postdec1	equ	0xFE5
 24718                           plusw1	equ	0xFE3
 24719                           fsr1h	equ	0xFE2
 24720                           fsr1l	equ	0xFE1
 24721                           bsr	equ	0xFE0
 24722                           indf2	equ	0xFDF
 24723                           postinc2	equ	0xFDE
 24724                           postdec2	equ	0xFDD
 24725                           plusw2	equ	0xFDB
 24726                           fsr2h	equ	0xFDA
 24727                           fsr2l	equ	0xFD9
 24728                           status	equ	0xFD8
 24729                           
 24730 ;; *************** function _EUSART2_Transmit_ISR *****************
 24731 ;; Defined at:
 24732 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 24733 ;; Parameters:    Size  Location     Type
 24734 ;;		None
 24735 ;; Auto vars:     Size  Location     Type
 24736 ;;		None
 24737 ;; Return value:  Size  Location     Type
 24738 ;;                  1    wreg      void 
 24739 ;; Registers used:
 24740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24741 ;; Tracked objects:
 24742 ;;		On entry : 0/0
 24743 ;;		On exit  : 0/0
 24744 ;;		Unchanged: 0/0
 24745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24750 ;;Total ram usage:        0 bytes
 24751 ;; Hardware stack levels used:    1
 24752 ;; Hardware stack levels required when called:    9
 24753 ;; This function calls:
 24754 ;;		Nothing
 24755 ;; This function is called by:
 24756 ;;		_EUSART2_Initialize
 24757 ;;		_INTERRUPT_InterruptManagerLow
 24758 ;; This function uses a non-reentrant model
 24759 ;;
 24760                           
 24761                           	psect	text79
 24762  01844A                     __ptext79:
 24763                           	opt stack 0
 24764  01844A                     _EUSART2_Transmit_ISR:
 24765                           	opt stack 13
 24766                           
 24767                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 24768                           
 24769                           ; BSR set to: 14
 24770                           ;incstack = 0
 24771  01844A  0E80               	movlw	128
 24772  01844C  0101               	movlb	1	; () banked
 24773  01844E  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 24774  018450  D014               	goto	i1l403
 24775                           
 24776                           ; BSR set to: 1
 24777                           ;eusart2.c: 203: {
 24778                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 24779  018452  51E2               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 24780  018454  0D01               	mullw	1
 24781  018456  0E00               	movlw	low _eusart2TxBuffer
 24782  018458  24F3               	addwf	prodl,w,c
 24783  01845A  6ED9               	movwf	fsr2l,c
 24784  01845C  0E03               	movlw	high _eusart2TxBuffer
 24785  01845E  20F4               	addwfc	prodh,w,c
 24786  018460  6EDA               	movwf	fsr2h,c
 24787  018462  50DF               	movf	indf2,w,c
 24788  018464  010E               	movlb	14	; () banked
 24789  018466  6FF2               	movwf	242,b	;volatile
 24790                           
 24791                           ; BSR set to: 14
 24792  018468  0101               	movlb	1	; () banked
 24793  01846A  2BE2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 24794                           
 24795                           ; BSR set to: 1
 24796                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 24797  01846C  0E7F               	movlw	127
 24798  01846E  65E2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 24799  018470  D002               	goto	i1l404
 24800                           
 24801                           ; BSR set to: 1
 24802                           ;eusart2.c: 206: {
 24803                           ;eusart2.c: 207: eusart2TxTail = 0;
 24804  018472  0E00               	movlw	0
 24805  018474  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 24806  018476                     i1l404:
 24807                           
 24808                           ; BSR set to: 1
 24809                           ;eusart2.c: 208: }
 24810                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 24811                           
 24812                           ; BSR set to: 1
 24813  018476  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 24814                           
 24815                           ;eusart2.c: 210: }
 24816  018478  0012               	return	
 24817  01847A                     i1l403:
 24818                           
 24819                           ; BSR set to: 1
 24820                           ;eusart2.c: 211: else
 24821                           ;eusart2.c: 212: {
 24822                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 24823  01847A  010E               	movlb	14	; () banked
 24824  01847C  9D2C               	bcf	44,6,b	;volatile
 24825  01847E  0012               	return	
 24826  018480                     __end_of_EUSART2_Transmit_ISR:
 24827                           	opt stack 0
 24828                           tosu	equ	0xFFF
 24829                           tosh	equ	0xFFE
 24830                           tosl	equ	0xFFD
 24831                           pclatu	equ	0xFFB
 24832                           pclath	equ	0xFFA
 24833                           tblptru	equ	0xFF8
 24834                           tblptrh	equ	0xFF7
 24835                           tblptrl	equ	0xFF6
 24836                           tablat	equ	0xFF5
 24837                           prodh	equ	0xFF4
 24838                           prodl	equ	0xFF3
 24839                           intcon	equ	0xFF2
 24840                           indf0	equ	0xFEF
 24841                           postinc0	equ	0xFEE
 24842                           fsr0h	equ	0xFEA
 24843                           fsr0l	equ	0xFE9
 24844                           wreg	equ	0xFE8
 24845                           indf1	equ	0xFE7
 24846                           postdec1	equ	0xFE5
 24847                           plusw1	equ	0xFE3
 24848                           fsr1h	equ	0xFE2
 24849                           fsr1l	equ	0xFE1
 24850                           bsr	equ	0xFE0
 24851                           indf2	equ	0xFDF
 24852                           postinc2	equ	0xFDE
 24853                           postdec2	equ	0xFDD
 24854                           plusw2	equ	0xFDB
 24855                           fsr2h	equ	0xFDA
 24856                           fsr2l	equ	0xFD9
 24857                           status	equ	0xFD8
 24858                           
 24859 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 24860 ;; Defined at:
 24861 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 24862 ;; Parameters:    Size  Location     Type
 24863 ;;		None
 24864 ;; Auto vars:     Size  Location     Type
 24865 ;;		None
 24866 ;; Return value:  Size  Location     Type
 24867 ;;                  1    wreg      void 
 24868 ;; Registers used:
 24869 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24870 ;; Tracked objects:
 24871 ;;		On entry : 0/0
 24872 ;;		On exit  : 0/0
 24873 ;;		Unchanged: 0/0
 24874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24877 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24878 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24879 ;;Total ram usage:       18 bytes
 24880 ;; Hardware stack levels used:    1
 24881 ;; Hardware stack levels required when called:    8
 24882 ;; This function calls:
 24883 ;;		Absolute function
 24884 ;;		_ADCC_ThresholdISR
 24885 ;;		_EUSART2_Receive_ISR
 24886 ;;		_TMR5_ISR
 24887 ;; This function is called by:
 24888 ;;		Interrupt level 2
 24889 ;; This function uses a non-reentrant model
 24890 ;;
 24891                           
 24892                           	psect	intcode
 24893  000008                     __pintcode:
 24894                           	opt stack 0
 24895  000008                     _INTERRUPT_InterruptManagerHigh:
 24896                           	opt stack 11
 24897                           
 24898                           ;incstack = 0
 24899  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24900  00000A  EF24  F0BA         	goto	int_func
 24901                           tosu	equ	0xFFF
 24902                           tosh	equ	0xFFE
 24903                           tosl	equ	0xFFD
 24904                           pclatu	equ	0xFFB
 24905                           pclath	equ	0xFFA
 24906                           tblptru	equ	0xFF8
 24907                           tblptrh	equ	0xFF7
 24908                           tblptrl	equ	0xFF6
 24909                           tablat	equ	0xFF5
 24910                           prodh	equ	0xFF4
 24911                           prodl	equ	0xFF3
 24912                           intcon	equ	0xFF2
 24913                           indf0	equ	0xFEF
 24914                           postinc0	equ	0xFEE
 24915                           fsr0h	equ	0xFEA
 24916                           fsr0l	equ	0xFE9
 24917                           wreg	equ	0xFE8
 24918                           indf1	equ	0xFE7
 24919                           postdec1	equ	0xFE5
 24920                           plusw1	equ	0xFE3
 24921                           fsr1h	equ	0xFE2
 24922                           fsr1l	equ	0xFE1
 24923                           bsr	equ	0xFE0
 24924                           indf2	equ	0xFDF
 24925                           postinc2	equ	0xFDE
 24926                           postdec2	equ	0xFDD
 24927                           plusw2	equ	0xFDB
 24928                           fsr2h	equ	0xFDA
 24929                           fsr2l	equ	0xFD9
 24930                           status	equ	0xFD8
 24931                           
 24932                           	psect	intcode_body
 24933  017448                     __pintcode_body:
 24934                           	opt stack 11
 24935  017448                     int_func:
 24936                           	opt stack 11
 24937  017448  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 24938  01744C  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 24939  017450  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 24940  017454  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 24941  017458  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 24942  01745C  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 24943  017460  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 24944  017464  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 24945  017468  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 24946  01746C  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 24947  017470  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 24948  017474  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 24949  017478  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 24950  01747C  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 24951  017480  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 24952  017484  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 24953  017488  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 24954  01748C  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 24955                           
 24956                           ;interrupt_manager.c: 86: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 24957  017490  010E               	movlb	14	; () banked
 24958  017492  BF2C               	btfsc	44,7,b	;volatile
 24959                           
 24960                           ; BSR set to: 14
 24961  017494  AF36               	btfss	54,7,b	;volatile
 24962  017496  D00D               	goto	i2l212
 24963                           
 24964                           ; BSR set to: 14
 24965                           ;interrupt_manager.c: 87: {
 24966                           ;interrupt_manager.c: 88: EUSART2_RxDefaultInterruptHandler();
 24967  017498  D801               	call	i2u2570_48
 24968  01749A  D016               	goto	i2l216
 24969  01749C                     i2u2570_48:
 24970  01749C  0005               	push	
 24971  01749E  6EFA               	movwf	pclath,c
 24972  0174A0  0102               	movlb	2	; () banked
 24973  0174A2  5160               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 24974  0174A4  6EFD               	movwf	tosl,c
 24975  0174A6  5161               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 24976  0174A8  6EFE               	movwf	tosh,c
 24977  0174AA  5162               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 24978  0174AC  6EFF               	movwf	tosu,c
 24979  0174AE  50FA               	movf	pclath,w,c
 24980  0174B0  0012               	return		;indir
 24981  0174B2                     i2l212:
 24982                           
 24983                           ; BSR set to: 14
 24984                           ;interrupt_manager.c: 90: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 24985  0174B2  B92E               	btfsc	46,4,b	;volatile
 24986                           
 24987                           ; BSR set to: 14
 24988  0174B4  A938               	btfss	56,4,b	;volatile
 24989  0174B6  D003               	goto	i2l214
 24990                           
 24991                           ; BSR set to: 14
 24992                           ;interrupt_manager.c: 91: {
 24993                           ;interrupt_manager.c: 92: TMR5_ISR();
 24994  0174B8  EC5A  F0C2         	call	_TMR5_ISR	;wreg free
 24995                           
 24996                           ;interrupt_manager.c: 93: }
 24997  0174BC  D005               	goto	i2l216
 24998  0174BE                     i2l214:
 24999                           
 25000                           ; BSR set to: 14
 25001                           ;interrupt_manager.c: 94: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 25002  0174BE  B32A               	btfsc	42,1,b	;volatile
 25003                           
 25004                           ; BSR set to: 14
 25005  0174C0  A334               	btfss	52,1,b	;volatile
 25006  0174C2  D002               	goto	i2l216
 25007                           
 25008                           ; BSR set to: 14
 25009                           ;interrupt_manager.c: 95: {
 25010                           ;interrupt_manager.c: 96: ADCC_ThresholdISR();
 25011  0174C4  EC28  F0C3         	call	_ADCC_ThresholdISR	;wreg free
 25012  0174C8                     i2l216:
 25013                           
 25014                           ;interrupt_manager.c: 98: else
 25015                           ;interrupt_manager.c: 99: {
 25016  0174C8  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 25017  0174CC  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 25018  0174D0  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 25019  0174D4  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 25020  0174D8  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 25021  0174DC  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 25022  0174E0  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 25023  0174E4  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 25024  0174E8  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 25025  0174EC  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 25026  0174F0  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 25027  0174F4  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 25028  0174F8  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 25029  0174FC  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 25030  017500  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 25031  017504  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 25032  017508  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 25033  01750C  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 25034  017510  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25035  017512  0011               	retfie		f
 25036  017514                     __end_of_INTERRUPT_InterruptManagerHigh:
 25037                           	opt stack 0
 25038                           tosu	equ	0xFFF
 25039                           tosh	equ	0xFFE
 25040                           tosl	equ	0xFFD
 25041                           pclatu	equ	0xFFB
 25042                           pclath	equ	0xFFA
 25043                           tblptru	equ	0xFF8
 25044                           tblptrh	equ	0xFF7
 25045                           tblptrl	equ	0xFF6
 25046                           tablat	equ	0xFF5
 25047                           prodh	equ	0xFF4
 25048                           prodl	equ	0xFF3
 25049                           intcon	equ	0xFF2
 25050                           indf0	equ	0xFEF
 25051                           postinc0	equ	0xFEE
 25052                           fsr0h	equ	0xFEA
 25053                           fsr0l	equ	0xFE9
 25054                           wreg	equ	0xFE8
 25055                           indf1	equ	0xFE7
 25056                           postdec1	equ	0xFE5
 25057                           plusw1	equ	0xFE3
 25058                           fsr1h	equ	0xFE2
 25059                           fsr1l	equ	0xFE1
 25060                           bsr	equ	0xFE0
 25061                           indf2	equ	0xFDF
 25062                           postinc2	equ	0xFDE
 25063                           postdec2	equ	0xFDD
 25064                           plusw2	equ	0xFDB
 25065                           fsr2h	equ	0xFDA
 25066                           fsr2l	equ	0xFD9
 25067                           status	equ	0xFD8
 25068                           
 25069 ;; *************** function _TMR5_ISR *****************
 25070 ;; Defined at:
 25071 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25072 ;; Parameters:    Size  Location     Type
 25073 ;;		None
 25074 ;; Auto vars:     Size  Location     Type
 25075 ;;		None
 25076 ;; Return value:  Size  Location     Type
 25077 ;;                  1    wreg      void 
 25078 ;; Registers used:
 25079 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 25080 ;; Tracked objects:
 25081 ;;		On entry : 0/0
 25082 ;;		On exit  : 0/0
 25083 ;;		Unchanged: 0/0
 25084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25089 ;;Total ram usage:        0 bytes
 25090 ;; Hardware stack levels used:    1
 25091 ;; Hardware stack levels required when called:    1
 25092 ;; This function calls:
 25093 ;;		Absolute function
 25094 ;;		_TMR5_DefaultInterruptHandler
 25095 ;;		_TMR5_WriteTimer
 25096 ;; This function is called by:
 25097 ;;		_INTERRUPT_InterruptManagerHigh
 25098 ;; This function uses a non-reentrant model
 25099 ;;
 25100                           
 25101                           	psect	text81
 25102  0184B4                     __ptext81:
 25103                           	opt stack 0
 25104  0184B4                     _TMR5_ISR:
 25105                           	opt stack 17
 25106                           
 25107                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 25108                           
 25109                           ;incstack = 0
 25110  0184B4  010E               	movlb	14	; () banked
 25111  0184B6  9938               	bcf	56,4,b	;volatile
 25112                           
 25113                           ; BSR set to: 14
 25114                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 25115  0184B8  C1D7  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 25116  0184BC  C1D8  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 25117  0184C0  ECD3  F0C3         	call	_TMR5_WriteTimer	;wreg free
 25118                           
 25119                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 25120  0184C4  0102               	movlb	2	; () banked
 25121  0184C6  5154               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25122  0184C8  1155               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25123  0184CA  1156               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25124  0184CC  B4D8               	btfsc	status,2,c
 25125  0184CE  0012               	return	
 25126                           
 25127                           ; BSR set to: 2
 25128                           ;tmr5.c: 172: {
 25129                           ;tmr5.c: 173: TMR5_InterruptHandler();
 25130  0184D0  D801               	call	i2u2556_48
 25131  0184D2  0012               	return	
 25132  0184D4                     i2u2556_48:
 25133  0184D4  0005               	push	
 25134  0184D6  6EFA               	movwf	pclath,c
 25135  0184D8  5154               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25136  0184DA  6EFD               	movwf	tosl,c
 25137  0184DC  5155               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25138  0184DE  6EFE               	movwf	tosh,c
 25139  0184E0  5156               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25140  0184E2  6EFF               	movwf	tosu,c
 25141  0184E4  50FA               	movf	pclath,w,c
 25142  0184E6  0012               	return		;indir
 25143  0184E8                     __end_of_TMR5_ISR:
 25144                           	opt stack 0
 25145                           tosu	equ	0xFFF
 25146                           tosh	equ	0xFFE
 25147                           tosl	equ	0xFFD
 25148                           pclatu	equ	0xFFB
 25149                           pclath	equ	0xFFA
 25150                           tblptru	equ	0xFF8
 25151                           tblptrh	equ	0xFF7
 25152                           tblptrl	equ	0xFF6
 25153                           tablat	equ	0xFF5
 25154                           prodh	equ	0xFF4
 25155                           prodl	equ	0xFF3
 25156                           intcon	equ	0xFF2
 25157                           indf0	equ	0xFEF
 25158                           postinc0	equ	0xFEE
 25159                           fsr0h	equ	0xFEA
 25160                           fsr0l	equ	0xFE9
 25161                           wreg	equ	0xFE8
 25162                           indf1	equ	0xFE7
 25163                           postdec1	equ	0xFE5
 25164                           plusw1	equ	0xFE3
 25165                           fsr1h	equ	0xFE2
 25166                           fsr1l	equ	0xFE1
 25167                           bsr	equ	0xFE0
 25168                           indf2	equ	0xFDF
 25169                           postinc2	equ	0xFDE
 25170                           postdec2	equ	0xFDD
 25171                           plusw2	equ	0xFDB
 25172                           fsr2h	equ	0xFDA
 25173                           fsr2l	equ	0xFD9
 25174                           status	equ	0xFD8
 25175                           
 25176 ;; *************** function _TMR5_WriteTimer *****************
 25177 ;; Defined at:
 25178 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 25179 ;; Parameters:    Size  Location     Type
 25180 ;;  timerVal        2    0[COMRAM] unsigned int 
 25181 ;; Auto vars:     Size  Location     Type
 25182 ;;		None
 25183 ;; Return value:  Size  Location     Type
 25184 ;;                  1    wreg      void 
 25185 ;; Registers used:
 25186 ;;		wreg, status,2
 25187 ;; Tracked objects:
 25188 ;;		On entry : 0/0
 25189 ;;		On exit  : 0/0
 25190 ;;		Unchanged: 0/0
 25191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25196 ;;Total ram usage:        2 bytes
 25197 ;; Hardware stack levels used:    1
 25198 ;; This function calls:
 25199 ;;		Nothing
 25200 ;; This function is called by:
 25201 ;;		_TMR5_ISR
 25202 ;;		_TMR5_Reload
 25203 ;; This function uses a non-reentrant model
 25204 ;;
 25205                           
 25206                           	psect	text82
 25207  0187A6                     __ptext82:
 25208                           	opt stack 0
 25209  0187A6                     _TMR5_WriteTimer:
 25210                           	opt stack 17
 25211                           
 25212                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 25213                           
 25214                           ;incstack = 0
 25215  0187A6  A4C3               	btfss	4035,2,c	;volatile
 25216  0187A8  D007               	goto	i2l714
 25217                           
 25218                           ;tmr5.c: 130: {
 25219                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 25220  0187AA  90C3               	bcf	4035,0,c	;volatile
 25221                           
 25222                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 25223  0187AC  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 25224  0187AE  6EC2               	movwf	4034,c	;volatile
 25225                           
 25226                           ;tmr5.c: 136: TMR5L = timerVal;
 25227  0187B0  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 25228                           
 25229                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 25230  0187B4  80C3               	bsf	4035,0,c	;volatile
 25231                           
 25232                           ;tmr5.c: 140: }
 25233  0187B6  0012               	return	
 25234  0187B8                     i2l714:
 25235                           
 25236                           ;tmr5.c: 141: else
 25237                           ;tmr5.c: 142: {
 25238                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 25239  0187B8  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 25240  0187BA  6EC2               	movwf	4034,c	;volatile
 25241                           
 25242                           ;tmr5.c: 145: TMR5L = timerVal;
 25243  0187BC  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 25244  0187C0  0012               	return	
 25245  0187C2                     __end_of_TMR5_WriteTimer:
 25246                           	opt stack 0
 25247                           tosu	equ	0xFFF
 25248                           tosh	equ	0xFFE
 25249                           tosl	equ	0xFFD
 25250                           pclatu	equ	0xFFB
 25251                           pclath	equ	0xFFA
 25252                           tblptru	equ	0xFF8
 25253                           tblptrh	equ	0xFF7
 25254                           tblptrl	equ	0xFF6
 25255                           tablat	equ	0xFF5
 25256                           prodh	equ	0xFF4
 25257                           prodl	equ	0xFF3
 25258                           intcon	equ	0xFF2
 25259                           indf0	equ	0xFEF
 25260                           postinc0	equ	0xFEE
 25261                           fsr0h	equ	0xFEA
 25262                           fsr0l	equ	0xFE9
 25263                           wreg	equ	0xFE8
 25264                           indf1	equ	0xFE7
 25265                           postdec1	equ	0xFE5
 25266                           plusw1	equ	0xFE3
 25267                           fsr1h	equ	0xFE2
 25268                           fsr1l	equ	0xFE1
 25269                           bsr	equ	0xFE0
 25270                           indf2	equ	0xFDF
 25271                           postinc2	equ	0xFDE
 25272                           postdec2	equ	0xFDD
 25273                           plusw2	equ	0xFDB
 25274                           fsr2h	equ	0xFDA
 25275                           fsr2l	equ	0xFD9
 25276                           status	equ	0xFD8
 25277                           
 25278 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25279 ;; Defined at:
 25280 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25281 ;; Parameters:    Size  Location     Type
 25282 ;;		None
 25283 ;; Auto vars:     Size  Location     Type
 25284 ;;		None
 25285 ;; Return value:  Size  Location     Type
 25286 ;;                  1    wreg      void 
 25287 ;; Registers used:
 25288 ;;		None
 25289 ;; Tracked objects:
 25290 ;;		On entry : 0/0
 25291 ;;		On exit  : 0/0
 25292 ;;		Unchanged: 0/0
 25293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25298 ;;Total ram usage:        0 bytes
 25299 ;; Hardware stack levels used:    1
 25300 ;; This function calls:
 25301 ;;		Nothing
 25302 ;; This function is called by:
 25303 ;;		_TMR5_Initialize
 25304 ;;		_TMR5_ISR
 25305 ;; This function uses a non-reentrant model
 25306 ;;
 25307                           
 25308                           	psect	text83
 25309  01893A                     __ptext83:
 25310                           	opt stack 0
 25311  01893A                     _TMR5_DefaultInterruptHandler:
 25312                           	opt stack 17
 25313                           
 25314                           ;incstack = 0
 25315  01893A  0012               	return		;funcret
 25316  01893C                     __end_of_TMR5_DefaultInterruptHandler:
 25317                           	opt stack 0
 25318                           tosu	equ	0xFFF
 25319                           tosh	equ	0xFFE
 25320                           tosl	equ	0xFFD
 25321                           pclatu	equ	0xFFB
 25322                           pclath	equ	0xFFA
 25323                           tblptru	equ	0xFF8
 25324                           tblptrh	equ	0xFF7
 25325                           tblptrl	equ	0xFF6
 25326                           tablat	equ	0xFF5
 25327                           prodh	equ	0xFF4
 25328                           prodl	equ	0xFF3
 25329                           intcon	equ	0xFF2
 25330                           indf0	equ	0xFEF
 25331                           postinc0	equ	0xFEE
 25332                           fsr0h	equ	0xFEA
 25333                           fsr0l	equ	0xFE9
 25334                           wreg	equ	0xFE8
 25335                           indf1	equ	0xFE7
 25336                           postdec1	equ	0xFE5
 25337                           plusw1	equ	0xFE3
 25338                           fsr1h	equ	0xFE2
 25339                           fsr1l	equ	0xFE1
 25340                           bsr	equ	0xFE0
 25341                           indf2	equ	0xFDF
 25342                           postinc2	equ	0xFDE
 25343                           postdec2	equ	0xFDD
 25344                           plusw2	equ	0xFDB
 25345                           fsr2h	equ	0xFDA
 25346                           fsr2l	equ	0xFD9
 25347                           status	equ	0xFD8
 25348                           
 25349 ;; *************** function _EUSART2_Receive_ISR *****************
 25350 ;; Defined at:
 25351 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 25352 ;; Parameters:    Size  Location     Type
 25353 ;;		None
 25354 ;; Auto vars:     Size  Location     Type
 25355 ;;		None
 25356 ;; Return value:  Size  Location     Type
 25357 ;;                  1    wreg      void 
 25358 ;; Registers used:
 25359 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25360 ;; Tracked objects:
 25361 ;;		On entry : 0/0
 25362 ;;		On exit  : 0/0
 25363 ;;		Unchanged: 0/0
 25364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25369 ;;Total ram usage:        0 bytes
 25370 ;; Hardware stack levels used:    1
 25371 ;; Hardware stack levels required when called:    3
 25372 ;; This function calls:
 25373 ;;		i2_printf
 25374 ;; This function is called by:
 25375 ;;		_EUSART2_Initialize
 25376 ;;		_INTERRUPT_InterruptManagerHigh
 25377 ;; This function uses a non-reentrant model
 25378 ;;
 25379                           
 25380                           	psect	text84
 25381  017514                     __ptext84:
 25382                           	opt stack 0
 25383  017514                     _EUSART2_Receive_ISR:
 25384                           	opt stack 15
 25385                           
 25386                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 25387                           
 25388                           ;incstack = 0
 25389  017514  010E               	movlb	14	; () banked
 25390  017516  A3F5               	btfss	245,1,b	;volatile
 25391  017518  D003               	goto	i2l409
 25392                           
 25393                           ; BSR set to: 14
 25394                           ;eusart2.c: 221: {
 25395                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 25396  01751A  99F5               	bcf	245,4,b	;volatile
 25397                           
 25398                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 25399  01751C  89F5               	bsf	245,4,b	;volatile
 25400                           
 25401                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 25402  01751E  827E               	bsf	3966,1,c	;volatile
 25403  017520                     i2l409:
 25404                           
 25405                           ; BSR set to: 14
 25406                           ;eusart2.c: 227: }
 25407                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 25408  017520  927E               	bcf	3966,1,c	;volatile
 25409                           
 25410                           ; BSR set to: 14
 25411                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 25412  017522  0100               	movlb	0	; () banked
 25413  017524  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 25414  017526  0D01               	mullw	1
 25415  017528  0E00               	movlw	low _eusart2RxBuffer
 25416  01752A  24F3               	addwf	prodl,w,c
 25417  01752C  6ED9               	movwf	fsr2l,c
 25418  01752E  0E02               	movlw	high _eusart2RxBuffer
 25419  017530  20F4               	addwfc	prodh,w,c
 25420  017532  6EDA               	movwf	fsr2h,c
 25421  017534  CEF1 FFDF          	movff	3825,indf2	;volatile
 25422                           
 25423                           ; BSR set to: 0
 25424  017538  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 25425                           
 25426                           ; BSR set to: 0
 25427                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 25428  01753A  0E3F               	movlw	63
 25429  01753C  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 25430  01753E  D002               	goto	i2l410
 25431                           
 25432                           ; BSR set to: 0
 25433                           ;eusart2.c: 234: {
 25434                           ;eusart2.c: 235: eusart2RxHead = 0;
 25435  017540  0E00               	movlw	0
 25436  017542  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 25437  017544                     i2l410:
 25438                           
 25439                           ; BSR set to: 0
 25440                           ;eusart2.c: 236: }
 25441                           ;eusart2.c: 237: eusart2RxCount++;
 25442                           
 25443                           ; BSR set to: 0
 25444  017544  0101               	movlb	1	; () banked
 25445  017546  2BDF               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 25446                           
 25447                           ; BSR set to: 1
 25448                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 25449  017548  0E0A               	movlw	10
 25450  01754A  010E               	movlb	14	; () banked
 25451  01754C  19F1               	xorwf	241,w,b	;volatile
 25452  01754E  B4D8               	btfsc	status,2,c
 25453  017550  D004               	goto	i2u1867_40
 25454                           
 25455                           ; BSR set to: 14
 25456  017552  0E0D               	movlw	13
 25457  017554  19F1               	xorwf	241,w,b	;volatile
 25458  017556  A4D8               	btfss	status,2,c
 25459  017558  D006               	goto	i2l411
 25460  01755A                     i2u1867_40:
 25461                           
 25462                           ; BSR set to: 14
 25463                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 25464  01755A  0100               	movlb	0	; () banked
 25465  01755C  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 25466                           
 25467                           ; BSR set to: 0
 25468                           ;eusart2.c: 248: RC2REG = 0;
 25469  01755E  0E00               	movlw	0
 25470  017560  010E               	movlb	14	; () banked
 25471  017562  6FF1               	movwf	241,b	;volatile
 25472                           
 25473                           ;eusart2.c: 250: }
 25474  017564  D002               	goto	i2l414
 25475  017566                     i2l411:
 25476                           
 25477                           ; BSR set to: 14
 25478                           ;eusart2.c: 252: else {
 25479                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 25480  017566  0100               	movlb	0	; () banked
 25481  017568  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 25482  01756A                     i2l414:
 25483                           
 25484                           ;eusart2.c: 256: }
 25485                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 25486                           
 25487                           ; BSR set to: 0
 25488  01756A  0E08               	movlw	8
 25489  01756C  010E               	movlb	14	; () banked
 25490  01756E  19F1               	xorwf	241,w,b	;volatile
 25491  017570  A4D8               	btfss	status,2,c
 25492  017572  0012               	return	
 25493                           
 25494                           ; BSR set to: 14
 25495                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 25496  017574  0100               	movlb	0	; () banked
 25497  017576  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 25498  017578  0D01               	mullw	1
 25499  01757A  0E00               	movlw	low _eusart2RxBuffer
 25500  01757C  24F3               	addwf	prodl,w,c
 25501  01757E  6ED9               	movwf	fsr2l,c
 25502  017580  0E02               	movlw	high _eusart2RxBuffer
 25503  017582  20F4               	addwfc	prodh,w,c
 25504  017584  6EDA               	movwf	fsr2h,c
 25505  017586  0E00               	movlw	0
 25506  017588  6EDF               	movwf	indf2,c
 25507                           
 25508                           ; BSR set to: 0
 25509                           ;eusart2.c: 262: eusart2RxHead--;
 25510  01758A  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;eusart2.c: 265: printf("\033[K");
 25514  01758C  0EC5               	movlw	low STR_1
 25515  01758E  6F88               	movwf	i2printf@f& (0+255),b
 25516  017590  0EFF               	movlw	high STR_1
 25517  017592  6F89               	movwf	(i2printf@f+1)& (0+255),b
 25518  017594  ECE7  F086         	call	i2_printf	;wreg free
 25519                           
 25520                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 25521  017598  0101               	movlb	1	; () banked
 25522  01759A  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 25523  01759C  0100               	movlb	0	; () banked
 25524  01759E  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 25525  0175A0  B4D8               	btfsc	status,2,c
 25526  0175A2  D00B               	goto	i2l416
 25527                           
 25528                           ; BSR set to: 0
 25529                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 25530  0175A4  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 25531  0175A6  0D01               	mullw	1
 25532  0175A8  0E00               	movlw	low _eusart2RxBuffer
 25533  0175AA  24F3               	addwf	prodl,w,c
 25534  0175AC  6ED9               	movwf	fsr2l,c
 25535  0175AE  0E02               	movlw	high _eusart2RxBuffer
 25536  0175B0  20F4               	addwfc	prodh,w,c
 25537  0175B2  6EDA               	movwf	fsr2h,c
 25538  0175B4  0E00               	movlw	0
 25539  0175B6  6EDF               	movwf	indf2,c
 25540                           
 25541                           ; BSR set to: 0
 25542                           ;eusart2.c: 270: eusart2RxHead--;
 25543  0175B8  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 25544  0175BA                     i2l416:
 25545                           
 25546                           ; BSR set to: 0
 25547                           ;eusart2.c: 272: }
 25548                           ;eusart2.c: 274: RC2REG = 0;
 25549                           
 25550                           ; BSR set to: 0
 25551  0175BA  0E00               	movlw	0
 25552  0175BC  010E               	movlb	14	; () banked
 25553  0175BE  6FF1               	movwf	241,b	;volatile
 25554  0175C0  0012               	return	
 25555  0175C2                     __end_of_EUSART2_Receive_ISR:
 25556                           	opt stack 0
 25557                           tosu	equ	0xFFF
 25558                           tosh	equ	0xFFE
 25559                           tosl	equ	0xFFD
 25560                           pclatu	equ	0xFFB
 25561                           pclath	equ	0xFFA
 25562                           tblptru	equ	0xFF8
 25563                           tblptrh	equ	0xFF7
 25564                           tblptrl	equ	0xFF6
 25565                           tablat	equ	0xFF5
 25566                           prodh	equ	0xFF4
 25567                           prodl	equ	0xFF3
 25568                           intcon	equ	0xFF2
 25569                           indf0	equ	0xFEF
 25570                           postinc0	equ	0xFEE
 25571                           fsr0h	equ	0xFEA
 25572                           fsr0l	equ	0xFE9
 25573                           wreg	equ	0xFE8
 25574                           indf1	equ	0xFE7
 25575                           postdec1	equ	0xFE5
 25576                           plusw1	equ	0xFE3
 25577                           fsr1h	equ	0xFE2
 25578                           fsr1l	equ	0xFE1
 25579                           bsr	equ	0xFE0
 25580                           indf2	equ	0xFDF
 25581                           postinc2	equ	0xFDE
 25582                           postdec2	equ	0xFDD
 25583                           plusw2	equ	0xFDB
 25584                           fsr2h	equ	0xFDA
 25585                           fsr2l	equ	0xFD9
 25586                           status	equ	0xFD8
 25587                           
 25588 ;; *************** function i2_printf *****************
 25589 ;; Defined at:
 25590 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 25591 ;; Parameters:    Size  Location     Type
 25592 ;;  f               2   40[BANK0 ] PTR const unsigned char 
 25593 ;;		 -> STR_126(30), STR_125(46), STR_124(39), STR_123(62), 
 25594 ;;		 -> STR_122(55), STR_121(2170), STR_119(53), STR_117(58), 
 25595 ;;		 -> STR_115(71), STR_114(63), STR_113(37), STR_112(46), 
 25596 ;;		 -> STR_111(102), STR_110(86), STR_108(25), STR_106(42), 
 25597 ;;		 -> STR_105(53), STR_104(31), STR_102(29), STR_101(28), 
 25598 ;;		 -> STR_99(42), STR_97(41), STR_95(40), STR_93(56), 
 25599 ;;		 -> STR_91(34), STR_89(34), STR_87(32), STR_85(37), 
 25600 ;;		 -> STR_83(58), STR_81(36), STR_79(36), STR_77(37), 
 25601 ;;		 -> STR_75(45), STR_74(66), STR_72(21), STR_70(24), 
 25602 ;;		 -> STR_69(48), STR_59(54), STR_58(64), STR_56(59), 
 25603 ;;		 -> STR_54(85), STR_52(47), STR_51(17), STR_48(52), 
 25604 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
 25605 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
 25606 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
 25607 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
 25608 ;; Auto vars:     Size  Location     Type
 25609 ;;  printf          4   69[BANK0 ] PTR const unsigned char 
 25610 ;;  printf          4   65[BANK0 ] unsigned long 
 25611 ;;  printf          4   59[BANK0 ] struct .
 25612 ;;  printf          2   77[BANK0 ] int 
 25613 ;;  printf          2   75[BANK0 ] int 
 25614 ;;  printf          2   73[BANK0 ] unsigned short 
 25615 ;;  printf          2   63[BANK0 ] int 
 25616 ;;  printf          2   57[BANK0 ] PTR void [1]
 25617 ;;		 -> ?i2_printf(2), ?_printf(2), 
 25618 ;;  printf          2   55[BANK0 ] unsigned int 
 25619 ;;  printf          2   53[BANK0 ] PTR const unsigned char 
 25620 ;;		 -> STR_140(7), printf@c(1), STR_139(16), STR_138(22), 
 25621 ;;		 -> STR_137(21), STR_136(27), STR_135(41), STR_134(32), 
 25622 ;;		 -> STR_133(19), STR_132(16), STR_131(15), STR_130(16), 
 25623 ;;		 -> STR_129(10), STR_128(13), STR_127(12), ringBufferLUT@channel_name(22), 
 25624 ;;		 -> TRIAC_Firing_Angle(4), 
 25625 ;;  printf          1   79[BANK0 ] char 
 25626 ;;  printf          1   52[BANK0 ] unsigned char 
 25627 ;;  printf          1    0        unsigned char 
 25628 ;; Return value:  Size  Location     Type
 25629 ;;                  2   40[BANK0 ] int 
 25630 ;; Registers used:
 25631 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25632 ;; Tracked objects:
 25633 ;;		On entry : 0/0
 25634 ;;		On exit  : 0/0
 25635 ;;		Unchanged: 0/0
 25636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25638 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25639 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25640 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25641 ;;Total ram usage:       40 bytes
 25642 ;; Hardware stack levels used:    1
 25643 ;; Hardware stack levels required when called:    2
 25644 ;; This function calls:
 25645 ;;		i2___awdiv
 25646 ;;		i2___fladd
 25647 ;;		i2___flge
 25648 ;;		i2___flmul
 25649 ;;		i2___flneg
 25650 ;;		i2___flsub
 25651 ;;		i2___fltol
 25652 ;;		i2___lldiv
 25653 ;;		i2___llmod
 25654 ;;		i2___wmul
 25655 ;;		i2___xxtofl
 25656 ;;		i2__div_to_l_
 25657 ;;		i2__tdiv_to_l_
 25658 ;;		i2_fround
 25659 ;;		i2_isdigit
 25660 ;;		i2_putch
 25661 ;;		i2_scale
 25662 ;; This function is called by:
 25663 ;;		_EUSART2_Receive_ISR
 25664 ;; This function uses a non-reentrant model
 25665 ;;
 25666                           
 25667                           	psect	text85
 25668  010DCE                     __ptext85:
 25669                           	opt stack 0
 25670  010DCE                     i2_printf:
 25671                           	opt stack 15
 25672                           
 25673                           ;doprnt.c: 466: va_list ap;
 25674                           ;doprnt.c: 499: signed char c;
 25675                           ;doprnt.c: 501: int width;
 25676                           ;doprnt.c: 504: int prec;
 25677                           ;doprnt.c: 508: unsigned short flag;
 25678                           ;doprnt.c: 515: char d;
 25679                           ;doprnt.c: 516: double fval;
 25680                           ;doprnt.c: 517: int exp;
 25681                           ;doprnt.c: 523: union {
 25682                           ;doprnt.c: 524: unsigned long vd;
 25683                           ;doprnt.c: 525: double integ;
 25684                           ;doprnt.c: 526: } tmpval;
 25685                           ;doprnt.c: 528: unsigned long val;
 25686                           ;doprnt.c: 529: unsigned len;
 25687                           ;doprnt.c: 530: const char * cp;
 25688                           ;doprnt.c: 533: *ap = __va_start();
 25689                           
 25690                           ; BSR set to: 14
 25691                           ;incstack = 0
 25692  010DCE  0E8A               	movlw	low (?i2_printf+2)
 25693  010DD0  0100               	movlb	0	; () banked
 25694  010DD2  6F99               	movwf	i2printf@ap& (0+255),b
 25695  010DD4  0E00               	movlw	high (?i2_printf+2)
 25696  010DD6  6F9A               	movwf	(i2printf@ap+1)& (0+255),b
 25697                           
 25698                           ;doprnt.c: 536: while(c = *f++) {
 25699  010DD8  EFAA  F08D         	goto	i2u1853_40
 25700  010DDC                     
 25701                           ; BSR set to: 0
 25702                           ;doprnt.c: 538: if(c != '%')
 25703                           
 25704                           ; BSR set to: 0
 25705  010DDC  0E25               	movlw	37
 25706  010DDE  19AF               	xorwf	i2printf@c& (0+255),w,b
 25707  010DE0  B4D8               	btfsc	status,2,c
 25708  010DE2  D005               	goto	i2l1364
 25709                           
 25710                           ; BSR set to: 0
 25711                           ;doprnt.c: 540: {
 25712                           ;doprnt.c: 541: (putch(c) );
 25713  010DE4  51AF               	movf	i2printf@c& (0+255),w,b
 25714  010DE6  EC7C  F0C4         	call	i2_putch
 25715                           
 25716                           ;doprnt.c: 542: continue;
 25717  010DEA  EFAA  F08D         	goto	i2u1853_40
 25718  010DEE                     i2l1364:
 25719                           
 25720                           ;doprnt.c: 543: }
 25721                           ;doprnt.c: 546: width = 0;
 25722  010DEE  0E00               	movlw	0
 25723  010DF0  0100               	movlb	0	; () banked
 25724  010DF2  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 25725  010DF4  0E00               	movlw	0
 25726  010DF6  6FAB               	movwf	i2printf@width& (0+255),b
 25727                           
 25728                           ;doprnt.c: 548: flag = 0;
 25729  010DF8  0E00               	movlw	0
 25730  010DFA  6FAA               	movwf	(i2printf@flag+1)& (0+255),b
 25731  010DFC  0E00               	movlw	0
 25732  010DFE  6FA9               	movwf	i2printf@flag& (0+255),b
 25733                           
 25734                           ; BSR set to: 0
 25735                           ;doprnt.c: 551: switch(*f) {
 25736                           
 25737                           ;doprnt.c: 550: for(;;) {
 25738  010E00  D004               	goto	i2l1366
 25739  010E02                     
 25740                           ;doprnt.c: 580: flag |= 0x04;
 25741                           
 25742                           ; BSR set to: 0
 25743  010E02  0100               	movlb	0	; () banked
 25744  010E04  85A9               	bsf	i2printf@flag& (0+255),2,b
 25745                           
 25746                           ;doprnt.c: 581: f++;
 25747  010E06  4B88               	infsnz	i2printf@f& (0+255),f,b
 25748  010E08  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 25749  010E0A                     i2l1366:
 25750                           
 25751                           ; BSR set to: 0
 25752  010E0A  C088  FFF6         	movff	i2printf@f,tblptrl
 25753  010E0E  C089  FFF7         	movff	i2printf@f+1,tblptrh
 25754  010E12  0E00               	movlw	low (__mediumconst shr (0+16))
 25755  010E14  6EF8               	movwf	tblptru,c
 25756  010E16  0E0D               	movlw	(high __ramtop+-1)
 25757  010E18  64F7               	cpfsgt	tblptrh,c
 25758  010E1A  D003               	bra	i2u1779_47
 25759  010E1C  0008               	tblrd		*
 25760  010E1E  50F5               	movf	tablat,w,c
 25761  010E20  D005               	bra	i2u1779_40
 25762  010E22                     i2u1779_47:
 25763  010E22  CFF6 FFE9          	movff	tblptrl,fsr0l
 25764  010E26  CFF7 FFEA          	movff	tblptrh,fsr0h
 25765  010E2A  50EF               	movf	indf0,w,c
 25766  010E2C                     i2u1779_40:
 25767                           
 25768                           ; Switch size 1, requested type "space"
 25769                           ; Number of cases is 1, Range of values is 48 to 48
 25770                           ; switch strategies available:
 25771                           ; Name         Instructions Cycles
 25772                           ; simple_byte            4     3 (average)
 25773                           ;	Chosen strategy is simple_byte
 25774  010E2C  0A30               	xorlw	48	; case 48
 25775  010E2E  B4D8               	btfsc	status,2,c
 25776  010E30  D7E8               	goto	i2l1367
 25777                           
 25778                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 25779                           
 25780                           ;doprnt.c: 586: }
 25781                           
 25782                           ;doprnt.c: 585: break;
 25783  010E32  C088  FFF6         	movff	i2printf@f,tblptrl
 25784  010E36  C089  FFF7         	movff	i2printf@f+1,tblptrh
 25785  010E3A  0E00               	movlw	low (__mediumconst shr (0+16))
 25786  010E3C  6EF8               	movwf	tblptru,c
 25787  010E3E  0E0D               	movlw	(high __ramtop+-1)
 25788  010E40  64F7               	cpfsgt	tblptrh,c
 25789  010E42  D003               	bra	i2u1780_47
 25790  010E44  0008               	tblrd		*
 25791  010E46  50F5               	movf	tablat,w,c
 25792  010E48  D005               	bra	i2u1780_40
 25793  010E4A                     i2u1780_47:
 25794  010E4A  CFF6 FFE9          	movff	tblptrl,fsr0l
 25795  010E4E  CFF7 FFEA          	movff	tblptrh,fsr0h
 25796  010E52  50EF               	movf	indf0,w,c
 25797  010E54                     i2u1780_40:
 25798  010E54  ECA8  F0C3         	call	i2_isdigit
 25799  010E58  A0D8               	btfss	status,0,c
 25800  010E5A  D04B               	goto	i2u1784_40
 25801                           
 25802                           ;doprnt.c: 598: width = 0;
 25803  010E5C  0E00               	movlw	0
 25804  010E5E  0100               	movlb	0	; () banked
 25805  010E60  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 25806  010E62  0E00               	movlw	0
 25807  010E64  6FAB               	movwf	i2printf@width& (0+255),b
 25808  010E66                     
 25809                           ;doprnt.c: 600: width *= 10;
 25810                           
 25811                           ; BSR set to: 0
 25812  010E66  C0AB  F001         	movff	i2printf@width,i2___wmul@multiplier
 25813  010E6A  C0AC  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 25814  010E6E  0E00               	movlw	0
 25815  010E70  6E04               	movwf	i2___wmul@multiplicand+1,c
 25816  010E72  0E0A               	movlw	10
 25817  010E74  6E03               	movwf	i2___wmul@multiplicand,c
 25818  010E76  EC62  F0C3         	call	i2___wmul	;wreg free
 25819  010E7A  C001  F0AB         	movff	?i2___wmul,i2printf@width
 25820  010E7E  C002  F0AC         	movff	?i2___wmul+1,i2printf@width+1
 25821                           
 25822                           ;doprnt.c: 601: width += *f++ - '0';
 25823  010E82  0ED0               	movlw	208
 25824  010E84  0100               	movlb	0	; () banked
 25825  010E86  6F8A               	movwf	??i2_printf& (0+255),b
 25826  010E88  0EFF               	movlw	255
 25827  010E8A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 25828  010E8C  C088  FFF6         	movff	i2printf@f,tblptrl
 25829  010E90  C089  FFF7         	movff	i2printf@f+1,tblptrh
 25830  010E94  0E00               	movlw	low (__mediumconst shr (0+16))
 25831  010E96  6EF8               	movwf	tblptru,c
 25832  010E98  0E0D               	movlw	(high __ramtop+-1)
 25833  010E9A  64F7               	cpfsgt	tblptrh,c
 25834  010E9C  D003               	bra	i2u1782_47
 25835  010E9E  0008               	tblrd		*
 25836  010EA0  50F5               	movf	tablat,w,c
 25837  010EA2  D005               	bra	i2u1782_40
 25838  010EA4                     i2u1782_47:
 25839  010EA4  CFF6 FFE9          	movff	tblptrl,fsr0l
 25840  010EA8  CFF7 FFEA          	movff	tblptrh,fsr0h
 25841  010EAC  50EF               	movf	indf0,w,c
 25842  010EAE                     i2u1782_40:
 25843  010EAE  0100               	movlb	0	; () banked
 25844  010EB0  6F8C               	movwf	(??i2_printf+2)& (0+255),b
 25845  010EB2  6B8D               	clrf	(??i2_printf+3)& (0+255),b
 25846  010EB4  518A               	movf	??i2_printf& (0+255),w,b
 25847  010EB6  278C               	addwf	(??i2_printf+2)& (0+255),f,b
 25848  010EB8  518B               	movf	(??i2_printf+1)& (0+255),w,b
 25849  010EBA  238D               	addwfc	(??i2_printf+3)& (0+255),f,b
 25850  010EBC  518C               	movf	(??i2_printf+2)& (0+255),w,b
 25851  010EBE  27AB               	addwf	i2printf@width& (0+255),f,b
 25852  010EC0  518D               	movf	(??i2_printf+3)& (0+255),w,b
 25853  010EC2  23AC               	addwfc	(i2printf@width+1)& (0+255),f,b
 25854                           
 25855                           ; BSR set to: 0
 25856  010EC4  4B88               	infsnz	i2printf@f& (0+255),f,b
 25857  010EC6  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 25858                           
 25859                           ; BSR set to: 0
 25860                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 25861  010EC8  C088  FFF6         	movff	i2printf@f,tblptrl
 25862  010ECC  C089  FFF7         	movff	i2printf@f+1,tblptrh
 25863  010ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 25864  010ED2  6EF8               	movwf	tblptru,c
 25865  010ED4  0E0D               	movlw	(high __ramtop+-1)
 25866  010ED6  64F7               	cpfsgt	tblptrh,c
 25867  010ED8  D003               	bra	i2u1783_47
 25868  010EDA  0008               	tblrd		*
 25869  010EDC  50F5               	movf	tablat,w,c
 25870  010EDE  D005               	bra	i2u1783_40
 25871  010EE0                     i2u1783_47:
 25872  010EE0  CFF6 FFE9          	movff	tblptrl,fsr0l
 25873  010EE4  CFF7 FFEA          	movff	tblptrh,fsr0h
 25874  010EE8  50EF               	movf	indf0,w,c
 25875  010EEA                     i2u1783_40:
 25876  010EEA  ECA8  F0C3         	call	i2_isdigit
 25877  010EEE  B0D8               	btfsc	status,0,c
 25878  010EF0  D7BA               	goto	i2l1372
 25879  010EF2                     i2u1784_40:
 25880                           
 25881                           ;doprnt.c: 608: }
 25882                           ;doprnt.c: 611: if(*f == '.') {
 25883  010EF2  C088  FFF6         	movff	i2printf@f,tblptrl
 25884  010EF6  C089  FFF7         	movff	i2printf@f+1,tblptrh
 25885  010EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 25886  010EFC  6EF8               	movwf	tblptru,c
 25887  010EFE  0E0D               	movlw	(high __ramtop+-1)
 25888  010F00  64F7               	cpfsgt	tblptrh,c
 25889  010F02  D003               	bra	i2u1785_47
 25890  010F04  0008               	tblrd		*
 25891  010F06  50F5               	movf	tablat,w,c
 25892  010F08  D005               	bra	i2u1785_40
 25893  010F0A                     i2u1785_47:
 25894  010F0A  CFF6 FFE9          	movff	tblptrl,fsr0l
 25895  010F0E  CFF7 FFEA          	movff	tblptrh,fsr0h
 25896  010F12  50EF               	movf	indf0,w,c
 25897  010F14                     i2u1785_40:
 25898  010F14  0A2E               	xorlw	46
 25899  010F16  A4D8               	btfss	status,2,c
 25900  010F18  D048               	goto	i2l1374
 25901                           
 25902                           ;doprnt.c: 612: flag |= 0x4000;
 25903  010F1A  0100               	movlb	0	; () banked
 25904  010F1C  8DAA               	bsf	(i2printf@flag+1)& (0+255),6,b
 25905                           
 25906                           ;doprnt.c: 613: f++;
 25907  010F1E  4B88               	infsnz	i2printf@f& (0+255),f,b
 25908  010F20  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 25909                           
 25910                           ; BSR set to: 0
 25911                           ;doprnt.c: 620: {
 25912                           ;doprnt.c: 621: prec = 0;
 25913  010F22  0E00               	movlw	0
 25914  010F24  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 25915  010F26  0E00               	movlw	0
 25916  010F28  6FAD               	movwf	i2printf@prec& (0+255),b
 25917                           
 25918                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 25919  010F2A  D029               	goto	i2l1375
 25920  010F2C                     
 25921                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 25922                           
 25923                           ; BSR set to: 0
 25924  010F2C  C0AD  F001         	movff	i2printf@prec,i2___wmul@multiplier
 25925  010F30  C0AE  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 25926  010F34  0E00               	movlw	0
 25927  010F36  6E04               	movwf	i2___wmul@multiplicand+1,c
 25928  010F38  0E0A               	movlw	10
 25929  010F3A  6E03               	movwf	i2___wmul@multiplicand,c
 25930  010F3C  EC62  F0C3         	call	i2___wmul	;wreg free
 25931  010F40  C088  FFF6         	movff	i2printf@f,tblptrl
 25932  010F44  C089  FFF7         	movff	i2printf@f+1,tblptrh
 25933  010F48  0E00               	movlw	low (__mediumconst shr (0+16))
 25934  010F4A  6EF8               	movwf	tblptru,c
 25935  010F4C  0E0D               	movlw	(high __ramtop+-1)
 25936  010F4E  64F7               	cpfsgt	tblptrh,c
 25937  010F50  D003               	bra	i2u1787_47
 25938  010F52  0008               	tblrd		*
 25939  010F54  50F5               	movf	tablat,w,c
 25940  010F56  D005               	bra	i2u1787_40
 25941  010F58                     i2u1787_47:
 25942  010F58  CFF6 FFE9          	movff	tblptrl,fsr0l
 25943  010F5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 25944  010F60  50EF               	movf	indf0,w,c
 25945  010F62                     i2u1787_40:
 25946  010F62  0100               	movlb	0	; () banked
 25947  010F64  6F8A               	movwf	??i2_printf& (0+255),b
 25948  010F66  518A               	movf	??i2_printf& (0+255),w,b
 25949  010F68  2601               	addwf	?i2___wmul,f,c
 25950  010F6A  0E00               	movlw	0
 25951  010F6C  2202               	addwfc	?i2___wmul+1,f,c
 25952  010F6E  0ED0               	movlw	208
 25953  010F70  2401               	addwf	?i2___wmul,w,c
 25954  010F72  6FAD               	movwf	i2printf@prec& (0+255),b
 25955  010F74  0EFF               	movlw	255
 25956  010F76  2002               	addwfc	?i2___wmul+1,w,c
 25957  010F78  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 25958                           
 25959                           ; BSR set to: 0
 25960  010F7A  4B88               	infsnz	i2printf@f& (0+255),f,b
 25961  010F7C  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 25962  010F7E                     i2l1375:
 25963                           
 25964                           ; BSR set to: 0
 25965                           
 25966                           ; BSR set to: 0
 25967  010F7E  C088  FFF6         	movff	i2printf@f,tblptrl
 25968  010F82  C089  FFF7         	movff	i2printf@f+1,tblptrh
 25969  010F86  0E00               	movlw	low (__mediumconst shr (0+16))
 25970  010F88  6EF8               	movwf	tblptru,c
 25971  010F8A  0E0D               	movlw	(high __ramtop+-1)
 25972  010F8C  64F7               	cpfsgt	tblptrh,c
 25973  010F8E  D003               	bra	i2u1788_47
 25974  010F90  0008               	tblrd		*
 25975  010F92  50F5               	movf	tablat,w,c
 25976  010F94  D005               	bra	i2u1788_40
 25977  010F96                     i2u1788_47:
 25978  010F96  CFF6 FFE9          	movff	tblptrl,fsr0l
 25979  010F9A  CFF7 FFEA          	movff	tblptrh,fsr0h
 25980  010F9E  50EF               	movf	indf0,w,c
 25981  010FA0                     i2u1788_40:
 25982  010FA0  ECA8  F0C3         	call	i2_isdigit
 25983  010FA4  A0D8               	btfss	status,0,c
 25984  010FA6  D0A4               	goto	i2l1379
 25985  010FA8  D7C1               	goto	i2l1376
 25986  010FAA                     i2l1374:
 25987                           
 25988                           ;doprnt.c: 626: prec = 0;
 25989  010FAA  0E00               	movlw	0
 25990  010FAC  0100               	movlb	0	; () banked
 25991  010FAE  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 25992  010FB0  0E00               	movlw	0
 25993  010FB2  6FAD               	movwf	i2printf@prec& (0+255),b
 25994                           
 25995                           ; BSR set to: 0
 25996                           ;doprnt.c: 628: flag |= 0x1000;
 25997  010FB4  89AA               	bsf	(i2printf@flag+1)& (0+255),4,b
 25998                           
 25999                           ; BSR set to: 0
 26000                           ;doprnt.c: 630: }
 26001                           ;doprnt.c: 635: switch(c = *f++) {
 26002  010FB6  D09C               	goto	i2l1379
 26003  010FB8                     
 26004                           ; BSR set to: 0
 26005                           ;doprnt.c: 663: flag |= 0x400;
 26006                           
 26007                           ; BSR set to: 0
 26008  010FB8  85AA               	bsf	(i2printf@flag+1)& (0+255),2,b
 26009                           
 26010                           ; BSR set to: 0
 26011                           ;doprnt.c: 698: case 'i':
 26012                           ;doprnt.c: 699: break;
 26013                           
 26014                           ; BSR set to: 0
 26015                           
 26016                           ;doprnt.c: 697: case 'd':
 26017                           
 26018                           ;doprnt.c: 664: break;
 26019  010FBA  D0D1               	goto	i2l1383
 26020  010FBC                     
 26021                           ; BSR set to: 0
 26022                           ;doprnt.c: 718: case 'x':
 26023                           ;doprnt.c: 721: flag |= 0x80;
 26024                           
 26025                           ; BSR set to: 0
 26026                           
 26027                           ; BSR set to: 0
 26028  010FBC  8FA9               	bsf	i2printf@flag& (0+255),7,b
 26029                           
 26030                           ;doprnt.c: 723: break;
 26031  010FBE  D0CF               	goto	i2l1383
 26032  010FC0                     
 26033                           ; BSR set to: 0
 26034                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 26035                           
 26036                           ; BSR set to: 0
 26037  010FC0  C099  FFD9         	movff	i2printf@ap,fsr2l
 26038  010FC4  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 26039  010FC8  CFDE F095          	movff	postinc2,i2printf@cp
 26040  010FCC  CFDD F096          	movff	postdec2,i2printf@cp+1
 26041                           
 26042                           ; BSR set to: 0
 26043  010FD0  0E02               	movlw	2
 26044  010FD2  2799               	addwf	i2printf@ap& (0+255),f,b
 26045  010FD4  0E00               	movlw	0
 26046  010FD6  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 26047                           
 26048                           ; BSR set to: 0
 26049                           ;doprnt.c: 740: if(!cp)
 26050  010FD8  5195               	movf	i2printf@cp& (0+255),w,b
 26051  010FDA  1196               	iorwf	(i2printf@cp+1)& (0+255),w,b
 26052  010FDC  A4D8               	btfss	status,2,c
 26053  010FDE  D004               	goto	i2l1389
 26054                           
 26055                           ; BSR set to: 0
 26056                           ;doprnt.c: 741: cp = "(null)";
 26057  010FE0  0E86               	movlw	low STR_140
 26058  010FE2  6F95               	movwf	i2printf@cp& (0+255),b
 26059  010FE4  0EFF               	movlw	high STR_140
 26060  010FE6  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 26061  010FE8                     i2l1389:
 26062                           
 26063                           ; BSR set to: 0
 26064                           ;doprnt.c: 745: len = 0;
 26065                           
 26066                           ; BSR set to: 0
 26067  010FE8  0E00               	movlw	0
 26068  010FEA  6F98               	movwf	(i2printf@len+1)& (0+255),b
 26069  010FEC  0E00               	movlw	0
 26070  010FEE  6F97               	movwf	i2printf@len& (0+255),b
 26071                           
 26072                           ;doprnt.c: 746: while(cp[len])
 26073  010FF0  D003               	goto	i2l1390
 26074  010FF2                     
 26075                           ;doprnt.c: 747: len++;
 26076                           
 26077                           ; BSR set to: 0
 26078  010FF2  0100               	movlb	0	; () banked
 26079  010FF4  4B97               	infsnz	i2printf@len& (0+255),f,b
 26080  010FF6  2B98               	incf	(i2printf@len+1)& (0+255),f,b
 26081  010FF8                     i2l1390:
 26082                           
 26083                           ; BSR set to: 0
 26084                           
 26085                           ; BSR set to: 0
 26086  010FF8  5197               	movf	i2printf@len& (0+255),w,b
 26087  010FFA  2595               	addwf	i2printf@cp& (0+255),w,b
 26088  010FFC  6F8A               	movwf	??i2_printf& (0+255),b
 26089  010FFE  5198               	movf	(i2printf@len+1)& (0+255),w,b
 26090  011000  2196               	addwfc	(i2printf@cp+1)& (0+255),w,b
 26091  011002  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 26092  011004  C08A  FFF6         	movff	??i2_printf,tblptrl
 26093  011008  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 26094  01100C  0E00               	movlw	low (__mediumconst shr (0+16))
 26095  01100E  6EF8               	movwf	tblptru,c
 26096  011010  0E0D               	movlw	(high __ramtop+-1)
 26097  011012  64F7               	cpfsgt	tblptrh,c
 26098  011014  D003               	bra	i2u1791_47
 26099  011016  0008               	tblrd		*
 26100  011018  50F5               	movf	tablat,w,c
 26101  01101A  D005               	bra	i2u1791_40
 26102  01101C                     i2u1791_47:
 26103  01101C  CFF6 FFE9          	movff	tblptrl,fsr0l
 26104  011020  CFF7 FFEA          	movff	tblptrh,fsr0h
 26105  011024  50EF               	movf	indf0,w,c
 26106  011026                     i2u1791_40:
 26107  011026  0900               	iorlw	0
 26108  011028  A4D8               	btfss	status,2,c
 26109  01102A  D7E3               	goto	i2l1391
 26110  01102C                     i2u1792_40:
 26111                           
 26112                           ;doprnt.c: 753: if(prec && prec < len)
 26113                           
 26114                           ;doprnt.c: 750: dostring:
 26115  01102C  0100               	movlb	0	; () banked
 26116  01102E  51AD               	movf	i2printf@prec& (0+255),w,b
 26117  011030  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 26118  011032  B4D8               	btfsc	status,2,c
 26119  011034  D00A               	goto	i2l1394
 26120                           
 26121                           ; BSR set to: 0
 26122  011036  5197               	movf	i2printf@len& (0+255),w,b
 26123  011038  5DAD               	subwf	i2printf@prec& (0+255),w,b
 26124  01103A  5198               	movf	(i2printf@len+1)& (0+255),w,b
 26125  01103C  59AE               	subwfb	(i2printf@prec+1)& (0+255),w,b
 26126  01103E  B0D8               	btfsc	status,0,c
 26127  011040  D004               	goto	i2l1394
 26128                           
 26129                           ; BSR set to: 0
 26130                           ;doprnt.c: 754: len = prec;
 26131  011042  C0AD  F097         	movff	i2printf@prec,i2printf@len
 26132  011046  C0AE  F098         	movff	i2printf@prec+1,i2printf@len+1
 26133  01104A                     i2l1394:
 26134                           
 26135                           ; BSR set to: 0
 26136                           ;doprnt.c: 757: if(width > len)
 26137                           
 26138                           ; BSR set to: 0
 26139  01104A  51AB               	movf	i2printf@width& (0+255),w,b
 26140  01104C  5D97               	subwf	i2printf@len& (0+255),w,b
 26141  01104E  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 26142  011050  5998               	subwfb	(i2printf@len+1)& (0+255),w,b
 26143  011052  B0D8               	btfsc	status,0,c
 26144  011054  D005               	goto	i2l1395
 26145                           
 26146                           ; BSR set to: 0
 26147                           ;doprnt.c: 758: width -= len;
 26148  011056  5197               	movf	i2printf@len& (0+255),w,b
 26149  011058  5FAB               	subwf	i2printf@width& (0+255),f,b
 26150  01105A  5198               	movf	(i2printf@len+1)& (0+255),w,b
 26151  01105C  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 26152  01105E  D008               	goto	i2l1397
 26153  011060                     i2l1395:
 26154                           
 26155                           ; BSR set to: 0
 26156                           ;doprnt.c: 759: else
 26157                           ;doprnt.c: 760: width = 0;
 26158                           
 26159                           ; BSR set to: 0
 26160  011060  0E00               	movlw	0
 26161  011062  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 26162  011064  0E00               	movlw	0
 26163  011066  6FAB               	movwf	i2printf@width& (0+255),b
 26164                           
 26165                           ; BSR set to: 0
 26166                           ;doprnt.c: 764: while(width--)
 26167  011068  D003               	goto	i2l1397
 26168  01106A                     i2l14278:
 26169                           
 26170                           ; BSR set to: 0
 26171                           ;doprnt.c: 765: (putch(' ') );
 26172  01106A  0E20               	movlw	32
 26173  01106C  EC7C  F0C4         	call	i2_putch
 26174  011070                     i2l1397:
 26175  011070  0100               	movlb	0	; () banked
 26176  011072  07AB               	decf	i2printf@width& (0+255),f,b
 26177  011074  A0D8               	btfss	status,0,c
 26178  011076  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 26179  011078  29AB               	incf	i2printf@width& (0+255),w,b
 26180  01107A  E1F7               	bnz	i2l14278
 26181  01107C  29AC               	incf	(i2printf@width+1)& (0+255),w,b
 26182  01107E  B4D8               	btfsc	status,2,c
 26183  011080  D017               	goto	i2l1400
 26184  011082  D7F3               	goto	i2l1398
 26185  011084                     i2l14282:
 26186                           
 26187                           ; BSR set to: 0
 26188                           ;doprnt.c: 768: (putch(*cp++) );
 26189  011084  C095  FFF6         	movff	i2printf@cp,tblptrl
 26190  011088  C096  FFF7         	movff	i2printf@cp+1,tblptrh
 26191  01108C  0E00               	movlw	low (__mediumconst shr (0+16))
 26192  01108E  6EF8               	movwf	tblptru,c
 26193  011090  0E0D               	movlw	(high __ramtop+-1)
 26194  011092  64F7               	cpfsgt	tblptrh,c
 26195  011094  D003               	bra	i2u1797_47
 26196  011096  0008               	tblrd		*
 26197  011098  50F5               	movf	tablat,w,c
 26198  01109A  D005               	bra	i2u1797_40
 26199  01109C                     i2u1797_47:
 26200  01109C  CFF6 FFE9          	movff	tblptrl,fsr0l
 26201  0110A0  CFF7 FFEA          	movff	tblptrh,fsr0h
 26202  0110A4  50EF               	movf	indf0,w,c
 26203  0110A6                     i2u1797_40:
 26204  0110A6  EC7C  F0C4         	call	i2_putch
 26205  0110AA  0100               	movlb	0	; () banked
 26206  0110AC  4B95               	infsnz	i2printf@cp& (0+255),f,b
 26207  0110AE  2B96               	incf	(i2printf@cp+1)& (0+255),f,b
 26208  0110B0                     i2l1400:
 26209                           
 26210                           ; BSR set to: 0
 26211                           
 26212                           ; BSR set to: 0
 26213  0110B0  0797               	decf	i2printf@len& (0+255),f,b
 26214  0110B2  A0D8               	btfss	status,0,c
 26215  0110B4  0798               	decf	(i2printf@len+1)& (0+255),f,b
 26216  0110B6  2997               	incf	i2printf@len& (0+255),w,b
 26217  0110B8  E1E5               	bnz	i2l14282
 26218  0110BA  2998               	incf	(i2printf@len+1)& (0+255),w,b
 26219  0110BC  B4D8               	btfsc	status,2,c
 26220  0110BE  EFAA  F08D         	goto	i2u1853_40
 26221  0110C2  D7E0               	goto	i2l1401
 26222  0110C4                     
 26223                           ; BSR set to: 0
 26224                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 26225                           
 26226                           ; BSR set to: 0
 26227  0110C4  C099  FFD9         	movff	i2printf@ap,fsr2l
 26228  0110C8  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 26229  0110CC  50DF               	movf	indf2,w,c
 26230  0110CE  6FAF               	movwf	i2printf@c& (0+255),b
 26231                           
 26232                           ; BSR set to: 0
 26233  0110D0  0E02               	movlw	2
 26234  0110D2  2799               	addwf	i2printf@ap& (0+255),f,b
 26235  0110D4  0E00               	movlw	0
 26236  0110D6  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 26237  0110D8                     
 26238                           ; BSR set to: 0
 26239                           ;doprnt.c: 805: cp = (char *)&c;
 26240                           
 26241                           ; BSR set to: 0
 26242  0110D8  0EAF               	movlw	low i2printf@c
 26243  0110DA  6F95               	movwf	i2printf@cp& (0+255),b
 26244  0110DC  0E00               	movlw	high i2printf@c
 26245  0110DE  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 26246                           
 26247                           ; BSR set to: 0
 26248                           ;doprnt.c: 806: len = 1;
 26249  0110E0  0E00               	movlw	0
 26250  0110E2  6F98               	movwf	(i2printf@len+1)& (0+255),b
 26251  0110E4  0E01               	movlw	1
 26252  0110E6  6F97               	movwf	i2printf@len& (0+255),b
 26253                           
 26254                           ;doprnt.c: 807: goto dostring;
 26255  0110E8  D7A1               	goto	i2u1792_40
 26256  0110EA                     
 26257                           ; BSR set to: 0
 26258                           ;doprnt.c: 818: flag |= 0xC0;
 26259                           
 26260                           ; BSR set to: 0
 26261  0110EA  0EC0               	movlw	192
 26262  0110EC  13A9               	iorwf	i2printf@flag& (0+255),f,b
 26263                           
 26264                           ; BSR set to: 0
 26265                           ;doprnt.c: 822: }
 26266                           
 26267                           ;doprnt.c: 819: break;
 26268  0110EE  D037               	goto	i2l1383
 26269  0110F0                     i2l1379:
 26270                           
 26271                           ; BSR set to: 0
 26272  0110F0  0100               	movlb	0	; () banked
 26273  0110F2  5188               	movf	i2printf@f& (0+255),w,b
 26274  0110F4  6F8A               	movwf	??i2_printf& (0+255),b
 26275  0110F6  5189               	movf	(i2printf@f+1)& (0+255),w,b
 26276  0110F8  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 26277  0110FA  4B88               	infsnz	i2printf@f& (0+255),f,b
 26278  0110FC  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 26279  0110FE  C08A  FFF6         	movff	??i2_printf,tblptrl
 26280  011102  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 26281  011106  0E00               	movlw	low (__mediumconst shr (0+16))
 26282  011108  6EF8               	movwf	tblptru,c
 26283  01110A  0E0D               	movlw	(high __ramtop+-1)
 26284  01110C  64F7               	cpfsgt	tblptrh,c
 26285  01110E  D003               	bra	i2u1799_47
 26286  011110  0008               	tblrd		*
 26287  011112  50F5               	movf	tablat,w,c
 26288  011114  D005               	bra	i2u1799_40
 26289  011116                     i2u1799_47:
 26290  011116  CFF6 FFE9          	movff	tblptrl,fsr0l
 26291  01111A  CFF7 FFEA          	movff	tblptrh,fsr0h
 26292  01111E  50EF               	movf	indf0,w,c
 26293  011120                     i2u1799_40:
 26294  011120  0100               	movlb	0	; () banked
 26295  011122  6FAF               	movwf	i2printf@c& (0+255),b
 26296  011124  51AF               	movf	i2printf@c& (0+255),w,b
 26297                           
 26298                           ; Switch size 1, requested type "space"
 26299                           ; Number of cases is 9, Range of values is 0 to 120
 26300                           ; switch strategies available:
 26301                           ; Name         Instructions Cycles
 26302                           ; simple_byte           28    15 (average)
 26303                           ;	Chosen strategy is simple_byte
 26304  011126  0A00               	xorlw	0	; case 0
 26305  011128  B4D8               	btfsc	status,2,c
 26306  01112A  0012               	return	
 26307  01112C  0A58               	xorlw	88	; case 88
 26308  01112E  B4D8               	btfsc	status,2,c
 26309  011130  D745               	goto	i2l1386
 26310  011132  0A3B               	xorlw	59	; case 99
 26311  011134  B4D8               	btfsc	status,2,c
 26312  011136  D7C6               	goto	i2l1403
 26313  011138  0A07               	xorlw	7	; case 100
 26314  01113A  B4D8               	btfsc	status,2,c
 26315  01113C  D010               	goto	i2l1383
 26316  01113E  0A02               	xorlw	2	; case 102
 26317  011140  B4D8               	btfsc	status,2,c
 26318  011142  D73A               	goto	i2l1382
 26319  011144  0A0F               	xorlw	15	; case 105
 26320  011146  B4D8               	btfsc	status,2,c
 26321  011148  D00A               	goto	i2l1383
 26322  01114A  0A1A               	xorlw	26	; case 115
 26323  01114C  B4D8               	btfsc	status,2,c
 26324  01114E  D738               	goto	i2l1388
 26325  011150  0A06               	xorlw	6	; case 117
 26326  011152  B4D8               	btfsc	status,2,c
 26327  011154  D7CA               	goto	i2l1405
 26328  011156  0A0D               	xorlw	13	; case 120
 26329  011158  B4D8               	btfsc	status,2,c
 26330  01115A  D730               	goto	i2l1386
 26331  01115C  D7BD               	goto	i2l1404
 26332  01115E                     i2l1383:
 26333                           
 26334                           ; BSR set to: 0
 26335                           ;doprnt.c: 825: if(flag & (0x700)) {
 26336                           
 26337                           ; BSR set to: 0
 26338  01115E  0E07               	movlw	7
 26339  011160  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 26340  011162  B4D8               	btfsc	status,2,c
 26341  011164  D33B               	goto	i2l1406
 26342                           
 26343                           ; BSR set to: 0
 26344                           ;doprnt.c: 827: if(flag & 0x1000)
 26345  011166  A9AA               	btfss	(i2printf@flag+1)& (0+255),4,b
 26346  011168  D004               	goto	i2l1407
 26347                           
 26348                           ; BSR set to: 0
 26349                           ;doprnt.c: 829: prec = 6;
 26350  01116A  0E00               	movlw	0
 26351  01116C  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 26352  01116E  0E06               	movlw	6
 26353  011170  6FAD               	movwf	i2printf@prec& (0+255),b
 26354  011172                     i2l1407:
 26355                           
 26356                           ; BSR set to: 0
 26357                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 26358                           
 26359                           ; BSR set to: 0
 26360  011172  C099  FFD9         	movff	i2printf@ap,fsr2l
 26361  011176  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 26362  01117A  CFDE F0A5          	movff	postinc2,i2printf@fval
 26363  01117E  CFDE F0A6          	movff	postinc2,i2printf@fval+1
 26364  011182  CFDE F0A7          	movff	postinc2,i2printf@fval+2
 26365  011186  CFDE F0A8          	movff	postinc2,i2printf@fval+3
 26366                           
 26367                           ; BSR set to: 0
 26368  01118A  0E04               	movlw	4
 26369  01118C  2799               	addwf	i2printf@ap& (0+255),f,b
 26370  01118E  0E00               	movlw	0
 26371  011190  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 26372                           
 26373                           ; BSR set to: 0
 26374                           ;doprnt.c: 831: if(fval < 0.0) {
 26375  011192  AFA8               	btfss	(i2printf@fval+3)& (0+255),7,b
 26376  011194  D015               	goto	i2l1408
 26377                           
 26378                           ; BSR set to: 0
 26379                           ;doprnt.c: 832: fval = -fval;
 26380  011196  C0A5  F02C         	movff	i2printf@fval,i2___flneg@f1
 26381  01119A  C0A6  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 26382  01119E  C0A7  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 26383  0111A2  C0A8  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 26384  0111A6  ECD4  F0C2         	call	i2___flneg	;wreg free
 26385  0111AA  C02C  F0A5         	movff	?i2___flneg,i2printf@fval
 26386  0111AE  C02D  F0A6         	movff	?i2___flneg+1,i2printf@fval+1
 26387  0111B2  C02E  F0A7         	movff	?i2___flneg+2,i2printf@fval+2
 26388  0111B6  C02F  F0A8         	movff	?i2___flneg+3,i2printf@fval+3
 26389                           
 26390                           ;doprnt.c: 833: flag |= 0x03;
 26391  0111BA  0E03               	movlw	3
 26392  0111BC  0100               	movlb	0	; () banked
 26393  0111BE  13A9               	iorwf	i2printf@flag& (0+255),f,b
 26394  0111C0                     i2l1408:
 26395                           
 26396                           ; BSR set to: 0
 26397                           ;doprnt.c: 834: }
 26398                           ;doprnt.c: 835: exp = 0;
 26399                           
 26400                           ; BSR set to: 0
 26401  0111C0  0E00               	movlw	0
 26402  0111C2  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 26403  0111C4  0E00               	movlw	0
 26404  0111C6  6F9F               	movwf	i2printf@exp& (0+255),b
 26405                           
 26406                           ; BSR set to: 0
 26407                           ;doprnt.c: 836: if( fval!=0) {
 26408  0111C8  51A5               	movf	i2printf@fval& (0+255),w,b
 26409  0111CA  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 26410  0111CC  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 26411  0111CE  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 26412  0111D0  B4D8               	btfsc	status,2,c
 26413  0111D2  D082               	goto	i2l1413
 26414                           
 26415                           ; BSR set to: 0
 26416                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 26417  0111D4  35A7               	rlcf	(i2printf@fval+2)& (0+255),w,b
 26418  0111D6  35A8               	rlcf	(i2printf@fval+3)& (0+255),w,b
 26419  0111D8  0F82               	addlw	130
 26420  0111DA  6F9F               	movwf	i2printf@exp& (0+255),b
 26421  0111DC  6BA0               	clrf	(i2printf@exp+1)& (0+255),b
 26422  0111DE  0EFF               	movlw	255
 26423  0111E0  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 26424                           
 26425                           ; BSR set to: 0
 26426                           ;doprnt.c: 838: exp--;
 26427  0111E2  079F               	decf	i2printf@exp& (0+255),f,b
 26428  0111E4  A0D8               	btfss	status,0,c
 26429  0111E6  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 26430                           
 26431                           ; BSR set to: 0
 26432                           ;doprnt.c: 839: exp *= 3;
 26433  0111E8  C09F  F001         	movff	i2printf@exp,i2___wmul@multiplier
 26434  0111EC  C0A0  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 26435  0111F0  0E00               	movlw	0
 26436  0111F2  6E04               	movwf	i2___wmul@multiplicand+1,c
 26437  0111F4  0E03               	movlw	3
 26438  0111F6  6E03               	movwf	i2___wmul@multiplicand,c
 26439  0111F8  EC62  F0C3         	call	i2___wmul	;wreg free
 26440  0111FC  C001  F09F         	movff	?i2___wmul,i2printf@exp
 26441  011200  C002  F0A0         	movff	?i2___wmul+1,i2printf@exp+1
 26442                           
 26443                           ;doprnt.c: 840: exp /= 10;
 26444  011204  C09F  F007         	movff	i2printf@exp,i2___awdiv@dividend
 26445  011208  C0A0  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 26446  01120C  0E00               	movlw	0
 26447  01120E  6E0A               	movwf	i2___awdiv@divisor+1,c
 26448  011210  0E0A               	movlw	10
 26449  011212  6E09               	movwf	i2___awdiv@divisor,c
 26450  011214  ECD3  F0BC         	call	i2___awdiv	;wreg free
 26451  011218  C007  F09F         	movff	?i2___awdiv,i2printf@exp
 26452  01121C  C008  F0A0         	movff	?i2___awdiv+1,i2printf@exp+1
 26453                           
 26454                           ;doprnt.c: 841: if(exp < 0)
 26455  011220  0100               	movlb	0	; () banked
 26456  011222  AFA0               	btfss	(i2printf@exp+1)& (0+255),7,b
 26457  011224  D003               	goto	i2l1410
 26458                           
 26459                           ; BSR set to: 0
 26460                           ;doprnt.c: 842: exp--;
 26461  011226  079F               	decf	i2printf@exp& (0+255),f,b
 26462  011228  A0D8               	btfss	status,0,c
 26463  01122A  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 26464  01122C                     i2l1410:
 26465                           
 26466                           ; BSR set to: 0
 26467                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 26468                           
 26469                           ; BSR set to: 0
 26470  01122C  519F               	movf	i2printf@exp& (0+255),w,b
 26471  01122E  0800               	sublw	0
 26472  011230  ECDB  F09B         	call	i2_scale
 26473  011234  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 26474  011238  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 26475  01123C  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 26476  011240  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 26477                           
 26478                           ;doprnt.c: 847: tmpval.integ *= fval;
 26479  011244  C09B  F030         	movff	i2printf@tmpval,i2___flmul@b
 26480  011248  C09C  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 26481  01124C  C09D  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 26482  011250  C09E  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 26483  011254  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 26484  011258  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 26485  01125C  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 26486  011260  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 26487  011264  EC78  F0A1         	call	i2___flmul	;wreg free
 26488  011268  C030  F09B         	movff	?i2___flmul,i2printf@tmpval
 26489  01126C  C031  F09C         	movff	?i2___flmul+1,i2printf@tmpval+1
 26490  011270  C032  F09D         	movff	?i2___flmul+2,i2printf@tmpval+2
 26491  011274  C033  F09E         	movff	?i2___flmul+3,i2printf@tmpval+3
 26492                           
 26493                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 26494  011278  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 26495  01127C  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 26496  011280  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 26497  011284  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 26498  011288  0E00               	movlw	0
 26499  01128A  6E38               	movwf	i2___flge@ff2,c
 26500  01128C  0E00               	movlw	0
 26501  01128E  6E39               	movwf	i2___flge@ff2+1,c
 26502  011290  0E80               	movlw	128
 26503  011292  6E3A               	movwf	i2___flge@ff2+2,c
 26504  011294  0E3F               	movlw	63
 26505  011296  6E3B               	movwf	i2___flge@ff2+3,c
 26506  011298  EC41  F0B7         	call	i2___flge	;wreg free
 26507  01129C  B0D8               	btfsc	status,0,c
 26508  01129E  D005               	goto	i2l1411
 26509                           
 26510                           ;doprnt.c: 849: exp--;
 26511  0112A0  0100               	movlb	0	; () banked
 26512  0112A2  079F               	decf	i2printf@exp& (0+255),f,b
 26513  0112A4  A0D8               	btfss	status,0,c
 26514  0112A6  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 26515  0112A8  D017               	goto	i2l1413
 26516  0112AA                     i2l1411:
 26517                           
 26518                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 26519                           
 26520                           ; BSR set to: 0
 26521  0112AA  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 26522  0112AE  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 26523  0112B2  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 26524  0112B6  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 26525  0112BA  0E00               	movlw	0
 26526  0112BC  6E38               	movwf	i2___flge@ff2,c
 26527  0112BE  0E00               	movlw	0
 26528  0112C0  6E39               	movwf	i2___flge@ff2+1,c
 26529  0112C2  0E20               	movlw	32
 26530  0112C4  6E3A               	movwf	i2___flge@ff2+2,c
 26531  0112C6  0E41               	movlw	65
 26532  0112C8  6E3B               	movwf	i2___flge@ff2+3,c
 26533  0112CA  EC41  F0B7         	call	i2___flge	;wreg free
 26534  0112CE  A0D8               	btfss	status,0,c
 26535  0112D0  D003               	goto	i2l1413
 26536                           
 26537                           ;doprnt.c: 851: exp++;
 26538  0112D2  0100               	movlb	0	; () banked
 26539  0112D4  4B9F               	infsnz	i2printf@exp& (0+255),f,b
 26540  0112D6  2BA0               	incf	(i2printf@exp+1)& (0+255),f,b
 26541  0112D8                     i2l1413:
 26542                           
 26543                           ;doprnt.c: 852: }
 26544                           ;doprnt.c: 1112: if(prec <= 12)
 26545                           
 26546                           ; BSR set to: 0
 26547                           
 26548                           ; BSR set to: 0
 26549                           
 26550                           ; BSR set to: 0
 26551  0112D8  0100               	movlb	0	; () banked
 26552  0112DA  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 26553  0112DC  D006               	goto	i2u1807_40
 26554  0112DE  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 26555  0112E0  E121               	bnz	i2l14350
 26556  0112E2  0E0D               	movlw	13
 26557  0112E4  5DAD               	subwf	i2printf@prec& (0+255),w,b
 26558  0112E6  B0D8               	btfsc	status,0,c
 26559  0112E8  D01D               	goto	i2l1414
 26560  0112EA                     i2u1807_40:
 26561                           
 26562                           ; BSR set to: 0
 26563                           ;doprnt.c: 1113: fval += fround(prec);
 26564  0112EA  C0A5  F056         	movff	i2printf@fval,i2___fladd@b
 26565  0112EE  C0A6  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 26566  0112F2  C0A7  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 26567  0112F6  C0A8  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 26568  0112FA  51AD               	movf	i2printf@prec& (0+255),w,b
 26569  0112FC  ECD9  F0AE         	call	i2_fround
 26570  011300  C049  F05A         	movff	?i2_fround,i2___fladd@a
 26571  011304  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 26572  011308  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 26573  01130C  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 26574  011310  ECBF  F0A4         	call	i2___fladd	;wreg free
 26575  011314  C056  F0A5         	movff	?i2___fladd,i2printf@fval
 26576  011318  C057  F0A6         	movff	?i2___fladd+1,i2printf@fval+1
 26577  01131C  C058  F0A7         	movff	?i2___fladd+2,i2printf@fval+2
 26578  011320  C059  F0A8         	movff	?i2___fladd+3,i2printf@fval+3
 26579  011324                     i2l1414:
 26580  011324                     i2l14350:
 26581                           
 26582                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 26583  011324  0100               	movlb	0	; () banked
 26584  011326  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 26585  011328  D006               	goto	i2u1808_40
 26586  01132A  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 26587  01132C  E122               	bnz	i2l14358
 26588  01132E  0E0A               	movlw	10
 26589  011330  5D9F               	subwf	i2printf@exp& (0+255),w,b
 26590  011332  B0D8               	btfsc	status,0,c
 26591  011334  D01E               	goto	i2u1811_40
 26592  011336                     i2u1808_40:
 26593                           
 26594                           ; BSR set to: 0
 26595  011336  51A5               	movf	i2printf@fval& (0+255),w,b
 26596  011338  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 26597  01133A  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 26598  01133C  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 26599  01133E  B4D8               	btfsc	status,2,c
 26600  011340  D063               	goto	i2l1415
 26601                           
 26602                           ; BSR set to: 0
 26603  011342  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 26604  011346  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 26605  01134A  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 26606  01134E  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 26607  011352  EC49  F0B9         	call	i2___fltol	;wreg free
 26608  011356  0100               	movlb	0	; () banked
 26609  011358  516C               	movf	?i2___fltol& (0+255),w,b
 26610  01135A  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 26611  01135C  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 26612  01135E  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 26613  011360  B4D8               	btfsc	status,2,c
 26614                           
 26615                           ; BSR set to: 0
 26616  011362  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 26617  011364  D051               	goto	i2l1415
 26618  011366  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 26619  011368  E104               	bnz	i2l14358
 26620  01136A  0E02               	movlw	2
 26621  01136C  5D9F               	subwf	i2printf@exp& (0+255),w,b
 26622  01136E  A0D8               	btfss	status,0,c
 26623  011370  D04B               	goto	i2l1415
 26624  011372                     i2u1811_40:
 26625  011372                     i2l14358:
 26626                           
 26627                           ; BSR set to: 0
 26628                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 26629  011372  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 26630  011376  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 26631  01137A  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 26632  01137E  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 26633  011382  0E5F               	movlw	95
 26634  011384  6E38               	movwf	i2___flge@ff2,c
 26635  011386  0E70               	movlw	112
 26636  011388  6E39               	movwf	i2___flge@ff2+1,c
 26637  01138A  0E89               	movlw	137
 26638  01138C  6E3A               	movwf	i2___flge@ff2+2,c
 26639  01138E  0E40               	movlw	64
 26640  011390  6E3B               	movwf	i2___flge@ff2+3,c
 26641  011392  EC41  F0B7         	call	i2___flge	;wreg free
 26642  011396  B0D8               	btfsc	status,0,c
 26643  011398  D003               	goto	i2l1418
 26644                           
 26645                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 26646  01139A  0100               	movlb	0	; () banked
 26647  01139C  0EF7               	movlw	247
 26648  01139E  D002               	goto	L15
 26649  0113A0                     i2l1418:
 26650                           
 26651                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 26652                           
 26653                           ; BSR set to: 0
 26654  0113A0  0100               	movlb	0	; () banked
 26655  0113A2  0EF8               	movlw	248
 26656  0113A4                     L15:
 26657  0113A4  279F               	addwf	i2printf@exp& (0+255),f,b
 26658  0113A6  0EFF               	movlw	255
 26659  0113A8  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 26660                           
 26661                           ; BSR set to: 0
 26662                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 26663                           
 26664                           ; BSR set to: 0
 26665  0113AA  519F               	movf	i2printf@exp& (0+255),w,b
 26666  0113AC  ECDB  F09B         	call	i2_scale
 26667  0113B0  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 26668  0113B4  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 26669  0113B8  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 26670  0113BC  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 26671  0113C0  C0A5  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 26672  0113C4  C0A6  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 26673  0113C8  C0A7  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 26674  0113CC  C0A8  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 26675  0113D0  C09B  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 26676  0113D4  C09C  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 26677  0113D8  C09D  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 26678  0113DC  C09E  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 26679  0113E0  EC8A  F0B5         	call	i2__div_to_l_	;wreg free
 26680  0113E4  C001  F0A1         	movff	?i2__div_to_l_,i2printf@val
 26681  0113E8  C002  F0A2         	movff	?i2__div_to_l_+1,i2printf@val+1
 26682  0113EC  C003  F0A3         	movff	?i2__div_to_l_+2,i2printf@val+2
 26683  0113F0  C004  F0A4         	movff	?i2__div_to_l_+3,i2printf@val+3
 26684                           
 26685                           ;doprnt.c: 1129: fval = 0.0;
 26686  0113F4  0E00               	movlw	0
 26687  0113F6  0100               	movlb	0	; () banked
 26688  0113F8  6FA5               	movwf	i2printf@fval& (0+255),b
 26689  0113FA  0E00               	movlw	0
 26690  0113FC  6FA6               	movwf	(i2printf@fval+1)& (0+255),b
 26691  0113FE  0E00               	movlw	0
 26692  011400  6FA7               	movwf	(i2printf@fval+2)& (0+255),b
 26693  011402  0E00               	movlw	0
 26694  011404  6FA8               	movwf	(i2printf@fval+3)& (0+255),b
 26695                           
 26696                           ;doprnt.c: 1130: } else {
 26697  011406  D03C               	goto	i2l1424
 26698  011408                     i2l1415:
 26699                           
 26700                           ; BSR set to: 0
 26701                           ;doprnt.c: 1131: val = (unsigned long)fval;
 26702                           
 26703                           ; BSR set to: 0
 26704  011408  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 26705  01140C  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 26706  011410  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 26707  011414  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 26708  011418  EC49  F0B9         	call	i2___fltol	;wreg free
 26709  01141C  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 26710  011420  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 26711  011424  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 26712  011428  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 26713                           
 26714                           ;doprnt.c: 1132: fval -= (double)val;
 26715  01142C  C0A5  F080         	movff	i2printf@fval,i2___flsub@b
 26716  011430  C0A6  F081         	movff	i2printf@fval+1,i2___flsub@b+1
 26717  011434  C0A7  F082         	movff	i2printf@fval+2,i2___flsub@b+2
 26718  011438  C0A8  F083         	movff	i2printf@fval+3,i2___flsub@b+3
 26719  01143C  C0A1  F005         	movff	i2printf@val,i2___xxtofl@val
 26720  011440  C0A2  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 26721  011444  C0A3  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 26722  011448  C0A4  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 26723  01144C  0E00               	movlw	0
 26724  01144E  EC1A  F0B3         	call	i2___xxtofl
 26725  011452  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 26726  011456  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 26727  01145A  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 26728  01145E  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 26729  011462  EC2B  F0C1         	call	i2___flsub	;wreg free
 26730  011466  C080  F0A5         	movff	?i2___flsub,i2printf@fval
 26731  01146A  C081  F0A6         	movff	?i2___flsub+1,i2printf@fval+1
 26732  01146E  C082  F0A7         	movff	?i2___flsub+2,i2printf@fval+2
 26733  011472  C083  F0A8         	movff	?i2___flsub+3,i2printf@fval+3
 26734                           
 26735                           ;doprnt.c: 1133: exp = 0;
 26736  011476  0E00               	movlw	0
 26737  011478  0100               	movlb	0	; () banked
 26738  01147A  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 26739  01147C  0E00               	movlw	0
 26740  01147E  6F9F               	movwf	i2printf@exp& (0+255),b
 26741  011480                     i2l1424:
 26742                           
 26743                           ; BSR set to: 0
 26744                           ;doprnt.c: 1134: }
 26745                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 26746                           
 26747                           ; BSR set to: 0
 26748  011480  0E01               	movlw	1
 26749  011482  6FAF               	movwf	i2printf@c& (0+255),b
 26750  011484                     i2l14378:
 26751                           
 26752                           ; BSR set to: 0
 26753  011484  0E0A               	movlw	10
 26754  011486  19AF               	xorwf	i2printf@c& (0+255),w,b
 26755  011488  B4D8               	btfsc	status,2,c
 26756  01148A  D01B               	goto	i2u1815_40
 26757                           
 26758                           ; BSR set to: 0
 26759                           ;doprnt.c: 1137: if(val < dpowers[c])
 26760                           
 26761                           ; BSR set to: 0
 26762                           
 26763                           ; BSR set to: 0
 26764  01148C  51AF               	movf	i2printf@c& (0+255),w,b
 26765  01148E  0D04               	mullw	4
 26766  011490  0E6B               	movlw	low _dpowers
 26767  011492  24F3               	addwf	prodl,w,c
 26768  011494  6EF6               	movwf	tblptrl,c
 26769  011496  0EEA               	movlw	high _dpowers
 26770  011498  20F4               	addwfc	prodh,w,c
 26771  01149A  6EF7               	movwf	tblptrh,c
 26772  01149C                     	if	1	;There are 3 active tblptr bytes
 26773  01149C  6AF8               	clrf	tblptru,c
 26774  01149E  0E00               	movlw	low (__mediumconst shr (0+16))
 26775  0114A0  22F8               	addwfc	tblptru,f,c
 26776  0114A2                     	endif
 26777  0114A2  0009               	tblrd		*+
 26778  0114A4  50F5               	movf	tablat,w,c
 26779  0114A6  5DA1               	subwf	i2printf@val& (0+255),w,b
 26780  0114A8  0009               	tblrd		*+
 26781  0114AA  50F5               	movf	tablat,w,c
 26782  0114AC  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 26783  0114AE  0009               	tblrd		*+
 26784  0114B0  50F5               	movf	tablat,w,c
 26785  0114B2  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 26786  0114B4  0009               	tblrd		*+
 26787  0114B6  50F5               	movf	tablat,w,c
 26788  0114B8  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 26789  0114BA  A0D8               	btfss	status,0,c
 26790  0114BC  D002               	goto	i2u1815_40
 26791                           
 26792                           ; BSR set to: 0
 26793                           
 26794                           ; BSR set to: 0
 26795                           
 26796                           ; BSR set to: 0
 26797                           ;doprnt.c: 1138: break;
 26798  0114BE  2BAF               	incf	i2printf@c& (0+255),f,b
 26799  0114C0  D7E1               	goto	i2l14378
 26800  0114C2                     i2u1815_40:
 26801                           
 26802                           ; BSR set to: 0
 26803                           ;doprnt.c: 1142: width -= prec + c + exp;
 26804                           
 26805                           ; BSR set to: 0
 26806  0114C2  C0AF  F08A         	movff	i2printf@c,??i2_printf
 26807  0114C6  6B8B               	clrf	(??i2_printf+1)& (0+255),b
 26808  0114C8  BF8A               	btfsc	??i2_printf& (0+255),7,b
 26809  0114CA  078B               	decf	(??i2_printf+1)& (0+255),f,b
 26810  0114CC  51AD               	movf	i2printf@prec& (0+255),w,b
 26811  0114CE  278A               	addwf	??i2_printf& (0+255),f,b
 26812  0114D0  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 26813  0114D2  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 26814  0114D4  519F               	movf	i2printf@exp& (0+255),w,b
 26815  0114D6  278A               	addwf	??i2_printf& (0+255),f,b
 26816  0114D8  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 26817  0114DA  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 26818  0114DC  518A               	movf	??i2_printf& (0+255),w,b
 26819  0114DE  5FAB               	subwf	i2printf@width& (0+255),f,b
 26820  0114E0  518B               	movf	(??i2_printf+1)& (0+255),w,b
 26821  0114E2  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 26822                           
 26823                           ;doprnt.c: 1143: if(
 26824                           ;doprnt.c: 1147: prec)
 26825  0114E4  51AD               	movf	i2printf@prec& (0+255),w,b
 26826  0114E6  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 26827  0114E8  B4D8               	btfsc	status,2,c
 26828  0114EA  D003               	goto	i2l1428
 26829                           
 26830                           ; BSR set to: 0
 26831                           ;doprnt.c: 1148: width--;
 26832  0114EC  07AB               	decf	i2printf@width& (0+255),f,b
 26833  0114EE  A0D8               	btfss	status,0,c
 26834  0114F0  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 26835  0114F2                     i2l1428:
 26836                           
 26837                           ; BSR set to: 0
 26838                           ;doprnt.c: 1149: if(flag & 0x03)
 26839                           
 26840                           ; BSR set to: 0
 26841  0114F2  0E03               	movlw	3
 26842  0114F4  15A9               	andwf	i2printf@flag& (0+255),w,b
 26843  0114F6  6F8A               	movwf	??i2_printf& (0+255),b
 26844  0114F8  0E00               	movlw	0
 26845  0114FA  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 26846  0114FC  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 26847  0114FE  518A               	movf	??i2_printf& (0+255),w,b
 26848  011500  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 26849  011502  B4D8               	btfsc	status,2,c
 26850  011504  D003               	goto	i2l1429
 26851                           
 26852                           ; BSR set to: 0
 26853                           ;doprnt.c: 1150: width--;
 26854  011506  07AB               	decf	i2printf@width& (0+255),f,b
 26855  011508  A0D8               	btfss	status,0,c
 26856  01150A  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 26857  01150C                     i2l1429:
 26858                           
 26859                           ; BSR set to: 0
 26860                           ;doprnt.c: 1153: if(flag & 0x04) {
 26861                           
 26862                           ; BSR set to: 0
 26863  01150C  A5A9               	btfss	i2printf@flag& (0+255),2,b
 26864  01150E  D025               	goto	i2l1436
 26865                           
 26866                           ; BSR set to: 0
 26867                           ;doprnt.c: 1157: if(flag & 0x03)
 26868  011510  0E03               	movlw	3
 26869  011512  15A9               	andwf	i2printf@flag& (0+255),w,b
 26870  011514  6F8A               	movwf	??i2_printf& (0+255),b
 26871  011516  0E00               	movlw	0
 26872  011518  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 26873  01151A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 26874  01151C  518A               	movf	??i2_printf& (0+255),w,b
 26875  01151E  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 26876  011520  B4D8               	btfsc	status,2,c
 26877  011522  D00B               	goto	i2l1432
 26878                           
 26879                           ; BSR set to: 0
 26880                           ;doprnt.c: 1159: (putch('-') );
 26881  011524  0E2D               	movlw	45
 26882  011526  EC7C  F0C4         	call	i2_putch
 26883                           
 26884                           ;doprnt.c: 1168: while(width > 0) {
 26885  01152A  D007               	goto	i2l1432
 26886  01152C                     i2l14404:
 26887                           
 26888                           ;doprnt.c: 1169: (putch('0') );
 26889  01152C  0E30               	movlw	48
 26890  01152E  EC7C  F0C4         	call	i2_putch
 26891                           
 26892                           ;doprnt.c: 1170: width--;
 26893  011532  0100               	movlb	0	; () banked
 26894  011534  07AB               	decf	i2printf@width& (0+255),f,b
 26895  011536  A0D8               	btfss	status,0,c
 26896  011538  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 26897  01153A                     i2l1432:
 26898                           
 26899                           ; BSR set to: 0
 26900  01153A  0100               	movlb	0	; () banked
 26901  01153C  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 26902  01153E  D06B               	goto	i2l1440
 26903  011540  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 26904  011542  E1F4               	bnz	i2l14404
 26905  011544  05AB               	decf	i2printf@width& (0+255),w,b
 26906  011546  A0D8               	btfss	status,0,c
 26907  011548  D066               	goto	i2l1440
 26908  01154A  D7F0               	goto	i2l1433
 26909  01154C                     i2l14410:
 26910                           
 26911                           ; BSR set to: 0
 26912                           ;doprnt.c: 1181: (putch(' ') );
 26913  01154C  0E20               	movlw	32
 26914  01154E  EC7C  F0C4         	call	i2_putch
 26915                           
 26916                           ;doprnt.c: 1182: width--;
 26917  011552  0100               	movlb	0	; () banked
 26918  011554  07AB               	decf	i2printf@width& (0+255),f,b
 26919  011556  A0D8               	btfss	status,0,c
 26920  011558  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 26921  01155A                     i2l1436:
 26922                           
 26923                           ; BSR set to: 0
 26924                           
 26925                           ; BSR set to: 0
 26926  01155A  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 26927  01155C  D005               	goto	i2u1821_40
 26928  01155E  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 26929  011560  E1F5               	bnz	i2l14410
 26930  011562  05AB               	decf	i2printf@width& (0+255),w,b
 26931  011564  B0D8               	btfsc	status,0,c
 26932  011566  D7F2               	goto	i2l1437
 26933  011568                     i2u1821_40:
 26934                           
 26935                           ; BSR set to: 0
 26936                           ;doprnt.c: 1183: }
 26937                           ;doprnt.c: 1188: if(flag & 0x03)
 26938                           
 26939                           ; BSR set to: 0
 26940  011568  0E03               	movlw	3
 26941  01156A  15A9               	andwf	i2printf@flag& (0+255),w,b
 26942  01156C  6F8A               	movwf	??i2_printf& (0+255),b
 26943  01156E  0E00               	movlw	0
 26944  011570  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 26945  011572  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 26946  011574  518A               	movf	??i2_printf& (0+255),w,b
 26947  011576  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 26948  011578  B4D8               	btfsc	status,2,c
 26949  01157A  D04D               	goto	i2l1440
 26950                           
 26951                           ; BSR set to: 0
 26952                           ;doprnt.c: 1190: (putch('-') );
 26953  01157C  0E2D               	movlw	45
 26954  01157E  EC7C  F0C4         	call	i2_putch
 26955                           
 26956                           ;doprnt.c: 1195: }
 26957                           ;doprnt.c: 1196: while(c--) {
 26958  011582  D049               	goto	i2l1440
 26959  011584                     
 26960                           ;doprnt.c: 1200: {
 26961                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 26962  011584  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 26963  011588  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26964  01158C  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26965  011590  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26966  011594  0100               	movlb	0	; () banked
 26967  011596  51AF               	movf	i2printf@c& (0+255),w,b
 26968  011598  0D04               	mullw	4
 26969  01159A  0E6B               	movlw	low _dpowers
 26970  01159C  24F3               	addwf	prodl,w,c
 26971  01159E  6EF6               	movwf	tblptrl,c
 26972  0115A0  0EEA               	movlw	high _dpowers
 26973  0115A2  20F4               	addwfc	prodh,w,c
 26974  0115A4  6EF7               	movwf	tblptrh,c
 26975  0115A6                     	if	1	;There are 3 active tblptr bytes
 26976  0115A6  6AF8               	clrf	tblptru,c
 26977  0115A8  0E00               	movlw	low (__mediumconst shr (0+16))
 26978  0115AA  22F8               	addwfc	tblptru,f,c
 26979  0115AC                     	endif
 26980  0115AC  0009               	tblrd		*+
 26981  0115AE  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26982  0115B2  0009               	tblrd		*+
 26983  0115B4  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26984  0115B8  0009               	tblrd		*+
 26985  0115BA  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26986  0115BE  000A               	tblrd		*-
 26987  0115C0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26988  0115C4  EC15  F0BD         	call	i2___lldiv	;wreg free
 26989  0115C8  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 26990  0115CC  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 26991  0115D0  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 26992  0115D4  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 26993                           
 26994                           ;doprnt.c: 1202: tmpval.vd %= 10;
 26995  0115D8  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 26996  0115DC  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 26997  0115E0  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 26998  0115E4  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 26999  0115E8  0E0A               	movlw	10
 27000  0115EA  6E12               	movwf	i2___llmod@divisor,c
 27001  0115EC  0E00               	movlw	0
 27002  0115EE  6E13               	movwf	i2___llmod@divisor+1,c
 27003  0115F0  0E00               	movlw	0
 27004  0115F2  6E14               	movwf	i2___llmod@divisor+2,c
 27005  0115F4  0E00               	movlw	0
 27006  0115F6  6E15               	movwf	i2___llmod@divisor+3,c
 27007  0115F8  EC16  F0BF         	call	i2___llmod	;wreg free
 27008  0115FC  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 27009  011600  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 27010  011604  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 27011  011608  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 27012                           
 27013                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 27014  01160C  0100               	movlb	0	; () banked
 27015  01160E  519B               	movf	i2printf@tmpval& (0+255),w,b
 27016  011610  0F30               	addlw	48
 27017  011612  EC7C  F0C4         	call	i2_putch
 27018  011616                     i2l1440:
 27019  011616  0100               	movlb	0	; () banked
 27020  011618  07AF               	decf	i2printf@c& (0+255),f,b
 27021  01161A  29AF               	incf	i2printf@c& (0+255),w,b
 27022  01161C  B4D8               	btfsc	status,2,c
 27023  01161E  D008               	goto	i2l1443
 27024  011620  D7B1               	goto	i2l1441
 27025  011622                     i2l14428:
 27026                           
 27027                           ; BSR set to: 0
 27028                           ;doprnt.c: 1208: (putch('0') );
 27029  011622  0E30               	movlw	48
 27030  011624  EC7C  F0C4         	call	i2_putch
 27031                           
 27032                           ;doprnt.c: 1209: exp--;
 27033  011628  0100               	movlb	0	; () banked
 27034  01162A  079F               	decf	i2printf@exp& (0+255),f,b
 27035  01162C  A0D8               	btfss	status,0,c
 27036  01162E  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 27037  011630                     i2l1443:
 27038                           
 27039                           ; BSR set to: 0
 27040                           
 27041                           ; BSR set to: 0
 27042  011630  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 27043  011632  D005               	goto	i2u1824_40
 27044  011634  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 27045  011636  E1F5               	bnz	i2l14428
 27046  011638  059F               	decf	i2printf@exp& (0+255),w,b
 27047  01163A  B0D8               	btfsc	status,0,c
 27048  01163C  D7F2               	goto	i2l1444
 27049  01163E                     i2u1824_40:
 27050                           
 27051                           ; BSR set to: 0
 27052                           ;doprnt.c: 1210: }
 27053                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 27054                           
 27055                           ; BSR set to: 0
 27056  01163E  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 27057  011640  D009               	goto	i2l1446
 27058  011642  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 27059  011644  E104               	bnz	i2u1825_40
 27060  011646  0E09               	movlw	9
 27061  011648  5DAD               	subwf	i2printf@prec& (0+255),w,b
 27062  01164A  A0D8               	btfss	status,0,c
 27063  01164C  D003               	goto	i2l1446
 27064  01164E                     i2u1825_40:
 27065                           
 27066                           ; BSR set to: 0
 27067                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 27068  01164E  0E08               	movlw	8
 27069  011650  6FAF               	movwf	i2printf@c& (0+255),b
 27070  011652  D002               	goto	i2l1447
 27071  011654                     i2l1446:
 27072                           
 27073                           ; BSR set to: 0
 27074                           ;doprnt.c: 1213: else
 27075                           ;doprnt.c: 1214: c = prec;
 27076  011654  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 27077  011658                     i2l1447:
 27078                           
 27079                           ; BSR set to: 0
 27080                           ;doprnt.c: 1215: prec -= c;
 27081                           
 27082                           ; BSR set to: 0
 27083  011658  51AF               	movf	i2printf@c& (0+255),w,b
 27084  01165A  5FAD               	subwf	i2printf@prec& (0+255),f,b
 27085  01165C  0E00               	movlw	0
 27086  01165E  BFAF               	btfsc	i2printf@c& (0+255),7,b
 27087  011660  0EFF               	movlw	255
 27088  011662  5BAE               	subwfb	(i2printf@prec+1)& (0+255),f,b
 27089                           
 27090                           ; BSR set to: 0
 27091                           ;doprnt.c: 1219: if(c)
 27092  011664  51AF               	movf	i2printf@c& (0+255),w,b
 27093  011666  B4D8               	btfsc	status,2,c
 27094  011668  D003               	goto	i2l1448
 27095                           
 27096                           ; BSR set to: 0
 27097                           ;doprnt.c: 1221: (putch('.') );
 27098  01166A  0E2E               	movlw	46
 27099  01166C  EC7C  F0C4         	call	i2_putch
 27100  011670                     i2l1448:
 27101                           
 27102                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 27103  011670  0100               	movlb	0	; () banked
 27104  011672  51AF               	movf	i2printf@c& (0+255),w,b
 27105  011674  ECDB  F09B         	call	i2_scale
 27106  011678  C049  F090         	movff	?i2_scale,i2_printf$4101
 27107  01167C  C04A  F091         	movff	?i2_scale+1,i2_printf$4101+1
 27108  011680  C04B  F092         	movff	?i2_scale+2,i2_printf$4101+2
 27109  011684  C04C  F093         	movff	?i2_scale+3,i2_printf$4101+3
 27110                           
 27111                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 27112  011688  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 27113  01168C  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 27114  011690  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 27115  011694  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 27116  011698  C090  F030         	movff	i2_printf$4101,i2___flmul@b
 27117  01169C  C091  F031         	movff	i2_printf$4101+1,i2___flmul@b+1
 27118  0116A0  C092  F032         	movff	i2_printf$4101+2,i2___flmul@b+2
 27119  0116A4  C093  F033         	movff	i2_printf$4101+3,i2___flmul@b+3
 27120  0116A8  EC78  F0A1         	call	i2___flmul	;wreg free
 27121  0116AC  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 27122  0116B0  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 27123  0116B4  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 27124  0116B8  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 27125  0116BC  EC49  F0B9         	call	i2___fltol	;wreg free
 27126  0116C0  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 27127  0116C4  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 27128  0116C8  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 27129  0116CC  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 27130                           
 27131                           ;doprnt.c: 1228: while(c--) {
 27132  0116D0  D073               	goto	i2l1449
 27133  0116D2                     
 27134                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 27135  0116D2  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 27136  0116D6  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 27137  0116DA  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 27138  0116DE  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 27139  0116E2  0100               	movlb	0	; () banked
 27140  0116E4  51AF               	movf	i2printf@c& (0+255),w,b
 27141  0116E6  0D04               	mullw	4
 27142  0116E8  0E6B               	movlw	low _dpowers
 27143  0116EA  24F3               	addwf	prodl,w,c
 27144  0116EC  6EF6               	movwf	tblptrl,c
 27145  0116EE  0EEA               	movlw	high _dpowers
 27146  0116F0  20F4               	addwfc	prodh,w,c
 27147  0116F2  6EF7               	movwf	tblptrh,c
 27148  0116F4                     	if	1	;There are 3 active tblptr bytes
 27149  0116F4  6AF8               	clrf	tblptru,c
 27150  0116F6  0E00               	movlw	low (__mediumconst shr (0+16))
 27151  0116F8  22F8               	addwfc	tblptru,f,c
 27152  0116FA                     	endif
 27153  0116FA  0009               	tblrd		*+
 27154  0116FC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 27155  011700  0009               	tblrd		*+
 27156  011702  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 27157  011706  0009               	tblrd		*+
 27158  011708  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 27159  01170C  000A               	tblrd		*-
 27160  01170E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 27161  011712  EC15  F0BD         	call	i2___lldiv	;wreg free
 27162  011716  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 27163  01171A  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 27164  01171E  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 27165  011722  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 27166                           
 27167                           ;doprnt.c: 1230: tmpval.vd %= 10;
 27168  011726  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 27169  01172A  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 27170  01172E  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 27171  011732  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 27172  011736  0E0A               	movlw	10
 27173  011738  6E12               	movwf	i2___llmod@divisor,c
 27174  01173A  0E00               	movlw	0
 27175  01173C  6E13               	movwf	i2___llmod@divisor+1,c
 27176  01173E  0E00               	movlw	0
 27177  011740  6E14               	movwf	i2___llmod@divisor+2,c
 27178  011742  0E00               	movlw	0
 27179  011744  6E15               	movwf	i2___llmod@divisor+3,c
 27180  011746  EC16  F0BF         	call	i2___llmod	;wreg free
 27181  01174A  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 27182  01174E  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 27183  011752  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 27184  011756  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 27185                           
 27186                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 27187  01175A  0100               	movlb	0	; () banked
 27188  01175C  519B               	movf	i2printf@tmpval& (0+255),w,b
 27189  01175E  0F30               	addlw	48
 27190  011760  EC7C  F0C4         	call	i2_putch
 27191                           
 27192                           ;doprnt.c: 1232: val %= dpowers[c];
 27193  011764  C0A1  F00E         	movff	i2printf@val,i2___llmod@dividend
 27194  011768  C0A2  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 27195  01176C  C0A3  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 27196  011770  C0A4  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 27197  011774  0100               	movlb	0	; () banked
 27198  011776  51AF               	movf	i2printf@c& (0+255),w,b
 27199  011778  0D04               	mullw	4
 27200  01177A  0E6B               	movlw	low _dpowers
 27201  01177C  24F3               	addwf	prodl,w,c
 27202  01177E  6EF6               	movwf	tblptrl,c
 27203  011780  0EEA               	movlw	high _dpowers
 27204  011782  20F4               	addwfc	prodh,w,c
 27205  011784  6EF7               	movwf	tblptrh,c
 27206  011786                     	if	1	;There are 3 active tblptr bytes
 27207  011786  6AF8               	clrf	tblptru,c
 27208  011788  0E00               	movlw	low (__mediumconst shr (0+16))
 27209  01178A  22F8               	addwfc	tblptru,f,c
 27210  01178C                     	endif
 27211  01178C  0009               	tblrd		*+
 27212  01178E  CFF5 F012          	movff	tablat,i2___llmod@divisor
 27213  011792  0009               	tblrd		*+
 27214  011794  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 27215  011798  0009               	tblrd		*+
 27216  01179A  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 27217  01179E  000A               	tblrd		*-
 27218  0117A0  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 27219  0117A4  EC16  F0BF         	call	i2___llmod	;wreg free
 27220  0117A8  C00E  F0A1         	movff	?i2___llmod,i2printf@val
 27221  0117AC  C00F  F0A2         	movff	?i2___llmod+1,i2printf@val+1
 27222  0117B0  C010  F0A3         	movff	?i2___llmod+2,i2printf@val+2
 27223  0117B4  C011  F0A4         	movff	?i2___llmod+3,i2printf@val+3
 27224  0117B8                     i2l1449:
 27225  0117B8  0100               	movlb	0	; () banked
 27226  0117BA  07AF               	decf	i2printf@c& (0+255),f,b
 27227  0117BC  29AF               	incf	i2printf@c& (0+255),w,b
 27228  0117BE  B4D8               	btfsc	status,2,c
 27229  0117C0  D008               	goto	i2l1452
 27230  0117C2  D787               	goto	i2l1450
 27231  0117C4                     
 27232                           ; BSR set to: 0
 27233                           ;doprnt.c: 1236: (putch('0') );
 27234                           
 27235                           ; BSR set to: 0
 27236  0117C4  0E30               	movlw	48
 27237  0117C6  EC7C  F0C4         	call	i2_putch
 27238                           
 27239                           ;doprnt.c: 1237: prec--;
 27240  0117CA  0100               	movlb	0	; () banked
 27241  0117CC  07AD               	decf	i2printf@prec& (0+255),f,b
 27242  0117CE  A0D8               	btfss	status,0,c
 27243  0117D0  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 27244  0117D2                     i2l1452:
 27245                           
 27246                           ; BSR set to: 0
 27247                           
 27248                           ; BSR set to: 0
 27249  0117D2  51AD               	movf	i2printf@prec& (0+255),w,b
 27250  0117D4  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 27251  0117D6  B4D8               	btfsc	status,2,c
 27252  0117D8  D1BD               	goto	i2u1853_40
 27253  0117DA  D7F4               	goto	i2l1453
 27254  0117DC                     i2l1406:
 27255                           
 27256                           ; BSR set to: 0
 27257                           ;doprnt.c: 1246: }
 27258                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 27259                           
 27260                           ; BSR set to: 0
 27261  0117DC  0EC0               	movlw	192
 27262  0117DE  15A9               	andwf	i2printf@flag& (0+255),w,b
 27263  0117E0  6F8A               	movwf	??i2_printf& (0+255),b
 27264  0117E2  0E00               	movlw	0
 27265  0117E4  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 27266  0117E6  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27267  0117E8  518A               	movf	??i2_printf& (0+255),w,b
 27268  0117EA  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 27269  0117EC  A4D8               	btfss	status,2,c
 27270  0117EE  D01E               	goto	i2l1455
 27271                           
 27272                           ; BSR set to: 0
 27273                           ;doprnt.c: 1253: {
 27274                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 27275  0117F0  C099  FFD9         	movff	i2printf@ap,fsr2l
 27276  0117F4  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 27277  0117F8  CFDE F0A1          	movff	postinc2,i2printf@val
 27278  0117FC  CFDD F0A2          	movff	postdec2,i2printf@val+1
 27279  011800  0E00               	movlw	0
 27280  011802  BFA2               	btfsc	(i2printf@val+1)& (0+255),7,b
 27281  011804  0EFF               	movlw	-1
 27282  011806  6FA3               	movwf	(i2printf@val+2)& (0+255),b
 27283  011808  6FA4               	movwf	(i2printf@val+3)& (0+255),b
 27284                           
 27285                           ; BSR set to: 0
 27286  01180A  0E02               	movlw	2
 27287  01180C  2799               	addwf	i2printf@ap& (0+255),f,b
 27288  01180E  0E00               	movlw	0
 27289  011810  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 27290                           
 27291                           ; BSR set to: 0
 27292                           ;doprnt.c: 1261: if((long)val < 0) {
 27293  011812  AFA4               	btfss	(i2printf@val+3)& (0+255),7,b
 27294  011814  D01D               	goto	i2l1457
 27295                           
 27296                           ; BSR set to: 0
 27297                           ;doprnt.c: 1262: flag |= 0x03;
 27298  011816  0E03               	movlw	3
 27299  011818  13A9               	iorwf	i2printf@flag& (0+255),f,b
 27300                           
 27301                           ; BSR set to: 0
 27302                           ;doprnt.c: 1263: val = -val;
 27303  01181A  1FA4               	comf	(i2printf@val+3)& (0+255),f,b
 27304  01181C  1FA3               	comf	(i2printf@val+2)& (0+255),f,b
 27305  01181E  1FA2               	comf	(i2printf@val+1)& (0+255),f,b
 27306  011820  6DA1               	negf	i2printf@val& (0+255),b
 27307  011822  0E00               	movlw	0
 27308  011824  23A2               	addwfc	(i2printf@val+1)& (0+255),f,b
 27309  011826  23A3               	addwfc	(i2printf@val+2)& (0+255),f,b
 27310  011828  23A4               	addwfc	(i2printf@val+3)& (0+255),f,b
 27311                           
 27312                           ; BSR set to: 0
 27313                           ;doprnt.c: 1264: }
 27314                           ;doprnt.c: 1266: }
 27315  01182A  D012               	goto	i2l1457
 27316  01182C                     i2l1455:
 27317                           
 27318                           ; BSR set to: 0
 27319                           ;doprnt.c: 1268: else
 27320                           ;doprnt.c: 1273: {
 27321                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 27322                           
 27323                           ; BSR set to: 0
 27324  01182C  C099  FFD9         	movff	i2printf@ap,fsr2l
 27325  011830  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 27326  011834  CFDE F08A          	movff	postinc2,??i2_printf
 27327  011838  CFDD F08B          	movff	postdec2,??i2_printf+1
 27328  01183C  C08A  F0A1         	movff	??i2_printf,i2printf@val
 27329  011840  C08B  F0A2         	movff	??i2_printf+1,i2printf@val+1
 27330  011844  6BA3               	clrf	(i2printf@val+2)& (0+255),b
 27331  011846  6BA4               	clrf	(i2printf@val+3)& (0+255),b
 27332                           
 27333                           ; BSR set to: 0
 27334  011848  0E02               	movlw	2
 27335  01184A  2799               	addwf	i2printf@ap& (0+255),f,b
 27336  01184C  0E00               	movlw	0
 27337  01184E  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 27338  011850                     i2l1457:
 27339                           
 27340                           ; BSR set to: 0
 27341                           ;doprnt.c: 1287: }
 27342                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 27343                           
 27344                           ; BSR set to: 0
 27345  011850  51AD               	movf	i2printf@prec& (0+255),w,b
 27346  011852  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 27347  011854  A4D8               	btfss	status,2,c
 27348  011856  D04B               	goto	i2l1459
 27349                           
 27350                           ; BSR set to: 0
 27351  011858  51A1               	movf	i2printf@val& (0+255),w,b
 27352  01185A  11A2               	iorwf	(i2printf@val+1)& (0+255),w,b
 27353  01185C  11A3               	iorwf	(i2printf@val+2)& (0+255),w,b
 27354  01185E  11A4               	iorwf	(i2printf@val+3)& (0+255),w,b
 27355  011860  A4D8               	btfss	status,2,c
 27356  011862  D045               	goto	i2l1459
 27357                           
 27358                           ; BSR set to: 0
 27359                           ;doprnt.c: 1291: prec++;
 27360  011864  4BAD               	infsnz	i2printf@prec& (0+255),f,b
 27361  011866  2BAE               	incf	(i2printf@prec+1)& (0+255),f,b
 27362                           
 27363                           ; BSR set to: 0
 27364                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 27365  011868  D042               	goto	i2l1459
 27366  01186A                     
 27367                           ; BSR set to: 0
 27368                           ;doprnt.c: 1302: case 0xC0:
 27369                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 27370                           
 27371                           ; BSR set to: 0
 27372                           
 27373                           ; BSR set to: 0
 27374  01186A  0E01               	movlw	1
 27375  01186C  6FAF               	movwf	i2printf@c& (0+255),b
 27376  01186E                     i2l14488:
 27377                           
 27378                           ; BSR set to: 0
 27379  01186E  0E0A               	movlw	10
 27380  011870  19AF               	xorwf	i2printf@c& (0+255),w,b
 27381  011872  B4D8               	btfsc	status,2,c
 27382  011874  D047               	goto	i2l1465
 27383                           
 27384                           ; BSR set to: 0
 27385                           ;doprnt.c: 1306: if(val < dpowers[c])
 27386                           
 27387                           ; BSR set to: 0
 27388                           
 27389                           ; BSR set to: 0
 27390  011876  51AF               	movf	i2printf@c& (0+255),w,b
 27391  011878  0D04               	mullw	4
 27392  01187A  0E6B               	movlw	low _dpowers
 27393  01187C  24F3               	addwf	prodl,w,c
 27394  01187E  6EF6               	movwf	tblptrl,c
 27395  011880  0EEA               	movlw	high _dpowers
 27396  011882  20F4               	addwfc	prodh,w,c
 27397  011884  6EF7               	movwf	tblptrh,c
 27398  011886                     	if	1	;There are 3 active tblptr bytes
 27399  011886  6AF8               	clrf	tblptru,c
 27400  011888  0E00               	movlw	low (__mediumconst shr (0+16))
 27401  01188A  22F8               	addwfc	tblptru,f,c
 27402  01188C                     	endif
 27403  01188C  0009               	tblrd		*+
 27404  01188E  50F5               	movf	tablat,w,c
 27405  011890  5DA1               	subwf	i2printf@val& (0+255),w,b
 27406  011892  0009               	tblrd		*+
 27407  011894  50F5               	movf	tablat,w,c
 27408  011896  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 27409  011898  0009               	tblrd		*+
 27410  01189A  50F5               	movf	tablat,w,c
 27411  01189C  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 27412  01189E  0009               	tblrd		*+
 27413  0118A0  50F5               	movf	tablat,w,c
 27414  0118A2  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 27415  0118A4  A0D8               	btfss	status,0,c
 27416  0118A6  D02E               	goto	i2l1465
 27417                           
 27418                           ; BSR set to: 0
 27419                           
 27420                           ; BSR set to: 0
 27421                           
 27422                           ; BSR set to: 0
 27423                           ;doprnt.c: 1307: break;
 27424  0118A8  2BAF               	incf	i2printf@c& (0+255),f,b
 27425  0118AA  D7E1               	goto	i2l14488
 27426  0118AC                     
 27427                           ; BSR set to: 0
 27428                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 27429                           
 27430                           ; BSR set to: 0
 27431  0118AC  0E01               	movlw	1
 27432  0118AE  6FAF               	movwf	i2printf@c& (0+255),b
 27433  0118B0                     i2l14502:
 27434                           
 27435                           ; BSR set to: 0
 27436  0118B0  0E08               	movlw	8
 27437  0118B2  19AF               	xorwf	i2printf@c& (0+255),w,b
 27438  0118B4  B4D8               	btfsc	status,2,c
 27439  0118B6  D026               	goto	i2l1465
 27440                           
 27441                           ; BSR set to: 0
 27442                           ;doprnt.c: 1317: if(val < hexpowers[c])
 27443                           
 27444                           ; BSR set to: 0
 27445                           
 27446                           ; BSR set to: 0
 27447  0118B8  51AF               	movf	i2printf@c& (0+255),w,b
 27448  0118BA  0D04               	mullw	4
 27449  0118BC  0E93               	movlw	low _hexpowers
 27450  0118BE  24F3               	addwf	prodl,w,c
 27451  0118C0  6EF6               	movwf	tblptrl,c
 27452  0118C2  0EEA               	movlw	high _hexpowers
 27453  0118C4  20F4               	addwfc	prodh,w,c
 27454  0118C6  6EF7               	movwf	tblptrh,c
 27455  0118C8                     	if	1	;There are 3 active tblptr bytes
 27456  0118C8  6AF8               	clrf	tblptru,c
 27457  0118CA  0E00               	movlw	low (__mediumconst shr (0+16))
 27458  0118CC  22F8               	addwfc	tblptru,f,c
 27459  0118CE                     	endif
 27460  0118CE  0009               	tblrd		*+
 27461  0118D0  50F5               	movf	tablat,w,c
 27462  0118D2  5DA1               	subwf	i2printf@val& (0+255),w,b
 27463  0118D4  0009               	tblrd		*+
 27464  0118D6  50F5               	movf	tablat,w,c
 27465  0118D8  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 27466  0118DA  0009               	tblrd		*+
 27467  0118DC  50F5               	movf	tablat,w,c
 27468  0118DE  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 27469  0118E0  0009               	tblrd		*+
 27470  0118E2  50F5               	movf	tablat,w,c
 27471  0118E4  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 27472  0118E6  A0D8               	btfss	status,0,c
 27473  0118E8  D00D               	goto	i2l1465
 27474                           
 27475                           ; BSR set to: 0
 27476                           
 27477                           ; BSR set to: 0
 27478                           
 27479                           ; BSR set to: 0
 27480                           ;doprnt.c: 1318: break;
 27481  0118EA  2BAF               	incf	i2printf@c& (0+255),f,b
 27482  0118EC  D7E1               	goto	i2l14502
 27483  0118EE                     i2l1459:
 27484                           
 27485                           ; BSR set to: 0
 27486                           
 27487                           ; BSR set to: 0
 27488  0118EE  51A9               	movf	i2printf@flag& (0+255),w,b
 27489  0118F0  0BC0               	andlw	192
 27490                           
 27491                           ; Switch size 1, requested type "space"
 27492                           ; Number of cases is 3, Range of values is 0 to 192
 27493                           ; switch strategies available:
 27494                           ; Name         Instructions Cycles
 27495                           ; simple_byte           10     6 (average)
 27496                           ;	Chosen strategy is simple_byte
 27497  0118F2  0A00               	xorlw	0	; case 0
 27498  0118F4  B4D8               	btfsc	status,2,c
 27499  0118F6  D7B9               	goto	i2l1460
 27500  0118F8  0A80               	xorlw	128	; case 128
 27501  0118FA  B4D8               	btfsc	status,2,c
 27502  0118FC  D7D7               	goto	i2l1466
 27503  0118FE  0A40               	xorlw	64	; case 192
 27504  011900  B4D8               	btfsc	status,2,c
 27505  011902  D7B3               	goto	i2l1460
 27506  011904                     i2l1465:
 27507                           
 27508                           ; BSR set to: 0
 27509                           ;doprnt.c: 1339: if(c < prec)
 27510                           
 27511                           ; BSR set to: 0
 27512  011904  0E80               	movlw	128
 27513  011906  BFAF               	btfsc	i2printf@c& (0+255),7,b
 27514  011908  0E7F               	movlw	127
 27515  01190A  6F8A               	movwf	??i2_printf& (0+255),b
 27516  01190C  51AD               	movf	i2printf@prec& (0+255),w,b
 27517  01190E  5DAF               	subwf	i2printf@c& (0+255),w,b
 27518  011910  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 27519  011912  0A80               	xorlw	128
 27520  011914  598A               	subwfb	??i2_printf& (0+255),w,b
 27521  011916  B0D8               	btfsc	status,0,c
 27522  011918  D003               	goto	i2l1470
 27523                           
 27524                           ; BSR set to: 0
 27525                           ;doprnt.c: 1340: c = prec;
 27526  01191A  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 27527  01191E  D010               	goto	i2l1472
 27528  011920                     i2l1470:
 27529                           
 27530                           ; BSR set to: 0
 27531                           ;doprnt.c: 1341: else if(prec < c)
 27532                           
 27533                           ; BSR set to: 0
 27534  011920  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 27535  011922  0A80               	xorlw	128
 27536  011924  6F8A               	movwf	??i2_printf& (0+255),b
 27537  011926  51AF               	movf	i2printf@c& (0+255),w,b
 27538  011928  5DAD               	subwf	i2printf@prec& (0+255),w,b
 27539  01192A  0E80               	movlw	128
 27540  01192C  BFAF               	btfsc	i2printf@c& (0+255),7,b
 27541  01192E  0E7F               	movlw	127
 27542  011930  598A               	subwfb	??i2_printf& (0+255),w,b
 27543  011932  B0D8               	btfsc	status,0,c
 27544  011934  D005               	goto	i2l1472
 27545                           
 27546                           ; BSR set to: 0
 27547                           ;doprnt.c: 1342: prec = c;
 27548  011936  51AF               	movf	i2printf@c& (0+255),w,b
 27549  011938  6FAD               	movwf	i2printf@prec& (0+255),b
 27550  01193A  6BAE               	clrf	(i2printf@prec+1)& (0+255),b
 27551  01193C  BFAD               	btfsc	i2printf@prec& (0+255),7,b
 27552  01193E  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 27553  011940                     i2l1472:
 27554                           
 27555                           ; BSR set to: 0
 27556                           ;doprnt.c: 1345: if(width && flag & 0x03)
 27557                           
 27558                           ; BSR set to: 0
 27559                           
 27560                           ; BSR set to: 0
 27561  011940  51AB               	movf	i2printf@width& (0+255),w,b
 27562  011942  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 27563  011944  B4D8               	btfsc	status,2,c
 27564  011946  D00D               	goto	i2l1473
 27565                           
 27566                           ; BSR set to: 0
 27567  011948  0E03               	movlw	3
 27568  01194A  15A9               	andwf	i2printf@flag& (0+255),w,b
 27569  01194C  6F8A               	movwf	??i2_printf& (0+255),b
 27570  01194E  0E00               	movlw	0
 27571  011950  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 27572  011952  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27573  011954  518A               	movf	??i2_printf& (0+255),w,b
 27574  011956  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 27575  011958  B4D8               	btfsc	status,2,c
 27576  01195A  D003               	goto	i2l1473
 27577                           
 27578                           ; BSR set to: 0
 27579                           ;doprnt.c: 1346: width--;
 27580  01195C  07AB               	decf	i2printf@width& (0+255),f,b
 27581  01195E  A0D8               	btfss	status,0,c
 27582  011960  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 27583  011962                     i2l1473:
 27584                           
 27585                           ; BSR set to: 0
 27586                           ;doprnt.c: 1348: if(flag & 0x4000) {
 27587                           
 27588                           ; BSR set to: 0
 27589  011962  ADAA               	btfss	(i2printf@flag+1)& (0+255),6,b
 27590  011964  D013               	goto	i2l1476
 27591                           
 27592                           ; BSR set to: 0
 27593                           ;doprnt.c: 1349: if(width > prec)
 27594  011966  51AB               	movf	i2printf@width& (0+255),w,b
 27595  011968  5DAD               	subwf	i2printf@prec& (0+255),w,b
 27596  01196A  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 27597  01196C  0A80               	xorlw	128
 27598  01196E  6F8A               	movwf	??i2_printf& (0+255),b
 27599  011970  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 27600  011972  0A80               	xorlw	128
 27601  011974  598A               	subwfb	??i2_printf& (0+255),w,b
 27602  011976  B0D8               	btfsc	status,0,c
 27603  011978  D005               	goto	i2l1475
 27604                           
 27605                           ; BSR set to: 0
 27606                           ;doprnt.c: 1350: width -= prec;
 27607  01197A  51AD               	movf	i2printf@prec& (0+255),w,b
 27608  01197C  5FAB               	subwf	i2printf@width& (0+255),f,b
 27609  01197E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 27610  011980  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 27611  011982  D004               	goto	i2l1476
 27612  011984                     i2l1475:
 27613                           
 27614                           ; BSR set to: 0
 27615                           ;doprnt.c: 1351: else
 27616                           ;doprnt.c: 1352: width = 0;
 27617                           
 27618                           ; BSR set to: 0
 27619  011984  0E00               	movlw	0
 27620  011986  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 27621  011988  0E00               	movlw	0
 27622  01198A  6FAB               	movwf	i2printf@width& (0+255),b
 27623  01198C                     i2l1476:
 27624                           
 27625                           ; BSR set to: 0
 27626                           ;doprnt.c: 1353: }
 27627                           ;doprnt.c: 1381: if(width > c)
 27628                           
 27629                           ; BSR set to: 0
 27630                           
 27631                           ; BSR set to: 0
 27632  01198C  0E80               	movlw	128
 27633  01198E  BFAF               	btfsc	i2printf@c& (0+255),7,b
 27634  011990  0E7F               	movlw	127
 27635  011992  6F8A               	movwf	??i2_printf& (0+255),b
 27636  011994  51AB               	movf	i2printf@width& (0+255),w,b
 27637  011996  5DAF               	subwf	i2printf@c& (0+255),w,b
 27638  011998  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 27639  01199A  0A80               	xorlw	128
 27640  01199C  598A               	subwfb	??i2_printf& (0+255),w,b
 27641  01199E  B0D8               	btfsc	status,0,c
 27642  0119A0  D007               	goto	i2l1477
 27643                           
 27644                           ; BSR set to: 0
 27645                           ;doprnt.c: 1382: width -= c;
 27646  0119A2  51AF               	movf	i2printf@c& (0+255),w,b
 27647  0119A4  5FAB               	subwf	i2printf@width& (0+255),f,b
 27648  0119A6  0E00               	movlw	0
 27649  0119A8  BFAF               	btfsc	i2printf@c& (0+255),7,b
 27650  0119AA  0EFF               	movlw	255
 27651  0119AC  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 27652  0119AE  D004               	goto	i2l1478
 27653  0119B0                     i2l1477:
 27654                           
 27655                           ; BSR set to: 0
 27656                           ;doprnt.c: 1383: else
 27657                           ;doprnt.c: 1384: width = 0;
 27658                           
 27659                           ; BSR set to: 0
 27660  0119B0  0E00               	movlw	0
 27661  0119B2  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 27662  0119B4  0E00               	movlw	0
 27663  0119B6  6FAB               	movwf	i2printf@width& (0+255),b
 27664  0119B8                     i2l1478:
 27665                           
 27666                           ; BSR set to: 0
 27667                           ;doprnt.c: 1387: if(flag & 0x04) {
 27668                           
 27669                           ; BSR set to: 0
 27670  0119B8  A5A9               	btfss	i2printf@flag& (0+255),2,b
 27671  0119BA  D01A               	goto	i2l1479
 27672                           
 27673                           ; BSR set to: 0
 27674                           ;doprnt.c: 1392: if(flag & 0x03)
 27675  0119BC  0E03               	movlw	3
 27676  0119BE  15A9               	andwf	i2printf@flag& (0+255),w,b
 27677  0119C0  6F8A               	movwf	??i2_printf& (0+255),b
 27678  0119C2  0E00               	movlw	0
 27679  0119C4  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 27680  0119C6  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27681  0119C8  518A               	movf	??i2_printf& (0+255),w,b
 27682  0119CA  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 27683  0119CC  B4D8               	btfsc	status,2,c
 27684  0119CE  D003               	goto	i2l1480
 27685                           
 27686                           ; BSR set to: 0
 27687                           ;doprnt.c: 1393: (putch('-') );
 27688  0119D0  0E2D               	movlw	45
 27689  0119D2  EC7C  F0C4         	call	i2_putch
 27690  0119D6                     i2l1480:
 27691                           
 27692                           ;doprnt.c: 1415: if(width)
 27693  0119D6  0100               	movlb	0	; () banked
 27694  0119D8  51AB               	movf	i2printf@width& (0+255),w,b
 27695  0119DA  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 27696  0119DC  B4D8               	btfsc	status,2,c
 27697  0119DE  D0B1               	goto	i2l1489
 27698                           
 27699                           ; BSR set to: 0
 27700                           ;doprnt.c: 1417: (putch('0') );
 27701                           
 27702                           ; BSR set to: 0
 27703                           
 27704                           ;doprnt.c: 1416: do
 27705  0119E0  0E30               	movlw	48
 27706  0119E2  EC7C  F0C4         	call	i2_putch
 27707                           
 27708                           ;doprnt.c: 1418: while(--width);
 27709  0119E6  0100               	movlb	0	; () banked
 27710  0119E8  07AB               	decf	i2printf@width& (0+255),f,b
 27711  0119EA  A0D8               	btfss	status,0,c
 27712  0119EC  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 27713  0119EE  D7F4               	goto	L25
 27714  0119F0                     i2l1479:
 27715                           
 27716                           ; BSR set to: 0
 27717                           ;doprnt.c: 1422: {
 27718                           ;doprnt.c: 1424: if(width
 27719                           ;doprnt.c: 1428: )
 27720                           
 27721                           ; BSR set to: 0
 27722  0119F0  51AB               	movf	i2printf@width& (0+255),w,b
 27723  0119F2  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 27724  0119F4  B4D8               	btfsc	status,2,c
 27725  0119F6  D00B               	goto	i2u1851_40
 27726  0119F8                     i2u1850_40:
 27727                           
 27728                           ; BSR set to: 0
 27729                           ;doprnt.c: 1430: (putch(' ') );
 27730                           
 27731                           ; BSR set to: 0
 27732                           
 27733                           ;doprnt.c: 1429: do
 27734  0119F8  0E20               	movlw	32
 27735  0119FA  EC7C  F0C4         	call	i2_putch
 27736                           
 27737                           ;doprnt.c: 1431: while(--width);
 27738  0119FE  0100               	movlb	0	; () banked
 27739  011A00  07AB               	decf	i2printf@width& (0+255),f,b
 27740  011A02  A0D8               	btfss	status,0,c
 27741  011A04  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 27742  011A06  51AB               	movf	i2printf@width& (0+255),w,b
 27743  011A08  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 27744  011A0A  A4D8               	btfss	status,2,c
 27745  011A0C  D7F5               	goto	i2u1850_40
 27746  011A0E                     i2u1851_40:
 27747                           
 27748                           ; BSR set to: 0
 27749                           ;doprnt.c: 1438: if(flag & 0x03)
 27750                           
 27751                           ; BSR set to: 0
 27752                           
 27753                           ; BSR set to: 0
 27754  011A0E  0E03               	movlw	3
 27755  011A10  15A9               	andwf	i2printf@flag& (0+255),w,b
 27756  011A12  6F8A               	movwf	??i2_printf& (0+255),b
 27757  011A14  0E00               	movlw	0
 27758  011A16  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 27759  011A18  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27760  011A1A  518A               	movf	??i2_printf& (0+255),w,b
 27761  011A1C  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 27762  011A1E  B4D8               	btfsc	status,2,c
 27763  011A20  D090               	goto	i2l1489
 27764                           
 27765                           ; BSR set to: 0
 27766                           ;doprnt.c: 1439: (putch('-') );
 27767  011A22  0E2D               	movlw	45
 27768  011A24  EC7C  F0C4         	call	i2_putch
 27769                           
 27770                           ;doprnt.c: 1469: }
 27771                           ;doprnt.c: 1474: while(prec--) {
 27772  011A28  D08C               	goto	i2l1489
 27773  011A2A                     
 27774                           ;doprnt.c: 1486: case 0xC0:
 27775                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 27776  011A2A  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 27777  011A2E  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 27778  011A32  0100               	movlb	0	; () banked
 27779  011A34  90D8               	bcf	status,0,c
 27780  011A36  378A               	rlcf	??i2_printf& (0+255),f,b
 27781  011A38  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 27782  011A3A  90D8               	bcf	status,0,c
 27783  011A3C  378A               	rlcf	??i2_printf& (0+255),f,b
 27784  011A3E  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 27785  011A40  0E6B               	movlw	low _dpowers
 27786  011A42  258A               	addwf	??i2_printf& (0+255),w,b
 27787  011A44  6EF6               	movwf	tblptrl,c
 27788  011A46  0EEA               	movlw	high _dpowers
 27789  011A48  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 27790  011A4A  6EF7               	movwf	tblptrh,c
 27791  011A4C                     	if	1	;There are 3 active tblptr bytes
 27792  011A4C  6AF8               	clrf	tblptru,c
 27793  011A4E  0E00               	movlw	low (__mediumconst shr (0+16))
 27794  011A50  22F8               	addwfc	tblptru,f,c
 27795  011A52                     	endif
 27796  011A52  0009               	tblrd		*+
 27797  011A54  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 27798  011A58  0009               	tblrd		*+
 27799  011A5A  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 27800  011A5E  0009               	tblrd		*+
 27801  011A60  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 27802  011A64  000A               	tblrd		*-
 27803  011A66  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 27804  011A6A  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 27805  011A6E  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 27806  011A72  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 27807  011A76  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 27808  011A7A  EC15  F0BD         	call	i2___lldiv	;wreg free
 27809  011A7E  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 27810  011A82  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 27811  011A86  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 27812  011A8A  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 27813  011A8E  0E0A               	movlw	10
 27814  011A90  6E12               	movwf	i2___llmod@divisor,c
 27815  011A92  0E00               	movlw	0
 27816  011A94  6E13               	movwf	i2___llmod@divisor+1,c
 27817  011A96  0E00               	movlw	0
 27818  011A98  6E14               	movwf	i2___llmod@divisor+2,c
 27819  011A9A  0E00               	movlw	0
 27820  011A9C  6E15               	movwf	i2___llmod@divisor+3,c
 27821  011A9E  EC16  F0BF         	call	i2___llmod	;wreg free
 27822  011AA2  500E               	movf	?i2___llmod,w,c
 27823  011AA4  0F30               	addlw	48
 27824  011AA6  0100               	movlb	0	; () banked
 27825  011AA8  6FAF               	movwf	i2printf@c& (0+255),b
 27826                           
 27827                           ;doprnt.c: 1491: break;
 27828  011AAA  D048               	goto	i2l1494
 27829  011AAC                     
 27830                           ; BSR set to: 0
 27831                           ;doprnt.c: 1499: {
 27832                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 27833                           
 27834                           ; BSR set to: 0
 27835  011AAC  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 27836  011AB0  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 27837  011AB4  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 27838  011AB8  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 27839  011ABC  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 27840  011AC0  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 27841  011AC4  90D8               	bcf	status,0,c
 27842  011AC6  378A               	rlcf	??i2_printf& (0+255),f,b
 27843  011AC8  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 27844  011ACA  90D8               	bcf	status,0,c
 27845  011ACC  378A               	rlcf	??i2_printf& (0+255),f,b
 27846  011ACE  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 27847  011AD0  0E93               	movlw	low _hexpowers
 27848  011AD2  258A               	addwf	??i2_printf& (0+255),w,b
 27849  011AD4  6EF6               	movwf	tblptrl,c
 27850  011AD6  0EEA               	movlw	high _hexpowers
 27851  011AD8  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 27852  011ADA  6EF7               	movwf	tblptrh,c
 27853  011ADC                     	if	1	;There are 3 active tblptr bytes
 27854  011ADC  6AF8               	clrf	tblptru,c
 27855  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 27856  011AE0  22F8               	addwfc	tblptru,f,c
 27857  011AE2                     	endif
 27858  011AE2  0009               	tblrd		*+
 27859  011AE4  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 27860  011AE8  0009               	tblrd		*+
 27861  011AEA  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 27862  011AEE  0009               	tblrd		*+
 27863  011AF0  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 27864  011AF4  000A               	tblrd		*-
 27865  011AF6  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 27866  011AFA  EC15  F0BD         	call	i2___lldiv	;wreg free
 27867  011AFE  5001               	movf	?i2___lldiv,w,c
 27868  011B00  0B0F               	andlw	15
 27869  011B02  0100               	movlb	0	; () banked
 27870  011B04  6F94               	movwf	i2printf@idx& (0+255),b
 27871                           
 27872                           ; BSR set to: 0
 27873                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 27874  011B06  5194               	movf	i2printf@idx& (0+255),w,b
 27875  011B08  0D01               	mullw	1
 27876  011B0A  0ECC               	movlw	low STR_141
 27877  011B0C  24F3               	addwf	prodl,w,c
 27878  011B0E  6EF6               	movwf	tblptrl,c
 27879  011B10  0EFD               	movlw	high STR_141
 27880  011B12  20F4               	addwfc	prodh,w,c
 27881  011B14  6EF7               	movwf	tblptrh,c
 27882  011B16                     	if	1	;There are 3 active tblptr bytes
 27883  011B16  6AF8               	clrf	tblptru,c
 27884  011B18  0E00               	movlw	low (__mediumconst shr (0+16))
 27885  011B1A  22F8               	addwfc	tblptru,f,c
 27886  011B1C                     	endif
 27887  011B1C  0008               	tblrd		*
 27888  011B1E  CFF5 F0AF          	movff	tablat,i2printf@c
 27889                           
 27890                           ; BSR set to: 0
 27891                           ;doprnt.c: 1523: }
 27892                           
 27893                           ;doprnt.c: 1508: }
 27894                           ;doprnt.c: 1510: break;
 27895  011B22  D00C               	goto	i2l1494
 27896  011B24                     i2l14576:
 27897  011B24  0100               	movlb	0	; () banked
 27898  011B26  51A9               	movf	i2printf@flag& (0+255),w,b
 27899  011B28  0BC0               	andlw	192
 27900                           
 27901                           ; Switch size 1, requested type "space"
 27902                           ; Number of cases is 3, Range of values is 0 to 192
 27903                           ; switch strategies available:
 27904                           ; Name         Instructions Cycles
 27905                           ; simple_byte           10     6 (average)
 27906                           ;	Chosen strategy is simple_byte
 27907  011B2A  0A00               	xorlw	0	; case 0
 27908  011B2C  B4D8               	btfsc	status,2,c
 27909  011B2E  D77D               	goto	i2l1492
 27910  011B30  0A80               	xorlw	128	; case 128
 27911  011B32  B4D8               	btfsc	status,2,c
 27912  011B34  D7BB               	goto	i2l1495
 27913  011B36  0A40               	xorlw	64	; case 192
 27914  011B38  B4D8               	btfsc	status,2,c
 27915  011B3A  D777               	goto	i2l1492
 27916  011B3C                     i2l1494:
 27917                           
 27918                           ; BSR set to: 0
 27919                           ;doprnt.c: 1524: (putch(c) );
 27920                           
 27921                           ; BSR set to: 0
 27922  011B3C  51AF               	movf	i2printf@c& (0+255),w,b
 27923  011B3E  EC7C  F0C4         	call	i2_putch
 27924  011B42                     i2l1489:
 27925  011B42  0100               	movlb	0	; () banked
 27926  011B44  07AD               	decf	i2printf@prec& (0+255),f,b
 27927  011B46  A0D8               	btfss	status,0,c
 27928  011B48  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 27929  011B4A  29AD               	incf	i2printf@prec& (0+255),w,b
 27930  011B4C  E1EB               	bnz	i2l14576
 27931  011B4E  29AE               	incf	(i2printf@prec+1)& (0+255),w,b
 27932  011B50  A4D8               	btfss	status,2,c
 27933  011B52  D7E8               	goto	i2l1491
 27934  011B54                     i2u1853_40:
 27935                           
 27936                           ; BSR set to: 0
 27937                           
 27938                           ; BSR set to: 0
 27939  011B54  0100               	movlb	0	; () banked
 27940  011B56  5188               	movf	i2printf@f& (0+255),w,b
 27941  011B58  6F8A               	movwf	??i2_printf& (0+255),b
 27942  011B5A  5189               	movf	(i2printf@f+1)& (0+255),w,b
 27943  011B5C  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27944  011B5E  4B88               	infsnz	i2printf@f& (0+255),f,b
 27945  011B60  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 27946  011B62  C08A  FFF6         	movff	??i2_printf,tblptrl
 27947  011B66  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 27948  011B6A  0E00               	movlw	low (__mediumconst shr (0+16))
 27949  011B6C  6EF8               	movwf	tblptru,c
 27950  011B6E  0E0D               	movlw	(high __ramtop+-1)
 27951  011B70  64F7               	cpfsgt	tblptrh,c
 27952  011B72  D003               	bra	i2u1854_47
 27953  011B74  0008               	tblrd		*
 27954  011B76  50F5               	movf	tablat,w,c
 27955  011B78  D005               	bra	i2u1854_40
 27956  011B7A                     i2u1854_47:
 27957  011B7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 27958  011B7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 27959  011B82  50EF               	movf	indf0,w,c
 27960  011B84                     i2u1854_40:
 27961  011B84  0100               	movlb	0	; () banked
 27962  011B86  6FAF               	movwf	i2printf@c& (0+255),b
 27963  011B88  51AF               	movf	i2printf@c& (0+255),w,b
 27964  011B8A  B4D8               	btfsc	status,2,c
 27965  011B8C  0012               	return	
 27966  011B8E  EFEE  F086         	goto	i2l1363
 27967  011B92                     __end_ofi2_printf:
 27968                           	opt stack 0
 27969                           tosu	equ	0xFFF
 27970                           tosh	equ	0xFFE
 27971                           tosl	equ	0xFFD
 27972                           pclatu	equ	0xFFB
 27973                           pclath	equ	0xFFA
 27974                           tblptru	equ	0xFF8
 27975                           tblptrh	equ	0xFF7
 27976                           tblptrl	equ	0xFF6
 27977                           tablat	equ	0xFF5
 27978                           prodh	equ	0xFF4
 27979                           prodl	equ	0xFF3
 27980                           intcon	equ	0xFF2
 27981                           indf0	equ	0xFEF
 27982                           postinc0	equ	0xFEE
 27983                           fsr0h	equ	0xFEA
 27984                           fsr0l	equ	0xFE9
 27985                           wreg	equ	0xFE8
 27986                           indf1	equ	0xFE7
 27987                           postdec1	equ	0xFE5
 27988                           plusw1	equ	0xFE3
 27989                           fsr1h	equ	0xFE2
 27990                           fsr1l	equ	0xFE1
 27991                           bsr	equ	0xFE0
 27992                           indf2	equ	0xFDF
 27993                           postinc2	equ	0xFDE
 27994                           postdec2	equ	0xFDD
 27995                           plusw2	equ	0xFDB
 27996                           fsr2h	equ	0xFDA
 27997                           fsr2l	equ	0xFD9
 27998                           status	equ	0xFD8
 27999                           
 28000 ;; *************** function i2_scale *****************
 28001 ;; Defined at:
 28002 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 28003 ;; Parameters:    Size  Location     Type
 28004 ;;  scl             1    wreg     char 
 28005 ;; Auto vars:     Size  Location     Type
 28006 ;;  scl             1   80[COMRAM] char 
 28007 ;; Return value:  Size  Location     Type
 28008 ;;                  4   72[COMRAM] char 
 28009 ;; Registers used:
 28010 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28011 ;; Tracked objects:
 28012 ;;		On entry : 0/0
 28013 ;;		On exit  : 0/0
 28014 ;;		Unchanged: 0/0
 28015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28017 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28019 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28020 ;;Total ram usage:        9 bytes
 28021 ;; Hardware stack levels used:    1
 28022 ;; Hardware stack levels required when called:    1
 28023 ;; This function calls:
 28024 ;;		i2___awdiv
 28025 ;;		i2___awmod
 28026 ;;		i2___flmul
 28027 ;; This function is called by:
 28028 ;;		i2_printf
 28029 ;; This function uses a non-reentrant model
 28030 ;;
 28031                           
 28032                           	psect	text86
 28033  0137B6                     __ptext86:
 28034                           	opt stack 0
 28035  0137B6                     i2_scale:
 28036                           	opt stack 15
 28037                           
 28038                           ; BSR set to: 0
 28039                           ;incstack = 0
 28040                           ;i2scale@scl stored from wreg
 28041  0137B6  6E51               	movwf	i2scale@scl,c
 28042                           
 28043                           ;doprnt.c: 428: if(scl < 0) {
 28044  0137B8  AE51               	btfss	i2scale@scl,7,c
 28045  0137BA  D11F               	goto	i2l1352
 28046                           
 28047                           ;doprnt.c: 429: scl = -scl;
 28048  0137BC  6C51               	negf	i2scale@scl,c
 28049                           
 28050                           ;doprnt.c: 430: if(scl>=110)
 28051  0137BE  5051               	movf	i2scale@scl,w,c
 28052  0137C0  0A80               	xorlw	128
 28053  0137C2  0F12               	addlw	-238
 28054  0137C4  A0D8               	btfss	status,0,c
 28055  0137C6  D0A1               	goto	i2l1353
 28056                           
 28057                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 28058  0137C8  0E00               	movlw	0
 28059  0137CA  6E0A               	movwf	i2___awdiv@divisor+1,c
 28060  0137CC  0E0A               	movlw	10
 28061  0137CE  6E09               	movwf	i2___awdiv@divisor,c
 28062  0137D0  0E00               	movlw	0
 28063  0137D2  6E04               	movwf	i2___awmod@divisor+1,c
 28064  0137D4  0E64               	movlw	100
 28065  0137D6  6E03               	movwf	i2___awmod@divisor,c
 28066  0137D8  5051               	movf	i2scale@scl,w,c
 28067  0137DA  6E01               	movwf	i2___awmod@dividend,c
 28068  0137DC  6A02               	clrf	i2___awmod@dividend+1,c
 28069  0137DE  BE01               	btfsc	i2___awmod@dividend,7,c
 28070  0137E0  0602               	decf	i2___awmod@dividend+1,f,c
 28071  0137E2  EC0A  F0BE         	call	i2___awmod	;wreg free
 28072  0137E6  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 28073  0137EA  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 28074  0137EE  ECD3  F0BC         	call	i2___awdiv	;wreg free
 28075  0137F2  90D8               	bcf	status,0,c
 28076  0137F4  3607               	rlcf	?i2___awdiv,f,c
 28077  0137F6  3608               	rlcf	?i2___awdiv+1,f,c
 28078  0137F8  90D8               	bcf	status,0,c
 28079  0137FA  3607               	rlcf	?i2___awdiv,f,c
 28080  0137FC  3608               	rlcf	?i2___awdiv+1,f,c
 28081  0137FE  0E24               	movlw	36
 28082  013800  2607               	addwf	?i2___awdiv,f,c
 28083  013802  0E00               	movlw	0
 28084  013804  2208               	addwfc	?i2___awdiv+1,f,c
 28085  013806  0E37               	movlw	low __npowers_
 28086  013808  2407               	addwf	?i2___awdiv,w,c
 28087  01380A  6EF6               	movwf	tblptrl,c
 28088  01380C  0EEA               	movlw	high __npowers_
 28089  01380E  2008               	addwfc	?i2___awdiv+1,w,c
 28090  013810  6EF7               	movwf	tblptrh,c
 28091  013812                     	if	1	;There are 3 active tblptr bytes
 28092  013812  6AF8               	clrf	tblptru,c
 28093  013814  0E00               	movlw	low (__mediumconst shr (0+16))
 28094  013816  22F8               	addwfc	tblptru,f,c
 28095  013818                     	endif
 28096  013818  0009               	tblrd		*+
 28097  01381A  CFF5 F034          	movff	tablat,i2___flmul@a
 28098  01381E  0009               	tblrd		*+
 28099  013820  CFF5 F035          	movff	tablat,i2___flmul@a+1
 28100  013824  0009               	tblrd		*+
 28101  013826  CFF5 F036          	movff	tablat,i2___flmul@a+2
 28102  01382A  000A               	tblrd		*-
 28103  01382C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 28104  013830  0E00               	movlw	0
 28105  013832  6E0A               	movwf	i2___awdiv@divisor+1,c
 28106  013834  0E64               	movlw	100
 28107  013836  6E09               	movwf	i2___awdiv@divisor,c
 28108  013838  5051               	movf	i2scale@scl,w,c
 28109  01383A  6E07               	movwf	i2___awdiv@dividend,c
 28110  01383C  6A08               	clrf	i2___awdiv@dividend+1,c
 28111  01383E  BE07               	btfsc	i2___awdiv@dividend,7,c
 28112  013840  0608               	decf	i2___awdiv@dividend+1,f,c
 28113  013842  ECD3  F0BC         	call	i2___awdiv	;wreg free
 28114  013846  90D8               	bcf	status,0,c
 28115  013848  3607               	rlcf	?i2___awdiv,f,c
 28116  01384A  3608               	rlcf	?i2___awdiv+1,f,c
 28117  01384C  90D8               	bcf	status,0,c
 28118  01384E  3607               	rlcf	?i2___awdiv,f,c
 28119  013850  3608               	rlcf	?i2___awdiv+1,f,c
 28120  013852  0E48               	movlw	72
 28121  013854  2607               	addwf	?i2___awdiv,f,c
 28122  013856  0E00               	movlw	0
 28123  013858  2208               	addwfc	?i2___awdiv+1,f,c
 28124  01385A  0E37               	movlw	low __npowers_
 28125  01385C  2407               	addwf	?i2___awdiv,w,c
 28126  01385E  6EF6               	movwf	tblptrl,c
 28127  013860  0EEA               	movlw	high __npowers_
 28128  013862  2008               	addwfc	?i2___awdiv+1,w,c
 28129  013864  6EF7               	movwf	tblptrh,c
 28130  013866                     	if	1	;There are 3 active tblptr bytes
 28131  013866  6AF8               	clrf	tblptru,c
 28132  013868  0E00               	movlw	low (__mediumconst shr (0+16))
 28133  01386A  22F8               	addwfc	tblptru,f,c
 28134  01386C                     	endif
 28135  01386C  0009               	tblrd		*+
 28136  01386E  CFF5 F030          	movff	tablat,i2___flmul@b
 28137  013872  0009               	tblrd		*+
 28138  013874  CFF5 F031          	movff	tablat,i2___flmul@b+1
 28139  013878  0009               	tblrd		*+
 28140  01387A  CFF5 F032          	movff	tablat,i2___flmul@b+2
 28141  01387E  000A               	tblrd		*-
 28142  013880  CFF5 F033          	movff	tablat,i2___flmul@b+3
 28143  013884  EC78  F0A1         	call	i2___flmul	;wreg free
 28144  013888  C030  F04D         	movff	?i2___flmul,i2_scale$4100
 28145  01388C  C031  F04E         	movff	?i2___flmul+1,i2_scale$4100+1
 28146  013890  C032  F04F         	movff	?i2___flmul+2,i2_scale$4100+2
 28147  013894  C033  F050         	movff	?i2___flmul+3,i2_scale$4100+3
 28148                           
 28149                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 28150  013898  C04D  F030         	movff	i2_scale$4100,i2___flmul@b
 28151  01389C  C04E  F031         	movff	i2_scale$4100+1,i2___flmul@b+1
 28152  0138A0  C04F  F032         	movff	i2_scale$4100+2,i2___flmul@b+2
 28153  0138A4  C050  F033         	movff	i2_scale$4100+3,i2___flmul@b+3
 28154  0138A8  0E00               	movlw	0
 28155  0138AA  6E04               	movwf	i2___awmod@divisor+1,c
 28156  0138AC  0E0A               	movlw	10
 28157  0138AE  6E03               	movwf	i2___awmod@divisor,c
 28158  0138B0  5051               	movf	i2scale@scl,w,c
 28159  0138B2  6E01               	movwf	i2___awmod@dividend,c
 28160  0138B4  6A02               	clrf	i2___awmod@dividend+1,c
 28161  0138B6  BE01               	btfsc	i2___awmod@dividend,7,c
 28162  0138B8  0602               	decf	i2___awmod@dividend+1,f,c
 28163  0138BA  EC0A  F0BE         	call	i2___awmod	;wreg free
 28164  0138BE  90D8               	bcf	status,0,c
 28165  0138C0  3601               	rlcf	?i2___awmod,f,c
 28166  0138C2  3602               	rlcf	?i2___awmod+1,f,c
 28167  0138C4  90D8               	bcf	status,0,c
 28168  0138C6  3601               	rlcf	?i2___awmod,f,c
 28169  0138C8  3602               	rlcf	?i2___awmod+1,f,c
 28170  0138CA  0E37               	movlw	low __npowers_
 28171  0138CC  2401               	addwf	?i2___awmod,w,c
 28172  0138CE  6EF6               	movwf	tblptrl,c
 28173  0138D0  0EEA               	movlw	high __npowers_
 28174  0138D2  2002               	addwfc	?i2___awmod+1,w,c
 28175  0138D4  6EF7               	movwf	tblptrh,c
 28176  0138D6                     	if	1	;There are 3 active tblptr bytes
 28177  0138D6  6AF8               	clrf	tblptru,c
 28178  0138D8  0E00               	movlw	low (__mediumconst shr (0+16))
 28179  0138DA  22F8               	addwfc	tblptru,f,c
 28180  0138DC                     	endif
 28181  0138DC  0009               	tblrd		*+
 28182  0138DE  CFF5 F034          	movff	tablat,i2___flmul@a
 28183  0138E2  0009               	tblrd		*+
 28184  0138E4  CFF5 F035          	movff	tablat,i2___flmul@a+1
 28185  0138E8  0009               	tblrd		*+
 28186  0138EA  CFF5 F036          	movff	tablat,i2___flmul@a+2
 28187  0138EE  000A               	tblrd		*-
 28188  0138F0  CFF5 F037          	movff	tablat,i2___flmul@a+3
 28189  0138F4  EC78  F0A1         	call	i2___flmul	;wreg free
 28190  0138F8  C030  F049         	movff	?i2___flmul,?i2_scale
 28191  0138FC  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 28192  013900  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 28193  013904  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 28194  013908  0012               	return	
 28195  01390A                     i2l1353:
 28196                           
 28197                           ;doprnt.c: 432: else if(scl > 10)
 28198  01390A  5051               	movf	i2scale@scl,w,c
 28199  01390C  0A80               	xorlw	128
 28200  01390E  0F75               	addlw	-139
 28201  013910  A0D8               	btfss	status,0,c
 28202  013912  D05B               	goto	i2l1356
 28203                           
 28204                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 28205  013914  0E00               	movlw	0
 28206  013916  6E0A               	movwf	i2___awdiv@divisor+1,c
 28207  013918  0E0A               	movlw	10
 28208  01391A  6E09               	movwf	i2___awdiv@divisor,c
 28209  01391C  5051               	movf	i2scale@scl,w,c
 28210  01391E  6E07               	movwf	i2___awdiv@dividend,c
 28211  013920  6A08               	clrf	i2___awdiv@dividend+1,c
 28212  013922  BE07               	btfsc	i2___awdiv@dividend,7,c
 28213  013924  0608               	decf	i2___awdiv@dividend+1,f,c
 28214  013926  ECD3  F0BC         	call	i2___awdiv	;wreg free
 28215  01392A  90D8               	bcf	status,0,c
 28216  01392C  3607               	rlcf	?i2___awdiv,f,c
 28217  01392E  3608               	rlcf	?i2___awdiv+1,f,c
 28218  013930  90D8               	bcf	status,0,c
 28219  013932  3607               	rlcf	?i2___awdiv,f,c
 28220  013934  3608               	rlcf	?i2___awdiv+1,f,c
 28221  013936  0E24               	movlw	36
 28222  013938  2607               	addwf	?i2___awdiv,f,c
 28223  01393A  0E00               	movlw	0
 28224  01393C  2208               	addwfc	?i2___awdiv+1,f,c
 28225  01393E  0E37               	movlw	low __npowers_
 28226  013940  2407               	addwf	?i2___awdiv,w,c
 28227  013942  6EF6               	movwf	tblptrl,c
 28228  013944  0EEA               	movlw	high __npowers_
 28229  013946  2008               	addwfc	?i2___awdiv+1,w,c
 28230  013948  6EF7               	movwf	tblptrh,c
 28231  01394A                     	if	1	;There are 3 active tblptr bytes
 28232  01394A  6AF8               	clrf	tblptru,c
 28233  01394C  0E00               	movlw	low (__mediumconst shr (0+16))
 28234  01394E  22F8               	addwfc	tblptru,f,c
 28235  013950                     	endif
 28236  013950  0009               	tblrd		*+
 28237  013952  CFF5 F030          	movff	tablat,i2___flmul@b
 28238  013956  0009               	tblrd		*+
 28239  013958  CFF5 F031          	movff	tablat,i2___flmul@b+1
 28240  01395C  0009               	tblrd		*+
 28241  01395E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 28242  013962  000A               	tblrd		*-
 28243  013964  CFF5 F033          	movff	tablat,i2___flmul@b+3
 28244  013968  0E00               	movlw	0
 28245  01396A  6E04               	movwf	i2___awmod@divisor+1,c
 28246  01396C  0E0A               	movlw	10
 28247  01396E  6E03               	movwf	i2___awmod@divisor,c
 28248  013970  5051               	movf	i2scale@scl,w,c
 28249  013972  6E01               	movwf	i2___awmod@dividend,c
 28250  013974  6A02               	clrf	i2___awmod@dividend+1,c
 28251  013976  BE01               	btfsc	i2___awmod@dividend,7,c
 28252  013978  0602               	decf	i2___awmod@dividend+1,f,c
 28253  01397A  EC0A  F0BE         	call	i2___awmod	;wreg free
 28254  01397E  90D8               	bcf	status,0,c
 28255  013980  3601               	rlcf	?i2___awmod,f,c
 28256  013982  3602               	rlcf	?i2___awmod+1,f,c
 28257  013984  90D8               	bcf	status,0,c
 28258  013986  3601               	rlcf	?i2___awmod,f,c
 28259  013988  3602               	rlcf	?i2___awmod+1,f,c
 28260  01398A  0E37               	movlw	low __npowers_
 28261  01398C  2401               	addwf	?i2___awmod,w,c
 28262  01398E  6EF6               	movwf	tblptrl,c
 28263  013990  0EEA               	movlw	high __npowers_
 28264  013992  2002               	addwfc	?i2___awmod+1,w,c
 28265  013994  6EF7               	movwf	tblptrh,c
 28266  013996                     	if	1	;There are 3 active tblptr bytes
 28267  013996  6AF8               	clrf	tblptru,c
 28268  013998  0E00               	movlw	low (__mediumconst shr (0+16))
 28269  01399A  22F8               	addwfc	tblptru,f,c
 28270  01399C                     	endif
 28271  01399C  0009               	tblrd		*+
 28272  01399E  CFF5 F034          	movff	tablat,i2___flmul@a
 28273  0139A2  0009               	tblrd		*+
 28274  0139A4  CFF5 F035          	movff	tablat,i2___flmul@a+1
 28275  0139A8  0009               	tblrd		*+
 28276  0139AA  CFF5 F036          	movff	tablat,i2___flmul@a+2
 28277  0139AE  000A               	tblrd		*-
 28278  0139B0  CFF5 F037          	movff	tablat,i2___flmul@a+3
 28279  0139B4  EC78  F0A1         	call	i2___flmul	;wreg free
 28280  0139B8  C030  F049         	movff	?i2___flmul,?i2_scale
 28281  0139BC  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 28282  0139C0  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 28283  0139C4  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 28284  0139C8  0012               	return	
 28285  0139CA                     i2l1356:
 28286                           
 28287                           ;doprnt.c: 434: return _npowers_[scl];
 28288  0139CA  5051               	movf	i2scale@scl,w,c
 28289  0139CC  0D04               	mullw	4
 28290  0139CE  0E37               	movlw	low __npowers_
 28291  0139D0  24F3               	addwf	prodl,w,c
 28292  0139D2  6EF6               	movwf	tblptrl,c
 28293  0139D4  0EEA               	movlw	high __npowers_
 28294  0139D6  20F4               	addwfc	prodh,w,c
 28295  0139D8  6EF7               	movwf	tblptrh,c
 28296  0139DA                     	if	1	;There are 3 active tblptr bytes
 28297  0139DA  6AF8               	clrf	tblptru,c
 28298  0139DC  0E00               	movlw	low (__mediumconst shr (0+16))
 28299  0139DE  22F8               	addwfc	tblptru,f,c
 28300  0139E0                     	endif
 28301  0139E0  0009               	tblrd		*+
 28302  0139E2  CFF5 F049          	movff	tablat,?i2_scale
 28303  0139E6  0009               	tblrd		*+
 28304  0139E8  CFF5 F04A          	movff	tablat,?i2_scale+1
 28305  0139EC  0009               	tblrd		*+
 28306  0139EE  CFF5 F04B          	movff	tablat,?i2_scale+2
 28307  0139F2  000A               	tblrd		*-
 28308  0139F4  CFF5 F04C          	movff	tablat,?i2_scale+3
 28309  0139F8  0012               	return	
 28310  0139FA                     i2l1352:
 28311                           
 28312                           ;doprnt.c: 435: }
 28313                           ;doprnt.c: 436: if(scl>=110)
 28314  0139FA  5051               	movf	i2scale@scl,w,c
 28315  0139FC  0A80               	xorlw	128
 28316  0139FE  0F12               	addlw	-238
 28317  013A00  A0D8               	btfss	status,0,c
 28318  013A02  D0A1               	goto	i2l1357
 28319                           
 28320                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 28321  013A04  0E00               	movlw	0
 28322  013A06  6E0A               	movwf	i2___awdiv@divisor+1,c
 28323  013A08  0E0A               	movlw	10
 28324  013A0A  6E09               	movwf	i2___awdiv@divisor,c
 28325  013A0C  0E00               	movlw	0
 28326  013A0E  6E04               	movwf	i2___awmod@divisor+1,c
 28327  013A10  0E64               	movlw	100
 28328  013A12  6E03               	movwf	i2___awmod@divisor,c
 28329  013A14  5051               	movf	i2scale@scl,w,c
 28330  013A16  6E01               	movwf	i2___awmod@dividend,c
 28331  013A18  6A02               	clrf	i2___awmod@dividend+1,c
 28332  013A1A  BE01               	btfsc	i2___awmod@dividend,7,c
 28333  013A1C  0602               	decf	i2___awmod@dividend+1,f,c
 28334  013A1E  EC0A  F0BE         	call	i2___awmod	;wreg free
 28335  013A22  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 28336  013A26  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 28337  013A2A  ECD3  F0BC         	call	i2___awdiv	;wreg free
 28338  013A2E  90D8               	bcf	status,0,c
 28339  013A30  3607               	rlcf	?i2___awdiv,f,c
 28340  013A32  3608               	rlcf	?i2___awdiv+1,f,c
 28341  013A34  90D8               	bcf	status,0,c
 28342  013A36  3607               	rlcf	?i2___awdiv,f,c
 28343  013A38  3608               	rlcf	?i2___awdiv+1,f,c
 28344  013A3A  0E24               	movlw	36
 28345  013A3C  2607               	addwf	?i2___awdiv,f,c
 28346  013A3E  0E00               	movlw	0
 28347  013A40  2208               	addwfc	?i2___awdiv+1,f,c
 28348  013A42  0E03               	movlw	low __powers_
 28349  013A44  2407               	addwf	?i2___awdiv,w,c
 28350  013A46  6EF6               	movwf	tblptrl,c
 28351  013A48  0EEA               	movlw	high __powers_
 28352  013A4A  2008               	addwfc	?i2___awdiv+1,w,c
 28353  013A4C  6EF7               	movwf	tblptrh,c
 28354  013A4E                     	if	1	;There are 3 active tblptr bytes
 28355  013A4E  6AF8               	clrf	tblptru,c
 28356  013A50  0E00               	movlw	low (__mediumconst shr (0+16))
 28357  013A52  22F8               	addwfc	tblptru,f,c
 28358  013A54                     	endif
 28359  013A54  0009               	tblrd		*+
 28360  013A56  CFF5 F034          	movff	tablat,i2___flmul@a
 28361  013A5A  0009               	tblrd		*+
 28362  013A5C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 28363  013A60  0009               	tblrd		*+
 28364  013A62  CFF5 F036          	movff	tablat,i2___flmul@a+2
 28365  013A66  000A               	tblrd		*-
 28366  013A68  CFF5 F037          	movff	tablat,i2___flmul@a+3
 28367  013A6C  0E00               	movlw	0
 28368  013A6E  6E0A               	movwf	i2___awdiv@divisor+1,c
 28369  013A70  0E64               	movlw	100
 28370  013A72  6E09               	movwf	i2___awdiv@divisor,c
 28371  013A74  5051               	movf	i2scale@scl,w,c
 28372  013A76  6E07               	movwf	i2___awdiv@dividend,c
 28373  013A78  6A08               	clrf	i2___awdiv@dividend+1,c
 28374  013A7A  BE07               	btfsc	i2___awdiv@dividend,7,c
 28375  013A7C  0608               	decf	i2___awdiv@dividend+1,f,c
 28376  013A7E  ECD3  F0BC         	call	i2___awdiv	;wreg free
 28377  013A82  90D8               	bcf	status,0,c
 28378  013A84  3607               	rlcf	?i2___awdiv,f,c
 28379  013A86  3608               	rlcf	?i2___awdiv+1,f,c
 28380  013A88  90D8               	bcf	status,0,c
 28381  013A8A  3607               	rlcf	?i2___awdiv,f,c
 28382  013A8C  3608               	rlcf	?i2___awdiv+1,f,c
 28383  013A8E  0E48               	movlw	72
 28384  013A90  2607               	addwf	?i2___awdiv,f,c
 28385  013A92  0E00               	movlw	0
 28386  013A94  2208               	addwfc	?i2___awdiv+1,f,c
 28387  013A96  0E03               	movlw	low __powers_
 28388  013A98  2407               	addwf	?i2___awdiv,w,c
 28389  013A9A  6EF6               	movwf	tblptrl,c
 28390  013A9C  0EEA               	movlw	high __powers_
 28391  013A9E  2008               	addwfc	?i2___awdiv+1,w,c
 28392  013AA0  6EF7               	movwf	tblptrh,c
 28393  013AA2                     	if	1	;There are 3 active tblptr bytes
 28394  013AA2  6AF8               	clrf	tblptru,c
 28395  013AA4  0E00               	movlw	low (__mediumconst shr (0+16))
 28396  013AA6  22F8               	addwfc	tblptru,f,c
 28397  013AA8                     	endif
 28398  013AA8  0009               	tblrd		*+
 28399  013AAA  CFF5 F030          	movff	tablat,i2___flmul@b
 28400  013AAE  0009               	tblrd		*+
 28401  013AB0  CFF5 F031          	movff	tablat,i2___flmul@b+1
 28402  013AB4  0009               	tblrd		*+
 28403  013AB6  CFF5 F032          	movff	tablat,i2___flmul@b+2
 28404  013ABA  000A               	tblrd		*-
 28405  013ABC  CFF5 F033          	movff	tablat,i2___flmul@b+3
 28406  013AC0  EC78  F0A1         	call	i2___flmul	;wreg free
 28407  013AC4  C030  F04D         	movff	?i2___flmul,i2_scale$4100
 28408  013AC8  C031  F04E         	movff	?i2___flmul+1,i2_scale$4100+1
 28409  013ACC  C032  F04F         	movff	?i2___flmul+2,i2_scale$4100+2
 28410  013AD0  C033  F050         	movff	?i2___flmul+3,i2_scale$4100+3
 28411                           
 28412                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 28413  013AD4  C04D  F030         	movff	i2_scale$4100,i2___flmul@b
 28414  013AD8  C04E  F031         	movff	i2_scale$4100+1,i2___flmul@b+1
 28415  013ADC  C04F  F032         	movff	i2_scale$4100+2,i2___flmul@b+2
 28416  013AE0  C050  F033         	movff	i2_scale$4100+3,i2___flmul@b+3
 28417  013AE4  0E00               	movlw	0
 28418  013AE6  6E04               	movwf	i2___awmod@divisor+1,c
 28419  013AE8  0E0A               	movlw	10
 28420  013AEA  6E03               	movwf	i2___awmod@divisor,c
 28421  013AEC  5051               	movf	i2scale@scl,w,c
 28422  013AEE  6E01               	movwf	i2___awmod@dividend,c
 28423  013AF0  6A02               	clrf	i2___awmod@dividend+1,c
 28424  013AF2  BE01               	btfsc	i2___awmod@dividend,7,c
 28425  013AF4  0602               	decf	i2___awmod@dividend+1,f,c
 28426  013AF6  EC0A  F0BE         	call	i2___awmod	;wreg free
 28427  013AFA  90D8               	bcf	status,0,c
 28428  013AFC  3601               	rlcf	?i2___awmod,f,c
 28429  013AFE  3602               	rlcf	?i2___awmod+1,f,c
 28430  013B00  90D8               	bcf	status,0,c
 28431  013B02  3601               	rlcf	?i2___awmod,f,c
 28432  013B04  3602               	rlcf	?i2___awmod+1,f,c
 28433  013B06  0E03               	movlw	low __powers_
 28434  013B08  2401               	addwf	?i2___awmod,w,c
 28435  013B0A  6EF6               	movwf	tblptrl,c
 28436  013B0C  0EEA               	movlw	high __powers_
 28437  013B0E  2002               	addwfc	?i2___awmod+1,w,c
 28438  013B10  6EF7               	movwf	tblptrh,c
 28439  013B12                     	if	1	;There are 3 active tblptr bytes
 28440  013B12  6AF8               	clrf	tblptru,c
 28441  013B14  0E00               	movlw	low (__mediumconst shr (0+16))
 28442  013B16  22F8               	addwfc	tblptru,f,c
 28443  013B18                     	endif
 28444  013B18  0009               	tblrd		*+
 28445  013B1A  CFF5 F034          	movff	tablat,i2___flmul@a
 28446  013B1E  0009               	tblrd		*+
 28447  013B20  CFF5 F035          	movff	tablat,i2___flmul@a+1
 28448  013B24  0009               	tblrd		*+
 28449  013B26  CFF5 F036          	movff	tablat,i2___flmul@a+2
 28450  013B2A  000A               	tblrd		*-
 28451  013B2C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 28452  013B30  EC78  F0A1         	call	i2___flmul	;wreg free
 28453  013B34  C030  F049         	movff	?i2___flmul,?i2_scale
 28454  013B38  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 28455  013B3C  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 28456  013B40  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 28457  013B44  0012               	return	
 28458  013B46                     i2l1357:
 28459                           
 28460                           ;doprnt.c: 438: else if(scl > 10)
 28461  013B46  5051               	movf	i2scale@scl,w,c
 28462  013B48  0A80               	xorlw	128
 28463  013B4A  0F75               	addlw	-139
 28464  013B4C  A0D8               	btfss	status,0,c
 28465  013B4E  D05B               	goto	i2l1359
 28466                           
 28467                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 28468  013B50  0E00               	movlw	0
 28469  013B52  6E0A               	movwf	i2___awdiv@divisor+1,c
 28470  013B54  0E0A               	movlw	10
 28471  013B56  6E09               	movwf	i2___awdiv@divisor,c
 28472  013B58  5051               	movf	i2scale@scl,w,c
 28473  013B5A  6E07               	movwf	i2___awdiv@dividend,c
 28474  013B5C  6A08               	clrf	i2___awdiv@dividend+1,c
 28475  013B5E  BE07               	btfsc	i2___awdiv@dividend,7,c
 28476  013B60  0608               	decf	i2___awdiv@dividend+1,f,c
 28477  013B62  ECD3  F0BC         	call	i2___awdiv	;wreg free
 28478  013B66  90D8               	bcf	status,0,c
 28479  013B68  3607               	rlcf	?i2___awdiv,f,c
 28480  013B6A  3608               	rlcf	?i2___awdiv+1,f,c
 28481  013B6C  90D8               	bcf	status,0,c
 28482  013B6E  3607               	rlcf	?i2___awdiv,f,c
 28483  013B70  3608               	rlcf	?i2___awdiv+1,f,c
 28484  013B72  0E24               	movlw	36
 28485  013B74  2607               	addwf	?i2___awdiv,f,c
 28486  013B76  0E00               	movlw	0
 28487  013B78  2208               	addwfc	?i2___awdiv+1,f,c
 28488  013B7A  0E03               	movlw	low __powers_
 28489  013B7C  2407               	addwf	?i2___awdiv,w,c
 28490  013B7E  6EF6               	movwf	tblptrl,c
 28491  013B80  0EEA               	movlw	high __powers_
 28492  013B82  2008               	addwfc	?i2___awdiv+1,w,c
 28493  013B84  6EF7               	movwf	tblptrh,c
 28494  013B86                     	if	1	;There are 3 active tblptr bytes
 28495  013B86  6AF8               	clrf	tblptru,c
 28496  013B88  0E00               	movlw	low (__mediumconst shr (0+16))
 28497  013B8A  22F8               	addwfc	tblptru,f,c
 28498  013B8C                     	endif
 28499  013B8C  0009               	tblrd		*+
 28500  013B8E  CFF5 F030          	movff	tablat,i2___flmul@b
 28501  013B92  0009               	tblrd		*+
 28502  013B94  CFF5 F031          	movff	tablat,i2___flmul@b+1
 28503  013B98  0009               	tblrd		*+
 28504  013B9A  CFF5 F032          	movff	tablat,i2___flmul@b+2
 28505  013B9E  000A               	tblrd		*-
 28506  013BA0  CFF5 F033          	movff	tablat,i2___flmul@b+3
 28507  013BA4  0E00               	movlw	0
 28508  013BA6  6E04               	movwf	i2___awmod@divisor+1,c
 28509  013BA8  0E0A               	movlw	10
 28510  013BAA  6E03               	movwf	i2___awmod@divisor,c
 28511  013BAC  5051               	movf	i2scale@scl,w,c
 28512  013BAE  6E01               	movwf	i2___awmod@dividend,c
 28513  013BB0  6A02               	clrf	i2___awmod@dividend+1,c
 28514  013BB2  BE01               	btfsc	i2___awmod@dividend,7,c
 28515  013BB4  0602               	decf	i2___awmod@dividend+1,f,c
 28516  013BB6  EC0A  F0BE         	call	i2___awmod	;wreg free
 28517  013BBA  90D8               	bcf	status,0,c
 28518  013BBC  3601               	rlcf	?i2___awmod,f,c
 28519  013BBE  3602               	rlcf	?i2___awmod+1,f,c
 28520  013BC0  90D8               	bcf	status,0,c
 28521  013BC2  3601               	rlcf	?i2___awmod,f,c
 28522  013BC4  3602               	rlcf	?i2___awmod+1,f,c
 28523  013BC6  0E03               	movlw	low __powers_
 28524  013BC8  2401               	addwf	?i2___awmod,w,c
 28525  013BCA  6EF6               	movwf	tblptrl,c
 28526  013BCC  0EEA               	movlw	high __powers_
 28527  013BCE  2002               	addwfc	?i2___awmod+1,w,c
 28528  013BD0  6EF7               	movwf	tblptrh,c
 28529  013BD2                     	if	1	;There are 3 active tblptr bytes
 28530  013BD2  6AF8               	clrf	tblptru,c
 28531  013BD4  0E00               	movlw	low (__mediumconst shr (0+16))
 28532  013BD6  22F8               	addwfc	tblptru,f,c
 28533  013BD8                     	endif
 28534  013BD8  0009               	tblrd		*+
 28535  013BDA  CFF5 F034          	movff	tablat,i2___flmul@a
 28536  013BDE  0009               	tblrd		*+
 28537  013BE0  CFF5 F035          	movff	tablat,i2___flmul@a+1
 28538  013BE4  0009               	tblrd		*+
 28539  013BE6  CFF5 F036          	movff	tablat,i2___flmul@a+2
 28540  013BEA  000A               	tblrd		*-
 28541  013BEC  CFF5 F037          	movff	tablat,i2___flmul@a+3
 28542  013BF0  EC78  F0A1         	call	i2___flmul	;wreg free
 28543  013BF4  C030  F049         	movff	?i2___flmul,?i2_scale
 28544  013BF8  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 28545  013BFC  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 28546  013C00  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 28547  013C04  0012               	return	
 28548  013C06                     i2l1359:
 28549                           
 28550                           ;doprnt.c: 440: return _powers_[scl];
 28551  013C06  5051               	movf	i2scale@scl,w,c
 28552  013C08  0D04               	mullw	4
 28553  013C0A  0E03               	movlw	low __powers_
 28554  013C0C  24F3               	addwf	prodl,w,c
 28555  013C0E  6EF6               	movwf	tblptrl,c
 28556  013C10  0EEA               	movlw	high __powers_
 28557  013C12  20F4               	addwfc	prodh,w,c
 28558  013C14  6EF7               	movwf	tblptrh,c
 28559  013C16                     	if	1	;There are 3 active tblptr bytes
 28560  013C16  6AF8               	clrf	tblptru,c
 28561  013C18  0E00               	movlw	low (__mediumconst shr (0+16))
 28562  013C1A  22F8               	addwfc	tblptru,f,c
 28563  013C1C                     	endif
 28564  013C1C  0009               	tblrd		*+
 28565  013C1E  CFF5 F049          	movff	tablat,?i2_scale
 28566  013C22  0009               	tblrd		*+
 28567  013C24  CFF5 F04A          	movff	tablat,?i2_scale+1
 28568  013C28  0009               	tblrd		*+
 28569  013C2A  CFF5 F04B          	movff	tablat,?i2_scale+2
 28570  013C2E  000A               	tblrd		*-
 28571  013C30  CFF5 F04C          	movff	tablat,?i2_scale+3
 28572  013C34  0012               	return	
 28573  013C36                     __end_ofi2_scale:
 28574                           	opt stack 0
 28575                           tosu	equ	0xFFF
 28576                           tosh	equ	0xFFE
 28577                           tosl	equ	0xFFD
 28578                           pclatu	equ	0xFFB
 28579                           pclath	equ	0xFFA
 28580                           tblptru	equ	0xFF8
 28581                           tblptrh	equ	0xFF7
 28582                           tblptrl	equ	0xFF6
 28583                           tablat	equ	0xFF5
 28584                           prodh	equ	0xFF4
 28585                           prodl	equ	0xFF3
 28586                           intcon	equ	0xFF2
 28587                           indf0	equ	0xFEF
 28588                           postinc0	equ	0xFEE
 28589                           fsr0h	equ	0xFEA
 28590                           fsr0l	equ	0xFE9
 28591                           wreg	equ	0xFE8
 28592                           indf1	equ	0xFE7
 28593                           postdec1	equ	0xFE5
 28594                           plusw1	equ	0xFE3
 28595                           fsr1h	equ	0xFE2
 28596                           fsr1l	equ	0xFE1
 28597                           bsr	equ	0xFE0
 28598                           indf2	equ	0xFDF
 28599                           postinc2	equ	0xFDE
 28600                           postdec2	equ	0xFDD
 28601                           plusw2	equ	0xFDB
 28602                           fsr2h	equ	0xFDA
 28603                           fsr2l	equ	0xFD9
 28604                           status	equ	0xFD8
 28605                           
 28606 ;; *************** function i2_putch *****************
 28607 ;; Defined at:
 28608 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 28609 ;; Parameters:    Size  Location     Type
 28610 ;;  txData          1    wreg     unsigned char 
 28611 ;; Auto vars:     Size  Location     Type
 28612 ;;  txData          1    1[COMRAM] unsigned char 
 28613 ;; Return value:  Size  Location     Type
 28614 ;;                  1    wreg      void 
 28615 ;; Registers used:
 28616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28617 ;; Tracked objects:
 28618 ;;		On entry : 0/0
 28619 ;;		On exit  : 0/0
 28620 ;;		Unchanged: 0/0
 28621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28626 ;;Total ram usage:        1 bytes
 28627 ;; Hardware stack levels used:    1
 28628 ;; Hardware stack levels required when called:    1
 28629 ;; This function calls:
 28630 ;;		i2_EUSART2_Write
 28631 ;; This function is called by:
 28632 ;;		i2_printf
 28633 ;; This function uses a non-reentrant model
 28634 ;;
 28635                           
 28636                           	psect	text87
 28637  0188F8                     __ptext87:
 28638                           	opt stack 0
 28639  0188F8                     i2_putch:
 28640                           	opt stack 15
 28641                           
 28642                           ;incstack = 0
 28643                           ;i2putch@txData stored from wreg
 28644  0188F8  6E02               	movwf	i2putch@txData,c
 28645                           
 28646                           ;eusart2.c: 195: EUSART2_Write(txData);
 28647  0188FA  5002               	movf	i2putch@txData,w,c
 28648  0188FC  ECBE  F0C0         	call	i2_EUSART2_Write
 28649  018900  0012               	return		;funcret
 28650  018902                     __end_ofi2_putch:
 28651                           	opt stack 0
 28652                           tosu	equ	0xFFF
 28653                           tosh	equ	0xFFE
 28654                           tosl	equ	0xFFD
 28655                           pclatu	equ	0xFFB
 28656                           pclath	equ	0xFFA
 28657                           tblptru	equ	0xFF8
 28658                           tblptrh	equ	0xFF7
 28659                           tblptrl	equ	0xFF6
 28660                           tablat	equ	0xFF5
 28661                           prodh	equ	0xFF4
 28662                           prodl	equ	0xFF3
 28663                           intcon	equ	0xFF2
 28664                           indf0	equ	0xFEF
 28665                           postinc0	equ	0xFEE
 28666                           fsr0h	equ	0xFEA
 28667                           fsr0l	equ	0xFE9
 28668                           wreg	equ	0xFE8
 28669                           indf1	equ	0xFE7
 28670                           postdec1	equ	0xFE5
 28671                           plusw1	equ	0xFE3
 28672                           fsr1h	equ	0xFE2
 28673                           fsr1l	equ	0xFE1
 28674                           bsr	equ	0xFE0
 28675                           indf2	equ	0xFDF
 28676                           postinc2	equ	0xFDE
 28677                           postdec2	equ	0xFDD
 28678                           plusw2	equ	0xFDB
 28679                           fsr2h	equ	0xFDA
 28680                           fsr2l	equ	0xFD9
 28681                           status	equ	0xFD8
 28682                           
 28683 ;; *************** function i2_EUSART2_Write *****************
 28684 ;; Defined at:
 28685 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 28686 ;; Parameters:    Size  Location     Type
 28687 ;;  txData          1    wreg     unsigned char 
 28688 ;; Auto vars:     Size  Location     Type
 28689 ;;  txData          1    0[COMRAM] unsigned char 
 28690 ;; Return value:  Size  Location     Type
 28691 ;;                  1    wreg      void 
 28692 ;; Registers used:
 28693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28694 ;; Tracked objects:
 28695 ;;		On entry : 0/0
 28696 ;;		On exit  : 0/0
 28697 ;;		Unchanged: 0/0
 28698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28703 ;;Total ram usage:        1 bytes
 28704 ;; Hardware stack levels used:    1
 28705 ;; This function calls:
 28706 ;;		Nothing
 28707 ;; This function is called by:
 28708 ;;		i2_putch
 28709 ;; This function uses a non-reentrant model
 28710 ;;
 28711                           
 28712                           	psect	text88
 28713  01817C                     __ptext88:
 28714                           	opt stack 0
 28715  01817C                     i2_EUSART2_Write:
 28716                           	opt stack 15
 28717                           
 28718                           ;incstack = 0
 28719                           ;i2EUSART2_Write@txData stored from wreg
 28720  01817C  6E01               	movwf	i2EUSART2_Write@txData,c
 28721                           
 28722                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 28723  01817E  D002               	goto	i2l388
 28724  018180                     i2l389:
 28725                           
 28726                           ; BSR set to: 1
 28727  018180  0004               	clrwdt		;# 
 28728                           
 28729                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 28730  018182  827E               	bsf	3966,1,c	;volatile
 28731  018184                     i2l388:
 28732  018184  0101               	movlb	1	; () banked
 28733  018186  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 28734  018188  B4D8               	btfsc	status,2,c
 28735  01818A  D7FA               	goto	i2l389
 28736                           
 28737                           ; BSR set to: 1
 28738                           ;eusart2.c: 167: }
 28739                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 28740  01818C  927E               	bcf	3966,1,c	;volatile
 28741                           
 28742                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 28743  01818E  010E               	movlb	14	; () banked
 28744  018190  BD2C               	btfsc	44,6,b	;volatile
 28745  018192  D003               	goto	i2l391
 28746                           
 28747                           ; BSR set to: 14
 28748                           ;eusart2.c: 172: {
 28749                           ;eusart2.c: 173: TX2REG = txData;
 28750  018194  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 28751                           
 28752                           ;eusart2.c: 174: }
 28753  018198  D013               	goto	i2l392
 28754  01819A                     i2l391:
 28755                           
 28756                           ; BSR set to: 14
 28757                           ;eusart2.c: 175: else
 28758                           ;eusart2.c: 176: {
 28759                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 28760  01819A  9D2C               	bcf	44,6,b	;volatile
 28761                           
 28762                           ; BSR set to: 14
 28763                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 28764  01819C  0101               	movlb	1	; () banked
 28765  01819E  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 28766  0181A0  0D01               	mullw	1
 28767  0181A2  0E00               	movlw	low _eusart2TxBuffer
 28768  0181A4  24F3               	addwf	prodl,w,c
 28769  0181A6  6ED9               	movwf	fsr2l,c
 28770  0181A8  0E03               	movlw	high _eusart2TxBuffer
 28771  0181AA  20F4               	addwfc	prodh,w,c
 28772  0181AC  6EDA               	movwf	fsr2h,c
 28773  0181AE  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 28774                           
 28775                           ; BSR set to: 1
 28776  0181B2  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 28777                           
 28778                           ; BSR set to: 1
 28779                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 28780  0181B4  0E7F               	movlw	127
 28781  0181B6  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 28782  0181B8  D002               	goto	i2l393
 28783                           
 28784                           ; BSR set to: 1
 28785                           ;eusart2.c: 180: {
 28786                           ;eusart2.c: 181: eusart2TxHead = 0;
 28787  0181BA  0E00               	movlw	0
 28788  0181BC  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 28789  0181BE                     i2l393:
 28790                           
 28791                           ; BSR set to: 1
 28792                           ;eusart2.c: 182: }
 28793                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 28794                           
 28795                           ; BSR set to: 1
 28796  0181BE  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 28797  0181C0                     i2l392:
 28798                           
 28799                           ;eusart2.c: 184: }
 28800                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 28801                           
 28802                           ; BSR set to: 1
 28803  0181C0  010E               	movlb	14	; () banked
 28804  0181C2  8D2C               	bsf	44,6,b	;volatile
 28805                           
 28806                           ; BSR set to: 14
 28807  0181C4  0012               	return		;funcret
 28808  0181C6                     __end_ofi2_EUSART2_Write:
 28809                           	opt stack 0
 28810                           tosu	equ	0xFFF
 28811                           tosh	equ	0xFFE
 28812                           tosl	equ	0xFFD
 28813                           pclatu	equ	0xFFB
 28814                           pclath	equ	0xFFA
 28815                           tblptru	equ	0xFF8
 28816                           tblptrh	equ	0xFF7
 28817                           tblptrl	equ	0xFF6
 28818                           tablat	equ	0xFF5
 28819                           prodh	equ	0xFF4
 28820                           prodl	equ	0xFF3
 28821                           intcon	equ	0xFF2
 28822                           indf0	equ	0xFEF
 28823                           postinc0	equ	0xFEE
 28824                           fsr0h	equ	0xFEA
 28825                           fsr0l	equ	0xFE9
 28826                           wreg	equ	0xFE8
 28827                           indf1	equ	0xFE7
 28828                           postdec1	equ	0xFE5
 28829                           plusw1	equ	0xFE3
 28830                           fsr1h	equ	0xFE2
 28831                           fsr1l	equ	0xFE1
 28832                           bsr	equ	0xFE0
 28833                           indf2	equ	0xFDF
 28834                           postinc2	equ	0xFDE
 28835                           postdec2	equ	0xFDD
 28836                           plusw2	equ	0xFDB
 28837                           fsr2h	equ	0xFDA
 28838                           fsr2l	equ	0xFD9
 28839                           status	equ	0xFD8
 28840                           
 28841 ;; *************** function i2_isdigit *****************
 28842 ;; Defined at:
 28843 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 28844 ;; Parameters:    Size  Location     Type
 28845 ;;  c               1    wreg     unsigned char 
 28846 ;; Auto vars:     Size  Location     Type
 28847 ;;  c               1    2[COMRAM] unsigned char 
 28848 ;; Return value:  Size  Location     Type
 28849 ;;		None               void
 28850 ;; Registers used:
 28851 ;;		wreg, status,2, status,0
 28852 ;; Tracked objects:
 28853 ;;		On entry : 0/0
 28854 ;;		On exit  : 0/0
 28855 ;;		Unchanged: 0/0
 28856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28860 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28861 ;;Total ram usage:        3 bytes
 28862 ;; Hardware stack levels used:    1
 28863 ;; This function calls:
 28864 ;;		Nothing
 28865 ;; This function is called by:
 28866 ;;		i2_printf
 28867 ;; This function uses a non-reentrant model
 28868 ;;
 28869                           
 28870                           	psect	text89
 28871  018750                     __ptext89:
 28872                           	opt stack 0
 28873  018750                     i2_isdigit:
 28874                           	opt stack 16
 28875                           
 28876                           ; BSR set to: 14
 28877                           ;incstack = 0
 28878                           ;i2isdigit@c stored from wreg
 28879  018750  6E03               	movwf	i2isdigit@c,c
 28880  018752  0E00               	movlw	0
 28881  018754  6E02               	movwf	i2_isdigit$3181,c
 28882  018756  0E3A               	movlw	58
 28883  018758  6003               	cpfslt	i2isdigit@c,c
 28884  01875A  D005               	goto	i2l1930
 28885  01875C  0E2F               	movlw	47
 28886  01875E  6403               	cpfsgt	i2isdigit@c,c
 28887  018760  D002               	goto	i2l1930
 28888  018762  0E01               	movlw	1
 28889  018764  6E02               	movwf	i2_isdigit$3181,c
 28890  018766                     i2l1930:
 28891  018766  C002  F001         	movff	i2_isdigit$3181,??i2_isdigit
 28892  01876A  3001               	rrcf	??i2_isdigit,w,c
 28893  01876C  0012               	return	
 28894  01876E                     __end_ofi2_isdigit:
 28895                           	opt stack 0
 28896                           tosu	equ	0xFFF
 28897                           tosh	equ	0xFFE
 28898                           tosl	equ	0xFFD
 28899                           pclatu	equ	0xFFB
 28900                           pclath	equ	0xFFA
 28901                           tblptru	equ	0xFF8
 28902                           tblptrh	equ	0xFF7
 28903                           tblptrl	equ	0xFF6
 28904                           tablat	equ	0xFF5
 28905                           prodh	equ	0xFF4
 28906                           prodl	equ	0xFF3
 28907                           intcon	equ	0xFF2
 28908                           indf0	equ	0xFEF
 28909                           postinc0	equ	0xFEE
 28910                           fsr0h	equ	0xFEA
 28911                           fsr0l	equ	0xFE9
 28912                           wreg	equ	0xFE8
 28913                           indf1	equ	0xFE7
 28914                           postdec1	equ	0xFE5
 28915                           plusw1	equ	0xFE3
 28916                           fsr1h	equ	0xFE2
 28917                           fsr1l	equ	0xFE1
 28918                           bsr	equ	0xFE0
 28919                           indf2	equ	0xFDF
 28920                           postinc2	equ	0xFDE
 28921                           postdec2	equ	0xFDD
 28922                           plusw2	equ	0xFDB
 28923                           fsr2h	equ	0xFDA
 28924                           fsr2l	equ	0xFD9
 28925                           status	equ	0xFD8
 28926                           
 28927 ;; *************** function i2_fround *****************
 28928 ;; Defined at:
 28929 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 28930 ;; Parameters:    Size  Location     Type
 28931 ;;  prec            1    wreg     unsigned char 
 28932 ;; Auto vars:     Size  Location     Type
 28933 ;;  prec            1   84[COMRAM] unsigned char 
 28934 ;; Return value:  Size  Location     Type
 28935 ;;                  4   72[COMRAM] unsigned char 
 28936 ;; Registers used:
 28937 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28938 ;; Tracked objects:
 28939 ;;		On entry : 0/0
 28940 ;;		On exit  : 0/0
 28941 ;;		Unchanged: 0/0
 28942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28944 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28946 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28947 ;;Total ram usage:       13 bytes
 28948 ;; Hardware stack levels used:    1
 28949 ;; Hardware stack levels required when called:    1
 28950 ;; This function calls:
 28951 ;;		i2___awdiv
 28952 ;;		i2___awmod
 28953 ;;		i2___flmul
 28954 ;; This function is called by:
 28955 ;;		i2_printf
 28956 ;; This function uses a non-reentrant model
 28957 ;;
 28958                           
 28959                           	psect	text90
 28960  015DB2                     __ptext90:
 28961                           	opt stack 0
 28962  015DB2                     i2_fround:
 28963                           	opt stack 15
 28964                           
 28965                           ;incstack = 0
 28966                           ;i2fround@prec stored from wreg
 28967  015DB2  6E55               	movwf	i2fround@prec,c
 28968                           
 28969                           ;doprnt.c: 413: if(prec>=110)
 28970  015DB4  0E6D               	movlw	109
 28971  015DB6  6455               	cpfsgt	i2fround@prec,c
 28972  015DB8  D0B5               	goto	i2l1346
 28973                           
 28974                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 28975  015DBA  0E00               	movlw	0
 28976  015DBC  6E0A               	movwf	i2___awdiv@divisor+1,c
 28977  015DBE  0E0A               	movlw	10
 28978  015DC0  6E09               	movwf	i2___awdiv@divisor,c
 28979  015DC2  0E00               	movlw	0
 28980  015DC4  6E04               	movwf	i2___awmod@divisor+1,c
 28981  015DC6  0E64               	movlw	100
 28982  015DC8  6E03               	movwf	i2___awmod@divisor,c
 28983  015DCA  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 28984  015DCE  6A02               	clrf	i2___awmod@dividend+1,c
 28985  015DD0  EC0A  F0BE         	call	i2___awmod	;wreg free
 28986  015DD4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 28987  015DD8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 28988  015DDC  ECD3  F0BC         	call	i2___awdiv	;wreg free
 28989  015DE0  90D8               	bcf	status,0,c
 28990  015DE2  3607               	rlcf	?i2___awdiv,f,c
 28991  015DE4  3608               	rlcf	?i2___awdiv+1,f,c
 28992  015DE6  90D8               	bcf	status,0,c
 28993  015DE8  3607               	rlcf	?i2___awdiv,f,c
 28994  015DEA  3608               	rlcf	?i2___awdiv+1,f,c
 28995  015DEC  0E24               	movlw	36
 28996  015DEE  2607               	addwf	?i2___awdiv,f,c
 28997  015DF0  0E00               	movlw	0
 28998  015DF2  2208               	addwfc	?i2___awdiv+1,f,c
 28999  015DF4  0E37               	movlw	low __npowers_
 29000  015DF6  2407               	addwf	?i2___awdiv,w,c
 29001  015DF8  6EF6               	movwf	tblptrl,c
 29002  015DFA  0EEA               	movlw	high __npowers_
 29003  015DFC  2008               	addwfc	?i2___awdiv+1,w,c
 29004  015DFE  6EF7               	movwf	tblptrh,c
 29005  015E00                     	if	1	;There are 3 active tblptr bytes
 29006  015E00  6AF8               	clrf	tblptru,c
 29007  015E02  0E00               	movlw	low (__mediumconst shr (0+16))
 29008  015E04  22F8               	addwfc	tblptru,f,c
 29009  015E06                     	endif
 29010  015E06  0009               	tblrd		*+
 29011  015E08  CFF5 F034          	movff	tablat,i2___flmul@a
 29012  015E0C  0009               	tblrd		*+
 29013  015E0E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29014  015E12  0009               	tblrd		*+
 29015  015E14  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29016  015E18  000A               	tblrd		*-
 29017  015E1A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29018  015E1E  0E00               	movlw	0
 29019  015E20  6E0A               	movwf	i2___awdiv@divisor+1,c
 29020  015E22  0E64               	movlw	100
 29021  015E24  6E09               	movwf	i2___awdiv@divisor,c
 29022  015E26  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 29023  015E2A  6A08               	clrf	i2___awdiv@dividend+1,c
 29024  015E2C  ECD3  F0BC         	call	i2___awdiv	;wreg free
 29025  015E30  90D8               	bcf	status,0,c
 29026  015E32  3607               	rlcf	?i2___awdiv,f,c
 29027  015E34  3608               	rlcf	?i2___awdiv+1,f,c
 29028  015E36  90D8               	bcf	status,0,c
 29029  015E38  3607               	rlcf	?i2___awdiv,f,c
 29030  015E3A  3608               	rlcf	?i2___awdiv+1,f,c
 29031  015E3C  0E48               	movlw	72
 29032  015E3E  2607               	addwf	?i2___awdiv,f,c
 29033  015E40  0E00               	movlw	0
 29034  015E42  2208               	addwfc	?i2___awdiv+1,f,c
 29035  015E44  0E37               	movlw	low __npowers_
 29036  015E46  2407               	addwf	?i2___awdiv,w,c
 29037  015E48  6EF6               	movwf	tblptrl,c
 29038  015E4A  0EEA               	movlw	high __npowers_
 29039  015E4C  2008               	addwfc	?i2___awdiv+1,w,c
 29040  015E4E  6EF7               	movwf	tblptrh,c
 29041  015E50                     	if	1	;There are 3 active tblptr bytes
 29042  015E50  6AF8               	clrf	tblptru,c
 29043  015E52  0E00               	movlw	low (__mediumconst shr (0+16))
 29044  015E54  22F8               	addwfc	tblptru,f,c
 29045  015E56                     	endif
 29046  015E56  0009               	tblrd		*+
 29047  015E58  CFF5 F030          	movff	tablat,i2___flmul@b
 29048  015E5C  0009               	tblrd		*+
 29049  015E5E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29050  015E62  0009               	tblrd		*+
 29051  015E64  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29052  015E68  000A               	tblrd		*-
 29053  015E6A  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29054  015E6E  EC78  F0A1         	call	i2___flmul	;wreg free
 29055  015E72  C030  F051         	movff	?i2___flmul,i2_fround$4098
 29056  015E76  C031  F052         	movff	?i2___flmul+1,i2_fround$4098+1
 29057  015E7A  C032  F053         	movff	?i2___flmul+2,i2_fround$4098+2
 29058  015E7E  C033  F054         	movff	?i2___flmul+3,i2_fround$4098+3
 29059                           
 29060                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 29061  015E82  0E00               	movlw	0
 29062  015E84  6E04               	movwf	i2___awmod@divisor+1,c
 29063  015E86  0E0A               	movlw	10
 29064  015E88  6E03               	movwf	i2___awmod@divisor,c
 29065  015E8A  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 29066  015E8E  6A02               	clrf	i2___awmod@dividend+1,c
 29067  015E90  EC0A  F0BE         	call	i2___awmod	;wreg free
 29068  015E94  90D8               	bcf	status,0,c
 29069  015E96  3601               	rlcf	?i2___awmod,f,c
 29070  015E98  3602               	rlcf	?i2___awmod+1,f,c
 29071  015E9A  90D8               	bcf	status,0,c
 29072  015E9C  3601               	rlcf	?i2___awmod,f,c
 29073  015E9E  3602               	rlcf	?i2___awmod+1,f,c
 29074  015EA0  0E37               	movlw	low __npowers_
 29075  015EA2  2401               	addwf	?i2___awmod,w,c
 29076  015EA4  6EF6               	movwf	tblptrl,c
 29077  015EA6  0EEA               	movlw	high __npowers_
 29078  015EA8  2002               	addwfc	?i2___awmod+1,w,c
 29079  015EAA  6EF7               	movwf	tblptrh,c
 29080  015EAC                     	if	1	;There are 3 active tblptr bytes
 29081  015EAC  6AF8               	clrf	tblptru,c
 29082  015EAE  0E00               	movlw	low (__mediumconst shr (0+16))
 29083  015EB0  22F8               	addwfc	tblptru,f,c
 29084  015EB2                     	endif
 29085  015EB2  0009               	tblrd		*+
 29086  015EB4  CFF5 F034          	movff	tablat,i2___flmul@a
 29087  015EB8  0009               	tblrd		*+
 29088  015EBA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29089  015EBE  0009               	tblrd		*+
 29090  015EC0  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29091  015EC4  000A               	tblrd		*-
 29092  015EC6  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29093  015ECA  C051  F030         	movff	i2_fround$4098,i2___flmul@b
 29094  015ECE  C052  F031         	movff	i2_fround$4098+1,i2___flmul@b+1
 29095  015ED2  C053  F032         	movff	i2_fround$4098+2,i2___flmul@b+2
 29096  015ED6  C054  F033         	movff	i2_fround$4098+3,i2___flmul@b+3
 29097  015EDA  EC78  F0A1         	call	i2___flmul	;wreg free
 29098  015EDE  C030  F04D         	movff	?i2___flmul,i2_fround$4099
 29099  015EE2  C031  F04E         	movff	?i2___flmul+1,i2_fround$4099+1
 29100  015EE6  C032  F04F         	movff	?i2___flmul+2,i2_fround$4099+2
 29101  015EEA  C033  F050         	movff	?i2___flmul+3,i2_fround$4099+3
 29102                           
 29103                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 29104  015EEE  C04D  F030         	movff	i2_fround$4099,i2___flmul@b
 29105  015EF2  C04E  F031         	movff	i2_fround$4099+1,i2___flmul@b+1
 29106  015EF6  C04F  F032         	movff	i2_fround$4099+2,i2___flmul@b+2
 29107  015EFA  C050  F033         	movff	i2_fround$4099+3,i2___flmul@b+3
 29108  015EFE  0E00               	movlw	0
 29109  015F00  6E34               	movwf	i2___flmul@a,c
 29110  015F02  0E00               	movlw	0
 29111  015F04  6E35               	movwf	i2___flmul@a+1,c
 29112  015F06  0E00               	movlw	0
 29113  015F08  6E36               	movwf	i2___flmul@a+2,c
 29114  015F0A  0E3F               	movlw	63
 29115  015F0C  6E37               	movwf	i2___flmul@a+3,c
 29116  015F0E  EC78  F0A1         	call	i2___flmul	;wreg free
 29117  015F12  C030  F049         	movff	?i2___flmul,?i2_fround
 29118  015F16  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 29119  015F1A  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 29120  015F1E  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 29121  015F22  0012               	return	
 29122  015F24                     i2l1346:
 29123                           
 29124                           ;doprnt.c: 415: else if(prec > 10)
 29125  015F24  0E0A               	movlw	10
 29126  015F26  6455               	cpfsgt	i2fround@prec,c
 29127  015F28  D071               	goto	i2l1349
 29128                           
 29129                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 29130  015F2A  0E00               	movlw	0
 29131  015F2C  6E04               	movwf	i2___awmod@divisor+1,c
 29132  015F2E  0E0A               	movlw	10
 29133  015F30  6E03               	movwf	i2___awmod@divisor,c
 29134  015F32  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 29135  015F36  6A02               	clrf	i2___awmod@dividend+1,c
 29136  015F38  EC0A  F0BE         	call	i2___awmod	;wreg free
 29137  015F3C  90D8               	bcf	status,0,c
 29138  015F3E  3601               	rlcf	?i2___awmod,f,c
 29139  015F40  3602               	rlcf	?i2___awmod+1,f,c
 29140  015F42  90D8               	bcf	status,0,c
 29141  015F44  3601               	rlcf	?i2___awmod,f,c
 29142  015F46  3602               	rlcf	?i2___awmod+1,f,c
 29143  015F48  0E37               	movlw	low __npowers_
 29144  015F4A  2401               	addwf	?i2___awmod,w,c
 29145  015F4C  6EF6               	movwf	tblptrl,c
 29146  015F4E  0EEA               	movlw	high __npowers_
 29147  015F50  2002               	addwfc	?i2___awmod+1,w,c
 29148  015F52  6EF7               	movwf	tblptrh,c
 29149  015F54                     	if	1	;There are 3 active tblptr bytes
 29150  015F54  6AF8               	clrf	tblptru,c
 29151  015F56  0E00               	movlw	low (__mediumconst shr (0+16))
 29152  015F58  22F8               	addwfc	tblptru,f,c
 29153  015F5A                     	endif
 29154  015F5A  0009               	tblrd		*+
 29155  015F5C  CFF5 F034          	movff	tablat,i2___flmul@a
 29156  015F60  0009               	tblrd		*+
 29157  015F62  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29158  015F66  0009               	tblrd		*+
 29159  015F68  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29160  015F6C  000A               	tblrd		*-
 29161  015F6E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29162  015F72  0E00               	movlw	0
 29163  015F74  6E0A               	movwf	i2___awdiv@divisor+1,c
 29164  015F76  0E0A               	movlw	10
 29165  015F78  6E09               	movwf	i2___awdiv@divisor,c
 29166  015F7A  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 29167  015F7E  6A08               	clrf	i2___awdiv@dividend+1,c
 29168  015F80  ECD3  F0BC         	call	i2___awdiv	;wreg free
 29169  015F84  90D8               	bcf	status,0,c
 29170  015F86  3607               	rlcf	?i2___awdiv,f,c
 29171  015F88  3608               	rlcf	?i2___awdiv+1,f,c
 29172  015F8A  90D8               	bcf	status,0,c
 29173  015F8C  3607               	rlcf	?i2___awdiv,f,c
 29174  015F8E  3608               	rlcf	?i2___awdiv+1,f,c
 29175  015F90  0E24               	movlw	36
 29176  015F92  2607               	addwf	?i2___awdiv,f,c
 29177  015F94  0E00               	movlw	0
 29178  015F96  2208               	addwfc	?i2___awdiv+1,f,c
 29179  015F98  0E37               	movlw	low __npowers_
 29180  015F9A  2407               	addwf	?i2___awdiv,w,c
 29181  015F9C  6EF6               	movwf	tblptrl,c
 29182  015F9E  0EEA               	movlw	high __npowers_
 29183  015FA0  2008               	addwfc	?i2___awdiv+1,w,c
 29184  015FA2  6EF7               	movwf	tblptrh,c
 29185  015FA4                     	if	1	;There are 3 active tblptr bytes
 29186  015FA4  6AF8               	clrf	tblptru,c
 29187  015FA6  0E00               	movlw	low (__mediumconst shr (0+16))
 29188  015FA8  22F8               	addwfc	tblptru,f,c
 29189  015FAA                     	endif
 29190  015FAA  0009               	tblrd		*+
 29191  015FAC  CFF5 F030          	movff	tablat,i2___flmul@b
 29192  015FB0  0009               	tblrd		*+
 29193  015FB2  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29194  015FB6  0009               	tblrd		*+
 29195  015FB8  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29196  015FBC  000A               	tblrd		*-
 29197  015FBE  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29198  015FC2  EC78  F0A1         	call	i2___flmul	;wreg free
 29199  015FC6  C030  F051         	movff	?i2___flmul,i2_fround$4098
 29200  015FCA  C031  F052         	movff	?i2___flmul+1,i2_fround$4098+1
 29201  015FCE  C032  F053         	movff	?i2___flmul+2,i2_fround$4098+2
 29202  015FD2  C033  F054         	movff	?i2___flmul+3,i2_fround$4098+3
 29203                           
 29204                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 29205  015FD6  C051  F030         	movff	i2_fround$4098,i2___flmul@b
 29206  015FDA  C052  F031         	movff	i2_fround$4098+1,i2___flmul@b+1
 29207  015FDE  C053  F032         	movff	i2_fround$4098+2,i2___flmul@b+2
 29208  015FE2  C054  F033         	movff	i2_fround$4098+3,i2___flmul@b+3
 29209  015FE6  0E00               	movlw	0
 29210  015FE8  6E34               	movwf	i2___flmul@a,c
 29211  015FEA  0E00               	movlw	0
 29212  015FEC  6E35               	movwf	i2___flmul@a+1,c
 29213  015FEE  0E00               	movlw	0
 29214  015FF0  6E36               	movwf	i2___flmul@a+2,c
 29215  015FF2  0E3F               	movlw	63
 29216  015FF4  6E37               	movwf	i2___flmul@a+3,c
 29217  015FF6  EC78  F0A1         	call	i2___flmul	;wreg free
 29218  015FFA  C030  F049         	movff	?i2___flmul,?i2_fround
 29219  015FFE  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 29220  016002  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 29221  016006  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 29222  01600A  0012               	return	
 29223  01600C                     i2l1349:
 29224                           
 29225                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 29226  01600C  5055               	movf	i2fround@prec,w,c
 29227  01600E  0D04               	mullw	4
 29228  016010  0E37               	movlw	low __npowers_
 29229  016012  24F3               	addwf	prodl,w,c
 29230  016014  6EF6               	movwf	tblptrl,c
 29231  016016  0EEA               	movlw	high __npowers_
 29232  016018  20F4               	addwfc	prodh,w,c
 29233  01601A  6EF7               	movwf	tblptrh,c
 29234  01601C                     	if	1	;There are 3 active tblptr bytes
 29235  01601C  6AF8               	clrf	tblptru,c
 29236  01601E  0E00               	movlw	low (__mediumconst shr (0+16))
 29237  016020  22F8               	addwfc	tblptru,f,c
 29238  016022                     	endif
 29239  016022  0009               	tblrd		*+
 29240  016024  CFF5 F030          	movff	tablat,i2___flmul@b
 29241  016028  0009               	tblrd		*+
 29242  01602A  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29243  01602E  0009               	tblrd		*+
 29244  016030  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29245  016034  000A               	tblrd		*-
 29246  016036  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29247  01603A  0E00               	movlw	0
 29248  01603C  6E34               	movwf	i2___flmul@a,c
 29249  01603E  0E00               	movlw	0
 29250  016040  6E35               	movwf	i2___flmul@a+1,c
 29251  016042  0E00               	movlw	0
 29252  016044  6E36               	movwf	i2___flmul@a+2,c
 29253  016046  0E3F               	movlw	63
 29254  016048  6E37               	movwf	i2___flmul@a+3,c
 29255  01604A  EC78  F0A1         	call	i2___flmul	;wreg free
 29256  01604E  C030  F049         	movff	?i2___flmul,?i2_fround
 29257  016052  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 29258  016056  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 29259  01605A  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 29260  01605E  0012               	return	
 29261  016060                     __end_ofi2_fround:
 29262                           	opt stack 0
 29263                           tosu	equ	0xFFF
 29264                           tosh	equ	0xFFE
 29265                           tosl	equ	0xFFD
 29266                           pclatu	equ	0xFFB
 29267                           pclath	equ	0xFFA
 29268                           tblptru	equ	0xFF8
 29269                           tblptrh	equ	0xFF7
 29270                           tblptrl	equ	0xFF6
 29271                           tablat	equ	0xFF5
 29272                           prodh	equ	0xFF4
 29273                           prodl	equ	0xFF3
 29274                           intcon	equ	0xFF2
 29275                           indf0	equ	0xFEF
 29276                           postinc0	equ	0xFEE
 29277                           fsr0h	equ	0xFEA
 29278                           fsr0l	equ	0xFE9
 29279                           wreg	equ	0xFE8
 29280                           indf1	equ	0xFE7
 29281                           postdec1	equ	0xFE5
 29282                           plusw1	equ	0xFE3
 29283                           fsr1h	equ	0xFE2
 29284                           fsr1l	equ	0xFE1
 29285                           bsr	equ	0xFE0
 29286                           indf2	equ	0xFDF
 29287                           postinc2	equ	0xFDE
 29288                           postdec2	equ	0xFDD
 29289                           plusw2	equ	0xFDB
 29290                           fsr2h	equ	0xFDA
 29291                           fsr2l	equ	0xFD9
 29292                           status	equ	0xFD8
 29293                           
 29294 ;; *************** function i2___awmod *****************
 29295 ;; Defined at:
 29296 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 29297 ;; Parameters:    Size  Location     Type
 29298 ;;  dividend        2    0[COMRAM] int 
 29299 ;;  divisor         2    2[COMRAM] int 
 29300 ;; Auto vars:     Size  Location     Type
 29301 ;;  __awmod         1    5[COMRAM] unsigned char 
 29302 ;;  __awmod         1    4[COMRAM] unsigned char 
 29303 ;; Return value:  Size  Location     Type
 29304 ;;                  2    0[COMRAM] int 
 29305 ;; Registers used:
 29306 ;;		wreg, status,2, status,0
 29307 ;; Tracked objects:
 29308 ;;		On entry : 0/0
 29309 ;;		On exit  : 0/0
 29310 ;;		Unchanged: 0/0
 29311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29316 ;;Total ram usage:        6 bytes
 29317 ;; Hardware stack levels used:    1
 29318 ;; This function calls:
 29319 ;;		Nothing
 29320 ;; This function is called by:
 29321 ;;		i2_fround
 29322 ;;		i2_scale
 29323 ;; This function uses a non-reentrant model
 29324 ;;
 29325                           
 29326                           	psect	text91
 29327  017C14                     __ptext91:
 29328                           	opt stack 0
 29329  017C14                     i2___awmod:
 29330                           	opt stack 15
 29331                           
 29332                           ;incstack = 0
 29333  017C14  0E00               	movlw	0
 29334  017C16  6E06               	movwf	i2___awmod@sign,c
 29335  017C18  AE02               	btfss	i2___awmod@dividend+1,7,c
 29336  017C1A  D006               	goto	i2l1735
 29337  017C1C  6C01               	negf	i2___awmod@dividend,c
 29338  017C1E  1E02               	comf	i2___awmod@dividend+1,f,c
 29339  017C20  B0D8               	btfsc	status,0,c
 29340  017C22  2A02               	incf	i2___awmod@dividend+1,f,c
 29341  017C24  0E01               	movlw	1
 29342  017C26  6E06               	movwf	i2___awmod@sign,c
 29343  017C28                     i2l1735:
 29344  017C28  AE04               	btfss	i2___awmod@divisor+1,7,c
 29345  017C2A  D004               	goto	i2l1736
 29346  017C2C  6C03               	negf	i2___awmod@divisor,c
 29347  017C2E  1E04               	comf	i2___awmod@divisor+1,f,c
 29348  017C30  B0D8               	btfsc	status,0,c
 29349  017C32  2A04               	incf	i2___awmod@divisor+1,f,c
 29350  017C34                     i2l1736:
 29351  017C34  5003               	movf	i2___awmod@divisor,w,c
 29352  017C36  1004               	iorwf	i2___awmod@divisor+1,w,c
 29353  017C38  B4D8               	btfsc	status,2,c
 29354  017C3A  D018               	goto	i2l1743
 29355  017C3C  0E01               	movlw	1
 29356  017C3E  6E05               	movwf	i2___awmod@counter,c
 29357  017C40  D004               	goto	i2l1738
 29358  017C42  90D8               	bcf	status,0,c
 29359  017C44  3603               	rlcf	i2___awmod@divisor,f,c
 29360  017C46  3604               	rlcf	i2___awmod@divisor+1,f,c
 29361  017C48  2A05               	incf	i2___awmod@counter,f,c
 29362  017C4A                     i2l1738:
 29363  017C4A  AE04               	btfss	i2___awmod@divisor+1,7,c
 29364  017C4C  D7FA               	goto	i2l1739
 29365  017C4E                     i2u1643_40:
 29366  017C4E  5003               	movf	i2___awmod@divisor,w,c
 29367  017C50  5C01               	subwf	i2___awmod@dividend,w,c
 29368  017C52  5004               	movf	i2___awmod@divisor+1,w,c
 29369  017C54  5802               	subwfb	i2___awmod@dividend+1,w,c
 29370  017C56  A0D8               	btfss	status,0,c
 29371  017C58  D004               	goto	i2l1742
 29372  017C5A  5003               	movf	i2___awmod@divisor,w,c
 29373  017C5C  5E01               	subwf	i2___awmod@dividend,f,c
 29374  017C5E  5004               	movf	i2___awmod@divisor+1,w,c
 29375  017C60  5A02               	subwfb	i2___awmod@dividend+1,f,c
 29376  017C62                     i2l1742:
 29377  017C62  90D8               	bcf	status,0,c
 29378  017C64  3204               	rrcf	i2___awmod@divisor+1,f,c
 29379  017C66  3203               	rrcf	i2___awmod@divisor,f,c
 29380  017C68  2E05               	decfsz	i2___awmod@counter,f,c
 29381  017C6A  D7F1               	goto	i2u1643_40
 29382  017C6C                     i2l1743:
 29383  017C6C  5006               	movf	i2___awmod@sign,w,c
 29384  017C6E  B4D8               	btfsc	status,2,c
 29385  017C70  D004               	goto	i2l1744
 29386  017C72  6C01               	negf	i2___awmod@dividend,c
 29387  017C74  1E02               	comf	i2___awmod@dividend+1,f,c
 29388  017C76  B0D8               	btfsc	status,0,c
 29389  017C78  2A02               	incf	i2___awmod@dividend+1,f,c
 29390  017C7A                     i2l1744:
 29391  017C7A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 29392  017C7E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 29393  017C82  0012               	return	
 29394  017C84                     __end_ofi2___awmod:
 29395                           	opt stack 0
 29396                           tosu	equ	0xFFF
 29397                           tosh	equ	0xFFE
 29398                           tosl	equ	0xFFD
 29399                           pclatu	equ	0xFFB
 29400                           pclath	equ	0xFFA
 29401                           tblptru	equ	0xFF8
 29402                           tblptrh	equ	0xFF7
 29403                           tblptrl	equ	0xFF6
 29404                           tablat	equ	0xFF5
 29405                           prodh	equ	0xFF4
 29406                           prodl	equ	0xFF3
 29407                           intcon	equ	0xFF2
 29408                           indf0	equ	0xFEF
 29409                           postinc0	equ	0xFEE
 29410                           fsr0h	equ	0xFEA
 29411                           fsr0l	equ	0xFE9
 29412                           wreg	equ	0xFE8
 29413                           indf1	equ	0xFE7
 29414                           postdec1	equ	0xFE5
 29415                           plusw1	equ	0xFE3
 29416                           fsr1h	equ	0xFE2
 29417                           fsr1l	equ	0xFE1
 29418                           bsr	equ	0xFE0
 29419                           indf2	equ	0xFDF
 29420                           postinc2	equ	0xFDE
 29421                           postdec2	equ	0xFDD
 29422                           plusw2	equ	0xFDB
 29423                           fsr2h	equ	0xFDA
 29424                           fsr2l	equ	0xFD9
 29425                           status	equ	0xFD8
 29426                           
 29427 ;; *************** function i2___awdiv *****************
 29428 ;; Defined at:
 29429 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 29430 ;; Parameters:    Size  Location     Type
 29431 ;;  dividend        2    6[COMRAM] int 
 29432 ;;  divisor         2    8[COMRAM] int 
 29433 ;; Auto vars:     Size  Location     Type
 29434 ;;  __awdiv         2   12[COMRAM] int 
 29435 ;;  __awdiv         1   11[COMRAM] unsigned char 
 29436 ;;  __awdiv         1   10[COMRAM] unsigned char 
 29437 ;; Return value:  Size  Location     Type
 29438 ;;                  2    6[COMRAM] int 
 29439 ;; Registers used:
 29440 ;;		wreg, status,2, status,0
 29441 ;; Tracked objects:
 29442 ;;		On entry : 0/0
 29443 ;;		On exit  : 0/0
 29444 ;;		Unchanged: 0/0
 29445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29447 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29449 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29450 ;;Total ram usage:        8 bytes
 29451 ;; Hardware stack levels used:    1
 29452 ;; This function calls:
 29453 ;;		Nothing
 29454 ;; This function is called by:
 29455 ;;		i2_fround
 29456 ;;		i2_scale
 29457 ;;		i2_printf
 29458 ;; This function uses a non-reentrant model
 29459 ;;
 29460                           
 29461                           	psect	text92
 29462  0179A6                     __ptext92:
 29463                           	opt stack 0
 29464  0179A6                     i2___awdiv:
 29465                           	opt stack 15
 29466                           
 29467                           ;incstack = 0
 29468  0179A6  0E00               	movlw	0
 29469  0179A8  6E0C               	movwf	i2___awdiv@sign,c
 29470  0179AA  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 29471  0179AC  D006               	goto	i2l1722
 29472  0179AE  6C09               	negf	i2___awdiv@divisor,c
 29473  0179B0  1E0A               	comf	i2___awdiv@divisor+1,f,c
 29474  0179B2  B0D8               	btfsc	status,0,c
 29475  0179B4  2A0A               	incf	i2___awdiv@divisor+1,f,c
 29476  0179B6  0E01               	movlw	1
 29477  0179B8  6E0C               	movwf	i2___awdiv@sign,c
 29478  0179BA                     i2l1722:
 29479  0179BA  AE08               	btfss	i2___awdiv@dividend+1,7,c
 29480  0179BC  D006               	goto	i2l1723
 29481  0179BE  6C07               	negf	i2___awdiv@dividend,c
 29482  0179C0  1E08               	comf	i2___awdiv@dividend+1,f,c
 29483  0179C2  B0D8               	btfsc	status,0,c
 29484  0179C4  2A08               	incf	i2___awdiv@dividend+1,f,c
 29485  0179C6  0E01               	movlw	1
 29486  0179C8  1A0C               	xorwf	i2___awdiv@sign,f,c
 29487  0179CA                     i2l1723:
 29488  0179CA  0E00               	movlw	0
 29489  0179CC  6E0E               	movwf	i2___awdiv@quotient+1,c
 29490  0179CE  0E00               	movlw	0
 29491  0179D0  6E0D               	movwf	i2___awdiv@quotient,c
 29492  0179D2  5009               	movf	i2___awdiv@divisor,w,c
 29493  0179D4  100A               	iorwf	i2___awdiv@divisor+1,w,c
 29494  0179D6  B4D8               	btfsc	status,2,c
 29495  0179D8  D01C               	goto	i2l1730
 29496  0179DA  0E01               	movlw	1
 29497  0179DC  6E0B               	movwf	i2___awdiv@counter,c
 29498  0179DE  D004               	goto	i2l1725
 29499  0179E0  90D8               	bcf	status,0,c
 29500  0179E2  3609               	rlcf	i2___awdiv@divisor,f,c
 29501  0179E4  360A               	rlcf	i2___awdiv@divisor+1,f,c
 29502  0179E6  2A0B               	incf	i2___awdiv@counter,f,c
 29503  0179E8                     i2l1725:
 29504  0179E8  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 29505  0179EA  D7FA               	goto	i2l1726
 29506  0179EC                     i2u1637_40:
 29507  0179EC  90D8               	bcf	status,0,c
 29508  0179EE  360D               	rlcf	i2___awdiv@quotient,f,c
 29509  0179F0  360E               	rlcf	i2___awdiv@quotient+1,f,c
 29510  0179F2  5009               	movf	i2___awdiv@divisor,w,c
 29511  0179F4  5C07               	subwf	i2___awdiv@dividend,w,c
 29512  0179F6  500A               	movf	i2___awdiv@divisor+1,w,c
 29513  0179F8  5808               	subwfb	i2___awdiv@dividend+1,w,c
 29514  0179FA  A0D8               	btfss	status,0,c
 29515  0179FC  D005               	goto	i2l1729
 29516  0179FE  5009               	movf	i2___awdiv@divisor,w,c
 29517  017A00  5E07               	subwf	i2___awdiv@dividend,f,c
 29518  017A02  500A               	movf	i2___awdiv@divisor+1,w,c
 29519  017A04  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 29520  017A06  800D               	bsf	i2___awdiv@quotient,0,c
 29521  017A08                     i2l1729:
 29522  017A08  90D8               	bcf	status,0,c
 29523  017A0A  320A               	rrcf	i2___awdiv@divisor+1,f,c
 29524  017A0C  3209               	rrcf	i2___awdiv@divisor,f,c
 29525  017A0E  2E0B               	decfsz	i2___awdiv@counter,f,c
 29526  017A10  D7ED               	goto	i2u1637_40
 29527  017A12                     i2l1730:
 29528  017A12  500C               	movf	i2___awdiv@sign,w,c
 29529  017A14  B4D8               	btfsc	status,2,c
 29530  017A16  D004               	goto	i2l1731
 29531  017A18  6C0D               	negf	i2___awdiv@quotient,c
 29532  017A1A  1E0E               	comf	i2___awdiv@quotient+1,f,c
 29533  017A1C  B0D8               	btfsc	status,0,c
 29534  017A1E  2A0E               	incf	i2___awdiv@quotient+1,f,c
 29535  017A20                     i2l1731:
 29536  017A20  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 29537  017A24  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 29538  017A28  0012               	return	
 29539  017A2A                     __end_ofi2___awdiv:
 29540                           	opt stack 0
 29541                           tosu	equ	0xFFF
 29542                           tosh	equ	0xFFE
 29543                           tosl	equ	0xFFD
 29544                           pclatu	equ	0xFFB
 29545                           pclath	equ	0xFFA
 29546                           tblptru	equ	0xFF8
 29547                           tblptrh	equ	0xFF7
 29548                           tblptrl	equ	0xFF6
 29549                           tablat	equ	0xFF5
 29550                           prodh	equ	0xFF4
 29551                           prodl	equ	0xFF3
 29552                           intcon	equ	0xFF2
 29553                           indf0	equ	0xFEF
 29554                           postinc0	equ	0xFEE
 29555                           fsr0h	equ	0xFEA
 29556                           fsr0l	equ	0xFE9
 29557                           wreg	equ	0xFE8
 29558                           indf1	equ	0xFE7
 29559                           postdec1	equ	0xFE5
 29560                           plusw1	equ	0xFE3
 29561                           fsr1h	equ	0xFE2
 29562                           fsr1l	equ	0xFE1
 29563                           bsr	equ	0xFE0
 29564                           indf2	equ	0xFDF
 29565                           postinc2	equ	0xFDE
 29566                           postdec2	equ	0xFDD
 29567                           plusw2	equ	0xFDB
 29568                           fsr2h	equ	0xFDA
 29569                           fsr2l	equ	0xFD9
 29570                           status	equ	0xFD8
 29571                           
 29572 ;; *************** function i2__tdiv_to_l_ *****************
 29573 ;; Defined at:
 29574 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 29575 ;; Parameters:    Size  Location     Type
 29576 ;;  f1              3    0[COMRAM] float 
 29577 ;;  f2              3    3[COMRAM] float 
 29578 ;; Auto vars:     Size  Location     Type
 29579 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 29580 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 29581 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 29582 ;; Return value:  Size  Location     Type
 29583 ;;                  4    0[COMRAM] unsigned long 
 29584 ;; Registers used:
 29585 ;;		wreg, status,2, status,0
 29586 ;; Tracked objects:
 29587 ;;		On entry : 0/0
 29588 ;;		On exit  : 0/0
 29589 ;;		Unchanged: 0/0
 29590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29591 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29592 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29593 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29594 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29595 ;;Total ram usage:       15 bytes
 29596 ;; Hardware stack levels used:    1
 29597 ;; This function calls:
 29598 ;;		Nothing
 29599 ;; This function is called by:
 29600 ;;		i2_printf
 29601 ;; This function uses a non-reentrant model
 29602 ;;
 29603                           
 29604                           	psect	text93
 29605  0168B8                     __ptext93:
 29606                           	opt stack 0
 29607  0168B8                     i2__tdiv_to_l_:
 29608                           	opt stack 16
 29609                           
 29610                           ;incstack = 0
 29611  0168B8  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 29612  0168BC  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 29613  0168BE  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 29614  0168C0  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 29615  0168C2  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 29616  0168C4  E301               	bnc	u1700_41
 29617  0168C6  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 29618  0168C8                     u1700_41:
 29619  0168C8  5007               	movf	??i2__tdiv_to_l_,w,c
 29620  0168CA  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 29621  0168CC  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 29622  0168CE  A4D8               	btfss	status,2,c
 29623  0168D0  D009               	goto	i2l1870
 29624  0168D2  0E00               	movlw	0
 29625  0168D4  6E01               	movwf	?i2__tdiv_to_l_,c
 29626  0168D6  0E00               	movlw	0
 29627  0168D8  6E02               	movwf	?i2__tdiv_to_l_+1,c
 29628  0168DA  0E00               	movlw	0
 29629  0168DC  6E03               	movwf	?i2__tdiv_to_l_+2,c
 29630  0168DE  0E00               	movlw	0
 29631  0168E0  6E04               	movwf	?i2__tdiv_to_l_+3,c
 29632  0168E2  0012               	return	
 29633  0168E4                     i2l1870:
 29634  0168E4  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 29635  0168E8  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 29636  0168EA  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 29637  0168EC  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 29638  0168EE  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 29639  0168F0  E301               	bnc	u1702_41
 29640  0168F2  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 29641  0168F4                     u1702_41:
 29642  0168F4  5007               	movf	??i2__tdiv_to_l_,w,c
 29643  0168F6  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 29644  0168F8  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 29645  0168FA  A4D8               	btfss	status,2,c
 29646  0168FC  D009               	goto	i2l1872
 29647  0168FE  0E00               	movlw	0
 29648  016900  6E01               	movwf	?i2__tdiv_to_l_,c
 29649  016902  0E00               	movlw	0
 29650  016904  6E02               	movwf	?i2__tdiv_to_l_+1,c
 29651  016906  0E00               	movlw	0
 29652  016908  6E03               	movwf	?i2__tdiv_to_l_+2,c
 29653  01690A  0E00               	movlw	0
 29654  01690C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 29655  01690E  0012               	return	
 29656  016910                     i2l1872:
 29657  016910  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 29658  016912  0EFF               	movlw	255
 29659  016914  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 29660  016916  0EFF               	movlw	255
 29661  016918  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 29662  01691A  0E00               	movlw	0
 29663  01691C  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 29664  01691E  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 29665  016920  0EFF               	movlw	255
 29666  016922  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 29667  016924  0EFF               	movlw	255
 29668  016926  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 29669  016928  0E00               	movlw	0
 29670  01692A  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 29671  01692C  0E00               	movlw	0
 29672  01692E  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 29673  016930  0E00               	movlw	0
 29674  016932  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 29675  016934  0E00               	movlw	0
 29676  016936  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 29677  016938  0E00               	movlw	0
 29678  01693A  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 29679  01693C  0E7F               	movlw	127
 29680  01693E  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 29681  016940  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 29682  016942  0F98               	addlw	152
 29683  016944  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 29684  016946  0E18               	movlw	24
 29685  016948  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 29686  01694A                     i2l1873:
 29687  01694A  90D8               	bcf	status,0,c
 29688  01694C  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 29689  01694E  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 29690  016950  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 29691  016952  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 29692  016954  5004               	movf	i2__tdiv_to_l_@f2,w,c
 29693  016956  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 29694  016958  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 29695  01695A  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 29696  01695C  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 29697  01695E  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 29698  016960  A0D8               	btfss	status,0,c
 29699  016962  D007               	goto	i2l1874
 29700  016964  5004               	movf	i2__tdiv_to_l_@f2,w,c
 29701  016966  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 29702  016968  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 29703  01696A  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 29704  01696C  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 29705  01696E  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 29706  016970  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 29707  016972                     i2l1874:
 29708  016972  90D8               	bcf	status,0,c
 29709  016974  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 29710  016976  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 29711  016978  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 29712  01697A  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 29713  01697C  D7E6               	goto	i2l1873
 29714  01697E  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 29715  016980  D016               	goto	i2l1876
 29716  016982  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 29717  016984  0A80               	xorlw	128
 29718  016986  0F97               	addlw	151
 29719  016988  B0D8               	btfsc	status,0,c
 29720  01698A  D009               	goto	i2l1877
 29721  01698C  0E00               	movlw	0
 29722  01698E  6E01               	movwf	?i2__tdiv_to_l_,c
 29723  016990  0E00               	movlw	0
 29724  016992  6E02               	movwf	?i2__tdiv_to_l_+1,c
 29725  016994  0E00               	movlw	0
 29726  016996  6E03               	movwf	?i2__tdiv_to_l_+2,c
 29727  016998  0E00               	movlw	0
 29728  01699A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 29729  01699C  0012               	return	
 29730  01699E                     i2l1877:
 29731  01699E  90D8               	bcf	status,0,c
 29732  0169A0  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 29733  0169A2  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 29734  0169A4  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 29735  0169A6  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 29736  0169A8  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 29737  0169AA  D7F9               	goto	i2l1877
 29738  0169AC  D015               	goto	i2u1708_40
 29739  0169AE                     i2l1876:
 29740  0169AE  0E17               	movlw	23
 29741  0169B0  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 29742  0169B2  D00F               	goto	i2l1882
 29743  0169B4  0E00               	movlw	0
 29744  0169B6  6E01               	movwf	?i2__tdiv_to_l_,c
 29745  0169B8  0E00               	movlw	0
 29746  0169BA  6E02               	movwf	?i2__tdiv_to_l_+1,c
 29747  0169BC  0E00               	movlw	0
 29748  0169BE  6E03               	movwf	?i2__tdiv_to_l_+2,c
 29749  0169C0  0E00               	movlw	0
 29750  0169C2  6E04               	movwf	?i2__tdiv_to_l_+3,c
 29751  0169C4  0012               	return	
 29752  0169C6  90D8               	bcf	status,0,c
 29753  0169C8  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 29754  0169CA  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 29755  0169CC  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 29756  0169CE  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 29757  0169D0  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 29758  0169D2                     i2l1882:
 29759  0169D2  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 29760  0169D4  A4D8               	btfss	status,2,c
 29761  0169D6  D7F7               	goto	i2l1883
 29762  0169D8                     i2u1708_40:
 29763  0169D8  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 29764  0169DC  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 29765  0169E0  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 29766  0169E4  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 29767  0169E8  0012               	return		;funcret
 29768  0169EA                     __end_ofi2__tdiv_to_l_:
 29769                           	opt stack 0
 29770                           tosu	equ	0xFFF
 29771                           tosh	equ	0xFFE
 29772                           tosl	equ	0xFFD
 29773                           pclatu	equ	0xFFB
 29774                           pclath	equ	0xFFA
 29775                           tblptru	equ	0xFF8
 29776                           tblptrh	equ	0xFF7
 29777                           tblptrl	equ	0xFF6
 29778                           tablat	equ	0xFF5
 29779                           prodh	equ	0xFF4
 29780                           prodl	equ	0xFF3
 29781                           intcon	equ	0xFF2
 29782                           indf0	equ	0xFEF
 29783                           postinc0	equ	0xFEE
 29784                           fsr0h	equ	0xFEA
 29785                           fsr0l	equ	0xFE9
 29786                           wreg	equ	0xFE8
 29787                           indf1	equ	0xFE7
 29788                           postdec1	equ	0xFE5
 29789                           plusw1	equ	0xFE3
 29790                           fsr1h	equ	0xFE2
 29791                           fsr1l	equ	0xFE1
 29792                           bsr	equ	0xFE0
 29793                           indf2	equ	0xFDF
 29794                           postinc2	equ	0xFDE
 29795                           postdec2	equ	0xFDD
 29796                           plusw2	equ	0xFDB
 29797                           fsr2h	equ	0xFDA
 29798                           fsr2l	equ	0xFD9
 29799                           status	equ	0xFD8
 29800                           
 29801 ;; *************** function i2__div_to_l_ *****************
 29802 ;; Defined at:
 29803 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 29804 ;; Parameters:    Size  Location     Type
 29805 ;;  f1              4    0[COMRAM] unsigned long 
 29806 ;;  f2              4    4[COMRAM] unsigned long 
 29807 ;; Auto vars:     Size  Location     Type
 29808 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 29809 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 29810 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 29811 ;; Return value:  Size  Location     Type
 29812 ;;                  4    0[COMRAM] unsigned long 
 29813 ;; Registers used:
 29814 ;;		wreg, status,2, status,0
 29815 ;; Tracked objects:
 29816 ;;		On entry : 0/0
 29817 ;;		On exit  : 0/0
 29818 ;;		Unchanged: 0/0
 29819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29820 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29821 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29823 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29824 ;;Total ram usage:       14 bytes
 29825 ;; Hardware stack levels used:    1
 29826 ;; This function calls:
 29827 ;;		Nothing
 29828 ;; This function is called by:
 29829 ;;		i2_printf
 29830 ;; This function uses a non-reentrant model
 29831 ;;
 29832                           
 29833                           	psect	text94
 29834  016B14                     __ptext94:
 29835                           	opt stack 0
 29836  016B14                     i2__div_to_l_:
 29837                           	opt stack 16
 29838                           
 29839                           ;incstack = 0
 29840  016B14  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 29841  016B16  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 29842  016B18  6E0E               	movwf	i2__div_to_l_@exp1,c
 29843  016B1A  500E               	movf	i2__div_to_l_@exp1,w,c
 29844  016B1C  A4D8               	btfss	status,2,c
 29845  016B1E  D009               	goto	i2l1766
 29846  016B20  0E00               	movlw	0
 29847  016B22  6E01               	movwf	?i2__div_to_l_,c
 29848  016B24  0E00               	movlw	0
 29849  016B26  6E02               	movwf	?i2__div_to_l_+1,c
 29850  016B28  0E00               	movlw	0
 29851  016B2A  6E03               	movwf	?i2__div_to_l_+2,c
 29852  016B2C  0E00               	movlw	0
 29853  016B2E  6E04               	movwf	?i2__div_to_l_+3,c
 29854  016B30  0012               	return	
 29855  016B32                     i2l1766:
 29856  016B32  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 29857  016B34  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 29858  016B36  6E0D               	movwf	i2__div_to_l_@cntr,c
 29859  016B38  500D               	movf	i2__div_to_l_@cntr,w,c
 29860  016B3A  A4D8               	btfss	status,2,c
 29861  016B3C  D009               	goto	i2l1768
 29862  016B3E  0E00               	movlw	0
 29863  016B40  6E01               	movwf	?i2__div_to_l_,c
 29864  016B42  0E00               	movlw	0
 29865  016B44  6E02               	movwf	?i2__div_to_l_+1,c
 29866  016B46  0E00               	movlw	0
 29867  016B48  6E03               	movwf	?i2__div_to_l_+2,c
 29868  016B4A  0E00               	movlw	0
 29869  016B4C  6E04               	movwf	?i2__div_to_l_+3,c
 29870  016B4E  0012               	return	
 29871  016B50                     i2l1768:
 29872  016B50  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 29873  016B52  0EFF               	movlw	255
 29874  016B54  1601               	andwf	i2__div_to_l_@f1,f,c
 29875  016B56  0EFF               	movlw	255
 29876  016B58  1602               	andwf	i2__div_to_l_@f1+1,f,c
 29877  016B5A  0EFF               	movlw	255
 29878  016B5C  1603               	andwf	i2__div_to_l_@f1+2,f,c
 29879  016B5E  0E00               	movlw	0
 29880  016B60  1604               	andwf	i2__div_to_l_@f1+3,f,c
 29881  016B62  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 29882  016B64  0EFF               	movlw	255
 29883  016B66  1605               	andwf	i2__div_to_l_@f2,f,c
 29884  016B68  0EFF               	movlw	255
 29885  016B6A  1606               	andwf	i2__div_to_l_@f2+1,f,c
 29886  016B6C  0EFF               	movlw	255
 29887  016B6E  1607               	andwf	i2__div_to_l_@f2+2,f,c
 29888  016B70  0E00               	movlw	0
 29889  016B72  1608               	andwf	i2__div_to_l_@f2+3,f,c
 29890  016B74  0E00               	movlw	0
 29891  016B76  6E09               	movwf	i2__div_to_l_@quot,c
 29892  016B78  0E00               	movlw	0
 29893  016B7A  6E0A               	movwf	i2__div_to_l_@quot+1,c
 29894  016B7C  0E00               	movlw	0
 29895  016B7E  6E0B               	movwf	i2__div_to_l_@quot+2,c
 29896  016B80  0E00               	movlw	0
 29897  016B82  6E0C               	movwf	i2__div_to_l_@quot+3,c
 29898  016B84  0E7F               	movlw	127
 29899  016B86  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 29900  016B88  500D               	movf	i2__div_to_l_@cntr,w,c
 29901  016B8A  0FA0               	addlw	160
 29902  016B8C  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 29903  016B8E  0E20               	movlw	32
 29904  016B90  6E0D               	movwf	i2__div_to_l_@cntr,c
 29905  016B92  90D8               	bcf	status,0,c
 29906  016B94  3609               	rlcf	i2__div_to_l_@quot,f,c
 29907  016B96  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 29908  016B98  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 29909  016B9A  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 29910  016B9C  5005               	movf	i2__div_to_l_@f2,w,c
 29911  016B9E  5C01               	subwf	i2__div_to_l_@f1,w,c
 29912  016BA0  5006               	movf	i2__div_to_l_@f2+1,w,c
 29913  016BA2  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 29914  016BA4  5007               	movf	i2__div_to_l_@f2+2,w,c
 29915  016BA6  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 29916  016BA8  5008               	movf	i2__div_to_l_@f2+3,w,c
 29917  016BAA  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 29918  016BAC  A0D8               	btfss	status,0,c
 29919  016BAE  D009               	goto	i2l1770
 29920  016BB0  5005               	movf	i2__div_to_l_@f2,w,c
 29921  016BB2  5E01               	subwf	i2__div_to_l_@f1,f,c
 29922  016BB4  5006               	movf	i2__div_to_l_@f2+1,w,c
 29923  016BB6  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 29924  016BB8  5007               	movf	i2__div_to_l_@f2+2,w,c
 29925  016BBA  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 29926  016BBC  5008               	movf	i2__div_to_l_@f2+3,w,c
 29927  016BBE  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 29928  016BC0  8009               	bsf	i2__div_to_l_@quot,0,c
 29929  016BC2                     i2l1770:
 29930  016BC2  90D8               	bcf	status,0,c
 29931  016BC4  3601               	rlcf	i2__div_to_l_@f1,f,c
 29932  016BC6  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 29933  016BC8  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 29934  016BCA  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 29935  016BCC  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 29936  016BCE  D7E1               	goto	i2l1769
 29937  016BD0  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 29938  016BD2  D016               	goto	i2l1772
 29939  016BD4  500E               	movf	i2__div_to_l_@exp1,w,c
 29940  016BD6  0A80               	xorlw	128
 29941  016BD8  0F9F               	addlw	159
 29942  016BDA  B0D8               	btfsc	status,0,c
 29943  016BDC  D009               	goto	i2l1773
 29944  016BDE  0E00               	movlw	0
 29945  016BE0  6E01               	movwf	?i2__div_to_l_,c
 29946  016BE2  0E00               	movlw	0
 29947  016BE4  6E02               	movwf	?i2__div_to_l_+1,c
 29948  016BE6  0E00               	movlw	0
 29949  016BE8  6E03               	movwf	?i2__div_to_l_+2,c
 29950  016BEA  0E00               	movlw	0
 29951  016BEC  6E04               	movwf	?i2__div_to_l_+3,c
 29952  016BEE  0012               	return	
 29953  016BF0                     i2l1773:
 29954  016BF0  90D8               	bcf	status,0,c
 29955  016BF2  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 29956  016BF4  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 29957  016BF6  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 29958  016BF8  3209               	rrcf	i2__div_to_l_@quot,f,c
 29959  016BFA  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 29960  016BFC  D7F9               	goto	i2l1773
 29961  016BFE  D015               	goto	i2u1699_40
 29962  016C00                     i2l1772:
 29963  016C00  0E1F               	movlw	31
 29964  016C02  640E               	cpfsgt	i2__div_to_l_@exp1,c
 29965  016C04  D00F               	goto	i2l1778
 29966  016C06  0E00               	movlw	0
 29967  016C08  6E01               	movwf	?i2__div_to_l_,c
 29968  016C0A  0E00               	movlw	0
 29969  016C0C  6E02               	movwf	?i2__div_to_l_+1,c
 29970  016C0E  0E00               	movlw	0
 29971  016C10  6E03               	movwf	?i2__div_to_l_+2,c
 29972  016C12  0E00               	movlw	0
 29973  016C14  6E04               	movwf	?i2__div_to_l_+3,c
 29974  016C16  0012               	return	
 29975  016C18  90D8               	bcf	status,0,c
 29976  016C1A  3609               	rlcf	i2__div_to_l_@quot,f,c
 29977  016C1C  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 29978  016C1E  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 29979  016C20  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 29980  016C22  060E               	decf	i2__div_to_l_@exp1,f,c
 29981  016C24                     i2l1778:
 29982  016C24  500E               	movf	i2__div_to_l_@exp1,w,c
 29983  016C26  A4D8               	btfss	status,2,c
 29984  016C28  D7F7               	goto	i2l1779
 29985  016C2A                     i2u1699_40:
 29986  016C2A  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 29987  016C2E  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 29988  016C32  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 29989  016C36  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 29990  016C3A  0012               	return		;funcret
 29991  016C3C                     __end_ofi2__div_to_l_:
 29992                           	opt stack 0
 29993                           tosu	equ	0xFFF
 29994                           tosh	equ	0xFFE
 29995                           tosl	equ	0xFFD
 29996                           pclatu	equ	0xFFB
 29997                           pclath	equ	0xFFA
 29998                           tblptru	equ	0xFF8
 29999                           tblptrh	equ	0xFF7
 30000                           tblptrl	equ	0xFF6
 30001                           tablat	equ	0xFF5
 30002                           prodh	equ	0xFF4
 30003                           prodl	equ	0xFF3
 30004                           intcon	equ	0xFF2
 30005                           indf0	equ	0xFEF
 30006                           postinc0	equ	0xFEE
 30007                           fsr0h	equ	0xFEA
 30008                           fsr0l	equ	0xFE9
 30009                           wreg	equ	0xFE8
 30010                           indf1	equ	0xFE7
 30011                           postdec1	equ	0xFE5
 30012                           plusw1	equ	0xFE3
 30013                           fsr1h	equ	0xFE2
 30014                           fsr1l	equ	0xFE1
 30015                           bsr	equ	0xFE0
 30016                           indf2	equ	0xFDF
 30017                           postinc2	equ	0xFDE
 30018                           postdec2	equ	0xFDD
 30019                           plusw2	equ	0xFDB
 30020                           fsr2h	equ	0xFDA
 30021                           fsr2l	equ	0xFD9
 30022                           status	equ	0xFD8
 30023                           
 30024 ;; *************** function i2___wmul *****************
 30025 ;; Defined at:
 30026 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 30027 ;; Parameters:    Size  Location     Type
 30028 ;;  multiplier      2    0[COMRAM] unsigned int 
 30029 ;;  multiplicand    2    2[COMRAM] unsigned int 
 30030 ;; Auto vars:     Size  Location     Type
 30031 ;;  __wmul          2    4[COMRAM] unsigned int 
 30032 ;; Return value:  Size  Location     Type
 30033 ;;                  2    0[COMRAM] unsigned int 
 30034 ;; Registers used:
 30035 ;;		wreg, status,2, status,0, prodl, prodh
 30036 ;; Tracked objects:
 30037 ;;		On entry : 0/0
 30038 ;;		On exit  : 0/0
 30039 ;;		Unchanged: 0/0
 30040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30044 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30045 ;;Total ram usage:        6 bytes
 30046 ;; Hardware stack levels used:    1
 30047 ;; This function calls:
 30048 ;;		Nothing
 30049 ;; This function is called by:
 30050 ;;		i2_printf
 30051 ;; This function uses a non-reentrant model
 30052 ;;
 30053                           
 30054                           	psect	text95
 30055  0186C4                     __ptext95:
 30056                           	opt stack 0
 30057  0186C4                     i2___wmul:
 30058                           	opt stack 16
 30059                           
 30060                           ;incstack = 0
 30061  0186C4  5001               	movf	i2___wmul@multiplier,w,c
 30062  0186C6  0203               	mulwf	i2___wmul@multiplicand,c
 30063  0186C8  CFF3 F005          	movff	prodl,i2___wmul@product
 30064  0186CC  CFF4 F006          	movff	prodh,i2___wmul@product+1
 30065  0186D0  5001               	movf	i2___wmul@multiplier,w,c
 30066  0186D2  0204               	mulwf	i2___wmul@multiplicand+1,c
 30067  0186D4  50F3               	movf	prodl,w,c
 30068  0186D6  2606               	addwf	i2___wmul@product+1,f,c
 30069  0186D8  5002               	movf	i2___wmul@multiplier+1,w,c
 30070  0186DA  0203               	mulwf	i2___wmul@multiplicand,c
 30071  0186DC  50F3               	movf	prodl,w,c
 30072  0186DE  2606               	addwf	i2___wmul@product+1,f,c
 30073  0186E0  C005  F001         	movff	i2___wmul@product,?i2___wmul
 30074  0186E4  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 30075  0186E8  0012               	return	
 30076  0186EA                     __end_ofi2___wmul:
 30077                           	opt stack 0
 30078                           tosu	equ	0xFFF
 30079                           tosh	equ	0xFFE
 30080                           tosl	equ	0xFFD
 30081                           pclatu	equ	0xFFB
 30082                           pclath	equ	0xFFA
 30083                           tblptru	equ	0xFF8
 30084                           tblptrh	equ	0xFF7
 30085                           tblptrl	equ	0xFF6
 30086                           tablat	equ	0xFF5
 30087                           prodh	equ	0xFF4
 30088                           prodl	equ	0xFF3
 30089                           intcon	equ	0xFF2
 30090                           indf0	equ	0xFEF
 30091                           postinc0	equ	0xFEE
 30092                           fsr0h	equ	0xFEA
 30093                           fsr0l	equ	0xFE9
 30094                           wreg	equ	0xFE8
 30095                           indf1	equ	0xFE7
 30096                           postdec1	equ	0xFE5
 30097                           plusw1	equ	0xFE3
 30098                           fsr1h	equ	0xFE2
 30099                           fsr1l	equ	0xFE1
 30100                           bsr	equ	0xFE0
 30101                           indf2	equ	0xFDF
 30102                           postinc2	equ	0xFDE
 30103                           postdec2	equ	0xFDD
 30104                           plusw2	equ	0xFDB
 30105                           fsr2h	equ	0xFDA
 30106                           fsr2l	equ	0xFD9
 30107                           status	equ	0xFD8
 30108                           
 30109 ;; *************** function i2___llmod *****************
 30110 ;; Defined at:
 30111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 30112 ;; Parameters:    Size  Location     Type
 30113 ;;  dividend        4   13[COMRAM] unsigned long 
 30114 ;;  divisor         4   17[COMRAM] unsigned long 
 30115 ;; Auto vars:     Size  Location     Type
 30116 ;;  __llmod         1   21[COMRAM] unsigned char 
 30117 ;; Return value:  Size  Location     Type
 30118 ;;                  4   13[COMRAM] unsigned long 
 30119 ;; Registers used:
 30120 ;;		wreg, status,2, status,0
 30121 ;; Tracked objects:
 30122 ;;		On entry : 0/0
 30123 ;;		On exit  : 0/0
 30124 ;;		Unchanged: 0/0
 30125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30126 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30129 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30130 ;;Total ram usage:        9 bytes
 30131 ;; Hardware stack levels used:    1
 30132 ;; This function calls:
 30133 ;;		Nothing
 30134 ;; This function is called by:
 30135 ;;		i2_printf
 30136 ;; This function uses a non-reentrant model
 30137 ;;
 30138                           
 30139                           	psect	text96
 30140  017E2C                     __ptext96:
 30141                           	opt stack 0
 30142  017E2C                     i2___llmod:
 30143                           	opt stack 16
 30144                           
 30145                           ;incstack = 0
 30146  017E2C  5012               	movf	i2___llmod@divisor,w,c
 30147  017E2E  1013               	iorwf	i2___llmod@divisor+1,w,c
 30148  017E30  1014               	iorwf	i2___llmod@divisor+2,w,c
 30149  017E32  1015               	iorwf	i2___llmod@divisor+3,w,c
 30150  017E34  B4D8               	btfsc	status,2,c
 30151  017E36  D024               	goto	i2l1971
 30152  017E38  0E01               	movlw	1
 30153  017E3A  6E16               	movwf	i2___llmod@counter,c
 30154  017E3C  D006               	goto	i2l1966
 30155  017E3E  90D8               	bcf	status,0,c
 30156  017E40  3612               	rlcf	i2___llmod@divisor,f,c
 30157  017E42  3613               	rlcf	i2___llmod@divisor+1,f,c
 30158  017E44  3614               	rlcf	i2___llmod@divisor+2,f,c
 30159  017E46  3615               	rlcf	i2___llmod@divisor+3,f,c
 30160  017E48  2A16               	incf	i2___llmod@counter,f,c
 30161  017E4A                     i2l1966:
 30162  017E4A  AE15               	btfss	i2___llmod@divisor+3,7,c
 30163  017E4C  D7F8               	goto	i2l1967
 30164  017E4E                     i2u1715_40:
 30165  017E4E  5012               	movf	i2___llmod@divisor,w,c
 30166  017E50  5C0E               	subwf	i2___llmod@dividend,w,c
 30167  017E52  5013               	movf	i2___llmod@divisor+1,w,c
 30168  017E54  580F               	subwfb	i2___llmod@dividend+1,w,c
 30169  017E56  5014               	movf	i2___llmod@divisor+2,w,c
 30170  017E58  5810               	subwfb	i2___llmod@dividend+2,w,c
 30171  017E5A  5015               	movf	i2___llmod@divisor+3,w,c
 30172  017E5C  5811               	subwfb	i2___llmod@dividend+3,w,c
 30173  017E5E  A0D8               	btfss	status,0,c
 30174  017E60  D008               	goto	i2l1970
 30175  017E62  5012               	movf	i2___llmod@divisor,w,c
 30176  017E64  5E0E               	subwf	i2___llmod@dividend,f,c
 30177  017E66  5013               	movf	i2___llmod@divisor+1,w,c
 30178  017E68  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 30179  017E6A  5014               	movf	i2___llmod@divisor+2,w,c
 30180  017E6C  5A10               	subwfb	i2___llmod@dividend+2,f,c
 30181  017E6E  5015               	movf	i2___llmod@divisor+3,w,c
 30182  017E70  5A11               	subwfb	i2___llmod@dividend+3,f,c
 30183  017E72                     i2l1970:
 30184  017E72  90D8               	bcf	status,0,c
 30185  017E74  3215               	rrcf	i2___llmod@divisor+3,f,c
 30186  017E76  3214               	rrcf	i2___llmod@divisor+2,f,c
 30187  017E78  3213               	rrcf	i2___llmod@divisor+1,f,c
 30188  017E7A  3212               	rrcf	i2___llmod@divisor,f,c
 30189  017E7C  2E16               	decfsz	i2___llmod@counter,f,c
 30190  017E7E  D7E7               	goto	i2u1715_40
 30191  017E80                     i2l1971:
 30192  017E80  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 30193  017E84  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 30194  017E88  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 30195  017E8C  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 30196  017E90  0012               	return		;funcret
 30197  017E92                     __end_ofi2___llmod:
 30198                           	opt stack 0
 30199                           tosu	equ	0xFFF
 30200                           tosh	equ	0xFFE
 30201                           tosl	equ	0xFFD
 30202                           pclatu	equ	0xFFB
 30203                           pclath	equ	0xFFA
 30204                           tblptru	equ	0xFF8
 30205                           tblptrh	equ	0xFF7
 30206                           tblptrl	equ	0xFF6
 30207                           tablat	equ	0xFF5
 30208                           prodh	equ	0xFF4
 30209                           prodl	equ	0xFF3
 30210                           intcon	equ	0xFF2
 30211                           indf0	equ	0xFEF
 30212                           postinc0	equ	0xFEE
 30213                           fsr0h	equ	0xFEA
 30214                           fsr0l	equ	0xFE9
 30215                           wreg	equ	0xFE8
 30216                           indf1	equ	0xFE7
 30217                           postdec1	equ	0xFE5
 30218                           plusw1	equ	0xFE3
 30219                           fsr1h	equ	0xFE2
 30220                           fsr1l	equ	0xFE1
 30221                           bsr	equ	0xFE0
 30222                           indf2	equ	0xFDF
 30223                           postinc2	equ	0xFDE
 30224                           postdec2	equ	0xFDD
 30225                           plusw2	equ	0xFDB
 30226                           fsr2h	equ	0xFDA
 30227                           fsr2l	equ	0xFD9
 30228                           status	equ	0xFD8
 30229                           
 30230 ;; *************** function i2___lldiv *****************
 30231 ;; Defined at:
 30232 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 30233 ;; Parameters:    Size  Location     Type
 30234 ;;  dividend        4    0[COMRAM] unsigned long 
 30235 ;;  divisor         4    4[COMRAM] unsigned long 
 30236 ;; Auto vars:     Size  Location     Type
 30237 ;;  __lldiv         4    8[COMRAM] unsigned long 
 30238 ;;  __lldiv         1   12[COMRAM] unsigned char 
 30239 ;; Return value:  Size  Location     Type
 30240 ;;                  4    0[COMRAM] unsigned long 
 30241 ;; Registers used:
 30242 ;;		wreg, status,2, status,0
 30243 ;; Tracked objects:
 30244 ;;		On entry : 0/0
 30245 ;;		On exit  : 0/0
 30246 ;;		Unchanged: 0/0
 30247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30248 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30249 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30251 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30252 ;;Total ram usage:       13 bytes
 30253 ;; Hardware stack levels used:    1
 30254 ;; This function calls:
 30255 ;;		Nothing
 30256 ;; This function is called by:
 30257 ;;		i2_printf
 30258 ;; This function uses a non-reentrant model
 30259 ;;
 30260                           
 30261                           	psect	text97
 30262  017A2A                     __ptext97:
 30263                           	opt stack 0
 30264  017A2A                     i2___lldiv:
 30265                           	opt stack 16
 30266                           
 30267                           ;incstack = 0
 30268  017A2A  0E00               	movlw	0
 30269  017A2C  6E09               	movwf	i2___lldiv@quotient,c
 30270  017A2E  0E00               	movlw	0
 30271  017A30  6E0A               	movwf	i2___lldiv@quotient+1,c
 30272  017A32  0E00               	movlw	0
 30273  017A34  6E0B               	movwf	i2___lldiv@quotient+2,c
 30274  017A36  0E00               	movlw	0
 30275  017A38  6E0C               	movwf	i2___lldiv@quotient+3,c
 30276  017A3A  5005               	movf	i2___lldiv@divisor,w,c
 30277  017A3C  1006               	iorwf	i2___lldiv@divisor+1,w,c
 30278  017A3E  1007               	iorwf	i2___lldiv@divisor+2,w,c
 30279  017A40  1008               	iorwf	i2___lldiv@divisor+3,w,c
 30280  017A42  B4D8               	btfsc	status,2,c
 30281  017A44  D02A               	goto	i2l1961
 30282  017A46  0E01               	movlw	1
 30283  017A48  6E0D               	movwf	i2___lldiv@counter,c
 30284  017A4A  D006               	goto	i2l1956
 30285  017A4C  90D8               	bcf	status,0,c
 30286  017A4E  3605               	rlcf	i2___lldiv@divisor,f,c
 30287  017A50  3606               	rlcf	i2___lldiv@divisor+1,f,c
 30288  017A52  3607               	rlcf	i2___lldiv@divisor+2,f,c
 30289  017A54  3608               	rlcf	i2___lldiv@divisor+3,f,c
 30290  017A56  2A0D               	incf	i2___lldiv@counter,f,c
 30291  017A58                     i2l1956:
 30292  017A58  AE08               	btfss	i2___lldiv@divisor+3,7,c
 30293  017A5A  D7F8               	goto	i2l1957
 30294  017A5C                     i2u1712_40:
 30295  017A5C  90D8               	bcf	status,0,c
 30296  017A5E  3609               	rlcf	i2___lldiv@quotient,f,c
 30297  017A60  360A               	rlcf	i2___lldiv@quotient+1,f,c
 30298  017A62  360B               	rlcf	i2___lldiv@quotient+2,f,c
 30299  017A64  360C               	rlcf	i2___lldiv@quotient+3,f,c
 30300  017A66  5005               	movf	i2___lldiv@divisor,w,c
 30301  017A68  5C01               	subwf	i2___lldiv@dividend,w,c
 30302  017A6A  5006               	movf	i2___lldiv@divisor+1,w,c
 30303  017A6C  5802               	subwfb	i2___lldiv@dividend+1,w,c
 30304  017A6E  5007               	movf	i2___lldiv@divisor+2,w,c
 30305  017A70  5803               	subwfb	i2___lldiv@dividend+2,w,c
 30306  017A72  5008               	movf	i2___lldiv@divisor+3,w,c
 30307  017A74  5804               	subwfb	i2___lldiv@dividend+3,w,c
 30308  017A76  A0D8               	btfss	status,0,c
 30309  017A78  D009               	goto	i2l1960
 30310  017A7A  5005               	movf	i2___lldiv@divisor,w,c
 30311  017A7C  5E01               	subwf	i2___lldiv@dividend,f,c
 30312  017A7E  5006               	movf	i2___lldiv@divisor+1,w,c
 30313  017A80  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 30314  017A82  5007               	movf	i2___lldiv@divisor+2,w,c
 30315  017A84  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 30316  017A86  5008               	movf	i2___lldiv@divisor+3,w,c
 30317  017A88  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 30318  017A8A  8009               	bsf	i2___lldiv@quotient,0,c
 30319  017A8C                     i2l1960:
 30320  017A8C  90D8               	bcf	status,0,c
 30321  017A8E  3208               	rrcf	i2___lldiv@divisor+3,f,c
 30322  017A90  3207               	rrcf	i2___lldiv@divisor+2,f,c
 30323  017A92  3206               	rrcf	i2___lldiv@divisor+1,f,c
 30324  017A94  3205               	rrcf	i2___lldiv@divisor,f,c
 30325  017A96  2E0D               	decfsz	i2___lldiv@counter,f,c
 30326  017A98  D7E1               	goto	i2u1712_40
 30327  017A9A                     i2l1961:
 30328  017A9A  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 30329  017A9E  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 30330  017AA2  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 30331  017AA6  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 30332  017AAA  0012               	return		;funcret
 30333  017AAC                     __end_ofi2___lldiv:
 30334                           	opt stack 0
 30335                           tosu	equ	0xFFF
 30336                           tosh	equ	0xFFE
 30337                           tosl	equ	0xFFD
 30338                           pclatu	equ	0xFFB
 30339                           pclath	equ	0xFFA
 30340                           tblptru	equ	0xFF8
 30341                           tblptrh	equ	0xFF7
 30342                           tblptrl	equ	0xFF6
 30343                           tablat	equ	0xFF5
 30344                           prodh	equ	0xFF4
 30345                           prodl	equ	0xFF3
 30346                           intcon	equ	0xFF2
 30347                           indf0	equ	0xFEF
 30348                           postinc0	equ	0xFEE
 30349                           fsr0h	equ	0xFEA
 30350                           fsr0l	equ	0xFE9
 30351                           wreg	equ	0xFE8
 30352                           indf1	equ	0xFE7
 30353                           postdec1	equ	0xFE5
 30354                           plusw1	equ	0xFE3
 30355                           fsr1h	equ	0xFE2
 30356                           fsr1l	equ	0xFE1
 30357                           bsr	equ	0xFE0
 30358                           indf2	equ	0xFDF
 30359                           postinc2	equ	0xFDE
 30360                           postdec2	equ	0xFDD
 30361                           plusw2	equ	0xFDB
 30362                           fsr2h	equ	0xFDA
 30363                           fsr2l	equ	0xFD9
 30364                           status	equ	0xFD8
 30365                           
 30366 ;; *************** function _ADCC_ThresholdISR *****************
 30367 ;; Defined at:
 30368 ;;		line 298 in file "mcc_generated_files/adcc.c"
 30369 ;; Parameters:    Size  Location     Type
 30370 ;;		None
 30371 ;; Auto vars:     Size  Location     Type
 30372 ;;		None
 30373 ;; Return value:  Size  Location     Type
 30374 ;;                  1    wreg      void 
 30375 ;; Registers used:
 30376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30377 ;; Tracked objects:
 30378 ;;		On entry : 0/0
 30379 ;;		On exit  : 0/0
 30380 ;;		Unchanged: 0/0
 30381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30386 ;;Total ram usage:        0 bytes
 30387 ;; Hardware stack levels used:    1
 30388 ;; Hardware stack levels required when called:    7
 30389 ;; This function calls:
 30390 ;;		Absolute function
 30391 ;;		_ADCC_DefaultInterruptHandler
 30392 ;;		_ADCPostProcessingCallback
 30393 ;; This function is called by:
 30394 ;;		_INTERRUPT_InterruptManagerHigh
 30395 ;; This function uses a non-reentrant model
 30396 ;;
 30397                           
 30398                           	psect	text98
 30399  018650                     __ptext98:
 30400                           	opt stack 0
 30401  018650                     _ADCC_ThresholdISR:
 30402                           	opt stack 11
 30403                           
 30404                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 30405                           
 30406                           ;incstack = 0
 30407  018650  010E               	movlb	14	; () banked
 30408  018652  9334               	bcf	52,1,b	;volatile
 30409                           
 30410                           ; BSR set to: 14
 30411                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 30412  018654  0102               	movlb	2	; () banked
 30413  018656  515A               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 30414  018658  115B               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 30415  01865A  115C               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 30416  01865C  B4D8               	btfsc	status,2,c
 30417  01865E  0012               	return	
 30418                           
 30419                           ; BSR set to: 2
 30420                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 30421  018660  D801               	call	i2u2558_48
 30422  018662  0012               	return	
 30423  018664                     i2u2558_48:
 30424  018664  0005               	push	
 30425  018666  6EFA               	movwf	pclath,c
 30426  018668  515A               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 30427  01866A  6EFD               	movwf	tosl,c
 30428  01866C  515B               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 30429  01866E  6EFE               	movwf	tosh,c
 30430  018670  515C               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 30431  018672  6EFF               	movwf	tosu,c
 30432  018674  50FA               	movf	pclath,w,c
 30433  018676  0012               	return		;indir
 30434  018678                     __end_of_ADCC_ThresholdISR:
 30435                           	opt stack 0
 30436                           tosu	equ	0xFFF
 30437                           tosh	equ	0xFFE
 30438                           tosl	equ	0xFFD
 30439                           pclatu	equ	0xFFB
 30440                           pclath	equ	0xFFA
 30441                           tblptru	equ	0xFF8
 30442                           tblptrh	equ	0xFF7
 30443                           tblptrl	equ	0xFF6
 30444                           tablat	equ	0xFF5
 30445                           prodh	equ	0xFF4
 30446                           prodl	equ	0xFF3
 30447                           intcon	equ	0xFF2
 30448                           indf0	equ	0xFEF
 30449                           postinc0	equ	0xFEE
 30450                           fsr0h	equ	0xFEA
 30451                           fsr0l	equ	0xFE9
 30452                           wreg	equ	0xFE8
 30453                           indf1	equ	0xFE7
 30454                           postdec1	equ	0xFE5
 30455                           plusw1	equ	0xFE3
 30456                           fsr1h	equ	0xFE2
 30457                           fsr1l	equ	0xFE1
 30458                           bsr	equ	0xFE0
 30459                           indf2	equ	0xFDF
 30460                           postinc2	equ	0xFDE
 30461                           postdec2	equ	0xFDD
 30462                           plusw2	equ	0xFDB
 30463                           fsr2h	equ	0xFDA
 30464                           fsr2l	equ	0xFD9
 30465                           status	equ	0xFD8
 30466                           
 30467 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 30468 ;; Defined at:
 30469 ;;		line 310 in file "mcc_generated_files/adcc.c"
 30470 ;; Parameters:    Size  Location     Type
 30471 ;;		None
 30472 ;; Auto vars:     Size  Location     Type
 30473 ;;		None
 30474 ;; Return value:  Size  Location     Type
 30475 ;;                  1    wreg      void 
 30476 ;; Registers used:
 30477 ;;		None
 30478 ;; Tracked objects:
 30479 ;;		On entry : 0/0
 30480 ;;		On exit  : 0/0
 30481 ;;		Unchanged: 0/0
 30482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30487 ;;Total ram usage:        0 bytes
 30488 ;; Hardware stack levels used:    1
 30489 ;; This function calls:
 30490 ;;		Nothing
 30491 ;; This function is called by:
 30492 ;;		_ADCC_Initialize
 30493 ;;		_ADCC_ThresholdISR
 30494 ;; This function uses a non-reentrant model
 30495 ;;
 30496                           
 30497                           	psect	text99
 30498  01893C                     __ptext99:
 30499                           	opt stack 0
 30500  01893C                     _ADCC_DefaultInterruptHandler:
 30501                           	opt stack 17
 30502                           
 30503                           ;incstack = 0
 30504  01893C  0012               	return		;funcret
 30505  01893E                     __end_of_ADCC_DefaultInterruptHandler:
 30506                           	opt stack 0
 30507                           tosu	equ	0xFFF
 30508                           tosh	equ	0xFFE
 30509                           tosl	equ	0xFFD
 30510                           pclatu	equ	0xFFB
 30511                           pclath	equ	0xFFA
 30512                           tblptru	equ	0xFF8
 30513                           tblptrh	equ	0xFF7
 30514                           tblptrl	equ	0xFF6
 30515                           tablat	equ	0xFF5
 30516                           prodh	equ	0xFF4
 30517                           prodl	equ	0xFF3
 30518                           intcon	equ	0xFF2
 30519                           indf0	equ	0xFEF
 30520                           postinc0	equ	0xFEE
 30521                           fsr0h	equ	0xFEA
 30522                           fsr0l	equ	0xFE9
 30523                           wreg	equ	0xFE8
 30524                           indf1	equ	0xFE7
 30525                           postdec1	equ	0xFE5
 30526                           plusw1	equ	0xFE3
 30527                           fsr1h	equ	0xFE2
 30528                           fsr1l	equ	0xFE1
 30529                           bsr	equ	0xFE0
 30530                           indf2	equ	0xFDF
 30531                           postinc2	equ	0xFDE
 30532                           postdec2	equ	0xFDD
 30533                           plusw2	equ	0xFDB
 30534                           fsr2h	equ	0xFDA
 30535                           fsr2l	equ	0xFD9
 30536                           status	equ	0xFD8
 30537                           
 30538 ;; *************** function _ADCPostProcessingCallback *****************
 30539 ;; Defined at:
 30540 ;;		line 161 in file "main.c"
 30541 ;; Parameters:    Size  Location     Type
 30542 ;;		None
 30543 ;; Auto vars:     Size  Location     Type
 30544 ;;  current_adc_    1  117[BANK0 ] enum E17425
 30545 ;; Return value:  Size  Location     Type
 30546 ;;                  1    wreg      void 
 30547 ;; Registers used:
 30548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30549 ;; Tracked objects:
 30550 ;;		On entry : 0/0
 30551 ;;		On exit  : 0/0
 30552 ;;		Unchanged: 0/0
 30553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30555 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30557 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30558 ;;Total ram usage:       21 bytes
 30559 ;; Hardware stack levels used:    1
 30560 ;; Hardware stack levels required when called:    6
 30561 ;; This function calls:
 30562 ;;		_ADCC_GetConversionResult
 30563 ;;		_ADCC_GetFilterValue
 30564 ;;		_ADCC_HasAccumulatorOverflowed
 30565 ;;		_ADCC_StopConversion
 30566 ;;		_abs
 30567 ;;		_currentMeasuredToPeak
 30568 ;;		_peakToRMS
 30569 ;;		i2_TMR7_StopTimer
 30570 ;;		i2___fladd
 30571 ;;		i2___fldiv
 30572 ;;		i2___flge
 30573 ;;		i2___flmul
 30574 ;;		i2___flneg
 30575 ;;		i2___fltol
 30576 ;;		i2___xxtofl
 30577 ;; This function is called by:
 30578 ;;		_main
 30579 ;;		_ADCC_ThresholdISR
 30580 ;; This function uses a non-reentrant model
 30581 ;;
 30582                           
 30583                           	psect	text100
 30584  012932                     __ptext100:
 30585                           	opt stack 0
 30586  012932                     _ADCPostProcessingCallback:
 30587                           	opt stack 11
 30588                           
 30589                           ;main.c: 164: ADCC_StopConversion();
 30590                           
 30591                           ;incstack = 0
 30592  012932  EC99  F0C4         	call	_ADCC_StopConversion	;wreg free
 30593                           
 30594                           ;main.c: 167: adcc_channel_t current_adc_channel = ADPCH;
 30595  012936  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 30596                           
 30597                           ;main.c: 170: switch (current_adc_channel) {
 30598  01293A  EF71  F099         	goto	i2l957
 30599  01293E                     
 30600                           ;main.c: 174: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 30601  01293E  EC02  F0C4         	call	_ADCC_GetConversionResult	;wreg free
 30602  012942  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 30603  012946  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 30604  01294A  6A07               	clrf	i2___xxtofl@val+2,c
 30605  01294C  6A08               	clrf	i2___xxtofl@val+3,c
 30606  01294E  0E00               	movlw	0
 30607  012950  EC1A  F0B3         	call	i2___xxtofl
 30608  012954  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 30609  012958  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 30610  01295C  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 30611  012960  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 30612  012964  0E0D               	movlw	13
 30613  012966  6E34               	movwf	i2___flmul@a,c
 30614  012968  0E68               	movlw	104
 30615  01296A  6E35               	movwf	i2___flmul@a+1,c
 30616  01296C  0E53               	movlw	83
 30617  01296E  6E36               	movwf	i2___flmul@a+2,c
 30618  012970  0E3B               	movlw	59
 30619  012972  6E37               	movwf	i2___flmul@a+3,c
 30620  012974  EC78  F0A1         	call	i2___flmul	;wreg free
 30621  012978  C030  F1D3         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 30622  01297C  C031  F1D4         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 30623  012980  C032  F1D5         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 30624  012984  C033  F1D6         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 30625                           
 30626                           ;main.c: 176: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 30627  012988  0E0A               	movlw	10
 30628  01298A  6E34               	movwf	i2___flge@ff1,c
 30629  01298C  0ED7               	movlw	215
 30630  01298E  6E35               	movwf	i2___flge@ff1+1,c
 30631  012990  0E23               	movlw	35
 30632  012992  6E36               	movwf	i2___flge@ff1+2,c
 30633  012994  0E3C               	movlw	60
 30634  012996  6E37               	movwf	i2___flge@ff1+3,c
 30635  012998  C1D3  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 30636  01299C  C1D4  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 30637  0129A0  C1D5  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 30638  0129A4  C1D6  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 30639  0129A8  EC41  F0B7         	call	i2___flge	;wreg free
 30640  0129AC  A0D8               	btfss	status,0,c
 30641  0129AE  D005               	goto	i2u1721_40
 30642  0129B0  EC76  F0C4         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 30643  0129B4  0900               	iorlw	0
 30644  0129B6  B4D8               	btfsc	status,2,c
 30645  0129B8  D007               	goto	i2l959
 30646  0129BA                     i2u1721_40:
 30647                           
 30648                           ;main.c: 178: LATFbits.LATF3 = 1;
 30649  0129BA  867E               	bsf	3966,3,c	;volatile
 30650                           
 30651                           ;main.c: 179: adc_error_flag = 1;
 30652  0129BC  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 30653                           
 30654                           ;main.c: 181: PIE5bits.TMR7IE = 0;
 30655  0129BE  010E               	movlb	14	; () banked
 30656  0129C0  9D2E               	bcf	46,6,b	;volatile
 30657                           
 30658                           ; BSR set to: 14
 30659                           ;main.c: 182: TMR7_StopTimer();
 30660  0129C2  EC96  F0C4         	call	i2_TMR7_StopTimer	;wreg free
 30661                           
 30662                           ;main.c: 183: return;
 30663  0129C6  0012               	return	
 30664  0129C8                     i2l959:
 30665                           
 30666                           ;main.c: 185: }
 30667                           ;main.c: 187: next_channel = channel_FVR_buf1;
 30668  0129C8  0E3F               	movlw	63
 30669  0129CA  0101               	movlb	1	; () banked
 30670  0129CC  6FE8               	movwf	_next_channel& (0+255),b
 30671                           
 30672                           ;main.c: 189: break;
 30673  0129CE  0012               	return	
 30674  0129D0                     
 30675                           ;main.c: 194: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 30676                           
 30677                           ; BSR set to: 1
 30678  0129D0  0E0D               	movlw	13
 30679  0129D2  6E34               	movwf	i2___flmul@a,c
 30680  0129D4  0E68               	movlw	104
 30681  0129D6  6E35               	movwf	i2___flmul@a+1,c
 30682  0129D8  0E53               	movlw	83
 30683  0129DA  6E36               	movwf	i2___flmul@a+2,c
 30684  0129DC  0E3B               	movlw	59
 30685  0129DE  6E37               	movwf	i2___flmul@a+3,c
 30686  0129E0  EC02  F0C4         	call	_ADCC_GetConversionResult	;wreg free
 30687  0129E4  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 30688  0129E8  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 30689  0129EC  6A07               	clrf	i2___xxtofl@val+2,c
 30690  0129EE  6A08               	clrf	i2___xxtofl@val+3,c
 30691  0129F0  0E00               	movlw	0
 30692  0129F2  EC1A  F0B3         	call	i2___xxtofl
 30693  0129F6  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 30694  0129FA  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 30695  0129FE  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 30696  012A02  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 30697  012A06  EC78  F0A1         	call	i2___flmul	;wreg free
 30698  012A0A  C030  F056         	movff	?i2___flmul,i2___fladd@b
 30699  012A0E  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 30700  012A12  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 30701  012A16  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 30702  012A1A  C1D3  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 30703  012A1E  C1D4  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 30704  012A22  C1D5  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 30705  012A26  C1D6  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 30706  012A2A  ECBF  F0A4         	call	i2___fladd	;wreg free
 30707  012A2E  C056  F1E4         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 30708  012A32  C057  F1E5         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 30709  012A36  C058  F1E6         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 30710  012A3A  C059  F1E7         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 30711                           
 30712                           ;main.c: 195: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 30713  012A3E  0E6F               	movlw	111
 30714  012A40  6E13               	movwf	i2___fldiv@b,c
 30715  012A42  0E12               	movlw	18
 30716  012A44  6E14               	movwf	i2___fldiv@b+1,c
 30717  012A46  0E03               	movlw	3
 30718  012A48  6E15               	movwf	i2___fldiv@b+2,c
 30719  012A4A  0E40               	movlw	64
 30720  012A4C  6E16               	movwf	i2___fldiv@b+3,c
 30721  012A4E  C1E4  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 30722  012A52  C1E5  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 30723  012A56  C1E6  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 30724  012A5A  C1E7  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 30725  012A5E  EC7F  F0AD         	call	i2___fldiv	;wreg free
 30726  012A62  C013  F250         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 30727  012A66  C014  F251         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 30728  012A6A  C015  F252         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 30729  012A6E  C016  F253         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 30730                           
 30731                           ;main.c: 197: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 30732  012A72  0E00               	movlw	0
 30733  012A74  6E34               	movwf	i2___flge@ff1,c
 30734  012A76  0E00               	movlw	0
 30735  012A78  6E35               	movwf	i2___flge@ff1+1,c
 30736  012A7A  0E20               	movlw	32
 30737  012A7C  6E36               	movwf	i2___flge@ff1+2,c
 30738  012A7E  0E40               	movlw	64
 30739  012A80  6E37               	movwf	i2___flge@ff1+3,c
 30740  012A82  C1E4  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 30741  012A86  C1E5  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 30742  012A8A  C1E6  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 30743  012A8E  C1E7  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 30744  012A92  EC41  F0B7         	call	i2___flge	;wreg free
 30745  012A96  A0D8               	btfss	status,0,c
 30746  012A98  D019               	goto	i2u1724_40
 30747  012A9A  C1E4  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 30748  012A9E  C1E5  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 30749  012AA2  C1E6  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 30750  012AA6  C1E7  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 30751  012AAA  0E00               	movlw	0
 30752  012AAC  6E38               	movwf	i2___flge@ff2,c
 30753  012AAE  0E00               	movlw	0
 30754  012AB0  6E39               	movwf	i2___flge@ff2+1,c
 30755  012AB2  0E00               	movlw	0
 30756  012AB4  6E3A               	movwf	i2___flge@ff2+2,c
 30757  012AB6  0E40               	movlw	64
 30758  012AB8  6E3B               	movwf	i2___flge@ff2+3,c
 30759  012ABA  EC41  F0B7         	call	i2___flge	;wreg free
 30760  012ABE  A0D8               	btfss	status,0,c
 30761  012AC0  D005               	goto	i2u1724_40
 30762  012AC2  EC76  F0C4         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 30763  012AC6  0900               	iorlw	0
 30764  012AC8  B4D8               	btfsc	status,2,c
 30765  012ACA  D007               	goto	i2l965
 30766  012ACC                     i2u1724_40:
 30767                           
 30768                           ;main.c: 199: LATFbits.LATF3 = 1;
 30769  012ACC  867E               	bsf	3966,3,c	;volatile
 30770                           
 30771                           ;main.c: 200: adc_error_flag = 1;
 30772  012ACE  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 30773                           
 30774                           ;main.c: 202: PIE5bits.TMR7IE = 0;
 30775  012AD0  010E               	movlb	14	; () banked
 30776  012AD2  9D2E               	bcf	46,6,b	;volatile
 30777                           
 30778                           ; BSR set to: 14
 30779                           ;main.c: 203: TMR7_StopTimer();
 30780  012AD4  EC96  F0C4         	call	i2_TMR7_StopTimer	;wreg free
 30781                           
 30782                           ;main.c: 204: return;
 30783  012AD8  0012               	return	
 30784  012ADA                     i2l965:
 30785                           
 30786                           ;main.c: 206: }
 30787                           ;main.c: 208: next_channel = POS3P3_ADC;
 30788  012ADA  0E22               	movlw	34
 30789  012ADC  0101               	movlb	1	; () banked
 30790  012ADE  6FE8               	movwf	_next_channel& (0+255),b
 30791                           
 30792                           ;main.c: 210: break;
 30793  012AE0  0012               	return	
 30794  012AE2                     
 30795                           ;main.c: 215: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 30796                           
 30797                           ; BSR set to: 1
 30798  012AE2  C250  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 30799  012AE6  C251  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 30800  012AEA  C252  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 30801  012AEE  C253  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 30802  012AF2  ECF8  F0C3         	call	_ADCC_GetFilterValue	;wreg free
 30803  012AF6  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 30804  012AFA  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 30805  012AFE  6A07               	clrf	i2___xxtofl@val+2,c
 30806  012B00  6A08               	clrf	i2___xxtofl@val+3,c
 30807  012B02  0E00               	movlw	0
 30808  012B04  EC1A  F0B3         	call	i2___xxtofl
 30809  012B08  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 30810  012B0C  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 30811  012B10  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 30812  012B14  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 30813  012B18  EC78  F0A1         	call	i2___flmul	;wreg free
 30814  012B1C  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4088
 30815  012B20  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4088+1
 30816  012B24  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4088+2
 30817  012B28  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4088+3
 30818                           
 30819                           ;main.c: 215: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 30820  012B2C  C0D6  F030         	movff	_ADCPostProcessingCallback$4088,i2___flmul@b
 30821  012B30  C0D7  F031         	movff	_ADCPostProcessingCallback$4088+1,i2___flmul@b+1
 30822  012B34  C0D8  F032         	movff	_ADCPostProcessingCallback$4088+2,i2___flmul@b+2
 30823  012B38  C0D9  F033         	movff	_ADCPostProcessingCallback$4088+3,i2___flmul@b+3
 30824  012B3C  0E0D               	movlw	13
 30825  012B3E  6E34               	movwf	i2___flmul@a,c
 30826  012B40  0E68               	movlw	104
 30827  012B42  6E35               	movwf	i2___flmul@a+1,c
 30828  012B44  0ED3               	movlw	211
 30829  012B46  6E36               	movwf	i2___flmul@a+2,c
 30830  012B48  0E3B               	movlw	59
 30831  012B4A  6E37               	movwf	i2___flmul@a+3,c
 30832  012B4C  EC78  F0A1         	call	i2___flmul	;wreg free
 30833  012B50  C030  F0F6         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 30834  012B54  C031  F0F7         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 30835  012B58  C032  F0F8         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 30836  012B5C  C033  F0F9         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 30837                           
 30838                           ;main.c: 217: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 30839  012B60  0E00               	movlw	0
 30840  012B62  6E34               	movwf	i2___flge@ff1,c
 30841  012B64  0E00               	movlw	0
 30842  012B66  6E35               	movwf	i2___flge@ff1+1,c
 30843  012B68  0E60               	movlw	96
 30844  012B6A  6E36               	movwf	i2___flge@ff1+2,c
 30845  012B6C  0E40               	movlw	64
 30846  012B6E  6E37               	movwf	i2___flge@ff1+3,c
 30847  012B70  C0F6  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 30848  012B74  C0F7  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 30849  012B78  C0F8  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 30850  012B7C  C0F9  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 30851  012B80  EC41  F0B7         	call	i2___flge	;wreg free
 30852  012B84  A0D8               	btfss	status,0,c
 30853  012B86  D005               	goto	i2u1726_40
 30854  012B88  EC76  F0C4         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 30855  012B8C  0900               	iorlw	0
 30856  012B8E  B4D8               	btfsc	status,2,c
 30857  012B90  D007               	goto	i2l969
 30858  012B92                     i2u1726_40:
 30859                           
 30860                           ;main.c: 219: LATFbits.LATF3 = 1;
 30861  012B92  867E               	bsf	3966,3,c	;volatile
 30862                           
 30863                           ;main.c: 220: adc_error_flag = 1;
 30864  012B94  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 30865                           
 30866                           ;main.c: 222: PIE5bits.TMR7IE = 0;
 30867  012B96  010E               	movlb	14	; () banked
 30868  012B98  9D2E               	bcf	46,6,b	;volatile
 30869                           
 30870                           ; BSR set to: 14
 30871                           ;main.c: 223: TMR7_StopTimer();
 30872  012B9A  EC96  F0C4         	call	i2_TMR7_StopTimer	;wreg free
 30873                           
 30874                           ;main.c: 224: return;
 30875  012B9E  0012               	return	
 30876  012BA0                     i2l969:
 30877                           
 30878                           ;main.c: 226: }
 30879                           ;main.c: 228: next_channel = ISNS_ADC;
 30880  012BA0  0E00               	movlw	0
 30881  012BA2  0101               	movlb	1	; () banked
 30882  012BA4  6FE8               	movwf	_next_channel& (0+255),b
 30883                           
 30884                           ;main.c: 230: break;
 30885  012BA6  0012               	return	
 30886  012BA8                     
 30887                           ;main.c: 235: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 30888                           
 30889                           ; BSR set to: 1
 30890  012BA8  0E00               	movlw	0
 30891  012BAA  6E17               	movwf	i2___fldiv@a,c
 30892  012BAC  0EC0               	movlw	192
 30893  012BAE  6E18               	movwf	i2___fldiv@a+1,c
 30894  012BB0  0E7F               	movlw	127
 30895  012BB2  6E19               	movwf	i2___fldiv@a+2,c
 30896  012BB4  0E44               	movlw	68
 30897  012BB6  6E1A               	movwf	i2___fldiv@a+3,c
 30898  012BB8  C0F6  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 30899  012BBC  C0F7  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 30900  012BC0  C0F8  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 30901  012BC4  C0F9  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 30902  012BC8  EC7F  F0AD         	call	i2___fldiv	;wreg free
 30903  012BCC  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 30904  012BD0  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 30905  012BD4  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 30906  012BD8  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 30907  012BDC  ECF8  F0C3         	call	_ADCC_GetFilterValue	;wreg free
 30908  012BE0  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 30909  012BE4  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 30910  012BE8  6A07               	clrf	i2___xxtofl@val+2,c
 30911  012BEA  6A08               	clrf	i2___xxtofl@val+3,c
 30912  012BEC  0E00               	movlw	0
 30913  012BEE  EC1A  F0B3         	call	i2___xxtofl
 30914  012BF2  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 30915  012BF6  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 30916  012BFA  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 30917  012BFE  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 30918  012C02  EC78  F0A1         	call	i2___flmul	;wreg free
 30919  012C06  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4088
 30920  012C0A  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4088+1
 30921  012C0E  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4088+2
 30922  012C12  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4088+3
 30923                           
 30924                           ;main.c: 235: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 30925  012C16  C0D6  F030         	movff	_ADCPostProcessingCallback$4088,i2___flmul@b
 30926  012C1A  C0D7  F031         	movff	_ADCPostProcessingCallback$4088+1,i2___flmul@b+1
 30927  012C1E  C0D8  F032         	movff	_ADCPostProcessingCallback$4088+2,i2___flmul@b+2
 30928  012C22  C0D9  F033         	movff	_ADCPostProcessingCallback$4088+3,i2___flmul@b+3
 30929  012C26  0E35               	movlw	53
 30930  012C28  6E34               	movwf	i2___flmul@a,c
 30931  012C2A  0E5E               	movlw	94
 30932  012C2C  6E35               	movwf	i2___flmul@a+1,c
 30933  012C2E  0EF2               	movlw	242
 30934  012C30  6E36               	movwf	i2___flmul@a+2,c
 30935  012C32  0E3F               	movlw	63
 30936  012C34  6E37               	movwf	i2___flmul@a+3,c
 30937  012C36  EC78  F0A1         	call	i2___flmul	;wreg free
 30938  012C3A  C030  F1C3         	movff	?i2___flmul,_Imeas	;volatile
 30939  012C3E  C031  F1C4         	movff	?i2___flmul+1,_Imeas+1	;volatile
 30940  012C42  C032  F1C5         	movff	?i2___flmul+2,_Imeas+2	;volatile
 30941  012C46  C033  F1C6         	movff	?i2___flmul+3,_Imeas+3	;volatile
 30942                           
 30943                           ;main.c: 239: if (LATGbits.LATG0 != 1) {
 30944  012C4A  B07F               	btfsc	3967,0,c	;volatile
 30945  012C4C  D128               	goto	i2l973
 30946                           
 30947                           ;main.c: 244: if (load_enable) {
 30948  012C4E  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 30949  012C50  D0CD               	goto	i2l974
 30950                           
 30951                           ;main.c: 247: if (dimming_period < 0x7FEE) {
 30952  012C52  0EEE               	movlw	238
 30953  012C54  0100               	movlb	0	; () banked
 30954  012C56  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 30955  012C58  0E7F               	movlw	127
 30956  012C5A  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 30957  012C5C  B0D8               	btfsc	status,0,c
 30958  012C5E  D052               	goto	i2l975
 30959                           
 30960                           ; BSR set to: 0
 30961                           ;main.c: 249: Ipk = Imeas;
 30962  012C60  C1C3  F1C7         	movff	_Imeas,_Ipk	;volatile
 30963  012C64  C1C4  F1C8         	movff	_Imeas+1,_Ipk+1	;volatile
 30964  012C68  C1C5  F1C9         	movff	_Imeas+2,_Ipk+2	;volatile
 30965  012C6C  C1C6  F1CA         	movff	_Imeas+3,_Ipk+3	;volatile
 30966                           
 30967                           ; BSR set to: 0
 30968                           ;main.c: 250: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 30969  012C70  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 30970  012C74  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 30971  012C78  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 30972  012C7C  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 30973  012C80  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 30974  012C84  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 30975  012C88  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 30976  012C8C  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 30977  012C90  EC30  F0B0         	call	_peakToRMS	;wreg free
 30978  012C94  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4089
 30979  012C98  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4089+1
 30980  012C9C  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4089+2
 30981  012CA0  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4089+3
 30982                           
 30983                           ;main.c: 250: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 30984  012CA4  C2F3  F05A         	movff	_Irms_offset,i2___fladd@a
 30985  012CA8  C2F4  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 30986  012CAC  C2F5  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 30987  012CB0  C2F6  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 30988  012CB4  C0DA  F056         	movff	_ADCPostProcessingCallback$4089,i2___fladd@b
 30989  012CB8  C0DB  F057         	movff	_ADCPostProcessingCallback$4089+1,i2___fladd@b+1
 30990  012CBC  C0DC  F058         	movff	_ADCPostProcessingCallback$4089+2,i2___fladd@b+2
 30991  012CC0  C0DD  F059         	movff	_ADCPostProcessingCallback$4089+3,i2___fladd@b+3
 30992  012CC4  ECBF  F0A4         	call	i2___fladd	;wreg free
 30993  012CC8  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 30994  012CCC  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 30995  012CD0  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 30996  012CD4  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 30997  012CD8  EC49  F0B9         	call	i2___fltol	;wreg free
 30998  012CDC  C06C  F076         	movff	?i2___fltol,abs@a
 30999  012CE0  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 31000  012CE4  ECEB  F0C2         	call	_abs	;wreg free
 31001  012CE8  0100               	movlb	0	; () banked
 31002  012CEA  C076  F005         	movff	?_abs,i2___xxtofl@val
 31003  012CEE  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 31004  012CF2  0E00               	movlw	0
 31005  012CF4  BE06               	btfsc	i2___xxtofl@val+1,7,c
 31006  012CF6  0EFF               	movlw	-1
 31007  012CF8  6E07               	movwf	i2___xxtofl@val+2,c
 31008  012CFA  6E08               	movwf	i2___xxtofl@val+3,c
 31009  012CFC  0E01               	movlw	1
 31010  012CFE  EC1A  F0B3         	call	i2___xxtofl
 31011  012D02  D063               	goto	L16
 31012  012D04                     i2l975:
 31013                           
 31014                           ;main.c: 255: else {
 31015                           ;main.c: 257: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 31016  012D04  C1C3  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 31017  012D08  C1C4  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 31018  012D0C  C1C5  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 31019  012D10  C1C6  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 31020  012D14  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 31021  012D18  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 31022  012D1C  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 31023  012D20  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 31024  012D24  EC56  F0BD         	call	_currentMeasuredToPeak	;wreg free
 31025  012D28  C099  F1C7         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 31026  012D2C  C09A  F1C8         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 31027  012D30  C09B  F1C9         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 31028  012D34  C09C  F1CA         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 31029                           
 31030                           ;main.c: 258: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 31031  012D38  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 31032  012D3C  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 31033  012D40  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 31034  012D44  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 31035  012D48  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 31036  012D4C  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 31037  012D50  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 31038  012D54  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 31039  012D58  EC30  F0B0         	call	_peakToRMS	;wreg free
 31040  012D5C  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4089
 31041  012D60  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4089+1
 31042  012D64  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4089+2
 31043  012D68  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4089+3
 31044                           
 31045                           ;main.c: 258: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 31046  012D6C  C2F3  F05A         	movff	_Irms_offset,i2___fladd@a
 31047  012D70  C2F4  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 31048  012D74  C2F5  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 31049  012D78  C2F6  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 31050  012D7C  C0DA  F056         	movff	_ADCPostProcessingCallback$4089,i2___fladd@b
 31051  012D80  C0DB  F057         	movff	_ADCPostProcessingCallback$4089+1,i2___fladd@b+1
 31052  012D84  C0DC  F058         	movff	_ADCPostProcessingCallback$4089+2,i2___fladd@b+2
 31053  012D88  C0DD  F059         	movff	_ADCPostProcessingCallback$4089+3,i2___fladd@b+3
 31054  012D8C  ECBF  F0A4         	call	i2___fladd	;wreg free
 31055  012D90  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 31056  012D94  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 31057  012D98  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 31058  012D9C  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 31059  012DA0  EC49  F0B9         	call	i2___fltol	;wreg free
 31060  012DA4  C06C  F076         	movff	?i2___fltol,abs@a
 31061  012DA8  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 31062  012DAC  ECEB  F0C2         	call	_abs	;wreg free
 31063  012DB0  0100               	movlb	0	; () banked
 31064  012DB2  C076  F005         	movff	?_abs,i2___xxtofl@val
 31065  012DB6  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 31066  012DBA  0E00               	movlw	0
 31067  012DBC  BE06               	btfsc	i2___xxtofl@val+1,7,c
 31068  012DBE  0EFF               	movlw	-1
 31069  012DC0  6E07               	movwf	i2___xxtofl@val+2,c
 31070  012DC2  6E08               	movwf	i2___xxtofl@val+3,c
 31071  012DC4  0E01               	movlw	1
 31072  012DC6  EC1A  F0B3         	call	i2___xxtofl
 31073  012DCA                     L16:
 31074  012DCA  C005  F1BF         	movff	?i2___xxtofl,_Irms	;volatile
 31075  012DCE  C006  F1C0         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 31076  012DD2  C007  F1C1         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 31077  012DD6  C008  F1C2         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 31078                           
 31079                           ;main.c: 260: }
 31080                           ;main.c: 262: Vpk = Vpk_const;
 31081  012DDA  C2F7  F24C         	movff	_Vpk_const,_Vpk	;volatile
 31082  012DDE  C2F8  F24D         	movff	_Vpk_const+1,_Vpk+1	;volatile
 31083  012DE2  C2F9  F24E         	movff	_Vpk_const+2,_Vpk+2	;volatile
 31084  012DE6  C2FA  F24F         	movff	_Vpk_const+3,_Vpk+3	;volatile
 31085                           
 31086                           ;main.c: 264: }
 31087  012DEA  D02C               	goto	i2l977
 31088  012DEC                     i2l974:
 31089                           
 31090                           ;main.c: 266: else {
 31091                           ;main.c: 268: Ipk = 0.0;
 31092  012DEC  0E00               	movlw	0
 31093  012DEE  0101               	movlb	1	; () banked
 31094  012DF0  6FC7               	movwf	_Ipk& (0+255),b	;volatile
 31095  012DF2  0E00               	movlw	0
 31096  012DF4  6FC8               	movwf	(_Ipk+1)& (0+255),b	;volatile
 31097  012DF6  0E00               	movlw	0
 31098  012DF8  6FC9               	movwf	(_Ipk+2)& (0+255),b	;volatile
 31099  012DFA  0E00               	movlw	0
 31100  012DFC  6FCA               	movwf	(_Ipk+3)& (0+255),b	;volatile
 31101                           
 31102                           ;main.c: 269: Vpk = 0.0;
 31103  012DFE  0E00               	movlw	0
 31104  012E00  0102               	movlb	2	; () banked
 31105  012E02  6F4C               	movwf	_Vpk& (0+255),b	;volatile
 31106  012E04  0E00               	movlw	0
 31107  012E06  6F4D               	movwf	(_Vpk+1)& (0+255),b	;volatile
 31108  012E08  0E00               	movlw	0
 31109  012E0A  6F4E               	movwf	(_Vpk+2)& (0+255),b	;volatile
 31110  012E0C  0E00               	movlw	0
 31111  012E0E  6F4F               	movwf	(_Vpk+3)& (0+255),b	;volatile
 31112                           
 31113                           ; BSR set to: 2
 31114                           ;main.c: 270: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 31115  012E10  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 31116  012E14  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 31117  012E18  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 31118  012E1C  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 31119  012E20  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 31120  012E24  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 31121  012E28  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 31122  012E2C  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 31123  012E30  EC30  F0B0         	call	_peakToRMS	;wreg free
 31124  012E34  C0B1  F1BF         	movff	?_peakToRMS,_Irms	;volatile
 31125  012E38  C0B2  F1C0         	movff	?_peakToRMS+1,_Irms+1	;volatile
 31126  012E3C  C0B3  F1C1         	movff	?_peakToRMS+2,_Irms+2	;volatile
 31127  012E40  C0B4  F1C2         	movff	?_peakToRMS+3,_Irms+3	;volatile
 31128  012E44                     i2l977:
 31129                           
 31130                           ;main.c: 272: }
 31131                           ;main.c: 274: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 31132  012E44  C24C  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 31133  012E48  C24D  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 31134  012E4C  C24E  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 31135  012E50  C24F  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 31136  012E54  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 31137  012E58  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 31138  012E5C  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 31139  012E60  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 31140  012E64  EC30  F0B0         	call	_peakToRMS	;wreg free
 31141  012E68  C0B1  F1BB         	movff	?_peakToRMS,_Vrms	;volatile
 31142  012E6C  C0B2  F1BC         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 31143  012E70  C0B3  F1BD         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 31144  012E74  C0B4  F1BE         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 31145                           
 31146                           ;main.c: 275: Avg_Power = Vrms * Irms;
 31147  012E78  C1BB  F030         	movff	_Vrms,i2___flmul@b	;volatile
 31148  012E7C  C1BC  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 31149  012E80  C1BD  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 31150  012E84  C1BE  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 31151  012E88  C1BF  F034         	movff	_Irms,i2___flmul@a	;volatile
 31152  012E8C  C1C0  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 31153  012E90  C1C1  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 31154  012E94  C1C2  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 31155  012E98  EC78  F0A1         	call	i2___flmul	;wreg free
 31156  012E9C  D087               	goto	L17
 31157  012E9E                     i2l973:
 31158                           
 31159                           ;main.c: 280: else {
 31160                           ;main.c: 282: Ipk = Imeas;
 31161  012E9E  C1C3  F1C7         	movff	_Imeas,_Ipk	;volatile
 31162  012EA2  C1C4  F1C8         	movff	_Imeas+1,_Ipk+1	;volatile
 31163  012EA6  C1C5  F1C9         	movff	_Imeas+2,_Ipk+2	;volatile
 31164  012EAA  C1C6  F1CA         	movff	_Imeas+3,_Ipk+3	;volatile
 31165                           
 31166                           ;main.c: 283: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 31167  012EAE  0E00               	movlw	0
 31168  012EB0  0100               	movlb	0	; () banked
 31169  012EB2  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 31170  012EB4  0E00               	movlw	0
 31171  012EB6  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 31172  012EB8  0E00               	movlw	0
 31173  012EBA  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 31174  012EBC  0E00               	movlw	0
 31175  012EBE  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 31176  012EC0  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 31177  012EC4  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 31178  012EC8  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 31179  012ECC  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 31180  012ED0  EC30  F0B0         	call	_peakToRMS	;wreg free
 31181  012ED4  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4089
 31182  012ED8  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4089+1
 31183  012EDC  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4089+2
 31184  012EE0  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4089+3
 31185                           
 31186                           ;main.c: 283: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 31187  012EE4  C2F3  F05A         	movff	_Irms_offset,i2___fladd@a
 31188  012EE8  C2F4  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 31189  012EEC  C2F5  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 31190  012EF0  C2F6  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 31191  012EF4  C0DA  F056         	movff	_ADCPostProcessingCallback$4089,i2___fladd@b
 31192  012EF8  C0DB  F057         	movff	_ADCPostProcessingCallback$4089+1,i2___fladd@b+1
 31193  012EFC  C0DC  F058         	movff	_ADCPostProcessingCallback$4089+2,i2___fladd@b+2
 31194  012F00  C0DD  F059         	movff	_ADCPostProcessingCallback$4089+3,i2___fladd@b+3
 31195  012F04  ECBF  F0A4         	call	i2___fladd	;wreg free
 31196  012F08  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 31197  012F0C  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 31198  012F10  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 31199  012F14  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 31200  012F18  EC49  F0B9         	call	i2___fltol	;wreg free
 31201  012F1C  C06C  F076         	movff	?i2___fltol,abs@a
 31202  012F20  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 31203  012F24  ECEB  F0C2         	call	_abs	;wreg free
 31204  012F28  0100               	movlb	0	; () banked
 31205  012F2A  C076  F005         	movff	?_abs,i2___xxtofl@val
 31206  012F2E  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 31207  012F32  0E00               	movlw	0
 31208  012F34  BE06               	btfsc	i2___xxtofl@val+1,7,c
 31209  012F36  0EFF               	movlw	-1
 31210  012F38  6E07               	movwf	i2___xxtofl@val+2,c
 31211  012F3A  6E08               	movwf	i2___xxtofl@val+3,c
 31212  012F3C  0E01               	movlw	1
 31213  012F3E  EC1A  F0B3         	call	i2___xxtofl
 31214  012F42  C005  F1BF         	movff	?i2___xxtofl,_Irms	;volatile
 31215  012F46  C006  F1C0         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 31216  012F4A  C007  F1C1         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 31217  012F4E  C008  F1C2         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 31218                           
 31219                           ;main.c: 284: Vrms = peakToRMS(Vpk_const, 0.0);
 31220  012F52  C2F7  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 31221  012F56  C2F8  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 31222  012F5A  C2F9  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 31223  012F5E  C2FA  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 31224  012F62  0E00               	movlw	0
 31225  012F64  0100               	movlb	0	; () banked
 31226  012F66  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 31227  012F68  0E00               	movlw	0
 31228  012F6A  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 31229  012F6C  0E00               	movlw	0
 31230  012F6E  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 31231  012F70  0E00               	movlw	0
 31232  012F72  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 31233  012F74  EC30  F0B0         	call	_peakToRMS	;wreg free
 31234  012F78  C0B1  F1BB         	movff	?_peakToRMS,_Vrms	;volatile
 31235  012F7C  C0B2  F1BC         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 31236  012F80  C0B3  F1BD         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 31237  012F84  C0B4  F1BE         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 31238                           
 31239                           ;main.c: 285: Avg_Power = Vrms * Irms;
 31240  012F88  C1BB  F030         	movff	_Vrms,i2___flmul@b	;volatile
 31241  012F8C  C1BC  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 31242  012F90  C1BD  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 31243  012F94  C1BE  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 31244  012F98  C1BF  F034         	movff	_Irms,i2___flmul@a	;volatile
 31245  012F9C  C1C0  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 31246  012FA0  C1C1  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 31247  012FA4  C1C2  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 31248  012FA8  EC78  F0A1         	call	i2___flmul	;wreg free
 31249  012FAC                     L17:
 31250  012FAC  C030  F248         	movff	?i2___flmul,_Avg_Power	;volatile
 31251  012FB0  C031  F249         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 31252  012FB4  C032  F24A         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 31253  012FB8  C033  F24B         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 31254                           
 31255                           ;main.c: 287: }
 31256                           ;main.c: 289: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 31257  012FBC  0E00               	movlw	0
 31258  012FBE  6E34               	movwf	i2___flge@ff1,c
 31259  012FC0  0E00               	movlw	0
 31260  012FC2  6E35               	movwf	i2___flge@ff1+1,c
 31261  012FC4  0EA0               	movlw	160
 31262  012FC6  6E36               	movwf	i2___flge@ff1+2,c
 31263  012FC8  0E40               	movlw	64
 31264  012FCA  6E37               	movwf	i2___flge@ff1+3,c
 31265  012FCC  C1BF  F038         	movff	_Irms,i2___flge@ff2	;volatile
 31266  012FD0  C1C0  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 31267  012FD4  C1C1  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 31268  012FD8  C1C2  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 31269  012FDC  EC41  F0B7         	call	i2___flge	;wreg free
 31270  012FE0  A0D8               	btfss	status,0,c
 31271  012FE2  D005               	goto	i2u1731_40
 31272  012FE4  EC76  F0C4         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 31273  012FE8  0900               	iorlw	0
 31274  012FEA  B4D8               	btfsc	status,2,c
 31275  012FEC  D007               	goto	i2l979
 31276  012FEE                     i2u1731_40:
 31277                           
 31278                           ;main.c: 291: LATFbits.LATF3 = 1;
 31279  012FEE  867E               	bsf	3966,3,c	;volatile
 31280                           
 31281                           ;main.c: 292: adc_error_flag = 1;
 31282  012FF0  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 31283                           
 31284                           ;main.c: 294: PIE5bits.TMR7IE = 0;
 31285  012FF2  010E               	movlb	14	; () banked
 31286  012FF4  9D2E               	bcf	46,6,b	;volatile
 31287                           
 31288                           ; BSR set to: 14
 31289                           ;main.c: 295: TMR7_StopTimer();
 31290  012FF6  EC96  F0C4         	call	i2_TMR7_StopTimer	;wreg free
 31291                           
 31292                           ;main.c: 296: return;
 31293  012FFA  0012               	return	
 31294  012FFC                     i2l979:
 31295                           
 31296                           ;main.c: 298: }
 31297                           ;main.c: 300: next_channel = POS12_ADC;
 31298  012FFC  0E04               	movlw	4
 31299  012FFE  0101               	movlb	1	; () banked
 31300  013000  6FE8               	movwf	_next_channel& (0+255),b
 31301                           
 31302                           ;main.c: 302: break;
 31303  013002  0012               	return	
 31304  013004                     
 31305                           ;main.c: 307: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 31306                           
 31307                           ; BSR set to: 1
 31308  013004  0E00               	movlw	0
 31309  013006  6E17               	movwf	i2___fldiv@a,c
 31310  013008  0EC0               	movlw	192
 31311  01300A  6E18               	movwf	i2___fldiv@a+1,c
 31312  01300C  0E7F               	movlw	127
 31313  01300E  6E19               	movwf	i2___fldiv@a+2,c
 31314  013010  0E44               	movlw	68
 31315  013012  6E1A               	movwf	i2___fldiv@a+3,c
 31316  013014  C0F6  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 31317  013018  C0F7  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 31318  01301C  C0F8  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 31319  013020  C0F9  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 31320  013024  EC7F  F0AD         	call	i2___fldiv	;wreg free
 31321  013028  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 31322  01302C  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 31323  013030  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 31324  013034  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 31325  013038  ECF8  F0C3         	call	_ADCC_GetFilterValue	;wreg free
 31326  01303C  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 31327  013040  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 31328  013044  6A07               	clrf	i2___xxtofl@val+2,c
 31329  013046  6A08               	clrf	i2___xxtofl@val+3,c
 31330  013048  0E00               	movlw	0
 31331  01304A  EC1A  F0B3         	call	i2___xxtofl
 31332  01304E  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 31333  013052  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 31334  013056  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 31335  01305A  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 31336  01305E  EC78  F0A1         	call	i2___flmul	;wreg free
 31337  013062  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4088
 31338  013066  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4088+1
 31339  01306A  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4088+2
 31340  01306E  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4088+3
 31341                           
 31342                           ;main.c: 307: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 31343  013072  C0D6  F030         	movff	_ADCPostProcessingCallback$4088,i2___flmul@b
 31344  013076  C0D7  F031         	movff	_ADCPostProcessingCallback$4088+1,i2___flmul@b+1
 31345  01307A  C0D8  F032         	movff	_ADCPostProcessingCallback$4088+2,i2___flmul@b+2
 31346  01307E  C0D9  F033         	movff	_ADCPostProcessingCallback$4088+3,i2___flmul@b+3
 31347  013082  0E3E               	movlw	62
 31348  013084  6E34               	movwf	i2___flmul@a,c
 31349  013086  0EF8               	movlw	248
 31350  013088  6E35               	movwf	i2___flmul@a+1,c
 31351  01308A  0E80               	movlw	128
 31352  01308C  6E36               	movwf	i2___flmul@a+2,c
 31353  01308E  0E40               	movlw	64
 31354  013090  6E37               	movwf	i2___flmul@a+3,c
 31355  013092  EC78  F0A1         	call	i2___flmul	;wreg free
 31356  013096  C030  F1CF         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 31357  01309A  C031  F1D0         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 31358  01309E  C032  F1D1         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 31359  0130A2  C033  F1D2         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 31360                           
 31361                           ;main.c: 309: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 31362  0130A6  0E9A               	movlw	154
 31363  0130A8  6E34               	movwf	i2___flge@ff1,c
 31364  0130AA  0E99               	movlw	153
 31365  0130AC  6E35               	movwf	i2___flge@ff1+1,c
 31366  0130AE  0E59               	movlw	89
 31367  0130B0  6E36               	movwf	i2___flge@ff1+2,c
 31368  0130B2  0E41               	movlw	65
 31369  0130B4  6E37               	movwf	i2___flge@ff1+3,c
 31370  0130B6  C1CF  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 31371  0130BA  C1D0  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 31372  0130BE  C1D1  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 31373  0130C2  C1D2  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 31374  0130C6  EC41  F0B7         	call	i2___flge	;wreg free
 31375  0130CA  A0D8               	btfss	status,0,c
 31376  0130CC  D005               	goto	i2u1733_40
 31377  0130CE  EC76  F0C4         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 31378  0130D2  0900               	iorlw	0
 31379  0130D4  B4D8               	btfsc	status,2,c
 31380  0130D6  D007               	goto	i2l983
 31381  0130D8                     i2u1733_40:
 31382                           
 31383                           ;main.c: 311: LATFbits.LATF3 = 1;
 31384  0130D8  867E               	bsf	3966,3,c	;volatile
 31385                           
 31386                           ;main.c: 312: adc_error_flag = 1;
 31387  0130DA  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 31388                           
 31389                           ;main.c: 314: PIE5bits.TMR7IE = 0;
 31390  0130DC  010E               	movlb	14	; () banked
 31391  0130DE  9D2E               	bcf	46,6,b	;volatile
 31392                           
 31393                           ; BSR set to: 14
 31394                           ;main.c: 315: TMR7_StopTimer();
 31395  0130E0  EC96  F0C4         	call	i2_TMR7_StopTimer	;wreg free
 31396                           
 31397                           ;main.c: 316: return;
 31398  0130E4  0012               	return	
 31399  0130E6                     i2l983:
 31400                           
 31401                           ;main.c: 318: }
 31402                           ;main.c: 320: next_channel = channel_Temp;
 31403  0130E6  0E3D               	movlw	61
 31404  0130E8  0101               	movlb	1	; () banked
 31405  0130EA  6FE8               	movwf	_next_channel& (0+255),b
 31406                           
 31407                           ;main.c: 322: break;
 31408  0130EC  0012               	return	
 31409  0130EE                     
 31410                           ;main.c: 327: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 31411                           
 31412                           ; BSR set to: 1
 31413  0130EE  0E00               	movlw	0
 31414  0130F0  6E17               	movwf	i2___fldiv@a,c
 31415  0130F2  0E00               	movlw	0
 31416  0130F4  6E18               	movwf	i2___fldiv@a+1,c
 31417  0130F6  0E00               	movlw	0
 31418  0130F8  6E19               	movwf	i2___fldiv@a+2,c
 31419  0130FA  0E40               	movlw	64
 31420  0130FC  6E1A               	movwf	i2___fldiv@a+3,c
 31421  0130FE  C0F6  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 31422  013102  C0F7  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 31423  013106  C0F8  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 31424  01310A  C0F9  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 31425  01310E  EC7F  F0AD         	call	i2___fldiv	;wreg free
 31426  013112  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 31427  013116  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 31428  01311A  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 31429  01311E  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 31430  013122  0E00               	movlw	0
 31431  013124  6E5A               	movwf	i2___fladd@a,c
 31432  013126  0E00               	movlw	0
 31433  013128  6E5B               	movwf	i2___fladd@a+1,c
 31434  01312A  0E80               	movlw	128
 31435  01312C  6E5C               	movwf	i2___fladd@a+2,c
 31436  01312E  0E3F               	movlw	63
 31437  013130  6E5D               	movwf	i2___fladd@a+3,c
 31438  013132  0E00               	movlw	0
 31439  013134  6E17               	movwf	i2___fldiv@a,c
 31440  013136  0EC0               	movlw	192
 31441  013138  6E18               	movwf	i2___fldiv@a+1,c
 31442  01313A  0E7F               	movlw	127
 31443  01313C  6E19               	movwf	i2___fldiv@a+2,c
 31444  01313E  0E44               	movlw	68
 31445  013140  6E1A               	movwf	i2___fldiv@a+3,c
 31446  013142  ECF8  F0C3         	call	_ADCC_GetFilterValue	;wreg free
 31447  013146  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 31448  01314A  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 31449  01314E  6A07               	clrf	i2___xxtofl@val+2,c
 31450  013150  6A08               	clrf	i2___xxtofl@val+3,c
 31451  013152  0E00               	movlw	0
 31452  013154  EC1A  F0B3         	call	i2___xxtofl
 31453  013158  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 31454  01315C  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 31455  013160  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 31456  013164  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 31457  013168  EC7F  F0AD         	call	i2___fldiv	;wreg free
 31458  01316C  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 31459  013170  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 31460  013174  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 31461  013178  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 31462  01317C  ECD4  F0C2         	call	i2___flneg	;wreg free
 31463  013180  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 31464  013184  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 31465  013188  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 31466  01318C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 31467  013190  ECBF  F0A4         	call	i2___fladd	;wreg free
 31468  013194  C056  F030         	movff	?i2___fladd,i2___flmul@b
 31469  013198  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 31470  01319C  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 31471  0131A0  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 31472  0131A4  EC78  F0A1         	call	i2___flmul	;wreg free
 31473  0131A8  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4090
 31474  0131AC  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4090+1
 31475  0131B0  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4090+2
 31476  0131B4  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4090+3
 31477                           
 31478                           ;main.c: 327: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 31479  0131B8  0EDA               	movlw	218
 31480  0131BA  6E17               	movwf	i2___fldiv@a,c
 31481  0131BC  0E03               	movlw	3
 31482  0131BE  6E18               	movwf	i2___fldiv@a+1,c
 31483  0131C0  0EAD               	movlw	173
 31484  0131C2  6E19               	movwf	i2___fldiv@a+2,c
 31485  0131C4  0E3A               	movlw	58
 31486  0131C6  6E1A               	movwf	i2___fldiv@a+3,c
 31487  0131C8  0E39               	movlw	57
 31488  0131CA  6E5A               	movwf	i2___fladd@a,c
 31489  0131CC  0EB4               	movlw	180
 31490  0131CE  6E5B               	movwf	i2___fladd@a+1,c
 31491  0131D0  0E28               	movlw	40
 31492  0131D2  6E5C               	movwf	i2___fladd@a+2,c
 31493  0131D4  0E3F               	movlw	63
 31494  0131D6  6E5D               	movwf	i2___fladd@a+3,c
 31495  0131D8  C0C9  F02C         	movff	_ADCPostProcessingCallback$4090,i2___flneg@f1
 31496  0131DC  C0CA  F02D         	movff	_ADCPostProcessingCallback$4090+1,i2___flneg@f1+1
 31497  0131E0  C0CB  F02E         	movff	_ADCPostProcessingCallback$4090+2,i2___flneg@f1+2
 31498  0131E4  C0CC  F02F         	movff	_ADCPostProcessingCallback$4090+3,i2___flneg@f1+3
 31499  0131E8  ECD4  F0C2         	call	i2___flneg	;wreg free
 31500  0131EC  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 31501  0131F0  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 31502  0131F4  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 31503  0131F8  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 31504  0131FC  ECBF  F0A4         	call	i2___fladd	;wreg free
 31505  013200  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 31506  013204  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 31507  013208  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 31508  01320C  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 31509  013210  EC7F  F0AD         	call	i2___fldiv	;wreg free
 31510  013214  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4091
 31511  013218  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4091+1
 31512  01321C  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4091+2
 31513  013220  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4091+3
 31514                           
 31515                           ;main.c: 327: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 31516  013224  C2FB  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 31517  013228  C2FC  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 31518  01322C  C2FD  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 31519  013230  C2FE  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 31520  013234  C0CD  F056         	movff	_ADCPostProcessingCallback$4091,i2___fladd@b
 31521  013238  C0CE  F057         	movff	_ADCPostProcessingCallback$4091+1,i2___fladd@b+1
 31522  01323C  C0CF  F058         	movff	_ADCPostProcessingCallback$4091+2,i2___fladd@b+2
 31523  013240  C0D0  F059         	movff	_ADCPostProcessingCallback$4091+3,i2___fladd@b+3
 31524  013244  ECBF  F0A4         	call	i2___fladd	;wreg free
 31525  013248  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4092
 31526  01324C  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4092+1
 31527  013250  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4092+2
 31528  013254  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4092+3
 31529                           
 31530                           ;main.c: 327: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 31531  013258  C0D1  F056         	movff	_ADCPostProcessingCallback$4092,i2___fladd@b
 31532  01325C  C0D2  F057         	movff	_ADCPostProcessingCallback$4092+1,i2___fladd@b+1
 31533  013260  C0D3  F058         	movff	_ADCPostProcessingCallback$4092+2,i2___fladd@b+2
 31534  013264  C0D4  F059         	movff	_ADCPostProcessingCallback$4092+3,i2___fladd@b+3
 31535  013268  0E00               	movlw	0
 31536  01326A  6E5A               	movwf	i2___fladd@a,c
 31537  01326C  0E00               	movlw	0
 31538  01326E  6E5B               	movwf	i2___fladd@a+1,c
 31539  013270  0E20               	movlw	32
 31540  013272  6E5C               	movwf	i2___fladd@a+2,c
 31541  013274  0EC2               	movlw	194
 31542  013276  6E5D               	movwf	i2___fladd@a+3,c
 31543  013278  ECBF  F0A4         	call	i2___fladd	;wreg free
 31544  01327C  C056  F1CB         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 31545  013280  C057  F1CC         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 31546  013284  C058  F1CD         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 31547  013288  C059  F1CE         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 31548                           
 31549                           ;main.c: 329: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 31550  01328C  0E00               	movlw	0
 31551  01328E  6E34               	movwf	i2___flge@ff1,c
 31552  013290  0E00               	movlw	0
 31553  013292  6E35               	movwf	i2___flge@ff1+1,c
 31554  013294  0E20               	movlw	32
 31555  013296  6E36               	movwf	i2___flge@ff1+2,c
 31556  013298  0E42               	movlw	66
 31557  01329A  6E37               	movwf	i2___flge@ff1+3,c
 31558  01329C  C1CB  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 31559  0132A0  C1CC  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 31560  0132A4  C1CD  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 31561  0132A8  C1CE  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 31562  0132AC  EC41  F0B7         	call	i2___flge	;wreg free
 31563  0132B0  A0D8               	btfss	status,0,c
 31564  0132B2  D005               	goto	i2u1735_40
 31565  0132B4  EC76  F0C4         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 31566  0132B8  0900               	iorlw	0
 31567  0132BA  B4D8               	btfsc	status,2,c
 31568  0132BC  D007               	goto	i2l987
 31569  0132BE                     i2u1735_40:
 31570                           
 31571                           ;main.c: 331: LATFbits.LATF3 = 1;
 31572  0132BE  867E               	bsf	3966,3,c	;volatile
 31573                           
 31574                           ;main.c: 332: adc_error_flag = 1;
 31575  0132C0  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 31576                           
 31577                           ;main.c: 334: PIE5bits.TMR7IE = 0;
 31578  0132C2  010E               	movlb	14	; () banked
 31579  0132C4  9D2E               	bcf	46,6,b	;volatile
 31580                           
 31581                           ; BSR set to: 14
 31582                           ;main.c: 335: TMR7_StopTimer();
 31583  0132C6  EC96  F0C4         	call	i2_TMR7_StopTimer	;wreg free
 31584                           
 31585                           ;main.c: 336: return;
 31586  0132CA  0012               	return	
 31587  0132CC                     i2l987:
 31588                           
 31589                           ;main.c: 338: }
 31590                           ;main.c: 340: next_channel = channel_VSS;
 31591  0132CC  0E3C               	movlw	60
 31592  0132CE  0101               	movlb	1	; () banked
 31593  0132D0  6FE8               	movwf	_next_channel& (0+255),b
 31594                           
 31595                           ;main.c: 342: break;
 31596  0132D2  0012               	return	
 31597  0132D4                     i2l990:
 31598                           
 31599                           ; BSR set to: 0
 31600                           ;main.c: 347: LATFbits.LATF3 = 1;
 31601  0132D4  867E               	bsf	3966,3,c	;volatile
 31602                           
 31603                           ;main.c: 348: adc_error_flag = 1;
 31604  0132D6  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 31605                           
 31606                           ; BSR set to: 0
 31607                           ;main.c: 350: PIE5bits.TMR7IE == 0;
 31608  0132D8  010E               	movlb	14	; () banked
 31609  0132DA  512E               	movf	46,w,b	;volatile
 31610                           
 31611                           ; BSR set to: 14
 31612                           ;main.c: 351: TMR7_StopTimer();
 31613  0132DC  EC96  F0C4         	call	i2_TMR7_StopTimer	;wreg free
 31614                           
 31615                           ;main.c: 354: }
 31616                           
 31617                           ;main.c: 352: break;
 31618  0132E0  0012               	return	
 31619  0132E2                     i2l957:
 31620  0132E2  0100               	movlb	0	; () banked
 31621  0132E4  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 31622                           
 31623                           ; Switch size 1, requested type "space"
 31624                           ; Number of cases is 6, Range of values is 0 to 63
 31625                           ; switch strategies available:
 31626                           ; Name         Instructions Cycles
 31627                           ; simple_byte           19    10 (average)
 31628                           ;	Chosen strategy is simple_byte
 31629  0132E6  0A00               	xorlw	0	; case 0
 31630  0132E8  B4D8               	btfsc	status,2,c
 31631  0132EA  D45E               	goto	i2l972
 31632  0132EC  0A04               	xorlw	4	; case 4
 31633  0132EE  B4D8               	btfsc	status,2,c
 31634  0132F0  D689               	goto	i2l982
 31635  0132F2  0A26               	xorlw	38	; case 34
 31636  0132F4  B4D8               	btfsc	status,2,c
 31637  0132F6  EF71  F095         	goto	i2l968
 31638  0132FA  0A1E               	xorlw	30	; case 60
 31639  0132FC  B4D8               	btfsc	status,2,c
 31640  0132FE  EF9F  F094         	goto	i2l958
 31641  013302  0A01               	xorlw	1	; case 61
 31642  013304  B4D8               	btfsc	status,2,c
 31643  013306  D6F3               	goto	i2l986
 31644  013308  0A02               	xorlw	2	; case 63
 31645  01330A  B4D8               	btfsc	status,2,c
 31646  01330C  EFE8  F094         	goto	i2l964
 31647  013310  D7E1               	goto	i2l990
 31648  013312                     __end_of_ADCPostProcessingCallback:
 31649                           	opt stack 0
 31650                           tosu	equ	0xFFF
 31651                           tosh	equ	0xFFE
 31652                           tosl	equ	0xFFD
 31653                           pclatu	equ	0xFFB
 31654                           pclath	equ	0xFFA
 31655                           tblptru	equ	0xFF8
 31656                           tblptrh	equ	0xFF7
 31657                           tblptrl	equ	0xFF6
 31658                           tablat	equ	0xFF5
 31659                           prodh	equ	0xFF4
 31660                           prodl	equ	0xFF3
 31661                           intcon	equ	0xFF2
 31662                           indf0	equ	0xFEF
 31663                           postinc0	equ	0xFEE
 31664                           fsr0h	equ	0xFEA
 31665                           fsr0l	equ	0xFE9
 31666                           wreg	equ	0xFE8
 31667                           indf1	equ	0xFE7
 31668                           postdec1	equ	0xFE5
 31669                           plusw1	equ	0xFE3
 31670                           fsr1h	equ	0xFE2
 31671                           fsr1l	equ	0xFE1
 31672                           bsr	equ	0xFE0
 31673                           indf2	equ	0xFDF
 31674                           postinc2	equ	0xFDE
 31675                           postdec2	equ	0xFDD
 31676                           plusw2	equ	0xFDB
 31677                           fsr2h	equ	0xFDA
 31678                           fsr2l	equ	0xFD9
 31679                           status	equ	0xFD8
 31680                           
 31681 ;; *************** function i2_TMR7_StopTimer *****************
 31682 ;; Defined at:
 31683 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 31684 ;; Parameters:    Size  Location     Type
 31685 ;;		None
 31686 ;; Auto vars:     Size  Location     Type
 31687 ;;		None
 31688 ;; Return value:  Size  Location     Type
 31689 ;;                  1    wreg      void 
 31690 ;; Registers used:
 31691 ;;		None
 31692 ;; Tracked objects:
 31693 ;;		On entry : 0/0
 31694 ;;		On exit  : 0/0
 31695 ;;		Unchanged: 0/0
 31696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31701 ;;Total ram usage:        0 bytes
 31702 ;; Hardware stack levels used:    1
 31703 ;; This function calls:
 31704 ;;		Nothing
 31705 ;; This function is called by:
 31706 ;;		_ADCPostProcessingCallback
 31707 ;; This function uses a non-reentrant model
 31708 ;;
 31709                           
 31710                           	psect	text101
 31711  01892C                     __ptext101:
 31712                           	opt stack 0
 31713  01892C                     i2_TMR7_StopTimer:
 31714                           	opt stack 16
 31715                           
 31716                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 31717                           
 31718                           ;incstack = 0
 31719  01892C  010F               	movlb	15	; () banked
 31720  01892E  9130               	bcf	48,0,b	;volatile
 31721                           
 31722                           ; BSR set to: 15
 31723  018930  0012               	return		;funcret
 31724  018932                     __end_ofi2_TMR7_StopTimer:
 31725                           	opt stack 0
 31726                           tosu	equ	0xFFF
 31727                           tosh	equ	0xFFE
 31728                           tosl	equ	0xFFD
 31729                           pclatu	equ	0xFFB
 31730                           pclath	equ	0xFFA
 31731                           tblptru	equ	0xFF8
 31732                           tblptrh	equ	0xFF7
 31733                           tblptrl	equ	0xFF6
 31734                           tablat	equ	0xFF5
 31735                           prodh	equ	0xFF4
 31736                           prodl	equ	0xFF3
 31737                           intcon	equ	0xFF2
 31738                           indf0	equ	0xFEF
 31739                           postinc0	equ	0xFEE
 31740                           fsr0h	equ	0xFEA
 31741                           fsr0l	equ	0xFE9
 31742                           wreg	equ	0xFE8
 31743                           indf1	equ	0xFE7
 31744                           postdec1	equ	0xFE5
 31745                           plusw1	equ	0xFE3
 31746                           fsr1h	equ	0xFE2
 31747                           fsr1l	equ	0xFE1
 31748                           bsr	equ	0xFE0
 31749                           indf2	equ	0xFDF
 31750                           postinc2	equ	0xFDE
 31751                           postdec2	equ	0xFDD
 31752                           plusw2	equ	0xFDB
 31753                           fsr2h	equ	0xFDA
 31754                           fsr2l	equ	0xFD9
 31755                           status	equ	0xFD8
 31756                           
 31757 ;; *************** function _peakToRMS *****************
 31758 ;; Defined at:
 31759 ;;		line 104 in file "main.c"
 31760 ;; Parameters:    Size  Location     Type
 31761 ;;  Peak            4   81[BANK0 ] void 
 31762 ;;  Angle           4   85[BANK0 ] void 
 31763 ;; Auto vars:     Size  Location     Type
 31764 ;;  RMS             4  101[BANK0 ] void 
 31765 ;; Return value:  Size  Location     Type
 31766 ;;                  4   81[BANK0 ] void 
 31767 ;; Registers used:
 31768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31769 ;; Tracked objects:
 31770 ;;		On entry : 0/0
 31771 ;;		On exit  : 0/0
 31772 ;;		Unchanged: 0/0
 31773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31774 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31775 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31777 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31778 ;;Total ram usage:       24 bytes
 31779 ;; Hardware stack levels used:    1
 31780 ;; Hardware stack levels required when called:    5
 31781 ;; This function calls:
 31782 ;;		_acos
 31783 ;;		_sin
 31784 ;;		_sqrt
 31785 ;;		i2___fladd
 31786 ;;		i2___fldiv
 31787 ;;		i2___flmul
 31788 ;;		i2___flneg
 31789 ;; This function is called by:
 31790 ;;		_ADCPostProcessingCallback
 31791 ;; This function uses a non-reentrant model
 31792 ;;
 31793                           
 31794                           	psect	text102
 31795  016060                     __ptext102:
 31796                           	opt stack 0
 31797  016060                     _peakToRMS:
 31798                           	opt stack 11
 31799                           
 31800                           ;main.c: 107: double RMS = 0.0;
 31801                           
 31802                           ; BSR set to: 15
 31803                           ;incstack = 0
 31804  016060  0E00               	movlw	0
 31805  016062  0100               	movlb	0	; () banked
 31806  016064  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 31807  016066  0E00               	movlw	0
 31808  016068  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 31809  01606A  0E00               	movlw	0
 31810  01606C  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 31811  01606E  0E00               	movlw	0
 31812  016070  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 31813                           
 31814                           ; BSR set to: 0
 31815                           ;main.c: 110: RMS = 2.0 * acos(-1.0);
 31816  016072  0E00               	movlw	0
 31817  016074  6FA9               	movwf	acos@x& (0+255),b
 31818  016076  0E00               	movlw	0
 31819  016078  6FAA               	movwf	(acos@x+1)& (0+255),b
 31820  01607A  0E80               	movlw	128
 31821  01607C  6FAB               	movwf	(acos@x+2)& (0+255),b
 31822  01607E  0EBF               	movlw	191
 31823  016080  6FAC               	movwf	(acos@x+3)& (0+255),b
 31824  016082  EC42  F0BE         	call	_acos	;wreg free
 31825  016086  C0A9  F0C1         	movff	?_acos,_peakToRMS$4085
 31826  01608A  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4085+1
 31827  01608E  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4085+2
 31828  016092  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4085+3
 31829                           
 31830                           ;main.c: 110: RMS = 2.0 * acos(-1.0);
 31831  016096  C0C1  F030         	movff	_peakToRMS$4085,i2___flmul@b
 31832  01609A  C0C2  F031         	movff	_peakToRMS$4085+1,i2___flmul@b+1
 31833  01609E  C0C3  F032         	movff	_peakToRMS$4085+2,i2___flmul@b+2
 31834  0160A2  C0C4  F033         	movff	_peakToRMS$4085+3,i2___flmul@b+3
 31835  0160A6  0E00               	movlw	0
 31836  0160A8  6E34               	movwf	i2___flmul@a,c
 31837  0160AA  0E00               	movlw	0
 31838  0160AC  6E35               	movwf	i2___flmul@a+1,c
 31839  0160AE  0E00               	movlw	0
 31840  0160B0  6E36               	movwf	i2___flmul@a+2,c
 31841  0160B2  0E40               	movlw	64
 31842  0160B4  6E37               	movwf	i2___flmul@a+3,c
 31843  0160B6  EC78  F0A1         	call	i2___flmul	;wreg free
 31844  0160BA  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 31845  0160BE  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 31846  0160C2  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 31847  0160C6  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 31848                           
 31849                           ;main.c: 111: RMS = RMS - (2.0 * Angle);
 31850  0160CA  0E00               	movlw	0
 31851  0160CC  6E34               	movwf	i2___flmul@a,c
 31852  0160CE  0E00               	movlw	0
 31853  0160D0  6E35               	movwf	i2___flmul@a+1,c
 31854  0160D2  0E00               	movlw	0
 31855  0160D4  6E36               	movwf	i2___flmul@a+2,c
 31856  0160D6  0E40               	movlw	64
 31857  0160D8  6E37               	movwf	i2___flmul@a+3,c
 31858  0160DA  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 31859  0160DE  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 31860  0160E2  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 31861  0160E6  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 31862  0160EA  EC78  F0A1         	call	i2___flmul	;wreg free
 31863  0160EE  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 31864  0160F2  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 31865  0160F6  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 31866  0160FA  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 31867  0160FE  ECD4  F0C2         	call	i2___flneg	;wreg free
 31868  016102  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 31869  016106  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 31870  01610A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 31871  01610E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 31872  016112  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 31873  016116  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 31874  01611A  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 31875  01611E  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 31876  016122  ECBF  F0A4         	call	i2___fladd	;wreg free
 31877  016126  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 31878  01612A  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 31879  01612E  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 31880  016132  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 31881                           
 31882                           ;main.c: 112: RMS = RMS + sin(2.0 * Angle);
 31883  016136  0E00               	movlw	0
 31884  016138  6E34               	movwf	i2___flmul@a,c
 31885  01613A  0E00               	movlw	0
 31886  01613C  6E35               	movwf	i2___flmul@a+1,c
 31887  01613E  0E00               	movlw	0
 31888  016140  6E36               	movwf	i2___flmul@a+2,c
 31889  016142  0E40               	movlw	64
 31890  016144  6E37               	movwf	i2___flmul@a+3,c
 31891  016146  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 31892  01614A  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 31893  01614E  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 31894  016152  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 31895  016156  EC78  F0A1         	call	i2___flmul	;wreg free
 31896  01615A  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4086
 31897  01615E  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4086+1
 31898  016162  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4086+2
 31899  016166  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4086+3
 31900                           
 31901                           ;main.c: 112: RMS = RMS + sin(2.0 * Angle);
 31902  01616A  C0B9  F088         	movff	_peakToRMS$4086,sin@f
 31903  01616E  C0BA  F089         	movff	_peakToRMS$4086+1,sin@f+1
 31904  016172  C0BB  F08A         	movff	_peakToRMS$4086+2,sin@f+2
 31905  016176  C0BC  F08B         	movff	_peakToRMS$4086+3,sin@f+3
 31906  01617A  ECE0  F0A7         	call	_sin	;wreg free
 31907  01617E  C088  F0BD         	movff	?_sin,_peakToRMS$4087
 31908  016182  C089  F0BE         	movff	?_sin+1,_peakToRMS$4087+1
 31909  016186  C08A  F0BF         	movff	?_sin+2,_peakToRMS$4087+2
 31910  01618A  C08B  F0C0         	movff	?_sin+3,_peakToRMS$4087+3
 31911                           
 31912                           ;main.c: 112: RMS = RMS + sin(2.0 * Angle);
 31913  01618E  C0BD  F056         	movff	_peakToRMS$4087,i2___fladd@b
 31914  016192  C0BE  F057         	movff	_peakToRMS$4087+1,i2___fladd@b+1
 31915  016196  C0BF  F058         	movff	_peakToRMS$4087+2,i2___fladd@b+2
 31916  01619A  C0C0  F059         	movff	_peakToRMS$4087+3,i2___fladd@b+3
 31917  01619E  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 31918  0161A2  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 31919  0161A6  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 31920  0161AA  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 31921  0161AE  ECBF  F0A4         	call	i2___fladd	;wreg free
 31922  0161B2  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 31923  0161B6  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 31924  0161BA  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 31925  0161BE  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 31926                           
 31927                           ;main.c: 113: RMS = RMS / (4.0 * acos(-1.0));
 31928  0161C2  0E00               	movlw	0
 31929  0161C4  0100               	movlb	0	; () banked
 31930  0161C6  6FA9               	movwf	acos@x& (0+255),b
 31931  0161C8  0E00               	movlw	0
 31932  0161CA  6FAA               	movwf	(acos@x+1)& (0+255),b
 31933  0161CC  0E80               	movlw	128
 31934  0161CE  6FAB               	movwf	(acos@x+2)& (0+255),b
 31935  0161D0  0EBF               	movlw	191
 31936  0161D2  6FAC               	movwf	(acos@x+3)& (0+255),b
 31937  0161D4  EC42  F0BE         	call	_acos	;wreg free
 31938  0161D8  C0A9  F0C1         	movff	?_acos,_peakToRMS$4085
 31939  0161DC  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4085+1
 31940  0161E0  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4085+2
 31941  0161E4  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4085+3
 31942                           
 31943                           ;main.c: 113: RMS = RMS / (4.0 * acos(-1.0));
 31944  0161E8  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 31945  0161EC  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 31946  0161F0  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 31947  0161F4  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 31948  0161F8  0E00               	movlw	0
 31949  0161FA  6E34               	movwf	i2___flmul@a,c
 31950  0161FC  0E00               	movlw	0
 31951  0161FE  6E35               	movwf	i2___flmul@a+1,c
 31952  016200  0E80               	movlw	128
 31953  016202  6E36               	movwf	i2___flmul@a+2,c
 31954  016204  0E40               	movlw	64
 31955  016206  6E37               	movwf	i2___flmul@a+3,c
 31956  016208  C0C1  F030         	movff	_peakToRMS$4085,i2___flmul@b
 31957  01620C  C0C2  F031         	movff	_peakToRMS$4085+1,i2___flmul@b+1
 31958  016210  C0C3  F032         	movff	_peakToRMS$4085+2,i2___flmul@b+2
 31959  016214  C0C4  F033         	movff	_peakToRMS$4085+3,i2___flmul@b+3
 31960  016218  EC78  F0A1         	call	i2___flmul	;wreg free
 31961  01621C  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 31962  016220  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 31963  016224  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 31964  016228  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 31965  01622C  EC7F  F0AD         	call	i2___fldiv	;wreg free
 31966  016230  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 31967  016234  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 31968  016238  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 31969  01623C  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 31970                           
 31971                           ;main.c: 114: RMS = sqrt(RMS);
 31972  016240  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 31973  016244  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 31974  016248  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 31975  01624C  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 31976  016250  EC5D  F0A9         	call	_sqrt	;wreg free
 31977  016254  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 31978  016258  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 31979  01625C  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 31980  016260  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 31981                           
 31982                           ;main.c: 115: RMS = Peak * RMS;
 31983  016264  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 31984  016268  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 31985  01626C  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 31986  016270  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 31987  016274  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 31988  016278  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 31989  01627C  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 31990  016280  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 31991  016284  EC78  F0A1         	call	i2___flmul	;wreg free
 31992  016288  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 31993  01628C  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 31994  016290  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 31995  016294  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 31996                           
 31997                           ;main.c: 116: return RMS;
 31998  016298  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 31999  01629C  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 32000  0162A0  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 32001  0162A4  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 32002  0162A8  0012               	return	
 32003  0162AA                     __end_of_peakToRMS:
 32004                           	opt stack 0
 32005                           tosu	equ	0xFFF
 32006                           tosh	equ	0xFFE
 32007                           tosl	equ	0xFFD
 32008                           pclatu	equ	0xFFB
 32009                           pclath	equ	0xFFA
 32010                           tblptru	equ	0xFF8
 32011                           tblptrh	equ	0xFF7
 32012                           tblptrl	equ	0xFF6
 32013                           tablat	equ	0xFF5
 32014                           prodh	equ	0xFF4
 32015                           prodl	equ	0xFF3
 32016                           intcon	equ	0xFF2
 32017                           indf0	equ	0xFEF
 32018                           postinc0	equ	0xFEE
 32019                           fsr0h	equ	0xFEA
 32020                           fsr0l	equ	0xFE9
 32021                           wreg	equ	0xFE8
 32022                           indf1	equ	0xFE7
 32023                           postdec1	equ	0xFE5
 32024                           plusw1	equ	0xFE3
 32025                           fsr1h	equ	0xFE2
 32026                           fsr1l	equ	0xFE1
 32027                           bsr	equ	0xFE0
 32028                           indf2	equ	0xFDF
 32029                           postinc2	equ	0xFDE
 32030                           postdec2	equ	0xFDD
 32031                           plusw2	equ	0xFDB
 32032                           fsr2h	equ	0xFDA
 32033                           fsr2l	equ	0xFD9
 32034                           status	equ	0xFD8
 32035                           
 32036 ;; *************** function _acos *****************
 32037 ;; Defined at:
 32038 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 32039 ;; Parameters:    Size  Location     Type
 32040 ;;  x               4   73[BANK0 ] void 
 32041 ;; Auto vars:     Size  Location     Type
 32042 ;;		None
 32043 ;; Return value:  Size  Location     Type
 32044 ;;                  4   73[BANK0 ] void 
 32045 ;; Registers used:
 32046 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32047 ;; Tracked objects:
 32048 ;;		On entry : 0/0
 32049 ;;		On exit  : 0/0
 32050 ;;		Unchanged: 0/0
 32051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32053 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32055 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32056 ;;Total ram usage:        8 bytes
 32057 ;; Hardware stack levels used:    1
 32058 ;; Hardware stack levels required when called:    4
 32059 ;; This function calls:
 32060 ;;		_asin
 32061 ;;		i2___fladd
 32062 ;;		i2___flneg
 32063 ;; This function is called by:
 32064 ;;		_peakToRMS
 32065 ;; This function uses a non-reentrant model
 32066 ;;
 32067                           
 32068                           	psect	text103
 32069  017C84                     __ptext103:
 32070                           	opt stack 0
 32071  017C84                     _acos:
 32072                           	opt stack 11
 32073                           
 32074                           ;incstack = 0
 32075  017C84  C0A9  F091         	movff	acos@x,asin@x
 32076  017C88  C0AA  F092         	movff	acos@x+1,asin@x+1
 32077  017C8C  C0AB  F093         	movff	acos@x+2,asin@x+2
 32078  017C90  C0AC  F094         	movff	acos@x+3,asin@x+3
 32079  017C94  EC5E  F0A6         	call	_asin	;wreg free
 32080  017C98  C091  F0AD         	movff	?_asin,_acos$4093
 32081  017C9C  C092  F0AE         	movff	?_asin+1,_acos$4093+1
 32082  017CA0  C093  F0AF         	movff	?_asin+2,_acos$4093+2
 32083  017CA4  C094  F0B0         	movff	?_asin+3,_acos$4093+3
 32084  017CA8  C0AD  F02C         	movff	_acos$4093,i2___flneg@f1
 32085  017CAC  C0AE  F02D         	movff	_acos$4093+1,i2___flneg@f1+1
 32086  017CB0  C0AF  F02E         	movff	_acos$4093+2,i2___flneg@f1+2
 32087  017CB4  C0B0  F02F         	movff	_acos$4093+3,i2___flneg@f1+3
 32088  017CB8  ECD4  F0C2         	call	i2___flneg	;wreg free
 32089  017CBC  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32090  017CC0  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32091  017CC4  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32092  017CC8  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32093  017CCC  0EDB               	movlw	219
 32094  017CCE  6E5A               	movwf	i2___fladd@a,c
 32095  017CD0  0E0F               	movlw	15
 32096  017CD2  6E5B               	movwf	i2___fladd@a+1,c
 32097  017CD4  0EC9               	movlw	201
 32098  017CD6  6E5C               	movwf	i2___fladd@a+2,c
 32099  017CD8  0E3F               	movlw	63
 32100  017CDA  6E5D               	movwf	i2___fladd@a+3,c
 32101  017CDC  ECBF  F0A4         	call	i2___fladd	;wreg free
 32102  017CE0  C056  F0A9         	movff	?i2___fladd,?_acos
 32103  017CE4  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 32104  017CE8  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 32105  017CEC  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 32106  017CF0  0012               	return	
 32107  017CF2                     __end_of_acos:
 32108                           	opt stack 0
 32109                           tosu	equ	0xFFF
 32110                           tosh	equ	0xFFE
 32111                           tosl	equ	0xFFD
 32112                           pclatu	equ	0xFFB
 32113                           pclath	equ	0xFFA
 32114                           tblptru	equ	0xFF8
 32115                           tblptrh	equ	0xFF7
 32116                           tblptrl	equ	0xFF6
 32117                           tablat	equ	0xFF5
 32118                           prodh	equ	0xFF4
 32119                           prodl	equ	0xFF3
 32120                           intcon	equ	0xFF2
 32121                           indf0	equ	0xFEF
 32122                           postinc0	equ	0xFEE
 32123                           fsr0h	equ	0xFEA
 32124                           fsr0l	equ	0xFE9
 32125                           wreg	equ	0xFE8
 32126                           indf1	equ	0xFE7
 32127                           postdec1	equ	0xFE5
 32128                           plusw1	equ	0xFE3
 32129                           fsr1h	equ	0xFE2
 32130                           fsr1l	equ	0xFE1
 32131                           bsr	equ	0xFE0
 32132                           indf2	equ	0xFDF
 32133                           postinc2	equ	0xFDE
 32134                           postdec2	equ	0xFDD
 32135                           plusw2	equ	0xFDB
 32136                           fsr2h	equ	0xFDA
 32137                           fsr2l	equ	0xFD9
 32138                           status	equ	0xFD8
 32139                           
 32140 ;; *************** function _asin *****************
 32141 ;; Defined at:
 32142 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 32143 ;; Parameters:    Size  Location     Type
 32144 ;;  x               4   49[BANK0 ] void 
 32145 ;; Auto vars:     Size  Location     Type
 32146 ;;  y               4   65[BANK0 ] void 
 32147 ;;  sgn             4   53[BANK0 ] void 
 32148 ;; Return value:  Size  Location     Type
 32149 ;;                  4   49[BANK0 ] void 
 32150 ;; Registers used:
 32151 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32152 ;; Tracked objects:
 32153 ;;		On entry : 0/0
 32154 ;;		On exit  : 0/0
 32155 ;;		Unchanged: 0/0
 32156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32157 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32158 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32160 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32161 ;;Total ram usage:       24 bytes
 32162 ;; Hardware stack levels used:    1
 32163 ;; Hardware stack levels required when called:    3
 32164 ;; This function calls:
 32165 ;;		_atan
 32166 ;;		_fabs
 32167 ;;		_sqrt
 32168 ;;		i2___fladd
 32169 ;;		i2___fldiv
 32170 ;;		i2___flge
 32171 ;;		i2___flmul
 32172 ;;		i2___flneg
 32173 ;; This function is called by:
 32174 ;;		_acos
 32175 ;; This function uses a non-reentrant model
 32176 ;;
 32177                           
 32178                           	psect	text104
 32179  014CBC                     __ptext104:
 32180                           	opt stack 0
 32181  014CBC                     _asin:
 32182                           	opt stack 11
 32183                           
 32184                           ;incstack = 0
 32185  014CBC  0E00               	movlw	0
 32186  014CBE  6E34               	movwf	i2___flge@ff1,c
 32187  014CC0  0E00               	movlw	0
 32188  014CC2  6E35               	movwf	i2___flge@ff1+1,c
 32189  014CC4  0E80               	movlw	128
 32190  014CC6  6E36               	movwf	i2___flge@ff1+2,c
 32191  014CC8  0E3F               	movlw	63
 32192  014CCA  6E37               	movwf	i2___flge@ff1+3,c
 32193  014CCC  C091  F030         	movff	asin@x,fabs@d
 32194  014CD0  C092  F031         	movff	asin@x+1,fabs@d+1
 32195  014CD4  C093  F032         	movff	asin@x+2,fabs@d+2
 32196  014CD8  C094  F033         	movff	asin@x+3,fabs@d+3
 32197  014CDC  ECD0  F0C1         	call	_fabs	;wreg free
 32198  014CE0  C030  F038         	movff	?_fabs,i2___flge@ff2
 32199  014CE4  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 32200  014CE8  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 32201  014CEC  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 32202  014CF0  EC41  F0B7         	call	i2___flge	;wreg free
 32203  014CF4  B0D8               	btfsc	status,0,c
 32204  014CF6  D00F               	goto	i2l1646
 32205  014CF8  0E00               	movlw	0
 32206  014CFA  0102               	movlb	2	; () banked
 32207  014CFC  6F67               	movwf	(_errno+1)& (0+255),b
 32208  014CFE  0E21               	movlw	33
 32209  014D00  6F66               	movwf	_errno& (0+255),b
 32210  014D02  0E00               	movlw	0
 32211  014D04  0100               	movlb	0	; () banked
 32212  014D06  6F91               	movwf	?_asin& (0+255),b
 32213  014D08  0E00               	movlw	0
 32214  014D0A  6F92               	movwf	(?_asin+1)& (0+255),b
 32215  014D0C  0E00               	movlw	0
 32216  014D0E  6F93               	movwf	(?_asin+2)& (0+255),b
 32217  014D10  0E00               	movlw	0
 32218  014D12  6F94               	movwf	(?_asin+3)& (0+255),b
 32219                           
 32220                           ; BSR set to: 0
 32221  014D14  0012               	return	
 32222  014D16                     i2l1646:
 32223                           
 32224                           ; BSR set to: 0
 32225  014D16  0E00               	movlw	0
 32226  014D18  0100               	movlb	0	; () banked
 32227  014D1A  6F95               	movwf	asin@sgn& (0+255),b
 32228  014D1C  0E00               	movlw	0
 32229  014D1E  6F96               	movwf	(asin@sgn+1)& (0+255),b
 32230  014D20  0E80               	movlw	128
 32231  014D22  6F97               	movwf	(asin@sgn+2)& (0+255),b
 32232  014D24  0E3F               	movlw	63
 32233  014D26  6F98               	movwf	(asin@sgn+3)& (0+255),b
 32234                           
 32235                           ; BSR set to: 0
 32236  014D28  C091  F034         	movff	asin@x,i2___flmul@a
 32237  014D2C  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 32238  014D30  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 32239  014D34  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 32240  014D38  C091  F030         	movff	asin@x,i2___flmul@b
 32241  014D3C  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 32242  014D40  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 32243  014D44  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 32244  014D48  EC78  F0A1         	call	i2___flmul	;wreg free
 32245  014D4C  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 32246  014D50  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 32247  014D54  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 32248  014D58  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 32249  014D5C  ECD4  F0C2         	call	i2___flneg	;wreg free
 32250  014D60  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32251  014D64  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32252  014D68  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32253  014D6C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32254  014D70  0E00               	movlw	0
 32255  014D72  6E5A               	movwf	i2___fladd@a,c
 32256  014D74  0E00               	movlw	0
 32257  014D76  6E5B               	movwf	i2___fladd@a+1,c
 32258  014D78  0E80               	movlw	128
 32259  014D7A  6E5C               	movwf	i2___fladd@a+2,c
 32260  014D7C  0E3F               	movlw	63
 32261  014D7E  6E5D               	movwf	i2___fladd@a+3,c
 32262  014D80  ECBF  F0A4         	call	i2___fladd	;wreg free
 32263  014D84  C056  F06C         	movff	?i2___fladd,sqrt@a
 32264  014D88  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 32265  014D8C  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 32266  014D90  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 32267  014D94  EC5D  F0A9         	call	_sqrt	;wreg free
 32268  014D98  C06C  F0A1         	movff	?_sqrt,asin@y
 32269  014D9C  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 32270  014DA0  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 32271  014DA4  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 32272  014DA8  C091  F030         	movff	asin@x,fabs@d
 32273  014DAC  C092  F031         	movff	asin@x+1,fabs@d+1
 32274  014DB0  C093  F032         	movff	asin@x+2,fabs@d+2
 32275  014DB4  C094  F033         	movff	asin@x+3,fabs@d+3
 32276  014DB8  ECD0  F0C1         	call	_fabs	;wreg free
 32277  014DBC  C030  F034         	movff	?_fabs,i2___flge@ff1
 32278  014DC0  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 32279  014DC4  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 32280  014DC8  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 32281  014DCC  0E8F               	movlw	143
 32282  014DCE  6E38               	movwf	i2___flge@ff2,c
 32283  014DD0  0EC2               	movlw	194
 32284  014DD2  6E39               	movwf	i2___flge@ff2+1,c
 32285  014DD4  0E35               	movlw	53
 32286  014DD6  6E3A               	movwf	i2___flge@ff2+2,c
 32287  014DD8  0E3F               	movlw	63
 32288  014DDA  6E3B               	movwf	i2___flge@ff2+3,c
 32289  014DDC  EC41  F0B7         	call	i2___flge	;wreg free
 32290  014DE0  B0D8               	btfsc	status,0,c
 32291  014DE2  D02D               	goto	i2l1648
 32292  014DE4  C091  F013         	movff	asin@x,i2___fldiv@b
 32293  014DE8  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 32294  014DEC  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 32295  014DF0  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 32296  014DF4  C0A1  F017         	movff	asin@y,i2___fldiv@a
 32297  014DF8  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 32298  014DFC  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 32299  014E00  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 32300  014E04  EC7F  F0AD         	call	i2___fldiv	;wreg free
 32301  014E08  C013  F0A5         	movff	?i2___fldiv,_asin$4094
 32302  014E0C  C014  F0A6         	movff	?i2___fldiv+1,_asin$4094+1
 32303  014E10  C015  F0A7         	movff	?i2___fldiv+2,_asin$4094+2
 32304  014E14  C016  F0A8         	movff	?i2___fldiv+3,_asin$4094+3
 32305  014E18  C0A5  F07C         	movff	_asin$4094,atan@f
 32306  014E1C  C0A6  F07D         	movff	_asin$4094+1,atan@f+1
 32307  014E20  C0A7  F07E         	movff	_asin$4094+2,atan@f+2
 32308  014E24  C0A8  F07F         	movff	_asin$4094+3,atan@f+3
 32309  014E28  EC55  F0B1         	call	_atan	;wreg free
 32310  014E2C  C07C  F091         	movff	?_atan,?_asin
 32311  014E30  C07D  F092         	movff	?_atan+1,?_asin+1
 32312  014E34  C07E  F093         	movff	?_atan+2,?_asin+2
 32313  014E38  C07F  F094         	movff	?_atan+3,?_asin+3
 32314  014E3C  0012               	return	
 32315  014E3E                     i2l1648:
 32316  014E3E  0100               	movlb	0	; () banked
 32317  014E40  AF94               	btfss	(asin@x+3)& (0+255),7,b
 32318  014E42  D06D               	goto	i2l1649
 32319                           
 32320                           ; BSR set to: 0
 32321  014E44  C091  F017         	movff	asin@x,i2___fldiv@a
 32322  014E48  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 32323  014E4C  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 32324  014E50  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 32325  014E54  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 32326  014E58  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 32327  014E5C  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 32328  014E60  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 32329  014E64  ECD4  F0C2         	call	i2___flneg	;wreg free
 32330  014E68  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 32331  014E6C  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 32332  014E70  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 32333  014E74  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 32334  014E78  EC7F  F0AD         	call	i2___fldiv	;wreg free
 32335  014E7C  C013  F0A5         	movff	?i2___fldiv,_asin$4094
 32336  014E80  C014  F0A6         	movff	?i2___fldiv+1,_asin$4094+1
 32337  014E84  C015  F0A7         	movff	?i2___fldiv+2,_asin$4094+2
 32338  014E88  C016  F0A8         	movff	?i2___fldiv+3,_asin$4094+3
 32339  014E8C  C0A5  F07C         	movff	_asin$4094,atan@f
 32340  014E90  C0A6  F07D         	movff	_asin$4094+1,atan@f+1
 32341  014E94  C0A7  F07E         	movff	_asin$4094+2,atan@f+2
 32342  014E98  C0A8  F07F         	movff	_asin$4094+3,atan@f+3
 32343  014E9C  EC55  F0B1         	call	_atan	;wreg free
 32344  014EA0  C07C  F09D         	movff	?_atan,_asin$4095
 32345  014EA4  C07D  F09E         	movff	?_atan+1,_asin$4095+1
 32346  014EA8  C07E  F09F         	movff	?_atan+2,_asin$4095+2
 32347  014EAC  C07F  F0A0         	movff	?_atan+3,_asin$4095+3
 32348  014EB0  0EDB               	movlw	219
 32349  014EB2  6E5A               	movwf	i2___fladd@a,c
 32350  014EB4  0E0F               	movlw	15
 32351  014EB6  6E5B               	movwf	i2___fladd@a+1,c
 32352  014EB8  0EC9               	movlw	201
 32353  014EBA  6E5C               	movwf	i2___fladd@a+2,c
 32354  014EBC  0E3F               	movlw	63
 32355  014EBE  6E5D               	movwf	i2___fladd@a+3,c
 32356  014EC0  C09D  F02C         	movff	_asin$4095,i2___flneg@f1
 32357  014EC4  C09E  F02D         	movff	_asin$4095+1,i2___flneg@f1+1
 32358  014EC8  C09F  F02E         	movff	_asin$4095+2,i2___flneg@f1+2
 32359  014ECC  C0A0  F02F         	movff	_asin$4095+3,i2___flneg@f1+3
 32360  014ED0  ECD4  F0C2         	call	i2___flneg	;wreg free
 32361  014ED4  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32362  014ED8  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32363  014EDC  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32364  014EE0  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32365  014EE4  ECBF  F0A4         	call	i2___fladd	;wreg free
 32366  014EE8  C056  F099         	movff	?i2___fladd,_asin$4096
 32367  014EEC  C057  F09A         	movff	?i2___fladd+1,_asin$4096+1
 32368  014EF0  C058  F09B         	movff	?i2___fladd+2,_asin$4096+2
 32369  014EF4  C059  F09C         	movff	?i2___fladd+3,_asin$4096+3
 32370  014EF8  C099  F02C         	movff	_asin$4096,i2___flneg@f1
 32371  014EFC  C09A  F02D         	movff	_asin$4096+1,i2___flneg@f1+1
 32372  014F00  C09B  F02E         	movff	_asin$4096+2,i2___flneg@f1+2
 32373  014F04  C09C  F02F         	movff	_asin$4096+3,i2___flneg@f1+3
 32374  014F08  ECD4  F0C2         	call	i2___flneg	;wreg free
 32375  014F0C  C02C  F091         	movff	?i2___flneg,?_asin
 32376  014F10  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 32377  014F14  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 32378  014F18  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 32379  014F1C  0012               	return	
 32380  014F1E                     i2l1649:
 32381  014F1E  C091  F017         	movff	asin@x,i2___fldiv@a
 32382  014F22  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 32383  014F26  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 32384  014F2A  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 32385  014F2E  C0A1  F013         	movff	asin@y,i2___fldiv@b
 32386  014F32  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 32387  014F36  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 32388  014F3A  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 32389  014F3E  EC7F  F0AD         	call	i2___fldiv	;wreg free
 32390  014F42  C013  F0A5         	movff	?i2___fldiv,_asin$4094
 32391  014F46  C014  F0A6         	movff	?i2___fldiv+1,_asin$4094+1
 32392  014F4A  C015  F0A7         	movff	?i2___fldiv+2,_asin$4094+2
 32393  014F4E  C016  F0A8         	movff	?i2___fldiv+3,_asin$4094+3
 32394  014F52  C0A5  F07C         	movff	_asin$4094,atan@f
 32395  014F56  C0A6  F07D         	movff	_asin$4094+1,atan@f+1
 32396  014F5A  C0A7  F07E         	movff	_asin$4094+2,atan@f+2
 32397  014F5E  C0A8  F07F         	movff	_asin$4094+3,atan@f+3
 32398  014F62  EC55  F0B1         	call	_atan	;wreg free
 32399  014F66  C07C  F09D         	movff	?_atan,_asin$4095
 32400  014F6A  C07D  F09E         	movff	?_atan+1,_asin$4095+1
 32401  014F6E  C07E  F09F         	movff	?_atan+2,_asin$4095+2
 32402  014F72  C07F  F0A0         	movff	?_atan+3,_asin$4095+3
 32403  014F76  C09D  F02C         	movff	_asin$4095,i2___flneg@f1
 32404  014F7A  C09E  F02D         	movff	_asin$4095+1,i2___flneg@f1+1
 32405  014F7E  C09F  F02E         	movff	_asin$4095+2,i2___flneg@f1+2
 32406  014F82  C0A0  F02F         	movff	_asin$4095+3,i2___flneg@f1+3
 32407  014F86  ECD4  F0C2         	call	i2___flneg	;wreg free
 32408  014F8A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32409  014F8E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32410  014F92  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32411  014F96  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32412  014F9A  0EDB               	movlw	219
 32413  014F9C  6E5A               	movwf	i2___fladd@a,c
 32414  014F9E  0E0F               	movlw	15
 32415  014FA0  6E5B               	movwf	i2___fladd@a+1,c
 32416  014FA2  0EC9               	movlw	201
 32417  014FA4  6E5C               	movwf	i2___fladd@a+2,c
 32418  014FA6  0E3F               	movlw	63
 32419  014FA8  6E5D               	movwf	i2___fladd@a+3,c
 32420  014FAA  ECBF  F0A4         	call	i2___fladd	;wreg free
 32421  014FAE  C056  F091         	movff	?i2___fladd,?_asin
 32422  014FB2  C057  F092         	movff	?i2___fladd+1,?_asin+1
 32423  014FB6  C058  F093         	movff	?i2___fladd+2,?_asin+2
 32424  014FBA  C059  F094         	movff	?i2___fladd+3,?_asin+3
 32425  014FBE  0012               	return	
 32426  014FC0                     __end_of_asin:
 32427                           	opt stack 0
 32428                           tosu	equ	0xFFF
 32429                           tosh	equ	0xFFE
 32430                           tosl	equ	0xFFD
 32431                           pclatu	equ	0xFFB
 32432                           pclath	equ	0xFFA
 32433                           tblptru	equ	0xFF8
 32434                           tblptrh	equ	0xFF7
 32435                           tblptrl	equ	0xFF6
 32436                           tablat	equ	0xFF5
 32437                           prodh	equ	0xFF4
 32438                           prodl	equ	0xFF3
 32439                           intcon	equ	0xFF2
 32440                           indf0	equ	0xFEF
 32441                           postinc0	equ	0xFEE
 32442                           fsr0h	equ	0xFEA
 32443                           fsr0l	equ	0xFE9
 32444                           wreg	equ	0xFE8
 32445                           indf1	equ	0xFE7
 32446                           postdec1	equ	0xFE5
 32447                           plusw1	equ	0xFE3
 32448                           fsr1h	equ	0xFE2
 32449                           fsr1l	equ	0xFE1
 32450                           bsr	equ	0xFE0
 32451                           indf2	equ	0xFDF
 32452                           postinc2	equ	0xFDE
 32453                           postdec2	equ	0xFDD
 32454                           plusw2	equ	0xFDB
 32455                           fsr2h	equ	0xFDA
 32456                           fsr2l	equ	0xFD9
 32457                           status	equ	0xFD8
 32458                           
 32459 ;; *************** function _sqrt *****************
 32460 ;; Defined at:
 32461 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 32462 ;; Parameters:    Size  Location     Type
 32463 ;;  a               4   12[BANK0 ] void 
 32464 ;; Auto vars:     Size  Location     Type
 32465 ;;  frac            4   37[BANK0 ] unsigned long 
 32466 ;;  root            4   33[BANK0 ] struct .
 32467 ;;  grs             4   27[BANK0 ] unsigned long 
 32468 ;;  tfrac           4   22[BANK0 ] unsigned long 
 32469 ;;  exp             2   31[BANK0 ] int 
 32470 ;;  p               1   26[BANK0 ] unsigned char 
 32471 ;;  i               1   21[BANK0 ] unsigned char 
 32472 ;;  sign            1   20[BANK0 ] unsigned char 
 32473 ;; Return value:  Size  Location     Type
 32474 ;;                  4   12[BANK0 ] unsigned char 
 32475 ;; Registers used:
 32476 ;;		wreg, status,2, status,0
 32477 ;; Tracked objects:
 32478 ;;		On entry : 0/0
 32479 ;;		On exit  : 0/0
 32480 ;;		Unchanged: 0/0
 32481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32482 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32483 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32484 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32485 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32486 ;;Total ram usage:       29 bytes
 32487 ;; Hardware stack levels used:    1
 32488 ;; This function calls:
 32489 ;;		Nothing
 32490 ;; This function is called by:
 32491 ;;		_peakToRMS
 32492 ;;		_asin
 32493 ;; This function uses a non-reentrant model
 32494 ;;
 32495                           
 32496                           	psect	text105
 32497  0152BA                     __ptext105:
 32498                           	opt stack 0
 32499  0152BA                     _sqrt:
 32500                           	opt stack 15
 32501                           
 32502                           ;incstack = 0
 32503  0152BA  0100               	movlb	0	; () banked
 32504  0152BC  516F               	movf	(sqrt@a+3)& (0+255),w,b
 32505  0152BE  0B80               	andlw	128
 32506  0152C0  6F74               	movwf	sqrt@sign& (0+255),b
 32507  0152C2  516F               	movf	(sqrt@a+3)& (0+255),w,b
 32508  0152C4  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 32509  0152C6  6F7A               	movwf	sqrt@p& (0+255),b
 32510                           
 32511                           ; BSR set to: 0
 32512  0152C8  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 32513                           
 32514                           ; BSR set to: 0
 32515  0152CA  817A               	bsf	sqrt@p& (0+255),0,b
 32516                           
 32517                           ; BSR set to: 0
 32518                           
 32519                           ; BSR set to: 0
 32520  0152CC  C07A  F07F         	movff	sqrt@p,sqrt@exp
 32521  0152D0  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 32522                           
 32523                           ; BSR set to: 0
 32524  0152D2  0EFF               	movlw	255
 32525  0152D4  156C               	andwf	sqrt@a& (0+255),w,b
 32526  0152D6  6F85               	movwf	sqrt@frac& (0+255),b
 32527  0152D8  0EFF               	movlw	255
 32528  0152DA  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 32529  0152DC  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 32530  0152DE  0E7F               	movlw	127
 32531  0152E0  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 32532  0152E2  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 32533  0152E4  0E00               	movlw	0
 32534  0152E6  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 32535  0152E8  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 32536                           
 32537                           ; BSR set to: 0
 32538  0152EA  517F               	movf	sqrt@exp& (0+255),w,b
 32539  0152EC  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 32540  0152EE  B4D8               	btfsc	status,2,c
 32541  0152F0  D005               	goto	i2l2175
 32542                           
 32543                           ; BSR set to: 0
 32544  0152F2  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 32545                           
 32546                           ; BSR set to: 0
 32547  0152F4  297F               	incf	sqrt@exp& (0+255),w,b
 32548  0152F6  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 32549  0152F8  A4D8               	btfss	status,2,c
 32550  0152FA  D008               	goto	i2l2177
 32551  0152FC                     i2l2175:
 32552                           
 32553                           ; BSR set to: 0
 32554                           
 32555                           ; BSR set to: 0
 32556  0152FC  0E00               	movlw	0
 32557  0152FE  6F85               	movwf	sqrt@frac& (0+255),b
 32558  015300  0E00               	movlw	0
 32559  015302  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 32560  015304  0E00               	movlw	0
 32561  015306  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 32562  015308  0E00               	movlw	0
 32563  01530A  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 32564  01530C                     i2l2177:
 32565                           
 32566                           ; BSR set to: 0
 32567                           
 32568                           ; BSR set to: 0
 32569  01530C  517F               	movf	sqrt@exp& (0+255),w,b
 32570  01530E  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 32571  015310  A4D8               	btfss	status,2,c
 32572  015312  D009               	goto	i2l2178
 32573                           
 32574                           ; BSR set to: 0
 32575  015314  0E00               	movlw	0
 32576  015316  6F6C               	movwf	?_sqrt& (0+255),b
 32577  015318  0E00               	movlw	0
 32578  01531A  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 32579  01531C  0E00               	movlw	0
 32580  01531E  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 32581  015320  0E00               	movlw	0
 32582  015322  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 32583                           
 32584                           ; BSR set to: 0
 32585  015324  0012               	return	
 32586  015326                     i2l2178:
 32587                           
 32588                           ; BSR set to: 0
 32589                           
 32590                           ; BSR set to: 0
 32591  015326  5174               	movf	sqrt@sign& (0+255),w,b
 32592  015328  B4D8               	btfsc	status,2,c
 32593  01532A  D01A               	goto	i2l2180
 32594                           
 32595                           ; BSR set to: 0
 32596  01532C  0E00               	movlw	0
 32597  01532E  6F81               	movwf	sqrt@root& (0+255),b
 32598  015330  0E00               	movlw	0
 32599  015332  6F82               	movwf	(sqrt@root+1)& (0+255),b
 32600  015334  0E40               	movlw	64
 32601  015336  6F83               	movwf	(sqrt@root+2)& (0+255),b
 32602  015338  0E00               	movlw	0
 32603  01533A  6F84               	movwf	(sqrt@root+3)& (0+255),b
 32604                           
 32605                           ; BSR set to: 0
 32606  01533C  0E80               	movlw	128
 32607  01533E  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 32608  015340  0EFF               	movlw	255
 32609  015342  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 32610                           
 32611                           ; BSR set to: 0
 32612  015344  0E00               	movlw	0
 32613  015346  0102               	movlb	2	; () banked
 32614  015348  6F67               	movwf	(_errno+1)& (0+255),b
 32615  01534A  0E21               	movlw	33
 32616  01534C  6F66               	movwf	_errno& (0+255),b
 32617                           
 32618                           ; BSR set to: 2
 32619  01534E  C081  F06C         	movff	sqrt@root,?_sqrt
 32620  015352  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 32621  015356  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 32622  01535A  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 32623                           
 32624                           ; BSR set to: 2
 32625  01535E  0012               	return	
 32626  015360                     i2l2180:
 32627                           
 32628                           ; BSR set to: 2
 32629  015360  0100               	movlb	0	; () banked
 32630  015362  297F               	incf	sqrt@exp& (0+255),w,b
 32631  015364  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 32632  015366  A4D8               	btfss	status,2,c
 32633  015368  D011               	goto	i2l2181
 32634                           
 32635                           ; BSR set to: 0
 32636  01536A  0E00               	movlw	0
 32637  01536C  6F81               	movwf	sqrt@root& (0+255),b
 32638  01536E  0E00               	movlw	0
 32639  015370  6F82               	movwf	(sqrt@root+1)& (0+255),b
 32640  015372  0E80               	movlw	128
 32641  015374  6F83               	movwf	(sqrt@root+2)& (0+255),b
 32642  015376  0E7F               	movlw	127
 32643  015378  6F84               	movwf	(sqrt@root+3)& (0+255),b
 32644                           
 32645                           ; BSR set to: 0
 32646  01537A  C081  F06C         	movff	sqrt@root,?_sqrt
 32647  01537E  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 32648  015382  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 32649  015386  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 32650                           
 32651                           ; BSR set to: 0
 32652  01538A  0012               	return	
 32653  01538C                     i2l2181:
 32654                           
 32655                           ; BSR set to: 0
 32656                           
 32657                           ; BSR set to: 0
 32658  01538C  0E81               	movlw	129
 32659  01538E  277F               	addwf	sqrt@exp& (0+255),f,b
 32660  015390  0EFF               	movlw	255
 32661  015392  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 32662  015394  517F               	movf	sqrt@exp& (0+255),w,b
 32663  015396  0B01               	andlw	1
 32664  015398  6F7A               	movwf	sqrt@p& (0+255),b
 32665  01539A  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 32666  01539C  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 32667  01539E  337F               	rrcf	sqrt@exp& (0+255),f,b
 32668  0153A0  0E7F               	movlw	127
 32669  0153A2  277F               	addwf	sqrt@exp& (0+255),f,b
 32670  0153A4  0E00               	movlw	0
 32671  0153A6  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 32672  0153A8  90D8               	bcf	status,0,c
 32673  0153AA  3585               	rlcf	sqrt@frac& (0+255),w,b
 32674  0153AC  6F76               	movwf	sqrt@tfrac& (0+255),b
 32675  0153AE  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 32676  0153B0  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 32677  0153B2  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 32678  0153B4  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 32679  0153B6  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 32680  0153B8  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 32681                           
 32682                           ; BSR set to: 0
 32683  0153BA  0E00               	movlw	0
 32684  0153BC  6F85               	movwf	sqrt@frac& (0+255),b
 32685  0153BE  0E00               	movlw	0
 32686  0153C0  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 32687  0153C2  0E00               	movlw	0
 32688  0153C4  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 32689  0153C6  0E00               	movlw	0
 32690  0153C8  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 32691                           
 32692                           ; BSR set to: 0
 32693  0153CA  0E00               	movlw	0
 32694  0153CC  6F7B               	movwf	sqrt@grs& (0+255),b
 32695  0153CE  0E00               	movlw	0
 32696  0153D0  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 32697  0153D2  0E00               	movlw	0
 32698  0153D4  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 32699  0153D6  0E01               	movlw	1
 32700  0153D8  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 32701                           
 32702                           ; BSR set to: 0
 32703  0153DA  517A               	movf	sqrt@p& (0+255),w,b
 32704  0153DC  B4D8               	btfsc	status,2,c
 32705  0153DE  D005               	goto	i2l2182
 32706                           
 32707                           ; BSR set to: 0
 32708  0153E0  90D8               	bcf	status,0,c
 32709  0153E2  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 32710  0153E4  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 32711  0153E6  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 32712  0153E8  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 32713  0153EA                     i2l2182:
 32714                           
 32715                           ; BSR set to: 0
 32716                           
 32717                           ; BSR set to: 0
 32718  0153EA  0E00               	movlw	0
 32719  0153EC  6F75               	movwf	sqrt@i& (0+255),b
 32720  0153EE  D052               	goto	i2l2183
 32721  0153F0                     
 32722                           ; BSR set to: 0
 32723                           
 32724                           ; BSR set to: 0
 32725  0153F0  517B               	movf	sqrt@grs& (0+255),w,b
 32726  0153F2  1385               	iorwf	sqrt@frac& (0+255),f,b
 32727  0153F4  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 32728  0153F6  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 32729  0153F8  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 32730  0153FA  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 32731  0153FC  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 32732  0153FE  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 32733  015400  5185               	movf	sqrt@frac& (0+255),w,b
 32734  015402  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 32735  015404  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 32736  015406  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 32737  015408  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 32738  01540A  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 32739  01540C  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 32740  01540E  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 32741  015410  A0D8               	btfss	status,0,c
 32742  015412  D011               	goto	i2l2185
 32743                           
 32744                           ; BSR set to: 0
 32745  015414  5185               	movf	sqrt@frac& (0+255),w,b
 32746  015416  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 32747  015418  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 32748  01541A  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 32749  01541C  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 32750  01541E  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 32751  015420  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 32752  015422  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 32753  015424  517B               	movf	sqrt@grs& (0+255),w,b
 32754  015426  2785               	addwf	sqrt@frac& (0+255),f,b
 32755  015428  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 32756  01542A  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 32757  01542C  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 32758  01542E  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 32759  015430  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 32760  015432  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 32761  015434  D014               	goto	i2l2186
 32762  015436                     i2l2185:
 32763                           
 32764                           ; BSR set to: 0
 32765                           
 32766                           ; BSR set to: 0
 32767  015436  C07B  F070         	movff	sqrt@grs,??_sqrt
 32768  01543A  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 32769  01543E  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 32770  015442  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 32771  015446  1F70               	comf	??_sqrt& (0+255),f,b
 32772  015448  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 32773  01544A  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 32774  01544C  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 32775  01544E  5170               	movf	??_sqrt& (0+255),w,b
 32776  015450  1785               	andwf	sqrt@frac& (0+255),f,b
 32777  015452  5171               	movf	(??_sqrt+1)& (0+255),w,b
 32778  015454  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 32779  015456  5172               	movf	(??_sqrt+2)& (0+255),w,b
 32780  015458  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 32781  01545A  5173               	movf	(??_sqrt+3)& (0+255),w,b
 32782  01545C  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 32783  01545E                     i2l2186:
 32784                           
 32785                           ; BSR set to: 0
 32786                           
 32787                           ; BSR set to: 0
 32788  01545E  C07B  F070         	movff	sqrt@grs,??_sqrt
 32789  015462  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 32790  015466  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 32791  01546A  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 32792  01546E  90D8               	bcf	status,0,c
 32793  015470  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 32794  015472  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 32795  015474  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 32796  015476  3370               	rrcf	??_sqrt& (0+255),f,b
 32797  015478  C070  F07B         	movff	??_sqrt,sqrt@grs
 32798  01547C  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 32799  015480  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 32800  015484  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 32801                           
 32802                           ; BSR set to: 0
 32803  015488  90D8               	bcf	status,0,c
 32804  01548A  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 32805  01548C  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 32806  01548E  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 32807  015490  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 32808                           
 32809                           ; BSR set to: 0
 32810  015492  2B75               	incf	sqrt@i& (0+255),f,b
 32811  015494                     i2l2183:
 32812                           
 32813                           ; BSR set to: 0
 32814                           
 32815                           ; BSR set to: 0
 32816  015494  0E18               	movlw	24
 32817  015496  6575               	cpfsgt	sqrt@i& (0+255),b
 32818  015498  D7AB               	goto	i2l2184
 32819                           
 32820                           ; BSR set to: 0
 32821                           
 32822                           ; BSR set to: 0
 32823  01549A  C085  F070         	movff	sqrt@frac,??_sqrt
 32824  01549E  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 32825  0154A2  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 32826  0154A6  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 32827  0154AA  90D8               	bcf	status,0,c
 32828  0154AC  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 32829  0154AE  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 32830  0154B0  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 32831  0154B2  3370               	rrcf	??_sqrt& (0+255),f,b
 32832  0154B4  C070  F085         	movff	??_sqrt,sqrt@frac
 32833  0154B8  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 32834  0154BC  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 32835  0154C0  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 32836                           
 32837                           ; BSR set to: 0
 32838  0154C4  0E01               	movlw	1
 32839  0154C6  1585               	andwf	sqrt@frac& (0+255),w,b
 32840  0154C8  6F7B               	movwf	sqrt@grs& (0+255),b
 32841  0154CA  0E00               	movlw	0
 32842  0154CC  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 32843  0154CE  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 32844  0154D0  0E00               	movlw	0
 32845  0154D2  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 32846  0154D4  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 32847  0154D6  0E00               	movlw	0
 32848  0154D8  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 32849  0154DA  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 32850                           
 32851                           ; BSR set to: 0
 32852  0154DC  C085  F070         	movff	sqrt@frac,??_sqrt
 32853  0154E0  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 32854  0154E4  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 32855  0154E8  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 32856  0154EC  90D8               	bcf	status,0,c
 32857  0154EE  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 32858  0154F0  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 32859  0154F2  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 32860  0154F4  3370               	rrcf	??_sqrt& (0+255),f,b
 32861  0154F6  C070  F085         	movff	??_sqrt,sqrt@frac
 32862  0154FA  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 32863  0154FE  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 32864  015502  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 32865  015506  517B               	movf	sqrt@grs& (0+255),w,b
 32866  015508  2785               	addwf	sqrt@frac& (0+255),f,b
 32867  01550A  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 32868  01550C  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 32869  01550E  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 32870  015510  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 32871  015512  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 32872  015514  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 32873                           
 32874                           ; BSR set to: 0
 32875  015516  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 32876  015518  D017               	goto	i2l2188
 32877                           
 32878                           ; BSR set to: 0
 32879  01551A  C085  F070         	movff	sqrt@frac,??_sqrt
 32880  01551E  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 32881  015522  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 32882  015526  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 32883  01552A  90D8               	bcf	status,0,c
 32884  01552C  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 32885  01552E  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 32886  015530  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 32887  015532  3370               	rrcf	??_sqrt& (0+255),f,b
 32888  015534  C070  F085         	movff	??_sqrt,sqrt@frac
 32889  015538  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 32890  01553C  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 32891  015540  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 32892  015544  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 32893  015546  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 32894  015548                     i2l2188:
 32895                           
 32896                           ; BSR set to: 0
 32897                           
 32898                           ; BSR set to: 0
 32899  015548  0EFF               	movlw	255
 32900  01554A  1585               	andwf	sqrt@frac& (0+255),w,b
 32901  01554C  6F81               	movwf	sqrt@root& (0+255),b
 32902  01554E  0EFF               	movlw	255
 32903  015550  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 32904  015552  6F82               	movwf	(sqrt@root+1)& (0+255),b
 32905  015554  0E7F               	movlw	127
 32906  015556  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 32907  015558  6F83               	movwf	(sqrt@root+2)& (0+255),b
 32908  01555A  0E00               	movlw	0
 32909  01555C  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 32910  01555E  6F84               	movwf	(sqrt@root+3)& (0+255),b
 32911                           
 32912                           ; BSR set to: 0
 32913  015560  C07F  F07A         	movff	sqrt@exp,sqrt@p
 32914                           
 32915                           ; BSR set to: 0
 32916  015564  B17A               	btfsc	sqrt@p& (0+255),0,b
 32917                           
 32918                           ; BSR set to: 0
 32919  015566  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 32920                           
 32921                           ; BSR set to: 0
 32922                           
 32923                           ; BSR set to: 0
 32924  015568  90D8               	bcf	status,0,c
 32925  01556A  317A               	rrcf	sqrt@p& (0+255),w,b
 32926  01556C  6F84               	movwf	(sqrt@root+3)& (0+255),b
 32927                           
 32928                           ; BSR set to: 0
 32929  01556E  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 32930                           
 32931                           ; BSR set to: 0
 32932  015570  C081  F06C         	movff	sqrt@root,?_sqrt
 32933  015574  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 32934  015578  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 32935  01557C  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 32936  015580  0012               	return	
 32937  015582                     __end_of_sqrt:
 32938                           	opt stack 0
 32939                           tosu	equ	0xFFF
 32940                           tosh	equ	0xFFE
 32941                           tosl	equ	0xFFD
 32942                           pclatu	equ	0xFFB
 32943                           pclath	equ	0xFFA
 32944                           tblptru	equ	0xFF8
 32945                           tblptrh	equ	0xFF7
 32946                           tblptrl	equ	0xFF6
 32947                           tablat	equ	0xFF5
 32948                           prodh	equ	0xFF4
 32949                           prodl	equ	0xFF3
 32950                           intcon	equ	0xFF2
 32951                           indf0	equ	0xFEF
 32952                           postinc0	equ	0xFEE
 32953                           fsr0h	equ	0xFEA
 32954                           fsr0l	equ	0xFE9
 32955                           wreg	equ	0xFE8
 32956                           indf1	equ	0xFE7
 32957                           postdec1	equ	0xFE5
 32958                           plusw1	equ	0xFE3
 32959                           fsr1h	equ	0xFE2
 32960                           fsr1l	equ	0xFE1
 32961                           bsr	equ	0xFE0
 32962                           indf2	equ	0xFDF
 32963                           postinc2	equ	0xFDE
 32964                           postdec2	equ	0xFDD
 32965                           plusw2	equ	0xFDB
 32966                           fsr2h	equ	0xFDA
 32967                           fsr2l	equ	0xFD9
 32968                           status	equ	0xFD8
 32969                           
 32970 ;; *************** function _atan *****************
 32971 ;; Defined at:
 32972 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 32973 ;; Parameters:    Size  Location     Type
 32974 ;;  f               4   28[BANK0 ] unsigned char 
 32975 ;; Auto vars:     Size  Location     Type
 32976 ;;  val             4   45[BANK0 ] unsigned char 
 32977 ;;  val_squared     4   41[BANK0 ] unsigned char 
 32978 ;;  x               4   36[BANK0 ] unsigned char 
 32979 ;;  y               4   32[BANK0 ] unsigned char 
 32980 ;;  recip           1   40[BANK0 ] unsigned char 
 32981 ;; Return value:  Size  Location     Type
 32982 ;;                  4   28[BANK0 ] unsigned char 
 32983 ;; Registers used:
 32984 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32985 ;; Tracked objects:
 32986 ;;		On entry : 0/0
 32987 ;;		On exit  : 0/0
 32988 ;;		Unchanged: 0/0
 32989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32990 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32991 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32993 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32994 ;;Total ram usage:       21 bytes
 32995 ;; Hardware stack levels used:    1
 32996 ;; Hardware stack levels required when called:    2
 32997 ;; This function calls:
 32998 ;;		_eval_poly
 32999 ;;		_fabs
 33000 ;;		i2___fladd
 33001 ;;		i2___fldiv
 33002 ;;		i2___flge
 33003 ;;		i2___flmul
 33004 ;;		i2___flneg
 33005 ;; This function is called by:
 33006 ;;		_asin
 33007 ;; This function uses a non-reentrant model
 33008 ;;
 33009                           
 33010                           	psect	text106
 33011  0162AA                     __ptext106:
 33012                           	opt stack 0
 33013  0162AA                     _atan:
 33014                           	opt stack 11
 33015                           
 33016                           ;incstack = 0
 33017  0162AA  C07C  F030         	movff	atan@f,fabs@d
 33018  0162AE  C07D  F031         	movff	atan@f+1,fabs@d+1
 33019  0162B2  C07E  F032         	movff	atan@f+2,fabs@d+2
 33020  0162B6  C07F  F033         	movff	atan@f+3,fabs@d+3
 33021  0162BA  ECD0  F0C1         	call	_fabs	;wreg free
 33022  0162BE  C030  F08D         	movff	?_fabs,atan@val
 33023  0162C2  C031  F08E         	movff	?_fabs+1,atan@val+1
 33024  0162C6  C032  F08F         	movff	?_fabs+2,atan@val+2
 33025  0162CA  C033  F090         	movff	?_fabs+3,atan@val+3
 33026  0162CE  0100               	movlb	0	; () banked
 33027  0162D0  518D               	movf	atan@val& (0+255),w,b
 33028  0162D2  118E               	iorwf	(atan@val+1)& (0+255),w,b
 33029  0162D4  118F               	iorwf	(atan@val+2)& (0+255),w,b
 33030  0162D6  1190               	iorwf	(atan@val+3)& (0+255),w,b
 33031  0162D8  A4D8               	btfss	status,2,c
 33032  0162DA  D009               	goto	i2l1665
 33033                           
 33034                           ; BSR set to: 0
 33035  0162DC  0E00               	movlw	0
 33036  0162DE  6F7C               	movwf	?_atan& (0+255),b
 33037  0162E0  0E00               	movlw	0
 33038  0162E2  6F7D               	movwf	(?_atan+1)& (0+255),b
 33039  0162E4  0E00               	movlw	0
 33040  0162E6  6F7E               	movwf	(?_atan+2)& (0+255),b
 33041  0162E8  0E00               	movlw	0
 33042  0162EA  6F7F               	movwf	(?_atan+3)& (0+255),b
 33043                           
 33044                           ; BSR set to: 0
 33045  0162EC  0012               	return	
 33046  0162EE                     i2l1665:
 33047                           
 33048                           ; BSR set to: 0
 33049                           
 33050                           ; BSR set to: 0
 33051  0162EE  0E00               	movlw	0
 33052  0162F0  6E34               	movwf	i2___flge@ff1,c
 33053  0162F2  0E00               	movlw	0
 33054  0162F4  6E35               	movwf	i2___flge@ff1+1,c
 33055  0162F6  0E80               	movlw	128
 33056  0162F8  6E36               	movwf	i2___flge@ff1+2,c
 33057  0162FA  0E3F               	movlw	63
 33058  0162FC  6E37               	movwf	i2___flge@ff1+3,c
 33059  0162FE  C08D  F038         	movff	atan@val,i2___flge@ff2
 33060  016302  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 33061  016306  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 33062  01630A  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 33063  01630E  EC41  F0B7         	call	i2___flge	;wreg free
 33064  016312  B0D8               	btfsc	status,0,c
 33065  016314  D002               	goto	i2u1475_40
 33066  016316  0E01               	movlw	1
 33067  016318  D001               	goto	i2u1476_40
 33068  01631A                     i2u1475_40:
 33069  01631A  0E00               	movlw	0
 33070  01631C                     i2u1476_40:
 33071  01631C  0100               	movlb	0	; () banked
 33072  01631E  6F88               	movwf	atan@recip& (0+255),b
 33073  016320  5188               	movf	atan@recip& (0+255),w,b
 33074  016322  B4D8               	btfsc	status,2,c
 33075  016324  D01A               	goto	i2l1667
 33076                           
 33077                           ; BSR set to: 0
 33078  016326  0E00               	movlw	0
 33079  016328  6E13               	movwf	i2___fldiv@b,c
 33080  01632A  0E00               	movlw	0
 33081  01632C  6E14               	movwf	i2___fldiv@b+1,c
 33082  01632E  0E80               	movlw	128
 33083  016330  6E15               	movwf	i2___fldiv@b+2,c
 33084  016332  0E3F               	movlw	63
 33085  016334  6E16               	movwf	i2___fldiv@b+3,c
 33086  016336  C08D  F017         	movff	atan@val,i2___fldiv@a
 33087  01633A  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 33088  01633E  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 33089  016342  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 33090  016346  EC7F  F0AD         	call	i2___fldiv	;wreg free
 33091  01634A  C013  F08D         	movff	?i2___fldiv,atan@val
 33092  01634E  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 33093  016352  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 33094  016356  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 33095  01635A                     i2l1667:
 33096  01635A  C08D  F030         	movff	atan@val,i2___flmul@b
 33097  01635E  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 33098  016362  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 33099  016366  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 33100  01636A  C08D  F034         	movff	atan@val,i2___flmul@a
 33101  01636E  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 33102  016372  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 33103  016376  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 33104  01637A  EC78  F0A1         	call	i2___flmul	;wreg free
 33105  01637E  C030  F089         	movff	?i2___flmul,atan@val_squared
 33106  016382  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 33107  016386  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 33108  01638A  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 33109  01638E  C089  F06C         	movff	atan@val_squared,eval_poly@x
 33110  016392  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 33111  016396  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 33112  01639A  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 33113  01639E  0EDF               	movlw	low atan@coeff_b
 33114  0163A0  0100               	movlb	0	; () banked
 33115  0163A2  6F70               	movwf	eval_poly@d& (0+255),b
 33116  0163A4  0EEA               	movlw	high atan@coeff_b
 33117  0163A6  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 33118  0163A8  0E00               	movlw	0
 33119  0163AA  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 33120  0163AC  0E04               	movlw	4
 33121  0163AE  6F72               	movwf	eval_poly@n& (0+255),b
 33122  0163B0  EC5A  F0B8         	call	_eval_poly	;wreg free
 33123  0163B4  C06C  F080         	movff	?_eval_poly,atan@y
 33124  0163B8  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 33125  0163BC  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 33126  0163C0  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 33127  0163C4  C089  F06C         	movff	atan@val_squared,eval_poly@x
 33128  0163C8  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 33129  0163CC  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 33130  0163D0  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 33131  0163D4  0EB3               	movlw	low atan@coeff_a
 33132  0163D6  0100               	movlb	0	; () banked
 33133  0163D8  6F70               	movwf	eval_poly@d& (0+255),b
 33134  0163DA  0EEA               	movlw	high atan@coeff_a
 33135  0163DC  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 33136  0163DE  0E00               	movlw	0
 33137  0163E0  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 33138  0163E2  0E05               	movlw	5
 33139  0163E4  6F72               	movwf	eval_poly@n& (0+255),b
 33140  0163E6  EC5A  F0B8         	call	_eval_poly	;wreg free
 33141  0163EA  C06C  F084         	movff	?_eval_poly,atan@x
 33142  0163EE  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 33143  0163F2  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 33144  0163F6  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 33145  0163FA  C08D  F030         	movff	atan@val,i2___flmul@b
 33146  0163FE  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 33147  016402  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 33148  016406  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 33149  01640A  C080  F017         	movff	atan@y,i2___fldiv@a
 33150  01640E  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 33151  016412  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 33152  016416  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 33153  01641A  C084  F013         	movff	atan@x,i2___fldiv@b
 33154  01641E  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 33155  016422  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 33156  016426  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 33157  01642A  EC7F  F0AD         	call	i2___fldiv	;wreg free
 33158  01642E  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 33159  016432  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 33160  016436  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 33161  01643A  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 33162  01643E  EC78  F0A1         	call	i2___flmul	;wreg free
 33163  016442  C030  F08D         	movff	?i2___flmul,atan@val
 33164  016446  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 33165  01644A  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 33166  01644E  C033  F090         	movff	?i2___flmul+3,atan@val+3
 33167  016452  0100               	movlb	0	; () banked
 33168  016454  5188               	movf	atan@recip& (0+255),w,b
 33169  016456  B4D8               	btfsc	status,2,c
 33170  016458  D024               	goto	i2l1668
 33171                           
 33172                           ; BSR set to: 0
 33173  01645A  C08D  F02C         	movff	atan@val,i2___flneg@f1
 33174  01645E  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 33175  016462  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 33176  016466  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 33177  01646A  ECD4  F0C2         	call	i2___flneg	;wreg free
 33178  01646E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33179  016472  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33180  016476  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33181  01647A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33182  01647E  0EDB               	movlw	219
 33183  016480  6E5A               	movwf	i2___fladd@a,c
 33184  016482  0E0F               	movlw	15
 33185  016484  6E5B               	movwf	i2___fladd@a+1,c
 33186  016486  0EC9               	movlw	201
 33187  016488  6E5C               	movwf	i2___fladd@a+2,c
 33188  01648A  0E3F               	movlw	63
 33189  01648C  6E5D               	movwf	i2___fladd@a+3,c
 33190  01648E  ECBF  F0A4         	call	i2___fladd	;wreg free
 33191  016492  C056  F08D         	movff	?i2___fladd,atan@val
 33192  016496  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 33193  01649A  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 33194  01649E  C059  F090         	movff	?i2___fladd+3,atan@val+3
 33195  0164A2                     i2l1668:
 33196  0164A2  0100               	movlb	0	; () banked
 33197  0164A4  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 33198  0164A6  D009               	goto	i2l1670
 33199                           
 33200                           ; BSR set to: 0
 33201  0164A8  C08D  F07C         	movff	atan@val,?_atan
 33202  0164AC  C08E  F07D         	movff	atan@val+1,?_atan+1
 33203  0164B0  C08F  F07E         	movff	atan@val+2,?_atan+2
 33204  0164B4  C090  F07F         	movff	atan@val+3,?_atan+3
 33205  0164B8  0012               	return	
 33206  0164BA                     i2l1670:
 33207                           
 33208                           ; BSR set to: 0
 33209                           
 33210                           ; BSR set to: 0
 33211  0164BA  C08D  F02C         	movff	atan@val,i2___flneg@f1
 33212  0164BE  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 33213  0164C2  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 33214  0164C6  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 33215  0164CA  ECD4  F0C2         	call	i2___flneg	;wreg free
 33216  0164CE  C02C  F07C         	movff	?i2___flneg,?_atan
 33217  0164D2  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 33218  0164D6  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 33219  0164DA  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 33220  0164DE  0012               	return	
 33221  0164E0                     __end_of_atan:
 33222                           	opt stack 0
 33223                           tosu	equ	0xFFF
 33224                           tosh	equ	0xFFE
 33225                           tosl	equ	0xFFD
 33226                           pclatu	equ	0xFFB
 33227                           pclath	equ	0xFFA
 33228                           tblptru	equ	0xFF8
 33229                           tblptrh	equ	0xFF7
 33230                           tblptrl	equ	0xFF6
 33231                           tablat	equ	0xFF5
 33232                           prodh	equ	0xFF4
 33233                           prodl	equ	0xFF3
 33234                           intcon	equ	0xFF2
 33235                           indf0	equ	0xFEF
 33236                           postinc0	equ	0xFEE
 33237                           fsr0h	equ	0xFEA
 33238                           fsr0l	equ	0xFE9
 33239                           wreg	equ	0xFE8
 33240                           indf1	equ	0xFE7
 33241                           postdec1	equ	0xFE5
 33242                           plusw1	equ	0xFE3
 33243                           fsr1h	equ	0xFE2
 33244                           fsr1l	equ	0xFE1
 33245                           bsr	equ	0xFE0
 33246                           indf2	equ	0xFDF
 33247                           postinc2	equ	0xFDE
 33248                           postdec2	equ	0xFDD
 33249                           plusw2	equ	0xFDB
 33250                           fsr2h	equ	0xFDA
 33251                           fsr2l	equ	0xFD9
 33252                           status	equ	0xFD8
 33253                           
 33254 ;; *************** function _fabs *****************
 33255 ;; Defined at:
 33256 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 33257 ;; Parameters:    Size  Location     Type
 33258 ;;  d               4   47[COMRAM] unsigned char 
 33259 ;; Auto vars:     Size  Location     Type
 33260 ;;		None
 33261 ;; Return value:  Size  Location     Type
 33262 ;;                  4   47[COMRAM] unsigned char 
 33263 ;; Registers used:
 33264 ;;		wreg, status,2, status,0, cstack
 33265 ;; Tracked objects:
 33266 ;;		On entry : 0/0
 33267 ;;		On exit  : 0/0
 33268 ;;		Unchanged: 0/0
 33269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33274 ;;Total ram usage:        4 bytes
 33275 ;; Hardware stack levels used:    1
 33276 ;; Hardware stack levels required when called:    1
 33277 ;; This function calls:
 33278 ;;		i2___flneg
 33279 ;; This function is called by:
 33280 ;;		_asin
 33281 ;;		_atan
 33282 ;; This function uses a non-reentrant model
 33283 ;;
 33284                           
 33285                           	psect	text107
 33286  0183A0                     __ptext107:
 33287                           	opt stack 0
 33288  0183A0                     _fabs:
 33289                           	opt stack 12
 33290                           
 33291                           ;incstack = 0
 33292  0183A0  AE33               	btfss	fabs@d+3,7,c
 33293  0183A2  D013               	goto	i2l1762
 33294  0183A4  C030  F02C         	movff	fabs@d,i2___flneg@f1
 33295  0183A8  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 33296  0183AC  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 33297  0183B0  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 33298  0183B4  ECD4  F0C2         	call	i2___flneg	;wreg free
 33299  0183B8  C02C  F030         	movff	?i2___flneg,?_fabs
 33300  0183BC  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 33301  0183C0  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 33302  0183C4  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 33303  0183C8  0012               	return	
 33304  0183CA                     i2l1762:
 33305  0183CA  C030  F030         	movff	fabs@d,?_fabs
 33306  0183CE  C031  F031         	movff	fabs@d+1,?_fabs+1
 33307  0183D2  C032  F032         	movff	fabs@d+2,?_fabs+2
 33308  0183D6  C033  F033         	movff	fabs@d+3,?_fabs+3
 33309  0183DA  0012               	return		;funcret
 33310  0183DC                     __end_of_fabs:
 33311                           	opt stack 0
 33312                           tosu	equ	0xFFF
 33313                           tosh	equ	0xFFE
 33314                           tosl	equ	0xFFD
 33315                           pclatu	equ	0xFFB
 33316                           pclath	equ	0xFFA
 33317                           tblptru	equ	0xFF8
 33318                           tblptrh	equ	0xFF7
 33319                           tblptrl	equ	0xFF6
 33320                           tablat	equ	0xFF5
 33321                           prodh	equ	0xFF4
 33322                           prodl	equ	0xFF3
 33323                           intcon	equ	0xFF2
 33324                           indf0	equ	0xFEF
 33325                           postinc0	equ	0xFEE
 33326                           fsr0h	equ	0xFEA
 33327                           fsr0l	equ	0xFE9
 33328                           wreg	equ	0xFE8
 33329                           indf1	equ	0xFE7
 33330                           postdec1	equ	0xFE5
 33331                           plusw1	equ	0xFE3
 33332                           fsr1h	equ	0xFE2
 33333                           fsr1l	equ	0xFE1
 33334                           bsr	equ	0xFE0
 33335                           indf2	equ	0xFDF
 33336                           postinc2	equ	0xFDE
 33337                           postdec2	equ	0xFDD
 33338                           plusw2	equ	0xFDB
 33339                           fsr2h	equ	0xFDA
 33340                           fsr2l	equ	0xFD9
 33341                           status	equ	0xFD8
 33342                           
 33343 ;; *************** function _currentMeasuredToPeak *****************
 33344 ;; Defined at:
 33345 ;;		line 121 in file "main.c"
 33346 ;; Parameters:    Size  Location     Type
 33347 ;;  Measured        4   57[BANK0 ] unsigned char 
 33348 ;;  Angle           4   61[BANK0 ] unsigned char 
 33349 ;; Auto vars:     Size  Location     Type
 33350 ;;  Peak            4   65[BANK0 ] unsigned char 
 33351 ;; Return value:  Size  Location     Type
 33352 ;;                  4   57[BANK0 ] unsigned char 
 33353 ;; Registers used:
 33354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33355 ;; Tracked objects:
 33356 ;;		On entry : 0/0
 33357 ;;		On exit  : 0/0
 33358 ;;		Unchanged: 0/0
 33359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33360 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33361 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33363 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33364 ;;Total ram usage:       12 bytes
 33365 ;; Hardware stack levels used:    1
 33366 ;; Hardware stack levels required when called:    3
 33367 ;; This function calls:
 33368 ;;		_sin
 33369 ;;		i2___fldiv
 33370 ;; This function is called by:
 33371 ;;		_ADCPostProcessingCallback
 33372 ;; This function uses a non-reentrant model
 33373 ;;
 33374                           
 33375                           	psect	text108
 33376  017AAC                     __ptext108:
 33377                           	opt stack 0
 33378  017AAC                     _currentMeasuredToPeak:
 33379                           	opt stack 13
 33380                           
 33381                           ;main.c: 124: double Peak = 0.0;
 33382                           
 33383                           ;incstack = 0
 33384  017AAC  0E00               	movlw	0
 33385  017AAE  0100               	movlb	0	; () banked
 33386  017AB0  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 33387  017AB2  0E00               	movlw	0
 33388  017AB4  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 33389  017AB6  0E00               	movlw	0
 33390  017AB8  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 33391  017ABA  0E00               	movlw	0
 33392  017ABC  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 33393                           
 33394                           ; BSR set to: 0
 33395                           ;main.c: 127: Peak = sin(Angle);
 33396  017ABE  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 33397  017AC2  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 33398  017AC6  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 33399  017ACA  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 33400  017ACE  ECE0  F0A7         	call	_sin	;wreg free
 33401  017AD2  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 33402  017AD6  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 33403  017ADA  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 33404  017ADE  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 33405                           
 33406                           ;main.c: 128: Peak = Measured / Peak;
 33407  017AE2  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 33408  017AE6  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 33409  017AEA  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 33410  017AEE  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 33411  017AF2  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 33412  017AF6  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 33413  017AFA  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 33414  017AFE  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 33415  017B02  EC7F  F0AD         	call	i2___fldiv	;wreg free
 33416  017B06  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 33417  017B0A  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 33418  017B0E  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 33419  017B12  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 33420                           
 33421                           ;main.c: 129: return Peak;
 33422  017B16  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 33423  017B1A  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 33424  017B1E  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 33425  017B22  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 33426  017B26  0012               	return	
 33427  017B28                     __end_of_currentMeasuredToPeak:
 33428                           	opt stack 0
 33429                           tosu	equ	0xFFF
 33430                           tosh	equ	0xFFE
 33431                           tosl	equ	0xFFD
 33432                           pclatu	equ	0xFFB
 33433                           pclath	equ	0xFFA
 33434                           tblptru	equ	0xFF8
 33435                           tblptrh	equ	0xFF7
 33436                           tblptrl	equ	0xFF6
 33437                           tablat	equ	0xFF5
 33438                           prodh	equ	0xFF4
 33439                           prodl	equ	0xFF3
 33440                           intcon	equ	0xFF2
 33441                           indf0	equ	0xFEF
 33442                           postinc0	equ	0xFEE
 33443                           fsr0h	equ	0xFEA
 33444                           fsr0l	equ	0xFE9
 33445                           wreg	equ	0xFE8
 33446                           indf1	equ	0xFE7
 33447                           postdec1	equ	0xFE5
 33448                           plusw1	equ	0xFE3
 33449                           fsr1h	equ	0xFE2
 33450                           fsr1l	equ	0xFE1
 33451                           bsr	equ	0xFE0
 33452                           indf2	equ	0xFDF
 33453                           postinc2	equ	0xFDE
 33454                           postdec2	equ	0xFDD
 33455                           plusw2	equ	0xFDB
 33456                           fsr2h	equ	0xFDA
 33457                           fsr2l	equ	0xFD9
 33458                           status	equ	0xFD8
 33459                           
 33460 ;; *************** function _sin *****************
 33461 ;; Defined at:
 33462 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 33463 ;; Parameters:    Size  Location     Type
 33464 ;;  f               4   40[BANK0 ] unsigned char 
 33465 ;; Auto vars:     Size  Location     Type
 33466 ;;  x2              4   52[BANK0 ] unsigned char 
 33467 ;;  y               4   44[BANK0 ] unsigned char 
 33468 ;;  sgn             1   56[BANK0 ] unsigned char 
 33469 ;; Return value:  Size  Location     Type
 33470 ;;                  4   40[BANK0 ] unsigned char 
 33471 ;; Registers used:
 33472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33473 ;; Tracked objects:
 33474 ;;		On entry : 0/0
 33475 ;;		On exit  : 0/0
 33476 ;;		Unchanged: 0/0
 33477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33478 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33479 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33481 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33482 ;;Total ram usage:       17 bytes
 33483 ;; Hardware stack levels used:    1
 33484 ;; Hardware stack levels required when called:    2
 33485 ;; This function calls:
 33486 ;;		_eval_poly
 33487 ;;		_floor
 33488 ;;		i2___fladd
 33489 ;;		i2___fldiv
 33490 ;;		i2___flge
 33491 ;;		i2___flmul
 33492 ;;		i2___flneg
 33493 ;;		i2___flsub
 33494 ;; This function is called by:
 33495 ;;		_peakToRMS
 33496 ;;		_currentMeasuredToPeak
 33497 ;; This function uses a non-reentrant model
 33498 ;;
 33499                           
 33500                           	psect	text109
 33501  014FC0                     __ptext109:
 33502                           	opt stack 0
 33503  014FC0                     _sin:
 33504                           	opt stack 13
 33505                           
 33506                           ;incstack = 0
 33507  014FC0  0E00               	movlw	0
 33508  014FC2  0100               	movlb	0	; () banked
 33509  014FC4  6F98               	movwf	sin@sgn& (0+255),b
 33510                           
 33511                           ; BSR set to: 0
 33512  014FC6  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 33513  014FC8  D015               	goto	i2l2045
 33514                           
 33515                           ; BSR set to: 0
 33516  014FCA  C088  F02C         	movff	sin@f,i2___flneg@f1
 33517  014FCE  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 33518  014FD2  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 33519  014FD6  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 33520  014FDA  ECD4  F0C2         	call	i2___flneg	;wreg free
 33521  014FDE  C02C  F088         	movff	?i2___flneg,sin@f
 33522  014FE2  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 33523  014FE6  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 33524  014FEA  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 33525  014FEE  0E01               	movlw	1
 33526  014FF0  0100               	movlb	0	; () banked
 33527  014FF2  6F98               	movwf	sin@sgn& (0+255),b
 33528  014FF4                     i2l2045:
 33529                           
 33530                           ; BSR set to: 0
 33531                           
 33532                           ; BSR set to: 0
 33533  014FF4  C088  F030         	movff	sin@f,i2___flmul@b
 33534  014FF8  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 33535  014FFC  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 33536  015000  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 33537  015004  0E83               	movlw	131
 33538  015006  6E34               	movwf	i2___flmul@a,c
 33539  015008  0EF9               	movlw	249
 33540  01500A  6E35               	movwf	i2___flmul@a+1,c
 33541  01500C  0E22               	movlw	34
 33542  01500E  6E36               	movwf	i2___flmul@a+2,c
 33543  015010  0E3E               	movlw	62
 33544  015012  6E37               	movwf	i2___flmul@a+3,c
 33545  015014  EC78  F0A1         	call	i2___flmul	;wreg free
 33546  015018  C030  F088         	movff	?i2___flmul,sin@f
 33547  01501C  C031  F089         	movff	?i2___flmul+1,sin@f+1
 33548  015020  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 33549  015024  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 33550  015028  C088  F080         	movff	sin@f,i2___flsub@b
 33551  01502C  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 33552  015030  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 33553  015034  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 33554  015038  C088  F076         	movff	sin@f,floor@x
 33555  01503C  C089  F077         	movff	sin@f+1,floor@x+1
 33556  015040  C08A  F078         	movff	sin@f+2,floor@x+2
 33557  015044  C08B  F079         	movff	sin@f+3,floor@x+3
 33558  015048  ECD1  F0B7         	call	_floor	;wreg free
 33559  01504C  C076  F084         	movff	?_floor,i2___flsub@a
 33560  015050  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 33561  015054  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 33562  015058  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 33563  01505C  EC2B  F0C1         	call	i2___flsub	;wreg free
 33564  015060  C080  F088         	movff	?i2___flsub,sin@f
 33565  015064  C081  F089         	movff	?i2___flsub+1,sin@f+1
 33566  015068  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 33567  01506C  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 33568  015070  C088  F030         	movff	sin@f,i2___flmul@b
 33569  015074  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 33570  015078  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 33571  01507C  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 33572  015080  0E00               	movlw	0
 33573  015082  6E34               	movwf	i2___flmul@a,c
 33574  015084  0E00               	movlw	0
 33575  015086  6E35               	movwf	i2___flmul@a+1,c
 33576  015088  0E80               	movlw	128
 33577  01508A  6E36               	movwf	i2___flmul@a+2,c
 33578  01508C  0E40               	movlw	64
 33579  01508E  6E37               	movwf	i2___flmul@a+3,c
 33580  015090  EC78  F0A1         	call	i2___flmul	;wreg free
 33581  015094  C030  F088         	movff	?i2___flmul,sin@f
 33582  015098  C031  F089         	movff	?i2___flmul+1,sin@f+1
 33583  01509C  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 33584  0150A0  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 33585  0150A4  0E00               	movlw	0
 33586  0150A6  6E34               	movwf	i2___flge@ff1,c
 33587  0150A8  0E00               	movlw	0
 33588  0150AA  6E35               	movwf	i2___flge@ff1+1,c
 33589  0150AC  0E00               	movlw	0
 33590  0150AE  6E36               	movwf	i2___flge@ff1+2,c
 33591  0150B0  0E40               	movlw	64
 33592  0150B2  6E37               	movwf	i2___flge@ff1+3,c
 33593  0150B4  C088  F038         	movff	sin@f,i2___flge@ff2
 33594  0150B8  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 33595  0150BC  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 33596  0150C0  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 33597  0150C4  EC41  F0B7         	call	i2___flge	;wreg free
 33598  0150C8  B0D8               	btfsc	status,0,c
 33599  0150CA  D023               	goto	i2l2046
 33600  0150CC  C088  F080         	movff	sin@f,i2___flsub@b
 33601  0150D0  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 33602  0150D4  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 33603  0150D8  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 33604  0150DC  0E00               	movlw	0
 33605  0150DE  0100               	movlb	0	; () banked
 33606  0150E0  6F84               	movwf	i2___flsub@a& (0+255),b
 33607  0150E2  0E00               	movlw	0
 33608  0150E4  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 33609  0150E6  0E00               	movlw	0
 33610  0150E8  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 33611  0150EA  0E40               	movlw	64
 33612  0150EC  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 33613  0150EE  EC2B  F0C1         	call	i2___flsub	;wreg free
 33614  0150F2  C080  F088         	movff	?i2___flsub,sin@f
 33615  0150F6  C081  F089         	movff	?i2___flsub+1,sin@f+1
 33616  0150FA  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 33617  0150FE  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 33618  015102  0100               	movlb	0	; () banked
 33619  015104  5198               	movf	sin@sgn& (0+255),w,b
 33620  015106  A4D8               	btfss	status,2,c
 33621  015108  D002               	goto	i2u1620_40
 33622  01510A  0E01               	movlw	1
 33623  01510C  D001               	goto	i2u1621_40
 33624  01510E                     i2u1620_40:
 33625  01510E  0E00               	movlw	0
 33626  015110                     i2u1621_40:
 33627  015110  6F98               	movwf	sin@sgn& (0+255),b
 33628  015112                     i2l2046:
 33629                           
 33630                           ; BSR set to: 0
 33631  015112  0E00               	movlw	0
 33632  015114  6E34               	movwf	i2___flge@ff1,c
 33633  015116  0E00               	movlw	0
 33634  015118  6E35               	movwf	i2___flge@ff1+1,c
 33635  01511A  0E80               	movlw	128
 33636  01511C  6E36               	movwf	i2___flge@ff1+2,c
 33637  01511E  0E3F               	movlw	63
 33638  015120  6E37               	movwf	i2___flge@ff1+3,c
 33639  015122  C088  F038         	movff	sin@f,i2___flge@ff2
 33640  015126  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 33641  01512A  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 33642  01512E  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 33643  015132  EC41  F0B7         	call	i2___flge	;wreg free
 33644  015136  B0D8               	btfsc	status,0,c
 33645  015138  D024               	goto	i2l2047
 33646  01513A  C088  F02C         	movff	sin@f,i2___flneg@f1
 33647  01513E  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 33648  015142  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 33649  015146  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 33650  01514A  ECD4  F0C2         	call	i2___flneg	;wreg free
 33651  01514E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33652  015152  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33653  015156  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33654  01515A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33655  01515E  0E00               	movlw	0
 33656  015160  6E5A               	movwf	i2___fladd@a,c
 33657  015162  0E00               	movlw	0
 33658  015164  6E5B               	movwf	i2___fladd@a+1,c
 33659  015166  0E00               	movlw	0
 33660  015168  6E5C               	movwf	i2___fladd@a+2,c
 33661  01516A  0E40               	movlw	64
 33662  01516C  6E5D               	movwf	i2___fladd@a+3,c
 33663  01516E  ECBF  F0A4         	call	i2___fladd	;wreg free
 33664  015172  C056  F088         	movff	?i2___fladd,sin@f
 33665  015176  C057  F089         	movff	?i2___fladd+1,sin@f+1
 33666  01517A  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 33667  01517E  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 33668  015182                     i2l2047:
 33669  015182  C088  F030         	movff	sin@f,i2___flmul@b
 33670  015186  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 33671  01518A  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 33672  01518E  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 33673  015192  C088  F034         	movff	sin@f,i2___flmul@a
 33674  015196  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 33675  01519A  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 33676  01519E  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 33677  0151A2  EC78  F0A1         	call	i2___flmul	;wreg free
 33678  0151A6  C030  F094         	movff	?i2___flmul,sin@x2
 33679  0151AA  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 33680  0151AE  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 33681  0151B2  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 33682  0151B6  C094  F06C         	movff	sin@x2,eval_poly@x
 33683  0151BA  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 33684  0151BE  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 33685  0151C2  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 33686  0151C6  0EF3               	movlw	low sin@coeff_b
 33687  0151C8  0100               	movlb	0	; () banked
 33688  0151CA  6F70               	movwf	eval_poly@d& (0+255),b
 33689  0151CC  0EEA               	movlw	high sin@coeff_b
 33690  0151CE  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 33691  0151D0  0E00               	movlw	0
 33692  0151D2  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 33693  0151D4  0E03               	movlw	3
 33694  0151D6  6F72               	movwf	eval_poly@n& (0+255),b
 33695  0151D8  EC5A  F0B8         	call	_eval_poly	;wreg free
 33696  0151DC  C06C  F08C         	movff	?_eval_poly,sin@y
 33697  0151E0  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 33698  0151E4  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 33699  0151E8  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 33700  0151EC  C08C  F017         	movff	sin@y,i2___fldiv@a
 33701  0151F0  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 33702  0151F4  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 33703  0151F8  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 33704  0151FC  0E00               	movlw	0
 33705  0151FE  0100               	movlb	0	; () banked
 33706  015200  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 33707  015202  0E04               	movlw	4
 33708  015204  6F72               	movwf	eval_poly@n& (0+255),b
 33709  015206  0ECB               	movlw	low sin@coeff_a
 33710  015208  6F70               	movwf	eval_poly@d& (0+255),b
 33711  01520A  0EEA               	movlw	high sin@coeff_a
 33712  01520C  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 33713  01520E  C094  F06C         	movff	sin@x2,eval_poly@x
 33714  015212  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 33715  015216  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 33716  01521A  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 33717  01521E  EC5A  F0B8         	call	_eval_poly	;wreg free
 33718  015222  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 33719  015226  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 33720  01522A  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 33721  01522E  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 33722  015232  EC7F  F0AD         	call	i2___fldiv	;wreg free
 33723  015236  C013  F090         	movff	?i2___fldiv,_sin$4097
 33724  01523A  C014  F091         	movff	?i2___fldiv+1,_sin$4097+1
 33725  01523E  C015  F092         	movff	?i2___fldiv+2,_sin$4097+2
 33726  015242  C016  F093         	movff	?i2___fldiv+3,_sin$4097+3
 33727  015246  C088  F030         	movff	sin@f,i2___flmul@b
 33728  01524A  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 33729  01524E  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 33730  015252  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 33731  015256  C090  F034         	movff	_sin$4097,i2___flmul@a
 33732  01525A  C091  F035         	movff	_sin$4097+1,i2___flmul@a+1
 33733  01525E  C092  F036         	movff	_sin$4097+2,i2___flmul@a+2
 33734  015262  C093  F037         	movff	_sin$4097+3,i2___flmul@a+3
 33735  015266  EC78  F0A1         	call	i2___flmul	;wreg free
 33736  01526A  C030  F088         	movff	?i2___flmul,sin@f
 33737  01526E  C031  F089         	movff	?i2___flmul+1,sin@f+1
 33738  015272  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 33739  015276  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 33740  01527A  0100               	movlb	0	; () banked
 33741  01527C  5198               	movf	sin@sgn& (0+255),w,b
 33742  01527E  B4D8               	btfsc	status,2,c
 33743  015280  D013               	goto	i2l2048
 33744                           
 33745                           ; BSR set to: 0
 33746  015282  C088  F02C         	movff	sin@f,i2___flneg@f1
 33747  015286  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 33748  01528A  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 33749  01528E  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 33750  015292  ECD4  F0C2         	call	i2___flneg	;wreg free
 33751  015296  C02C  F088         	movff	?i2___flneg,?_sin
 33752  01529A  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 33753  01529E  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 33754  0152A2  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 33755  0152A6  0012               	return	
 33756  0152A8                     i2l2048:
 33757                           
 33758                           ; BSR set to: 0
 33759  0152A8  C088  F088         	movff	sin@f,?_sin
 33760  0152AC  C089  F089         	movff	sin@f+1,?_sin+1
 33761  0152B0  C08A  F08A         	movff	sin@f+2,?_sin+2
 33762  0152B4  C08B  F08B         	movff	sin@f+3,?_sin+3
 33763  0152B8  0012               	return		;funcret
 33764  0152BA                     __end_of_sin:
 33765                           	opt stack 0
 33766                           tosu	equ	0xFFF
 33767                           tosh	equ	0xFFE
 33768                           tosl	equ	0xFFD
 33769                           pclatu	equ	0xFFB
 33770                           pclath	equ	0xFFA
 33771                           tblptru	equ	0xFF8
 33772                           tblptrh	equ	0xFF7
 33773                           tblptrl	equ	0xFF6
 33774                           tablat	equ	0xFF5
 33775                           prodh	equ	0xFF4
 33776                           prodl	equ	0xFF3
 33777                           intcon	equ	0xFF2
 33778                           indf0	equ	0xFEF
 33779                           postinc0	equ	0xFEE
 33780                           fsr0h	equ	0xFEA
 33781                           fsr0l	equ	0xFE9
 33782                           wreg	equ	0xFE8
 33783                           indf1	equ	0xFE7
 33784                           postdec1	equ	0xFE5
 33785                           plusw1	equ	0xFE3
 33786                           fsr1h	equ	0xFE2
 33787                           fsr1l	equ	0xFE1
 33788                           bsr	equ	0xFE0
 33789                           indf2	equ	0xFDF
 33790                           postinc2	equ	0xFDE
 33791                           postdec2	equ	0xFDD
 33792                           plusw2	equ	0xFDB
 33793                           fsr2h	equ	0xFDA
 33794                           fsr2l	equ	0xFD9
 33795                           status	equ	0xFD8
 33796                           
 33797 ;; *************** function i2___flsub *****************
 33798 ;; Defined at:
 33799 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 33800 ;; Parameters:    Size  Location     Type
 33801 ;;  b               4   32[BANK0 ] unsigned char 
 33802 ;;  a               4   36[BANK0 ] unsigned char 
 33803 ;; Auto vars:     Size  Location     Type
 33804 ;;		None
 33805 ;; Return value:  Size  Location     Type
 33806 ;;                  4   32[BANK0 ] unsigned char 
 33807 ;; Registers used:
 33808 ;;		wreg, status,2, status,0, cstack
 33809 ;; Tracked objects:
 33810 ;;		On entry : 0/0
 33811 ;;		On exit  : 0/0
 33812 ;;		Unchanged: 0/0
 33813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33814 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33817 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33818 ;;Total ram usage:        8 bytes
 33819 ;; Hardware stack levels used:    1
 33820 ;; Hardware stack levels required when called:    1
 33821 ;; This function calls:
 33822 ;;		i2___fladd
 33823 ;; This function is called by:
 33824 ;;		_sin
 33825 ;;		i2_printf
 33826 ;; This function uses a non-reentrant model
 33827 ;;
 33828                           
 33829                           	psect	text110
 33830  018256                     __ptext110:
 33831                           	opt stack 0
 33832  018256                     i2___flsub:
 33833                           	opt stack 15
 33834                           
 33835                           ;incstack = 0
 33836  018256  0E00               	movlw	0
 33837  018258  0100               	movlb	0	; () banked
 33838  01825A  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 33839  01825C  0E00               	movlw	0
 33840  01825E  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 33841  018260  0E00               	movlw	0
 33842  018262  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 33843  018264  0E80               	movlw	128
 33844  018266  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 33845                           
 33846                           ; BSR set to: 0
 33847  018268  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 33848  01826C  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 33849  018270  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 33850  018274  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 33851  018278  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 33852  01827C  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 33853  018280  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 33854  018284  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 33855  018288  ECBF  F0A4         	call	i2___fladd	;wreg free
 33856  01828C  C056  F080         	movff	?i2___fladd,?i2___flsub
 33857  018290  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 33858  018294  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 33859  018298  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 33860  01829C  0012               	return	
 33861  01829E                     __end_ofi2___flsub:
 33862                           	opt stack 0
 33863                           tosu	equ	0xFFF
 33864                           tosh	equ	0xFFE
 33865                           tosl	equ	0xFFD
 33866                           pclatu	equ	0xFFB
 33867                           pclath	equ	0xFFA
 33868                           tblptru	equ	0xFF8
 33869                           tblptrh	equ	0xFF7
 33870                           tblptrl	equ	0xFF6
 33871                           tablat	equ	0xFF5
 33872                           prodh	equ	0xFF4
 33873                           prodl	equ	0xFF3
 33874                           intcon	equ	0xFF2
 33875                           indf0	equ	0xFEF
 33876                           postinc0	equ	0xFEE
 33877                           fsr0h	equ	0xFEA
 33878                           fsr0l	equ	0xFE9
 33879                           wreg	equ	0xFE8
 33880                           indf1	equ	0xFE7
 33881                           postdec1	equ	0xFE5
 33882                           plusw1	equ	0xFE3
 33883                           fsr1h	equ	0xFE2
 33884                           fsr1l	equ	0xFE1
 33885                           bsr	equ	0xFE0
 33886                           indf2	equ	0xFDF
 33887                           postinc2	equ	0xFDE
 33888                           postdec2	equ	0xFDD
 33889                           plusw2	equ	0xFDB
 33890                           fsr2h	equ	0xFDA
 33891                           fsr2l	equ	0xFD9
 33892                           status	equ	0xFD8
 33893                           
 33894 ;; *************** function i2___flneg *****************
 33895 ;; Defined at:
 33896 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 33897 ;; Parameters:    Size  Location     Type
 33898 ;;  f1              4   43[COMRAM] unsigned char 
 33899 ;; Auto vars:     Size  Location     Type
 33900 ;;		None
 33901 ;; Return value:  Size  Location     Type
 33902 ;;                  4   43[COMRAM] unsigned char 
 33903 ;; Registers used:
 33904 ;;		wreg, status,2, status,0
 33905 ;; Tracked objects:
 33906 ;;		On entry : 0/0
 33907 ;;		On exit  : 0/0
 33908 ;;		Unchanged: 0/0
 33909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33914 ;;Total ram usage:        4 bytes
 33915 ;; Hardware stack levels used:    1
 33916 ;; This function calls:
 33917 ;;		Nothing
 33918 ;; This function is called by:
 33919 ;;		_peakToRMS
 33920 ;;		_ADCPostProcessingCallback
 33921 ;;		_acos
 33922 ;;		_asin
 33923 ;;		_atan
 33924 ;;		_fabs
 33925 ;;		_sin
 33926 ;;		i2_printf
 33927 ;; This function uses a non-reentrant model
 33928 ;;
 33929                           
 33930                           	psect	text111
 33931  0185A8                     __ptext111:
 33932                           	opt stack 0
 33933  0185A8                     i2___flneg:
 33934                           	opt stack 16
 33935                           
 33936                           ;incstack = 0
 33937  0185A8  502C               	movf	i2___flneg@f1,w,c
 33938  0185AA  102D               	iorwf	i2___flneg@f1+1,w,c
 33939  0185AC  102E               	iorwf	i2___flneg@f1+2,w,c
 33940  0185AE  102F               	iorwf	i2___flneg@f1+3,w,c
 33941  0185B0  B4D8               	btfsc	status,2,c
 33942  0185B2  D008               	goto	i2l1790
 33943  0185B4  0E00               	movlw	0
 33944  0185B6  1A2C               	xorwf	i2___flneg@f1,f,c
 33945  0185B8  0E00               	movlw	0
 33946  0185BA  1A2D               	xorwf	i2___flneg@f1+1,f,c
 33947  0185BC  0E00               	movlw	0
 33948  0185BE  1A2E               	xorwf	i2___flneg@f1+2,f,c
 33949  0185C0  0E80               	movlw	128
 33950  0185C2  1A2F               	xorwf	i2___flneg@f1+3,f,c
 33951  0185C4                     i2l1790:
 33952  0185C4  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 33953  0185C8  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 33954  0185CC  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 33955  0185D0  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 33956  0185D4  0012               	return	
 33957  0185D6                     __end_ofi2___flneg:
 33958                           	opt stack 0
 33959                           tosu	equ	0xFFF
 33960                           tosh	equ	0xFFE
 33961                           tosl	equ	0xFFD
 33962                           pclatu	equ	0xFFB
 33963                           pclath	equ	0xFFA
 33964                           tblptru	equ	0xFF8
 33965                           tblptrh	equ	0xFF7
 33966                           tblptrl	equ	0xFF6
 33967                           tablat	equ	0xFF5
 33968                           prodh	equ	0xFF4
 33969                           prodl	equ	0xFF3
 33970                           intcon	equ	0xFF2
 33971                           indf0	equ	0xFEF
 33972                           postinc0	equ	0xFEE
 33973                           fsr0h	equ	0xFEA
 33974                           fsr0l	equ	0xFE9
 33975                           wreg	equ	0xFE8
 33976                           indf1	equ	0xFE7
 33977                           postdec1	equ	0xFE5
 33978                           plusw1	equ	0xFE3
 33979                           fsr1h	equ	0xFE2
 33980                           fsr1l	equ	0xFE1
 33981                           bsr	equ	0xFE0
 33982                           indf2	equ	0xFDF
 33983                           postinc2	equ	0xFDE
 33984                           postdec2	equ	0xFDD
 33985                           plusw2	equ	0xFDB
 33986                           fsr2h	equ	0xFDA
 33987                           fsr2l	equ	0xFD9
 33988                           status	equ	0xFD8
 33989                           
 33990 ;; *************** function i2___fldiv *****************
 33991 ;; Defined at:
 33992 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 33993 ;; Parameters:    Size  Location     Type
 33994 ;;  b               4   18[COMRAM] unsigned char 
 33995 ;;  a               4   22[COMRAM] unsigned char 
 33996 ;; Auto vars:     Size  Location     Type
 33997 ;;  __fldiv         4   37[COMRAM] unsigned long 
 33998 ;;  __fldiv         4   31[COMRAM] unsigned long 
 33999 ;;  __fldiv         2   35[COMRAM] int 
 34000 ;;  __fldiv         1   42[COMRAM] unsigned char 
 34001 ;;  __fldiv         1   41[COMRAM] unsigned char 
 34002 ;;  __fldiv         1   30[COMRAM] unsigned char 
 34003 ;; Return value:  Size  Location     Type
 34004 ;;                  4   18[COMRAM] unsigned char 
 34005 ;; Registers used:
 34006 ;;		wreg, status,2, status,0
 34007 ;; Tracked objects:
 34008 ;;		On entry : 0/0
 34009 ;;		On exit  : 0/0
 34010 ;;		Unchanged: 0/0
 34011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34012 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34013 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34014 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34015 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34016 ;;Total ram usage:       25 bytes
 34017 ;; Hardware stack levels used:    1
 34018 ;; This function calls:
 34019 ;;		Nothing
 34020 ;; This function is called by:
 34021 ;;		_peakToRMS
 34022 ;;		_currentMeasuredToPeak
 34023 ;;		_ADCPostProcessingCallback
 34024 ;;		_asin
 34025 ;;		_atan
 34026 ;;		_sin
 34027 ;; This function uses a non-reentrant model
 34028 ;;
 34029                           
 34030                           	psect	text112
 34031  015AFE                     __ptext112:
 34032                           	opt stack 0
 34033  015AFE                     i2___fldiv:
 34034                           	opt stack 16
 34035                           
 34036                           ;incstack = 0
 34037  015AFE  5016               	movf	i2___fldiv@b+3,w,c
 34038  015B00  0B80               	andlw	128
 34039  015B02  6E1F               	movwf	i2___fldiv@sign,c
 34040  015B04  5016               	movf	i2___fldiv@b+3,w,c
 34041  015B06  2416               	addwf	i2___fldiv@b+3,w,c
 34042  015B08  6E2A               	movwf	i2___fldiv@bexp,c
 34043  015B0A  BE15               	btfsc	i2___fldiv@b+2,7,c
 34044  015B0C  802A               	bsf	i2___fldiv@bexp,0,c
 34045  015B0E  502A               	movf	i2___fldiv@bexp,w,c
 34046  015B10  B4D8               	btfsc	status,2,c
 34047  015B12  D00D               	goto	i2l2110
 34048  015B14  282A               	incf	i2___fldiv@bexp,w,c
 34049  015B16  A4D8               	btfss	status,2,c
 34050  015B18  D008               	goto	i2l2111
 34051  015B1A  0E00               	movlw	0
 34052  015B1C  6E13               	movwf	i2___fldiv@b,c
 34053  015B1E  0E00               	movlw	0
 34054  015B20  6E14               	movwf	i2___fldiv@b+1,c
 34055  015B22  0E00               	movlw	0
 34056  015B24  6E15               	movwf	i2___fldiv@b+2,c
 34057  015B26  0E00               	movlw	0
 34058  015B28  6E16               	movwf	i2___fldiv@b+3,c
 34059  015B2A                     i2l2111:
 34060  015B2A  8E15               	bsf	i2___fldiv@b+2,7,c
 34061  015B2C  D006               	goto	L18
 34062  015B2E                     i2l2110:
 34063  015B2E  0E00               	movlw	0
 34064  015B30  6E13               	movwf	i2___fldiv@b,c
 34065  015B32  0E00               	movlw	0
 34066  015B34  6E14               	movwf	i2___fldiv@b+1,c
 34067  015B36  0E00               	movlw	0
 34068  015B38  6E15               	movwf	i2___fldiv@b+2,c
 34069  015B3A                     L18:
 34070  015B3A  0E00               	movlw	0
 34071  015B3C  6E16               	movwf	i2___fldiv@b+3,c
 34072  015B3E  501A               	movf	i2___fldiv@a+3,w,c
 34073  015B40  0B80               	andlw	128
 34074  015B42  1A1F               	xorwf	i2___fldiv@sign,f,c
 34075  015B44  501A               	movf	i2___fldiv@a+3,w,c
 34076  015B46  241A               	addwf	i2___fldiv@a+3,w,c
 34077  015B48  6E2B               	movwf	i2___fldiv@aexp,c
 34078  015B4A  BE19               	btfsc	i2___fldiv@a+2,7,c
 34079  015B4C  802B               	bsf	i2___fldiv@aexp,0,c
 34080  015B4E  502B               	movf	i2___fldiv@aexp,w,c
 34081  015B50  B4D8               	btfsc	status,2,c
 34082  015B52  D00D               	goto	i2l2114
 34083  015B54  282B               	incf	i2___fldiv@aexp,w,c
 34084  015B56  A4D8               	btfss	status,2,c
 34085  015B58  D008               	goto	i2l2115
 34086  015B5A  0E00               	movlw	0
 34087  015B5C  6E17               	movwf	i2___fldiv@a,c
 34088  015B5E  0E00               	movlw	0
 34089  015B60  6E18               	movwf	i2___fldiv@a+1,c
 34090  015B62  0E00               	movlw	0
 34091  015B64  6E19               	movwf	i2___fldiv@a+2,c
 34092  015B66  0E00               	movlw	0
 34093  015B68  6E1A               	movwf	i2___fldiv@a+3,c
 34094  015B6A                     i2l2115:
 34095  015B6A  8E19               	bsf	i2___fldiv@a+2,7,c
 34096  015B6C  D006               	goto	L19
 34097  015B6E                     i2l2114:
 34098  015B6E  0E00               	movlw	0
 34099  015B70  6E17               	movwf	i2___fldiv@a,c
 34100  015B72  0E00               	movlw	0
 34101  015B74  6E18               	movwf	i2___fldiv@a+1,c
 34102  015B76  0E00               	movlw	0
 34103  015B78  6E19               	movwf	i2___fldiv@a+2,c
 34104  015B7A                     L19:
 34105  015B7A  0E00               	movlw	0
 34106  015B7C  6E1A               	movwf	i2___fldiv@a+3,c
 34107  015B7E  5017               	movf	i2___fldiv@a,w,c
 34108  015B80  1018               	iorwf	i2___fldiv@a+1,w,c
 34109  015B82  1019               	iorwf	i2___fldiv@a+2,w,c
 34110  015B84  101A               	iorwf	i2___fldiv@a+3,w,c
 34111  015B86  A4D8               	btfss	status,2,c
 34112  015B88  D015               	goto	i2l2117
 34113  015B8A  0E00               	movlw	0
 34114  015B8C  6E13               	movwf	i2___fldiv@b,c
 34115  015B8E  0E00               	movlw	0
 34116  015B90  6E14               	movwf	i2___fldiv@b+1,c
 34117  015B92  0E00               	movlw	0
 34118  015B94  6E15               	movwf	i2___fldiv@b+2,c
 34119  015B96  0E00               	movlw	0
 34120  015B98  6E16               	movwf	i2___fldiv@b+3,c
 34121  015B9A  0E80               	movlw	128
 34122  015B9C  1215               	iorwf	i2___fldiv@b+2,f,c
 34123  015B9E  0E7F               	movlw	127
 34124  015BA0  1216               	iorwf	i2___fldiv@b+3,f,c
 34125  015BA2  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 34126  015BA6  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 34127  015BAA  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 34128  015BAE  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 34129  015BB2  0012               	return	
 34130  015BB4                     i2l2117:
 34131  015BB4  502A               	movf	i2___fldiv@bexp,w,c
 34132  015BB6  A4D8               	btfss	status,2,c
 34133  015BB8  D011               	goto	i2l2119
 34134  015BBA  0E00               	movlw	0
 34135  015BBC  6E13               	movwf	i2___fldiv@b,c
 34136  015BBE  0E00               	movlw	0
 34137  015BC0  6E14               	movwf	i2___fldiv@b+1,c
 34138  015BC2  0E00               	movlw	0
 34139  015BC4  6E15               	movwf	i2___fldiv@b+2,c
 34140  015BC6  0E00               	movlw	0
 34141  015BC8  6E16               	movwf	i2___fldiv@b+3,c
 34142  015BCA  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 34143  015BCE  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 34144  015BD2  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 34145  015BD6  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 34146  015BDA  0012               	return	
 34147  015BDC                     i2l2119:
 34148  015BDC  502B               	movf	i2___fldiv@aexp,w,c
 34149  015BDE  6E1B               	movwf	??i2___fldiv& (0+255),c
 34150  015BE0  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 34151  015BE2  1E1B               	comf	??i2___fldiv,f,c
 34152  015BE4  1E1C               	comf	??i2___fldiv+1,f,c
 34153  015BE6  4A1B               	infsnz	??i2___fldiv,f,c
 34154  015BE8  2A1C               	incf	??i2___fldiv+1,f,c
 34155  015BEA  502A               	movf	i2___fldiv@bexp,w,c
 34156  015BEC  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 34157  015BEE  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 34158  015BF0  501B               	movf	??i2___fldiv,w,c
 34159  015BF2  261D               	addwf	??i2___fldiv+2,f,c
 34160  015BF4  501C               	movf	??i2___fldiv+1,w,c
 34161  015BF6  221E               	addwfc	??i2___fldiv+3,f,c
 34162  015BF8  0E7F               	movlw	127
 34163  015BFA  241D               	addwf	??i2___fldiv+2,w,c
 34164  015BFC  6E24               	movwf	i2___fldiv@new_exp,c
 34165  015BFE  0E00               	movlw	0
 34166  015C00  201E               	addwfc	??i2___fldiv+3,w,c
 34167  015C02  6E25               	movwf	i2___fldiv@new_exp+1,c
 34168  015C04  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 34169  015C08  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 34170  015C0C  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 34171  015C10  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 34172  015C14  0E00               	movlw	0
 34173  015C16  6E13               	movwf	i2___fldiv@b,c
 34174  015C18  0E00               	movlw	0
 34175  015C1A  6E14               	movwf	i2___fldiv@b+1,c
 34176  015C1C  0E00               	movlw	0
 34177  015C1E  6E15               	movwf	i2___fldiv@b+2,c
 34178  015C20  0E00               	movlw	0
 34179  015C22  6E16               	movwf	i2___fldiv@b+3,c
 34180  015C24  0E00               	movlw	0
 34181  015C26  6E26               	movwf	i2___fldiv@grs,c
 34182  015C28  0E00               	movlw	0
 34183  015C2A  6E27               	movwf	i2___fldiv@grs+1,c
 34184  015C2C  0E00               	movlw	0
 34185  015C2E  6E28               	movwf	i2___fldiv@grs+2,c
 34186  015C30  0E00               	movlw	0
 34187  015C32  6E29               	movwf	i2___fldiv@grs+3,c
 34188  015C34  0E00               	movlw	0
 34189  015C36  6E2B               	movwf	i2___fldiv@aexp,c
 34190  015C38  D028               	goto	i2l2120
 34191  015C3A  502B               	movf	i2___fldiv@aexp,w,c
 34192  015C3C  B4D8               	btfsc	status,2,c
 34193  015C3E  D011               	goto	i2l2122
 34194  015C40  90D8               	bcf	status,0,c
 34195  015C42  3620               	rlcf	i2___fldiv@rem,f,c
 34196  015C44  3621               	rlcf	i2___fldiv@rem+1,f,c
 34197  015C46  3622               	rlcf	i2___fldiv@rem+2,f,c
 34198  015C48  3623               	rlcf	i2___fldiv@rem+3,f,c
 34199  015C4A  90D8               	bcf	status,0,c
 34200  015C4C  3613               	rlcf	i2___fldiv@b,f,c
 34201  015C4E  3614               	rlcf	i2___fldiv@b+1,f,c
 34202  015C50  3615               	rlcf	i2___fldiv@b+2,f,c
 34203  015C52  3616               	rlcf	i2___fldiv@b+3,f,c
 34204  015C54  BE29               	btfsc	i2___fldiv@grs+3,7,c
 34205  015C56  8013               	bsf	i2___fldiv@b,0,c
 34206  015C58  90D8               	bcf	status,0,c
 34207  015C5A  3626               	rlcf	i2___fldiv@grs,f,c
 34208  015C5C  3627               	rlcf	i2___fldiv@grs+1,f,c
 34209  015C5E  3628               	rlcf	i2___fldiv@grs+2,f,c
 34210  015C60  3629               	rlcf	i2___fldiv@grs+3,f,c
 34211  015C62                     i2l2122:
 34212  015C62  5017               	movf	i2___fldiv@a,w,c
 34213  015C64  5C20               	subwf	i2___fldiv@rem,w,c
 34214  015C66  5018               	movf	i2___fldiv@a+1,w,c
 34215  015C68  5821               	subwfb	i2___fldiv@rem+1,w,c
 34216  015C6A  5019               	movf	i2___fldiv@a+2,w,c
 34217  015C6C  5822               	subwfb	i2___fldiv@rem+2,w,c
 34218  015C6E  501A               	movf	i2___fldiv@a+3,w,c
 34219  015C70  5823               	subwfb	i2___fldiv@rem+3,w,c
 34220  015C72  A0D8               	btfss	status,0,c
 34221  015C74  D009               	goto	i2l2124
 34222  015C76  8C29               	bsf	i2___fldiv@grs+3,6,c
 34223  015C78  5017               	movf	i2___fldiv@a,w,c
 34224  015C7A  5E20               	subwf	i2___fldiv@rem,f,c
 34225  015C7C  5018               	movf	i2___fldiv@a+1,w,c
 34226  015C7E  5A21               	subwfb	i2___fldiv@rem+1,f,c
 34227  015C80  5019               	movf	i2___fldiv@a+2,w,c
 34228  015C82  5A22               	subwfb	i2___fldiv@rem+2,f,c
 34229  015C84  501A               	movf	i2___fldiv@a+3,w,c
 34230  015C86  5A23               	subwfb	i2___fldiv@rem+3,f,c
 34231  015C88                     i2l2124:
 34232  015C88  2A2B               	incf	i2___fldiv@aexp,f,c
 34233  015C8A                     i2l2120:
 34234  015C8A  0E19               	movlw	25
 34235  015C8C  642B               	cpfsgt	i2___fldiv@aexp,c
 34236  015C8E  D7D5               	goto	i2l2121
 34237  015C90  5020               	movf	i2___fldiv@rem,w,c
 34238  015C92  1021               	iorwf	i2___fldiv@rem+1,w,c
 34239  015C94  1022               	iorwf	i2___fldiv@rem+2,w,c
 34240  015C96  1023               	iorwf	i2___fldiv@rem+3,w,c
 34241  015C98  B4D8               	btfsc	status,2,c
 34242  015C9A  D011               	goto	i2l2127
 34243  015C9C  8026               	bsf	i2___fldiv@grs,0,c
 34244  015C9E  D00F               	goto	i2l2127
 34245  015CA0  90D8               	bcf	status,0,c
 34246  015CA2  3613               	rlcf	i2___fldiv@b,f,c
 34247  015CA4  3614               	rlcf	i2___fldiv@b+1,f,c
 34248  015CA6  3615               	rlcf	i2___fldiv@b+2,f,c
 34249  015CA8  3616               	rlcf	i2___fldiv@b+3,f,c
 34250  015CAA  BE29               	btfsc	i2___fldiv@grs+3,7,c
 34251  015CAC  8013               	bsf	i2___fldiv@b,0,c
 34252  015CAE  90D8               	bcf	status,0,c
 34253  015CB0  3626               	rlcf	i2___fldiv@grs,f,c
 34254  015CB2  3627               	rlcf	i2___fldiv@grs+1,f,c
 34255  015CB4  3628               	rlcf	i2___fldiv@grs+2,f,c
 34256  015CB6  3629               	rlcf	i2___fldiv@grs+3,f,c
 34257  015CB8  0624               	decf	i2___fldiv@new_exp,f,c
 34258  015CBA  A0D8               	btfss	status,0,c
 34259  015CBC  0625               	decf	i2___fldiv@new_exp+1,f,c
 34260  015CBE                     i2l2127:
 34261  015CBE  AE15               	btfss	i2___fldiv@b+2,7,c
 34262  015CC0  D7EF               	goto	i2l2128
 34263  015CC2  0E00               	movlw	0
 34264  015CC4  6E2B               	movwf	i2___fldiv@aexp,c
 34265  015CC6  AE29               	btfss	i2___fldiv@grs+3,7,c
 34266  015CC8  D016               	goto	i2l2134
 34267  015CCA  0EFF               	movlw	255
 34268  015CCC  1426               	andwf	i2___fldiv@grs,w,c
 34269  015CCE  6E1B               	movwf	??i2___fldiv& (0+255),c
 34270  015CD0  0EFF               	movlw	255
 34271  015CD2  1427               	andwf	i2___fldiv@grs+1,w,c
 34272  015CD4  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 34273  015CD6  0EFF               	movlw	255
 34274  015CD8  1428               	andwf	i2___fldiv@grs+2,w,c
 34275  015CDA  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 34276  015CDC  0E7F               	movlw	127
 34277  015CDE  1429               	andwf	i2___fldiv@grs+3,w,c
 34278  015CE0  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 34279  015CE2  501B               	movf	??i2___fldiv,w,c
 34280  015CE4  101C               	iorwf	??i2___fldiv+1,w,c
 34281  015CE6  101D               	iorwf	??i2___fldiv+2,w,c
 34282  015CE8  101E               	iorwf	??i2___fldiv+3,w,c
 34283  015CEA  A4D8               	btfss	status,2,c
 34284  015CEC  D002               	goto	i2u1432_40
 34285  015CEE  A013               	btfss	i2___fldiv@b,0,c
 34286  015CF0  D002               	goto	i2l2134
 34287  015CF2                     i2u1432_40:
 34288  015CF2  0E01               	movlw	1
 34289  015CF4  6E2B               	movwf	i2___fldiv@aexp,c
 34290  015CF6                     i2l2134:
 34291  015CF6  502B               	movf	i2___fldiv@aexp,w,c
 34292  015CF8  B4D8               	btfsc	status,2,c
 34293  015CFA  D01F               	goto	i2l2136
 34294  015CFC  0E01               	movlw	1
 34295  015CFE  2613               	addwf	i2___fldiv@b,f,c
 34296  015D00  0E00               	movlw	0
 34297  015D02  2214               	addwfc	i2___fldiv@b+1,f,c
 34298  015D04  2215               	addwfc	i2___fldiv@b+2,f,c
 34299  015D06  2216               	addwfc	i2___fldiv@b+3,f,c
 34300  015D08  A016               	btfss	i2___fldiv@b+3,0,c
 34301  015D0A  D017               	goto	i2l2136
 34302  015D0C  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 34303  015D10  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 34304  015D14  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 34305  015D18  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 34306  015D1C  341E               	rlcf	??i2___fldiv+3,w,c
 34307  015D1E  321E               	rrcf	??i2___fldiv+3,f,c
 34308  015D20  321D               	rrcf	??i2___fldiv+2,f,c
 34309  015D22  321C               	rrcf	??i2___fldiv+1,f,c
 34310  015D24  321B               	rrcf	??i2___fldiv,f,c
 34311  015D26  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 34312  015D2A  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 34313  015D2E  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 34314  015D32  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 34315  015D36  4A24               	infsnz	i2___fldiv@new_exp,f,c
 34316  015D38  2A25               	incf	i2___fldiv@new_exp+1,f,c
 34317  015D3A                     i2l2136:
 34318  015D3A  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 34319  015D3C  D010               	goto	i2l2137
 34320  015D3E  5025               	movf	i2___fldiv@new_exp+1,w,c
 34321  015D40  E103               	bnz	i2u1435_40
 34322  015D42  2824               	incf	i2___fldiv@new_exp,w,c
 34323  015D44  A0D8               	btfss	status,0,c
 34324  015D46  D00B               	goto	i2l2137
 34325  015D48                     i2u1435_40:
 34326  015D48  0E00               	movlw	0
 34327  015D4A  6E25               	movwf	i2___fldiv@new_exp+1,c
 34328  015D4C  6824               	setf	i2___fldiv@new_exp,c
 34329  015D4E  0E00               	movlw	0
 34330  015D50  6E13               	movwf	i2___fldiv@b,c
 34331  015D52  0E00               	movlw	0
 34332  015D54  6E14               	movwf	i2___fldiv@b+1,c
 34333  015D56  0E00               	movlw	0
 34334  015D58  6E15               	movwf	i2___fldiv@b+2,c
 34335  015D5A  0E00               	movlw	0
 34336  015D5C  6E16               	movwf	i2___fldiv@b+3,c
 34337  015D5E                     i2l2137:
 34338  015D5E  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 34339  015D60  D005               	goto	i2u1436_40
 34340  015D62  5025               	movf	i2___fldiv@new_exp+1,w,c
 34341  015D64  E111               	bnz	i2l11766
 34342  015D66  0424               	decf	i2___fldiv@new_exp,w,c
 34343  015D68  B0D8               	btfsc	status,0,c
 34344  015D6A  D00E               	goto	i2l2138
 34345  015D6C                     i2u1436_40:
 34346  015D6C  0E00               	movlw	0
 34347  015D6E  6E25               	movwf	i2___fldiv@new_exp+1,c
 34348  015D70  0E00               	movlw	0
 34349  015D72  6E24               	movwf	i2___fldiv@new_exp,c
 34350  015D74  0E00               	movlw	0
 34351  015D76  6E13               	movwf	i2___fldiv@b,c
 34352  015D78  0E00               	movlw	0
 34353  015D7A  6E14               	movwf	i2___fldiv@b+1,c
 34354  015D7C  0E00               	movlw	0
 34355  015D7E  6E15               	movwf	i2___fldiv@b+2,c
 34356  015D80  0E00               	movlw	0
 34357  015D82  6E16               	movwf	i2___fldiv@b+3,c
 34358  015D84  0E00               	movlw	0
 34359  015D86  6E1F               	movwf	i2___fldiv@sign,c
 34360  015D88                     i2l2138:
 34361  015D88                     i2l11766:
 34362  015D88  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 34363  015D8C  A02A               	btfss	i2___fldiv@bexp,0,c
 34364  015D8E  D002               	goto	i2l2139
 34365  015D90  8E15               	bsf	i2___fldiv@b+2,7,c
 34366  015D92  D001               	goto	i2l2140
 34367  015D94                     i2l2139:
 34368  015D94  9E15               	bcf	i2___fldiv@b+2,7,c
 34369  015D96                     i2l2140:
 34370  015D96  90D8               	bcf	status,0,c
 34371  015D98  302A               	rrcf	i2___fldiv@bexp,w,c
 34372  015D9A  6E16               	movwf	i2___fldiv@b+3,c
 34373  015D9C  501F               	movf	i2___fldiv@sign,w,c
 34374  015D9E  1216               	iorwf	i2___fldiv@b+3,f,c
 34375  015DA0  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 34376  015DA4  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 34377  015DA8  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 34378  015DAC  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 34379  015DB0  0012               	return	
 34380  015DB2                     __end_ofi2___fldiv:
 34381                           	opt stack 0
 34382                           tosu	equ	0xFFF
 34383                           tosh	equ	0xFFE
 34384                           tosl	equ	0xFFD
 34385                           pclatu	equ	0xFFB
 34386                           pclath	equ	0xFFA
 34387                           tblptru	equ	0xFF8
 34388                           tblptrh	equ	0xFF7
 34389                           tblptrl	equ	0xFF6
 34390                           tablat	equ	0xFF5
 34391                           prodh	equ	0xFF4
 34392                           prodl	equ	0xFF3
 34393                           intcon	equ	0xFF2
 34394                           indf0	equ	0xFEF
 34395                           postinc0	equ	0xFEE
 34396                           fsr0h	equ	0xFEA
 34397                           fsr0l	equ	0xFE9
 34398                           wreg	equ	0xFE8
 34399                           indf1	equ	0xFE7
 34400                           postdec1	equ	0xFE5
 34401                           plusw1	equ	0xFE3
 34402                           fsr1h	equ	0xFE2
 34403                           fsr1l	equ	0xFE1
 34404                           bsr	equ	0xFE0
 34405                           indf2	equ	0xFDF
 34406                           postinc2	equ	0xFDE
 34407                           postdec2	equ	0xFDD
 34408                           plusw2	equ	0xFDB
 34409                           fsr2h	equ	0xFDA
 34410                           fsr2l	equ	0xFD9
 34411                           status	equ	0xFD8
 34412                           
 34413 ;; *************** function _floor *****************
 34414 ;; Defined at:
 34415 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 34416 ;; Parameters:    Size  Location     Type
 34417 ;;  x               4   22[BANK0 ] unsigned char 
 34418 ;; Auto vars:     Size  Location     Type
 34419 ;;  i               4   26[BANK0 ] unsigned char 
 34420 ;;  expon           2   30[BANK0 ] int 
 34421 ;; Return value:  Size  Location     Type
 34422 ;;                  4   22[BANK0 ] int 
 34423 ;; Registers used:
 34424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34425 ;; Tracked objects:
 34426 ;;		On entry : 0/0
 34427 ;;		On exit  : 0/0
 34428 ;;		Unchanged: 0/0
 34429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34430 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34431 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34433 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34434 ;;Total ram usage:       10 bytes
 34435 ;; Hardware stack levels used:    1
 34436 ;; Hardware stack levels required when called:    1
 34437 ;; This function calls:
 34438 ;;		_frexp
 34439 ;;		i2___fladd
 34440 ;;		i2___flge
 34441 ;;		i2___fltol
 34442 ;;		i2___xxtofl
 34443 ;; This function is called by:
 34444 ;;		_sin
 34445 ;; This function uses a non-reentrant model
 34446 ;;
 34447                           
 34448                           	psect	text113
 34449  016FA2                     __ptext113:
 34450                           	opt stack 0
 34451  016FA2                     _floor:
 34452                           	opt stack 13
 34453                           
 34454                           ;incstack = 0
 34455  016FA2  C076  F001         	movff	floor@x,frexp@value
 34456  016FA6  C077  F002         	movff	floor@x+1,frexp@value+1
 34457  016FAA  C078  F003         	movff	floor@x+2,frexp@value+2
 34458  016FAE  C079  F004         	movff	floor@x+3,frexp@value+3
 34459  016FB2  0E7E               	movlw	low floor@expon
 34460  016FB4  6E05               	movwf	frexp@eptr,c
 34461  016FB6  0E00               	movlw	high floor@expon
 34462  016FB8  6E06               	movwf	frexp@eptr+1,c
 34463  016FBA  EC94  F0BD         	call	_frexp	;wreg free
 34464  016FBE  0100               	movlb	0	; () banked
 34465  016FC0  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 34466  016FC2  D014               	goto	i2l2267
 34467                           
 34468                           ; BSR set to: 0
 34469  016FC4  AF79               	btfss	(floor@x+3)& (0+255),7,b
 34470  016FC6  D009               	goto	i2l2268
 34471                           
 34472                           ; BSR set to: 0
 34473  016FC8  0E00               	movlw	0
 34474  016FCA  6F76               	movwf	?_floor& (0+255),b
 34475  016FCC  0E00               	movlw	0
 34476  016FCE  6F77               	movwf	(?_floor+1)& (0+255),b
 34477  016FD0  0E80               	movlw	128
 34478  016FD2  6F78               	movwf	(?_floor+2)& (0+255),b
 34479  016FD4  0EBF               	movlw	191
 34480  016FD6  6F79               	movwf	(?_floor+3)& (0+255),b
 34481                           
 34482                           ; BSR set to: 0
 34483  016FD8  0012               	return	
 34484  016FDA                     i2l2268:
 34485                           
 34486                           ; BSR set to: 0
 34487                           
 34488                           ; BSR set to: 0
 34489  016FDA  0E00               	movlw	0
 34490  016FDC  6F76               	movwf	?_floor& (0+255),b
 34491  016FDE  0E00               	movlw	0
 34492  016FE0  6F77               	movwf	(?_floor+1)& (0+255),b
 34493  016FE2  0E00               	movlw	0
 34494  016FE4  6F78               	movwf	(?_floor+2)& (0+255),b
 34495  016FE6  0E00               	movlw	0
 34496  016FE8  6F79               	movwf	(?_floor+3)& (0+255),b
 34497                           
 34498                           ; BSR set to: 0
 34499  016FEA  0012               	return	
 34500  016FEC                     i2l2267:
 34501                           
 34502                           ; BSR set to: 0
 34503                           
 34504                           ; BSR set to: 0
 34505  016FEC  517F               	movf	(floor@expon+1)& (0+255),w,b
 34506  016FEE  E104               	bnz	i2u1616_40
 34507  016FF0  0E1D               	movlw	29
 34508  016FF2  5D7E               	subwf	floor@expon& (0+255),w,b
 34509  016FF4  A0D8               	btfss	status,0,c
 34510  016FF6  D009               	goto	i2l2270
 34511  016FF8                     i2u1616_40:
 34512                           
 34513                           ; BSR set to: 0
 34514  016FF8  C076  F076         	movff	floor@x,?_floor
 34515  016FFC  C077  F077         	movff	floor@x+1,?_floor+1
 34516  017000  C078  F078         	movff	floor@x+2,?_floor+2
 34517  017004  C079  F079         	movff	floor@x+3,?_floor+3
 34518  017008  0012               	return	
 34519  01700A                     i2l2270:
 34520                           
 34521                           ; BSR set to: 0
 34522                           
 34523                           ; BSR set to: 0
 34524  01700A  C076  F06C         	movff	floor@x,i2___fltol@f1
 34525  01700E  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 34526  017012  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 34527  017016  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 34528  01701A  EC49  F0B9         	call	i2___fltol	;wreg free
 34529  01701E  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 34530  017022  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 34531  017026  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 34532  01702A  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 34533  01702E  0E01               	movlw	1
 34534  017030  EC1A  F0B3         	call	i2___xxtofl
 34535  017034  C005  F07A         	movff	?i2___xxtofl,floor@i
 34536  017038  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 34537  01703C  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 34538  017040  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 34539  017044  C076  F034         	movff	floor@x,i2___flge@ff1
 34540  017048  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 34541  01704C  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 34542  017050  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 34543  017054  C07A  F038         	movff	floor@i,i2___flge@ff2
 34544  017058  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 34545  01705C  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 34546  017060  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 34547  017064  EC41  F0B7         	call	i2___flge	;wreg free
 34548  017068  B0D8               	btfsc	status,0,c
 34549  01706A  D01B               	goto	i2l2271
 34550  01706C  C07A  F056         	movff	floor@i,i2___fladd@b
 34551  017070  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 34552  017074  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 34553  017078  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 34554  01707C  0E00               	movlw	0
 34555  01707E  6E5A               	movwf	i2___fladd@a,c
 34556  017080  0E00               	movlw	0
 34557  017082  6E5B               	movwf	i2___fladd@a+1,c
 34558  017084  0E80               	movlw	128
 34559  017086  6E5C               	movwf	i2___fladd@a+2,c
 34560  017088  0EBF               	movlw	191
 34561  01708A  6E5D               	movwf	i2___fladd@a+3,c
 34562  01708C  ECBF  F0A4         	call	i2___fladd	;wreg free
 34563  017090  C056  F076         	movff	?i2___fladd,?_floor
 34564  017094  C057  F077         	movff	?i2___fladd+1,?_floor+1
 34565  017098  C058  F078         	movff	?i2___fladd+2,?_floor+2
 34566  01709C  C059  F079         	movff	?i2___fladd+3,?_floor+3
 34567  0170A0  0012               	return	
 34568  0170A2                     i2l2271:
 34569  0170A2  C07A  F076         	movff	floor@i,?_floor
 34570  0170A6  C07B  F077         	movff	floor@i+1,?_floor+1
 34571  0170AA  C07C  F078         	movff	floor@i+2,?_floor+2
 34572  0170AE  C07D  F079         	movff	floor@i+3,?_floor+3
 34573  0170B2  0012               	return		;funcret
 34574  0170B4                     __end_of_floor:
 34575                           	opt stack 0
 34576                           tosu	equ	0xFFF
 34577                           tosh	equ	0xFFE
 34578                           tosl	equ	0xFFD
 34579                           pclatu	equ	0xFFB
 34580                           pclath	equ	0xFFA
 34581                           tblptru	equ	0xFF8
 34582                           tblptrh	equ	0xFF7
 34583                           tblptrl	equ	0xFF6
 34584                           tablat	equ	0xFF5
 34585                           prodh	equ	0xFF4
 34586                           prodl	equ	0xFF3
 34587                           intcon	equ	0xFF2
 34588                           indf0	equ	0xFEF
 34589                           postinc0	equ	0xFEE
 34590                           fsr0h	equ	0xFEA
 34591                           fsr0l	equ	0xFE9
 34592                           wreg	equ	0xFE8
 34593                           indf1	equ	0xFE7
 34594                           postdec1	equ	0xFE5
 34595                           plusw1	equ	0xFE3
 34596                           fsr1h	equ	0xFE2
 34597                           fsr1l	equ	0xFE1
 34598                           bsr	equ	0xFE0
 34599                           indf2	equ	0xFDF
 34600                           postinc2	equ	0xFDE
 34601                           postdec2	equ	0xFDD
 34602                           plusw2	equ	0xFDB
 34603                           fsr2h	equ	0xFDA
 34604                           fsr2l	equ	0xFD9
 34605                           status	equ	0xFD8
 34606                           
 34607 ;; *************** function i2___xxtofl *****************
 34608 ;; Defined at:
 34609 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 34610 ;; Parameters:    Size  Location     Type
 34611 ;;  sign            1    wreg     unsigned char 
 34612 ;;  val             4    4[COMRAM] long 
 34613 ;; Auto vars:     Size  Location     Type
 34614 ;;  sign            1   12[COMRAM] unsigned char 
 34615 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 34616 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 34617 ;; Return value:  Size  Location     Type
 34618 ;;                  4    4[COMRAM] unsigned char 
 34619 ;; Registers used:
 34620 ;;		wreg, status,2, status,0
 34621 ;; Tracked objects:
 34622 ;;		On entry : 0/0
 34623 ;;		On exit  : 0/0
 34624 ;;		Unchanged: 0/0
 34625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34627 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34628 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34629 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34630 ;;Total ram usage:       14 bytes
 34631 ;; Hardware stack levels used:    1
 34632 ;; This function calls:
 34633 ;;		Nothing
 34634 ;; This function is called by:
 34635 ;;		_ADCPostProcessingCallback
 34636 ;;		_floor
 34637 ;;		i2_printf
 34638 ;; This function uses a non-reentrant model
 34639 ;;
 34640                           
 34641                           	psect	text114
 34642  016634                     __ptext114:
 34643                           	opt stack 0
 34644  016634                     i2___xxtofl:
 34645                           	opt stack 16
 34646                           
 34647                           ;incstack = 0
 34648                           ;i2___xxtofl@sign stored from wreg
 34649  016634  6E0D               	movwf	i2___xxtofl@sign,c
 34650  016636  500D               	movf	i2___xxtofl@sign,w,c
 34651  016638  A4D8               	btfss	status,2,c
 34652  01663A  AE08               	btfss	i2___xxtofl@val+3,7,c
 34653  01663C  D01A               	goto	i2l2246
 34654  01663E  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 34655  016642  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 34656  016646  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 34657  01664A  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 34658  01664E  1E09               	comf	??i2___xxtofl,f,c
 34659  016650  1E0A               	comf	??i2___xxtofl+1,f,c
 34660  016652  1E0B               	comf	??i2___xxtofl+2,f,c
 34661  016654  1E0C               	comf	??i2___xxtofl+3,f,c
 34662  016656  2A09               	incf	??i2___xxtofl,f,c
 34663  016658  0E00               	movlw	0
 34664  01665A  220A               	addwfc	??i2___xxtofl+1,f,c
 34665  01665C  220B               	addwfc	??i2___xxtofl+2,f,c
 34666  01665E  220C               	addwfc	??i2___xxtofl+3,f,c
 34667  016660  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 34668  016664  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 34669  016668  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 34670  01666C  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 34671  016670  D008               	goto	i2l2247
 34672  016672                     i2l2246:
 34673  016672  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 34674  016676  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 34675  01667A  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 34676  01667E  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 34677  016682                     i2l2247:
 34678  016682  5005               	movf	i2___xxtofl@val,w,c
 34679  016684  1006               	iorwf	i2___xxtofl@val+1,w,c
 34680  016686  1007               	iorwf	i2___xxtofl@val+2,w,c
 34681  016688  1008               	iorwf	i2___xxtofl@val+3,w,c
 34682  01668A  A4D8               	btfss	status,2,c
 34683  01668C  D009               	goto	i2l2248
 34684  01668E  0E00               	movlw	0
 34685  016690  6E05               	movwf	?i2___xxtofl,c
 34686  016692  0E00               	movlw	0
 34687  016694  6E06               	movwf	?i2___xxtofl+1,c
 34688  016696  0E00               	movlw	0
 34689  016698  6E07               	movwf	?i2___xxtofl+2,c
 34690  01669A  0E00               	movlw	0
 34691  01669C  6E08               	movwf	?i2___xxtofl+3,c
 34692  01669E  0012               	return	
 34693  0166A0                     i2l2248:
 34694  0166A0  0E96               	movlw	150
 34695  0166A2  6E0E               	movwf	i2___xxtofl@exp,c
 34696  0166A4  D006               	goto	i2l2250
 34697  0166A6  2A0E               	incf	i2___xxtofl@exp,f,c
 34698  0166A8  90D8               	bcf	status,0,c
 34699  0166AA  3212               	rrcf	i2___xxtofl@arg+3,f,c
 34700  0166AC  3211               	rrcf	i2___xxtofl@arg+2,f,c
 34701  0166AE  3210               	rrcf	i2___xxtofl@arg+1,f,c
 34702  0166B0  320F               	rrcf	i2___xxtofl@arg,f,c
 34703  0166B2                     i2l2250:
 34704  0166B2  0E00               	movlw	0
 34705  0166B4  140F               	andwf	i2___xxtofl@arg,w,c
 34706  0166B6  6E09               	movwf	??i2___xxtofl& (0+255),c
 34707  0166B8  0E00               	movlw	0
 34708  0166BA  1410               	andwf	i2___xxtofl@arg+1,w,c
 34709  0166BC  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 34710  0166BE  0E00               	movlw	0
 34711  0166C0  1411               	andwf	i2___xxtofl@arg+2,w,c
 34712  0166C2  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 34713  0166C4  0EFE               	movlw	254
 34714  0166C6  1412               	andwf	i2___xxtofl@arg+3,w,c
 34715  0166C8  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 34716  0166CA  5009               	movf	??i2___xxtofl,w,c
 34717  0166CC  100A               	iorwf	??i2___xxtofl+1,w,c
 34718  0166CE  100B               	iorwf	??i2___xxtofl+2,w,c
 34719  0166D0  100C               	iorwf	??i2___xxtofl+3,w,c
 34720  0166D2  B4D8               	btfsc	status,2,c
 34721  0166D4  D00D               	goto	i2l2253
 34722  0166D6  D7E7               	goto	i2l2251
 34723  0166D8  2A0E               	incf	i2___xxtofl@exp,f,c
 34724  0166DA  0E01               	movlw	1
 34725  0166DC  260F               	addwf	i2___xxtofl@arg,f,c
 34726  0166DE  0E00               	movlw	0
 34727  0166E0  2210               	addwfc	i2___xxtofl@arg+1,f,c
 34728  0166E2  2211               	addwfc	i2___xxtofl@arg+2,f,c
 34729  0166E4  2212               	addwfc	i2___xxtofl@arg+3,f,c
 34730  0166E6  90D8               	bcf	status,0,c
 34731  0166E8  3212               	rrcf	i2___xxtofl@arg+3,f,c
 34732  0166EA  3211               	rrcf	i2___xxtofl@arg+2,f,c
 34733  0166EC  3210               	rrcf	i2___xxtofl@arg+1,f,c
 34734  0166EE  320F               	rrcf	i2___xxtofl@arg,f,c
 34735  0166F0                     i2l2253:
 34736  0166F0  0E00               	movlw	0
 34737  0166F2  140F               	andwf	i2___xxtofl@arg,w,c
 34738  0166F4  6E09               	movwf	??i2___xxtofl& (0+255),c
 34739  0166F6  0E00               	movlw	0
 34740  0166F8  1410               	andwf	i2___xxtofl@arg+1,w,c
 34741  0166FA  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 34742  0166FC  0E00               	movlw	0
 34743  0166FE  1411               	andwf	i2___xxtofl@arg+2,w,c
 34744  016700  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 34745  016702  0EFF               	movlw	255
 34746  016704  1412               	andwf	i2___xxtofl@arg+3,w,c
 34747  016706  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 34748  016708  5009               	movf	??i2___xxtofl,w,c
 34749  01670A  100A               	iorwf	??i2___xxtofl+1,w,c
 34750  01670C  100B               	iorwf	??i2___xxtofl+2,w,c
 34751  01670E  100C               	iorwf	??i2___xxtofl+3,w,c
 34752  016710  B4D8               	btfsc	status,2,c
 34753  016712  D007               	goto	i2l2256
 34754  016714  D7E1               	goto	i2l2254
 34755  016716  060E               	decf	i2___xxtofl@exp,f,c
 34756  016718  90D8               	bcf	status,0,c
 34757  01671A  360F               	rlcf	i2___xxtofl@arg,f,c
 34758  01671C  3610               	rlcf	i2___xxtofl@arg+1,f,c
 34759  01671E  3611               	rlcf	i2___xxtofl@arg+2,f,c
 34760  016720  3612               	rlcf	i2___xxtofl@arg+3,f,c
 34761  016722                     i2l2256:
 34762  016722  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 34763  016724  D003               	goto	i2u1524_40
 34764  016726  0E02               	movlw	2
 34765  016728  600E               	cpfslt	i2___xxtofl@exp,c
 34766  01672A  D7F5               	goto	i2l2257
 34767  01672C                     i2u1524_40:
 34768  01672C  B00E               	btfsc	i2___xxtofl@exp,0,c
 34769  01672E  D008               	goto	i2l2261
 34770  016730  0EFF               	movlw	255
 34771  016732  160F               	andwf	i2___xxtofl@arg,f,c
 34772  016734  0EFF               	movlw	255
 34773  016736  1610               	andwf	i2___xxtofl@arg+1,f,c
 34774  016738  0E7F               	movlw	127
 34775  01673A  1611               	andwf	i2___xxtofl@arg+2,f,c
 34776  01673C  0EFF               	movlw	255
 34777  01673E  1612               	andwf	i2___xxtofl@arg+3,f,c
 34778  016740                     i2l2261:
 34779  016740  90D8               	bcf	status,0,c
 34780  016742  320E               	rrcf	i2___xxtofl@exp,f,c
 34781  016744  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 34782  016748  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 34783  01674A  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 34784  01674C  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 34785  01674E  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 34786  016752  6A0B               	clrf	??i2___xxtofl+2,c
 34787  016754  6A0A               	clrf	??i2___xxtofl+1,c
 34788  016756  6A09               	clrf	??i2___xxtofl,c
 34789  016758  5009               	movf	??i2___xxtofl,w,c
 34790  01675A  120F               	iorwf	i2___xxtofl@arg,f,c
 34791  01675C  500A               	movf	??i2___xxtofl+1,w,c
 34792  01675E  1210               	iorwf	i2___xxtofl@arg+1,f,c
 34793  016760  500B               	movf	??i2___xxtofl+2,w,c
 34794  016762  1211               	iorwf	i2___xxtofl@arg+2,f,c
 34795  016764  500C               	movf	??i2___xxtofl+3,w,c
 34796  016766  1212               	iorwf	i2___xxtofl@arg+3,f,c
 34797  016768  500D               	movf	i2___xxtofl@sign,w,c
 34798  01676A  A4D8               	btfss	status,2,c
 34799  01676C  AE08               	btfss	i2___xxtofl@val+3,7,c
 34800  01676E  D001               	goto	i2l2262
 34801  016770  8E12               	bsf	i2___xxtofl@arg+3,7,c
 34802  016772                     i2l2262:
 34803  016772  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 34804  016776  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 34805  01677A  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 34806  01677E  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 34807  016782  0012               	return	
 34808  016784                     __end_ofi2___xxtofl:
 34809                           	opt stack 0
 34810                           tosu	equ	0xFFF
 34811                           tosh	equ	0xFFE
 34812                           tosl	equ	0xFFD
 34813                           pclatu	equ	0xFFB
 34814                           pclath	equ	0xFFA
 34815                           tblptru	equ	0xFF8
 34816                           tblptrh	equ	0xFF7
 34817                           tblptrl	equ	0xFF6
 34818                           tablat	equ	0xFF5
 34819                           prodh	equ	0xFF4
 34820                           prodl	equ	0xFF3
 34821                           intcon	equ	0xFF2
 34822                           indf0	equ	0xFEF
 34823                           postinc0	equ	0xFEE
 34824                           fsr0h	equ	0xFEA
 34825                           fsr0l	equ	0xFE9
 34826                           wreg	equ	0xFE8
 34827                           indf1	equ	0xFE7
 34828                           postdec1	equ	0xFE5
 34829                           plusw1	equ	0xFE3
 34830                           fsr1h	equ	0xFE2
 34831                           fsr1l	equ	0xFE1
 34832                           bsr	equ	0xFE0
 34833                           indf2	equ	0xFDF
 34834                           postinc2	equ	0xFDE
 34835                           postdec2	equ	0xFDD
 34836                           plusw2	equ	0xFDB
 34837                           fsr2h	equ	0xFDA
 34838                           fsr2l	equ	0xFD9
 34839                           status	equ	0xFD8
 34840                           
 34841 ;; *************** function i2___fltol *****************
 34842 ;; Defined at:
 34843 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 34844 ;; Parameters:    Size  Location     Type
 34845 ;;  f1              4   12[BANK0 ] unsigned char 
 34846 ;; Auto vars:     Size  Location     Type
 34847 ;;  __fltol         1   21[BANK0 ] unsigned char 
 34848 ;;  __fltol         1   20[BANK0 ] unsigned char 
 34849 ;; Return value:  Size  Location     Type
 34850 ;;                  4   12[BANK0 ] long 
 34851 ;; Registers used:
 34852 ;;		wreg, status,2, status,0
 34853 ;; Tracked objects:
 34854 ;;		On entry : 0/0
 34855 ;;		On exit  : 0/0
 34856 ;;		Unchanged: 0/0
 34857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34858 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34859 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34860 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34861 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34862 ;;Total ram usage:       10 bytes
 34863 ;; Hardware stack levels used:    1
 34864 ;; This function calls:
 34865 ;;		Nothing
 34866 ;; This function is called by:
 34867 ;;		_ADCPostProcessingCallback
 34868 ;;		_floor
 34869 ;;		i2_printf
 34870 ;; This function uses a non-reentrant model
 34871 ;;
 34872                           
 34873                           	psect	text115
 34874  017292                     __ptext115:
 34875                           	opt stack 0
 34876  017292                     i2___fltol:
 34877                           	opt stack 16
 34878                           
 34879                           ;incstack = 0
 34880  017292  0100               	movlb	0	; () banked
 34881  017294  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 34882  017296  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 34883  017298  6F75               	movwf	i2___fltol@exp1& (0+255),b
 34884  01729A  5175               	movf	i2___fltol@exp1& (0+255),w,b
 34885  01729C  A4D8               	btfss	status,2,c
 34886  01729E  D009               	goto	i2l1813
 34887                           
 34888                           ; BSR set to: 0
 34889  0172A0  0E00               	movlw	0
 34890  0172A2  6F6C               	movwf	?i2___fltol& (0+255),b
 34891  0172A4  0E00               	movlw	0
 34892  0172A6  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 34893  0172A8  0E00               	movlw	0
 34894  0172AA  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 34895  0172AC  0E00               	movlw	0
 34896  0172AE  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 34897                           
 34898                           ; BSR set to: 0
 34899  0172B0  0012               	return	
 34900  0172B2                     i2l1813:
 34901                           
 34902                           ; BSR set to: 0
 34903                           
 34904                           ; BSR set to: 0
 34905  0172B2  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 34906  0172B6  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 34907  0172BA  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 34908  0172BE  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 34909  0172C2  0E20               	movlw	32
 34910  0172C4  D005               	goto	i2u1512_40
 34911  0172C6                     i2u1512_45:
 34912  0172C6  90D8               	bcf	status,0,c
 34913  0172C8  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 34914  0172CA  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 34915  0172CC  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 34916  0172CE  3370               	rrcf	??i2___fltol& (0+255),f,b
 34917  0172D0                     i2u1512_40:
 34918  0172D0  2EE8               	decfsz	wreg,f,c
 34919  0172D2  D7F9               	goto	i2u1512_45
 34920  0172D4  5170               	movf	??i2___fltol& (0+255),w,b
 34921  0172D6  6F74               	movwf	i2___fltol@sign1& (0+255),b
 34922                           
 34923                           ; BSR set to: 0
 34924  0172D8  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 34925                           
 34926                           ; BSR set to: 0
 34927  0172DA  0EFF               	movlw	255
 34928  0172DC  176C               	andwf	i2___fltol@f1& (0+255),f,b
 34929  0172DE  0EFF               	movlw	255
 34930  0172E0  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 34931  0172E2  0EFF               	movlw	255
 34932  0172E4  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 34933  0172E6  0E00               	movlw	0
 34934  0172E8  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 34935                           
 34936                           ; BSR set to: 0
 34937  0172EA  0E96               	movlw	150
 34938  0172EC  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 34939                           
 34940                           ; BSR set to: 0
 34941  0172EE  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 34942  0172F0  D016               	goto	i2l1815
 34943                           
 34944                           ; BSR set to: 0
 34945  0172F2  5175               	movf	i2___fltol@exp1& (0+255),w,b
 34946  0172F4  0A80               	xorlw	128
 34947  0172F6  0F97               	addlw	151
 34948  0172F8  B0D8               	btfsc	status,0,c
 34949  0172FA  D009               	goto	i2l1816
 34950                           
 34951                           ; BSR set to: 0
 34952  0172FC  0E00               	movlw	0
 34953  0172FE  6F6C               	movwf	?i2___fltol& (0+255),b
 34954  017300  0E00               	movlw	0
 34955  017302  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 34956  017304  0E00               	movlw	0
 34957  017306  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 34958  017308  0E00               	movlw	0
 34959  01730A  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 34960                           
 34961                           ; BSR set to: 0
 34962  01730C  0012               	return	
 34963  01730E                     i2l1816:
 34964                           
 34965                           ; BSR set to: 0
 34966                           
 34967                           ; BSR set to: 0
 34968                           
 34969                           ; BSR set to: 0
 34970  01730E  90D8               	bcf	status,0,c
 34971  017310  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 34972  017312  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 34973  017314  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 34974  017316  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 34975                           
 34976                           ; BSR set to: 0
 34977  017318  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 34978  01731A  D7F9               	goto	i2l1816
 34979                           
 34980                           ; BSR set to: 0
 34981  01731C  D015               	goto	i2u1516_40
 34982  01731E                     i2l1815:
 34983                           
 34984                           ; BSR set to: 0
 34985                           
 34986                           ; BSR set to: 0
 34987  01731E  0E1F               	movlw	31
 34988  017320  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 34989  017322  D00F               	goto	i2l1821
 34990                           
 34991                           ; BSR set to: 0
 34992  017324  0E00               	movlw	0
 34993  017326  6F6C               	movwf	?i2___fltol& (0+255),b
 34994  017328  0E00               	movlw	0
 34995  01732A  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 34996  01732C  0E00               	movlw	0
 34997  01732E  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 34998  017330  0E00               	movlw	0
 34999  017332  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 35000                           
 35001                           ; BSR set to: 0
 35002  017334  0012               	return	
 35003  017336                     
 35004                           ; BSR set to: 0
 35005                           
 35006                           ; BSR set to: 0
 35007  017336  90D8               	bcf	status,0,c
 35008  017338  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 35009  01733A  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 35010  01733C  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 35011  01733E  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 35012  017340  0775               	decf	i2___fltol@exp1& (0+255),f,b
 35013  017342                     i2l1821:
 35014                           
 35015                           ; BSR set to: 0
 35016                           
 35017                           ; BSR set to: 0
 35018  017342  5175               	movf	i2___fltol@exp1& (0+255),w,b
 35019  017344  A4D8               	btfss	status,2,c
 35020  017346  D7F7               	goto	i2l1822
 35021  017348                     i2u1516_40:
 35022                           
 35023                           ; BSR set to: 0
 35024                           
 35025                           ; BSR set to: 0
 35026                           
 35027                           ; BSR set to: 0
 35028  017348  5174               	movf	i2___fltol@sign1& (0+255),w,b
 35029  01734A  B4D8               	btfsc	status,2,c
 35030  01734C  D008               	goto	i2l1824
 35031                           
 35032                           ; BSR set to: 0
 35033  01734E  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 35034  017350  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 35035  017352  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 35036  017354  6D6C               	negf	i2___fltol@f1& (0+255),b
 35037  017356  0E00               	movlw	0
 35038  017358  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 35039  01735A  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 35040  01735C  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 35041  01735E                     i2l1824:
 35042                           
 35043                           ; BSR set to: 0
 35044                           
 35045                           ; BSR set to: 0
 35046  01735E  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 35047  017362  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 35048  017366  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 35049  01736A  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 35050  01736E  0012               	return	
 35051  017370                     __end_ofi2___fltol:
 35052                           	opt stack 0
 35053                           tosu	equ	0xFFF
 35054                           tosh	equ	0xFFE
 35055                           tosl	equ	0xFFD
 35056                           pclatu	equ	0xFFB
 35057                           pclath	equ	0xFFA
 35058                           tblptru	equ	0xFF8
 35059                           tblptrh	equ	0xFF7
 35060                           tblptrl	equ	0xFF6
 35061                           tablat	equ	0xFF5
 35062                           prodh	equ	0xFF4
 35063                           prodl	equ	0xFF3
 35064                           intcon	equ	0xFF2
 35065                           indf0	equ	0xFEF
 35066                           postinc0	equ	0xFEE
 35067                           fsr0h	equ	0xFEA
 35068                           fsr0l	equ	0xFE9
 35069                           wreg	equ	0xFE8
 35070                           indf1	equ	0xFE7
 35071                           postdec1	equ	0xFE5
 35072                           plusw1	equ	0xFE3
 35073                           fsr1h	equ	0xFE2
 35074                           fsr1l	equ	0xFE1
 35075                           bsr	equ	0xFE0
 35076                           indf2	equ	0xFDF
 35077                           postinc2	equ	0xFDE
 35078                           postdec2	equ	0xFDD
 35079                           plusw2	equ	0xFDB
 35080                           fsr2h	equ	0xFDA
 35081                           fsr2l	equ	0xFD9
 35082                           status	equ	0xFD8
 35083                           
 35084 ;; *************** function i2___flge *****************
 35085 ;; Defined at:
 35086 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 35087 ;; Parameters:    Size  Location     Type
 35088 ;;  ff1             4   51[COMRAM] long 
 35089 ;;  ff2             4   55[COMRAM] long 
 35090 ;; Auto vars:     Size  Location     Type
 35091 ;;		None
 35092 ;; Return value:  Size  Location     Type
 35093 ;;		None               void
 35094 ;; Registers used:
 35095 ;;		wreg, status,2, status,0
 35096 ;; Tracked objects:
 35097 ;;		On entry : 0/0
 35098 ;;		On exit  : 0/0
 35099 ;;		Unchanged: 0/0
 35100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35101 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35103 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35104 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35105 ;;Total ram usage:       12 bytes
 35106 ;; Hardware stack levels used:    1
 35107 ;; This function calls:
 35108 ;;		Nothing
 35109 ;; This function is called by:
 35110 ;;		_ADCPostProcessingCallback
 35111 ;;		_asin
 35112 ;;		_atan
 35113 ;;		_sin
 35114 ;;		_floor
 35115 ;;		i2_printf
 35116 ;; This function uses a non-reentrant model
 35117 ;;
 35118                           
 35119                           	psect	text116
 35120  016E82                     __ptext116:
 35121                           	opt stack 0
 35122  016E82                     i2___flge:
 35123                           	opt stack 16
 35124                           
 35125                           ; BSR set to: 0
 35126                           ;incstack = 0
 35127  016E82  0E00               	movlw	0
 35128  016E84  1434               	andwf	i2___flge@ff1,w,c
 35129  016E86  6E3C               	movwf	??i2___flge& (0+255),c
 35130  016E88  0E00               	movlw	0
 35131  016E8A  1435               	andwf	i2___flge@ff1+1,w,c
 35132  016E8C  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 35133  016E8E  0E80               	movlw	128
 35134  016E90  1436               	andwf	i2___flge@ff1+2,w,c
 35135  016E92  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 35136  016E94  0E7F               	movlw	127
 35137  016E96  1437               	andwf	i2___flge@ff1+3,w,c
 35138  016E98  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 35139  016E9A  503C               	movf	??i2___flge,w,c
 35140  016E9C  103D               	iorwf	??i2___flge+1,w,c
 35141  016E9E  103E               	iorwf	??i2___flge+2,w,c
 35142  016EA0  103F               	iorwf	??i2___flge+3,w,c
 35143  016EA2  A4D8               	btfss	status,2,c
 35144  016EA4  D008               	goto	i2l1783
 35145  016EA6  0E00               	movlw	0
 35146  016EA8  6E34               	movwf	i2___flge@ff1,c
 35147  016EAA  0E00               	movlw	0
 35148  016EAC  6E35               	movwf	i2___flge@ff1+1,c
 35149  016EAE  0E00               	movlw	0
 35150  016EB0  6E36               	movwf	i2___flge@ff1+2,c
 35151  016EB2  0E00               	movlw	0
 35152  016EB4  6E37               	movwf	i2___flge@ff1+3,c
 35153  016EB6                     i2l1783:
 35154  016EB6  0E00               	movlw	0
 35155  016EB8  1438               	andwf	i2___flge@ff2,w,c
 35156  016EBA  6E3C               	movwf	??i2___flge& (0+255),c
 35157  016EBC  0E00               	movlw	0
 35158  016EBE  1439               	andwf	i2___flge@ff2+1,w,c
 35159  016EC0  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 35160  016EC2  0E80               	movlw	128
 35161  016EC4  143A               	andwf	i2___flge@ff2+2,w,c
 35162  016EC6  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 35163  016EC8  0E7F               	movlw	127
 35164  016ECA  143B               	andwf	i2___flge@ff2+3,w,c
 35165  016ECC  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 35166  016ECE  503C               	movf	??i2___flge,w,c
 35167  016ED0  103D               	iorwf	??i2___flge+1,w,c
 35168  016ED2  103E               	iorwf	??i2___flge+2,w,c
 35169  016ED4  103F               	iorwf	??i2___flge+3,w,c
 35170  016ED6  A4D8               	btfss	status,2,c
 35171  016ED8  D008               	goto	i2l1784
 35172  016EDA  0E00               	movlw	0
 35173  016EDC  6E38               	movwf	i2___flge@ff2,c
 35174  016EDE  0E00               	movlw	0
 35175  016EE0  6E39               	movwf	i2___flge@ff2+1,c
 35176  016EE2  0E00               	movlw	0
 35177  016EE4  6E3A               	movwf	i2___flge@ff2+2,c
 35178  016EE6  0E00               	movlw	0
 35179  016EE8  6E3B               	movwf	i2___flge@ff2+3,c
 35180  016EEA                     i2l1784:
 35181  016EEA  AE37               	btfss	i2___flge@ff1+3,7,c
 35182  016EEC  D01D               	goto	i2l1785
 35183  016EEE  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 35184  016EF2  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 35185  016EF6  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 35186  016EFA  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 35187  016EFE  1E3C               	comf	??i2___flge,f,c
 35188  016F00  1E3D               	comf	??i2___flge+1,f,c
 35189  016F02  1E3E               	comf	??i2___flge+2,f,c
 35190  016F04  1E3F               	comf	??i2___flge+3,f,c
 35191  016F06  2A3C               	incf	??i2___flge,f,c
 35192  016F08  0E00               	movlw	0
 35193  016F0A  223D               	addwfc	??i2___flge+1,f,c
 35194  016F0C  223E               	addwfc	??i2___flge+2,f,c
 35195  016F0E  223F               	addwfc	??i2___flge+3,f,c
 35196  016F10  0E00               	movlw	0
 35197  016F12  243C               	addwf	??i2___flge,w,c
 35198  016F14  6E34               	movwf	i2___flge@ff1,c
 35199  016F16  0E00               	movlw	0
 35200  016F18  203D               	addwfc	??i2___flge+1,w,c
 35201  016F1A  6E35               	movwf	i2___flge@ff1+1,c
 35202  016F1C  0E00               	movlw	0
 35203  016F1E  203E               	addwfc	??i2___flge+2,w,c
 35204  016F20  6E36               	movwf	i2___flge@ff1+2,c
 35205  016F22  0E80               	movlw	128
 35206  016F24  203F               	addwfc	??i2___flge+3,w,c
 35207  016F26  6E37               	movwf	i2___flge@ff1+3,c
 35208  016F28                     i2l1785:
 35209  016F28  AE3B               	btfss	i2___flge@ff2+3,7,c
 35210  016F2A  D01D               	goto	i2l1786
 35211  016F2C  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 35212  016F30  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 35213  016F34  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 35214  016F38  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 35215  016F3C  1E3C               	comf	??i2___flge,f,c
 35216  016F3E  1E3D               	comf	??i2___flge+1,f,c
 35217  016F40  1E3E               	comf	??i2___flge+2,f,c
 35218  016F42  1E3F               	comf	??i2___flge+3,f,c
 35219  016F44  2A3C               	incf	??i2___flge,f,c
 35220  016F46  0E00               	movlw	0
 35221  016F48  223D               	addwfc	??i2___flge+1,f,c
 35222  016F4A  223E               	addwfc	??i2___flge+2,f,c
 35223  016F4C  223F               	addwfc	??i2___flge+3,f,c
 35224  016F4E  0E00               	movlw	0
 35225  016F50  243C               	addwf	??i2___flge,w,c
 35226  016F52  6E38               	movwf	i2___flge@ff2,c
 35227  016F54  0E00               	movlw	0
 35228  016F56  203D               	addwfc	??i2___flge+1,w,c
 35229  016F58  6E39               	movwf	i2___flge@ff2+1,c
 35230  016F5A  0E00               	movlw	0
 35231  016F5C  203E               	addwfc	??i2___flge+2,w,c
 35232  016F5E  6E3A               	movwf	i2___flge@ff2+2,c
 35233  016F60  0E80               	movlw	128
 35234  016F62  203F               	addwfc	??i2___flge+3,w,c
 35235  016F64  6E3B               	movwf	i2___flge@ff2+3,c
 35236  016F66                     i2l1786:
 35237  016F66  0E00               	movlw	0
 35238  016F68  1A34               	xorwf	i2___flge@ff1,f,c
 35239  016F6A  0E00               	movlw	0
 35240  016F6C  1A35               	xorwf	i2___flge@ff1+1,f,c
 35241  016F6E  0E00               	movlw	0
 35242  016F70  1A36               	xorwf	i2___flge@ff1+2,f,c
 35243  016F72  0E80               	movlw	128
 35244  016F74  1A37               	xorwf	i2___flge@ff1+3,f,c
 35245  016F76  0E00               	movlw	0
 35246  016F78  1A38               	xorwf	i2___flge@ff2,f,c
 35247  016F7A  0E00               	movlw	0
 35248  016F7C  1A39               	xorwf	i2___flge@ff2+1,f,c
 35249  016F7E  0E00               	movlw	0
 35250  016F80  1A3A               	xorwf	i2___flge@ff2+2,f,c
 35251  016F82  0E80               	movlw	128
 35252  016F84  1A3B               	xorwf	i2___flge@ff2+3,f,c
 35253  016F86  5038               	movf	i2___flge@ff2,w,c
 35254  016F88  5C34               	subwf	i2___flge@ff1,w,c
 35255  016F8A  5039               	movf	i2___flge@ff2+1,w,c
 35256  016F8C  5835               	subwfb	i2___flge@ff1+1,w,c
 35257  016F8E  503A               	movf	i2___flge@ff2+2,w,c
 35258  016F90  5836               	subwfb	i2___flge@ff1+2,w,c
 35259  016F92  503B               	movf	i2___flge@ff2+3,w,c
 35260  016F94  5837               	subwfb	i2___flge@ff1+3,w,c
 35261  016F96  B0D8               	btfsc	status,0,c
 35262  016F98  D002               	goto	i2l10838
 35263  016F9A  90D8               	bcf	status,0,c
 35264  016F9C  0012               	return	
 35265  016F9E                     i2l10838:
 35266  016F9E  80D8               	bsf	status,0,c
 35267  016FA0  0012               	return	
 35268  016FA2                     __end_ofi2___flge:
 35269                           	opt stack 0
 35270                           tosu	equ	0xFFF
 35271                           tosh	equ	0xFFE
 35272                           tosl	equ	0xFFD
 35273                           pclatu	equ	0xFFB
 35274                           pclath	equ	0xFFA
 35275                           tblptru	equ	0xFF8
 35276                           tblptrh	equ	0xFF7
 35277                           tblptrl	equ	0xFF6
 35278                           tablat	equ	0xFF5
 35279                           prodh	equ	0xFF4
 35280                           prodl	equ	0xFF3
 35281                           intcon	equ	0xFF2
 35282                           indf0	equ	0xFEF
 35283                           postinc0	equ	0xFEE
 35284                           fsr0h	equ	0xFEA
 35285                           fsr0l	equ	0xFE9
 35286                           wreg	equ	0xFE8
 35287                           indf1	equ	0xFE7
 35288                           postdec1	equ	0xFE5
 35289                           plusw1	equ	0xFE3
 35290                           fsr1h	equ	0xFE2
 35291                           fsr1l	equ	0xFE1
 35292                           bsr	equ	0xFE0
 35293                           indf2	equ	0xFDF
 35294                           postinc2	equ	0xFDE
 35295                           postdec2	equ	0xFDD
 35296                           plusw2	equ	0xFDB
 35297                           fsr2h	equ	0xFDA
 35298                           fsr2l	equ	0xFD9
 35299                           status	equ	0xFD8
 35300                           
 35301 ;; *************** function _frexp *****************
 35302 ;; Defined at:
 35303 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 35304 ;; Parameters:    Size  Location     Type
 35305 ;;  value           4    0[COMRAM] long 
 35306 ;;  eptr            2    4[COMRAM] PTR int 
 35307 ;;		 -> floor@expon(2), 
 35308 ;; Auto vars:     Size  Location     Type
 35309 ;;		None
 35310 ;; Return value:  Size  Location     Type
 35311 ;;                  4    0[COMRAM] PTR int 
 35312 ;; Registers used:
 35313 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35314 ;; Tracked objects:
 35315 ;;		On entry : 0/0
 35316 ;;		On exit  : 0/0
 35317 ;;		Unchanged: 0/0
 35318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35319 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35322 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35323 ;;Total ram usage:        8 bytes
 35324 ;; Hardware stack levels used:    1
 35325 ;; This function calls:
 35326 ;;		Nothing
 35327 ;; This function is called by:
 35328 ;;		_floor
 35329 ;; This function uses a non-reentrant model
 35330 ;;
 35331                           
 35332                           	psect	text117
 35333  017B28                     __ptext117:
 35334                           	opt stack 0
 35335  017B28                     _frexp:
 35336                           	opt stack 13
 35337                           
 35338                           ;incstack = 0
 35339  017B28  5001               	movf	frexp@value,w,c
 35340  017B2A  1002               	iorwf	frexp@value+1,w,c
 35341  017B2C  1003               	iorwf	frexp@value+2,w,c
 35342  017B2E  1004               	iorwf	frexp@value+3,w,c
 35343  017B30  A4D8               	btfss	status,2,c
 35344  017B32  D009               	goto	i2l2276
 35345  017B34  C005  FFD9         	movff	frexp@eptr,fsr2l
 35346  017B38  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 35347  017B3C  0E00               	movlw	0
 35348  017B3E  6EDE               	movwf	postinc2,c
 35349  017B40  0E00               	movlw	0
 35350  017B42  6EDD               	movwf	postdec2,c
 35351                           
 35352                           ;	Return value of _frexp is never used
 35353  017B44  0012               	return	
 35354  017B46                     i2l2276:
 35355  017B46  5004               	movf	frexp@value+3,w,c
 35356  017B48  0B7F               	andlw	127
 35357  017B4A  6E07               	movwf	??_frexp& (0+255),c
 35358  017B4C  6A08               	clrf	(??_frexp+1)& (0+255),c
 35359  017B4E  90D8               	bcf	status,0,c
 35360  017B50  3607               	rlcf	??_frexp,f,c
 35361  017B52  3608               	rlcf	??_frexp+1,f,c
 35362  017B54  C005  FFD9         	movff	frexp@eptr,fsr2l
 35363  017B58  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 35364  017B5C  C007  FFDE         	movff	??_frexp,postinc2
 35365  017B60  C008  FFDD         	movff	??_frexp+1,postdec2
 35366  017B64  AE03               	btfss	frexp@value+2,7,c
 35367  017B66  D003               	goto	i2u1510_40
 35368  017B68  6A07               	clrf	??_frexp& (0+255),c
 35369  017B6A  2A07               	incf	??_frexp& (0+255),f,c
 35370  017B6C  D001               	goto	i2u1510_48
 35371  017B6E                     i2u1510_40:
 35372  017B6E  6A07               	clrf	??_frexp& (0+255),c
 35373  017B70                     i2u1510_48:
 35374  017B70  5007               	movf	??_frexp,w,c
 35375  017B72  C005  FFD9         	movff	frexp@eptr,fsr2l
 35376  017B76  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 35377  017B7A  12DE               	iorwf	postinc2,f,c
 35378  017B7C  0E00               	movlw	0
 35379  017B7E  12DD               	iorwf	postdec2,f,c
 35380  017B80  C005  FFD9         	movff	frexp@eptr,fsr2l
 35381  017B84  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 35382  017B88  0E82               	movlw	130
 35383  017B8A  26DE               	addwf	postinc2,f,c
 35384  017B8C  0EFF               	movlw	255
 35385  017B8E  22DD               	addwfc	postdec2,f,c
 35386  017B90  8004               	bsf	frexp@value+3,0,c
 35387  017B92  8204               	bsf	frexp@value+3,1,c
 35388  017B94  8404               	bsf	frexp@value+3,2,c
 35389  017B96  8604               	bsf	frexp@value+3,3,c
 35390  017B98  8804               	bsf	frexp@value+3,4,c
 35391  017B9A  8A04               	bsf	frexp@value+3,5,c
 35392  017B9C  9C04               	bcf	frexp@value+3,6,c
 35393  017B9E  9E03               	bcf	frexp@value+2,7,c
 35394  017BA0  0012               	return	
 35395  017BA2                     __end_of_frexp:
 35396                           	opt stack 0
 35397                           tosu	equ	0xFFF
 35398                           tosh	equ	0xFFE
 35399                           tosl	equ	0xFFD
 35400                           pclatu	equ	0xFFB
 35401                           pclath	equ	0xFFA
 35402                           tblptru	equ	0xFF8
 35403                           tblptrh	equ	0xFF7
 35404                           tblptrl	equ	0xFF6
 35405                           tablat	equ	0xFF5
 35406                           prodh	equ	0xFF4
 35407                           prodl	equ	0xFF3
 35408                           intcon	equ	0xFF2
 35409                           indf0	equ	0xFEF
 35410                           postinc0	equ	0xFEE
 35411                           fsr0h	equ	0xFEA
 35412                           fsr0l	equ	0xFE9
 35413                           wreg	equ	0xFE8
 35414                           indf1	equ	0xFE7
 35415                           postdec1	equ	0xFE5
 35416                           plusw1	equ	0xFE3
 35417                           fsr1h	equ	0xFE2
 35418                           fsr1l	equ	0xFE1
 35419                           bsr	equ	0xFE0
 35420                           indf2	equ	0xFDF
 35421                           postinc2	equ	0xFDE
 35422                           postdec2	equ	0xFDD
 35423                           plusw2	equ	0xFDB
 35424                           fsr2h	equ	0xFDA
 35425                           fsr2l	equ	0xFD9
 35426                           status	equ	0xFD8
 35427                           
 35428 ;; *************** function _eval_poly *****************
 35429 ;; Defined at:
 35430 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 35431 ;; Parameters:    Size  Location     Type
 35432 ;;  x               4   12[BANK0 ] PTR int 
 35433 ;;  d               2   16[BANK0 ] PTR const 
 35434 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 35435 ;;  n               2   18[BANK0 ] int 
 35436 ;; Auto vars:     Size  Location     Type
 35437 ;;  res             4   24[BANK0 ] int 
 35438 ;; Return value:  Size  Location     Type
 35439 ;;                  4   12[BANK0 ] int 
 35440 ;; Registers used:
 35441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35442 ;; Tracked objects:
 35443 ;;		On entry : 0/0
 35444 ;;		On exit  : 0/0
 35445 ;;		Unchanged: 0/0
 35446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35447 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35448 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35449 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35450 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35451 ;;Total ram usage:       16 bytes
 35452 ;; Hardware stack levels used:    1
 35453 ;; Hardware stack levels required when called:    1
 35454 ;; This function calls:
 35455 ;;		i2___fladd
 35456 ;;		i2___flmul
 35457 ;; This function is called by:
 35458 ;;		_atan
 35459 ;;		_sin
 35460 ;; This function uses a non-reentrant model
 35461 ;;
 35462                           
 35463                           	psect	text118
 35464  0170B4                     __ptext118:
 35465                           	opt stack 0
 35466  0170B4                     _eval_poly:
 35467                           	opt stack 13
 35468                           
 35469                           ;incstack = 0
 35470  0170B4  C072  F074         	movff	eval_poly@n,??_eval_poly
 35471  0170B8  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 35472  0170BC  0100               	movlb	0	; () banked
 35473  0170BE  90D8               	bcf	status,0,c
 35474  0170C0  3774               	rlcf	??_eval_poly& (0+255),f,b
 35475  0170C2  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 35476  0170C4  90D8               	bcf	status,0,c
 35477  0170C6  3774               	rlcf	??_eval_poly& (0+255),f,b
 35478  0170C8  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 35479  0170CA  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 35480  0170CE  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 35481  0170D2  5174               	movf	??_eval_poly& (0+255),w,b
 35482  0170D4  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 35483  0170D6  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 35484  0170D8  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 35485  0170DA  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 35486  0170DE  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 35487  0170E2                     	if	0	;tblptru may be non-zero
 35488  0170E2                     	endif
 35489  0170E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35490  0170E2  0E00               	movlw	low (__mediumconst shr (0+16))
 35491  0170E4  6EF8               	movwf	tblptru,c
 35492  0170E6                     	endif
 35493  0170E6  0009               	tblrd		*+
 35494  0170E8  CFF5 F078          	movff	tablat,eval_poly@res
 35495  0170EC  0009               	tblrd		*+
 35496  0170EE  CFF5 F079          	movff	tablat,eval_poly@res+1
 35497  0170F2  0009               	tblrd		*+
 35498  0170F4  CFF5 F07A          	movff	tablat,eval_poly@res+2
 35499  0170F8  000A               	tblrd		*-
 35500  0170FA  CFF5 F07B          	movff	tablat,eval_poly@res+3
 35501  0170FE  D04C               	goto	i2l1756
 35502  017100                     
 35503                           ; BSR set to: 0
 35504                           
 35505                           ; BSR set to: 0
 35506  017100  C078  F034         	movff	eval_poly@res,i2___flmul@a
 35507  017104  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 35508  017108  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 35509  01710C  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 35510  017110  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 35511  017114  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 35512  017118  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 35513  01711C  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 35514  017120  EC78  F0A1         	call	i2___flmul	;wreg free
 35515  017124  C030  F056         	movff	?i2___flmul,i2___fladd@b
 35516  017128  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 35517  01712C  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 35518  017130  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 35519  017134  0100               	movlb	0	; () banked
 35520  017136  0772               	decf	eval_poly@n& (0+255),f,b
 35521  017138  A0D8               	btfss	status,0,c
 35522  01713A  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 35523  01713C  C072  F074         	movff	eval_poly@n,??_eval_poly
 35524  017140  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 35525  017144  90D8               	bcf	status,0,c
 35526  017146  3774               	rlcf	??_eval_poly& (0+255),f,b
 35527  017148  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 35528  01714A  90D8               	bcf	status,0,c
 35529  01714C  3774               	rlcf	??_eval_poly& (0+255),f,b
 35530  01714E  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 35531  017150  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 35532  017154  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 35533  017158  5174               	movf	??_eval_poly& (0+255),w,b
 35534  01715A  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 35535  01715C  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 35536  01715E  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 35537  017160  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 35538  017164  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 35539  017168                     	if	0	;tblptru may be non-zero
 35540  017168                     	endif
 35541  017168                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35542  017168  0E00               	movlw	low (__mediumconst shr (0+16))
 35543  01716A  6EF8               	movwf	tblptru,c
 35544  01716C                     	endif
 35545  01716C  0009               	tblrd		*+
 35546  01716E  CFF5 F05A          	movff	tablat,i2___fladd@a
 35547  017172  0009               	tblrd		*+
 35548  017174  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 35549  017178  0009               	tblrd		*+
 35550  01717A  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 35551  01717E  000A               	tblrd		*-
 35552  017180  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 35553  017184  ECBF  F0A4         	call	i2___fladd	;wreg free
 35554  017188  C056  F078         	movff	?i2___fladd,eval_poly@res
 35555  01718C  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 35556  017190  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 35557  017194  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 35558  017198                     i2l1756:
 35559  017198  0100               	movlb	0	; () banked
 35560  01719A  5172               	movf	eval_poly@n& (0+255),w,b
 35561  01719C  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 35562  01719E  A4D8               	btfss	status,2,c
 35563  0171A0  D7AF               	goto	i2l1757
 35564                           
 35565                           ; BSR set to: 0
 35566  0171A2  C078  F06C         	movff	eval_poly@res,?_eval_poly
 35567  0171A6  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 35568  0171AA  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 35569  0171AE  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 35570                           
 35571                           ; BSR set to: 0
 35572  0171B2  0012               	return		;funcret
 35573  0171B4                     __end_of_eval_poly:
 35574                           	opt stack 0
 35575                           tosu	equ	0xFFF
 35576                           tosh	equ	0xFFE
 35577                           tosl	equ	0xFFD
 35578                           pclatu	equ	0xFFB
 35579                           pclath	equ	0xFFA
 35580                           tblptru	equ	0xFF8
 35581                           tblptrh	equ	0xFF7
 35582                           tblptrl	equ	0xFF6
 35583                           tablat	equ	0xFF5
 35584                           prodh	equ	0xFF4
 35585                           prodl	equ	0xFF3
 35586                           intcon	equ	0xFF2
 35587                           indf0	equ	0xFEF
 35588                           postinc0	equ	0xFEE
 35589                           fsr0h	equ	0xFEA
 35590                           fsr0l	equ	0xFE9
 35591                           wreg	equ	0xFE8
 35592                           indf1	equ	0xFE7
 35593                           postdec1	equ	0xFE5
 35594                           plusw1	equ	0xFE3
 35595                           fsr1h	equ	0xFE2
 35596                           fsr1l	equ	0xFE1
 35597                           bsr	equ	0xFE0
 35598                           indf2	equ	0xFDF
 35599                           postinc2	equ	0xFDE
 35600                           postdec2	equ	0xFDD
 35601                           plusw2	equ	0xFDB
 35602                           fsr2h	equ	0xFDA
 35603                           fsr2l	equ	0xFD9
 35604                           status	equ	0xFD8
 35605                           
 35606 ;; *************** function i2___flmul *****************
 35607 ;; Defined at:
 35608 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 35609 ;; Parameters:    Size  Location     Type
 35610 ;;  b               4   47[COMRAM] int 
 35611 ;;  a               4   51[COMRAM] int 
 35612 ;; Auto vars:     Size  Location     Type
 35613 ;;  __flmul         4   66[COMRAM] struct .
 35614 ;;  __flmul         4   61[COMRAM] unsigned long 
 35615 ;;  __flmul         2   70[COMRAM] struct .
 35616 ;;  __flmul         1   65[COMRAM] unsigned char 
 35617 ;;  __flmul         1   60[COMRAM] unsigned char 
 35618 ;;  __flmul         1   59[COMRAM] unsigned char 
 35619 ;; Return value:  Size  Location     Type
 35620 ;;                  4   47[COMRAM] unsigned char 
 35621 ;; Registers used:
 35622 ;;		wreg, status,2, status,0, prodl, prodh
 35623 ;; Tracked objects:
 35624 ;;		On entry : 0/0
 35625 ;;		On exit  : 0/0
 35626 ;;		Unchanged: 0/0
 35627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35628 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35629 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35631 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35632 ;;Total ram usage:       25 bytes
 35633 ;; Hardware stack levels used:    1
 35634 ;; This function calls:
 35635 ;;		Nothing
 35636 ;; This function is called by:
 35637 ;;		_peakToRMS
 35638 ;;		_ADCPostProcessingCallback
 35639 ;;		_asin
 35640 ;;		_atan
 35641 ;;		_eval_poly
 35642 ;;		_sin
 35643 ;;		i2_fround
 35644 ;;		i2_scale
 35645 ;;		i2_printf
 35646 ;; This function uses a non-reentrant model
 35647 ;;
 35648                           
 35649                           	psect	text119
 35650  0142F0                     __ptext119:
 35651                           	opt stack 0
 35652  0142F0                     i2___flmul:
 35653                           	opt stack 15
 35654                           
 35655                           ; BSR set to: 0
 35656                           ;incstack = 0
 35657  0142F0  5033               	movf	i2___flmul@b+3,w,c
 35658  0142F2  0B80               	andlw	128
 35659  0142F4  6E3C               	movwf	i2___flmul@sign,c
 35660  0142F6  5033               	movf	i2___flmul@b+3,w,c
 35661  0142F8  2433               	addwf	i2___flmul@b+3,w,c
 35662  0142FA  6E42               	movwf	i2___flmul@bexp,c
 35663  0142FC  BE32               	btfsc	i2___flmul@b+2,7,c
 35664  0142FE  8042               	bsf	i2___flmul@bexp,0,c
 35665  014300  5042               	movf	i2___flmul@bexp,w,c
 35666  014302  B4D8               	btfsc	status,2,c
 35667  014304  D00D               	goto	i2l2144
 35668  014306  2842               	incf	i2___flmul@bexp,w,c
 35669  014308  A4D8               	btfss	status,2,c
 35670  01430A  D008               	goto	i2l2145
 35671  01430C  0E00               	movlw	0
 35672  01430E  6E30               	movwf	i2___flmul@b,c
 35673  014310  0E00               	movlw	0
 35674  014312  6E31               	movwf	i2___flmul@b+1,c
 35675  014314  0E00               	movlw	0
 35676  014316  6E32               	movwf	i2___flmul@b+2,c
 35677  014318  0E00               	movlw	0
 35678  01431A  6E33               	movwf	i2___flmul@b+3,c
 35679  01431C                     i2l2145:
 35680  01431C  8E32               	bsf	i2___flmul@b+2,7,c
 35681  01431E  D008               	goto	i2l2146
 35682  014320                     i2l2144:
 35683  014320  0E00               	movlw	0
 35684  014322  6E30               	movwf	i2___flmul@b,c
 35685  014324  0E00               	movlw	0
 35686  014326  6E31               	movwf	i2___flmul@b+1,c
 35687  014328  0E00               	movlw	0
 35688  01432A  6E32               	movwf	i2___flmul@b+2,c
 35689  01432C  0E00               	movlw	0
 35690  01432E  6E33               	movwf	i2___flmul@b+3,c
 35691  014330                     i2l2146:
 35692  014330  5037               	movf	i2___flmul@a+3,w,c
 35693  014332  0B80               	andlw	128
 35694  014334  1A3C               	xorwf	i2___flmul@sign,f,c
 35695  014336  5037               	movf	i2___flmul@a+3,w,c
 35696  014338  2437               	addwf	i2___flmul@a+3,w,c
 35697  01433A  6E3D               	movwf	i2___flmul@aexp,c
 35698  01433C  BE36               	btfsc	i2___flmul@a+2,7,c
 35699  01433E  803D               	bsf	i2___flmul@aexp,0,c
 35700  014340  503D               	movf	i2___flmul@aexp,w,c
 35701  014342  B4D8               	btfsc	status,2,c
 35702  014344  D00D               	goto	i2l2148
 35703  014346  283D               	incf	i2___flmul@aexp,w,c
 35704  014348  A4D8               	btfss	status,2,c
 35705  01434A  D008               	goto	i2l2149
 35706  01434C  0E00               	movlw	0
 35707  01434E  6E34               	movwf	i2___flmul@a,c
 35708  014350  0E00               	movlw	0
 35709  014352  6E35               	movwf	i2___flmul@a+1,c
 35710  014354  0E00               	movlw	0
 35711  014356  6E36               	movwf	i2___flmul@a+2,c
 35712  014358  0E00               	movlw	0
 35713  01435A  6E37               	movwf	i2___flmul@a+3,c
 35714  01435C                     i2l2149:
 35715  01435C  8E36               	bsf	i2___flmul@a+2,7,c
 35716  01435E  D008               	goto	i2l2150
 35717  014360                     i2l2148:
 35718  014360  0E00               	movlw	0
 35719  014362  6E34               	movwf	i2___flmul@a,c
 35720  014364  0E00               	movlw	0
 35721  014366  6E35               	movwf	i2___flmul@a+1,c
 35722  014368  0E00               	movlw	0
 35723  01436A  6E36               	movwf	i2___flmul@a+2,c
 35724  01436C  0E00               	movlw	0
 35725  01436E  6E37               	movwf	i2___flmul@a+3,c
 35726  014370                     i2l2150:
 35727  014370  503D               	movf	i2___flmul@aexp,w,c
 35728  014372  B4D8               	btfsc	status,2,c
 35729  014374  D003               	goto	i2u1323_40
 35730  014376  5042               	movf	i2___flmul@bexp,w,c
 35731  014378  A4D8               	btfss	status,2,c
 35732  01437A  D009               	goto	i2l2151
 35733  01437C                     i2u1323_40:
 35734  01437C  0E00               	movlw	0
 35735  01437E  6E30               	movwf	?i2___flmul,c
 35736  014380  0E00               	movlw	0
 35737  014382  6E31               	movwf	?i2___flmul+1,c
 35738  014384  0E00               	movlw	0
 35739  014386  6E32               	movwf	?i2___flmul+2,c
 35740  014388  0E00               	movlw	0
 35741  01438A  6E33               	movwf	?i2___flmul+3,c
 35742  01438C  0012               	return	
 35743  01438E                     i2l2151:
 35744  01438E  5036               	movf	i2___flmul@a+2,w,c
 35745  014390  0230               	mulwf	i2___flmul@b,c
 35746  014392  CFF3 F047          	movff	prodl,i2___flmul@temp
 35747  014396  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 35748  01439A  5047               	movf	i2___flmul@temp,w,c
 35749  01439C  6E3E               	movwf	i2___flmul@grs,c
 35750  01439E  6A3F               	clrf	i2___flmul@grs+1,c
 35751  0143A0  6A40               	clrf	i2___flmul@grs+2,c
 35752  0143A2  6A41               	clrf	i2___flmul@grs+3,c
 35753  0143A4  5048               	movf	i2___flmul@temp+1,w,c
 35754  0143A6  6E43               	movwf	i2___flmul@prod,c
 35755  0143A8  6A44               	clrf	i2___flmul@prod+1,c
 35756  0143AA  6A45               	clrf	i2___flmul@prod+2,c
 35757  0143AC  6A46               	clrf	i2___flmul@prod+3,c
 35758  0143AE  5035               	movf	i2___flmul@a+1,w,c
 35759  0143B0  0231               	mulwf	i2___flmul@b+1,c
 35760  0143B2  CFF3 F047          	movff	prodl,i2___flmul@temp
 35761  0143B6  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 35762  0143BA  5047               	movf	i2___flmul@temp,w,c
 35763  0143BC  263E               	addwf	i2___flmul@grs,f,c
 35764  0143BE  0E00               	movlw	0
 35765  0143C0  223F               	addwfc	i2___flmul@grs+1,f,c
 35766  0143C2  2240               	addwfc	i2___flmul@grs+2,f,c
 35767  0143C4  2241               	addwfc	i2___flmul@grs+3,f,c
 35768  0143C6  5048               	movf	i2___flmul@temp+1,w,c
 35769  0143C8  2643               	addwf	i2___flmul@prod,f,c
 35770  0143CA  0E00               	movlw	0
 35771  0143CC  2244               	addwfc	i2___flmul@prod+1,f,c
 35772  0143CE  2245               	addwfc	i2___flmul@prod+2,f,c
 35773  0143D0  2246               	addwfc	i2___flmul@prod+3,f,c
 35774  0143D2  5034               	movf	i2___flmul@a,w,c
 35775  0143D4  0232               	mulwf	i2___flmul@b+2,c
 35776  0143D6  CFF3 F047          	movff	prodl,i2___flmul@temp
 35777  0143DA  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 35778  0143DE  5047               	movf	i2___flmul@temp,w,c
 35779  0143E0  263E               	addwf	i2___flmul@grs,f,c
 35780  0143E2  0E00               	movlw	0
 35781  0143E4  223F               	addwfc	i2___flmul@grs+1,f,c
 35782  0143E6  2240               	addwfc	i2___flmul@grs+2,f,c
 35783  0143E8  2241               	addwfc	i2___flmul@grs+3,f,c
 35784  0143EA  5048               	movf	i2___flmul@temp+1,w,c
 35785  0143EC  2643               	addwf	i2___flmul@prod,f,c
 35786  0143EE  0E00               	movlw	0
 35787  0143F0  2244               	addwfc	i2___flmul@prod+1,f,c
 35788  0143F2  2245               	addwfc	i2___flmul@prod+2,f,c
 35789  0143F4  2246               	addwfc	i2___flmul@prod+3,f,c
 35790  0143F6  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 35791  0143FA  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 35792  0143FE  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 35793  014402  6A3E               	clrf	i2___flmul@grs,c
 35794  014404  5034               	movf	i2___flmul@a,w,c
 35795  014406  0231               	mulwf	i2___flmul@b+1,c
 35796  014408  CFF3 F047          	movff	prodl,i2___flmul@temp
 35797  01440C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 35798  014410  5047               	movf	i2___flmul@temp,w,c
 35799  014412  263E               	addwf	i2___flmul@grs,f,c
 35800  014414  5048               	movf	i2___flmul@temp+1,w,c
 35801  014416  223F               	addwfc	i2___flmul@grs+1,f,c
 35802  014418  0E00               	movlw	0
 35803  01441A  2240               	addwfc	i2___flmul@grs+2,f,c
 35804  01441C  0E00               	movlw	0
 35805  01441E  2241               	addwfc	i2___flmul@grs+3,f,c
 35806  014420  5035               	movf	i2___flmul@a+1,w,c
 35807  014422  0230               	mulwf	i2___flmul@b,c
 35808  014424  CFF3 F047          	movff	prodl,i2___flmul@temp
 35809  014428  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 35810  01442C  5047               	movf	i2___flmul@temp,w,c
 35811  01442E  263E               	addwf	i2___flmul@grs,f,c
 35812  014430  5048               	movf	i2___flmul@temp+1,w,c
 35813  014432  223F               	addwfc	i2___flmul@grs+1,f,c
 35814  014434  0E00               	movlw	0
 35815  014436  2240               	addwfc	i2___flmul@grs+2,f,c
 35816  014438  0E00               	movlw	0
 35817  01443A  2241               	addwfc	i2___flmul@grs+3,f,c
 35818  01443C  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 35819  014440  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 35820  014444  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 35821  014448  6A3E               	clrf	i2___flmul@grs,c
 35822  01444A  5034               	movf	i2___flmul@a,w,c
 35823  01444C  0230               	mulwf	i2___flmul@b,c
 35824  01444E  CFF3 F047          	movff	prodl,i2___flmul@temp
 35825  014452  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 35826  014456  5047               	movf	i2___flmul@temp,w,c
 35827  014458  263E               	addwf	i2___flmul@grs,f,c
 35828  01445A  5048               	movf	i2___flmul@temp+1,w,c
 35829  01445C  223F               	addwfc	i2___flmul@grs+1,f,c
 35830  01445E  0E00               	movlw	0
 35831  014460  2240               	addwfc	i2___flmul@grs+2,f,c
 35832  014462  0E00               	movlw	0
 35833  014464  2241               	addwfc	i2___flmul@grs+3,f,c
 35834  014466  5036               	movf	i2___flmul@a+2,w,c
 35835  014468  0231               	mulwf	i2___flmul@b+1,c
 35836  01446A  CFF3 F047          	movff	prodl,i2___flmul@temp
 35837  01446E  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 35838  014472  5047               	movf	i2___flmul@temp,w,c
 35839  014474  2643               	addwf	i2___flmul@prod,f,c
 35840  014476  5048               	movf	i2___flmul@temp+1,w,c
 35841  014478  2244               	addwfc	i2___flmul@prod+1,f,c
 35842  01447A  0E00               	movlw	0
 35843  01447C  2245               	addwfc	i2___flmul@prod+2,f,c
 35844  01447E  0E00               	movlw	0
 35845  014480  2246               	addwfc	i2___flmul@prod+3,f,c
 35846  014482  5035               	movf	i2___flmul@a+1,w,c
 35847  014484  0232               	mulwf	i2___flmul@b+2,c
 35848  014486  CFF3 F047          	movff	prodl,i2___flmul@temp
 35849  01448A  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 35850  01448E  5047               	movf	i2___flmul@temp,w,c
 35851  014490  2643               	addwf	i2___flmul@prod,f,c
 35852  014492  5048               	movf	i2___flmul@temp+1,w,c
 35853  014494  2244               	addwfc	i2___flmul@prod+1,f,c
 35854  014496  0E00               	movlw	0
 35855  014498  2245               	addwfc	i2___flmul@prod+2,f,c
 35856  01449A  0E00               	movlw	0
 35857  01449C  2246               	addwfc	i2___flmul@prod+3,f,c
 35858  01449E  5036               	movf	i2___flmul@a+2,w,c
 35859  0144A0  0232               	mulwf	i2___flmul@b+2,c
 35860  0144A2  CFF3 F047          	movff	prodl,i2___flmul@temp
 35861  0144A6  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 35862  0144AA  5047               	movf	i2___flmul@temp,w,c
 35863  0144AC  6E38               	movwf	??i2___flmul& (0+255),c
 35864  0144AE  5048               	movf	i2___flmul@temp+1,w,c
 35865  0144B0  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 35866  0144B2  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 35867  0144B4  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 35868  0144B6  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 35869  0144BA  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 35870  0144BE  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 35871  0144C2  6A38               	clrf	??i2___flmul,c
 35872  0144C4  5038               	movf	??i2___flmul,w,c
 35873  0144C6  2643               	addwf	i2___flmul@prod,f,c
 35874  0144C8  5039               	movf	??i2___flmul+1,w,c
 35875  0144CA  2244               	addwfc	i2___flmul@prod+1,f,c
 35876  0144CC  503A               	movf	??i2___flmul+2,w,c
 35877  0144CE  2245               	addwfc	i2___flmul@prod+2,f,c
 35878  0144D0  503B               	movf	??i2___flmul+3,w,c
 35879  0144D2  2246               	addwfc	i2___flmul@prod+3,f,c
 35880  0144D4  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 35881  0144D8  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 35882  0144DC  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 35883  0144E0  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 35884  0144E4  0E19               	movlw	25
 35885  0144E6  D005               	goto	i2u1324_40
 35886  0144E8                     i2u1324_45:
 35887  0144E8  90D8               	bcf	status,0,c
 35888  0144EA  323B               	rrcf	??i2___flmul+3,f,c
 35889  0144EC  323A               	rrcf	??i2___flmul+2,f,c
 35890  0144EE  3239               	rrcf	??i2___flmul+1,f,c
 35891  0144F0  3238               	rrcf	??i2___flmul,f,c
 35892  0144F2                     i2u1324_40:
 35893  0144F2  2EE8               	decfsz	wreg,f,c
 35894  0144F4  D7F9               	goto	i2u1324_45
 35895  0144F6  5038               	movf	??i2___flmul,w,c
 35896  0144F8  2643               	addwf	i2___flmul@prod,f,c
 35897  0144FA  5039               	movf	??i2___flmul+1,w,c
 35898  0144FC  2244               	addwfc	i2___flmul@prod+1,f,c
 35899  0144FE  503A               	movf	??i2___flmul+2,w,c
 35900  014500  2245               	addwfc	i2___flmul@prod+2,f,c
 35901  014502  503B               	movf	??i2___flmul+3,w,c
 35902  014504  2246               	addwfc	i2___flmul@prod+3,f,c
 35903  014506  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 35904  01450A  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 35905  01450E  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 35906  014512  6A3E               	clrf	i2___flmul@grs,c
 35907  014514  503D               	movf	i2___flmul@aexp,w,c
 35908  014516  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 35909  01451A  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 35910  01451C  2638               	addwf	??i2___flmul,f,c
 35911  01451E  0E00               	movlw	0
 35912  014520  2239               	addwfc	??i2___flmul+1,f,c
 35913  014522  0E82               	movlw	130
 35914  014524  2438               	addwf	??i2___flmul,w,c
 35915  014526  6E47               	movwf	i2___flmul@temp,c
 35916  014528  0EFF               	movlw	255
 35917  01452A  2039               	addwfc	??i2___flmul+1,w,c
 35918  01452C  6E48               	movwf	i2___flmul@temp+1,c
 35919  01452E  D00F               	goto	i2l2155
 35920  014530  90D8               	bcf	status,0,c
 35921  014532  3643               	rlcf	i2___flmul@prod,f,c
 35922  014534  3644               	rlcf	i2___flmul@prod+1,f,c
 35923  014536  3645               	rlcf	i2___flmul@prod+2,f,c
 35924  014538  3646               	rlcf	i2___flmul@prod+3,f,c
 35925  01453A  BE41               	btfsc	i2___flmul@grs+3,7,c
 35926  01453C  8043               	bsf	i2___flmul@prod,0,c
 35927  01453E  90D8               	bcf	status,0,c
 35928  014540  363E               	rlcf	i2___flmul@grs,f,c
 35929  014542  363F               	rlcf	i2___flmul@grs+1,f,c
 35930  014544  3640               	rlcf	i2___flmul@grs+2,f,c
 35931  014546  3641               	rlcf	i2___flmul@grs+3,f,c
 35932  014548  0647               	decf	i2___flmul@temp,f,c
 35933  01454A  A0D8               	btfss	status,0,c
 35934  01454C  0648               	decf	i2___flmul@temp+1,f,c
 35935  01454E                     i2l2155:
 35936  01454E  AE45               	btfss	i2___flmul@prod+2,7,c
 35937  014550  D7EF               	goto	i2l2156
 35938  014552  0E00               	movlw	0
 35939  014554  6E3D               	movwf	i2___flmul@aexp,c
 35940  014556  AE41               	btfss	i2___flmul@grs+3,7,c
 35941  014558  D016               	goto	i2l2162
 35942  01455A  0EFF               	movlw	255
 35943  01455C  143E               	andwf	i2___flmul@grs,w,c
 35944  01455E  6E38               	movwf	??i2___flmul& (0+255),c
 35945  014560  0EFF               	movlw	255
 35946  014562  143F               	andwf	i2___flmul@grs+1,w,c
 35947  014564  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 35948  014566  0EFF               	movlw	255
 35949  014568  1440               	andwf	i2___flmul@grs+2,w,c
 35950  01456A  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 35951  01456C  0E7F               	movlw	127
 35952  01456E  1441               	andwf	i2___flmul@grs+3,w,c
 35953  014570  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 35954  014572  5038               	movf	??i2___flmul,w,c
 35955  014574  1039               	iorwf	??i2___flmul+1,w,c
 35956  014576  103A               	iorwf	??i2___flmul+2,w,c
 35957  014578  103B               	iorwf	??i2___flmul+3,w,c
 35958  01457A  A4D8               	btfss	status,2,c
 35959  01457C  D002               	goto	i2u1329_40
 35960  01457E  A043               	btfss	i2___flmul@prod,0,c
 35961  014580  D002               	goto	i2l2162
 35962  014582                     i2u1329_40:
 35963  014582  0E01               	movlw	1
 35964  014584  6E3D               	movwf	i2___flmul@aexp,c
 35965  014586                     i2l2162:
 35966  014586  503D               	movf	i2___flmul@aexp,w,c
 35967  014588  B4D8               	btfsc	status,2,c
 35968  01458A  D01F               	goto	i2l2164
 35969  01458C  0E01               	movlw	1
 35970  01458E  2643               	addwf	i2___flmul@prod,f,c
 35971  014590  0E00               	movlw	0
 35972  014592  2244               	addwfc	i2___flmul@prod+1,f,c
 35973  014594  2245               	addwfc	i2___flmul@prod+2,f,c
 35974  014596  2246               	addwfc	i2___flmul@prod+3,f,c
 35975  014598  A046               	btfss	i2___flmul@prod+3,0,c
 35976  01459A  D017               	goto	i2l2164
 35977  01459C  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 35978  0145A0  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 35979  0145A4  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 35980  0145A8  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 35981  0145AC  343B               	rlcf	??i2___flmul+3,w,c
 35982  0145AE  323B               	rrcf	??i2___flmul+3,f,c
 35983  0145B0  323A               	rrcf	??i2___flmul+2,f,c
 35984  0145B2  3239               	rrcf	??i2___flmul+1,f,c
 35985  0145B4  3238               	rrcf	??i2___flmul,f,c
 35986  0145B6  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 35987  0145BA  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 35988  0145BE  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 35989  0145C2  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 35990  0145C6  4A47               	infsnz	i2___flmul@temp,f,c
 35991  0145C8  2A48               	incf	i2___flmul@temp+1,f,c
 35992  0145CA                     i2l2164:
 35993  0145CA  BE48               	btfsc	i2___flmul@temp+1,7,c
 35994  0145CC  D00D               	goto	i2l2165
 35995  0145CE  5048               	movf	i2___flmul@temp+1,w,c
 35996  0145D0  E103               	bnz	i2u1332_40
 35997  0145D2  2847               	incf	i2___flmul@temp,w,c
 35998  0145D4  A0D8               	btfss	status,0,c
 35999  0145D6  D008               	goto	i2l2165
 36000  0145D8                     i2u1332_40:
 36001  0145D8  0E00               	movlw	0
 36002  0145DA  6E43               	movwf	i2___flmul@prod,c
 36003  0145DC  0E00               	movlw	0
 36004  0145DE  6E44               	movwf	i2___flmul@prod+1,c
 36005  0145E0  0E80               	movlw	128
 36006  0145E2  6E45               	movwf	i2___flmul@prod+2,c
 36007  0145E4  0E7F               	movlw	127
 36008  0145E6  D020               	goto	L20
 36009  0145E8                     i2l2165:
 36010  0145E8  BE48               	btfsc	i2___flmul@temp+1,7,c
 36011  0145EA  D005               	goto	i2u1333_40
 36012  0145EC  5048               	movf	i2___flmul@temp+1,w,c
 36013  0145EE  E10E               	bnz	i2l2167
 36014  0145F0  0447               	decf	i2___flmul@temp,w,c
 36015  0145F2  B0D8               	btfsc	status,0,c
 36016  0145F4  D00B               	goto	i2l2167
 36017  0145F6                     i2u1333_40:
 36018  0145F6  0E00               	movlw	0
 36019  0145F8  6E43               	movwf	i2___flmul@prod,c
 36020  0145FA  0E00               	movlw	0
 36021  0145FC  6E44               	movwf	i2___flmul@prod+1,c
 36022  0145FE  0E00               	movlw	0
 36023  014600  6E45               	movwf	i2___flmul@prod+2,c
 36024  014602  0E00               	movlw	0
 36025  014604  6E46               	movwf	i2___flmul@prod+3,c
 36026  014606  0E00               	movlw	0
 36027  014608  6E3C               	movwf	i2___flmul@sign,c
 36028  01460A  D00F               	goto	i2l2168
 36029  01460C                     i2l2167:
 36030  01460C  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 36031  014610  0EFF               	movlw	255
 36032  014612  1643               	andwf	i2___flmul@prod,f,c
 36033  014614  0EFF               	movlw	255
 36034  014616  1644               	andwf	i2___flmul@prod+1,f,c
 36035  014618  0E7F               	movlw	127
 36036  01461A  1645               	andwf	i2___flmul@prod+2,f,c
 36037  01461C  0E00               	movlw	0
 36038  01461E  1646               	andwf	i2___flmul@prod+3,f,c
 36039  014620  B042               	btfsc	i2___flmul@bexp,0,c
 36040  014622  8E45               	bsf	i2___flmul@prod+2,7,c
 36041  014624  90D8               	bcf	status,0,c
 36042  014626  3042               	rrcf	i2___flmul@bexp,w,c
 36043  014628                     L20:
 36044  014628  6E46               	movwf	i2___flmul@prod+3,c
 36045  01462A                     i2l2168:
 36046  01462A  503C               	movf	i2___flmul@sign,w,c
 36047  01462C  1246               	iorwf	i2___flmul@prod+3,f,c
 36048  01462E  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 36049  014632  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 36050  014636  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 36051  01463A  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 36052  01463E  0012               	return	
 36053  014640                     __end_ofi2___flmul:
 36054                           	opt stack 0
 36055                           tosu	equ	0xFFF
 36056                           tosh	equ	0xFFE
 36057                           tosl	equ	0xFFD
 36058                           pclatu	equ	0xFFB
 36059                           pclath	equ	0xFFA
 36060                           tblptru	equ	0xFF8
 36061                           tblptrh	equ	0xFF7
 36062                           tblptrl	equ	0xFF6
 36063                           tablat	equ	0xFF5
 36064                           prodh	equ	0xFF4
 36065                           prodl	equ	0xFF3
 36066                           intcon	equ	0xFF2
 36067                           indf0	equ	0xFEF
 36068                           postinc0	equ	0xFEE
 36069                           fsr0h	equ	0xFEA
 36070                           fsr0l	equ	0xFE9
 36071                           wreg	equ	0xFE8
 36072                           indf1	equ	0xFE7
 36073                           postdec1	equ	0xFE5
 36074                           plusw1	equ	0xFE3
 36075                           fsr1h	equ	0xFE2
 36076                           fsr1l	equ	0xFE1
 36077                           bsr	equ	0xFE0
 36078                           indf2	equ	0xFDF
 36079                           postinc2	equ	0xFDE
 36080                           postdec2	equ	0xFDD
 36081                           plusw2	equ	0xFDB
 36082                           fsr2h	equ	0xFDA
 36083                           fsr2l	equ	0xFD9
 36084                           status	equ	0xFD8
 36085                           
 36086 ;; *************** function i2___fladd *****************
 36087 ;; Defined at:
 36088 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 36089 ;; Parameters:    Size  Location     Type
 36090 ;;  b               4   85[COMRAM] unsigned char 
 36091 ;;  a               4   89[COMRAM] unsigned char 
 36092 ;; Auto vars:     Size  Location     Type
 36093 ;;  __fladd         1   11[BANK0 ] unsigned char 
 36094 ;;  __fladd         1   10[BANK0 ] unsigned char 
 36095 ;;  __fladd         1    9[BANK0 ] unsigned char 
 36096 ;;  __fladd         1    8[BANK0 ] unsigned char 
 36097 ;; Return value:  Size  Location     Type
 36098 ;;                  4   85[COMRAM] unsigned char 
 36099 ;; Registers used:
 36100 ;;		wreg, status,2, status,0
 36101 ;; Tracked objects:
 36102 ;;		On entry : 0/0
 36103 ;;		On exit  : 0/0
 36104 ;;		Unchanged: 0/0
 36105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36106 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36107 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36108 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36109 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36110 ;;Total ram usage:       20 bytes
 36111 ;; Hardware stack levels used:    1
 36112 ;; This function calls:
 36113 ;;		Nothing
 36114 ;; This function is called by:
 36115 ;;		_peakToRMS
 36116 ;;		_ADCPostProcessingCallback
 36117 ;;		_acos
 36118 ;;		_asin
 36119 ;;		_atan
 36120 ;;		_eval_poly
 36121 ;;		_sin
 36122 ;;		_floor
 36123 ;;		i2_printf
 36124 ;;		i2___flsub
 36125 ;; This function uses a non-reentrant model
 36126 ;;
 36127                           
 36128                           	psect	text120
 36129  01497E                     __ptext120:
 36130                           	opt stack 0
 36131  01497E                     i2___fladd:
 36132                           	opt stack 15
 36133                           
 36134                           ;incstack = 0
 36135  01497E  5059               	movf	i2___fladd@b+3,w,c
 36136  014980  0B80               	andlw	128
 36137  014982  0100               	movlb	0	; () banked
 36138  014984  6F68               	movwf	i2___fladd@signs& (0+255),b
 36139  014986  5059               	movf	i2___fladd@b+3,w,c
 36140  014988  2459               	addwf	i2___fladd@b+3,w,c
 36141  01498A  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 36142                           
 36143                           ; BSR set to: 0
 36144  01498C  BE58               	btfsc	i2___fladd@b+2,7,c
 36145                           
 36146                           ; BSR set to: 0
 36147  01498E  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 36148                           
 36149                           ; BSR set to: 0
 36150                           
 36151                           ; BSR set to: 0
 36152  014990  516A               	movf	i2___fladd@bexp& (0+255),w,b
 36153  014992  B4D8               	btfsc	status,2,c
 36154  014994  D00D               	goto	i2l2053
 36155                           
 36156                           ; BSR set to: 0
 36157  014996  296A               	incf	i2___fladd@bexp& (0+255),w,b
 36158  014998  A4D8               	btfss	status,2,c
 36159  01499A  D008               	goto	i2l2054
 36160                           
 36161                           ; BSR set to: 0
 36162  01499C  0E00               	movlw	0
 36163  01499E  6E56               	movwf	i2___fladd@b,c
 36164  0149A0  0E00               	movlw	0
 36165  0149A2  6E57               	movwf	i2___fladd@b+1,c
 36166  0149A4  0E00               	movlw	0
 36167  0149A6  6E58               	movwf	i2___fladd@b+2,c
 36168  0149A8  0E00               	movlw	0
 36169  0149AA  6E59               	movwf	i2___fladd@b+3,c
 36170  0149AC                     i2l2054:
 36171                           
 36172                           ; BSR set to: 0
 36173                           
 36174                           ; BSR set to: 0
 36175  0149AC  8E58               	bsf	i2___fladd@b+2,7,c
 36176  0149AE  D006               	goto	L21
 36177  0149B0                     i2l2053:
 36178                           
 36179                           ; BSR set to: 0
 36180                           
 36181                           ; BSR set to: 0
 36182  0149B0  0E00               	movlw	0
 36183  0149B2  6E56               	movwf	i2___fladd@b,c
 36184  0149B4  0E00               	movlw	0
 36185  0149B6  6E57               	movwf	i2___fladd@b+1,c
 36186  0149B8  0E00               	movlw	0
 36187  0149BA  6E58               	movwf	i2___fladd@b+2,c
 36188  0149BC                     L21:
 36189  0149BC  0E00               	movlw	0
 36190  0149BE  6E59               	movwf	i2___fladd@b+3,c
 36191                           
 36192                           ; BSR set to: 0
 36193                           
 36194                           ; BSR set to: 0
 36195  0149C0  505D               	movf	i2___fladd@a+3,w,c
 36196  0149C2  0B80               	andlw	128
 36197  0149C4  6F69               	movwf	i2___fladd@aexp& (0+255),b
 36198                           
 36199                           ; BSR set to: 0
 36200  0149C6  5168               	movf	i2___fladd@signs& (0+255),w,b
 36201  0149C8  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 36202  0149CA  A4D8               	btfss	status,2,c
 36203                           
 36204                           ; BSR set to: 0
 36205  0149CC  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 36206                           
 36207                           ; BSR set to: 0
 36208                           
 36209                           ; BSR set to: 0
 36210  0149CE  505D               	movf	i2___fladd@a+3,w,c
 36211  0149D0  245D               	addwf	i2___fladd@a+3,w,c
 36212  0149D2  6F69               	movwf	i2___fladd@aexp& (0+255),b
 36213                           
 36214                           ; BSR set to: 0
 36215  0149D4  BE5C               	btfsc	i2___fladd@a+2,7,c
 36216                           
 36217                           ; BSR set to: 0
 36218  0149D6  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 36219                           
 36220                           ; BSR set to: 0
 36221                           
 36222                           ; BSR set to: 0
 36223  0149D8  5169               	movf	i2___fladd@aexp& (0+255),w,b
 36224  0149DA  B4D8               	btfsc	status,2,c
 36225  0149DC  D00D               	goto	i2l2058
 36226                           
 36227                           ; BSR set to: 0
 36228  0149DE  2969               	incf	i2___fladd@aexp& (0+255),w,b
 36229  0149E0  A4D8               	btfss	status,2,c
 36230  0149E2  D008               	goto	i2l2059
 36231                           
 36232                           ; BSR set to: 0
 36233  0149E4  0E00               	movlw	0
 36234  0149E6  6E5A               	movwf	i2___fladd@a,c
 36235  0149E8  0E00               	movlw	0
 36236  0149EA  6E5B               	movwf	i2___fladd@a+1,c
 36237  0149EC  0E00               	movlw	0
 36238  0149EE  6E5C               	movwf	i2___fladd@a+2,c
 36239  0149F0  0E00               	movlw	0
 36240  0149F2  6E5D               	movwf	i2___fladd@a+3,c
 36241  0149F4                     i2l2059:
 36242                           
 36243                           ; BSR set to: 0
 36244                           
 36245                           ; BSR set to: 0
 36246  0149F4  8E5C               	bsf	i2___fladd@a+2,7,c
 36247  0149F6  D006               	goto	L22
 36248  0149F8                     i2l2058:
 36249                           
 36250                           ; BSR set to: 0
 36251                           
 36252                           ; BSR set to: 0
 36253  0149F8  0E00               	movlw	0
 36254  0149FA  6E5A               	movwf	i2___fladd@a,c
 36255  0149FC  0E00               	movlw	0
 36256  0149FE  6E5B               	movwf	i2___fladd@a+1,c
 36257  014A00  0E00               	movlw	0
 36258  014A02  6E5C               	movwf	i2___fladd@a+2,c
 36259  014A04                     L22:
 36260  014A04  0E00               	movlw	0
 36261  014A06  6E5D               	movwf	i2___fladd@a+3,c
 36262                           
 36263                           ; BSR set to: 0
 36264                           
 36265                           ; BSR set to: 0
 36266  014A08  516A               	movf	i2___fladd@bexp& (0+255),w,b
 36267  014A0A  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 36268  014A0C  B0D8               	btfsc	status,0,c
 36269  014A0E  D022               	goto	i2l2061
 36270                           
 36271                           ; BSR set to: 0
 36272  014A10  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 36273  014A12  D002               	goto	i2l2062
 36274                           
 36275                           ; BSR set to: 0
 36276  014A14  0E80               	movlw	128
 36277  014A16  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 36278  014A18                     i2l2062:
 36279                           
 36280                           ; BSR set to: 0
 36281                           
 36282                           ; BSR set to: 0
 36283  014A18  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 36284                           
 36285                           ; BSR set to: 0
 36286  014A1C  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 36287                           
 36288                           ; BSR set to: 0
 36289  014A20  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 36290                           
 36291                           ; BSR set to: 0
 36292  014A24  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 36293                           
 36294                           ; BSR set to: 0
 36295  014A28  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 36296                           
 36297                           ; BSR set to: 0
 36298  014A2C  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 36299                           
 36300                           ; BSR set to: 0
 36301  014A30  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 36302                           
 36303                           ; BSR set to: 0
 36304  014A34  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 36305                           
 36306                           ; BSR set to: 0
 36307  014A38  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 36308                           
 36309                           ; BSR set to: 0
 36310  014A3C  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 36311                           
 36312                           ; BSR set to: 0
 36313  014A40  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 36314                           
 36315                           ; BSR set to: 0
 36316  014A44  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 36317                           
 36318                           ; BSR set to: 0
 36319  014A48  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 36320                           
 36321                           ; BSR set to: 0
 36322  014A4C  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 36323                           
 36324                           ; BSR set to: 0
 36325  014A50  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 36326  014A54                     i2l2061:
 36327                           
 36328                           ; BSR set to: 0
 36329                           
 36330                           ; BSR set to: 0
 36331  014A54  0E00               	movlw	0
 36332  014A56  6F6B               	movwf	i2___fladd@grs& (0+255),b
 36333                           
 36334                           ; BSR set to: 0
 36335  014A58  516A               	movf	i2___fladd@bexp& (0+255),w,b
 36336  014A5A  6F60               	movwf	??i2___fladd& (0+255),b
 36337  014A5C  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 36338  014A5E  1F60               	comf	??i2___fladd& (0+255),f,b
 36339  014A60  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 36340  014A62  4B60               	infsnz	??i2___fladd& (0+255),f,b
 36341  014A64  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 36342  014A66  5169               	movf	i2___fladd@aexp& (0+255),w,b
 36343  014A68  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 36344  014A6A  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 36345  014A6C  5160               	movf	??i2___fladd& (0+255),w,b
 36346  014A6E  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 36347  014A70  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 36348  014A72  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 36349  014A74  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 36350  014A76  D02C               	goto	i2l2065
 36351  014A78  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 36352  014A7A  E104               	bnz	i2u1286_40
 36353  014A7C  0E1A               	movlw	26
 36354  014A7E  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 36355  014A80  A0D8               	btfss	status,0,c
 36356  014A82  D026               	goto	i2l2065
 36357  014A84                     i2u1286_40:
 36358                           
 36359                           ; BSR set to: 0
 36360  014A84  5056               	movf	i2___fladd@b,w,c
 36361  014A86  1057               	iorwf	i2___fladd@b+1,w,c
 36362  014A88  1058               	iorwf	i2___fladd@b+2,w,c
 36363  014A8A  1059               	iorwf	i2___fladd@b+3,w,c
 36364  014A8C  B4D8               	btfsc	status,2,c
 36365  014A8E  D002               	goto	i2u1287_40
 36366  014A90  0E01               	movlw	1
 36367  014A92  D001               	goto	i2u1288_40
 36368  014A94                     i2u1287_40:
 36369  014A94  0E00               	movlw	0
 36370  014A96                     i2u1288_40:
 36371  014A96  6F6B               	movwf	i2___fladd@grs& (0+255),b
 36372                           
 36373                           ; BSR set to: 0
 36374  014A98  0E00               	movlw	0
 36375  014A9A  6E56               	movwf	i2___fladd@b,c
 36376  014A9C  0E00               	movlw	0
 36377  014A9E  6E57               	movwf	i2___fladd@b+1,c
 36378  014AA0  0E00               	movlw	0
 36379  014AA2  6E58               	movwf	i2___fladd@b+2,c
 36380  014AA4  0E00               	movlw	0
 36381  014AA6  6E59               	movwf	i2___fladd@b+3,c
 36382                           
 36383                           ; BSR set to: 0
 36384  014AA8  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 36385  014AAC  D015               	goto	i2u1291_40
 36386  014AAE                     i2l2066:
 36387                           
 36388                           ; BSR set to: 0
 36389  014AAE  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 36390  014AB0  D005               	goto	i2l2067
 36391                           
 36392                           ; BSR set to: 0
 36393  014AB2  90D8               	bcf	status,0,c
 36394  014AB4  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 36395  014AB6  0901               	iorlw	1
 36396  014AB8  6F6B               	movwf	i2___fladd@grs& (0+255),b
 36397  014ABA  D002               	goto	i2l2068
 36398  014ABC                     i2l2067:
 36399                           
 36400                           ; BSR set to: 0
 36401                           
 36402                           ; BSR set to: 0
 36403  014ABC  90D8               	bcf	status,0,c
 36404  014ABE  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 36405  014AC0                     i2l2068:
 36406                           
 36407                           ; BSR set to: 0
 36408                           
 36409                           ; BSR set to: 0
 36410  014AC0  B056               	btfsc	i2___fladd@b,0,c
 36411                           
 36412                           ; BSR set to: 0
 36413  014AC2  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 36414                           
 36415                           ; BSR set to: 0
 36416                           
 36417                           ; BSR set to: 0
 36418  014AC4  3459               	rlcf	i2___fladd@b+3,w,c
 36419  014AC6  3259               	rrcf	i2___fladd@b+3,f,c
 36420  014AC8  3258               	rrcf	i2___fladd@b+2,f,c
 36421  014ACA  3257               	rrcf	i2___fladd@b+1,f,c
 36422  014ACC  3256               	rrcf	i2___fladd@b,f,c
 36423                           
 36424                           ; BSR set to: 0
 36425  014ACE  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 36426  014AD0                     i2l2065:
 36427                           
 36428                           ; BSR set to: 0
 36429  014AD0  5169               	movf	i2___fladd@aexp& (0+255),w,b
 36430  014AD2  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 36431  014AD4  A0D8               	btfss	status,0,c
 36432  014AD6  D7EB               	goto	i2l2066
 36433  014AD8                     i2u1291_40:
 36434                           
 36435                           ; BSR set to: 0
 36436                           
 36437                           ; BSR set to: 0
 36438  014AD8  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 36439  014ADA  D029               	goto	i2l2071
 36440                           
 36441                           ; BSR set to: 0
 36442  014ADC  516A               	movf	i2___fladd@bexp& (0+255),w,b
 36443  014ADE  A4D8               	btfss	status,2,c
 36444  014AE0  D009               	goto	i2l2072
 36445                           
 36446                           ; BSR set to: 0
 36447  014AE2  0E00               	movlw	0
 36448  014AE4  6E56               	movwf	?i2___fladd,c
 36449  014AE6  0E00               	movlw	0
 36450  014AE8  6E57               	movwf	?i2___fladd+1,c
 36451  014AEA  0E00               	movlw	0
 36452  014AEC  6E58               	movwf	?i2___fladd+2,c
 36453  014AEE  0E00               	movlw	0
 36454  014AF0  6E59               	movwf	?i2___fladd+3,c
 36455                           
 36456                           ; BSR set to: 0
 36457  014AF2  0012               	return	
 36458  014AF4                     i2l2072:
 36459                           
 36460                           ; BSR set to: 0
 36461                           
 36462                           ; BSR set to: 0
 36463  014AF4  505A               	movf	i2___fladd@a,w,c
 36464  014AF6  2656               	addwf	i2___fladd@b,f,c
 36465  014AF8  505B               	movf	i2___fladd@a+1,w,c
 36466  014AFA  2257               	addwfc	i2___fladd@b+1,f,c
 36467  014AFC  505C               	movf	i2___fladd@a+2,w,c
 36468  014AFE  2258               	addwfc	i2___fladd@b+2,f,c
 36469  014B00  505D               	movf	i2___fladd@a+3,w,c
 36470  014B02  2259               	addwfc	i2___fladd@b+3,f,c
 36471                           
 36472                           ; BSR set to: 0
 36473  014B04  A059               	btfss	i2___fladd@b+3,0,c
 36474  014B06  D083               	goto	i2u1304_40
 36475                           
 36476                           ; BSR set to: 0
 36477  014B08  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 36478  014B0A  D006               	goto	i2l2075
 36479                           
 36480                           ; BSR set to: 0
 36481  014B0C  90D8               	bcf	status,0,c
 36482  014B0E  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 36483  014B10  516B               	movf	i2___fladd@grs& (0+255),w,b
 36484  014B12  0901               	iorlw	1
 36485  014B14  6F6B               	movwf	i2___fladd@grs& (0+255),b
 36486  014B16  D002               	goto	i2l2076
 36487  014B18                     i2l2075:
 36488                           
 36489                           ; BSR set to: 0
 36490                           
 36491                           ; BSR set to: 0
 36492  014B18  90D8               	bcf	status,0,c
 36493  014B1A  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 36494  014B1C                     i2l2076:
 36495                           
 36496                           ; BSR set to: 0
 36497                           
 36498                           ; BSR set to: 0
 36499  014B1C  B056               	btfsc	i2___fladd@b,0,c
 36500                           
 36501                           ; BSR set to: 0
 36502  014B1E  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 36503                           
 36504                           ; BSR set to: 0
 36505                           
 36506                           ; BSR set to: 0
 36507  014B20  3459               	rlcf	i2___fladd@b+3,w,c
 36508  014B22  3259               	rrcf	i2___fladd@b+3,f,c
 36509  014B24  3258               	rrcf	i2___fladd@b+2,f,c
 36510  014B26  3257               	rrcf	i2___fladd@b+1,f,c
 36511  014B28  3256               	rrcf	i2___fladd@b,f,c
 36512                           
 36513                           ; BSR set to: 0
 36514  014B2A  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 36515                           
 36516                           ; BSR set to: 0
 36517  014B2C  D070               	goto	i2u1304_40
 36518  014B2E                     i2l2071:
 36519                           
 36520                           ; BSR set to: 0
 36521                           
 36522                           ; BSR set to: 0
 36523  014B2E  505A               	movf	i2___fladd@a,w,c
 36524  014B30  5C56               	subwf	i2___fladd@b,w,c
 36525  014B32  505B               	movf	i2___fladd@a+1,w,c
 36526  014B34  5857               	subwfb	i2___fladd@b+1,w,c
 36527  014B36  505C               	movf	i2___fladd@a+2,w,c
 36528  014B38  5858               	subwfb	i2___fladd@b+2,w,c
 36529  014B3A  5059               	movf	i2___fladd@b+3,w,c
 36530  014B3C  0A80               	xorlw	128
 36531  014B3E  6F60               	movwf	??i2___fladd& (0+255),b
 36532  014B40  505D               	movf	i2___fladd@a+3,w,c
 36533  014B42  0A80               	xorlw	128
 36534  014B44  5960               	subwfb	??i2___fladd& (0+255),w,b
 36535  014B46  B0D8               	btfsc	status,0,c
 36536  014B48  D036               	goto	i2l2079
 36537                           
 36538                           ; BSR set to: 0
 36539  014B4A  C056  F060         	movff	i2___fladd@b,??i2___fladd
 36540  014B4E  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 36541  014B52  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 36542  014B56  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 36543  014B5A  1F60               	comf	??i2___fladd& (0+255),f,b
 36544  014B5C  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 36545  014B5E  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 36546  014B60  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 36547  014B62  2B60               	incf	??i2___fladd& (0+255),f,b
 36548  014B64  0E00               	movlw	0
 36549  014B66  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 36550  014B68  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 36551  014B6A  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 36552  014B6C  505A               	movf	i2___fladd@a,w,c
 36553  014B6E  2560               	addwf	??i2___fladd& (0+255),w,b
 36554  014B70  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 36555  014B72  505B               	movf	i2___fladd@a+1,w,c
 36556  014B74  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 36557  014B76  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 36558  014B78  505C               	movf	i2___fladd@a+2,w,c
 36559  014B7A  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 36560  014B7C  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 36561  014B7E  505D               	movf	i2___fladd@a+3,w,c
 36562  014B80  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 36563  014B82  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 36564  014B84  0EFF               	movlw	255
 36565  014B86  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 36566  014B88  6E56               	movwf	i2___fladd@b,c
 36567  014B8A  0EFF               	movlw	255
 36568  014B8C  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 36569  014B8E  6E57               	movwf	i2___fladd@b+1,c
 36570  014B90  0EFF               	movlw	255
 36571  014B92  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 36572  014B94  6E58               	movwf	i2___fladd@b+2,c
 36573  014B96  0EFF               	movlw	255
 36574  014B98  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 36575  014B9A  6E59               	movwf	i2___fladd@b+3,c
 36576  014B9C  0E80               	movlw	128
 36577  014B9E  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 36578                           
 36579                           ; BSR set to: 0
 36580  014BA0  6D6B               	negf	i2___fladd@grs& (0+255),b
 36581                           
 36582                           ; BSR set to: 0
 36583  014BA2  516B               	movf	i2___fladd@grs& (0+255),w,b
 36584  014BA4  A4D8               	btfss	status,2,c
 36585  014BA6  D00F               	goto	i2l2081
 36586                           
 36587                           ; BSR set to: 0
 36588  014BA8  0E01               	movlw	1
 36589  014BAA  2656               	addwf	i2___fladd@b,f,c
 36590  014BAC  0E00               	movlw	0
 36591  014BAE  2257               	addwfc	i2___fladd@b+1,f,c
 36592  014BB0  2258               	addwfc	i2___fladd@b+2,f,c
 36593  014BB2  2259               	addwfc	i2___fladd@b+3,f,c
 36594                           
 36595                           ; BSR set to: 0
 36596  014BB4  D008               	goto	i2l2081
 36597  014BB6                     i2l2079:
 36598                           
 36599                           ; BSR set to: 0
 36600                           
 36601                           ; BSR set to: 0
 36602  014BB6  505A               	movf	i2___fladd@a,w,c
 36603  014BB8  5E56               	subwf	i2___fladd@b,f,c
 36604  014BBA  505B               	movf	i2___fladd@a+1,w,c
 36605  014BBC  5A57               	subwfb	i2___fladd@b+1,f,c
 36606  014BBE  505C               	movf	i2___fladd@a+2,w,c
 36607  014BC0  5A58               	subwfb	i2___fladd@b+2,f,c
 36608  014BC2  505D               	movf	i2___fladd@a+3,w,c
 36609  014BC4  5A59               	subwfb	i2___fladd@b+3,f,c
 36610  014BC6                     i2l2081:
 36611                           
 36612                           ; BSR set to: 0
 36613  014BC6  5056               	movf	i2___fladd@b,w,c
 36614  014BC8  1057               	iorwf	i2___fladd@b+1,w,c
 36615  014BCA  1058               	iorwf	i2___fladd@b+2,w,c
 36616  014BCC  1059               	iorwf	i2___fladd@b+3,w,c
 36617  014BCE  A4D8               	btfss	status,2,c
 36618  014BD0  D01C               	goto	i2l2088
 36619                           
 36620                           ; BSR set to: 0
 36621  014BD2  516B               	movf	i2___fladd@grs& (0+255),w,b
 36622  014BD4  A4D8               	btfss	status,2,c
 36623  014BD6  D019               	goto	i2l2088
 36624                           
 36625                           ; BSR set to: 0
 36626  014BD8  0E00               	movlw	0
 36627  014BDA  6E56               	movwf	?i2___fladd,c
 36628  014BDC  0E00               	movlw	0
 36629  014BDE  6E57               	movwf	?i2___fladd+1,c
 36630  014BE0  0E00               	movlw	0
 36631  014BE2  6E58               	movwf	?i2___fladd+2,c
 36632  014BE4  0E00               	movlw	0
 36633  014BE6  6E59               	movwf	?i2___fladd+3,c
 36634                           
 36635                           ; BSR set to: 0
 36636  014BE8  0012               	return	
 36637  014BEA                     
 36638                           ; BSR set to: 0
 36639                           
 36640                           ; BSR set to: 0
 36641  014BEA  90D8               	bcf	status,0,c
 36642  014BEC  3656               	rlcf	i2___fladd@b,f,c
 36643  014BEE  3657               	rlcf	i2___fladd@b+1,f,c
 36644  014BF0  3658               	rlcf	i2___fladd@b+2,f,c
 36645  014BF2  3659               	rlcf	i2___fladd@b+3,f,c
 36646                           
 36647                           ; BSR set to: 0
 36648  014BF4  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 36649                           
 36650                           ; BSR set to: 0
 36651  014BF6  8056               	bsf	i2___fladd@b,0,c
 36652                           
 36653                           ; BSR set to: 0
 36654                           
 36655                           ; BSR set to: 0
 36656  014BF8  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 36657  014BFA  D002               	goto	i2l2086
 36658                           
 36659                           ; BSR set to: 0
 36660  014BFC  80D8               	bsf	status,0,c
 36661  014BFE  D001               	goto	L23
 36662  014C00                     i2l2086:
 36663                           
 36664                           ; BSR set to: 0
 36665                           
 36666                           ; BSR set to: 0
 36667  014C00  90D8               	bcf	status,0,c
 36668  014C02                     L23:
 36669  014C02  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 36670                           
 36671                           ; BSR set to: 0
 36672                           
 36673                           ; BSR set to: 0
 36674  014C04  516A               	movf	i2___fladd@bexp& (0+255),w,b
 36675  014C06  A4D8               	btfss	status,2,c
 36676                           
 36677                           ; BSR set to: 0
 36678  014C08  076A               	decf	i2___fladd@bexp& (0+255),f,b
 36679  014C0A                     i2l2088:
 36680                           
 36681                           ; BSR set to: 0
 36682                           
 36683                           ; BSR set to: 0
 36684                           
 36685                           ; BSR set to: 0
 36686  014C0A  AE58               	btfss	i2___fladd@b+2,7,c
 36687  014C0C  D7EE               	goto	i2l2084
 36688  014C0E                     i2u1304_40:
 36689                           
 36690                           ; BSR set to: 0
 36691                           
 36692                           ; BSR set to: 0
 36693                           
 36694                           ; BSR set to: 0
 36695  014C0E  0E00               	movlw	0
 36696  014C10  6F69               	movwf	i2___fladd@aexp& (0+255),b
 36697                           
 36698                           ; BSR set to: 0
 36699  014C12  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 36700  014C14  D00A               	goto	i2l2093
 36701                           
 36702                           ; BSR set to: 0
 36703  014C16  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 36704  014C1A  0E7F               	movlw	127
 36705  014C1C  1760               	andwf	??i2___fladd& (0+255),f,b
 36706  014C1E  A4D8               	btfss	status,2,c
 36707  014C20  D002               	goto	i2u1307_40
 36708                           
 36709                           ; BSR set to: 0
 36710                           
 36711                           ; BSR set to: 0
 36712  014C22  A056               	btfss	i2___fladd@b,0,c
 36713  014C24  D002               	goto	i2l2093
 36714  014C26                     i2u1307_40:
 36715                           
 36716                           ; BSR set to: 0
 36717  014C26  0E01               	movlw	1
 36718  014C28  6F69               	movwf	i2___fladd@aexp& (0+255),b
 36719  014C2A                     i2l2093:
 36720                           
 36721                           ; BSR set to: 0
 36722                           
 36723                           ; BSR set to: 0
 36724                           
 36725                           ; BSR set to: 0
 36726  014C2A  5169               	movf	i2___fladd@aexp& (0+255),w,b
 36727  014C2C  B4D8               	btfsc	status,2,c
 36728  014C2E  D020               	goto	i2l2096
 36729                           
 36730                           ; BSR set to: 0
 36731  014C30  0E01               	movlw	1
 36732  014C32  2656               	addwf	i2___fladd@b,f,c
 36733  014C34  0E00               	movlw	0
 36734  014C36  2257               	addwfc	i2___fladd@b+1,f,c
 36735  014C38  2258               	addwfc	i2___fladd@b+2,f,c
 36736  014C3A  2259               	addwfc	i2___fladd@b+3,f,c
 36737                           
 36738                           ; BSR set to: 0
 36739  014C3C  A059               	btfss	i2___fladd@b+3,0,c
 36740  014C3E  D018               	goto	i2l2096
 36741                           
 36742                           ; BSR set to: 0
 36743  014C40  C056  F060         	movff	i2___fladd@b,??i2___fladd
 36744  014C44  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 36745  014C48  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 36746  014C4C  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 36747  014C50  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 36748  014C52  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 36749  014C54  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 36750  014C56  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 36751  014C58  3360               	rrcf	??i2___fladd& (0+255),f,b
 36752  014C5A  C060  F056         	movff	??i2___fladd,i2___fladd@b
 36753  014C5E  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 36754  014C62  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 36755  014C66  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 36756  014C6A  296A               	incf	i2___fladd@bexp& (0+255),w,b
 36757  014C6C  A4D8               	btfss	status,2,c
 36758                           
 36759                           ; BSR set to: 0
 36760  014C6E  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 36761  014C70                     i2l2096:
 36762                           
 36763                           ; BSR set to: 0
 36764                           
 36765                           ; BSR set to: 0
 36766                           
 36767                           ; BSR set to: 0
 36768                           
 36769                           ; BSR set to: 0
 36770  014C70  296A               	incf	i2___fladd@bexp& (0+255),w,b
 36771  014C72  B4D8               	btfsc	status,2,c
 36772  014C74  D003               	goto	i2u1312_40
 36773                           
 36774                           ; BSR set to: 0
 36775  014C76  516A               	movf	i2___fladd@bexp& (0+255),w,b
 36776  014C78  A4D8               	btfss	status,2,c
 36777  014C7A  D00D               	goto	i2l2100
 36778  014C7C                     i2u1312_40:
 36779                           
 36780                           ; BSR set to: 0
 36781                           
 36782                           ; BSR set to: 0
 36783  014C7C  0E00               	movlw	0
 36784  014C7E  6E56               	movwf	i2___fladd@b,c
 36785  014C80  0E00               	movlw	0
 36786  014C82  6E57               	movwf	i2___fladd@b+1,c
 36787  014C84  0E00               	movlw	0
 36788  014C86  6E58               	movwf	i2___fladd@b+2,c
 36789  014C88  0E00               	movlw	0
 36790  014C8A  6E59               	movwf	i2___fladd@b+3,c
 36791  014C8C  516A               	movf	i2___fladd@bexp& (0+255),w,b
 36792  014C8E  A4D8               	btfss	status,2,c
 36793  014C90  D002               	goto	i2l2100
 36794                           
 36795                           ; BSR set to: 0
 36796  014C92  0E00               	movlw	0
 36797  014C94  6F68               	movwf	i2___fladd@signs& (0+255),b
 36798  014C96                     i2l2100:
 36799                           
 36800                           ; BSR set to: 0
 36801                           
 36802                           ; BSR set to: 0
 36803                           
 36804                           ; BSR set to: 0
 36805  014C96  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 36806  014C98  D002               	goto	i2l2101
 36807                           
 36808                           ; BSR set to: 0
 36809  014C9A  8E58               	bsf	i2___fladd@b+2,7,c
 36810  014C9C  D001               	goto	i2l2102
 36811  014C9E                     i2l2101:
 36812                           
 36813                           ; BSR set to: 0
 36814                           
 36815                           ; BSR set to: 0
 36816  014C9E  9E58               	bcf	i2___fladd@b+2,7,c
 36817  014CA0                     i2l2102:
 36818                           
 36819                           ; BSR set to: 0
 36820                           
 36821                           ; BSR set to: 0
 36822  014CA0  90D8               	bcf	status,0,c
 36823  014CA2  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 36824  014CA4  6E59               	movwf	i2___fladd@b+3,c
 36825                           
 36826                           ; BSR set to: 0
 36827  014CA6  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 36828                           
 36829                           ; BSR set to: 0
 36830  014CA8  8E59               	bsf	i2___fladd@b+3,7,c
 36831                           
 36832                           ; BSR set to: 0
 36833                           
 36834                           ; BSR set to: 0
 36835  014CAA  C056  F056         	movff	i2___fladd@b,?i2___fladd
 36836  014CAE  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 36837  014CB2  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 36838  014CB6  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 36839  014CBA  0012               	return	
 36840  014CBC                     __end_ofi2___fladd:
 36841                           	opt stack 0
 36842                           tosu	equ	0xFFF
 36843                           tosh	equ	0xFFE
 36844                           tosl	equ	0xFFD
 36845                           pclatu	equ	0xFFB
 36846                           pclath	equ	0xFFA
 36847                           tblptru	equ	0xFF8
 36848                           tblptrh	equ	0xFF7
 36849                           tblptrl	equ	0xFF6
 36850                           tablat	equ	0xFF5
 36851                           prodh	equ	0xFF4
 36852                           prodl	equ	0xFF3
 36853                           intcon	equ	0xFF2
 36854                           indf0	equ	0xFEF
 36855                           postinc0	equ	0xFEE
 36856                           fsr0h	equ	0xFEA
 36857                           fsr0l	equ	0xFE9
 36858                           wreg	equ	0xFE8
 36859                           indf1	equ	0xFE7
 36860                           postdec1	equ	0xFE5
 36861                           plusw1	equ	0xFE3
 36862                           fsr1h	equ	0xFE2
 36863                           fsr1l	equ	0xFE1
 36864                           bsr	equ	0xFE0
 36865                           indf2	equ	0xFDF
 36866                           postinc2	equ	0xFDE
 36867                           postdec2	equ	0xFDD
 36868                           plusw2	equ	0xFDB
 36869                           fsr2h	equ	0xFDA
 36870                           fsr2l	equ	0xFD9
 36871                           status	equ	0xFD8
 36872                           
 36873 ;; *************** function _abs *****************
 36874 ;; Defined at:
 36875 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 36876 ;; Parameters:    Size  Location     Type
 36877 ;;  a               2   22[BANK0 ] int 
 36878 ;; Auto vars:     Size  Location     Type
 36879 ;;		None
 36880 ;; Return value:  Size  Location     Type
 36881 ;;                  2   22[BANK0 ] int 
 36882 ;; Registers used:
 36883 ;;		wreg, status,2, status,0
 36884 ;; Tracked objects:
 36885 ;;		On entry : 0/0
 36886 ;;		On exit  : 0/0
 36887 ;;		Unchanged: 0/0
 36888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36889 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36891 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36892 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36893 ;;Total ram usage:        4 bytes
 36894 ;; Hardware stack levels used:    1
 36895 ;; This function calls:
 36896 ;;		Nothing
 36897 ;; This function is called by:
 36898 ;;		_ADCPostProcessingCallback
 36899 ;; This function uses a non-reentrant model
 36900 ;;
 36901                           
 36902                           	psect	text121
 36903  0185D6                     __ptext121:
 36904                           	opt stack 0
 36905  0185D6                     _abs:
 36906                           	opt stack 16
 36907                           
 36908                           ; BSR set to: 0
 36909                           ;incstack = 0
 36910  0185D6  0100               	movlb	0	; () banked
 36911  0185D8  AF77               	btfss	(abs@a+1)& (0+255),7,b
 36912  0185DA  D00D               	goto	i2l1548
 36913                           
 36914                           ; BSR set to: 0
 36915  0185DC  C076  F078         	movff	abs@a,??_abs
 36916  0185E0  C077  F079         	movff	abs@a+1,??_abs+1
 36917  0185E4  1F78               	comf	??_abs& (0+255),f,b
 36918  0185E6  1F79               	comf	(??_abs+1)& (0+255),f,b
 36919  0185E8  4B78               	infsnz	??_abs& (0+255),f,b
 36920  0185EA  2B79               	incf	(??_abs+1)& (0+255),f,b
 36921  0185EC  C078  F076         	movff	??_abs,?_abs
 36922  0185F0  C079  F077         	movff	??_abs+1,?_abs+1
 36923  0185F4  0012               	return	
 36924  0185F6                     i2l1548:
 36925                           
 36926                           ; BSR set to: 0
 36927  0185F6  C076  F076         	movff	abs@a,?_abs
 36928  0185FA  C077  F077         	movff	abs@a+1,?_abs+1
 36929                           
 36930                           ; BSR set to: 0
 36931  0185FE  0012               	return		;funcret
 36932  018600                     __end_of_abs:
 36933                           	opt stack 0
 36934                           tosu	equ	0xFFF
 36935                           tosh	equ	0xFFE
 36936                           tosl	equ	0xFFD
 36937                           pclatu	equ	0xFFB
 36938                           pclath	equ	0xFFA
 36939                           tblptru	equ	0xFF8
 36940                           tblptrh	equ	0xFF7
 36941                           tblptrl	equ	0xFF6
 36942                           tablat	equ	0xFF5
 36943                           prodh	equ	0xFF4
 36944                           prodl	equ	0xFF3
 36945                           intcon	equ	0xFF2
 36946                           indf0	equ	0xFEF
 36947                           postinc0	equ	0xFEE
 36948                           fsr0h	equ	0xFEA
 36949                           fsr0l	equ	0xFE9
 36950                           wreg	equ	0xFE8
 36951                           indf1	equ	0xFE7
 36952                           postdec1	equ	0xFE5
 36953                           plusw1	equ	0xFE3
 36954                           fsr1h	equ	0xFE2
 36955                           fsr1l	equ	0xFE1
 36956                           bsr	equ	0xFE0
 36957                           indf2	equ	0xFDF
 36958                           postinc2	equ	0xFDE
 36959                           postdec2	equ	0xFDD
 36960                           plusw2	equ	0xFDB
 36961                           fsr2h	equ	0xFDA
 36962                           fsr2l	equ	0xFD9
 36963                           status	equ	0xFD8
 36964                           
 36965 ;; *************** function _ADCC_StopConversion *****************
 36966 ;; Defined at:
 36967 ;;		line 162 in file "mcc_generated_files/adcc.c"
 36968 ;; Parameters:    Size  Location     Type
 36969 ;;		None
 36970 ;; Auto vars:     Size  Location     Type
 36971 ;;		None
 36972 ;; Return value:  Size  Location     Type
 36973 ;;                  1    wreg      void 
 36974 ;; Registers used:
 36975 ;;		None
 36976 ;; Tracked objects:
 36977 ;;		On entry : 0/0
 36978 ;;		On exit  : 0/0
 36979 ;;		Unchanged: 0/0
 36980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36985 ;;Total ram usage:        0 bytes
 36986 ;; Hardware stack levels used:    1
 36987 ;; This function calls:
 36988 ;;		Nothing
 36989 ;; This function is called by:
 36990 ;;		_ADCPostProcessingCallback
 36991 ;; This function uses a non-reentrant model
 36992 ;;
 36993                           
 36994                           	psect	text122
 36995  018932                     __ptext122:
 36996                           	opt stack 0
 36997  018932                     _ADCC_StopConversion:
 36998                           	opt stack 16
 36999                           
 37000                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 37001                           
 37002                           ; BSR set to: 0
 37003                           ;incstack = 0
 37004  018932  9060               	bcf	3936,0,c	;volatile
 37005  018934  0012               	return		;funcret
 37006  018936                     __end_of_ADCC_StopConversion:
 37007                           	opt stack 0
 37008                           tosu	equ	0xFFF
 37009                           tosh	equ	0xFFE
 37010                           tosl	equ	0xFFD
 37011                           pclatu	equ	0xFFB
 37012                           pclath	equ	0xFFA
 37013                           tblptru	equ	0xFF8
 37014                           tblptrh	equ	0xFF7
 37015                           tblptrl	equ	0xFF6
 37016                           tablat	equ	0xFF5
 37017                           prodh	equ	0xFF4
 37018                           prodl	equ	0xFF3
 37019                           intcon	equ	0xFF2
 37020                           indf0	equ	0xFEF
 37021                           postinc0	equ	0xFEE
 37022                           fsr0h	equ	0xFEA
 37023                           fsr0l	equ	0xFE9
 37024                           wreg	equ	0xFE8
 37025                           indf1	equ	0xFE7
 37026                           postdec1	equ	0xFE5
 37027                           plusw1	equ	0xFE3
 37028                           fsr1h	equ	0xFE2
 37029                           fsr1l	equ	0xFE1
 37030                           bsr	equ	0xFE0
 37031                           indf2	equ	0xFDF
 37032                           postinc2	equ	0xFDE
 37033                           postdec2	equ	0xFDD
 37034                           plusw2	equ	0xFDB
 37035                           fsr2h	equ	0xFDA
 37036                           fsr2l	equ	0xFD9
 37037                           status	equ	0xFD8
 37038                           
 37039 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 37040 ;; Defined at:
 37041 ;;		line 216 in file "mcc_generated_files/adcc.c"
 37042 ;; Parameters:    Size  Location     Type
 37043 ;;		None
 37044 ;; Auto vars:     Size  Location     Type
 37045 ;;		None
 37046 ;; Return value:  Size  Location     Type
 37047 ;;                  1    wreg      unsigned char 
 37048 ;; Registers used:
 37049 ;;		wreg
 37050 ;; Tracked objects:
 37051 ;;		On entry : 0/0
 37052 ;;		On exit  : 0/0
 37053 ;;		Unchanged: 0/0
 37054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37059 ;;Total ram usage:        0 bytes
 37060 ;; Hardware stack levels used:    1
 37061 ;; This function calls:
 37062 ;;		Nothing
 37063 ;; This function is called by:
 37064 ;;		_ADCPostProcessingCallback
 37065 ;; This function uses a non-reentrant model
 37066 ;;
 37067                           
 37068                           	psect	text123
 37069  0188EC                     __ptext123:
 37070                           	opt stack 0
 37071  0188EC                     _ADCC_HasAccumulatorOverflowed:
 37072                           	opt stack 16
 37073                           
 37074                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 37075                           
 37076                           ;incstack = 0
 37077  0188EC  AE65               	btfss	3941,7,c	;volatile
 37078  0188EE  D002               	goto	i2u1646_40
 37079  0188F0  0E01               	movlw	1
 37080  0188F2  0012               	return	
 37081  0188F4                     i2u1646_40:
 37082  0188F4  0E00               	movlw	0
 37083  0188F6  0012               	return	
 37084  0188F8                     __end_of_ADCC_HasAccumulatorOverflowed:
 37085                           	opt stack 0
 37086                           tosu	equ	0xFFF
 37087                           tosh	equ	0xFFE
 37088                           tosl	equ	0xFFD
 37089                           pclatu	equ	0xFFB
 37090                           pclath	equ	0xFFA
 37091                           tblptru	equ	0xFF8
 37092                           tblptrh	equ	0xFF7
 37093                           tblptrl	equ	0xFF6
 37094                           tablat	equ	0xFF5
 37095                           prodh	equ	0xFF4
 37096                           prodl	equ	0xFF3
 37097                           intcon	equ	0xFF2
 37098                           indf0	equ	0xFEF
 37099                           postinc0	equ	0xFEE
 37100                           fsr0h	equ	0xFEA
 37101                           fsr0l	equ	0xFE9
 37102                           wreg	equ	0xFE8
 37103                           indf1	equ	0xFE7
 37104                           postdec1	equ	0xFE5
 37105                           plusw1	equ	0xFE3
 37106                           fsr1h	equ	0xFE2
 37107                           fsr1l	equ	0xFE1
 37108                           bsr	equ	0xFE0
 37109                           indf2	equ	0xFDF
 37110                           postinc2	equ	0xFDE
 37111                           postdec2	equ	0xFDD
 37112                           plusw2	equ	0xFDB
 37113                           fsr2h	equ	0xFDA
 37114                           fsr2l	equ	0xFD9
 37115                           status	equ	0xFD8
 37116                           
 37117 ;; *************** function _ADCC_GetFilterValue *****************
 37118 ;; Defined at:
 37119 ;;		line 222 in file "mcc_generated_files/adcc.c"
 37120 ;; Parameters:    Size  Location     Type
 37121 ;;		None
 37122 ;; Auto vars:     Size  Location     Type
 37123 ;;		None
 37124 ;; Return value:  Size  Location     Type
 37125 ;;                  2    0[COMRAM] unsigned int 
 37126 ;; Registers used:
 37127 ;;		wreg, status,2, status,0
 37128 ;; Tracked objects:
 37129 ;;		On entry : 0/0
 37130 ;;		On exit  : 0/0
 37131 ;;		Unchanged: 0/0
 37132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37136 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37137 ;;Total ram usage:        4 bytes
 37138 ;; Hardware stack levels used:    1
 37139 ;; This function calls:
 37140 ;;		Nothing
 37141 ;; This function is called by:
 37142 ;;		_ADCPostProcessingCallback
 37143 ;; This function uses a non-reentrant model
 37144 ;;
 37145                           
 37146                           	psect	text124
 37147  0187F0                     __ptext124:
 37148                           	opt stack 0
 37149  0187F0                     _ADCC_GetFilterValue:
 37150                           	opt stack 16
 37151                           
 37152                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 37153                           
 37154                           ;incstack = 0
 37155  0187F0  5073               	movf	3955,w,c	;volatile
 37156  0187F2  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 37157  0187F4  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 37158  0187F6  5072               	movf	3954,w,c	;volatile
 37159  0187F8  2403               	addwf	??_ADCC_GetFilterValue,w,c
 37160  0187FA  6E01               	movwf	?_ADCC_GetFilterValue,c
 37161  0187FC  0E00               	movlw	0
 37162  0187FE  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 37163  018800  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 37164  018802  0012               	return	
 37165  018804                     __end_of_ADCC_GetFilterValue:
 37166                           	opt stack 0
 37167                           tosu	equ	0xFFF
 37168                           tosh	equ	0xFFE
 37169                           tosl	equ	0xFFD
 37170                           pclatu	equ	0xFFB
 37171                           pclath	equ	0xFFA
 37172                           tblptru	equ	0xFF8
 37173                           tblptrh	equ	0xFF7
 37174                           tblptrl	equ	0xFF6
 37175                           tablat	equ	0xFF5
 37176                           prodh	equ	0xFF4
 37177                           prodl	equ	0xFF3
 37178                           intcon	equ	0xFF2
 37179                           indf0	equ	0xFEF
 37180                           postinc0	equ	0xFEE
 37181                           fsr0h	equ	0xFEA
 37182                           fsr0l	equ	0xFE9
 37183                           wreg	equ	0xFE8
 37184                           indf1	equ	0xFE7
 37185                           postdec1	equ	0xFE5
 37186                           plusw1	equ	0xFE3
 37187                           fsr1h	equ	0xFE2
 37188                           fsr1l	equ	0xFE1
 37189                           bsr	equ	0xFE0
 37190                           indf2	equ	0xFDF
 37191                           postinc2	equ	0xFDE
 37192                           postdec2	equ	0xFDD
 37193                           plusw2	equ	0xFDB
 37194                           fsr2h	equ	0xFDA
 37195                           fsr2l	equ	0xFD9
 37196                           status	equ	0xFD8
 37197                           
 37198 ;; *************** function _ADCC_GetConversionResult *****************
 37199 ;; Defined at:
 37200 ;;		line 130 in file "mcc_generated_files/adcc.c"
 37201 ;; Parameters:    Size  Location     Type
 37202 ;;		None
 37203 ;; Auto vars:     Size  Location     Type
 37204 ;;		None
 37205 ;; Return value:  Size  Location     Type
 37206 ;;                  2    0[COMRAM] unsigned int 
 37207 ;; Registers used:
 37208 ;;		wreg, status,2, status,0
 37209 ;; Tracked objects:
 37210 ;;		On entry : 0/0
 37211 ;;		On exit  : 0/0
 37212 ;;		Unchanged: 0/0
 37213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37217 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37218 ;;Total ram usage:        4 bytes
 37219 ;; Hardware stack levels used:    1
 37220 ;; This function calls:
 37221 ;;		Nothing
 37222 ;; This function is called by:
 37223 ;;		_ADCPostProcessingCallback
 37224 ;; This function uses a non-reentrant model
 37225 ;;
 37226                           
 37227                           	psect	text125
 37228  018804                     __ptext125:
 37229                           	opt stack 0
 37230  018804                     _ADCC_GetConversionResult:
 37231                           	opt stack 16
 37232                           
 37233                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 37234                           
 37235                           ;incstack = 0
 37236  018804  5064               	movf	3940,w,c	;volatile
 37237  018806  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 37238  018808  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 37239  01880A  5063               	movf	3939,w,c	;volatile
 37240  01880C  2403               	addwf	??_ADCC_GetConversionResult,w,c
 37241  01880E  6E01               	movwf	?_ADCC_GetConversionResult,c
 37242  018810  0E00               	movlw	0
 37243  018812  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 37244  018814  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 37245  018816  0012               	return	
 37246  018818                     __end_of_ADCC_GetConversionResult:
 37247                           	opt stack 0
 37248                           tosu	equ	0xFFF
 37249                           tosh	equ	0xFFE
 37250                           tosl	equ	0xFFD
 37251                           pclatu	equ	0xFFB
 37252                           pclath	equ	0xFFA
 37253                           tblptru	equ	0xFF8
 37254                           tblptrh	equ	0xFF7
 37255                           tblptrl	equ	0xFF6
 37256                           tablat	equ	0xFF5
 37257                           prodh	equ	0xFF4
 37258                           prodl	equ	0xFF3
 37259                           intcon	equ	0xFF2
 37260                           indf0	equ	0xFEF
 37261                           postinc0	equ	0xFEE
 37262                           fsr0h	equ	0xFEA
 37263                           fsr0l	equ	0xFE9
 37264                           wreg	equ	0xFE8
 37265                           indf1	equ	0xFE7
 37266                           postdec1	equ	0xFE5
 37267                           plusw1	equ	0xFE3
 37268                           fsr1h	equ	0xFE2
 37269                           fsr1l	equ	0xFE1
 37270                           bsr	equ	0xFE0
 37271                           indf2	equ	0xFDF
 37272                           postinc2	equ	0xFDE
 37273                           postdec2	equ	0xFDD
 37274                           plusw2	equ	0xFDB
 37275                           fsr2h	equ	0xFDA
 37276                           fsr2l	equ	0xFD9
 37277                           status	equ	0xFD8
 37278                           tosu	equ	0xFFF
 37279                           tosh	equ	0xFFE
 37280                           tosl	equ	0xFFD
 37281                           pclatu	equ	0xFFB
 37282                           pclath	equ	0xFFA
 37283                           tblptru	equ	0xFF8
 37284                           tblptrh	equ	0xFF7
 37285                           tblptrl	equ	0xFF6
 37286                           tablat	equ	0xFF5
 37287                           prodh	equ	0xFF4
 37288                           prodl	equ	0xFF3
 37289                           intcon	equ	0xFF2
 37290                           indf0	equ	0xFEF
 37291                           postinc0	equ	0xFEE
 37292                           fsr0h	equ	0xFEA
 37293                           fsr0l	equ	0xFE9
 37294                           wreg	equ	0xFE8
 37295                           indf1	equ	0xFE7
 37296                           postdec1	equ	0xFE5
 37297                           plusw1	equ	0xFE3
 37298                           fsr1h	equ	0xFE2
 37299                           fsr1l	equ	0xFE1
 37300                           bsr	equ	0xFE0
 37301                           indf2	equ	0xFDF
 37302                           postinc2	equ	0xFDE
 37303                           postdec2	equ	0xFDD
 37304                           plusw2	equ	0xFDB
 37305                           fsr2h	equ	0xFDA
 37306                           fsr2l	equ	0xFD9
 37307                           status	equ	0xFD8
 37308                           
 37309                           	psect	text126
 37310  000000                     __ptext126:
 37311                           	opt stack 0
 37312                           tosu	equ	0xFFF
 37313                           tosh	equ	0xFFE
 37314                           tosl	equ	0xFFD
 37315                           pclatu	equ	0xFFB
 37316                           pclath	equ	0xFFA
 37317                           tblptru	equ	0xFF8
 37318                           tblptrh	equ	0xFF7
 37319                           tblptrl	equ	0xFF6
 37320                           tablat	equ	0xFF5
 37321                           prodh	equ	0xFF4
 37322                           prodl	equ	0xFF3
 37323                           intcon	equ	0xFF2
 37324                           indf0	equ	0xFEF
 37325                           postinc0	equ	0xFEE
 37326                           fsr0h	equ	0xFEA
 37327                           fsr0l	equ	0xFE9
 37328                           wreg	equ	0xFE8
 37329                           indf1	equ	0xFE7
 37330                           postdec1	equ	0xFE5
 37331                           plusw1	equ	0xFE3
 37332                           fsr1h	equ	0xFE2
 37333                           fsr1l	equ	0xFE1
 37334                           bsr	equ	0xFE0
 37335                           indf2	equ	0xFDF
 37336                           postinc2	equ	0xFDE
 37337                           postdec2	equ	0xFDD
 37338                           plusw2	equ	0xFDB
 37339                           fsr2h	equ	0xFDA
 37340                           fsr2l	equ	0xFD9
 37341                           status	equ	0xFD8
 37342                           
 37343                           	psect	rparam
 37344  0000                     tosu	equ	0xFFF
 37345                           tosh	equ	0xFFE
 37346                           tosl	equ	0xFFD
 37347                           pclatu	equ	0xFFB
 37348                           pclath	equ	0xFFA
 37349                           tblptru	equ	0xFF8
 37350                           tblptrh	equ	0xFF7
 37351                           tblptrl	equ	0xFF6
 37352                           tablat	equ	0xFF5
 37353                           prodh	equ	0xFF4
 37354                           prodl	equ	0xFF3
 37355                           intcon	equ	0xFF2
 37356                           indf0	equ	0xFEF
 37357                           postinc0	equ	0xFEE
 37358                           fsr0h	equ	0xFEA
 37359                           fsr0l	equ	0xFE9
 37360                           wreg	equ	0xFE8
 37361                           indf1	equ	0xFE7
 37362                           postdec1	equ	0xFE5
 37363                           plusw1	equ	0xFE3
 37364                           fsr1h	equ	0xFE2
 37365                           fsr1l	equ	0xFE1
 37366                           bsr	equ	0xFE0
 37367                           indf2	equ	0xFDF
 37368                           postinc2	equ	0xFDE
 37369                           postdec2	equ	0xFDD
 37370                           plusw2	equ	0xFDB
 37371                           fsr2h	equ	0xFDA
 37372                           fsr2l	equ	0xFD9
 37373                           status	equ	0xFD8
 37374                           
 37375                           	psect	temp
 37376  00005F                     btemp:
 37377                           	opt stack 0
 37378  00005F                     	ds	1
 37379  0000                     int$flags	set	btemp
 37380  0000                     wtemp6	set	btemp+1
 37381                           tosu	equ	0xFFF
 37382                           tosh	equ	0xFFE
 37383                           tosl	equ	0xFFD
 37384                           pclatu	equ	0xFFB
 37385                           pclath	equ	0xFFA
 37386                           tblptru	equ	0xFF8
 37387                           tblptrh	equ	0xFF7
 37388                           tblptrl	equ	0xFF6
 37389                           tablat	equ	0xFF5
 37390                           prodh	equ	0xFF4
 37391                           prodl	equ	0xFF3
 37392                           intcon	equ	0xFF2
 37393                           indf0	equ	0xFEF
 37394                           postinc0	equ	0xFEE
 37395                           fsr0h	equ	0xFEA
 37396                           fsr0l	equ	0xFE9
 37397                           wreg	equ	0xFE8
 37398                           indf1	equ	0xFE7
 37399                           postdec1	equ	0xFE5
 37400                           plusw1	equ	0xFE3
 37401                           fsr1h	equ	0xFE2
 37402                           fsr1l	equ	0xFE1
 37403                           bsr	equ	0xFE0
 37404                           indf2	equ	0xFDF
 37405                           postinc2	equ	0xFDE
 37406                           postdec2	equ	0xFDD
 37407                           plusw2	equ	0xFDB
 37408                           fsr2h	equ	0xFDA
 37409                           fsr2l	equ	0xFD9
 37410                           status	equ	0xFD8


Data Sizes:
    Strings     5372
    Constant    256
    Data        43
    BSS         346
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    187     233
    BANK2           256     51     256
    BANK3           256      8     136
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_120(CODE[5]), STR_118(CODE[14]), STR_116(CODE[16]), STR_107(CODE[13]), 
		 -> STR_103(CODE[17]), STR_100(CODE[14]), STR_98(CODE[12]), STR_96(CODE[16]), 
		 -> STR_94(CODE[15]), STR_92(CODE[15]), STR_90(CODE[21]), STR_88(CODE[21]), 
		 -> STR_86(CODE[26]), STR_84(CODE[14]), STR_82(CODE[13]), STR_80(CODE[18]), 
		 -> STR_78(CODE[15]), STR_76(CODE[16]), STR_73(CODE[17]), STR_71(CODE[16]), 
		 -> STR_60(CODE[11]), STR_57(CODE[10]), STR_55(CODE[13]), STR_53(CODE[11]), 
		 -> STR_50(CODE[4]), STR_49(CODE[6]), STR_47(CODE[16]), STR_44(CODE[6]), 
		 -> STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_140(CODE[7]), printf@c(BANK1[1]), STR_139(CODE[16]), STR_138(CODE[22]), 
		 -> STR_137(CODE[21]), STR_136(CODE[27]), STR_135(CODE[41]), STR_134(CODE[32]), 
		 -> STR_133(CODE[19]), STR_132(CODE[16]), STR_131(CODE[15]), STR_130(CODE[16]), 
		 -> STR_129(CODE[10]), STR_128(CODE[13]), STR_127(CODE[12]), ringBufferLUT@channel_name(BANK2[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2170
		 -> STR_126(CODE[30]), STR_125(CODE[46]), STR_124(CODE[39]), STR_123(CODE[62]), 
		 -> STR_122(CODE[55]), STR_121(CODE[2170]), STR_119(CODE[53]), STR_117(CODE[58]), 
		 -> STR_115(CODE[71]), STR_114(CODE[63]), STR_113(CODE[37]), STR_112(CODE[46]), 
		 -> STR_111(CODE[102]), STR_110(CODE[86]), STR_108(CODE[25]), STR_106(CODE[42]), 
		 -> STR_105(CODE[53]), STR_104(CODE[31]), STR_102(CODE[29]), STR_101(CODE[28]), 
		 -> STR_99(CODE[42]), STR_97(CODE[41]), STR_95(CODE[40]), STR_93(CODE[56]), 
		 -> STR_91(CODE[34]), STR_89(CODE[34]), STR_87(CODE[32]), STR_85(CODE[37]), 
		 -> STR_83(CODE[58]), STR_81(CODE[36]), STR_79(CODE[36]), STR_77(CODE[37]), 
		 -> STR_75(CODE[45]), STR_74(CODE[66]), STR_72(CODE[21]), STR_70(CODE[24]), 
		 -> STR_69(CODE[48]), STR_59(CODE[54]), STR_58(CODE[64]), STR_56(CODE[59]), 
		 -> STR_54(CODE[85]), STR_52(CODE[47]), STR_51(CODE[17]), STR_48(CODE[52]), 
		 -> STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), 
		 -> STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_138(CODE[22]), STR_137(CODE[21]), STR_136(CODE[27]), STR_135(CODE[41]), 
		 -> STR_134(CODE[32]), STR_133(CODE[19]), STR_132(CODE[16]), STR_131(CODE[15]), 
		 -> STR_130(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_129(CODE[10]), STR_128(CODE[13]), STR_127(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_129(CODE[10]), STR_128(CODE[13]), STR_127(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_129(CODE[10]), STR_128(CODE[13]), STR_127(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_139(CODE[16]), STR_138(CODE[22]), STR_137(CODE[21]), STR_136(CODE[27]), 
		 -> STR_135(CODE[41]), STR_134(CODE[32]), STR_133(CODE[19]), STR_132(CODE[16]), 
		 -> STR_131(CODE[15]), STR_130(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_terminal_ringBufferPull

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  840524
                                              6 BANK3      2     2      0
       _ADCC_SetADTIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0  103378
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  509253
                                            184 BANK1      3     3      0
                                              0 BANK3      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       39    37      2  508062
                                            180 BANK1      4     2      2
                                             16 BANK2     35    35      0
                     _TMR7_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  122831
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  122831
                                            178 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     741
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    7213
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0  103378
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    2624
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     722
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     736
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     468
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2188
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    7442
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2    1328
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0    1208
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0    1208
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     374
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2    1143
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4    1143
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     537
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2     110
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2892
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    5576
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      75
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0  103378
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10  103378
                                            130 BANK1     48    38     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   19276
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     165
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0     110
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     185
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   18781
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   11764
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    3047
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    3335
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6    1133
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8    1133
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1808
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1953
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1427
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1457
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1272
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   10022
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    9226
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1343
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    2934
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     271
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     271
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      31
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _HLVD_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  196383
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   40465
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   40465
                                             40 BANK0     40    38      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7609
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7330
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ThresholdISR                                   0     0      0  155678
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  155678
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8   99862
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   47417
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   42313
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1493
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   25639
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   40118
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   37270
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4509
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    2535
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    7999
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flge                                           12     4      8    1386
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     478
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10340
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4772
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4234
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     363
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fltol
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      8      88      12       53.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     33     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BB      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     36B       8        0.0%
DATA                 0      0     36B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 06 11:32:48 2018

                           ??i2_TMR7_StopTimer 0001                       getDeviceIDString@strings 0128  
                                 ___fldiv@aexp 0155                                   ___fldiv@bexp 0154  
             __end_of_TMR5_SetInterruptHandler 88B4                                   ___fldiv@sign 0149  
                                  __CFG_CP$OFF 000000                                             l57 87A0  
                                 ___awdiv@sign 0122                         __end_of_FVR_Initialize 890A  
                                           bsr 000FE0                            ___wmul@multiplicand 0119  
                       ?_terminal_printNewline 0001                              ??_TMR5_WriteTimer 0003  
               __end_of_heartbeatTimerCallback 8364                                            l381 81D2  
                                          l382 81CE                                            l391 8106  
                                          l392 812C                                            l384 81FC  
                                          l393 812A                                            l388 80F0  
                                          l389 80EC                                            l998 7890  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                  i2___fladd@a 005A                                    i2___fladd@b 0056  
                                          _Ipk 01C7                                            _Vpk 024C  
                                          _abs 85D6                                    i2___fldiv@a 0017  
                                  i2___fldiv@b 0013                      __end_of_getDeviceIDString 7EF2  
                                          _sin 4FC0                     currentMeasuredToPeak@Angle 009D  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                 __CFG_IDLOC0$ 000000                                     i2___xxtofl 6634  
                                 __CFG_IDLOC1$ 000001                                   __CFG_IDLOC2$ 000002  
                                 __CFG_IDLOC3$ 000003                                   __CFG_IDLOC4$ 000004  
                                 __CFG_IDLOC5$ 000005                                   __CFG_IDLOC6$ 000006  
                                 __CFG_IDLOC7$ 000007                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                  i2___flmul@a 0034                                    i2___flmul@b 0030  
                                  i2___flsub@a 0084                                    i2___flsub@b 0080  
                             ??_TMR7_StopTimer 0117                                   ___flmul@aexp 0163  
                                 ___flmul@bexp 0164                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___fltol@exp1 0181                                           l1200 1E32  
                                         l1040 6C7C                                           l1201 1DEC  
                                         l1210 1E9A                                           l1042 6CE8  
                                         l1211 1EB2                                           l1043 6CBA  
                                         ?_abs 0076                                           l2100 4958  
                                         l1220 2056                                           l1204 1F9A  
                                         l1212 1ECA                                           l2101 4960  
                                         l1221 2032                                           l1205 1F76  
                                         l1213 1EE2                                           l1037 6C5C  
                                         l1310 7FD2                                           l1302 7FB2  
                                         l2102 4962                                           l2110 587A  
                                         l1070 3C8A                                           l1230 219E  
                                         l1206 1F2A                                           l1214 1EFA  
                                         l2111 5876                                           l1071 3CA2  
                                         l1215 1F12                                           l1207 1E6A  
                                         l1039 6C9A                                           l1312 7FDA  
                                         l1304 7FBA                                           l1400 02E6  
                                         l2120 59D6                                           l1080 3D8C  
                                         l1072 3CBA                                           l1240 2338  
                                         l1232 21F0                                           l1224 20A8  
                                         l1208 1F5A                                           l1401 02BA  
                                         l2121 5986                                           l1321 8540  
                                         l2201 8008                                           l1081 3DA4  
                                         l1073 3CD2                                           l1209 1E82  
                                         l1314 7FE2                                           l1306 7FC2  
                                         l1410 0464                                           l2122 59AE  
                                         l2114 58BA                                           l2202 7FFE  
                                         l2210 841E                                           l1090 3E9A  
                                         l1082 3DBC                                           l1066 3D02  
                                         l1074 3CEA                                           l1242 237C  
                                         l1234 2242                                           l1226 20FA  
                                         l1218 1FEA                                           l1411 04E4  
                                         l1403 02FA                                           l2115 58B6  
                                         l1091 3EB2                                           l1075 3E1C  
                                         l1083 3DD4                                           l1067 3C5A  
                                         l1308 7FCA                                           l1404 030E  
                                         l2140 5AE2                                           l2124 59D4  
                                         l1092 3ECA                                           l1084 3DEC  
                                         l1076 3D44                                           l1068 3D2C  
                                         l1260 27CE                                           l1252 2504  
                                         l1244 23C0                                           l1236 2294  
                                         l1228 214C                                           l2061 4716  
                                         l2053 4672                                           l1413 0512  
                                         l1405 0320                                           l2117 5900  
                                         l1093 3EE2                                           l1077 3E52  
                                         l1085 3E04                                           l1069 3C72  
                                         l1261 2586                                           l1253 24BA  
                                         l2062 46DA                                           l2054 466E  
                                         l2150 4020                                           l1406 0A16  
                                         l1414 055C                                           l2134 5A42  
                                         l2222 7D66                                           l1086 3F42  
                                         l1094 3EFA                                           l1078 3D5C  
                                         l1270 2872                                           l1246 2408  
                                         l1238 22E6                                           l1190 1C5E  
                                         l2071 47F0                                           l2151 403E  
                                         l1415 063E                                           l1407 03A8  
                                         l2127 5A0A                                           l2119 5928  
                                         l2215 7F62                                           l2223 7D96  
                                         l1095 3F12                                           l1087 3E6A  
                                         l1079 3D74                                           l1263 2642  
                                         l1255 24E0                                           l2072 47B6  
                                         l2144 3FD0                                           l1352 356A  
                                         l1440 084E                                           l1432 0770  
                                         l1424 06B6                                           l1408 03F6  
                                         l2136 5A86                                           l2128 59EC  
                                         l2216 7F5C                                           l1088 3F78  
                                         l1096 3F2A                                           l1248 2472  
                                         l1192 1CCC                                           l2081 4888  
                                         l2065 4792                                           l2145 3FCC  
                                         l1353 3472                                           l1441 07BA  
                                         l1433 0762                                           l2137 5AAA  
                                         l2209 8428                                           l2225 7DB2  
                                         l1089 3E82                                           l1249 244E  
                                         l2066 4770                                           l2058 46BA  
                                         l2250 6562                                           l2162 4236  
                                         l2146 3FE0                                           l1346 5702  
                                         l1450 090A                                           l1418 05D8  
                                         l2138 5AD4                                           l1290 7EA6  
                                         l2226 7DA2                                           l1258 254C  
                                         l1186 1BD0                                           l2075 47DA  
                                         l2067 477E                                           l2059 46B6  
                                         l2251 6556                                           l2155 41FE  
                                         l1443 0868                                           l1363 000E  
                                         l2139 5AE0                                           l2084 48AC  
                                         l2076 47DE                                           l2068 4782  
                                         l2164 427A                                           l2156 41E0  
                                         l2148 4010                                           l1356 3538  
                                         l1460 0AA4                                           l1452 0A0C  
                                         l1444 085A                                           l1436 0790  
                                         l1428 0728                                           l1372 0098  
                                         l1364 0020                                           l1268 2820  
                                         l1196 1D32                                           l1188 1C0C  
                                         l2093 48EC                                           l2261 65F0  
                                         l2253 65A0                                           l2165 4298  
                                         l2149 400C                                           l1349 57F2  
                                         l1357 36BE                                           l1453 09FE  
                                         l1437 0782                                           l1429 0742  
                                         l1293 7EB0                                           l2237 77F0  
                                         l2086 48C2                                           l2262 6622  
                                         l2254 6588                                           l2246 6522  
                                         l1470 0B5A                                           l1446 088C  
                                         l1390 022E                                           l1382 01EE  
                                         l1374 01E0                                           l1366 003C  
                                         l1710 73CC                                           l1294 7EBA  
                                         l2238 7788                                           l1198 1D96  
                                         l2079 4878                                           l2247 6532  
                                         l2167 42BC                                           l1359 3784  
                                         l1455 0A66                                           l1447 0890  
                                         l1383 0394                                           l1391 0228  
                                         l1375 01B4                                           l1367 0034  
                                         l1703 7378                                           l2239 77C4  
                                         l2096 4932                                           l2088 48CC  
                                         l2256 65D2                                           l2248 6550  
                                         l2168 42DA                                           l1480 0C10  
                                         l1472 0B7A                                           l1448 08A8  
                                         l1376 0160                                           l1712 743E  
                                         l1704 7372                                           l2192 80AA  
                                         l2257 65C6                                           l1473 0B9C  
                                         l1465 0B3E                                           l1457 0A8A  
                                         l1449 09F2                                           l1289 7EC4  
                                         l2193 80A4                                           l1730 790A  
                                         l1722 78B2                                           l1466 0AE6  
                                         l1394 0280                                           l1386 01F2  
                                         l1706 73BA                                           l1731 7918  
                                         l1723 78C2                                           l1491 0D60  
                                         l1475 0BBE                                           l1459 0B28  
                                         l1379 0326                                           l1395 0296  
                                         l2291 83F8                                           l2195 80C4  
              ??_ADCC_DischargeSampleCapacitor 0100                                           l1492 0C64  
                                         l1476 0BC6                                           l1388 01F6  
                                         l2196 80BA                                           l1821 7264  
                                         l1813 71D4                                           l1725 78E0  
                                         l1477 0BEA                                           l1397 02A6  
                                         l1389 021E                                           l1709 740A  
                                         l1822 7258                                           l1726 78D8  
                                         l1742 7BF2                                           l1494 0D78  
                                         l1478 0BF2                                           l1398 02A0  
                                         l1815 7240                                           l1743 7BFC  
                                         l1735 7BB8                                           l1495 0CE8  
                                         l1479 0C2A                                           l1824 7280  
                                         l1816 7230                                           l1744 7C0A  
                                         l1736 7BC4                                           l2296 776A  
                                         l1729 7900                                           l1489 0D7E  
                                         l2297 76F8                                           l1770 6A9A  
                                         l1738 7BDA                                           l1930 8728  
                                         l2298 7762                                           l1739 7BD2  
                                         l1772 6AD8                                           l1773 6AC8  
                                         l1790 8568                                           l1766 6A0A  
                                         l1870 67B2                           _ADCC_StartConversion 88DE  
                                         l1783 6D96                                           l1784 6DCA  
                                         l1960 7986                                           l1768 6A28  
                                         l1872 67DE                                           l1785 6E08  
                                         l1961 7994                                           l1769 6A6A  
                                         l1873 6818                                           l1786 6E46  
                                         l1970 7E0C                                           l1778 6AFC  
                                         l1882 68A0                                           l1874 6840  
                                         l1971 7E1A                                           l1779 6AF0  
                                         l1883 6894                                           l1956 7952  
                                         l1876 687C                                           l1957 7946  
                                         l1877 686C                                           l1966 7DE4  
                                         l1967 7DD8                                           ?_sin 0088  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC5  
                                         STR_2 FFB0                                           STR_3 FFB9  
                                         STR_4 F37D                                           STR_6 FFB0  
                                         STR_7 FFB9                                           STR_9 FFBD  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 019D                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR6 000FAF  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                                   i2___flge@ff1 0034  
                                 i2___flge@ff2 0038                                           _Irms 01BF  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write 80E6  
              ??_ADCC_HasAccumulatorOverflowed 0001                                           _Vrms 01BB  
                                         abs@a 0076                                           _acos 7C84  
                                         _fabs 83A0                                           _atan 62AA  
                                         _asin 4CBC                                           _atoi 7370  
                                         _main 7812                                           _line 0268  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005F                 __size_of_ADCC_ClearAccumulator 0006  
                                         _sqrt 52BA                                   i2___flneg@f1 002C  
                __end_of_ADCC_ClearAccumulator 892C                                           sin@f 0088  
                                         sin@y 008C                                           prodh 000FF4  
                                         prodl 000FF3                                           start 010A  
                              _timer5ReloadVal 01D7                                   i2___fltol@f1 006C  
                              ___fldiv@new_exp 014E                                __end_ofi2_scale 3C36  
                 __end_of_EUSART2_Transmit_ISR 8480                                __end_ofi2_putch 8902  
                                __CFG_CSWEN$ON 000000                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                       __size_ofi2_EUSART2_Write 004A  
                                        ??_abs 0078                                _timer7ReloadVal 01D9  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0124                               __end_of_HLVD_ISR 891A  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 87A6  
                     ?_terminal_textAttributes 01B2                              ??_TMR7_WriteTimer 0102  
                                        l17014 6E7E                                          l18002 0762  
                                        l18100 0AEA                                          l18008 0782  
                                        l18026 085A                                          l18202 7DA2  
                                        l18306 76F8                                          ?_acos 00A9  
                                        l18174 0D60                                          l18086 0AA8  
                                        l19054 7EDE                                          l19056 7EE8  
                                        ?_fabs 0030                                          l18464 7406  
                                        l17880 02BA                                          l18592 5AD4  
                                        l18832 25F2                                          l18816 2576  
                                        l18904 6C72                                          l18834 2642  
                                        l18826 25BC                                          l18666 1DDC  
                                        l17956 05AA                                          l17948 055C  
                                        l17876 02A0                                          l18676 1E2C  
                                ___fltol@sign1 0180                                          l17976 06BA  
                                        l18894 6C4C                                          ?_atan 007C  
                                        ?_asin 0091                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 011D                                __end_of___fladd 497E  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                              __end_of___fldiv 5AFE                                          _ADREF 000F58  
                              __end_of___awdiv 7922                                __end_of___flneg 857A  
                                        _ADPRE 000F5E                                          STR_10 FFC1  
                                        STR_11 FFF6                                          STR_12 FFCA  
                                        STR_20 FFC9                                          STR_13 FD51  
                                        STR_21 FFCC                                          STR_30 FF4D  
                                        STR_14 FFDF                                          STR_22 FFD2  
                                        STR_15 FFE5                                          STR_23 FFD8  
                                        STR_31 FFCF                                          STR_40 F646  
                                        STR_16 FFF1                                          STR_24 FFDE  
                                        STR_32 FFD5                                          STR_41 FE1A  
                                        STR_17 FFF9                                          STR_25 FFE4  
                                        STR_33 FFDB                                          STR_18 FFCA  
                                        STR_42 FFB0                                          STR_26 FFEA  
                                        STR_34 FFE1                                          STR_50 FFB5  
                                        STR_43 FFB9                                          STR_19 FFFB  
                                        STR_27 FFF0                                          STR_35 FFE7  
                                        STR_51 FDDD                                          STR_28 FFF0  
                                        STR_36 FFED                                          STR_44 FFA0  
                                        STR_60 FF67                                          STR_52 F96A  
                              __end_of___awmod 7C14                                          STR_29 FFFB  
                                        STR_45 FFB0                                          STR_37 FFF3  
                                        STR_61 FFA6                                          STR_53 FF5C  
                                        STR_38 FFF3                                          STR_46 FFB9  
                                        STR_62 FF94                                          STR_70 FD0F  
                                        STR_54 F5AD                                          STR_39 FFFD  
                                        STR_63 FF8D                                          STR_55 FF1D  
                                        STR_71 FE70                                          STR_47 FE50  
                                        STR_64 FEF4                                          STR_80 FDBA  
                                        STR_72 FD68                                          STR_48 F906  
                                        STR_56 F748                                          _ADRPT 000F66  
                                        STR_49 FF9A                                          STR_57 FF72  
                                        STR_65 FF02                                          STR_73 FDFF  
                                        STR_81 FB86                                          STR_82 FF2A  
                                        STR_66 FEBC                                          STR_90 FD7D  
                                        STR_58 F68B                                          STR_74 F649  
                                        STR_67 FD3D                                          STR_91 FBF0  
                                        STR_75 F9F5                                          STR_59 F866  
                                        STR_83 F7BD                                          STR_68 FF7C  
                                        STR_84 FECA                                          STR_92 FE9E  
                                        STR_76 FE30                                          STR_77 FB3C  
                                        STR_85 FB17                                          STR_69 F93A  
                                        STR_93 F7F7                                          STR_94 FEAD  
                                        STR_78 FE8F                                          STR_86 FCC3  
                                        STR_87 FC12                                          STR_79 FBAA  
                                        STR_95 FAC8                                          STR_96 FE60  
                                        STR_88 FD92                                __end_of___flmul 42F0  
                                        STR_89 FBCE                                          STR_97 FA9F  
                                        STR_98 FF50                                          STR_99 FA22  
                              __end_of___flsub 8256                                __end_of___fltol 7292  
                              __end_of___lldiv 79A6                                          ?_sqrt 006C  
                              ___awdiv@divisor 011F                                __end_of___llmod 7E2C  
                                        u23110 4232                                          u23200 78E4  
                                        u23050 402C                                          u23140 4288  
                                        u23060 41A2                                          u24020 02DC  
                                        u23150 42A6                                          _T5CLK 000FC6  
                                        u24200 06F8                                          u24120 0522  
                                        u24040 0356                                          u23401 67C2  
                                        u23065 4198                                          u24130 056E  
                                        u24027 02D2                                          u22700 4758  
                                        u23260 7BDE                                          u24300 0886  
                                        u24047 034C                                          u24160 05AA  
                                        _T5CON 000FC3                                          u22730 479A  
                                        u23610 71F2                                          u23530 6B02  
                                        u25050 5A3E                                          u23460 68A6  
                                        u24260 079E                                          u25220 1E2C  
                                        u23381 6796                                          u23710 7DE8  
                                        u23615 71E8                                          _T7CLK 000F33  
                                        u22680 4746                                          u25080 5A94  
                                        _T6CON 000FB1                                          u22690 4756  
                                        u23650 726A                                          u24290 0876  
                                        u25090 5AB8                                          u25170 1C9C  
                                        u22940 493E                                          u22860 48D0  
                                        u23900 0148                                          u25500 25E4  
                                        u24550 0C32                                          u25510 25F2  
                               __CFG_DEBUG$OFF 000000                                          u23680 7956  
                                        u24560 0C48                                          u23920 0198  
                                        u23840 005E                                          _T7CON 000F30  
                                        u22890 48E8                                          u23930 01D6  
                                        u23850 0086                                          u24810 7808  
                                        u23907 013E                                          u24580 0D90  
                                        u24740 8040                                          u24660 7F84  
                                        u23790 65DC                                          u24590 0DC0  
                                        u23870 00E2                                          u23927 018E  
                                        u23847 0054                                          u23960 025C  
                                        u23880 011E                                          u25640 6C72  
                                        u23937 01CC                                          u23857 007C  
                                        u24761 7E9C                                          u23970 0262  
                                        u23890 0126                                          u24690 772A  
                                        u25490 25BC                                          u24667 7F7A  
                                        _T6HLT 000FB2                                          u24597 0DB6  
                                        u23877 00D8                                          u23967 0252  
                                        u23887 0114                                          u24775 8390  
                   _ADCC_ADTI_InterruptHandler 025A                                          u25877 7826  
                                        i1l223 007C                                          i1l225 009C  
                                        i1l403 847A                                          i1l227 00A8  
                                        i1l404 8476                                          i1l229 00B2  
                                        i2l212 74B2                                          i2l214 74BE  
                                        i2l216 74C8                                          i1l640 86B6  
                                        i2l410 7544                                          i2l411 7566  
                                        i2l414 756A                                          i2l416 75BA  
                                        i2l409 7520                                          _T6TMR 000FAF  
                                        i2l391 819A                                          i2l392 81C0  
                                        i2l393 81BE                                          i1l953 8360  
                                        i2l714 87B8                                          _T6RST 000FB4  
                                        i2l388 8184                                          i2l389 8180  
                                        i2l972 2BA8                                          i2l964 29D0  
                              ___awdiv@counter 0121                                          i2l957 32E2  
                                        i2l973 2E9E                                          i2l965 2ADA  
                                        i2l990 32D4                                          i2l982 3004  
                                        i2l974 2DEC                                          i2l958 293E  
                                        i2l983 30E6                                          i2l975 2D04  
                                        i2l959 29C8                                          i2l968 2AE2  
                                        i2l977 2E44                                          i2l969 2BA0  
                                        i2l986 30EE                                          i2l987 32CC  
                                        i2l979 2FFC                                          _OSCEN 000E47  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 6B14                                          _TRISA 000F81  
                                        _TRISB 000F82                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a EADF  
                           __end_ofsin@coeff_b EB03                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                        _Imeas 01C3                                  __CFG_WRT3$OFF 000000  
                                __CFG_PWRTE$ON 000000                                  __CFG_WRT4$OFF 000000  
                                i2___fladd@grs 006B                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 84E8  
                             __end_of_TMR6_ISR 8650                               __end_of_TMR7_ISR 84B4  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                    ??_terminal_ringBufferPull 01B8                                __end_of_dpowers EA93  
                                        acos@x 00A9                                          fabs@d 0030  
                                   i2scale@scl 0051                                          _floor 6FA2  
                                        _frexp 7B28                                          _errno 0266  
                        ?_ADCC_StartConversion 0001                                          _scale 3312  
                              __end_of_isdigit 8730                                          atan@f 007C  
                                        atan@x 0084                                          atan@y 0080  
                                i2___fldiv@grs 0026                             __CFG_MCLRE$EXTMCLR 000000  
                                i2___fldiv@rem 0020                                          asin@x 0091  
                                        asin@y 00A1                                          atoi@a 0122  
                                        atoi@s 011D                                          _putch 887C  
                               __pbitbssCOMRAM 02F0                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                               __end_ofi2___flge 6FA2  
                                        sin@x2 0094                                          tablat 000FF5  
                             __end_ofi2___wmul 86EA                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                 __size_of_ADCC_GetFilterValue 0014                                          sqrt@a 006C  
                                        sqrt@i 0075                                          sqrt@p 007A  
                                        status 000FD8                                          wtemp6 0060  
                                i2___flmul@grs 003E                                __end_of_strncmp 7786  
                              __end_of_strncpy 7DC4                               __end_ofi2_fround 6060  
               ?_INTERRUPT_InterruptManagerLow 0001                             __size_ofi2___fladd 033E  
                           __size_ofi2___fldiv 02B4                             __size_ofi2___awdiv 0084  
                           __size_ofi2___flneg 002E                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0129                             __size_ofi2___flmul 0350  
                                i2printf@width 00AB                             __size_ofi2___flsub 0048  
                           __size_ofi2___fltol 00DE                             __size_ofi2___lldiv 0082  
                  ??_ADCPostProcessingCallback 005E                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf 1B92                       __size_of_HLVD_Initialize 0010  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 88C2  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 88B4  
                              _TMR5_Initialize 8132                                __initialization 7664  
                            i2___lldiv@divisor 0005                                   __end_of_acos 7CF2  
                                 __end_of_fabs 83DC                                   __end_of_atan 64E0  
                                 __end_of_asin 4FC0                                   __end_of_atoi 7448  
                                 __end_of_main 789C                              i2___lldiv@counter 000D  
                                 __end_of_sqrt 5582                                     i2printf@ap 0099  
                                   i2printf@cp 0095                          __end_of_ringBufferLUT 2932  
                               __CFG_SCANE$OFF 000000                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                                       ??_acos 005E                                         ??_fabs 0034  
                                       ??_atan 005E                                         ??_asin 005E  
                                       ??_atoi 011F                                         ??_main 0386  
                     _TMR5_SetInterruptHandler 88A6                                         ??_sqrt 0070  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 0060  
                         __size_of__tdiv_to_l_ 0134                                    ?i2___xxtofl 0005  
                       getUserID@initialOffset 0125                                _TMR6_Initialize 84E8  
                           _TRIAC_Firing_Angle 00F2                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 7D5C  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01E1                                         ?_floor 0076  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 016F  
                                       STR_100 FED8                                         _ADLTHL 000F6A  
                                       STR_101 FC8C                                         STR_102 FC6F  
                                       STR_110 F557                                         STR_103 FDEE  
                                       STR_111 F4F1                                         STR_120 FFAB  
                                       STR_104 FC32                                         STR_112 F9C7  
                                       STR_113 FB61                                         STR_105 F89C  
                                       STR_121 EB03                                         STR_106 FA4C  
                                       STR_122 F82F                                         STR_114 F6CB  
                                       _ADRESH 000F64                                         STR_130 FE10  
                                       STR_107 FF37                                         STR_123 F70A  
                                       STR_115 F602                                         STR_131 FE80  
                                       STR_140 FF86                                         STR_116 FE40  
                                       STR_108 FCDD                                         STR_124 FAF0  
                                       STR_132 FE20                                         STR_141 FDCC  
                                       STR_109 FCF6                                         STR_125 F999  
                                       STR_117 F783                                         STR_133 FDA7  
                                       STR_118 FEE6                                         STR_126 FC51  
                                       _ADRESL 000F63                                         STR_134 FA7F  
                                       STR_119 F8D1                                         STR_127 FF44  
                                       STR_135 FA76                                         STR_128 FF10  
                                       STR_136 FCA8                                         STR_129 FF7C  
                                       STR_137 FD53                                         STR_138 FD27  
                                       STR_139 FE10                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l2100 4C96                                         i2l2101 4C9E  
                                       i2l2102 4CA0                                         i2l2110 5B2E  
                                       i2l2111 5B2A                                         i2l2120 5C8A  
                                       i2l1400 10B0                                         i2l2121 5C3A  
                                       i2l1401 1084                                         i2l2122 5C62  
                                       i2l2114 5B6E                                         i2l1410 122C  
                                       i2l2115 5B6A                                         i2l1411 12AA  
                                       i2l1403 10C4                                         i2l2140 5D96  
                                       i2l2124 5C88                                         i2l1404 10D8  
                                       i2l2061 4A54                                         i2l2053 49B0  
                                       i2l2117 5BB4                                         i2l2045 4FF4  
                                       i2l1413 12D8                                         i2l1405 10EA  
                                       i2l2062 4A18                                         i2l2054 49AC  
                                       i2l2150 4370                                         i2l2134 5CF6  
                                       i2l2046 5112                                         i2l1406 17DC  
                                       i2l1414 1324                                         i2l2071 4B2E  
                                       i2l2151 438E                                         i2l2127 5CBE  
                                       i2l2119 5BDC                                         i2l2047 5182  
                                       i2l1415 1408                                         i2l1407 1172  
                                       i2l2072 4AF4                                         i2l2144 4320  
                                       i2l2136 5D3A                                         i2l2128 5CA0  
                                       i2l2048 52A8                                         i2l1352 39FA  
                                       i2l1440 1616                                         i2l1432 153A  
                                       i2l1424 1480                                         i2l1408 11C0  
                                       i2l2081 4BC6                                         i2l2065 4AD0  
                                       i2l2145 431C                                         i2l2137 5D5E  
                                       i2l1353 390A                                         i2l1441 1584  
                                       i2l1433 152C                                         i2l2066 4AAE  
                                       i2l2058 49F8                                         i2l2162 4586  
                                       i2l2146 4330                                         i2l2250 66B2  
                                       i2l2138 5D88                                         i2l1346 5F24  
                                       i2l1450 16D2                                         i2l1418 13A0  
                                       i2l2075 4B18                                         i2l2067 4ABC  
                                       i2l2059 49F4                                         i2l2155 454E  
                                       i2l2251 66A6                                         i2l2139 5D94  
                                       i2l1443 1630                                         i2l1363 0DDC  
                                       i2l2084 4BEA                                         i2l2076 4B1C  
                                       i2l2068 4AC0                                         i2l2164 45CA  
                                       i2l2156 4530                                         i2l2148 4360  
                                       i2l2180 5360                                         i2l1356 39CA  
                                       i2l1460 186A                                         i2l1452 17D2  
                                       i2l1444 1622                                         i2l1436 155A  
                                       i2l1428 14F2                                         i2l1372 0E66  
                                       i2l1364 0DEE                                         i2l2093 4C2A  
                                       i2l2165 45E8                                         i2l2149 435C  
                                       i2l2261 6740                                         i2l2253 66F0  
                                       i2l2181 538C                                         i2l1349 600C  
                                       i2l1357 3B46                                         i2l1453 17C4  
                                       i2l1437 154C                                         i2l1429 150C  
                                       i2l2086 4C00                                         i2l2262 6772  
                                       i2l2254 66D8                                         i2l2246 6672  
                                       i2l2270 700A                                         i2l2182 53EA  
                                       i2l1470 1920                                         i2l1446 1654  
                                       i2l1390 0FF8                                         i2l1382 0FB8  
                                       i2l1374 0FAA                                         i2l1366 0E0A  
                                       i2l2079 4BB6                                         i2l2167 460C  
                                       i2l2247 6682                                         i2l2271 70A2  
                                       i2l2183 5494                                         i2l2175 52FC  
                                       i2l1359 3C06                                         i2l1455 182C  
                                       i2l1447 1658                                         i2l1383 115E  
                                       i2l1391 0FF2                                         i2l1375 0F7E  
                                       i2l1367 0E02                                         i2l2096 4C70  
                                       i2l2088 4C0A                                         i2l2168 462A  
                                       i2l2256 6722                                         i2l2248 66A0  
                                       i2l2184 53F0                                         i2l1480 19D6  
                                       i2l1472 1940                                         i2l1448 1670  
                                       i2l1376 0F2C                                         i2l2257 6716  
                                       i2l2185 5436                                         i2l2177 530C  
                                       i2l1473 1962                                         i2l1465 1904  
                                       i2l1457 1850                                         i2l1449 17B8  
                                       i2l2186 545E                                         i2l2178 5326  
                                       i2l1730 7A12                                         i2l1722 79BA  
                                       i2l1466 18AC                                         i2l1394 104A  
                                       i2l1386 0FBC                                         i2l2267 6FEC  
                                       i2l1731 7A20                                         i2l1723 79CA  
                                       i2l1491 1B24                                         i2l1475 1984  
                                       i2l1459 18EE                                         i2l1379 10F0  
                                       i2l1395 1060                                         i2l1548 85F6  
                                       i2l2276 7B46                                         i2l2268 6FDA  
                                       i2l2188 5548                                         i2l1492 1A2A  
                                       i2l1476 198C                                         i2l1388 0FC0  
                                       i2l1821 7342                                         i2l1813 72B2  
                                       i2l1725 79E8                                         i2l1477 19B0  
                                       i2l1397 1070                                         i2l1389 0FE8  
                                       i2l1822 7336                                         i2l1670 64BA  
                                       i2l1646 4D16                                         i2l1726 79E0  
                                       i2l1742 7C62                                         i2l1494 1B3C  
                                       i2l1478 19B8                                         i2l1398 106A  
                                       i2l1815 731E                                         i2l1743 7C6C  
                                       i2l1735 7C28                                         i2l1495 1AAC  
                                       i2l1479 19F0                                         i2l1824 735E  
                                       i2l1816 730E                                         i2l1648 4E3E  
                                       i2l1744 7C7A                                         i2l1736 7C34  
                                       i2l1665 62EE                                         i2l1649 4F1E  
                                       i2l1729 7A08                                         i2l1489 1B42  
                                       i2l1762 83CA                                         i2l1770 6BC2  
                                       i2l1738 7C4A                                         i2l1930 8766  
                                       i2l1667 635A                                         i2l1739 7C42  
                                       i2l1756 7198                                         i2l1668 64A2  
                                       i2l1772 6C00                                         i2l1757 7100  
                                       i2l1773 6BF0                                         i2l1790 85C4  
                                       i2l1766 6B32                                         i2l1870 68E4  
                                       i2l1783 6EB6                                         i2l1784 6EEA  
                                       i2l1960 7A8C                                         i2l1768 6B50  
                                       i2l1872 6910                                         i2l1785 6F28  
                                       i2l1961 7A9A                                         i2l1769 6B92  
                                       i2l1873 694A                                         i2l1786 6F66  
                                       i2l1970 7E72                                         i2l1778 6C24  
                                       i2l1882 69D2                                         i2l1874 6972  
                                       i2l1971 7E80                                         i2l1779 6C18  
                                       i2l1883 69C6                                         i2l1956 7A58  
                                       i2l1876 69AE                                         i2l1957 7A4C  
                                       i2l1877 699E                                         i2l1966 7E4A  
                                       i2l1967 7E3E                                         _RG7PPS 000E89  
                                       _TABLAT 000FF5                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                      ??i2_scale 004D  
                      TMR7_WriteTimer@timerVal 0100                                         _OSCFRQ 000E49  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                               __end_of___xxtofl 6634  
        __end_of_ADCC_DischargeSampleCapacitor 8912         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor 890A                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 i2___fladd@aexp 0069  
                               i2___fladd@bexp 006A          __end_of_ADCC_HasAccumulatorOverflowed 88F8  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed 88EC  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize 804C  
                                 i2_scale$4100 004D                               __end_of__powers_ EA37  
              __end_of_terminal_ringBufferPull 6D60                                         ___flge 6D60  
                            _ADCC_ThresholdISR 8650                                      ??___fladd 0131  
                                       ___wmul 8600                                      ??___fldiv 0145  
                                    ??___awdiv 0121                                      ??___flneg 0129  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___flmul 015E                                      ??___flsub 0145  
                                    ??___fltol 017C                                      ??___lldiv 011F  
                                    ??___llmod 012C                             ?_ADCC_ThresholdISR 0001  
                     ??_terminal_setCursorHome 01B2                                         _fround 5582  
                                       clear_0 76BC                                         clear_1 76C8  
                                       clear_2 76D4                           _eusart2RxStringReady 07D8  
                             ___awdiv@quotient 0123                                 i2___fldiv@aexp 002B  
                               i2___fldiv@bexp 002A                                ___awmod@divisor 0119  
                               i2___fldiv@sign 001F                                ___awmod@counter 011B  
                                       _printf 0000                                         _strcat 809A  
                                       _strchr 83DC                                         _strcmp 7FFC  
                                       _strcpy 8414                                         _strlen 7F52  
                               i2___awdiv@sign 000C                                         _strstr 7786  
                                       floor@i 007A                                         floor@x 0076  
                 getCauseOfResetString@strings 02DB                               _background_color 01DC  
                              _ADCC_Initialize 7EF2                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 2932                                 _PMD_Initialize 876E  
                      FLASH_ReadWord@flashAddr 011B                              __end_ofi2___fladd 4CBC  
                                    ??_isdigit 0117                              __end_ofi2___fldiv 5DB2  
                            __end_ofi2___awdiv 7A2A                              __end_ofi2___flneg 85D6  
                            __end_ofi2___awmod 7C84                              __end_ofi2___flmul 4640  
                            __end_ofi2___flsub 829E                              __end_ofi2___fltol 7370  
                            __end_ofi2___lldiv 7AAC                                         sin@sgn 0098  
                          ??_ADCC_ThresholdISR 005E                              __end_ofi2___llmod 7E92  
                                 __mediumconst EA02                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion 8932                           _EUSART2_Transmit_ISR 844A  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117   ADCC_SetADTIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 00B5  
                               i2___flmul@aexp 003D                                 i2___flmul@bexp 0042  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 01B2                                 i2___flmul@sign 003C  
                               i2___flmul@temp 0047                                 i2___flmul@prod 0043  
                __size_of_INTERRUPT_Initialize 0014                                _eusart2RxBuffer 0200  
                                   ___flge@ff1 0117                                     ___flge@ff2 011B  
                      __end_of_TMR5_Initialize 817C                                   ___xxtofl@arg 0121  
                            __end_ofi2_isdigit 876E                                   ___xxtofl@exp 0120  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00DE  
                            _SYSTEM_Initialize 857A                                   ___xxtofl@val 0117  
         __end_of_TMR7_DefaultInterruptHandler 8938          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 8936                                _eusart2TxBuffer 0300  
                                   __accesstop 0060                        __end_of__initialization 76EC  
                               i2___fltol@exp1 0075                                     ___flneg@f1 0125  
                                    ?_HLVD_ISR 0001                                 i2printf@tmpval 009B  
                           ?_SYSTEM_Initialize 0001                                   eval_poly@res 0078  
                                ___rparam_used 000001                                     ___fltol@f1 0178  
                              _TMR5_WriteTimer 87A6                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                    __end_of_ADCC_ThresholdISR 8678                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 0380                            __size_ofi2___xxtofl 0150  
                   __end_of_getMajorRevisionID 83A0                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 01B2  
                                 __pidataBANK0 891A                                   __pidataBANK1 893E  
                                 __pidataBANK2 86EA                            ??_SYSTEM_Initialize 011C  
                                    ?_TMR5_ISR 0001                                      ?_TMR6_ISR 0001  
                                    ?_TMR7_ISR 0001                                  __end_of_floor 70B4  
                                __end_of_frexp 7BA2                                  __end_of_scale 37B6  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch 888A  
                            ??_HLVD_Initialize 0117                                    i2printf@idx 0094  
                     ??_terminal_clearTerminal 01B2                                    i2printf@len 0097  
                                  i2printf@exp 009F                                    i2printf@val 00A1  
                      __end_of_TMR6_Initialize 851A                       __size_of_getCauseOfReset 0052  
                       __end_of_PMD_Initialize 878A                          _getCauseOfResetString 851A  
                                    ?i2___flge 0034                           __end_of_EUSART2_Read 820E  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 68B8  
                                   __div_to_l_ 69EA                      __size_ofi2_TMR7_StopTimer 0006  
                           __size_of_getUserID 0044                                      ?i2_fround 0049  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
                                    ?i2_printf 0088                    ADCC_StartConversion@channel 0100  
                              __div_to_l_@exp1 0124                                        ??_floor 005E  
                              __div_to_l_@cntr 0123                                        ??_frexp 0007  
                                      ??_scale 0173                      __end_of_SYSTEM_Initialize 85A8  
                              __div_to_l_@quot 011F                                        ??_putch 0118  
                                 peakToRMS@RMS 00C5                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00FA                                  _eusart2TxHead 01E3  
                                   __pbssBANK0 00F6                                     __pbssBANK1 01BB  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01E0                                  _eusart2TxTail 01E2  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 809A  
                           __size_of_peakToRMS 024A                                     ??_HLVD_ISR 0100  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011B                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 869E                          ??_ADCC_StopConversion 0001  
                             ??_FVR_Initialize 0117                                 _peakToRMS$4085 00C1  
                               _peakToRMS$4086 00B9                                 _peakToRMS$4087 00BD  
                        ringBufferLUT@arg_buff 02D2                                    _Irms_offset 02F3  
                                      ?___flge 0117                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_2397 0382                                        ?___wmul 0117  
                        _currentMeasuredToPeak 7AAC                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 88A6                        __end_of_ADCC_Initialize 7F52  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                      ?_fround 016F                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61           __end_of_ADCC_SetADTIInterruptHandler 88DE  
        __size_of_ADCC_SetADTIInterruptHandler 000E                   _ADCC_SetADTIInterruptHandler 88D0  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 0182  
                              ?_PMD_Initialize 0001                            _ADCC_GetFilterValue 87F0  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 003C  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strcpy 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte 87C2  
                                      ?_strstr 0126                                     ??i2___wmul 0005  
                               _FLASH_ReadWord 82E2                                        u1700_41 68C8  
                                      u1702_41 68F4                                        i2l10838 6F9E  
                                      i2l14410 154C                                        i2l14404 152C  
                                      i2l11766 5D88                                        i2l14502 18B0  
                                      i2l14350 1324                                        i2l14282 1084  
                                      i2l14428 1622                                        i2l14358 1372  
                                      i2l14278 106A                                        i2l14378 1484  
                                      i2l14576 1B24                                        i2l14488 186E  
                                    ?___xxtofl 0117                                        _SP2BRGH 000EF4  
                                   ??i2_fround 004D                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 75C2                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 008A                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                       _acquisitionTimerCallback 882A  
                      __end_of_TMR5_WriteTimer 87C2               __size_of_terminal_textAttributes 0368  
                                      i2_scale 37B6                               ?_TMR5_Initialize 0001  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch 88F8  
                              i2___fladd@signs 0068           __end_of_terminal_textAttributesReset 882A  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 8818  
                            __end_of__npowers_ EA6B                                        __Hparam 0000  
                   __size_of_ADCC_ThresholdISR 0028                                     _scale$3897 0173  
                                      __Lparam 0000                              __end_of_getUserID 82E2  
                        _ADCC_ClearAccumulator 8926                     ??_TMR5_SetInterruptHandler 011A  
                               _adc_error_flag 02F0                                __size_of___flge 0122  
                                      ___fladd 4640                                        ___fldiv 5848  
                                      ___awdiv 789C                                        ___flneg 854A  
                                      ___awmod 7BA2                                        ___flmul 3F9E  
                                      ___flsub 820E                                        ___fltol 71B4  
                                      ___lldiv 7922                                __size_of___wmul 0028  
                                      ___llmod 7DC4                         __end_of_FLASH_ReadByte 87DC  
                       ?_getCauseOfResetString 0117                         __end_of_FLASH_ReadWord 8324  
                                      __pcinit 7664                              __end_of_eval_poly 71B4  
                              __size_of_fround 02C6                               ?_TMR6_Initialize 0001  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                      __ptext0 7812                                        __ptext1 883C  
                                      __ptext2 6C3C                                        __ptext3 1B92  
                                      __ptext4 8818                                        __ptext5 3C36  
                                      __ptext6 7D5C                                        __ptext7 809A  
                                      __ptext8 884C                                        __ptext9 7786  
                            __end_of_peakToRMS 62AA                                __size_of_printf 0DCE  
                currentMeasuredToPeak@Measured 0099                     ringBufferLUT@angle_degrees 02CE  
                ?_ADCC_SetADTIInterruptHandler 0117                                __size_of_strcat 004C  
                              __size_of_strchr 0038                                  i2_fround$4098 0051  
                                i2_fround$4099 004D                                __size_of_strcmp 0050  
                              __size_of_strcpy 0036                                __size_of_strlen 0058  
                            __end_of_hexpowers EAB3                         getCauseOfResetString@r 0119  
                                  ?__div_to_l_ 0117                                __size_of_strstr 008C  
                                      _dpowers EA6B                          _OSCILLATOR_Initialize 878A  
                       ??_EUSART2_Transmit_ISR 0100                                   __size_of_abs 002A  
                                 i2fround@prec 0055                                        _isdigit 870E  
                              atan@val_squared 0089                                   __size_of_sin 02FA  
                                 ??i2___xxtofl 0009                                     ??___xxtofl 011B  
                             ___awmod@dividend 0117                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 008D                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0117              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 0095                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 02D7                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002E                          i2EUSART2_Write@txData 0001  
                                      _strncmp 76F6                                 __pintcode_body 7448  
                                      _strncpy 7D5C                           end_of_initialization 76EC  
                      __end_of_TMR7_WriteTimer 86C4                        getDeviceIDString@F17550 02ED  
                       _terminal_setCursorHome 883C                          ??_ADCC_GetFilterValue 0003  
                                    _PCON0bits 000FD7                               ?_TMR7_Initialize 0001  
                                    i1u1090_20 8330                                      i1u1091_28 8334  
                                      int_func 7448                            i2___wmul@multiplier 0001  
                                    _T6RSTbits 000FB4                                      i1u2560_28 863C  
                                    i1u2562_28 84A0                        __size_of_TMR7_StopTimer 0006  
                                    i2u1312_40 4C7C                                      i2u1304_40 4C0E  
                                    i2u1307_40 4C26                                      i2u1323_40 437C  
                               i2___xxtofl@arg 000F                                      i1u2579_28 0086  
                                    i2u1332_40 45D8                                      i2u1324_40 44F2  
                                    i2u1324_45 44E8                                      i2u1333_40 45F6  
                                    i2u1510_40 7B6E                                      i2u1510_48 7B70  
                               i2___xxtofl@exp 000E                                      i2u1512_40 72D0  
                                    i2u1432_40 5CF2                                      i2u1512_45 72C6  
                                    i2u1329_40 4582                                 i2___xxtofl@val 0005  
                                    i2u1291_40 4AD8                                      i2u1435_40 5D48  
                                    i2u1516_40 7348                                      i2u1524_40 672C  
                                    i2u1436_40 5D6C                                      i2u1620_40 510E  
                                    i2u1621_40 5110                                      i2u1286_40 4A84  
                                    i2u1287_40 4A94                                      i2u1288_40 4A96  
                                    i2u1616_40 6FF8                                      i2u1712_40 7A5C  
                                    i2u1721_40 29BA                                      i2u1475_40 631A  
                                    i2u1731_40 2FEE                                      i2u1715_40 7E4E  
                                    i2u1643_40 7C4E                                      i2u1811_40 1372  
                                    i2u1476_40 631C                                      i2u1724_40 2ACC  
                                    i2u1708_40 69D8                                      i2u1733_40 30D8  
                                    i2u1637_40 79EC                                      i2u1821_40 1568  
                                    i2u1646_40 88F4                                      i2u1726_40 2B92  
                                    i2u1735_40 32BE                                      i2u1815_40 14C2  
                                    i2u1807_40 12EA                                      i2u1824_40 163E  
                                    i2u1808_40 1336                                      i2u1825_40 164E  
                                    i2u1850_40 19F8                                      i2u1851_40 1A0E  
                                    i2u2570_48 749C                                      i2u1780_40 0E54  
                                    i2u1780_47 0E4A                                      i2u1853_40 1B54  
                                    i2u2556_48 84D4                                      i2u1854_40 1B84  
                                    i2u1782_40 0EAE                                      i2u1854_47 1B7A  
                                    i2u1782_47 0EA4                                      i2u2558_48 8664  
                                    i2u1791_40 1026                                      i2u1783_40 0EEA  
                                    i2u1791_47 101C                                      i2u1783_47 0EE0  
                                    i2u1792_40 102C                                      i2u1784_40 0EF2  
                                    i2u1785_40 0F14                                      i2u1785_47 0F0A  
                              ___lldiv@divisor 011B                                      i2u1699_40 6C2A  
                                    i2u1787_40 0F62                                      i2u1779_40 0E2C  
                                    i2u1867_40 755A                                      i2u1787_47 0F58  
                                    i2u1779_47 0E22                                      i2u1788_40 0FA0  
                                    i2u1788_47 0F96                                      i2u1797_40 10A6  
                                    i2u1797_47 109C                                      i2u1799_40 1120  
                                    i2u1799_47 1116                                ___lldiv@counter 011F  
                           _EUSART2_Initialize 7CF2                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0099                    getDeviceIDString@inputDevID 0124  
                              i2_EUSART2_Write 817C                                  ??_getDeviceID 0124  
                                      printf@c 01B1                                        printf@f 0182  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 6784  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
               _ADCPostProcessingCallback$4090 00C9                 _ADCPostProcessingCallback$4091 00CD  
               _ADCPostProcessingCallback$4092 00D1                               ?_ADCC_Initialize 0001  
               _ADCPostProcessingCallback$4088 00D6                 _ADCPostProcessingCallback$4089 00DA  
                                      sqrt@grs 007B                                        sqrt@exp 007F  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                   _HLVDCON0bits 000EC2  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 0384  
                                ??__tdiv_to_l_ 011D                                ?_FLASH_ReadWord 011B  
                     _TMR6_SetInterruptHandler 8898                          _TMR5_InterruptHandler 0254  
                             i2_TMR7_StopTimer 892C                       ?_terminal_ringBufferPull 0001  
                                  ___fladd@grs 013C                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 011F                                    ___fldiv@grs 0150  
                                  ___fldiv@rem 014A                                i2___fltol@sign1 0074  
                                    i2___fladd 497E                                      i2___fldiv 5AFE  
                                    i2___awdiv 79A6                                      i2___flneg 85A8  
                                    i2___awmod 7C14                               __CFG_FEXTOSC$ECH 000000  
                                    i2___flmul 42F0                                      i2___flsub 8256  
                                    i2___fltol 7292                                      i2___lldiv 7A2A  
                                    i2___llmod 7E2C                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 011A                         _terminal_clearTerminal 885C  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 0DA0  
                                  ___flmul@grs 0165                                    printf@width 01AD  
                                 _EUSART2_Read 81C6                             i2___llmod@dividend 000E  
                              _HLVD_Initialize 886C                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit 8750  
                          __size_of__div_to_l_ 012A                              __size_of_HLVD_ISR 0008  
                                    _Avg_Power 0248                   __end_of_INTERRUPT_Initialize 87F0  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___flge 6E82                  __end_of_terminal_printNewline 885C  
                               __end_of___wmul 8628                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07D8  
                          __end_of_getDeviceID 8750                                 __end_of_fround 5848  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 007E                               i2___wmul@product 0005  
                               __end_of_printf 0DCE                                  i2_printf$4101 0090  
                           _getMajorRevisionID 8364                                 __end_of_strcat 80E6  
                               __end_of_strchr 8414                                 __end_of_strcmp 804C  
                                 i2printf@flag 00A9                                 __end_of_strcpy 844A  
                               __end_of_strlen 7FAA                                   i2printf@fval 00A5  
                               __end_of_strstr 7812                                   i2printf@prec 00AD  
                            __size_ofi2___flge 0120                            start_initialization 7664  
                                   eval_poly@d 0070                                     eval_poly@n 0072  
                                   eval_poly@x 006C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 893C  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 893A  
              __size_of_PIN_MANAGER_Initialize 00A2                            __end_of__tdiv_to_l_ 68B8  
                                  __end_of_abs 8600                                    __end_of_sin 52BA  
                                    i2printf@c 00AF                                      i2printf@f 0088  
                      _terminal_textAttributes 3C36                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0080                                     ?i2___fltol 006C  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                              __size_ofi2_printf 0DC4  
                        __end_of_EUSART2_Write 8132                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 02A9  
                      __end_ofi2_EUSART2_Write 81C6                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 01E4                               __CFG_LPBOREN$OFF 000000  
                                     ??___flge 011F                               ??_PMD_Initialize 0117  
                                     ??___wmul 011B                __size_of_heartbeatTimerCallback 0040  
                         ??_getMajorRevisionID 0122                                    __pdataBANK0 00F0  
                                  __pdataBANK1 01E8                                    __pdataBANK2 02DB  
                                     ??_fround 0173                                  _ringBufferLUT 1B92  
               ??_terminal_textAttributesReset 01B4                                       ??_printf 018C  
            getCauseOfReset@return_reset_cause 0117                              _POS3P3_ADC_Result 00F6  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strcpy 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 00B1                     __end_of_getMinorRevisionID 869E  
                                     ??_strstr 012A                                      ___fladd@a 012D  
                                    ___fladd@b 0129                                      _Vpk_const 02F7  
                                   fround@prec 017B                                 _eusart2RxCount 01DF  
                                ?i2__div_to_l_ 0001                                      ___fldiv@a 0141  
                                    ___fldiv@b 013D                                      _acos$4093 00AD  
                                    ___flmul@a 015A                                      ___flmul@b 0156  
                                    ___flsub@a 0141                                      ___flsub@b 013D  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 02A8                                  __pcstackBANK3 0380  
                            __size_of___xxtofl 0154                                   _isdigit$3181 0118  
                ?_TMR5_DefaultInterruptHandler 0001                        __end_of_HLVD_Initialize 887C  
                          EUSART2_Write@txData 0117                                   _load_on_time 0240  
                  __end_of_ADCC_StopConversion 8936                                       ?i2_scale 0049  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$4094 00A5  
                                    _asin$4095 009D                                      _asin$4096 0099  
                                     ?i2_putch 0001                                     sin@coeff_a EACB  
                                   sin@coeff_b EAF3                                 _TMR7_StopTimer 8920  
                        _TMR6_InterruptHandler 025D                                      __pnvBANK2 02FF  
                  getMinorRevisionID@REVID_RAW 0122                         _PIN_MANAGER_Initialize 75C2  
                      ??_getCauseOfResetString 0119                                      __pintcode 0008  
                                  _getDeviceID 8730                                  __pmediumconst EA02  
                                     ?___fladd 0129                                       ?___fldiv 013D  
                                     ?___awdiv 011D                                      __ptext100 2932  
                                    __ptext101 892C                                      __ptext110 8256  
                                    __ptext102 6060                                       ?___flneg 0125  
                                    __ptext111 85A8                                      __ptext103 7C84  
                                    __ptext120 497E                                      __ptext112 5AFE  
                                    __ptext104 4CBC                                      __ptext121 85D6  
                                    __ptext113 6FA2                                      __ptext105 52BA  
                                    __ptext122 8932                                      __ptext114 6634  
                                    __ptext106 62AA                                      __ptext123 88EC  
                                    __ptext115 7292                                      __ptext107 83A0  
                                    __ptext124 87F0                                      __ptext116 6E82  
                                    __ptext108 7AAC                                      __ptext125 8804  
                                    __ptext117 7B28                                      __ptext109 4FC0  
                                    __ptext126 0000                                      __ptext118 70B4  
                                    __ptext119 42F0                                       ?___awmod 0117  
                                     ?___flmul 0156                                       ?___flsub 013D  
                                     ?___fltol 0178               __end_of_TMR7_SetInterruptHandler 8898  
                                     ?___lldiv 0117                                       ?___llmod 0124  
                                    __npowers_ EA37                                _getCauseOfReset 7FAA  
                               ?_ringBufferLUT 01B4                                      _getUserID 829E  
            _EUSART2_TxDefaultInterruptHandler 0263                                    __pintcodelo 0018  
                         _VCC_overvoltage_flag 02F2                                    __tdiv_to_l_ 6784  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 011F  
                             _POS12_ADC_Result 01CF                                       _BAUD2CON 000EF7  
                                     ?_isdigit 0001                                    _dev_on_time 0244  
                                    _eval_poly 70B4                      ??_terminal_textAttributes 01B4  
                                    _attribute 01DE                                      _peakToRMS 6060  
                             __CFG_WDTE$NSLEEP 000000                        ?_terminal_setCursorHome 0001  
                                    _hexpowers EA93                         _heartbeatTimerCallback 8324  
                               _dimming_period 00F0                                    ??i2___fladd 0060  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0030                                    ??i2___awmod 0005  
                                  ??i2___flmul 0038                                 __size_of_floor 0112  
                                  ??i2___flsub 005E                                    ??i2___fltol 0070  
                               __size_of_frexp 007A                                    ??i2___lldiv 0009  
                               __size_of_scale 04A4                                    ??i2___llmod 0016  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 87DC  
                       __end_of_TMR7_StopTimer 8926                                       _T6CLKCON 000FB3  
       terminal_textAttributes@input_attribute 01B3                                       _HLVDCON0 000EC2  
                                     _HLVDCON1 000EC3                   __size_of_EUSART2_Receive_ISR 00AE  
                               ___wmul@product 011B                      currentMeasuredToPeak@Peak 00A1  
                             ?i2_EUSART2_Write 0001                                       _HLVD_ISR 8912  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0088                                       _IPR1bits 000E20  
                                     _IPR2bits 000E21                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                       __end_ofi2_TMR7_StopTimer 8932  
                                     _PIE2bits 000E2B                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                                     _PIR1bits 000E34                             __end_of__div_to_l_ 6B14  
                             ??_FLASH_ReadByte 011B                                       _PIR2bits 000E35  
                                     _PIR3bits 000E36                                       _PIR5bits 000E38  
                                     _PIR8bits 000E3B                               ??_FLASH_ReadWord 011F  
                   ??_TMR6_SetInterruptHandler 011A                       __size_of_TMR5_Initialize 004A  
                            i2___fldiv@new_exp 0024                                       _TMR5_ISR 84B4  
                                     _TMR6_ISR 8628                                       _TMR7_ISR 8480  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 0122                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                     i2___flge 6E82                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 0117                                       i2___wmul 86C4  
                      __size_of_FVR_Initialize 0008                                     printf@flag 01AB  
                                   printf@fval 01A3                                     printf@prec 01AF  
                                   ?_eval_poly 006C                 __end_of_terminal_setCursorHome 884C  
                            i2___awdiv@divisor 0009                                       i2_fround 5DB2  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 00B1  
                            i2___awdiv@counter 000B                    __end_of_ADCC_GetFilterValue 8804  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                                     i2_printf 0DCE                            __end_ofatan@coeff_a EACB  
                          __end_ofatan@coeff_b EAF3                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                                      copy_data0 7678  
                                    copy_data1 76AA                               ?_HLVD_Initialize 0001  
                        ?_INTERRUPT_Initialize 0001                            _current_adc_channel 01DB  
                           i2___awmod@dividend 0001                                ?_TMR7_StopTimer 0001  
                      ??_ADCC_ClearAccumulator 0100               __size_of_terminal_ringBufferPull 0124  
                             __size_ofi2_scale 0480                 ??_TMR5_DefaultInterruptHandler 0001  
                                 _next_channel 01E8                               __size_ofi2_putch 000A  
                                    frexp@eptr 0005                        __end_of_getCauseOfReset 7FFC  
              __end_of_terminal_textAttributes 3F9E                                     _ADSTATbits 000F65  
 ADCPostProcessingCallback@current_adc_channel 00D5                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 8818                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 88D0         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 88C2                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01B6  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 01DD  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___fladd 033E  
                             __size_of___fldiv 02B6                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00DE                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                                  _load_enable 02F1               __end_of_acquisitionTimerCallback 883C  
                                  _fround$3895 0177                                    _fround$3896 0173  
                        __end_ofi2__tdiv_to_l_ 69EA                       _TMR7_SetInterruptHandler 888A  
                        _TMR7_InterruptHandler 0257                             _ADC_Result_Scaling 0250  
      terminal_textAttributes@foreground_color 02A8                                       ___xxtofl 64E0  
                     __size_of_ADCC_Initialize 0060                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal 886C  
                             __size_of_isdigit 0022                                       __ptext10 76F6  
                                     __ptext11 7F52                                       __ptext20 82E2  
                                     __ptext12 83DC                                       __ptext21 87C2  
                                     __ptext13 8414                                       __ptext30 887C  
                                     __ptext22 851A                                       __ptext14 7FFC  
                                     __ptext31 80E6                                       __ptext23 7370  
                                     __ptext15 829E                                       __ptext40 8600  
                                     __ptext32 870E                                       __ptext24 5848  
                                     __ptext16 8678                                       __ptext41 7DC4  
                                     __ptext33 5582                                       __ptext25 8920  
                                     __ptext17 8364                                       __ptext50 804C  
                                     __ptext42 7922                                       __ptext34 3F9E  
                                     __ptext26 81C6                                       __ptext18 7E92  
                                     __ptext51 888A                                       __ptext43 71B4  
                                     __ptext35 7BA2                                       __ptext27 885C  
                                     __ptext19 8730                                       __ptext60 886C  
                                     __ptext52 84E8                                       __ptext44 820E  
                                     __ptext36 789C                                       __ptext28 0000  
                                     __ptext61 8902                                       __ptext53 8898  
                                     __ptext45 4640                                       __ptext37 6784  
                                     __ptext29 3312                                       __ptext70 882A  
                                     __ptext62 7CF2                                       __ptext54 8132  
                                     __ptext46 854A                                       __ptext38 69EA  
                                     __ptext71 88DE                                       __ptext63 88B4  
                                     __ptext55 88A6                                       __ptext47 6D60  
                                     __ptext39 64E0                                       __ptext72 890A  
                                     __ptext64 88C2                                       __ptext56 876E  
                                     __ptext48 7FAA                                       __ptext81 84B4  
                                     __ptext73 8926                                       __ptext65 7EF2  
                                     __ptext57 75C2                                       __ptext49 857A  
                                     __ptext90 5DB2                                       __ptext82 87A6  
                                     __ptext74 869E                                       __ptext66 88D0  
                                     __ptext58 878A                                       __ptext91 7C14  
                                     __ptext83 893A                                       __ptext75 8628  
                                     __ptext59 87DC                                       __ptext92 79A6  
                                     __ptext84 7514                                       __ptext76 8938  
                                     __ptext68 8480                                       __ptext93 68B8  
                                     __ptext85 0DCE                                       __ptext77 8324  
                                     __ptext69 8936                                       __ptext94 6B14  
                                     __ptext86 37B6                                       __ptext78 8912  
                                     __ptext95 86C4                                       __ptext87 88F8  
                                     __ptext79 844A                                       __ptext96 7E2C  
                                     __ptext88 817C                                       __ptext97 7A2A  
                                     __ptext89 8750                                       __ptext98 8650  
                                     __ptext99 893C                                       _sin$4097 0090  
                                     __powers_ EA03                            ringBufferLUT@userID 02D9  
                              _Temp_ADC_Offset 02FB                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 006A  
                                   strcpy@from 0119                                 i2_isdigit$3181 0002  
                              _Temp_ADC_Result 01CB                                  __size_of_acos 006E  
                                __size_of_fabs 003C                                  __size_of_atan 0236  
                                __size_of_asin 0304                                  __size_of_atoi 00D8  
                                __size_of_main 008A                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 02C8             __size_of_ADCPostProcessingCallback 09E0  
                         __end_ofi2__div_to_l_ 6C3C                                     strncmp@len 0121  
                   ?_ADCPostProcessingCallback 0001                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      ringBufferLUT@channel_name 02B8  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 88EC  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                      printf@idx 0196  
                                    printf@len 0199                                      printf@exp 01A1  
                                    printf@val 01A7                                    atan@coeff_a EAB3  
                                  atan@coeff_b EADF                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 884C                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0074                                    _NVMCON1bits 000F77  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                                     scale@scl 0177                                      sqrt@tfrac 0076  
         __end_of_TMR6_DefaultInterruptHandler 893A          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 8938           __end_of_ADCC_DefaultInterruptHandler 893E  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 893C  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                           _getMinorRevisionID 8678                               __tdiv_to_l_@quot 0120  
                              i2___xxtofl@sign 000D                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 02D5  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                                  _reset_cause 02FF                                      strncmp@s1 011D  
                                    strncmp@s2 011F                               ?_getCauseOfReset 0001  
                              _AVSS_ADC_Result 01D3              __end_of_ADCPostProcessingCallback 3312  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 011D  
                                    strncpy@to 0117                       __size_of_TMR7_WriteTimer 0026  
                                 ?_getDeviceID 0122                                       printf@ap 019B  
                                     printf@cp 0197                 __size_of_getCauseOfResetString 0030  
                __end_of_getCauseOfResetString 854A                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult 8804                 ?_EUSART2_SetRxInterruptHandler 0117  
                                 ?__tdiv_to_l_ 0117                         __size_of_EUSART2_Write 004C  
                          _EUSART2_Receive_ISR 7514                                       sqrt@frac 0085  
       __end_of_INTERRUPT_InterruptManagerHigh 7514        __size_of_INTERRUPT_InterruptManagerHigh 750C  
               _INTERRUPT_InterruptManagerHigh 0008                                       sqrt@sign 0074  
                  getMajorRevisionID@REVID_RAW 0125                                       sqrt@root 0081  
                            ??_TMR7_Initialize 011A                                 _FVR_Initialize 8902  
                                  _printf$3898 0192                                       strcat@cp 011B  
                                     strcat@to 0117                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 0117                                       strcmp@s2 0119  
                            ringBufferLUT@line 01B4                               ___lldiv@quotient 0120  
                                     strcpy@cp 011B                                       strlen@cp 011B  
                                     strcpy@to 0117                           ??_getMinorRevisionID 0122  
                            _getDeviceIDString 7E92                                       strstr@s1 0126  
                                     strstr@s2 0128                                     _TX2STAbits 000EF6  
                                ___fladd@signs 0139                             ?_getDeviceIDString 0124  
        __end_of_INTERRUPT_InterruptManagerLow 010A         __size_of_INTERRUPT_InterruptManagerLow 00F2  
                _INTERRUPT_InterruptManagerLow 0018                 ??_ADCC_SetADTIInterruptHandler 011A  
               __end_of_PIN_MANAGER_Initialize 7664                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 6C3C                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0012  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                          ??_getDeviceIDString 0126                              ?i2_TMR7_StopTimer 0001  
            _EUSART2_RxDefaultInterruptHandler 0260                 __size_of_currentMeasuredToPeak 007C  
                __end_of_currentMeasuredToPeak 7B28                   __size_of_ADCC_StopConversion 0004  
