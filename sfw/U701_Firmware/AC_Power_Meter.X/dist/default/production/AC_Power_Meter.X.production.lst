

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Nov 12 21:35:50 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   129                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1
   171                           	psect	text145,global,reloc=2,class=CODE,delta=1
   172                           	psect	text146,global,reloc=2,class=CODE,delta=1
   173                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text152,global,reloc=2,class=CODE,delta=1
   179                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text154,global,reloc=2,class=CODE,delta=1
   181                           	psect	text155,global,reloc=2,class=CODE,delta=1
   182                           	psect	text156,global,reloc=2,class=CODE,delta=1
   183                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text158,global,reloc=2,class=CODE,delta=1
   185                           	psect	text159,global,reloc=2,class=CODE,delta=1
   186                           	psect	text160,global,reloc=2,class=CODE,delta=1
   187                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   188                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   189                           	psect	text163,global,reloc=2,class=CODE,delta=1
   190                           	psect	text164,global,reloc=2,class=CODE,delta=1
   191                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=1
   192                           	psect	text166,global,reloc=2,class=CODE,delta=1
   193                           	psect	text167,global,reloc=2,class=CODE,delta=1
   194                           	psect	text168,global,reloc=2,class=CODE,delta=1
   195                           	psect	text169,global,reloc=2,class=CODE,delta=1
   196                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   197                           	psect	text170,global,reloc=2,class=CODE,delta=1
   198                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   199                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   200  0000                     
   201                           ; Version 1.45 (B)
   202                           ; Generated 30/01/2018 GMT
   203                           ; 
   204                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   205                           ; All rights reserved.
   206                           ; 
   207                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   208                           ; 
   209                           ; Redistribution and use in source and binary forms, with or without modification, are
   210                           ; permitted provided that the following conditions are met:
   211                           ; 
   212                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   213                           ;        conditions and the following disclaimer.
   214                           ; 
   215                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   216                           ;        of conditions and the following disclaimer in the documentation and/or other
   217                           ;        materials provided with the distribution.
   218                           ; 
   219                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   220                           ;        software without specific prior written permission.
   221                           ; 
   222                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   223                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   224                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   225                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   226                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   227                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   228                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   229                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   230                           ; 
   231                           ; 
   232                           ; Code-generator required, PIC18LF67K40 Definitions
   233                           ; 
   234                           ; SFR Addresses
   235  0000                     
   236                           	psect	idataBANK0
   237  01B1D0                     __pidataBANK0:
   238                           	opt stack 0
   239                           
   240                           ;initializer for _TRIAC_Firing_Angle
   241                           ;main.c: 73: volatile double FVR_ADC_Result;
   242                           ;main.c: 74: volatile double AVSS_ADC_Result;
   243                           ;main.c: 75: volatile double ADC_Result_Scaling;
   244                           ;main.c: 76: volatile double POS3P3_ADC_Result;
   245                           ;main.c: 77: volatile double POS12_ADC_Result;
   246                           ;main.c: 78: volatile double Temp_ADC_Result;
   247                           ;main.c: 79: volatile double Temp_ADC_Offset = 612.085;
   248                           ;main.c: 80: double Vpk_const = 169.7056274847714;
   249                           ;main.c: 81: volatile double Vpk;
   250                           ;main.c: 82: volatile double Ipk;
   251                           ;main.c: 83: volatile double Imeas;
   252                           ;main.c: 84: double Irms_offset = -0.113;
   253  01B1D0  F5C3               	dw	62915
   254  01B1D2  3FC8               	dw	16328
   255                           
   256                           	psect	idataBANK1
   257  01B1E4                     __pidataBANK1:
   258                           	opt stack 0
   259                           
   260                           ;initializer for _dimming_period
   261  01B1E4  7FEE               	dw	32750
   262                           
   263                           	psect	idataBANK2
   264  01AE7A                     __pidataBANK2:
   265                           	opt stack 0
   266                           
   267                           ;initializer for getCauseOfResetString@strings
   268  01AE7A  72                 	db	low STR_176
   269  01AE7B  FD                 	db	high STR_176
   270  01AE7C  F2                 	db	low STR_177
   271  01AE7D  FD                 	db	high STR_177
   272  01AE7E  82                 	db	low STR_178
   273  01AE7F  FD                 	db	high STR_178
   274  01AE80  B2                 	db	low STR_179
   275  01AE81  FC                 	db	high STR_179
   276  01AE82  61                 	db	low (STR_181+9)
   277  01AE83  F8                 	db	high (STR_181+9)
   278  01AE84  58                 	db	low STR_181
   279  01AE85  F8                 	db	high STR_181
   280  01AE86  9F                 	db	low STR_182
   281  01AE87  FB                 	db	high STR_182
   282  01AE88  4A                 	db	low STR_183
   283  01AE89  FC                 	db	high STR_183
   284  01AE8A  1E                 	db	low STR_184
   285  01AE8B  FC                 	db	high STR_184
   286                           
   287                           ;initializer for getDeviceIDString@F17550
   288  01AE8C  FA                 	db	low STR_173
   289  01AE8D  FE                 	db	high STR_173
   290  01AE8E  9F                 	db	low STR_174
   291  01AE8F  FE                 	db	high STR_174
   292  01AE90  6B                 	db	low STR_72
   293  01AE91  FF                 	db	high STR_72
   294                           
   295                           ;initializer for _Irms_offset
   296  01AE92  6C8B               	dw	27787
   297  01AE94  BDE7               	dw	48615
   298                           
   299                           ;initializer for _Vpk_const
   300                           ;main.c: 73: volatile double FVR_ADC_Result;
   301                           ;main.c: 74: volatile double AVSS_ADC_Result;
   302                           ;main.c: 75: volatile double ADC_Result_Scaling;
   303                           ;main.c: 76: volatile double POS3P3_ADC_Result;
   304                           ;main.c: 77: volatile double POS12_ADC_Result;
   305                           ;main.c: 78: volatile double Temp_ADC_Result;
   306                           ;main.c: 79: volatile double Temp_ADC_Offset = 612.085;
   307  01AE96  B4A4               	dw	46244
   308  01AE98  4329               	dw	17193
   309                           
   310                           ;initializer for _Temp_ADC_Offset
   311                           ;main.c: 73: volatile double FVR_ADC_Result;
   312                           ;main.c: 74: volatile double AVSS_ADC_Result;
   313                           ;main.c: 75: volatile double ADC_Result_Scaling;
   314                           ;main.c: 76: volatile double POS3P3_ADC_Result;
   315                           ;main.c: 77: volatile double POS12_ADC_Result;
   316                           ;main.c: 78: volatile double Temp_ADC_Result;
   317  01AE9A  0571               	dw	1393
   318  01AE9C  4419               	dw	17433
   319                           
   320                           ;initializer for _next_channel
   321  01AE9E  3C                 	db	60
   322                           
   323                           	psect	mediumconst
   324  00CF4C                     __pmediumconst:
   325                           	opt stack 0
   326  00CF4C  00                 	db	0
   327  00CF4D                     __powers_:
   328                           	opt stack 0
   329  00CF4D  0000               	dw	0
   330  00CF4F  3F80               	dw	16256
   331  00CF51  0000               	dw	0
   332  00CF53  4120               	dw	16672
   333  00CF55  0000               	dw	0
   334  00CF57  42C8               	dw	17096
   335  00CF59  0000               	dw	0
   336  00CF5B  447A               	dw	17530
   337  00CF5D  4000               	dw	16384
   338  00CF5F  461C               	dw	17948
   339  00CF61  5000               	dw	20480
   340  00CF63  47C3               	dw	18371
   341  00CF65  2400               	dw	9216
   342  00CF67  4974               	dw	18804
   343  00CF69  9680               	dw	38528
   344  00CF6B  4B18               	dw	19224
   345  00CF6D  BC20               	dw	48160
   346  00CF6F  4CBE               	dw	19646
   347  00CF71  6B28               	dw	27432
   348  00CF73  4E6E               	dw	20078
   349  00CF75  02F9               	dw	761
   350  00CF77  5015               	dw	20501
   351  00CF79  78EC               	dw	30956
   352  00CF7B  60AD               	dw	24749
   353  00CF7D  F2CA               	dw	62154
   354  00CF7F  7149               	dw	29001
   355  00CF81                     __end_of__powers_:
   356                           	opt stack 0
   357  00CF81                     __npowers_:
   358                           	opt stack 0
   359  00CF81  0000               	dw	0
   360  00CF83  3F80               	dw	16256
   361  00CF85  CCCD               	dw	52429
   362  00CF87  3DCC               	dw	15820
   363  00CF89  D70A               	dw	55050
   364  00CF8B  3C23               	dw	15395
   365  00CF8D  126F               	dw	4719
   366  00CF8F  3A83               	dw	14979
   367  00CF91  B717               	dw	46871
   368  00CF93  38D1               	dw	14545
   369  00CF95  C5AC               	dw	50604
   370  00CF97  3727               	dw	14119
   371  00CF99  37BD               	dw	14269
   372  00CF9B  3586               	dw	13702
   373  00CF9D  BF95               	dw	49045
   374  00CF9F  33D6               	dw	13270
   375  00CFA1  CC77               	dw	52343
   376  00CFA3  322B               	dw	12843
   377  00CFA5  705F               	dw	28767
   378  00CFA7  3089               	dw	12425
   379  00CFA9  E6FF               	dw	59135
   380  00CFAB  2EDB               	dw	11995
   381  00CFAD  E508               	dw	58632
   382  00CFAF  1E3C               	dw	7740
   383  00CFB1  4260               	dw	16992
   384  00CFB3  0DA2               	dw	3490
   385  00CFB5                     __end_of__npowers_:
   386                           	opt stack 0
   387  00CFB5                     _dpowers:
   388                           	opt stack 0
   389  00CFB5  0001               	dw	1
   390  00CFB7  0000               	dw	0
   391  00CFB9  000A               	dw	10
   392  00CFBB  0000               	dw	0
   393  00CFBD  0064               	dw	100
   394  00CFBF  0000               	dw	0
   395  00CFC1  03E8               	dw	1000
   396  00CFC3  0000               	dw	0
   397  00CFC5  2710               	dw	10000
   398  00CFC7  0000               	dw	0
   399  00CFC9  86A0               	dw	34464
   400  00CFCB  0001               	dw	1
   401  00CFCD  4240               	dw	16960
   402  00CFCF  000F               	dw	15
   403  00CFD1  9680               	dw	38528
   404  00CFD3  0098               	dw	152
   405  00CFD5  E100               	dw	57600
   406  00CFD7  05F5               	dw	1525
   407  00CFD9  CA00               	dw	51712
   408  00CFDB  3B9A               	dw	15258
   409  00CFDD                     __end_of_dpowers:
   410                           	opt stack 0
   411  00CFDD                     _hexpowers:
   412                           	opt stack 0
   413  00CFDD  0001               	dw	1
   414  00CFDF  0000               	dw	0
   415  00CFE1  0010               	dw	16
   416  00CFE3  0000               	dw	0
   417  00CFE5  0100               	dw	256
   418  00CFE7  0000               	dw	0
   419  00CFE9  1000               	dw	4096
   420  00CFEB  0000               	dw	0
   421  00CFED  0000               	dw	0
   422  00CFEF  0001               	dw	1
   423  00CFF1  0000               	dw	0
   424  00CFF3  0010               	dw	16
   425  00CFF5  0000               	dw	0
   426  00CFF7  0100               	dw	256
   427  00CFF9  0000               	dw	0
   428  00CFFB  1000               	dw	4096
   429  00CFFD                     __end_of_hexpowers:
   430                           	opt stack 0
   431  00CFFD                     _max_FVR_ADC_Result_address:
   432                           	opt stack 0
   433  00CFFD  0014               	dw	20
   434  00CFFF                     __end_of_max_FVR_ADC_Result_address:
   435                           	opt stack 0
   436  00CFFF                     _max_Temp_ADC_Result_address:
   437                           	opt stack 0
   438  00CFFF  0010               	dw	16
   439  00D001                     __end_of_max_Temp_ADC_Result_address:
   440                           	opt stack 0
   441  00D001                     _max_POS12_ADC_Result_address:
   442                           	opt stack 0
   443  00D001  000C               	dw	12
   444  00D003                     __end_of_max_POS12_ADC_Result_address:
   445                           	opt stack 0
   446  00D003                     _max_POS3P3_ADC_Result_address:
   447                           	opt stack 0
   448  00D003  0008               	dw	8
   449  00D005                     __end_of_max_POS3P3_ADC_Result_address:
   450                           	opt stack 0
   451  00D005                     _max_Power_address:
   452                           	opt stack 0
   453  00D005  0004               	dw	4
   454  00D007                     __end_of_max_Power_address:
   455                           	opt stack 0
   456  00D007                     _max_Irms_address:
   457                           	opt stack 0
   458  00D007  0000               	dw	0
   459  00D009                     __end_of_max_Irms_address:
   460                           	opt stack 0
   461  00D009                     _Total_Energy_address:
   462                           	opt stack 0
   463  00D009  0018               	dw	24
   464  00D00B                     __end_of_Total_Energy_address:
   465                           	opt stack 0
   466  00D00B                     _OledFont:
   467                           	opt stack 0
   468  00D00B  00                 	db	0
   469  00D00C  00                 	db	0
   470  00D00D  00                 	db	0
   471  00D00E  00                 	db	0
   472  00D00F  00                 	db	0
   473  00D010  00                 	db	0
   474  00D011  00                 	db	0
   475  00D012  00                 	db	0
   476  00D013  00                 	db	0
   477  00D014  00                 	db	0
   478  00D015  5F                 	db	95
   479  00D016  00                 	db	0
   480  00D017  00                 	db	0
   481  00D018  00                 	db	0
   482  00D019  00                 	db	0
   483  00D01A  00                 	db	0
   484  00D01B  00                 	db	0
   485  00D01C  00                 	db	0
   486  00D01D  07                 	db	7
   487  00D01E  00                 	db	0
   488  00D01F  07                 	db	7
   489  00D020  00                 	db	0
   490  00D021  00                 	db	0
   491  00D022  00                 	db	0
   492  00D023  00                 	db	0
   493  00D024  14                 	db	20
   494  00D025  7F                 	db	127
   495  00D026  14                 	db	20
   496  00D027  7F                 	db	127
   497  00D028  14                 	db	20
   498  00D029  00                 	db	0
   499  00D02A  00                 	db	0
   500  00D02B  00                 	db	0
   501  00D02C  24                 	db	36
   502  00D02D  2A                 	db	42
   503  00D02E  7F                 	db	127
   504  00D02F  2A                 	db	42
   505  00D030  12                 	db	18
   506  00D031  00                 	db	0
   507  00D032  00                 	db	0
   508  00D033  00                 	db	0
   509  00D034  23                 	db	35
   510  00D035  13                 	db	19
   511  00D036  08                 	db	8
   512  00D037  64                 	db	100
   513  00D038  62                 	db	98
   514  00D039  00                 	db	0
   515  00D03A  00                 	db	0
   516  00D03B  00                 	db	0
   517  00D03C  36                 	db	54
   518  00D03D  49                 	db	73
   519  00D03E  55                 	db	85
   520  00D03F  22                 	db	34
   521  00D040  50                 	db	80
   522  00D041  00                 	db	0
   523  00D042  00                 	db	0
   524  00D043  00                 	db	0
   525  00D044  00                 	db	0
   526  00D045  05                 	db	5
   527  00D046  03                 	db	3
   528  00D047  00                 	db	0
   529  00D048  00                 	db	0
   530  00D049  00                 	db	0
   531  00D04A  00                 	db	0
   532  00D04B  00                 	db	0
   533  00D04C  1C                 	db	28
   534  00D04D  22                 	db	34
   535  00D04E  41                 	db	65
   536  00D04F  00                 	db	0
   537  00D050  00                 	db	0
   538  00D051  00                 	db	0
   539  00D052  00                 	db	0
   540  00D053  00                 	db	0
   541  00D054  41                 	db	65
   542  00D055  22                 	db	34
   543  00D056  1C                 	db	28
   544  00D057  00                 	db	0
   545  00D058  00                 	db	0
   546  00D059  00                 	db	0
   547  00D05A  00                 	db	0
   548  00D05B  00                 	db	0
   549  00D05C  08                 	db	8
   550  00D05D  2A                 	db	42
   551  00D05E  1C                 	db	28
   552  00D05F  2A                 	db	42
   553  00D060  08                 	db	8
   554  00D061  00                 	db	0
   555  00D062  00                 	db	0
   556  00D063  00                 	db	0
   557  00D064  08                 	db	8
   558  00D065  08                 	db	8
   559  00D066  3E                 	db	62
   560  00D067  08                 	db	8
   561  00D068  08                 	db	8
   562  00D069  00                 	db	0
   563  00D06A  00                 	db	0
   564  00D06B  00                 	db	0
   565  00D06C  A0                 	db	160
   566  00D06D  60                 	db	96
   567  00D06E  00                 	db	0
   568  00D06F  00                 	db	0
   569  00D070  00                 	db	0
   570  00D071  00                 	db	0
   571  00D072  00                 	db	0
   572  00D073  00                 	db	0
   573  00D074  08                 	db	8
   574  00D075  08                 	db	8
   575  00D076  08                 	db	8
   576  00D077  08                 	db	8
   577  00D078  08                 	db	8
   578  00D079  00                 	db	0
   579  00D07A  00                 	db	0
   580  00D07B  00                 	db	0
   581  00D07C  60                 	db	96
   582  00D07D  60                 	db	96
   583  00D07E  00                 	db	0
   584  00D07F  00                 	db	0
   585  00D080  00                 	db	0
   586  00D081  00                 	db	0
   587  00D082  00                 	db	0
   588  00D083  00                 	db	0
   589  00D084  20                 	db	32
   590  00D085  10                 	db	16
   591  00D086  08                 	db	8
   592  00D087  04                 	db	4
   593  00D088  02                 	db	2
   594  00D089  00                 	db	0
   595  00D08A  00                 	db	0
   596  00D08B  00                 	db	0
   597  00D08C  3E                 	db	62
   598  00D08D  51                 	db	81
   599  00D08E  49                 	db	73
   600  00D08F  45                 	db	69
   601  00D090  3E                 	db	62
   602  00D091  00                 	db	0
   603  00D092  00                 	db	0
   604  00D093  00                 	db	0
   605  00D094  00                 	db	0
   606  00D095  42                 	db	66
   607  00D096  7F                 	db	127
   608  00D097  40                 	db	64
   609  00D098  00                 	db	0
   610  00D099  00                 	db	0
   611  00D09A  00                 	db	0
   612  00D09B  00                 	db	0
   613  00D09C  62                 	db	98
   614  00D09D  51                 	db	81
   615  00D09E  49                 	db	73
   616  00D09F  49                 	db	73
   617  00D0A0  46                 	db	70
   618  00D0A1  00                 	db	0
   619  00D0A2  00                 	db	0
   620  00D0A3  00                 	db	0
   621  00D0A4  22                 	db	34
   622  00D0A5  41                 	db	65
   623  00D0A6  49                 	db	73
   624  00D0A7  49                 	db	73
   625  00D0A8  36                 	db	54
   626  00D0A9  00                 	db	0
   627  00D0AA  00                 	db	0
   628  00D0AB  00                 	db	0
   629  00D0AC  18                 	db	24
   630  00D0AD  14                 	db	20
   631  00D0AE  12                 	db	18
   632  00D0AF  7F                 	db	127
   633  00D0B0  10                 	db	16
   634  00D0B1  00                 	db	0
   635  00D0B2  00                 	db	0
   636  00D0B3  00                 	db	0
   637  00D0B4  27                 	db	39
   638  00D0B5  45                 	db	69
   639  00D0B6  45                 	db	69
   640  00D0B7  45                 	db	69
   641  00D0B8  39                 	db	57
   642  00D0B9  00                 	db	0
   643  00D0BA  00                 	db	0
   644  00D0BB  00                 	db	0
   645  00D0BC  3C                 	db	60
   646  00D0BD  4A                 	db	74
   647  00D0BE  49                 	db	73
   648  00D0BF  49                 	db	73
   649  00D0C0  30                 	db	48
   650  00D0C1  00                 	db	0
   651  00D0C2  00                 	db	0
   652  00D0C3  00                 	db	0
   653  00D0C4  01                 	db	1
   654  00D0C5  71                 	db	113
   655  00D0C6  09                 	db	9
   656  00D0C7  05                 	db	5
   657  00D0C8  03                 	db	3
   658  00D0C9  00                 	db	0
   659  00D0CA  00                 	db	0
   660  00D0CB  00                 	db	0
   661  00D0CC  36                 	db	54
   662  00D0CD  49                 	db	73
   663  00D0CE  49                 	db	73
   664  00D0CF  49                 	db	73
   665  00D0D0  36                 	db	54
   666  00D0D1  00                 	db	0
   667  00D0D2  00                 	db	0
   668  00D0D3  00                 	db	0
   669  00D0D4  06                 	db	6
   670  00D0D5  49                 	db	73
   671  00D0D6  49                 	db	73
   672  00D0D7  29                 	db	41
   673  00D0D8  1E                 	db	30
   674  00D0D9  00                 	db	0
   675  00D0DA  00                 	db	0
   676  00D0DB  00                 	db	0
   677  00D0DC  00                 	db	0
   678  00D0DD  36                 	db	54
   679  00D0DE  36                 	db	54
   680  00D0DF  00                 	db	0
   681  00D0E0  00                 	db	0
   682  00D0E1  00                 	db	0
   683  00D0E2  00                 	db	0
   684  00D0E3  00                 	db	0
   685  00D0E4  00                 	db	0
   686  00D0E5  AC                 	db	172
   687  00D0E6  6C                 	db	108
   688  00D0E7  00                 	db	0
   689  00D0E8  00                 	db	0
   690  00D0E9  00                 	db	0
   691  00D0EA  00                 	db	0
   692  00D0EB  00                 	db	0
   693  00D0EC  08                 	db	8
   694  00D0ED  14                 	db	20
   695  00D0EE  22                 	db	34
   696  00D0EF  41                 	db	65
   697  00D0F0  00                 	db	0
   698  00D0F1  00                 	db	0
   699  00D0F2  00                 	db	0
   700  00D0F3  00                 	db	0
   701  00D0F4  14                 	db	20
   702  00D0F5  14                 	db	20
   703  00D0F6  14                 	db	20
   704  00D0F7  14                 	db	20
   705  00D0F8  14                 	db	20
   706  00D0F9  00                 	db	0
   707  00D0FA  00                 	db	0
   708  00D0FB  00                 	db	0
   709  00D0FC  41                 	db	65
   710  00D0FD  22                 	db	34
   711  00D0FE  14                 	db	20
   712  00D0FF  08                 	db	8
   713  00D100  00                 	db	0
   714  00D101  00                 	db	0
   715  00D102  00                 	db	0
   716  00D103  00                 	db	0
   717  00D104  02                 	db	2
   718  00D105  01                 	db	1
   719  00D106  51                 	db	81
   720  00D107  09                 	db	9
   721  00D108  06                 	db	6
   722  00D109  00                 	db	0
   723  00D10A  00                 	db	0
   724  00D10B  00                 	db	0
   725  00D10C  32                 	db	50
   726  00D10D  49                 	db	73
   727  00D10E  79                 	db	121
   728  00D10F  41                 	db	65
   729  00D110  3E                 	db	62
   730  00D111  00                 	db	0
   731  00D112  00                 	db	0
   732  00D113  00                 	db	0
   733  00D114  7E                 	db	126
   734  00D115  09                 	db	9
   735  00D116  09                 	db	9
   736  00D117  09                 	db	9
   737  00D118  7E                 	db	126
   738  00D119  00                 	db	0
   739  00D11A  00                 	db	0
   740  00D11B  00                 	db	0
   741  00D11C  7F                 	db	127
   742  00D11D  49                 	db	73
   743  00D11E  49                 	db	73
   744  00D11F  49                 	db	73
   745  00D120  36                 	db	54
   746  00D121  00                 	db	0
   747  00D122  00                 	db	0
   748  00D123  00                 	db	0
   749  00D124  3E                 	db	62
   750  00D125  41                 	db	65
   751  00D126  41                 	db	65
   752  00D127  41                 	db	65
   753  00D128  22                 	db	34
   754  00D129  00                 	db	0
   755  00D12A  00                 	db	0
   756  00D12B  00                 	db	0
   757  00D12C  7F                 	db	127
   758  00D12D  41                 	db	65
   759  00D12E  41                 	db	65
   760  00D12F  22                 	db	34
   761  00D130  1C                 	db	28
   762  00D131  00                 	db	0
   763  00D132  00                 	db	0
   764  00D133  00                 	db	0
   765  00D134  7F                 	db	127
   766  00D135  49                 	db	73
   767  00D136  49                 	db	73
   768  00D137  49                 	db	73
   769  00D138  41                 	db	65
   770  00D139  00                 	db	0
   771  00D13A  00                 	db	0
   772  00D13B  00                 	db	0
   773  00D13C  7F                 	db	127
   774  00D13D  09                 	db	9
   775  00D13E  09                 	db	9
   776  00D13F  09                 	db	9
   777  00D140  01                 	db	1
   778  00D141  00                 	db	0
   779  00D142  00                 	db	0
   780  00D143  00                 	db	0
   781  00D144  3E                 	db	62
   782  00D145  41                 	db	65
   783  00D146  41                 	db	65
   784  00D147  51                 	db	81
   785  00D148  72                 	db	114
   786  00D149  00                 	db	0
   787  00D14A  00                 	db	0
   788  00D14B  00                 	db	0
   789  00D14C  7F                 	db	127
   790  00D14D  08                 	db	8
   791  00D14E  08                 	db	8
   792  00D14F  08                 	db	8
   793  00D150  7F                 	db	127
   794  00D151  00                 	db	0
   795  00D152  00                 	db	0
   796  00D153  00                 	db	0
   797  00D154  41                 	db	65
   798  00D155  7F                 	db	127
   799  00D156  41                 	db	65
   800  00D157  00                 	db	0
   801  00D158  00                 	db	0
   802  00D159  00                 	db	0
   803  00D15A  00                 	db	0
   804  00D15B  00                 	db	0
   805  00D15C  20                 	db	32
   806  00D15D  40                 	db	64
   807  00D15E  41                 	db	65
   808  00D15F  3F                 	db	63
   809  00D160  01                 	db	1
   810  00D161  00                 	db	0
   811  00D162  00                 	db	0
   812  00D163  00                 	db	0
   813  00D164  7F                 	db	127
   814  00D165  08                 	db	8
   815  00D166  14                 	db	20
   816  00D167  22                 	db	34
   817  00D168  41                 	db	65
   818  00D169  00                 	db	0
   819  00D16A  00                 	db	0
   820  00D16B  00                 	db	0
   821  00D16C  7F                 	db	127
   822  00D16D  40                 	db	64
   823  00D16E  40                 	db	64
   824  00D16F  40                 	db	64
   825  00D170  40                 	db	64
   826  00D171  00                 	db	0
   827  00D172  00                 	db	0
   828  00D173  00                 	db	0
   829  00D174  7F                 	db	127
   830  00D175  02                 	db	2
   831  00D176  0C                 	db	12
   832  00D177  02                 	db	2
   833  00D178  7F                 	db	127
   834  00D179  00                 	db	0
   835  00D17A  00                 	db	0
   836  00D17B  00                 	db	0
   837  00D17C  7F                 	db	127
   838  00D17D  04                 	db	4
   839  00D17E  08                 	db	8
   840  00D17F  10                 	db	16
   841  00D180  7F                 	db	127
   842  00D181  00                 	db	0
   843  00D182  00                 	db	0
   844  00D183  00                 	db	0
   845  00D184  3E                 	db	62
   846  00D185  41                 	db	65
   847  00D186  41                 	db	65
   848  00D187  41                 	db	65
   849  00D188  3E                 	db	62
   850  00D189  00                 	db	0
   851  00D18A  00                 	db	0
   852  00D18B  00                 	db	0
   853  00D18C  7F                 	db	127
   854  00D18D  09                 	db	9
   855  00D18E  09                 	db	9
   856  00D18F  09                 	db	9
   857  00D190  06                 	db	6
   858  00D191  00                 	db	0
   859  00D192  00                 	db	0
   860  00D193  00                 	db	0
   861  00D194  3E                 	db	62
   862  00D195  41                 	db	65
   863  00D196  51                 	db	81
   864  00D197  21                 	db	33
   865  00D198  5E                 	db	94
   866  00D199  00                 	db	0
   867  00D19A  00                 	db	0
   868  00D19B  00                 	db	0
   869  00D19C  7F                 	db	127
   870  00D19D  09                 	db	9
   871  00D19E  19                 	db	25
   872  00D19F  29                 	db	41
   873  00D1A0  46                 	db	70
   874  00D1A1  00                 	db	0
   875  00D1A2  00                 	db	0
   876  00D1A3  00                 	db	0
   877  00D1A4  26                 	db	38
   878  00D1A5  49                 	db	73
   879  00D1A6  49                 	db	73
   880  00D1A7  49                 	db	73
   881  00D1A8  46                 	db	70
   882  00D1A9  00                 	db	0
   883  00D1AA  00                 	db	0
   884  00D1AB  00                 	db	0
   885  00D1AC  01                 	db	1
   886  00D1AD  01                 	db	1
   887  00D1AE  7F                 	db	127
   888  00D1AF  01                 	db	1
   889  00D1B0  01                 	db	1
   890  00D1B1  00                 	db	0
   891  00D1B2  00                 	db	0
   892  00D1B3  00                 	db	0
   893  00D1B4  3F                 	db	63
   894  00D1B5  40                 	db	64
   895  00D1B6  40                 	db	64
   896  00D1B7  40                 	db	64
   897  00D1B8  3F                 	db	63
   898  00D1B9  00                 	db	0
   899  00D1BA  00                 	db	0
   900  00D1BB  00                 	db	0
   901  00D1BC  1F                 	db	31
   902  00D1BD  20                 	db	32
   903  00D1BE  40                 	db	64
   904  00D1BF  20                 	db	32
   905  00D1C0  1F                 	db	31
   906  00D1C1  00                 	db	0
   907  00D1C2  00                 	db	0
   908  00D1C3  00                 	db	0
   909  00D1C4  3F                 	db	63
   910  00D1C5  40                 	db	64
   911  00D1C6  38                 	db	56
   912  00D1C7  40                 	db	64
   913  00D1C8  3F                 	db	63
   914  00D1C9  00                 	db	0
   915  00D1CA  00                 	db	0
   916  00D1CB  00                 	db	0
   917  00D1CC  63                 	db	99
   918  00D1CD  14                 	db	20
   919  00D1CE  08                 	db	8
   920  00D1CF  14                 	db	20
   921  00D1D0  63                 	db	99
   922  00D1D1  00                 	db	0
   923  00D1D2  00                 	db	0
   924  00D1D3  00                 	db	0
   925  00D1D4  03                 	db	3
   926  00D1D5  04                 	db	4
   927  00D1D6  78                 	db	120
   928  00D1D7  04                 	db	4
   929  00D1D8  03                 	db	3
   930  00D1D9  00                 	db	0
   931  00D1DA  00                 	db	0
   932  00D1DB  00                 	db	0
   933  00D1DC  61                 	db	97
   934  00D1DD  51                 	db	81
   935  00D1DE  49                 	db	73
   936  00D1DF  45                 	db	69
   937  00D1E0  43                 	db	67
   938  00D1E1  00                 	db	0
   939  00D1E2  00                 	db	0
   940  00D1E3  00                 	db	0
   941  00D1E4  7F                 	db	127
   942  00D1E5  41                 	db	65
   943  00D1E6  41                 	db	65
   944  00D1E7  00                 	db	0
   945  00D1E8  00                 	db	0
   946  00D1E9  00                 	db	0
   947  00D1EA  00                 	db	0
   948  00D1EB  00                 	db	0
   949  00D1EC  02                 	db	2
   950  00D1ED  04                 	db	4
   951  00D1EE  08                 	db	8
   952  00D1EF  10                 	db	16
   953  00D1F0  20                 	db	32
   954  00D1F1  00                 	db	0
   955  00D1F2  00                 	db	0
   956  00D1F3  00                 	db	0
   957  00D1F4  41                 	db	65
   958  00D1F5  41                 	db	65
   959  00D1F6  7F                 	db	127
   960  00D1F7  00                 	db	0
   961  00D1F8  00                 	db	0
   962  00D1F9  00                 	db	0
   963  00D1FA  00                 	db	0
   964  00D1FB  00                 	db	0
   965  00D1FC  04                 	db	4
   966  00D1FD  02                 	db	2
   967  00D1FE  01                 	db	1
   968  00D1FF  02                 	db	2
   969  00D200  04                 	db	4
   970  00D201  00                 	db	0
   971  00D202  00                 	db	0
   972  00D203  00                 	db	0
   973  00D204  80                 	db	128
   974  00D205  80                 	db	128
   975  00D206  80                 	db	128
   976  00D207  80                 	db	128
   977  00D208  80                 	db	128
   978  00D209  00                 	db	0
   979  00D20A  00                 	db	0
   980  00D20B  00                 	db	0
   981  00D20C  01                 	db	1
   982  00D20D  02                 	db	2
   983  00D20E  04                 	db	4
   984  00D20F  00                 	db	0
   985  00D210  00                 	db	0
   986  00D211  00                 	db	0
   987  00D212  00                 	db	0
   988  00D213  00                 	db	0
   989  00D214  20                 	db	32
   990  00D215  54                 	db	84
   991  00D216  54                 	db	84
   992  00D217  54                 	db	84
   993  00D218  78                 	db	120
   994  00D219  00                 	db	0
   995  00D21A  00                 	db	0
   996  00D21B  00                 	db	0
   997  00D21C  7F                 	db	127
   998  00D21D  48                 	db	72
   999  00D21E  44                 	db	68
  1000  00D21F  44                 	db	68
  1001  00D220  38                 	db	56
  1002  00D221  00                 	db	0
  1003  00D222  00                 	db	0
  1004  00D223  00                 	db	0
  1005  00D224  38                 	db	56
  1006  00D225  44                 	db	68
  1007  00D226  44                 	db	68
  1008  00D227  28                 	db	40
  1009  00D228  00                 	db	0
  1010  00D229  00                 	db	0
  1011  00D22A  00                 	db	0
  1012  00D22B  00                 	db	0
  1013  00D22C  38                 	db	56
  1014  00D22D  44                 	db	68
  1015  00D22E  44                 	db	68
  1016  00D22F  48                 	db	72
  1017  00D230  7F                 	db	127
  1018  00D231  00                 	db	0
  1019  00D232  00                 	db	0
  1020  00D233  00                 	db	0
  1021  00D234  38                 	db	56
  1022  00D235  54                 	db	84
  1023  00D236  54                 	db	84
  1024  00D237  54                 	db	84
  1025  00D238  18                 	db	24
  1026  00D239  00                 	db	0
  1027  00D23A  00                 	db	0
  1028  00D23B  00                 	db	0
  1029  00D23C  08                 	db	8
  1030  00D23D  7E                 	db	126
  1031  00D23E  09                 	db	9
  1032  00D23F  02                 	db	2
  1033  00D240  00                 	db	0
  1034  00D241  00                 	db	0
  1035  00D242  00                 	db	0
  1036  00D243  00                 	db	0
  1037  00D244  18                 	db	24
  1038  00D245  A4                 	db	164
  1039  00D246  A4                 	db	164
  1040  00D247  A4                 	db	164
  1041  00D248  7C                 	db	124
  1042  00D249  00                 	db	0
  1043  00D24A  00                 	db	0
  1044  00D24B  00                 	db	0
  1045  00D24C  7F                 	db	127
  1046  00D24D  08                 	db	8
  1047  00D24E  04                 	db	4
  1048  00D24F  04                 	db	4
  1049  00D250  78                 	db	120
  1050  00D251  00                 	db	0
  1051  00D252  00                 	db	0
  1052  00D253  00                 	db	0
  1053  00D254  00                 	db	0
  1054  00D255  7D                 	db	125
  1055  00D256  00                 	db	0
  1056  00D257  00                 	db	0
  1057  00D258  00                 	db	0
  1058  00D259  00                 	db	0
  1059  00D25A  00                 	db	0
  1060  00D25B  00                 	db	0
  1061  00D25C  80                 	db	128
  1062  00D25D  84                 	db	132
  1063  00D25E  7D                 	db	125
  1064  00D25F  00                 	db	0
  1065  00D260  00                 	db	0
  1066  00D261  00                 	db	0
  1067  00D262  00                 	db	0
  1068  00D263  00                 	db	0
  1069  00D264  7F                 	db	127
  1070  00D265  10                 	db	16
  1071  00D266  28                 	db	40
  1072  00D267  44                 	db	68
  1073  00D268  00                 	db	0
  1074  00D269  00                 	db	0
  1075  00D26A  00                 	db	0
  1076  00D26B  00                 	db	0
  1077  00D26C  41                 	db	65
  1078  00D26D  7F                 	db	127
  1079  00D26E  40                 	db	64
  1080  00D26F  00                 	db	0
  1081  00D270  00                 	db	0
  1082  00D271  00                 	db	0
  1083  00D272  00                 	db	0
  1084  00D273  00                 	db	0
  1085  00D274  7C                 	db	124
  1086  00D275  04                 	db	4
  1087  00D276  18                 	db	24
  1088  00D277  04                 	db	4
  1089  00D278  78                 	db	120
  1090  00D279  00                 	db	0
  1091  00D27A  00                 	db	0
  1092  00D27B  00                 	db	0
  1093  00D27C  7C                 	db	124
  1094  00D27D  08                 	db	8
  1095  00D27E  04                 	db	4
  1096  00D27F  7C                 	db	124
  1097  00D280  00                 	db	0
  1098  00D281  00                 	db	0
  1099  00D282  00                 	db	0
  1100  00D283  00                 	db	0
  1101  00D284  38                 	db	56
  1102  00D285  44                 	db	68
  1103  00D286  44                 	db	68
  1104  00D287  38                 	db	56
  1105  00D288  00                 	db	0
  1106  00D289  00                 	db	0
  1107  00D28A  00                 	db	0
  1108  00D28B  00                 	db	0
  1109  00D28C  FC                 	db	252
  1110  00D28D  24                 	db	36
  1111  00D28E  24                 	db	36
  1112  00D28F  18                 	db	24
  1113  00D290  00                 	db	0
  1114  00D291  00                 	db	0
  1115  00D292  00                 	db	0
  1116  00D293  00                 	db	0
  1117  00D294  18                 	db	24
  1118  00D295  24                 	db	36
  1119  00D296  24                 	db	36
  1120  00D297  FC                 	db	252
  1121  00D298  00                 	db	0
  1122  00D299  00                 	db	0
  1123  00D29A  00                 	db	0
  1124  00D29B  00                 	db	0
  1125  00D29C  00                 	db	0
  1126  00D29D  7C                 	db	124
  1127  00D29E  08                 	db	8
  1128  00D29F  04                 	db	4
  1129  00D2A0  00                 	db	0
  1130  00D2A1  00                 	db	0
  1131  00D2A2  00                 	db	0
  1132  00D2A3  00                 	db	0
  1133  00D2A4  48                 	db	72
  1134  00D2A5  54                 	db	84
  1135  00D2A6  54                 	db	84
  1136  00D2A7  24                 	db	36
  1137  00D2A8  00                 	db	0
  1138  00D2A9  00                 	db	0
  1139  00D2AA  00                 	db	0
  1140  00D2AB  00                 	db	0
  1141  00D2AC  04                 	db	4
  1142  00D2AD  7F                 	db	127
  1143  00D2AE  44                 	db	68
  1144  00D2AF  00                 	db	0
  1145  00D2B0  00                 	db	0
  1146  00D2B1  00                 	db	0
  1147  00D2B2  00                 	db	0
  1148  00D2B3  00                 	db	0
  1149  00D2B4  3C                 	db	60
  1150  00D2B5  40                 	db	64
  1151  00D2B6  40                 	db	64
  1152  00D2B7  7C                 	db	124
  1153  00D2B8  00                 	db	0
  1154  00D2B9  00                 	db	0
  1155  00D2BA  00                 	db	0
  1156  00D2BB  00                 	db	0
  1157  00D2BC  1C                 	db	28
  1158  00D2BD  20                 	db	32
  1159  00D2BE  40                 	db	64
  1160  00D2BF  20                 	db	32
  1161  00D2C0  1C                 	db	28
  1162  00D2C1  00                 	db	0
  1163  00D2C2  00                 	db	0
  1164  00D2C3  00                 	db	0
  1165  00D2C4  3C                 	db	60
  1166  00D2C5  40                 	db	64
  1167  00D2C6  30                 	db	48
  1168  00D2C7  40                 	db	64
  1169  00D2C8  3C                 	db	60
  1170  00D2C9  00                 	db	0
  1171  00D2CA  00                 	db	0
  1172  00D2CB  00                 	db	0
  1173  00D2CC  44                 	db	68
  1174  00D2CD  28                 	db	40
  1175  00D2CE  10                 	db	16
  1176  00D2CF  28                 	db	40
  1177  00D2D0  44                 	db	68
  1178  00D2D1  00                 	db	0
  1179  00D2D2  00                 	db	0
  1180  00D2D3  00                 	db	0
  1181  00D2D4  1C                 	db	28
  1182  00D2D5  A0                 	db	160
  1183  00D2D6  A0                 	db	160
  1184  00D2D7  7C                 	db	124
  1185  00D2D8  00                 	db	0
  1186  00D2D9  00                 	db	0
  1187  00D2DA  00                 	db	0
  1188  00D2DB  00                 	db	0
  1189  00D2DC  44                 	db	68
  1190  00D2DD  64                 	db	100
  1191  00D2DE  54                 	db	84
  1192  00D2DF  4C                 	db	76
  1193  00D2E0  44                 	db	68
  1194  00D2E1  00                 	db	0
  1195  00D2E2  00                 	db	0
  1196  00D2E3  00                 	db	0
  1197  00D2E4  08                 	db	8
  1198  00D2E5  36                 	db	54
  1199  00D2E6  41                 	db	65
  1200  00D2E7  00                 	db	0
  1201  00D2E8  00                 	db	0
  1202  00D2E9  00                 	db	0
  1203  00D2EA  00                 	db	0
  1204  00D2EB  00                 	db	0
  1205  00D2EC  00                 	db	0
  1206  00D2ED  7F                 	db	127
  1207  00D2EE  00                 	db	0
  1208  00D2EF  00                 	db	0
  1209  00D2F0  00                 	db	0
  1210  00D2F1  00                 	db	0
  1211  00D2F2  00                 	db	0
  1212  00D2F3  00                 	db	0
  1213  00D2F4  41                 	db	65
  1214  00D2F5  36                 	db	54
  1215  00D2F6  08                 	db	8
  1216  00D2F7  00                 	db	0
  1217  00D2F8  00                 	db	0
  1218  00D2F9  00                 	db	0
  1219  00D2FA  00                 	db	0
  1220  00D2FB  00                 	db	0
  1221  00D2FC  02                 	db	2
  1222  00D2FD  01                 	db	1
  1223  00D2FE  01                 	db	1
  1224  00D2FF  02                 	db	2
  1225  00D300  01                 	db	1
  1226  00D301  00                 	db	0
  1227  00D302  00                 	db	0
  1228  00D303  00                 	db	0
  1229  00D304  02                 	db	2
  1230  00D305  05                 	db	5
  1231  00D306  05                 	db	5
  1232  00D307  02                 	db	2
  1233  00D308  00                 	db	0
  1234  00D309  00                 	db	0
  1235  00D30A  00                 	db	0
  1236  00D30B                     __end_of_OledFont:
  1237                           	opt stack 0
  1238  00D30B                     atan@coeff_a:
  1239                           	opt stack 0
  1240  00D30B  3C06               	dw	15366
  1241  00D30D  4204               	dw	16900
  1242  00D30F  9F7D               	dw	40829
  1243  00D311  426A               	dw	17002
  1244  00D313  905C               	dw	36956
  1245  00D315  4201               	dw	16897
  1246  00D317  4D60               	dw	19808
  1247  00D319  40BB               	dw	16571
  1248  00D31B  EC51               	dw	60497
  1249  00D31D  3E47               	dw	15943
  1250  00D31F  8DDE               	dw	36318
  1251  00D321  BB1F               	dw	47903
  1252  00D323                     __end_ofatan@coeff_a:
  1253                           	opt stack 0
  1254  00D323                     sin@coeff_a:
  1255                           	opt stack 0
  1256  00D323  F3EC               	dw	62444
  1257  00D325  484A               	dw	18506
  1258  00D327  9535               	dw	38197
  1259  00D329  C795               	dw	51093
  1260  00D32B  C117               	dw	49431
  1261  00D32D  45DC               	dw	17884
  1262  00D32F  DBFD               	dw	56317
  1263  00D331  C36D               	dw	50029
  1264  00D333  B372               	dw	45938
  1265  00D335  4033               	dw	16435
  1266  00D337                     __end_ofsin@coeff_a:
  1267                           	opt stack 0
  1268  00D337                     atan@coeff_b:
  1269                           	opt stack 0
  1270  00D337  3C06               	dw	15366
  1271  00D339  4204               	dw	16900
  1272  00D33B  59C0               	dw	22976
  1273  00D33D  428B               	dw	17035
  1274  00D33F  0474               	dw	1140
  1275  00D341  4244               	dw	16964
  1276  00D343  9BF9               	dw	39929
  1277  00D345  414F               	dw	16719
  1278  00D347  0000               	dw	0
  1279  00D349  3F80               	dw	16256
  1280  00D34B                     __end_ofatan@coeff_b:
  1281                           	opt stack 0
  1282  00D34B                     sin@coeff_b:
  1283                           	opt stack 0
  1284  00D34B  342B               	dw	13355
  1285  00D34D  4801               	dw	18433
  1286  00D34F  9D7F               	dw	40319
  1287  00D351  45B0               	dw	17840
  1288  00D353  FFE7               	dw	65511
  1289  00D355  42D9               	dw	17113
  1290  00D357  0000               	dw	0
  1291  00D359  3F80               	dw	16256
  1292  00D35B                     __end_ofsin@coeff_b:
  1293                           	opt stack 0
  1294  00D35B                     STR_159:
  1295  00D35B  4C                 	db	76	;'L'
  1296  00D35C  69                 	db	105	;'i'
  1297  00D35D  73                 	db	115	;'s'
  1298  00D35E  74                 	db	116	;'t'
  1299  00D35F  20                 	db	32
  1300  00D360  6F                 	db	111	;'o'
  1301  00D361  66                 	db	102	;'f'
  1302  00D362  20                 	db	32
  1303  00D363  61                 	db	97	;'a'
  1304  00D364  6C                 	db	108	;'l'
  1305  00D365  6C                 	db	108	;'l'
  1306  00D366  20                 	db	32
  1307  00D367  73                 	db	115	;'s'
  1308  00D368  75                 	db	117	;'u'
  1309  00D369  70                 	db	112	;'p'
  1310  00D36A  70                 	db	112	;'p'
  1311  00D36B  6F                 	db	111	;'o'
  1312  00D36C  72                 	db	114	;'r'
  1313  00D36D  74                 	db	116	;'t'
  1314  00D36E  65                 	db	101	;'e'
  1315  00D36F  64                 	db	100	;'d'
  1316  00D370  20                 	db	32
  1317  00D371  63                 	db	99	;'c'
  1318  00D372  6F                 	db	111	;'o'
  1319  00D373  6D                 	db	109	;'m'
  1320  00D374  6D                 	db	109	;'m'
  1321  00D375  61                 	db	97	;'a'
  1322  00D376  6E                 	db	110	;'n'
  1323  00D377  64                 	db	100	;'d'
  1324  00D378  73                 	db	115	;'s'
  1325  00D379  3A                 	db	58	;':'
  1326  00D37A  0A                 	db	10
  1327  00D37B  0D                 	db	13
  1328  00D37C  44                 	db	68	;'D'
  1329  00D37D  65                 	db	101	;'e'
  1330  00D37E  76                 	db	118	;'v'
  1331  00D37F  69                 	db	105	;'i'
  1332  00D380  63                 	db	99	;'c'
  1333  00D381  65                 	db	101	;'e'
  1334  00D382  20                 	db	32
  1335  00D383  43                 	db	67	;'C'
  1336  00D384  6F                 	db	111	;'o'
  1337  00D385  6E                 	db	110	;'n'
  1338  00D386  74                 	db	116	;'t'
  1339  00D387  72                 	db	114	;'r'
  1340  00D388  6F                 	db	111	;'o'
  1341  00D389  6C                 	db	108	;'l'
  1342  00D38A  20                 	db	32
  1343  00D38B  43                 	db	67	;'C'
  1344  00D38C  6F                 	db	111	;'o'
  1345  00D38D  6D                 	db	109	;'m'
  1346  00D38E  6D                 	db	109	;'m'
  1347  00D38F  61                 	db	97	;'a'
  1348  00D390  6E                 	db	110	;'n'
  1349  00D391  64                 	db	100	;'d'
  1350  00D392  73                 	db	115	;'s'
  1351  00D393  3A                 	db	58	;':'
  1352  00D394  20                 	db	32
  1353  00D395  43                 	db	67	;'C'
  1354  00D396  6F                 	db	111	;'o'
  1355  00D397  6D                 	db	109	;'m'
  1356  00D398  6D                 	db	109	;'m'
  1357  00D399  61                 	db	97	;'a'
  1358  00D39A  6E                 	db	110	;'n'
  1359  00D39B  64                 	db	100	;'d'
  1360  00D39C  73                 	db	115	;'s'
  1361  00D39D  20                 	db	32
  1362  00D39E  74                 	db	116	;'t'
  1363  00D39F  6F                 	db	111	;'o'
  1364  00D3A0  20                 	db	32
  1365  00D3A1  76                 	db	118	;'v'
  1366  00D3A2  69                 	db	105	;'i'
  1367  00D3A3  65                 	db	101	;'e'
  1368  00D3A4  77                 	db	119	;'w'
  1369  00D3A5  20                 	db	32
  1370  00D3A6  61                 	db	97	;'a'
  1371  00D3A7  6E                 	db	110	;'n'
  1372  00D3A8  64                 	db	100	;'d'
  1373  00D3A9  20                 	db	32
  1374  00D3AA  63                 	db	99	;'c'
  1375  00D3AB  6F                 	db	111	;'o'
  1376  00D3AC  6E                 	db	110	;'n'
  1377  00D3AD  74                 	db	116	;'t'
  1378  00D3AE  72                 	db	114	;'r'
  1379  00D3AF  6F                 	db	111	;'o'
  1380  00D3B0  6C                 	db	108	;'l'
  1381  00D3B1  20                 	db	32
  1382  00D3B2  6C                 	db	108	;'l'
  1383  00D3B3  6F                 	db	111	;'o'
  1384  00D3B4  77                 	db	119	;'w'
  1385  00D3B5  20                 	db	32
  1386  00D3B6  6C                 	db	108	;'l'
  1387  00D3B7  65                 	db	101	;'e'
  1388  00D3B8  76                 	db	118	;'v'
  1389  00D3B9  65                 	db	101	;'e'
  1390  00D3BA  6C                 	db	108	;'l'
  1391  00D3BB  20                 	db	32
  1392  00D3BC  73                 	db	115	;'s'
  1393  00D3BD  79                 	db	121	;'y'
  1394  00D3BE  73                 	db	115	;'s'
  1395  00D3BF  74                 	db	116	;'t'
  1396  00D3C0  65                 	db	101	;'e'
  1397  00D3C1  6D                 	db	109	;'m'
  1398  00D3C2  20                 	db	32
  1399  00D3C3  66                 	db	102	;'f'
  1400  00D3C4  75                 	db	117	;'u'
  1401  00D3C5  6E                 	db	110	;'n'
  1402  00D3C6  63                 	db	99	;'c'
  1403  00D3C7  74                 	db	116	;'t'
  1404  00D3C8  69                 	db	105	;'i'
  1405  00D3C9  6F                 	db	111	;'o'
  1406  00D3CA  6E                 	db	110	;'n'
  1407  00D3CB  61                 	db	97	;'a'
  1408  00D3CC  6C                 	db	108	;'l'
  1409  00D3CD  69                 	db	105	;'i'
  1410  00D3CE  74                 	db	116	;'t'
  1411  00D3CF  79                 	db	121	;'y'
  1412  00D3D0  0A                 	db	10
  1413  00D3D1  0D                 	db	13
  1414  00D3D2  20                 	db	32
  1415  00D3D3  20                 	db	32
  1416  00D3D4  20                 	db	32
  1417  00D3D5  52                 	db	82	;'R'
  1418  00D3D6  65                 	db	101	;'e'
  1419  00D3D7  73                 	db	115	;'s'
  1420  00D3D8  65                 	db	101	;'e'
  1421  00D3D9  74                 	db	116	;'t'
  1422  00D3DA  3A                 	db	58	;':'
  1423  00D3DB  20                 	db	32
  1424  00D3DC  43                 	db	67	;'C'
  1425  00D3DD  6C                 	db	108	;'l'
  1426  00D3DE  65                 	db	101	;'e'
  1427  00D3DF  61                 	db	97	;'a'
  1428  00D3E0  72                 	db	114	;'r'
  1429  00D3E1  73                 	db	115	;'s'
  1430  00D3E2  20                 	db	32
  1431  00D3E3  74                 	db	116	;'t'
  1432  00D3E4  68                 	db	104	;'h'
  1433  00D3E5  65                 	db	101	;'e'
  1434  00D3E6  20                 	db	32
  1435  00D3E7  74                 	db	116	;'t'
  1436  00D3E8  65                 	db	101	;'e'
  1437  00D3E9  72                 	db	114	;'r'
  1438  00D3EA  6D                 	db	109	;'m'
  1439  00D3EB  69                 	db	105	;'i'
  1440  00D3EC  6E                 	db	110	;'n'
  1441  00D3ED  61                 	db	97	;'a'
  1442  00D3EE  6C                 	db	108	;'l'
  1443  00D3EF  20                 	db	32
  1444  00D3F0  61                 	db	97	;'a'
  1445  00D3F1  6E                 	db	110	;'n'
  1446  00D3F2  64                 	db	100	;'d'
  1447  00D3F3  20                 	db	32
  1448  00D3F4  72                 	db	114	;'r'
  1449  00D3F5  65                 	db	101	;'e'
  1450  00D3F6  73                 	db	115	;'s'
  1451  00D3F7  65                 	db	101	;'e'
  1452  00D3F8  74                 	db	116	;'t'
  1453  00D3F9  73                 	db	115	;'s'
  1454  00D3FA  20                 	db	32
  1455  00D3FB  74                 	db	116	;'t'
  1456  00D3FC  68                 	db	104	;'h'
  1457  00D3FD  65                 	db	101	;'e'
  1458  00D3FE  20                 	db	32
  1459  00D3FF  6D                 	db	109	;'m'
  1460  00D400  69                 	db	105	;'i'
  1461  00D401  63                 	db	99	;'c'
  1462  00D402  72                 	db	114	;'r'
  1463  00D403  6F                 	db	111	;'o'
  1464  00D404  63                 	db	99	;'c'
  1465  00D405  6F                 	db	111	;'o'
  1466  00D406  6E                 	db	110	;'n'
  1467  00D407  74                 	db	116	;'t'
  1468  00D408  72                 	db	114	;'r'
  1469  00D409  6F                 	db	111	;'o'
  1470  00D40A  6C                 	db	108	;'l'
  1471  00D40B  6C                 	db	108	;'l'
  1472  00D40C  65                 	db	101	;'e'
  1473  00D40D  72                 	db	114	;'r'
  1474  00D40E  0A                 	db	10
  1475  00D40F  0D                 	db	13
  1476  00D410  20                 	db	32
  1477  00D411  20                 	db	32
  1478  00D412  20                 	db	32
  1479  00D413  43                 	db	67	;'C'
  1480  00D414  6C                 	db	108	;'l'
  1481  00D415  65                 	db	101	;'e'
  1482  00D416  61                 	db	97	;'a'
  1483  00D417  72                 	db	114	;'r'
  1484  00D418  3A                 	db	58	;':'
  1485  00D419  20                 	db	32
  1486  00D41A  43                 	db	67	;'C'
  1487  00D41B  6C                 	db	108	;'l'
  1488  00D41C  65                 	db	101	;'e'
  1489  00D41D  61                 	db	97	;'a'
  1490  00D41E  72                 	db	114	;'r'
  1491  00D41F  73                 	db	115	;'s'
  1492  00D420  20                 	db	32
  1493  00D421  74                 	db	116	;'t'
  1494  00D422  68                 	db	104	;'h'
  1495  00D423  65                 	db	101	;'e'
  1496  00D424  20                 	db	32
  1497  00D425  74                 	db	116	;'t'
  1498  00D426  65                 	db	101	;'e'
  1499  00D427  72                 	db	114	;'r'
  1500  00D428  6D                 	db	109	;'m'
  1501  00D429  69                 	db	105	;'i'
  1502  00D42A  6E                 	db	110	;'n'
  1503  00D42B  61                 	db	97	;'a'
  1504  00D42C  6C                 	db	108	;'l'
  1505  00D42D  20                 	db	32
  1506  00D42E  62                 	db	98	;'b'
  1507  00D42F  75                 	db	117	;'u'
  1508  00D430  74                 	db	116	;'t'
  1509  00D431  20                 	db	32
  1510  00D432  64                 	db	100	;'d'
  1511  00D433  6F                 	db	111	;'o'
  1512  00D434  65                 	db	101	;'e'
  1513  00D435  73                 	db	115	;'s'
  1514  00D436  6E                 	db	110	;'n'
  1515  00D437  27                 	db	39
  1516  00D438  74                 	db	116	;'t'
  1517  00D439  20                 	db	32
  1518  00D43A  72                 	db	114	;'r'
  1519  00D43B  65                 	db	101	;'e'
  1520  00D43C  73                 	db	115	;'s'
  1521  00D43D  65                 	db	101	;'e'
  1522  00D43E  74                 	db	116	;'t'
  1523  00D43F  20                 	db	32
  1524  00D440  74                 	db	116	;'t'
  1525  00D441  68                 	db	104	;'h'
  1526  00D442  65                 	db	101	;'e'
  1527  00D443  20                 	db	32
  1528  00D444  6D                 	db	109	;'m'
  1529  00D445  69                 	db	105	;'i'
  1530  00D446  63                 	db	99	;'c'
  1531  00D447  72                 	db	114	;'r'
  1532  00D448  6F                 	db	111	;'o'
  1533  00D449  0A                 	db	10
  1534  00D44A  0D                 	db	13
  1535  00D44B  20                 	db	32
  1536  00D44C  20                 	db	32
  1537  00D44D  20                 	db	32
  1538  00D44E  43                 	db	67	;'C'
  1539  00D44F  61                 	db	97	;'a'
  1540  00D450  75                 	db	117	;'u'
  1541  00D451  73                 	db	115	;'s'
  1542  00D452  65                 	db	101	;'e'
  1543  00D453  20                 	db	32
  1544  00D454  6F                 	db	111	;'o'
  1545  00D455  66                 	db	102	;'f'
  1546  00D456  20                 	db	32
  1547  00D457  52                 	db	82	;'R'
  1548  00D458  65                 	db	101	;'e'
  1549  00D459  73                 	db	115	;'s'
  1550  00D45A  65                 	db	101	;'e'
  1551  00D45B  74                 	db	116	;'t'
  1552  00D45C  3F                 	db	63	;'?'
  1553  00D45D  3A                 	db	58	;':'
  1554  00D45E  20                 	db	32
  1555  00D45F  52                 	db	82	;'R'
  1556  00D460  65                 	db	101	;'e'
  1557  00D461  74                 	db	116	;'t'
  1558  00D462  75                 	db	117	;'u'
  1559  00D463  72                 	db	114	;'r'
  1560  00D464  6E                 	db	110	;'n'
  1561  00D465  73                 	db	115	;'s'
  1562  00D466  20                 	db	32
  1563  00D467  74                 	db	116	;'t'
  1564  00D468  68                 	db	104	;'h'
  1565  00D469  65                 	db	101	;'e'
  1566  00D46A  20                 	db	32
  1567  00D46B  63                 	db	99	;'c'
  1568  00D46C  61                 	db	97	;'a'
  1569  00D46D  75                 	db	117	;'u'
  1570  00D46E  73                 	db	115	;'s'
  1571  00D46F  65                 	db	101	;'e'
  1572  00D470  20                 	db	32
  1573  00D471  6F                 	db	111	;'o'
  1574  00D472  66                 	db	102	;'f'
  1575  00D473  20                 	db	32
  1576  00D474  74                 	db	116	;'t'
  1577  00D475  68                 	db	104	;'h'
  1578  00D476  65                 	db	101	;'e'
  1579  00D477  20                 	db	32
  1580  00D478  6D                 	db	109	;'m'
  1581  00D479  6F                 	db	111	;'o'
  1582  00D47A  73                 	db	115	;'s'
  1583  00D47B  74                 	db	116	;'t'
  1584  00D47C  20                 	db	32
  1585  00D47D  72                 	db	114	;'r'
  1586  00D47E  65                 	db	101	;'e'
  1587  00D47F  63                 	db	99	;'c'
  1588  00D480  65                 	db	101	;'e'
  1589  00D481  6E                 	db	110	;'n'
  1590  00D482  74                 	db	116	;'t'
  1591  00D483  20                 	db	32
  1592  00D484  64                 	db	100	;'d'
  1593  00D485  65                 	db	101	;'e'
  1594  00D486  76                 	db	118	;'v'
  1595  00D487  69                 	db	105	;'i'
  1596  00D488  63                 	db	99	;'c'
  1597  00D489  65                 	db	101	;'e'
  1598  00D48A  20                 	db	32
  1599  00D48B  72                 	db	114	;'r'
  1600  00D48C  65                 	db	101	;'e'
  1601  00D48D  73                 	db	115	;'s'
  1602  00D48E  65                 	db	101	;'e'
  1603  00D48F  74                 	db	116	;'t'
  1604  00D490  0A                 	db	10
  1605  00D491  0D                 	db	13
  1606  00D492  20                 	db	32
  1607  00D493  20                 	db	32
  1608  00D494  20                 	db	32
  1609  00D495  2A                 	db	42
  1610  00D496  49                 	db	73	;'I'
  1611  00D497  44                 	db	68	;'D'
  1612  00D498  4E                 	db	78	;'N'
  1613  00D499  3F                 	db	63	;'?'
  1614  00D49A  3A                 	db	58	;':'
  1615  00D49B  20                 	db	32
  1616  00D49C  52                 	db	82	;'R'
  1617  00D49D  65                 	db	101	;'e'
  1618  00D49E  74                 	db	116	;'t'
  1619  00D49F  75                 	db	117	;'u'
  1620  00D4A0  72                 	db	114	;'r'
  1621  00D4A1  6E                 	db	110	;'n'
  1622  00D4A2  73                 	db	115	;'s'
  1623  00D4A3  20                 	db	32
  1624  00D4A4  64                 	db	100	;'d'
  1625  00D4A5  65                 	db	101	;'e'
  1626  00D4A6  76                 	db	118	;'v'
  1627  00D4A7  69                 	db	105	;'i'
  1628  00D4A8  63                 	db	99	;'c'
  1629  00D4A9  65                 	db	101	;'e'
  1630  00D4AA  20                 	db	32
  1631  00D4AB  69                 	db	105	;'i'
  1632  00D4AC  64                 	db	100	;'d'
  1633  00D4AD  65                 	db	101	;'e'
  1634  00D4AE  6E                 	db	110	;'n'
  1635  00D4AF  74                 	db	116	;'t'
  1636  00D4B0  69                 	db	105	;'i'
  1637  00D4B1  66                 	db	102	;'f'
  1638  00D4B2  69                 	db	105	;'i'
  1639  00D4B3  63                 	db	99	;'c'
  1640  00D4B4  61                 	db	97	;'a'
  1641  00D4B5  74                 	db	116	;'t'
  1642  00D4B6  69                 	db	105	;'i'
  1643  00D4B7  6F                 	db	111	;'o'
  1644  00D4B8  6E                 	db	110	;'n'
  1645  00D4B9  20                 	db	32
  1646  00D4BA  73                 	db	115	;'s'
  1647  00D4BB  74                 	db	116	;'t'
  1648  00D4BC  72                 	db	114	;'r'
  1649  00D4BD  69                 	db	105	;'i'
  1650  00D4BE  6E                 	db	110	;'n'
  1651  00D4BF  67                 	db	103	;'g'
  1652  00D4C0  0A                 	db	10
  1653  00D4C1  0D                 	db	13
  1654  00D4C2  20                 	db	32
  1655  00D4C3  20                 	db	32
  1656  00D4C4  20                 	db	32
  1657  00D4C5  44                 	db	68	;'D'
  1658  00D4C6  65                 	db	101	;'e'
  1659  00D4C7  76                 	db	118	;'v'
  1660  00D4C8  69                 	db	105	;'i'
  1661  00D4C9  63                 	db	99	;'c'
  1662  00D4CA  65                 	db	101	;'e'
  1663  00D4CB  20                 	db	32
  1664  00D4CC  4F                 	db	79	;'O'
  1665  00D4CD  6E                 	db	110	;'n'
  1666  00D4CE  20                 	db	32
  1667  00D4CF  54                 	db	84	;'T'
  1668  00D4D0  69                 	db	105	;'i'
  1669  00D4D1  6D                 	db	109	;'m'
  1670  00D4D2  65                 	db	101	;'e'
  1671  00D4D3  3F                 	db	63	;'?'
  1672  00D4D4  3A                 	db	58	;':'
  1673  00D4D5  20                 	db	32
  1674  00D4D6  52                 	db	82	;'R'
  1675  00D4D7  65                 	db	101	;'e'
  1676  00D4D8  74                 	db	116	;'t'
  1677  00D4D9  75                 	db	117	;'u'
  1678  00D4DA  72                 	db	114	;'r'
  1679  00D4DB  6E                 	db	110	;'n'
  1680  00D4DC  73                 	db	115	;'s'
  1681  00D4DD  20                 	db	32
  1682  00D4DE  64                 	db	100	;'d'
  1683  00D4DF  65                 	db	101	;'e'
  1684  00D4E0  76                 	db	118	;'v'
  1685  00D4E1  69                 	db	105	;'i'
  1686  00D4E2  63                 	db	99	;'c'
  1687  00D4E3  65                 	db	101	;'e'
  1688  00D4E4  20                 	db	32
  1689  00D4E5  6F                 	db	111	;'o'
  1690  00D4E6  6E                 	db	110	;'n'
  1691  00D4E7  20                 	db	32
  1692  00D4E8  74                 	db	116	;'t'
  1693  00D4E9  69                 	db	105	;'i'
  1694  00D4EA  6D                 	db	109	;'m'
  1695  00D4EB  65                 	db	101	;'e'
  1696  00D4EC  20                 	db	32
  1697  00D4ED  73                 	db	115	;'s'
  1698  00D4EE  69                 	db	105	;'i'
  1699  00D4EF  6E                 	db	110	;'n'
  1700  00D4F0  63                 	db	99	;'c'
  1701  00D4F1  65                 	db	101	;'e'
  1702  00D4F2  20                 	db	32
  1703  00D4F3  6C                 	db	108	;'l'
  1704  00D4F4  61                 	db	97	;'a'
  1705  00D4F5  73                 	db	115	;'s'
  1706  00D4F6  74                 	db	116	;'t'
  1707  00D4F7  20                 	db	32
  1708  00D4F8  64                 	db	100	;'d'
  1709  00D4F9  65                 	db	101	;'e'
  1710  00D4FA  76                 	db	118	;'v'
  1711  00D4FB  69                 	db	105	;'i'
  1712  00D4FC  63                 	db	99	;'c'
  1713  00D4FD  65                 	db	101	;'e'
  1714  00D4FE  20                 	db	32
  1715  00D4FF  72                 	db	114	;'r'
  1716  00D500  65                 	db	101	;'e'
  1717  00D501  73                 	db	115	;'s'
  1718  00D502  65                 	db	101	;'e'
  1719  00D503  74                 	db	116	;'t'
  1720  00D504  0A                 	db	10
  1721  00D505  0D                 	db	13
  1722  00D506  20                 	db	32
  1723  00D507  20                 	db	32
  1724  00D508  20                 	db	32
  1725  00D509  44                 	db	68	;'D'
  1726  00D50A  65                 	db	101	;'e'
  1727  00D50B  76                 	db	118	;'v'
  1728  00D50C  69                 	db	105	;'i'
  1729  00D50D  63                 	db	99	;'c'
  1730  00D50E  65                 	db	101	;'e'
  1731  00D50F  20                 	db	32
  1732  00D510  49                 	db	73	;'I'
  1733  00D511  44                 	db	68	;'D'
  1734  00D512  3F                 	db	63	;'?'
  1735  00D513  3A                 	db	58	;':'
  1736  00D514  20                 	db	32
  1737  00D515  52                 	db	82	;'R'
  1738  00D516  65                 	db	101	;'e'
  1739  00D517  74                 	db	116	;'t'
  1740  00D518  75                 	db	117	;'u'
  1741  00D519  72                 	db	114	;'r'
  1742  00D51A  6E                 	db	110	;'n'
  1743  00D51B  73                 	db	115	;'s'
  1744  00D51C  20                 	db	32
  1745  00D51D  64                 	db	100	;'d'
  1746  00D51E  65                 	db	101	;'e'
  1747  00D51F  76                 	db	118	;'v'
  1748  00D520  69                 	db	105	;'i'
  1749  00D521  63                 	db	99	;'c'
  1750  00D522  65                 	db	101	;'e'
  1751  00D523  20                 	db	32
  1752  00D524  49                 	db	73	;'I'
  1753  00D525  44                 	db	68	;'D'
  1754  00D526  20                 	db	32
  1755  00D527  61                 	db	97	;'a'
  1756  00D528  73                 	db	115	;'s'
  1757  00D529  20                 	db	32
  1758  00D52A  70                 	db	112	;'p'
  1759  00D52B  72                 	db	114	;'r'
  1760  00D52C  65                 	db	101	;'e'
  1761  00D52D  2D                 	db	45
  1762  00D52E  70                 	db	112	;'p'
  1763  00D52F  72                 	db	114	;'r'
  1764  00D530  6F                 	db	111	;'o'
  1765  00D531  67                 	db	103	;'g'
  1766  00D532  72                 	db	114	;'r'
  1767  00D533  61                 	db	97	;'a'
  1768  00D534  6D                 	db	109	;'m'
  1769  00D535  6D                 	db	109	;'m'
  1770  00D536  65                 	db	101	;'e'
  1771  00D537  64                 	db	100	;'d'
  1772  00D538  20                 	db	32
  1773  00D539  69                 	db	105	;'i'
  1774  00D53A  6E                 	db	110	;'n'
  1775  00D53B  20                 	db	32
  1776  00D53C  66                 	db	102	;'f'
  1777  00D53D  6C                 	db	108	;'l'
  1778  00D53E  61                 	db	97	;'a'
  1779  00D53F  73                 	db	115	;'s'
  1780  00D540  68                 	db	104	;'h'
  1781  00D541  20                 	db	32
  1782  00D542  6D                 	db	109	;'m'
  1783  00D543  65                 	db	101	;'e'
  1784  00D544  6D                 	db	109	;'m'
  1785  00D545  6F                 	db	111	;'o'
  1786  00D546  72                 	db	114	;'r'
  1787  00D547  79                 	db	121	;'y'
  1788  00D548  0A                 	db	10
  1789  00D549  0D                 	db	13
  1790  00D54A  20                 	db	32
  1791  00D54B  20                 	db	32
  1792  00D54C  20                 	db	32
  1793  00D54D  52                 	db	82	;'R'
  1794  00D54E  65                 	db	101	;'e'
  1795  00D54F  76                 	db	118	;'v'
  1796  00D550  69                 	db	105	;'i'
  1797  00D551  73                 	db	115	;'s'
  1798  00D552  69                 	db	105	;'i'
  1799  00D553  6F                 	db	111	;'o'
  1800  00D554  6E                 	db	110	;'n'
  1801  00D555  20                 	db	32
  1802  00D556  49                 	db	73	;'I'
  1803  00D557  44                 	db	68	;'D'
  1804  00D558  3F                 	db	63	;'?'
  1805  00D559  3A                 	db	58	;':'
  1806  00D55A  20                 	db	32
  1807  00D55B  52                 	db	82	;'R'
  1808  00D55C  65                 	db	101	;'e'
  1809  00D55D  74                 	db	116	;'t'
  1810  00D55E  75                 	db	117	;'u'
  1811  00D55F  72                 	db	114	;'r'
  1812  00D560  6E                 	db	110	;'n'
  1813  00D561  73                 	db	115	;'s'
  1814  00D562  20                 	db	32
  1815  00D563  64                 	db	100	;'d'
  1816  00D564  65                 	db	101	;'e'
  1817  00D565  76                 	db	118	;'v'
  1818  00D566  69                 	db	105	;'i'
  1819  00D567  63                 	db	99	;'c'
  1820  00D568  65                 	db	101	;'e'
  1821  00D569  20                 	db	32
  1822  00D56A  73                 	db	115	;'s'
  1823  00D56B  69                 	db	105	;'i'
  1824  00D56C  6C                 	db	108	;'l'
  1825  00D56D  69                 	db	105	;'i'
  1826  00D56E  63                 	db	99	;'c'
  1827  00D56F  6F                 	db	111	;'o'
  1828  00D570  6E                 	db	110	;'n'
  1829  00D571  20                 	db	32
  1830  00D572  72                 	db	114	;'r'
  1831  00D573  65                 	db	101	;'e'
  1832  00D574  76                 	db	118	;'v'
  1833  00D575  69                 	db	105	;'i'
  1834  00D576  73                 	db	115	;'s'
  1835  00D577  69                 	db	105	;'i'
  1836  00D578  6F                 	db	111	;'o'
  1837  00D579  6E                 	db	110	;'n'
  1838  00D57A  20                 	db	32
  1839  00D57B  49                 	db	73	;'I'
  1840  00D57C  44                 	db	68	;'D'
  1841  00D57D  20                 	db	32
  1842  00D57E  61                 	db	97	;'a'
  1843  00D57F  73                 	db	115	;'s'
  1844  00D580  20                 	db	32
  1845  00D581  70                 	db	112	;'p'
  1846  00D582  72                 	db	114	;'r'
  1847  00D583  65                 	db	101	;'e'
  1848  00D584  2D                 	db	45
  1849  00D585  70                 	db	112	;'p'
  1850  00D586  72                 	db	114	;'r'
  1851  00D587  6F                 	db	111	;'o'
  1852  00D588  67                 	db	103	;'g'
  1853  00D589  72                 	db	114	;'r'
  1854  00D58A  61                 	db	97	;'a'
  1855  00D58B  6D                 	db	109	;'m'
  1856  00D58C  6D                 	db	109	;'m'
  1857  00D58D  65                 	db	101	;'e'
  1858  00D58E  64                 	db	100	;'d'
  1859  00D58F  20                 	db	32
  1860  00D590  69                 	db	105	;'i'
  1861  00D591  6E                 	db	110	;'n'
  1862  00D592  20                 	db	32
  1863  00D593  66                 	db	102	;'f'
  1864  00D594  6C                 	db	108	;'l'
  1865  00D595  61                 	db	97	;'a'
  1866  00D596  73                 	db	115	;'s'
  1867  00D597  68                 	db	104	;'h'
  1868  00D598  20                 	db	32
  1869  00D599  6D                 	db	109	;'m'
  1870  00D59A  65                 	db	101	;'e'
  1871  00D59B  6D                 	db	109	;'m'
  1872  00D59C  6F                 	db	111	;'o'
  1873  00D59D  72                 	db	114	;'r'
  1874  00D59E  79                 	db	121	;'y'
  1875  00D59F  0A                 	db	10
  1876  00D5A0  0D                 	db	13
  1877  00D5A1  20                 	db	32
  1878  00D5A2  20                 	db	32
  1879  00D5A3  20                 	db	32
  1880  00D5A4  55                 	db	85	;'U'
  1881  00D5A5  73                 	db	115	;'s'
  1882  00D5A6  65                 	db	101	;'e'
  1883  00D5A7  72                 	db	114	;'r'
  1884  00D5A8  20                 	db	32
  1885  00D5A9  49                 	db	73	;'I'
  1886  00D5AA  44                 	db	68	;'D'
  1887  00D5AB  73                 	db	115	;'s'
  1888  00D5AC  3F                 	db	63	;'?'
  1889  00D5AD  3A                 	db	58	;':'
  1890  00D5AE  20                 	db	32
  1891  00D5AF  52                 	db	82	;'R'
  1892  00D5B0  65                 	db	101	;'e'
  1893  00D5B1  74                 	db	116	;'t'
  1894  00D5B2  75                 	db	117	;'u'
  1895  00D5B3  72                 	db	114	;'r'
  1896  00D5B4  6E                 	db	110	;'n'
  1897  00D5B5  73                 	db	115	;'s'
  1898  00D5B6  20                 	db	32
  1899  00D5B7  61                 	db	97	;'a'
  1900  00D5B8  20                 	db	32
  1901  00D5B9  6C                 	db	108	;'l'
  1902  00D5BA  69                 	db	105	;'i'
  1903  00D5BB  73                 	db	115	;'s'
  1904  00D5BC  74                 	db	116	;'t'
  1905  00D5BD  20                 	db	32
  1906  00D5BE  6F                 	db	111	;'o'
  1907  00D5BF  66                 	db	102	;'f'
  1908  00D5C0  20                 	db	32
  1909  00D5C1  75                 	db	117	;'u'
  1910  00D5C2  73                 	db	115	;'s'
  1911  00D5C3  65                 	db	101	;'e'
  1912  00D5C4  72                 	db	114	;'r'
  1913  00D5C5  20                 	db	32
  1914  00D5C6  49                 	db	73	;'I'
  1915  00D5C7  44                 	db	68	;'D'
  1916  00D5C8  73                 	db	115	;'s'
  1917  00D5C9  20                 	db	32
  1918  00D5CA  28                 	db	40
  1919  00D5CB  64                 	db	100	;'d'
  1920  00D5CC  69                 	db	105	;'i'
  1921  00D5CD  73                 	db	115	;'s'
  1922  00D5CE  70                 	db	112	;'p'
  1923  00D5CF  6C                 	db	108	;'l'
  1924  00D5D0  61                 	db	97	;'a'
  1925  00D5D1  79                 	db	121	;'y'
  1926  00D5D2  65                 	db	101	;'e'
  1927  00D5D3  64                 	db	100	;'d'
  1928  00D5D4  20                 	db	32
  1929  00D5D5  69                 	db	105	;'i'
  1930  00D5D6  6E                 	db	110	;'n'
  1931  00D5D7  20                 	db	32
  1932  00D5D8  68                 	db	104	;'h'
  1933  00D5D9  65                 	db	101	;'e'
  1934  00D5DA  78                 	db	120	;'x'
  1935  00D5DB  29                 	db	41
  1936  00D5DC  20                 	db	32
  1937  00D5DD  61                 	db	97	;'a'
  1938  00D5DE  73                 	db	115	;'s'
  1939  00D5DF  20                 	db	32
  1940  00D5E0  73                 	db	115	;'s'
  1941  00D5E1  74                 	db	116	;'t'
  1942  00D5E2  6F                 	db	111	;'o'
  1943  00D5E3  72                 	db	114	;'r'
  1944  00D5E4  65                 	db	101	;'e'
  1945  00D5E5  64                 	db	100	;'d'
  1946  00D5E6  20                 	db	32
  1947  00D5E7  69                 	db	105	;'i'
  1948  00D5E8  6E                 	db	110	;'n'
  1949  00D5E9  20                 	db	32
  1950  00D5EA  66                 	db	102	;'f'
  1951  00D5EB  6C                 	db	108	;'l'
  1952  00D5EC  61                 	db	97	;'a'
  1953  00D5ED  73                 	db	115	;'s'
  1954  00D5EE  68                 	db	104	;'h'
  1955  00D5EF  20                 	db	32
  1956  00D5F0  6D                 	db	109	;'m'
  1957  00D5F1  65                 	db	101	;'e'
  1958  00D5F2  6D                 	db	109	;'m'
  1959  00D5F3  6F                 	db	111	;'o'
  1960  00D5F4  72                 	db	114	;'r'
  1961  00D5F5  79                 	db	121	;'y'
  1962  00D5F6  0A                 	db	10
  1963  00D5F7  0D                 	db	13
  1964  00D5F8  20                 	db	32
  1965  00D5F9  20                 	db	32
  1966  00D5FA  20                 	db	32
  1967  00D5FB  41                 	db	65	;'A'
  1968  00D5FC  44                 	db	68	;'D'
  1969  00D5FD  43                 	db	67	;'C'
  1970  00D5FE  20                 	db	32
  1971  00D5FF  45                 	db	69	;'E'
  1972  00D600  72                 	db	114	;'r'
  1973  00D601  72                 	db	114	;'r'
  1974  00D602  6F                 	db	111	;'o'
  1975  00D603  72                 	db	114	;'r'
  1976  00D604  3F                 	db	63	;'?'
  1977  00D605  3A                 	db	58	;':'
  1978  00D606  20                 	db	32
  1979  00D607  52                 	db	82	;'R'
  1980  00D608  65                 	db	101	;'e'
  1981  00D609  74                 	db	116	;'t'
  1982  00D60A  75                 	db	117	;'u'
  1983  00D60B  72                 	db	114	;'r'
  1984  00D60C  6E                 	db	110	;'n'
  1985  00D60D  73                 	db	115	;'s'
  1986  00D60E  20                 	db	32
  1987  00D60F  74                 	db	116	;'t'
  1988  00D610  68                 	db	104	;'h'
  1989  00D611  65                 	db	101	;'e'
  1990  00D612  20                 	db	32
  1991  00D613  63                 	db	99	;'c'
  1992  00D614  61                 	db	97	;'a'
  1993  00D615  75                 	db	117	;'u'
  1994  00D616  73                 	db	115	;'s'
  1995  00D617  65                 	db	101	;'e'
  1996  00D618  20                 	db	32
  1997  00D619  6F                 	db	111	;'o'
  1998  00D61A  66                 	db	102	;'f'
  1999  00D61B  20                 	db	32
  2000  00D61C  61                 	db	97	;'a'
  2001  00D61D  6E                 	db	110	;'n'
  2002  00D61E  20                 	db	32
  2003  00D61F  41                 	db	65	;'A'
  2004  00D620  44                 	db	68	;'D'
  2005  00D621  43                 	db	67	;'C'
  2006  00D622  20                 	db	32
  2007  00D623  65                 	db	101	;'e'
  2008  00D624  72                 	db	114	;'r'
  2009  00D625  72                 	db	114	;'r'
  2010  00D626  6F                 	db	111	;'o'
  2011  00D627  72                 	db	114	;'r'
  2012  00D628  20                 	db	32
  2013  00D629  69                 	db	105	;'i'
  2014  00D62A  66                 	db	102	;'f'
  2015  00D62B  20                 	db	32
  2016  00D62C  61                 	db	97	;'a'
  2017  00D62D  6E                 	db	110	;'n'
  2018  00D62E  20                 	db	32
  2019  00D62F  65                 	db	101	;'e'
  2020  00D630  72                 	db	114	;'r'
  2021  00D631  72                 	db	114	;'r'
  2022  00D632  6F                 	db	111	;'o'
  2023  00D633  72                 	db	114	;'r'
  2024  00D634  20                 	db	32
  2025  00D635  6F                 	db	111	;'o'
  2026  00D636  63                 	db	99	;'c'
  2027  00D637  63                 	db	99	;'c'
  2028  00D638  75                 	db	117	;'u'
  2029  00D639  72                 	db	114	;'r'
  2030  00D63A  72                 	db	114	;'r'
  2031  00D63B  65                 	db	101	;'e'
  2032  00D63C  64                 	db	100	;'d'
  2033  00D63D  0A                 	db	10
  2034  00D63E  0D                 	db	13
  2035  00D63F  20                 	db	32
  2036  00D640  20                 	db	32
  2037  00D641  20                 	db	32
  2038  00D642  43                 	db	67	;'C'
  2039  00D643  6C                 	db	108	;'l'
  2040  00D644  65                 	db	101	;'e'
  2041  00D645  61                 	db	97	;'a'
  2042  00D646  72                 	db	114	;'r'
  2043  00D647  20                 	db	32
  2044  00D648  41                 	db	65	;'A'
  2045  00D649  44                 	db	68	;'D'
  2046  00D64A  43                 	db	67	;'C'
  2047  00D64B  20                 	db	32
  2048  00D64C  45                 	db	69	;'E'
  2049  00D64D  72                 	db	114	;'r'
  2050  00D64E  72                 	db	114	;'r'
  2051  00D64F  6F                 	db	111	;'o'
  2052  00D650  72                 	db	114	;'r'
  2053  00D651  3A                 	db	58	;':'
  2054  00D652  20                 	db	32
  2055  00D653  43                 	db	67	;'C'
  2056  00D654  6C                 	db	108	;'l'
  2057  00D655  65                 	db	101	;'e'
  2058  00D656  61                 	db	97	;'a'
  2059  00D657  72                 	db	114	;'r'
  2060  00D658  73                 	db	115	;'s'
  2061  00D659  20                 	db	32
  2062  00D65A  74                 	db	116	;'t'
  2063  00D65B  68                 	db	104	;'h'
  2064  00D65C  65                 	db	101	;'e'
  2065  00D65D  20                 	db	32
  2066  00D65E  41                 	db	65	;'A'
  2067  00D65F  44                 	db	68	;'D'
  2068  00D660  43                 	db	67	;'C'
  2069  00D661  20                 	db	32
  2070  00D662  65                 	db	101	;'e'
  2071  00D663  72                 	db	114	;'r'
  2072  00D664  72                 	db	114	;'r'
  2073  00D665  6F                 	db	111	;'o'
  2074  00D666  72                 	db	114	;'r'
  2075  00D667  20                 	db	32
  2076  00D668  61                 	db	97	;'a'
  2077  00D669  6E                 	db	110	;'n'
  2078  00D66A  64                 	db	100	;'d'
  2079  00D66B  20                 	db	32
  2080  00D66C  72                 	db	114	;'r'
  2081  00D66D  65                 	db	101	;'e'
  2082  00D66E  73                 	db	115	;'s'
  2083  00D66F  75                 	db	117	;'u'
  2084  00D670  6D                 	db	109	;'m'
  2085  00D671  65                 	db	101	;'e'
  2086  00D672  73                 	db	115	;'s'
  2087  00D673  20                 	db	32
  2088  00D674  41                 	db	65	;'A'
  2089  00D675  44                 	db	68	;'D'
  2090  00D676  43                 	db	67	;'C'
  2091  00D677  20                 	db	32
  2092  00D678  63                 	db	99	;'c'
  2093  00D679  6F                 	db	111	;'o'
  2094  00D67A  6E                 	db	110	;'n'
  2095  00D67B  76                 	db	118	;'v'
  2096  00D67C  65                 	db	101	;'e'
  2097  00D67D  72                 	db	114	;'r'
  2098  00D67E  73                 	db	115	;'s'
  2099  00D67F  69                 	db	105	;'i'
  2100  00D680  6F                 	db	111	;'o'
  2101  00D681  6E                 	db	110	;'n'
  2102  00D682  73                 	db	115	;'s'
  2103  00D683  0A                 	db	10
  2104  00D684  0D                 	db	13
  2105  00D685  20                 	db	32
  2106  00D686  20                 	db	32
  2107  00D687  20                 	db	32
  2108  00D688  43                 	db	67	;'C'
  2109  00D689  6F                 	db	111	;'o'
  2110  00D68A  6D                 	db	109	;'m'
  2111  00D68B  6D                 	db	109	;'m'
  2112  00D68C  20                 	db	32
  2113  00D68D  45                 	db	69	;'E'
  2114  00D68E  72                 	db	114	;'r'
  2115  00D68F  72                 	db	114	;'r'
  2116  00D690  6F                 	db	111	;'o'
  2117  00D691  72                 	db	114	;'r'
  2118  00D692  3F                 	db	63	;'?'
  2119  00D693  3A                 	db	58	;':'
  2120  00D694  20                 	db	32
  2121  00D695  52                 	db	82	;'R'
  2122  00D696  65                 	db	101	;'e'
  2123  00D697  74                 	db	116	;'t'
  2124  00D698  75                 	db	117	;'u'
  2125  00D699  72                 	db	114	;'r'
  2126  00D69A  6E                 	db	110	;'n'
  2127  00D69B  73                 	db	115	;'s'
  2128  00D69C  20                 	db	32
  2129  00D69D  69                 	db	105	;'i'
  2130  00D69E  66                 	db	102	;'f'
  2131  00D69F  20                 	db	32
  2132  00D6A0  61                 	db	97	;'a'
  2133  00D6A1  20                 	db	32
  2134  00D6A2  63                 	db	99	;'c'
  2135  00D6A3  6F                 	db	111	;'o'
  2136  00D6A4  6D                 	db	109	;'m'
  2137  00D6A5  6D                 	db	109	;'m'
  2138  00D6A6  75                 	db	117	;'u'
  2139  00D6A7  6E                 	db	110	;'n'
  2140  00D6A8  69                 	db	105	;'i'
  2141  00D6A9  63                 	db	99	;'c'
  2142  00D6AA  61                 	db	97	;'a'
  2143  00D6AB  74                 	db	116	;'t'
  2144  00D6AC  69                 	db	105	;'i'
  2145  00D6AD  6F                 	db	111	;'o'
  2146  00D6AE  6E                 	db	110	;'n'
  2147  00D6AF  73                 	db	115	;'s'
  2148  00D6B0  20                 	db	32
  2149  00D6B1  65                 	db	101	;'e'
  2150  00D6B2  72                 	db	114	;'r'
  2151  00D6B3  72                 	db	114	;'r'
  2152  00D6B4  6F                 	db	111	;'o'
  2153  00D6B5  72                 	db	114	;'r'
  2154  00D6B6  20                 	db	32
  2155  00D6B7  68                 	db	104	;'h'
  2156  00D6B8  61                 	db	97	;'a'
  2157  00D6B9  73                 	db	115	;'s'
  2158  00D6BA  20                 	db	32
  2159  00D6BB  6F                 	db	111	;'o'
  2160  00D6BC  63                 	db	99	;'c'
  2161  00D6BD  63                 	db	99	;'c'
  2162  00D6BE  75                 	db	117	;'u'
  2163  00D6BF  72                 	db	114	;'r'
  2164  00D6C0  72                 	db	114	;'r'
  2165  00D6C1  65                 	db	101	;'e'
  2166  00D6C2  64                 	db	100	;'d'
  2167  00D6C3  0A                 	db	10
  2168  00D6C4  0D                 	db	13
  2169  00D6C5  20                 	db	32
  2170  00D6C6  20                 	db	32
  2171  00D6C7  20                 	db	32
  2172  00D6C8  43                 	db	67	;'C'
  2173  00D6C9  6C                 	db	108	;'l'
  2174  00D6CA  65                 	db	101	;'e'
  2175  00D6CB  61                 	db	97	;'a'
  2176  00D6CC  72                 	db	114	;'r'
  2177  00D6CD  20                 	db	32
  2178  00D6CE  43                 	db	67	;'C'
  2179  00D6CF  6F                 	db	111	;'o'
  2180  00D6D0  6D                 	db	109	;'m'
  2181  00D6D1  6D                 	db	109	;'m'
  2182  00D6D2  20                 	db	32
  2183  00D6D3  45                 	db	69	;'E'
  2184  00D6D4  72                 	db	114	;'r'
  2185  00D6D5  72                 	db	114	;'r'
  2186  00D6D6  6F                 	db	111	;'o'
  2187  00D6D7  72                 	db	114	;'r'
  2188  00D6D8  3A                 	db	58	;':'
  2189  00D6D9  20                 	db	32
  2190  00D6DA  43                 	db	67	;'C'
  2191  00D6DB  6C                 	db	108	;'l'
  2192  00D6DC  65                 	db	101	;'e'
  2193  00D6DD  61                 	db	97	;'a'
  2194  00D6DE  72                 	db	114	;'r'
  2195  00D6DF  73                 	db	115	;'s'
  2196  00D6E0  20                 	db	32
  2197  00D6E1  74                 	db	116	;'t'
  2198  00D6E2  68                 	db	104	;'h'
  2199  00D6E3  65                 	db	101	;'e'
  2200  00D6E4  20                 	db	32
  2201  00D6E5  63                 	db	99	;'c'
  2202  00D6E6  6F                 	db	111	;'o'
  2203  00D6E7  6D                 	db	109	;'m'
  2204  00D6E8  6D                 	db	109	;'m'
  2205  00D6E9  75                 	db	117	;'u'
  2206  00D6EA  6E                 	db	110	;'n'
  2207  00D6EB  69                 	db	105	;'i'
  2208  00D6EC  63                 	db	99	;'c'
  2209  00D6ED  61                 	db	97	;'a'
  2210  00D6EE  74                 	db	116	;'t'
  2211  00D6EF  69                 	db	105	;'i'
  2212  00D6F0  6F                 	db	111	;'o'
  2213  00D6F1  6E                 	db	110	;'n'
  2214  00D6F2  73                 	db	115	;'s'
  2215  00D6F3  20                 	db	32
  2216  00D6F4  65                 	db	101	;'e'
  2217  00D6F5  72                 	db	114	;'r'
  2218  00D6F6  72                 	db	114	;'r'
  2219  00D6F7  6F                 	db	111	;'o'
  2220  00D6F8  72                 	db	114	;'r'
  2221  00D6F9  0A                 	db	10
  2222  00D6FA  0D                 	db	13
  2223  00D6FB  20                 	db	32
  2224  00D6FC  20                 	db	32
  2225  00D6FD  20                 	db	32
  2226  00D6FE  43                 	db	67	;'C'
  2227  00D6FF  6C                 	db	108	;'l'
  2228  00D700  65                 	db	101	;'e'
  2229  00D701  61                 	db	97	;'a'
  2230  00D702  72                 	db	114	;'r'
  2231  00D703  20                 	db	32
  2232  00D704  4D                 	db	77	;'M'
  2233  00D705  61                 	db	97	;'a'
  2234  00D706  78                 	db	120	;'x'
  2235  00D707  20                 	db	32
  2236  00D708  56                 	db	86	;'V'
  2237  00D709  61                 	db	97	;'a'
  2238  00D70A  6C                 	db	108	;'l'
  2239  00D70B  75                 	db	117	;'u'
  2240  00D70C  65                 	db	101	;'e'
  2241  00D70D  73                 	db	115	;'s'
  2242  00D70E  3A                 	db	58	;':'
  2243  00D70F  20                 	db	32
  2244  00D710  45                 	db	69	;'E'
  2245  00D711  72                 	db	114	;'r'
  2246  00D712  61                 	db	97	;'a'
  2247  00D713  73                 	db	115	;'s'
  2248  00D714  65                 	db	101	;'e'
  2249  00D715  73                 	db	115	;'s'
  2250  00D716  20                 	db	32
  2251  00D717  6D                 	db	109	;'m'
  2252  00D718  61                 	db	97	;'a'
  2253  00D719  78                 	db	120	;'x'
  2254  00D71A  69                 	db	105	;'i'
  2255  00D71B  6D                 	db	109	;'m'
  2256  00D71C  75                 	db	117	;'u'
  2257  00D71D  6D                 	db	109	;'m'
  2258  00D71E  20                 	db	32
  2259  00D71F  72                 	db	114	;'r'
  2260  00D720  65                 	db	101	;'e'
  2261  00D721  63                 	db	99	;'c'
  2262  00D722  6F                 	db	111	;'o'
  2263  00D723  72                 	db	114	;'r'
  2264  00D724  64                 	db	100	;'d'
  2265  00D725  65                 	db	101	;'e'
  2266  00D726  64                 	db	100	;'d'
  2267  00D727  20                 	db	32
  2268  00D728  76                 	db	118	;'v'
  2269  00D729  61                 	db	97	;'a'
  2270  00D72A  6C                 	db	108	;'l'
  2271  00D72B  75                 	db	117	;'u'
  2272  00D72C  65                 	db	101	;'e'
  2273  00D72D  73                 	db	115	;'s'
  2274  00D72E  20                 	db	32
  2275  00D72F  66                 	db	102	;'f'
  2276  00D730  72                 	db	114	;'r'
  2277  00D731  6F                 	db	111	;'o'
  2278  00D732  6D                 	db	109	;'m'
  2279  00D733  20                 	db	32
  2280  00D734  45                 	db	69	;'E'
  2281  00D735  45                 	db	69	;'E'
  2282  00D736  50                 	db	80	;'P'
  2283  00D737  52                 	db	82	;'R'
  2284  00D738  4F                 	db	79	;'O'
  2285  00D739  4D                 	db	77	;'M'
  2286  00D73A  0A                 	db	10
  2287  00D73B  0D                 	db	13
  2288  00D73C  20                 	db	32
  2289  00D73D  20                 	db	32
  2290  00D73E  20                 	db	32
  2291  00D73F  48                 	db	72	;'H'
  2292  00D740  65                 	db	101	;'e'
  2293  00D741  6C                 	db	108	;'l'
  2294  00D742  70                 	db	112	;'p'
  2295  00D743  3A                 	db	58	;':'
  2296  00D744  20                 	db	32
  2297  00D745  54                 	db	84	;'T'
  2298  00D746  68                 	db	104	;'h'
  2299  00D747  69                 	db	105	;'i'
  2300  00D748  73                 	db	115	;'s'
  2301  00D749  20                 	db	32
  2302  00D74A  6D                 	db	109	;'m'
  2303  00D74B  65                 	db	101	;'e'
  2304  00D74C  73                 	db	115	;'s'
  2305  00D74D  73                 	db	115	;'s'
  2306  00D74E  61                 	db	97	;'a'
  2307  00D74F  67                 	db	103	;'g'
  2308  00D750  65                 	db	101	;'e'
  2309  00D751  2C                 	db	44
  2310  00D752  20                 	db	32
  2311  00D753  6C                 	db	108	;'l'
  2312  00D754  69                 	db	105	;'i'
  2313  00D755  73                 	db	115	;'s'
  2314  00D756  74                 	db	116	;'t'
  2315  00D757  73                 	db	115	;'s'
  2316  00D758  20                 	db	32
  2317  00D759  73                 	db	115	;'s'
  2318  00D75A  75                 	db	117	;'u'
  2319  00D75B  70                 	db	112	;'p'
  2320  00D75C  70                 	db	112	;'p'
  2321  00D75D  6F                 	db	111	;'o'
  2322  00D75E  72                 	db	114	;'r'
  2323  00D75F  74                 	db	116	;'t'
  2324  00D760  65                 	db	101	;'e'
  2325  00D761  64                 	db	100	;'d'
  2326  00D762  20                 	db	32
  2327  00D763  63                 	db	99	;'c'
  2328  00D764  6F                 	db	111	;'o'
  2329  00D765  6D                 	db	109	;'m'
  2330  00D766  6D                 	db	109	;'m'
  2331  00D767  61                 	db	97	;'a'
  2332  00D768  6E                 	db	110	;'n'
  2333  00D769  64                 	db	100	;'d'
  2334  00D76A  73                 	db	115	;'s'
  2335  00D76B  0A                 	db	10
  2336  00D76C  0D                 	db	13
  2337  00D76D  0A                 	db	10
  2338  00D76E  0D                 	db	13
  2339  00D76F  44                 	db	68	;'D'
  2340  00D770  65                 	db	101	;'e'
  2341  00D771  76                 	db	118	;'v'
  2342  00D772  69                 	db	105	;'i'
  2343  00D773  63                 	db	99	;'c'
  2344  00D774  65                 	db	101	;'e'
  2345  00D775  20                 	db	32
  2346  00D776  4D                 	db	77	;'M'
  2347  00D777  65                 	db	101	;'e'
  2348  00D778  61                 	db	97	;'a'
  2349  00D779  73                 	db	115	;'s'
  2350  00D77A  75                 	db	117	;'u'
  2351  00D77B  72                 	db	114	;'r'
  2352  00D77C  65                 	db	101	;'e'
  2353  00D77D  6D                 	db	109	;'m'
  2354  00D77E  65                 	db	101	;'e'
  2355  00D77F  6E                 	db	110	;'n'
  2356  00D780  74                 	db	116	;'t'
  2357  00D781  20                 	db	32
  2358  00D782  43                 	db	67	;'C'
  2359  00D783  6F                 	db	111	;'o'
  2360  00D784  6D                 	db	109	;'m'
  2361  00D785  6D                 	db	109	;'m'
  2362  00D786  61                 	db	97	;'a'
  2363  00D787  6E                 	db	110	;'n'
  2364  00D788  64                 	db	100	;'d'
  2365  00D789  73                 	db	115	;'s'
  2366  00D78A  3A                 	db	58	;':'
  2367  00D78B  20                 	db	32
  2368  00D78C  56                 	db	86	;'V'
  2369  00D78D  69                 	db	105	;'i'
  2370  00D78E  65                 	db	101	;'e'
  2371  00D78F  77                 	db	119	;'w'
  2372  00D790  20                 	db	32
  2373  00D791  6C                 	db	108	;'l'
  2374  00D792  6F                 	db	111	;'o'
  2375  00D793  77                 	db	119	;'w'
  2376  00D794  20                 	db	32
  2377  00D795  6C                 	db	108	;'l'
  2378  00D796  65                 	db	101	;'e'
  2379  00D797  76                 	db	118	;'v'
  2380  00D798  65                 	db	101	;'e'
  2381  00D799  6C                 	db	108	;'l'
  2382  00D79A  20                 	db	32
  2383  00D79B  73                 	db	115	;'s'
  2384  00D79C  79                 	db	121	;'y'
  2385  00D79D  73                 	db	115	;'s'
  2386  00D79E  74                 	db	116	;'t'
  2387  00D79F  65                 	db	101	;'e'
  2388  00D7A0  6D                 	db	109	;'m'
  2389  00D7A1  20                 	db	32
  2390  00D7A2  6D                 	db	109	;'m'
  2391  00D7A3  65                 	db	101	;'e'
  2392  00D7A4  61                 	db	97	;'a'
  2393  00D7A5  73                 	db	115	;'s'
  2394  00D7A6  75                 	db	117	;'u'
  2395  00D7A7  72                 	db	114	;'r'
  2396  00D7A8  65                 	db	101	;'e'
  2397  00D7A9  6D                 	db	109	;'m'
  2398  00D7AA  65                 	db	101	;'e'
  2399  00D7AB  6E                 	db	110	;'n'
  2400  00D7AC  74                 	db	116	;'t'
  2401  00D7AD  73                 	db	115	;'s'
  2402  00D7AE  0A                 	db	10
  2403  00D7AF  0D                 	db	13
  2404  00D7B0  20                 	db	32
  2405  00D7B1  20                 	db	32
  2406  00D7B2  20                 	db	32
  2407  00D7B3  4D                 	db	77	;'M'
  2408  00D7B4  65                 	db	101	;'e'
  2409  00D7B5  61                 	db	97	;'a'
  2410  00D7B6  73                 	db	115	;'s'
  2411  00D7B7  75                 	db	117	;'u'
  2412  00D7B8  72                 	db	114	;'r'
  2413  00D7B9  65                 	db	101	;'e'
  2414  00D7BA  20                 	db	32
  2415  00D7BB  50                 	db	80	;'P'
  2416  00D7BC  4F                 	db	79	;'O'
  2417  00D7BD  53                 	db	83	;'S'
  2418  00D7BE  33                 	db	51	;'3'
  2419  00D7BF  50                 	db	80	;'P'
  2420  00D7C0  33                 	db	51	;'3'
  2421  00D7C1  3F                 	db	63	;'?'
  2422  00D7C2  3A                 	db	58	;':'
  2423  00D7C3  20                 	db	32
  2424  00D7C4  52                 	db	82	;'R'
  2425  00D7C5  65                 	db	101	;'e'
  2426  00D7C6  74                 	db	116	;'t'
  2427  00D7C7  75                 	db	117	;'u'
  2428  00D7C8  72                 	db	114	;'r'
  2429  00D7C9  6E                 	db	110	;'n'
  2430  00D7CA  73                 	db	115	;'s'
  2431  00D7CB  20                 	db	32
  2432  00D7CC  2B                 	db	43
  2433  00D7CD  33                 	db	51	;'3'
  2434  00D7CE  2E                 	db	46
  2435  00D7CF  33                 	db	51	;'3'
  2436  00D7D0  56                 	db	86	;'V'
  2437  00D7D1  20                 	db	32
  2438  00D7D2  41                 	db	65	;'A'
  2439  00D7D3  44                 	db	68	;'D'
  2440  00D7D4  43                 	db	67	;'C'
  2441  00D7D5  20                 	db	32
  2442  00D7D6  43                 	db	67	;'C'
  2443  00D7D7  6F                 	db	111	;'o'
  2444  00D7D8  6E                 	db	110	;'n'
  2445  00D7D9  76                 	db	118	;'v'
  2446  00D7DA  65                 	db	101	;'e'
  2447  00D7DB  72                 	db	114	;'r'
  2448  00D7DC  73                 	db	115	;'s'
  2449  00D7DD  69                 	db	105	;'i'
  2450  00D7DE  6F                 	db	111	;'o'
  2451  00D7DF  6E                 	db	110	;'n'
  2452  00D7E0  20                 	db	32
  2453  00D7E1  69                 	db	105	;'i'
  2454  00D7E2  6E                 	db	110	;'n'
  2455  00D7E3  20                 	db	32
  2456  00D7E4  76                 	db	118	;'v'
  2457  00D7E5  6F                 	db	111	;'o'
  2458  00D7E6  6C                 	db	108	;'l'
  2459  00D7E7  74                 	db	116	;'t'
  2460  00D7E8  73                 	db	115	;'s'
  2461  00D7E9  0A                 	db	10
  2462  00D7EA  0D                 	db	13
  2463  00D7EB  20                 	db	32
  2464  00D7EC  20                 	db	32
  2465  00D7ED  20                 	db	32
  2466  00D7EE  4D                 	db	77	;'M'
  2467  00D7EF  65                 	db	101	;'e'
  2468  00D7F0  61                 	db	97	;'a'
  2469  00D7F1  73                 	db	115	;'s'
  2470  00D7F2  75                 	db	117	;'u'
  2471  00D7F3  72                 	db	114	;'r'
  2472  00D7F4  65                 	db	101	;'e'
  2473  00D7F5  20                 	db	32
  2474  00D7F6  50                 	db	80	;'P'
  2475  00D7F7  4F                 	db	79	;'O'
  2476  00D7F8  53                 	db	83	;'S'
  2477  00D7F9  31                 	db	49	;'1'
  2478  00D7FA  32                 	db	50	;'2'
  2479  00D7FB  3F                 	db	63	;'?'
  2480  00D7FC  3A                 	db	58	;':'
  2481  00D7FD  20                 	db	32
  2482  00D7FE  52                 	db	82	;'R'
  2483  00D7FF  65                 	db	101	;'e'
  2484  00D800  74                 	db	116	;'t'
  2485  00D801  75                 	db	117	;'u'
  2486  00D802  72                 	db	114	;'r'
  2487  00D803  6E                 	db	110	;'n'
  2488  00D804  73                 	db	115	;'s'
  2489  00D805  20                 	db	32
  2490  00D806  2B                 	db	43
  2491  00D807  31                 	db	49	;'1'
  2492  00D808  32                 	db	50	;'2'
  2493  00D809  56                 	db	86	;'V'
  2494  00D80A  20                 	db	32
  2495  00D80B  41                 	db	65	;'A'
  2496  00D80C  44                 	db	68	;'D'
  2497  00D80D  43                 	db	67	;'C'
  2498  00D80E  20                 	db	32
  2499  00D80F  43                 	db	67	;'C'
  2500  00D810  6F                 	db	111	;'o'
  2501  00D811  6E                 	db	110	;'n'
  2502  00D812  76                 	db	118	;'v'
  2503  00D813  65                 	db	101	;'e'
  2504  00D814  72                 	db	114	;'r'
  2505  00D815  73                 	db	115	;'s'
  2506  00D816  69                 	db	105	;'i'
  2507  00D817  6F                 	db	111	;'o'
  2508  00D818  6E                 	db	110	;'n'
  2509  00D819  20                 	db	32
  2510  00D81A  69                 	db	105	;'i'
  2511  00D81B  6E                 	db	110	;'n'
  2512  00D81C  20                 	db	32
  2513  00D81D  76                 	db	118	;'v'
  2514  00D81E  6F                 	db	111	;'o'
  2515  00D81F  6C                 	db	108	;'l'
  2516  00D820  74                 	db	116	;'t'
  2517  00D821  73                 	db	115	;'s'
  2518  00D822  0A                 	db	10
  2519  00D823  0D                 	db	13
  2520  00D824  20                 	db	32
  2521  00D825  20                 	db	32
  2522  00D826  20                 	db	32
  2523  00D827  4D                 	db	77	;'M'
  2524  00D828  65                 	db	101	;'e'
  2525  00D829  61                 	db	97	;'a'
  2526  00D82A  73                 	db	115	;'s'
  2527  00D82B  75                 	db	117	;'u'
  2528  00D82C  72                 	db	114	;'r'
  2529  00D82D  65                 	db	101	;'e'
  2530  00D82E  20                 	db	32
  2531  00D82F  44                 	db	68	;'D'
  2532  00D830  69                 	db	105	;'i'
  2533  00D831  65                 	db	101	;'e'
  2534  00D832  20                 	db	32
  2535  00D833  54                 	db	84	;'T'
  2536  00D834  65                 	db	101	;'e'
  2537  00D835  6D                 	db	109	;'m'
  2538  00D836  70                 	db	112	;'p'
  2539  00D837  3F                 	db	63	;'?'
  2540  00D838  3A                 	db	58	;':'
  2541  00D839  20                 	db	32
  2542  00D83A  52                 	db	82	;'R'
  2543  00D83B  65                 	db	101	;'e'
  2544  00D83C  74                 	db	116	;'t'
  2545  00D83D  75                 	db	117	;'u'
  2546  00D83E  72                 	db	114	;'r'
  2547  00D83F  6E                 	db	110	;'n'
  2548  00D840  73                 	db	115	;'s'
  2549  00D841  20                 	db	32
  2550  00D842  74                 	db	116	;'t'
  2551  00D843  68                 	db	104	;'h'
  2552  00D844  65                 	db	101	;'e'
  2553  00D845  20                 	db	32
  2554  00D846  6D                 	db	109	;'m'
  2555  00D847  69                 	db	105	;'i'
  2556  00D848  63                 	db	99	;'c'
  2557  00D849  72                 	db	114	;'r'
  2558  00D84A  6F                 	db	111	;'o'
  2559  00D84B  63                 	db	99	;'c'
  2560  00D84C  6F                 	db	111	;'o'
  2561  00D84D  6E                 	db	110	;'n'
  2562  00D84E  74                 	db	116	;'t'
  2563  00D84F  72                 	db	114	;'r'
  2564  00D850  6F                 	db	111	;'o'
  2565  00D851  6C                 	db	108	;'l'
  2566  00D852  6C                 	db	108	;'l'
  2567  00D853  65                 	db	101	;'e'
  2568  00D854  72                 	db	114	;'r'
  2569  00D855  20                 	db	32
  2570  00D856  64                 	db	100	;'d'
  2571  00D857  69                 	db	105	;'i'
  2572  00D858  65                 	db	101	;'e'
  2573  00D859  20                 	db	32
  2574  00D85A  74                 	db	116	;'t'
  2575  00D85B  65                 	db	101	;'e'
  2576  00D85C  6D                 	db	109	;'m'
  2577  00D85D  70                 	db	112	;'p'
  2578  00D85E  65                 	db	101	;'e'
  2579  00D85F  72                 	db	114	;'r'
  2580  00D860  61                 	db	97	;'a'
  2581  00D861  74                 	db	116	;'t'
  2582  00D862  75                 	db	117	;'u'
  2583  00D863  72                 	db	114	;'r'
  2584  00D864  65                 	db	101	;'e'
  2585  00D865  20                 	db	32
  2586  00D866  69                 	db	105	;'i'
  2587  00D867  6E                 	db	110	;'n'
  2588  00D868  20                 	db	32
  2589  00D869  64                 	db	100	;'d'
  2590  00D86A  65                 	db	101	;'e'
  2591  00D86B  67                 	db	103	;'g'
  2592  00D86C  72                 	db	114	;'r'
  2593  00D86D  65                 	db	101	;'e'
  2594  00D86E  65                 	db	101	;'e'
  2595  00D86F  73                 	db	115	;'s'
  2596  00D870  20                 	db	32
  2597  00D871  43                 	db	67	;'C'
  2598  00D872  0A                 	db	10
  2599  00D873  0D                 	db	13
  2600  00D874  20                 	db	32
  2601  00D875  20                 	db	32
  2602  00D876  20                 	db	32
  2603  00D877  4D                 	db	77	;'M'
  2604  00D878  65                 	db	101	;'e'
  2605  00D879  61                 	db	97	;'a'
  2606  00D87A  73                 	db	115	;'s'
  2607  00D87B  75                 	db	117	;'u'
  2608  00D87C  72                 	db	114	;'r'
  2609  00D87D  65                 	db	101	;'e'
  2610  00D87E  20                 	db	32
  2611  00D87F  46                 	db	70	;'F'
  2612  00D880  56                 	db	86	;'V'
  2613  00D881  52                 	db	82	;'R'
  2614  00D882  3F                 	db	63	;'?'
  2615  00D883  3A                 	db	58	;':'
  2616  00D884  20                 	db	32
  2617  00D885  52                 	db	82	;'R'
  2618  00D886  65                 	db	101	;'e'
  2619  00D887  74                 	db	116	;'t'
  2620  00D888  75                 	db	117	;'u'
  2621  00D889  72                 	db	114	;'r'
  2622  00D88A  6E                 	db	110	;'n'
  2623  00D88B  73                 	db	115	;'s'
  2624  00D88C  20                 	db	32
  2625  00D88D  74                 	db	116	;'t'
  2626  00D88E  68                 	db	104	;'h'
  2627  00D88F  65                 	db	101	;'e'
  2628  00D890  20                 	db	32
  2629  00D891  69                 	db	105	;'i'
  2630  00D892  6E                 	db	110	;'n'
  2631  00D893  74                 	db	116	;'t'
  2632  00D894  65                 	db	101	;'e'
  2633  00D895  72                 	db	114	;'r'
  2634  00D896  6E                 	db	110	;'n'
  2635  00D897  61                 	db	97	;'a'
  2636  00D898  6C                 	db	108	;'l'
  2637  00D899  20                 	db	32
  2638  00D89A  66                 	db	102	;'f'
  2639  00D89B  69                 	db	105	;'i'
  2640  00D89C  78                 	db	120	;'x'
  2641  00D89D  65                 	db	101	;'e'
  2642  00D89E  64                 	db	100	;'d'
  2643  00D89F  20                 	db	32
  2644  00D8A0  76                 	db	118	;'v'
  2645  00D8A1  6F                 	db	111	;'o'
  2646  00D8A2  6C                 	db	108	;'l'
  2647  00D8A3  74                 	db	116	;'t'
  2648  00D8A4  61                 	db	97	;'a'
  2649  00D8A5  67                 	db	103	;'g'
  2650  00D8A6  65                 	db	101	;'e'
  2651  00D8A7  20                 	db	32
  2652  00D8A8  72                 	db	114	;'r'
  2653  00D8A9  65                 	db	101	;'e'
  2654  00D8AA  66                 	db	102	;'f'
  2655  00D8AB  65                 	db	101	;'e'
  2656  00D8AC  72                 	db	114	;'r'
  2657  00D8AD  65                 	db	101	;'e'
  2658  00D8AE  6E                 	db	110	;'n'
  2659  00D8AF  63                 	db	99	;'c'
  2660  00D8B0  65                 	db	101	;'e'
  2661  00D8B1  20                 	db	32
  2662  00D8B2  62                 	db	98	;'b'
  2663  00D8B3  75                 	db	117	;'u'
  2664  00D8B4  66                 	db	102	;'f'
  2665  00D8B5  66                 	db	102	;'f'
  2666  00D8B6  65                 	db	101	;'e'
  2667  00D8B7  72                 	db	114	;'r'
  2668  00D8B8  20                 	db	32
  2669  00D8B9  31                 	db	49	;'1'
  2670  00D8BA  20                 	db	32
  2671  00D8BB  6F                 	db	111	;'o'
  2672  00D8BC  75                 	db	117	;'u'
  2673  00D8BD  74                 	db	116	;'t'
  2674  00D8BE  70                 	db	112	;'p'
  2675  00D8BF  75                 	db	117	;'u'
  2676  00D8C0  74                 	db	116	;'t'
  2677  00D8C1  20                 	db	32
  2678  00D8C2  69                 	db	105	;'i'
  2679  00D8C3  6E                 	db	110	;'n'
  2680  00D8C4  20                 	db	32
  2681  00D8C5  76                 	db	118	;'v'
  2682  00D8C6  6F                 	db	111	;'o'
  2683  00D8C7  6C                 	db	108	;'l'
  2684  00D8C8  74                 	db	116	;'t'
  2685  00D8C9  73                 	db	115	;'s'
  2686  00D8CA  0A                 	db	10
  2687  00D8CB  0D                 	db	13
  2688  00D8CC  20                 	db	32
  2689  00D8CD  20                 	db	32
  2690  00D8CE  20                 	db	32
  2691  00D8CF  4D                 	db	77	;'M'
  2692  00D8D0  65                 	db	101	;'e'
  2693  00D8D1  61                 	db	97	;'a'
  2694  00D8D2  73                 	db	115	;'s'
  2695  00D8D3  75                 	db	117	;'u'
  2696  00D8D4  72                 	db	114	;'r'
  2697  00D8D5  65                 	db	101	;'e'
  2698  00D8D6  20                 	db	32
  2699  00D8D7  41                 	db	65	;'A'
  2700  00D8D8  56                 	db	86	;'V'
  2701  00D8D9  53                 	db	83	;'S'
  2702  00D8DA  53                 	db	83	;'S'
  2703  00D8DB  3F                 	db	63	;'?'
  2704  00D8DC  3A                 	db	58	;':'
  2705  00D8DD  20                 	db	32
  2706  00D8DE  52                 	db	82	;'R'
  2707  00D8DF  65                 	db	101	;'e'
  2708  00D8E0  74                 	db	116	;'t'
  2709  00D8E1  75                 	db	117	;'u'
  2710  00D8E2  72                 	db	114	;'r'
  2711  00D8E3  6E                 	db	110	;'n'
  2712  00D8E4  73                 	db	115	;'s'
  2713  00D8E5  20                 	db	32
  2714  00D8E6  74                 	db	116	;'t'
  2715  00D8E7  68                 	db	104	;'h'
  2716  00D8E8  65                 	db	101	;'e'
  2717  00D8E9  20                 	db	32
  2718  00D8EA  6D                 	db	109	;'m'
  2719  00D8EB  65                 	db	101	;'e'
  2720  00D8EC  61                 	db	97	;'a'
  2721  00D8ED  73                 	db	115	;'s'
  2722  00D8EE  75                 	db	117	;'u'
  2723  00D8EF  72                 	db	114	;'r'
  2724  00D8F0  65                 	db	101	;'e'
  2725  00D8F1  64                 	db	100	;'d'
  2726  00D8F2  20                 	db	32
  2727  00D8F3  76                 	db	118	;'v'
  2728  00D8F4  61                 	db	97	;'a'
  2729  00D8F5  6C                 	db	108	;'l'
  2730  00D8F6  75                 	db	117	;'u'
  2731  00D8F7  65                 	db	101	;'e'
  2732  00D8F8  20                 	db	32
  2733  00D8F9  6F                 	db	111	;'o'
  2734  00D8FA  66                 	db	102	;'f'
  2735  00D8FB  20                 	db	32
  2736  00D8FC  41                 	db	65	;'A'
  2737  00D8FD  6E                 	db	110	;'n'
  2738  00D8FE  61                 	db	97	;'a'
  2739  00D8FF  6C                 	db	108	;'l'
  2740  00D900  6F                 	db	111	;'o'
  2741  00D901  67                 	db	103	;'g'
  2742  00D902  20                 	db	32
  2743  00D903  56                 	db	86	;'V'
  2744  00D904  53                 	db	83	;'S'
  2745  00D905  53                 	db	83	;'S'
  2746  00D906  20                 	db	32
  2747  00D907  69                 	db	105	;'i'
  2748  00D908  6E                 	db	110	;'n'
  2749  00D909  20                 	db	32
  2750  00D90A  76                 	db	118	;'v'
  2751  00D90B  6F                 	db	111	;'o'
  2752  00D90C  6C                 	db	108	;'l'
  2753  00D90D  74                 	db	116	;'t'
  2754  00D90E  73                 	db	115	;'s'
  2755  00D90F  0A                 	db	10
  2756  00D910  0D                 	db	13
  2757  00D911  20                 	db	32
  2758  00D912  20                 	db	32
  2759  00D913  20                 	db	32
  2760  00D914  4D                 	db	77	;'M'
  2761  00D915  61                 	db	97	;'a'
  2762  00D916  78                 	db	120	;'x'
  2763  00D917  20                 	db	32
  2764  00D918  50                 	db	80	;'P'
  2765  00D919  4F                 	db	79	;'O'
  2766  00D91A  53                 	db	83	;'S'
  2767  00D91B  33                 	db	51	;'3'
  2768  00D91C  50                 	db	80	;'P'
  2769  00D91D  33                 	db	51	;'3'
  2770  00D91E  20                 	db	32
  2771  00D91F  56                 	db	86	;'V'
  2772  00D920  6F                 	db	111	;'o'
  2773  00D921  6C                 	db	108	;'l'
  2774  00D922  74                 	db	116	;'t'
  2775  00D923  61                 	db	97	;'a'
  2776  00D924  67                 	db	103	;'g'
  2777  00D925  65                 	db	101	;'e'
  2778  00D926  3F                 	db	63	;'?'
  2779  00D927  3A                 	db	58	;':'
  2780  00D928  20                 	db	32
  2781  00D929  52                 	db	82	;'R'
  2782  00D92A  65                 	db	101	;'e'
  2783  00D92B  74                 	db	116	;'t'
  2784  00D92C  75                 	db	117	;'u'
  2785  00D92D  72                 	db	114	;'r'
  2786  00D92E  6E                 	db	110	;'n'
  2787  00D92F  73                 	db	115	;'s'
  2788  00D930  20                 	db	32
  2789  00D931  74                 	db	116	;'t'
  2790  00D932  68                 	db	104	;'h'
  2791  00D933  65                 	db	101	;'e'
  2792  00D934  20                 	db	32
  2793  00D935  6D                 	db	109	;'m'
  2794  00D936  61                 	db	97	;'a'
  2795  00D937  78                 	db	120	;'x'
  2796  00D938  69                 	db	105	;'i'
  2797  00D939  6D                 	db	109	;'m'
  2798  00D93A  75                 	db	117	;'u'
  2799  00D93B  6D                 	db	109	;'m'
  2800  00D93C  20                 	db	32
  2801  00D93D  72                 	db	114	;'r'
  2802  00D93E  65                 	db	101	;'e'
  2803  00D93F  63                 	db	99	;'c'
  2804  00D940  6F                 	db	111	;'o'
  2805  00D941  72                 	db	114	;'r'
  2806  00D942  64                 	db	100	;'d'
  2807  00D943  65                 	db	101	;'e'
  2808  00D944  64                 	db	100	;'d'
  2809  00D945  20                 	db	32
  2810  00D946  2B                 	db	43
  2811  00D947  33                 	db	51	;'3'
  2812  00D948  2E                 	db	46
  2813  00D949  33                 	db	51	;'3'
  2814  00D94A  56                 	db	86	;'V'
  2815  00D94B  20                 	db	32
  2816  00D94C  52                 	db	82	;'R'
  2817  00D94D  61                 	db	97	;'a'
  2818  00D94E  69                 	db	105	;'i'
  2819  00D94F  6C                 	db	108	;'l'
  2820  00D950  20                 	db	32
  2821  00D951  56                 	db	86	;'V'
  2822  00D952  6F                 	db	111	;'o'
  2823  00D953  6C                 	db	108	;'l'
  2824  00D954  74                 	db	116	;'t'
  2825  00D955  61                 	db	97	;'a'
  2826  00D956  67                 	db	103	;'g'
  2827  00D957  65                 	db	101	;'e'
  2828  00D958  20                 	db	32
  2829  00D959  6D                 	db	109	;'m'
  2830  00D95A  65                 	db	101	;'e'
  2831  00D95B  61                 	db	97	;'a'
  2832  00D95C  73                 	db	115	;'s'
  2833  00D95D  75                 	db	117	;'u'
  2834  00D95E  72                 	db	114	;'r'
  2835  00D95F  65                 	db	101	;'e'
  2836  00D960  64                 	db	100	;'d'
  2837  00D961  0A                 	db	10
  2838  00D962  0D                 	db	13
  2839  00D963  20                 	db	32
  2840  00D964  20                 	db	32
  2841  00D965  20                 	db	32
  2842  00D966  4D                 	db	77	;'M'
  2843  00D967  61                 	db	97	;'a'
  2844  00D968  78                 	db	120	;'x'
  2845  00D969  20                 	db	32
  2846  00D96A  50                 	db	80	;'P'
  2847  00D96B  4F                 	db	79	;'O'
  2848  00D96C  53                 	db	83	;'S'
  2849  00D96D  31                 	db	49	;'1'
  2850  00D96E  32                 	db	50	;'2'
  2851  00D96F  20                 	db	32
  2852  00D970  56                 	db	86	;'V'
  2853  00D971  6F                 	db	111	;'o'
  2854  00D972  6C                 	db	108	;'l'
  2855  00D973  74                 	db	116	;'t'
  2856  00D974  61                 	db	97	;'a'
  2857  00D975  67                 	db	103	;'g'
  2858  00D976  65                 	db	101	;'e'
  2859  00D977  3F                 	db	63	;'?'
  2860  00D978  3A                 	db	58	;':'
  2861  00D979  20                 	db	32
  2862  00D97A  52                 	db	82	;'R'
  2863  00D97B  65                 	db	101	;'e'
  2864  00D97C  74                 	db	116	;'t'
  2865  00D97D  75                 	db	117	;'u'
  2866  00D97E  72                 	db	114	;'r'
  2867  00D97F  6E                 	db	110	;'n'
  2868  00D980  73                 	db	115	;'s'
  2869  00D981  20                 	db	32
  2870  00D982  74                 	db	116	;'t'
  2871  00D983  68                 	db	104	;'h'
  2872  00D984  65                 	db	101	;'e'
  2873  00D985  20                 	db	32
  2874  00D986  6D                 	db	109	;'m'
  2875  00D987  61                 	db	97	;'a'
  2876  00D988  78                 	db	120	;'x'
  2877  00D989  69                 	db	105	;'i'
  2878  00D98A  6D                 	db	109	;'m'
  2879  00D98B  75                 	db	117	;'u'
  2880  00D98C  6D                 	db	109	;'m'
  2881  00D98D  20                 	db	32
  2882  00D98E  72                 	db	114	;'r'
  2883  00D98F  65                 	db	101	;'e'
  2884  00D990  63                 	db	99	;'c'
  2885  00D991  6F                 	db	111	;'o'
  2886  00D992  72                 	db	114	;'r'
  2887  00D993  64                 	db	100	;'d'
  2888  00D994  65                 	db	101	;'e'
  2889  00D995  64                 	db	100	;'d'
  2890  00D996  20                 	db	32
  2891  00D997  2B                 	db	43
  2892  00D998  31                 	db	49	;'1'
  2893  00D999  32                 	db	50	;'2'
  2894  00D99A  56                 	db	86	;'V'
  2895  00D99B  20                 	db	32
  2896  00D99C  52                 	db	82	;'R'
  2897  00D99D  61                 	db	97	;'a'
  2898  00D99E  69                 	db	105	;'i'
  2899  00D99F  6C                 	db	108	;'l'
  2900  00D9A0  20                 	db	32
  2901  00D9A1  56                 	db	86	;'V'
  2902  00D9A2  6F                 	db	111	;'o'
  2903  00D9A3  6C                 	db	108	;'l'
  2904  00D9A4  74                 	db	116	;'t'
  2905  00D9A5  61                 	db	97	;'a'
  2906  00D9A6  67                 	db	103	;'g'
  2907  00D9A7  65                 	db	101	;'e'
  2908  00D9A8  20                 	db	32
  2909  00D9A9  6D                 	db	109	;'m'
  2910  00D9AA  65                 	db	101	;'e'
  2911  00D9AB  61                 	db	97	;'a'
  2912  00D9AC  73                 	db	115	;'s'
  2913  00D9AD  75                 	db	117	;'u'
  2914  00D9AE  72                 	db	114	;'r'
  2915  00D9AF  65                 	db	101	;'e'
  2916  00D9B0  64                 	db	100	;'d'
  2917  00D9B1  0A                 	db	10
  2918  00D9B2  0D                 	db	13
  2919  00D9B3  20                 	db	32
  2920  00D9B4  20                 	db	32
  2921  00D9B5  20                 	db	32
  2922  00D9B6  4D                 	db	77	;'M'
  2923  00D9B7  61                 	db	97	;'a'
  2924  00D9B8  78                 	db	120	;'x'
  2925  00D9B9  20                 	db	32
  2926  00D9BA  44                 	db	68	;'D'
  2927  00D9BB  69                 	db	105	;'i'
  2928  00D9BC  65                 	db	101	;'e'
  2929  00D9BD  20                 	db	32
  2930  00D9BE  54                 	db	84	;'T'
  2931  00D9BF  65                 	db	101	;'e'
  2932  00D9C0  6D                 	db	109	;'m'
  2933  00D9C1  70                 	db	112	;'p'
  2934  00D9C2  3F                 	db	63	;'?'
  2935  00D9C3  3A                 	db	58	;':'
  2936  00D9C4  20                 	db	32
  2937  00D9C5  52                 	db	82	;'R'
  2938  00D9C6  65                 	db	101	;'e'
  2939  00D9C7  74                 	db	116	;'t'
  2940  00D9C8  75                 	db	117	;'u'
  2941  00D9C9  72                 	db	114	;'r'
  2942  00D9CA  6E                 	db	110	;'n'
  2943  00D9CB  73                 	db	115	;'s'
  2944  00D9CC  20                 	db	32
  2945  00D9CD  74                 	db	116	;'t'
  2946  00D9CE  68                 	db	104	;'h'
  2947  00D9CF  65                 	db	101	;'e'
  2948  00D9D0  20                 	db	32
  2949  00D9D1  6D                 	db	109	;'m'
  2950  00D9D2  61                 	db	97	;'a'
  2951  00D9D3  78                 	db	120	;'x'
  2952  00D9D4  69                 	db	105	;'i'
  2953  00D9D5  6D                 	db	109	;'m'
  2954  00D9D6  75                 	db	117	;'u'
  2955  00D9D7  6D                 	db	109	;'m'
  2956  00D9D8  20                 	db	32
  2957  00D9D9  72                 	db	114	;'r'
  2958  00D9DA  65                 	db	101	;'e'
  2959  00D9DB  63                 	db	99	;'c'
  2960  00D9DC  6F                 	db	111	;'o'
  2961  00D9DD  72                 	db	114	;'r'
  2962  00D9DE  64                 	db	100	;'d'
  2963  00D9DF  65                 	db	101	;'e'
  2964  00D9E0  64                 	db	100	;'d'
  2965  00D9E1  20                 	db	32
  2966  00D9E2  64                 	db	100	;'d'
  2967  00D9E3  69                 	db	105	;'i'
  2968  00D9E4  65                 	db	101	;'e'
  2969  00D9E5  20                 	db	32
  2970  00D9E6  74                 	db	116	;'t'
  2971  00D9E7  65                 	db	101	;'e'
  2972  00D9E8  6D                 	db	109	;'m'
  2973  00D9E9  70                 	db	112	;'p'
  2974  00D9EA  65                 	db	101	;'e'
  2975  00D9EB  72                 	db	114	;'r'
  2976  00D9EC  61                 	db	97	;'a'
  2977  00D9ED  74                 	db	116	;'t'
  2978  00D9EE  75                 	db	117	;'u'
  2979  00D9EF  72                 	db	114	;'r'
  2980  00D9F0  65                 	db	101	;'e'
  2981  00D9F1  20                 	db	32
  2982  00D9F2  6D                 	db	109	;'m'
  2983  00D9F3  65                 	db	101	;'e'
  2984  00D9F4  61                 	db	97	;'a'
  2985  00D9F5  73                 	db	115	;'s'
  2986  00D9F6  75                 	db	117	;'u'
  2987  00D9F7  72                 	db	114	;'r'
  2988  00D9F8  65                 	db	101	;'e'
  2989  00D9F9  64                 	db	100	;'d'
  2990  00D9FA  0A                 	db	10
  2991  00D9FB  0D                 	db	13
  2992  00D9FC  20                 	db	32
  2993  00D9FD  20                 	db	32
  2994  00D9FE  20                 	db	32
  2995  00D9FF  4D                 	db	77	;'M'
  2996  00DA00  61                 	db	97	;'a'
  2997  00DA01  78                 	db	120	;'x'
  2998  00DA02  20                 	db	32
  2999  00DA03  46                 	db	70	;'F'
  3000  00DA04  56                 	db	86	;'V'
  3001  00DA05  52                 	db	82	;'R'
  3002  00DA06  20                 	db	32
  3003  00DA07  56                 	db	86	;'V'
  3004  00DA08  6F                 	db	111	;'o'
  3005  00DA09  6C                 	db	108	;'l'
  3006  00DA0A  74                 	db	116	;'t'
  3007  00DA0B  61                 	db	97	;'a'
  3008  00DA0C  67                 	db	103	;'g'
  3009  00DA0D  65                 	db	101	;'e'
  3010  00DA0E  3F                 	db	63	;'?'
  3011  00DA0F  3A                 	db	58	;':'
  3012  00DA10  20                 	db	32
  3013  00DA11  52                 	db	82	;'R'
  3014  00DA12  65                 	db	101	;'e'
  3015  00DA13  74                 	db	116	;'t'
  3016  00DA14  75                 	db	117	;'u'
  3017  00DA15  72                 	db	114	;'r'
  3018  00DA16  6E                 	db	110	;'n'
  3019  00DA17  73                 	db	115	;'s'
  3020  00DA18  20                 	db	32
  3021  00DA19  74                 	db	116	;'t'
  3022  00DA1A  68                 	db	104	;'h'
  3023  00DA1B  65                 	db	101	;'e'
  3024  00DA1C  20                 	db	32
  3025  00DA1D  6D                 	db	109	;'m'
  3026  00DA1E  61                 	db	97	;'a'
  3027  00DA1F  78                 	db	120	;'x'
  3028  00DA20  69                 	db	105	;'i'
  3029  00DA21  6D                 	db	109	;'m'
  3030  00DA22  75                 	db	117	;'u'
  3031  00DA23  6D                 	db	109	;'m'
  3032  00DA24  20                 	db	32
  3033  00DA25  72                 	db	114	;'r'
  3034  00DA26  65                 	db	101	;'e'
  3035  00DA27  63                 	db	99	;'c'
  3036  00DA28  6F                 	db	111	;'o'
  3037  00DA29  72                 	db	114	;'r'
  3038  00DA2A  64                 	db	100	;'d'
  3039  00DA2B  65                 	db	101	;'e'
  3040  00DA2C  64                 	db	100	;'d'
  3041  00DA2D  20                 	db	32
  3042  00DA2E  46                 	db	70	;'F'
  3043  00DA2F  56                 	db	86	;'V'
  3044  00DA30  52                 	db	82	;'R'
  3045  00DA31  20                 	db	32
  3046  00DA32  42                 	db	66	;'B'
  3047  00DA33  75                 	db	117	;'u'
  3048  00DA34  66                 	db	102	;'f'
  3049  00DA35  66                 	db	102	;'f'
  3050  00DA36  65                 	db	101	;'e'
  3051  00DA37  72                 	db	114	;'r'
  3052  00DA38  20                 	db	32
  3053  00DA39  31                 	db	49	;'1'
  3054  00DA3A  20                 	db	32
  3055  00DA3B  56                 	db	86	;'V'
  3056  00DA3C  6F                 	db	111	;'o'
  3057  00DA3D  6C                 	db	108	;'l'
  3058  00DA3E  74                 	db	116	;'t'
  3059  00DA3F  61                 	db	97	;'a'
  3060  00DA40  67                 	db	103	;'g'
  3061  00DA41  65                 	db	101	;'e'
  3062  00DA42  20                 	db	32
  3063  00DA43  6D                 	db	109	;'m'
  3064  00DA44  65                 	db	101	;'e'
  3065  00DA45  61                 	db	97	;'a'
  3066  00DA46  73                 	db	115	;'s'
  3067  00DA47  75                 	db	117	;'u'
  3068  00DA48  72                 	db	114	;'r'
  3069  00DA49  65                 	db	101	;'e'
  3070  00DA4A  64                 	db	100	;'d'
  3071  00DA4B  0A                 	db	10
  3072  00DA4C  0D                 	db	13
  3073  00DA4D  0A                 	db	10
  3074  00DA4E  0D                 	db	13
  3075  00DA4F  50                 	db	80	;'P'
  3076  00DA50  72                 	db	114	;'r'
  3077  00DA51  69                 	db	105	;'i'
  3078  00DA52  6D                 	db	109	;'m'
  3079  00DA53  61                 	db	97	;'a'
  3080  00DA54  72                 	db	114	;'r'
  3081  00DA55  79                 	db	121	;'y'
  3082  00DA56  20                 	db	32
  3083  00DA57  4D                 	db	77	;'M'
  3084  00DA58  65                 	db	101	;'e'
  3085  00DA59  61                 	db	97	;'a'
  3086  00DA5A  73                 	db	115	;'s'
  3087  00DA5B  75                 	db	117	;'u'
  3088  00DA5C  72                 	db	114	;'r'
  3089  00DA5D  65                 	db	101	;'e'
  3090  00DA5E  6D                 	db	109	;'m'
  3091  00DA5F  65                 	db	101	;'e'
  3092  00DA60  6E                 	db	110	;'n'
  3093  00DA61  74                 	db	116	;'t'
  3094  00DA62  20                 	db	32
  3095  00DA63  43                 	db	67	;'C'
  3096  00DA64  6F                 	db	111	;'o'
  3097  00DA65  6D                 	db	109	;'m'
  3098  00DA66  6D                 	db	109	;'m'
  3099  00DA67  61                 	db	97	;'a'
  3100  00DA68  6E                 	db	110	;'n'
  3101  00DA69  64                 	db	100	;'d'
  3102  00DA6A  73                 	db	115	;'s'
  3103  00DA6B  3A                 	db	58	;':'
  3104  00DA6C  20                 	db	32
  3105  00DA6D  56                 	db	86	;'V'
  3106  00DA6E  69                 	db	105	;'i'
  3107  00DA6F  65                 	db	101	;'e'
  3108  00DA70  77                 	db	119	;'w'
  3109  00DA71  20                 	db	32
  3110  00DA72  68                 	db	104	;'h'
  3111  00DA73  69                 	db	105	;'i'
  3112  00DA74  67                 	db	103	;'g'
  3113  00DA75  68                 	db	104	;'h'
  3114  00DA76  20                 	db	32
  3115  00DA77  6C                 	db	108	;'l'
  3116  00DA78  65                 	db	101	;'e'
  3117  00DA79  76                 	db	118	;'v'
  3118  00DA7A  65                 	db	101	;'e'
  3119  00DA7B  6C                 	db	108	;'l'
  3120  00DA7C  20                 	db	32
  3121  00DA7D  6F                 	db	111	;'o'
  3122  00DA7E  75                 	db	117	;'u'
  3123  00DA7F  74                 	db	116	;'t'
  3124  00DA80  70                 	db	112	;'p'
  3125  00DA81  75                 	db	117	;'u'
  3126  00DA82  74                 	db	116	;'t'
  3127  00DA83  20                 	db	32
  3128  00DA84  6D                 	db	109	;'m'
  3129  00DA85  65                 	db	101	;'e'
  3130  00DA86  61                 	db	97	;'a'
  3131  00DA87  73                 	db	115	;'s'
  3132  00DA88  75                 	db	117	;'u'
  3133  00DA89  72                 	db	114	;'r'
  3134  00DA8A  65                 	db	101	;'e'
  3135  00DA8B  6D                 	db	109	;'m'
  3136  00DA8C  65                 	db	101	;'e'
  3137  00DA8D  6E                 	db	110	;'n'
  3138  00DA8E  74                 	db	116	;'t'
  3139  00DA8F  73                 	db	115	;'s'
  3140  00DA90  20                 	db	32
  3141  00DA91  61                 	db	97	;'a'
  3142  00DA92  6E                 	db	110	;'n'
  3143  00DA93  64                 	db	100	;'d'
  3144  00DA94  20                 	db	32
  3145  00DA95  63                 	db	99	;'c'
  3146  00DA96  61                 	db	97	;'a'
  3147  00DA97  6C                 	db	108	;'l'
  3148  00DA98  63                 	db	99	;'c'
  3149  00DA99  75                 	db	117	;'u'
  3150  00DA9A  6C                 	db	108	;'l'
  3151  00DA9B  61                 	db	97	;'a'
  3152  00DA9C  74                 	db	116	;'t'
  3153  00DA9D  69                 	db	105	;'i'
  3154  00DA9E  6F                 	db	111	;'o'
  3155  00DA9F  6E                 	db	110	;'n'
  3156  00DAA0  73                 	db	115	;'s'
  3157  00DAA1  0A                 	db	10
  3158  00DAA2  0D                 	db	13
  3159  00DAA3  20                 	db	32
  3160  00DAA4  20                 	db	32
  3161  00DAA5  20                 	db	32
  3162  00DAA6  4D                 	db	77	;'M'
  3163  00DAA7  65                 	db	101	;'e'
  3164  00DAA8  61                 	db	97	;'a'
  3165  00DAA9  73                 	db	115	;'s'
  3166  00DAAA  75                 	db	117	;'u'
  3167  00DAAB  72                 	db	114	;'r'
  3168  00DAAC  65                 	db	101	;'e'
  3169  00DAAD  20                 	db	32
  3170  00DAAE  44                 	db	68	;'D'
  3171  00DAAF  65                 	db	101	;'e'
  3172  00DAB0  74                 	db	116	;'t'
  3173  00DAB1  65                 	db	101	;'e'
  3174  00DAB2  63                 	db	99	;'c'
  3175  00DAB3  74                 	db	116	;'t'
  3176  00DAB4  65                 	db	101	;'e'
  3177  00DAB5  64                 	db	100	;'d'
  3178  00DAB6  20                 	db	32
  3179  00DAB7  43                 	db	67	;'C'
  3180  00DAB8  75                 	db	117	;'u'
  3181  00DAB9  72                 	db	114	;'r'
  3182  00DABA  72                 	db	114	;'r'
  3183  00DABB  65                 	db	101	;'e'
  3184  00DABC  6E                 	db	110	;'n'
  3185  00DABD  74                 	db	116	;'t'
  3186  00DABE  3F                 	db	63	;'?'
  3187  00DABF  3A                 	db	58	;':'
  3188  00DAC0  20                 	db	32
  3189  00DAC1  52                 	db	82	;'R'
  3190  00DAC2  65                 	db	101	;'e'
  3191  00DAC3  74                 	db	116	;'t'
  3192  00DAC4  75                 	db	117	;'u'
  3193  00DAC5  72                 	db	114	;'r'
  3194  00DAC6  6E                 	db	110	;'n'
  3195  00DAC7  73                 	db	115	;'s'
  3196  00DAC8  20                 	db	32
  3197  00DAC9  6D                 	db	109	;'m'
  3198  00DACA  65                 	db	101	;'e'
  3199  00DACB  61                 	db	97	;'a'
  3200  00DACC  73                 	db	115	;'s'
  3201  00DACD  75                 	db	117	;'u'
  3202  00DACE  72                 	db	114	;'r'
  3203  00DACF  65                 	db	101	;'e'
  3204  00DAD0  64                 	db	100	;'d'
  3205  00DAD1  20                 	db	32
  3206  00DAD2  6F                 	db	111	;'o'
  3207  00DAD3  75                 	db	117	;'u'
  3208  00DAD4  74                 	db	116	;'t'
  3209  00DAD5  70                 	db	112	;'p'
  3210  00DAD6  75                 	db	117	;'u'
  3211  00DAD7  74                 	db	116	;'t'
  3212  00DAD8  20                 	db	32
  3213  00DAD9  63                 	db	99	;'c'
  3214  00DADA  75                 	db	117	;'u'
  3215  00DADB  72                 	db	114	;'r'
  3216  00DADC  72                 	db	114	;'r'
  3217  00DADD  65                 	db	101	;'e'
  3218  00DADE  6E                 	db	110	;'n'
  3219  00DADF  74                 	db	116	;'t'
  3220  00DAE0  20                 	db	32
  3221  00DAE1  69                 	db	105	;'i'
  3222  00DAE2  6E                 	db	110	;'n'
  3223  00DAE3  20                 	db	32
  3224  00DAE4  61                 	db	97	;'a'
  3225  00DAE5  6D                 	db	109	;'m'
  3226  00DAE6  70                 	db	112	;'p'
  3227  00DAE7  73                 	db	115	;'s'
  3228  00DAE8  20                 	db	32
  3229  00DAE9  61                 	db	97	;'a'
  3230  00DAEA  73                 	db	115	;'s'
  3231  00DAEB  20                 	db	32
  3232  00DAEC  73                 	db	115	;'s'
  3233  00DAED  65                 	db	101	;'e'
  3234  00DAEE  65                 	db	101	;'e'
  3235  00DAEF  6E                 	db	110	;'n'
  3236  00DAF0  20                 	db	32
  3237  00DAF1  62                 	db	98	;'b'
  3238  00DAF2  79                 	db	121	;'y'
  3239  00DAF3  20                 	db	32
  3240  00DAF4  41                 	db	65	;'A'
  3241  00DAF5  44                 	db	68	;'D'
  3242  00DAF6  43                 	db	67	;'C'
  3243  00DAF7  0A                 	db	10
  3244  00DAF8  0D                 	db	13
  3245  00DAF9  20                 	db	32
  3246  00DAFA  20                 	db	32
  3247  00DAFB  20                 	db	32
  3248  00DAFC  4D                 	db	77	;'M'
  3249  00DAFD  65                 	db	101	;'e'
  3250  00DAFE  61                 	db	97	;'a'
  3251  00DAFF  73                 	db	115	;'s'
  3252  00DB00  75                 	db	117	;'u'
  3253  00DB01  72                 	db	114	;'r'
  3254  00DB02  65                 	db	101	;'e'
  3255  00DB03  20                 	db	32
  3256  00DB04  52                 	db	82	;'R'
  3257  00DB05  4D                 	db	77	;'M'
  3258  00DB06  53                 	db	83	;'S'
  3259  00DB07  20                 	db	32
  3260  00DB08  43                 	db	67	;'C'
  3261  00DB09  75                 	db	117	;'u'
  3262  00DB0A  72                 	db	114	;'r'
  3263  00DB0B  72                 	db	114	;'r'
  3264  00DB0C  65                 	db	101	;'e'
  3265  00DB0D  6E                 	db	110	;'n'
  3266  00DB0E  74                 	db	116	;'t'
  3267  00DB0F  3F                 	db	63	;'?'
  3268  00DB10  3A                 	db	58	;':'
  3269  00DB11  20                 	db	32
  3270  00DB12  52                 	db	82	;'R'
  3271  00DB13  65                 	db	101	;'e'
  3272  00DB14  74                 	db	116	;'t'
  3273  00DB15  75                 	db	117	;'u'
  3274  00DB16  72                 	db	114	;'r'
  3275  00DB17  6E                 	db	110	;'n'
  3276  00DB18  73                 	db	115	;'s'
  3277  00DB19  20                 	db	32
  3278  00DB1A  74                 	db	116	;'t'
  3279  00DB1B  68                 	db	104	;'h'
  3280  00DB1C  65                 	db	101	;'e'
  3281  00DB1D  20                 	db	32
  3282  00DB1E  63                 	db	99	;'c'
  3283  00DB1F  61                 	db	97	;'a'
  3284  00DB20  6C                 	db	108	;'l'
  3285  00DB21  63                 	db	99	;'c'
  3286  00DB22  75                 	db	117	;'u'
  3287  00DB23  6C                 	db	108	;'l'
  3288  00DB24  61                 	db	97	;'a'
  3289  00DB25  74                 	db	116	;'t'
  3290  00DB26  65                 	db	101	;'e'
  3291  00DB27  64                 	db	100	;'d'
  3292  00DB28  20                 	db	32
  3293  00DB29  52                 	db	82	;'R'
  3294  00DB2A  4D                 	db	77	;'M'
  3295  00DB2B  53                 	db	83	;'S'
  3296  00DB2C  20                 	db	32
  3297  00DB2D  6F                 	db	111	;'o'
  3298  00DB2E  75                 	db	117	;'u'
  3299  00DB2F  74                 	db	116	;'t'
  3300  00DB30  70                 	db	112	;'p'
  3301  00DB31  75                 	db	117	;'u'
  3302  00DB32  74                 	db	116	;'t'
  3303  00DB33  20                 	db	32
  3304  00DB34  63                 	db	99	;'c'
  3305  00DB35  75                 	db	117	;'u'
  3306  00DB36  72                 	db	114	;'r'
  3307  00DB37  72                 	db	114	;'r'
  3308  00DB38  65                 	db	101	;'e'
  3309  00DB39  6E                 	db	110	;'n'
  3310  00DB3A  74                 	db	116	;'t'
  3311  00DB3B  20                 	db	32
  3312  00DB3C  66                 	db	102	;'f'
  3313  00DB3D  72                 	db	114	;'r'
  3314  00DB3E  6F                 	db	111	;'o'
  3315  00DB3F  6D                 	db	109	;'m'
  3316  00DB40  20                 	db	32
  3317  00DB41  6D                 	db	109	;'m'
  3318  00DB42  65                 	db	101	;'e'
  3319  00DB43  61                 	db	97	;'a'
  3320  00DB44  73                 	db	115	;'s'
  3321  00DB45  75                 	db	117	;'u'
  3322  00DB46  72                 	db	114	;'r'
  3323  00DB47  65                 	db	101	;'e'
  3324  00DB48  6D                 	db	109	;'m'
  3325  00DB49  65                 	db	101	;'e'
  3326  00DB4A  6E                 	db	110	;'n'
  3327  00DB4B  74                 	db	116	;'t'
  3328  00DB4C  73                 	db	115	;'s'
  3329  00DB4D  20                 	db	32
  3330  00DB4E  61                 	db	97	;'a'
  3331  00DB4F  6E                 	db	110	;'n'
  3332  00DB50  64                 	db	100	;'d'
  3333  00DB51  20                 	db	32
  3334  00DB52  54                 	db	84	;'T'
  3335  00DB53  52                 	db	82	;'R'
  3336  00DB54  49                 	db	73	;'I'
  3337  00DB55  41                 	db	65	;'A'
  3338  00DB56  43                 	db	67	;'C'
  3339  00DB57  20                 	db	32
  3340  00DB58  66                 	db	102	;'f'
  3341  00DB59  69                 	db	105	;'i'
  3342  00DB5A  72                 	db	114	;'r'
  3343  00DB5B  69                 	db	105	;'i'
  3344  00DB5C  6E                 	db	110	;'n'
  3345  00DB5D  67                 	db	103	;'g'
  3346  00DB5E  20                 	db	32
  3347  00DB5F  61                 	db	97	;'a'
  3348  00DB60  6E                 	db	110	;'n'
  3349  00DB61  67                 	db	103	;'g'
  3350  00DB62  6C                 	db	108	;'l'
  3351  00DB63  65                 	db	101	;'e'
  3352  00DB64  0A                 	db	10
  3353  00DB65  0D                 	db	13
  3354  00DB66  20                 	db	32
  3355  00DB67  20                 	db	32
  3356  00DB68  20                 	db	32
  3357  00DB69  4D                 	db	77	;'M'
  3358  00DB6A  65                 	db	101	;'e'
  3359  00DB6B  61                 	db	97	;'a'
  3360  00DB6C  73                 	db	115	;'s'
  3361  00DB6D  75                 	db	117	;'u'
  3362  00DB6E  72                 	db	114	;'r'
  3363  00DB6F  65                 	db	101	;'e'
  3364  00DB70  20                 	db	32
  3365  00DB71  52                 	db	82	;'R'
  3366  00DB72  4D                 	db	77	;'M'
  3367  00DB73  53                 	db	83	;'S'
  3368  00DB74  20                 	db	32
  3369  00DB75  56                 	db	86	;'V'
  3370  00DB76  6F                 	db	111	;'o'
  3371  00DB77  6C                 	db	108	;'l'
  3372  00DB78  74                 	db	116	;'t'
  3373  00DB79  61                 	db	97	;'a'
  3374  00DB7A  67                 	db	103	;'g'
  3375  00DB7B  65                 	db	101	;'e'
  3376  00DB7C  3F                 	db	63	;'?'
  3377  00DB7D  3A                 	db	58	;':'
  3378  00DB7E  20                 	db	32
  3379  00DB7F  52                 	db	82	;'R'
  3380  00DB80  65                 	db	101	;'e'
  3381  00DB81  74                 	db	116	;'t'
  3382  00DB82  75                 	db	117	;'u'
  3383  00DB83  72                 	db	114	;'r'
  3384  00DB84  6E                 	db	110	;'n'
  3385  00DB85  73                 	db	115	;'s'
  3386  00DB86  20                 	db	32
  3387  00DB87  74                 	db	116	;'t'
  3388  00DB88  68                 	db	104	;'h'
  3389  00DB89  65                 	db	101	;'e'
  3390  00DB8A  20                 	db	32
  3391  00DB8B  63                 	db	99	;'c'
  3392  00DB8C  61                 	db	97	;'a'
  3393  00DB8D  6C                 	db	108	;'l'
  3394  00DB8E  63                 	db	99	;'c'
  3395  00DB8F  75                 	db	117	;'u'
  3396  00DB90  6C                 	db	108	;'l'
  3397  00DB91  61                 	db	97	;'a'
  3398  00DB92  74                 	db	116	;'t'
  3399  00DB93  65                 	db	101	;'e'
  3400  00DB94  64                 	db	100	;'d'
  3401  00DB95  20                 	db	32
  3402  00DB96  52                 	db	82	;'R'
  3403  00DB97  4D                 	db	77	;'M'
  3404  00DB98  53                 	db	83	;'S'
  3405  00DB99  20                 	db	32
  3406  00DB9A  6F                 	db	111	;'o'
  3407  00DB9B  75                 	db	117	;'u'
  3408  00DB9C  74                 	db	116	;'t'
  3409  00DB9D  70                 	db	112	;'p'
  3410  00DB9E  75                 	db	117	;'u'
  3411  00DB9F  74                 	db	116	;'t'
  3412  00DBA0  20                 	db	32
  3413  00DBA1  76                 	db	118	;'v'
  3414  00DBA2  6F                 	db	111	;'o'
  3415  00DBA3  6C                 	db	108	;'l'
  3416  00DBA4  74                 	db	116	;'t'
  3417  00DBA5  61                 	db	97	;'a'
  3418  00DBA6  67                 	db	103	;'g'
  3419  00DBA7  65                 	db	101	;'e'
  3420  00DBA8  20                 	db	32
  3421  00DBA9  66                 	db	102	;'f'
  3422  00DBAA  72                 	db	114	;'r'
  3423  00DBAB  6F                 	db	111	;'o'
  3424  00DBAC  6D                 	db	109	;'m'
  3425  00DBAD  20                 	db	32
  3426  00DBAE  54                 	db	84	;'T'
  3427  00DBAF  52                 	db	82	;'R'
  3428  00DBB0  49                 	db	73	;'I'
  3429  00DBB1  41                 	db	65	;'A'
  3430  00DBB2  43                 	db	67	;'C'
  3431  00DBB3  20                 	db	32
  3432  00DBB4  66                 	db	102	;'f'
  3433  00DBB5  69                 	db	105	;'i'
  3434  00DBB6  72                 	db	114	;'r'
  3435  00DBB7  69                 	db	105	;'i'
  3436  00DBB8  6E                 	db	110	;'n'
  3437  00DBB9  67                 	db	103	;'g'
  3438  00DBBA  20                 	db	32
  3439  00DBBB  61                 	db	97	;'a'
  3440  00DBBC  6E                 	db	110	;'n'
  3441  00DBBD  67                 	db	103	;'g'
  3442  00DBBE  6C                 	db	108	;'l'
  3443  00DBBF  65                 	db	101	;'e'
  3444  00DBC0  0A                 	db	10
  3445  00DBC1  0D                 	db	13
  3446  00DBC2  20                 	db	32
  3447  00DBC3  20                 	db	32
  3448  00DBC4  20                 	db	32
  3449  00DBC5  4D                 	db	77	;'M'
  3450  00DBC6  65                 	db	101	;'e'
  3451  00DBC7  61                 	db	97	;'a'
  3452  00DBC8  73                 	db	115	;'s'
  3453  00DBC9  75                 	db	117	;'u'
  3454  00DBCA  72                 	db	114	;'r'
  3455  00DBCB  65                 	db	101	;'e'
  3456  00DBCC  20                 	db	32
  3457  00DBCD  50                 	db	80	;'P'
  3458  00DBCE  6F                 	db	111	;'o'
  3459  00DBCF  77                 	db	119	;'w'
  3460  00DBD0  65                 	db	101	;'e'
  3461  00DBD1  72                 	db	114	;'r'
  3462  00DBD2  3F                 	db	63	;'?'
  3463  00DBD3  3A                 	db	58	;':'
  3464  00DBD4  20                 	db	32
  3465  00DBD5  52                 	db	82	;'R'
  3466  00DBD6  65                 	db	101	;'e'
  3467  00DBD7  74                 	db	116	;'t'
  3468  00DBD8  75                 	db	117	;'u'
  3469  00DBD9  72                 	db	114	;'r'
  3470  00DBDA  6E                 	db	110	;'n'
  3471  00DBDB  73                 	db	115	;'s'
  3472  00DBDC  20                 	db	32
  3473  00DBDD  74                 	db	116	;'t'
  3474  00DBDE  68                 	db	104	;'h'
  3475  00DBDF  65                 	db	101	;'e'
  3476  00DBE0  20                 	db	32
  3477  00DBE1  63                 	db	99	;'c'
  3478  00DBE2  61                 	db	97	;'a'
  3479  00DBE3  6C                 	db	108	;'l'
  3480  00DBE4  63                 	db	99	;'c'
  3481  00DBE5  75                 	db	117	;'u'
  3482  00DBE6  6C                 	db	108	;'l'
  3483  00DBE7  61                 	db	97	;'a'
  3484  00DBE8  74                 	db	116	;'t'
  3485  00DBE9  65                 	db	101	;'e'
  3486  00DBEA  64                 	db	100	;'d'
  3487  00DBEB  20                 	db	32
  3488  00DBEC  6F                 	db	111	;'o'
  3489  00DBED  75                 	db	117	;'u'
  3490  00DBEE  74                 	db	116	;'t'
  3491  00DBEF  70                 	db	112	;'p'
  3492  00DBF0  75                 	db	117	;'u'
  3493  00DBF1  74                 	db	116	;'t'
  3494  00DBF2  20                 	db	32
  3495  00DBF3  70                 	db	112	;'p'
  3496  00DBF4  6F                 	db	111	;'o'
  3497  00DBF5  77                 	db	119	;'w'
  3498  00DBF6  65                 	db	101	;'e'
  3499  00DBF7  72                 	db	114	;'r'
  3500  00DBF8  20                 	db	32
  3501  00DBF9  69                 	db	105	;'i'
  3502  00DBFA  6E                 	db	110	;'n'
  3503  00DBFB  20                 	db	32
  3504  00DBFC  57                 	db	87	;'W'
  3505  00DBFD  61                 	db	97	;'a'
  3506  00DBFE  74                 	db	116	;'t'
  3507  00DBFF  74                 	db	116	;'t'
  3508  00DC00  73                 	db	115	;'s'
  3509  00DC01  0A                 	db	10
  3510  00DC02  0D                 	db	13
  3511  00DC03  20                 	db	32
  3512  00DC04  20                 	db	32
  3513  00DC05  20                 	db	32
  3514  00DC06  4D                 	db	77	;'M'
  3515  00DC07  65                 	db	101	;'e'
  3516  00DC08  61                 	db	97	;'a'
  3517  00DC09  73                 	db	115	;'s'
  3518  00DC0A  75                 	db	117	;'u'
  3519  00DC0B  72                 	db	114	;'r'
  3520  00DC0C  65                 	db	101	;'e'
  3521  00DC0D  20                 	db	32
  3522  00DC0E  45                 	db	69	;'E'
  3523  00DC0F  6E                 	db	110	;'n'
  3524  00DC10  65                 	db	101	;'e'
  3525  00DC11  72                 	db	114	;'r'
  3526  00DC12  67                 	db	103	;'g'
  3527  00DC13  79                 	db	121	;'y'
  3528  00DC14  3F                 	db	63	;'?'
  3529  00DC15  3A                 	db	58	;':'
  3530  00DC16  20                 	db	32
  3531  00DC17  52                 	db	82	;'R'
  3532  00DC18  65                 	db	101	;'e'
  3533  00DC19  74                 	db	116	;'t'
  3534  00DC1A  75                 	db	117	;'u'
  3535  00DC1B  72                 	db	114	;'r'
  3536  00DC1C  6E                 	db	110	;'n'
  3537  00DC1D  73                 	db	115	;'s'
  3538  00DC1E  20                 	db	32
  3539  00DC1F  6D                 	db	109	;'m'
  3540  00DC20  65                 	db	101	;'e'
  3541  00DC21  61                 	db	97	;'a'
  3542  00DC22  73                 	db	115	;'s'
  3543  00DC23  75                 	db	117	;'u'
  3544  00DC24  72                 	db	114	;'r'
  3545  00DC25  65                 	db	101	;'e'
  3546  00DC26  64                 	db	100	;'d'
  3547  00DC27  20                 	db	32
  3548  00DC28  65                 	db	101	;'e'
  3549  00DC29  6E                 	db	110	;'n'
  3550  00DC2A  65                 	db	101	;'e'
  3551  00DC2B  72                 	db	114	;'r'
  3552  00DC2C  67                 	db	103	;'g'
  3553  00DC2D  79                 	db	121	;'y'
  3554  00DC2E  20                 	db	32
  3555  00DC2F  73                 	db	115	;'s'
  3556  00DC30  69                 	db	105	;'i'
  3557  00DC31  6E                 	db	110	;'n'
  3558  00DC32  63                 	db	99	;'c'
  3559  00DC33  65                 	db	101	;'e'
  3560  00DC34  20                 	db	32
  3561  00DC35  6D                 	db	109	;'m'
  3562  00DC36  65                 	db	101	;'e'
  3563  00DC37  61                 	db	97	;'a'
  3564  00DC38  73                 	db	115	;'s'
  3565  00DC39  75                 	db	117	;'u'
  3566  00DC3A  72                 	db	114	;'r'
  3567  00DC3B  65                 	db	101	;'e'
  3568  00DC3C  6D                 	db	109	;'m'
  3569  00DC3D  65                 	db	101	;'e'
  3570  00DC3E  6E                 	db	110	;'n'
  3571  00DC3F  74                 	db	116	;'t'
  3572  00DC40  20                 	db	32
  3573  00DC41  72                 	db	114	;'r'
  3574  00DC42  65                 	db	101	;'e'
  3575  00DC43  73                 	db	115	;'s'
  3576  00DC44  65                 	db	101	;'e'
  3577  00DC45  74                 	db	116	;'t'
  3578  00DC46  20                 	db	32
  3579  00DC47  69                 	db	105	;'i'
  3580  00DC48  6E                 	db	110	;'n'
  3581  00DC49  20                 	db	32
  3582  00DC4A  57                 	db	87	;'W'
  3583  00DC4B  61                 	db	97	;'a'
  3584  00DC4C  74                 	db	116	;'t'
  3585  00DC4D  74                 	db	116	;'t'
  3586  00DC4E  20                 	db	32
  3587  00DC4F  48                 	db	72	;'H'
  3588  00DC50  6F                 	db	111	;'o'
  3589  00DC51  75                 	db	117	;'u'
  3590  00DC52  72                 	db	114	;'r'
  3591  00DC53  73                 	db	115	;'s'
  3592  00DC54  0A                 	db	10
  3593  00DC55  0D                 	db	13
  3594  00DC56  20                 	db	32
  3595  00DC57  20                 	db	32
  3596  00DC58  20                 	db	32
  3597  00DC59  43                 	db	67	;'C'
  3598  00DC5A  6C                 	db	108	;'l'
  3599  00DC5B  65                 	db	101	;'e'
  3600  00DC5C  61                 	db	97	;'a'
  3601  00DC5D  72                 	db	114	;'r'
  3602  00DC5E  20                 	db	32
  3603  00DC5F  45                 	db	69	;'E'
  3604  00DC60  6E                 	db	110	;'n'
  3605  00DC61  65                 	db	101	;'e'
  3606  00DC62  72                 	db	114	;'r'
  3607  00DC63  67                 	db	103	;'g'
  3608  00DC64  79                 	db	121	;'y'
  3609  00DC65  3A                 	db	58	;':'
  3610  00DC66  20                 	db	32
  3611  00DC67  52                 	db	82	;'R'
  3612  00DC68  65                 	db	101	;'e'
  3613  00DC69  73                 	db	115	;'s'
  3614  00DC6A  65                 	db	101	;'e'
  3615  00DC6B  74                 	db	116	;'t'
  3616  00DC6C  73                 	db	115	;'s'
  3617  00DC6D  20                 	db	32
  3618  00DC6E  74                 	db	116	;'t'
  3619  00DC6F  68                 	db	104	;'h'
  3620  00DC70  65                 	db	101	;'e'
  3621  00DC71  20                 	db	32
  3622  00DC72  6D                 	db	109	;'m'
  3623  00DC73  65                 	db	101	;'e'
  3624  00DC74  61                 	db	97	;'a'
  3625  00DC75  73                 	db	115	;'s'
  3626  00DC76  75                 	db	117	;'u'
  3627  00DC77  72                 	db	114	;'r'
  3628  00DC78  65                 	db	101	;'e'
  3629  00DC79  64                 	db	100	;'d'
  3630  00DC7A  20                 	db	32
  3631  00DC7B  6F                 	db	111	;'o'
  3632  00DC7C  75                 	db	117	;'u'
  3633  00DC7D  74                 	db	116	;'t'
  3634  00DC7E  70                 	db	112	;'p'
  3635  00DC7F  75                 	db	117	;'u'
  3636  00DC80  74                 	db	116	;'t'
  3637  00DC81  20                 	db	32
  3638  00DC82  65                 	db	101	;'e'
  3639  00DC83  6E                 	db	110	;'n'
  3640  00DC84  65                 	db	101	;'e'
  3641  00DC85  72                 	db	114	;'r'
  3642  00DC86  67                 	db	103	;'g'
  3643  00DC87  79                 	db	121	;'y'
  3644  00DC88  20                 	db	32
  3645  00DC89  74                 	db	116	;'t'
  3646  00DC8A  6F                 	db	111	;'o'
  3647  00DC8B  20                 	db	32
  3648  00DC8C  7A                 	db	122	;'z'
  3649  00DC8D  65                 	db	101	;'e'
  3650  00DC8E  72                 	db	114	;'r'
  3651  00DC8F  6F                 	db	111	;'o'
  3652  00DC90  0A                 	db	10
  3653  00DC91  0D                 	db	13
  3654  00DC92  20                 	db	32
  3655  00DC93  20                 	db	32
  3656  00DC94  20                 	db	32
  3657  00DC95  4C                 	db	76	;'L'
  3658  00DC96  6F                 	db	111	;'o'
  3659  00DC97  61                 	db	97	;'a'
  3660  00DC98  64                 	db	100	;'d'
  3661  00DC99  20                 	db	32
  3662  00DC9A  4F                 	db	79	;'O'
  3663  00DC9B  6E                 	db	110	;'n'
  3664  00DC9C  20                 	db	32
  3665  00DC9D  54                 	db	84	;'T'
  3666  00DC9E  69                 	db	105	;'i'
  3667  00DC9F  6D                 	db	109	;'m'
  3668  00DCA0  65                 	db	101	;'e'
  3669  00DCA1  3F                 	db	63	;'?'
  3670  00DCA2  3A                 	db	58	;':'
  3671  00DCA3  20                 	db	32
  3672  00DCA4  52                 	db	82	;'R'
  3673  00DCA5  65                 	db	101	;'e'
  3674  00DCA6  74                 	db	116	;'t'
  3675  00DCA7  75                 	db	117	;'u'
  3676  00DCA8  72                 	db	114	;'r'
  3677  00DCA9  6E                 	db	110	;'n'
  3678  00DCAA  73                 	db	115	;'s'
  3679  00DCAB  20                 	db	32
  3680  00DCAC  6C                 	db	108	;'l'
  3681  00DCAD  6F                 	db	111	;'o'
  3682  00DCAE  61                 	db	97	;'a'
  3683  00DCAF  64                 	db	100	;'d'
  3684  00DCB0  20                 	db	32
  3685  00DCB1  6F                 	db	111	;'o'
  3686  00DCB2  6E                 	db	110	;'n'
  3687  00DCB3  20                 	db	32
  3688  00DCB4  74                 	db	116	;'t'
  3689  00DCB5  69                 	db	105	;'i'
  3690  00DCB6  6D                 	db	109	;'m'
  3691  00DCB7  65                 	db	101	;'e'
  3692  00DCB8  20                 	db	32
  3693  00DCB9  73                 	db	115	;'s'
  3694  00DCBA  69                 	db	105	;'i'
  3695  00DCBB  6E                 	db	110	;'n'
  3696  00DCBC  63                 	db	99	;'c'
  3697  00DCBD  65                 	db	101	;'e'
  3698  00DCBE  20                 	db	32
  3699  00DCBF  6C                 	db	108	;'l'
  3700  00DCC0  61                 	db	97	;'a'
  3701  00DCC1  73                 	db	115	;'s'
  3702  00DCC2  74                 	db	116	;'t'
  3703  00DCC3  20                 	db	32
  3704  00DCC4  64                 	db	100	;'d'
  3705  00DCC5  65                 	db	101	;'e'
  3706  00DCC6  76                 	db	118	;'v'
  3707  00DCC7  69                 	db	105	;'i'
  3708  00DCC8  63                 	db	99	;'c'
  3709  00DCC9  65                 	db	101	;'e'
  3710  00DCCA  20                 	db	32
  3711  00DCCB  72                 	db	114	;'r'
  3712  00DCCC  65                 	db	101	;'e'
  3713  00DCCD  73                 	db	115	;'s'
  3714  00DCCE  65                 	db	101	;'e'
  3715  00DCCF  74                 	db	116	;'t'
  3716  00DCD0  20                 	db	32
  3717  00DCD1  69                 	db	105	;'i'
  3718  00DCD2  6E                 	db	110	;'n'
  3719  00DCD3  20                 	db	32
  3720  00DCD4  73                 	db	115	;'s'
  3721  00DCD5  65                 	db	101	;'e'
  3722  00DCD6  63                 	db	99	;'c'
  3723  00DCD7  6F                 	db	111	;'o'
  3724  00DCD8  6E                 	db	110	;'n'
  3725  00DCD9  64                 	db	100	;'d'
  3726  00DCDA  73                 	db	115	;'s'
  3727  00DCDB  0A                 	db	10
  3728  00DCDC  0D                 	db	13
  3729  00DCDD  20                 	db	32
  3730  00DCDE  20                 	db	32
  3731  00DCDF  20                 	db	32
  3732  00DCE0  4D                 	db	77	;'M'
  3733  00DCE1  61                 	db	97	;'a'
  3734  00DCE2  78                 	db	120	;'x'
  3735  00DCE3  20                 	db	32
  3736  00DCE4  52                 	db	82	;'R'
  3737  00DCE5  4D                 	db	77	;'M'
  3738  00DCE6  53                 	db	83	;'S'
  3739  00DCE7  20                 	db	32
  3740  00DCE8  43                 	db	67	;'C'
  3741  00DCE9  75                 	db	117	;'u'
  3742  00DCEA  72                 	db	114	;'r'
  3743  00DCEB  72                 	db	114	;'r'
  3744  00DCEC  65                 	db	101	;'e'
  3745  00DCED  6E                 	db	110	;'n'
  3746  00DCEE  74                 	db	116	;'t'
  3747  00DCEF  3F                 	db	63	;'?'
  3748  00DCF0  3A                 	db	58	;':'
  3749  00DCF1  20                 	db	32
  3750  00DCF2  50                 	db	80	;'P'
  3751  00DCF3  72                 	db	114	;'r'
  3752  00DCF4  69                 	db	105	;'i'
  3753  00DCF5  6E                 	db	110	;'n'
  3754  00DCF6  74                 	db	116	;'t'
  3755  00DCF7  73                 	db	115	;'s'
  3756  00DCF8  20                 	db	32
  3757  00DCF9  74                 	db	116	;'t'
  3758  00DCFA  68                 	db	104	;'h'
  3759  00DCFB  65                 	db	101	;'e'
  3760  00DCFC  20                 	db	32
  3761  00DCFD  6D                 	db	109	;'m'
  3762  00DCFE  61                 	db	97	;'a'
  3763  00DCFF  78                 	db	120	;'x'
  3764  00DD00  69                 	db	105	;'i'
  3765  00DD01  6D                 	db	109	;'m'
  3766  00DD02  75                 	db	117	;'u'
  3767  00DD03  6D                 	db	109	;'m'
  3768  00DD04  20                 	db	32
  3769  00DD05  72                 	db	114	;'r'
  3770  00DD06  65                 	db	101	;'e'
  3771  00DD07  63                 	db	99	;'c'
  3772  00DD08  6F                 	db	111	;'o'
  3773  00DD09  72                 	db	114	;'r'
  3774  00DD0A  64                 	db	100	;'d'
  3775  00DD0B  65                 	db	101	;'e'
  3776  00DD0C  64                 	db	100	;'d'
  3777  00DD0D  20                 	db	32
  3778  00DD0E  52                 	db	82	;'R'
  3779  00DD0F  4D                 	db	77	;'M'
  3780  00DD10  53                 	db	83	;'S'
  3781  00DD11  20                 	db	32
  3782  00DD12  6F                 	db	111	;'o'
  3783  00DD13  75                 	db	117	;'u'
  3784  00DD14  74                 	db	116	;'t'
  3785  00DD15  70                 	db	112	;'p'
  3786  00DD16  75                 	db	117	;'u'
  3787  00DD17  74                 	db	116	;'t'
  3788  00DD18  20                 	db	32
  3789  00DD19  63                 	db	99	;'c'
  3790  00DD1A  75                 	db	117	;'u'
  3791  00DD1B  72                 	db	114	;'r'
  3792  00DD1C  72                 	db	114	;'r'
  3793  00DD1D  65                 	db	101	;'e'
  3794  00DD1E  6E                 	db	110	;'n'
  3795  00DD1F  74                 	db	116	;'t'
  3796  00DD20  0A                 	db	10
  3797  00DD21  0D                 	db	13
  3798  00DD22  20                 	db	32
  3799  00DD23  20                 	db	32
  3800  00DD24  20                 	db	32
  3801  00DD25  4D                 	db	77	;'M'
  3802  00DD26  61                 	db	97	;'a'
  3803  00DD27  78                 	db	120	;'x'
  3804  00DD28  20                 	db	32
  3805  00DD29  50                 	db	80	;'P'
  3806  00DD2A  6F                 	db	111	;'o'
  3807  00DD2B  77                 	db	119	;'w'
  3808  00DD2C  65                 	db	101	;'e'
  3809  00DD2D  72                 	db	114	;'r'
  3810  00DD2E  3F                 	db	63	;'?'
  3811  00DD2F  3A                 	db	58	;':'
  3812  00DD30  20                 	db	32
  3813  00DD31  50                 	db	80	;'P'
  3814  00DD32  72                 	db	114	;'r'
  3815  00DD33  69                 	db	105	;'i'
  3816  00DD34  6E                 	db	110	;'n'
  3817  00DD35  74                 	db	116	;'t'
  3818  00DD36  73                 	db	115	;'s'
  3819  00DD37  20                 	db	32
  3820  00DD38  74                 	db	116	;'t'
  3821  00DD39  68                 	db	104	;'h'
  3822  00DD3A  65                 	db	101	;'e'
  3823  00DD3B  20                 	db	32
  3824  00DD3C  6D                 	db	109	;'m'
  3825  00DD3D  61                 	db	97	;'a'
  3826  00DD3E  78                 	db	120	;'x'
  3827  00DD3F  69                 	db	105	;'i'
  3828  00DD40  6D                 	db	109	;'m'
  3829  00DD41  75                 	db	117	;'u'
  3830  00DD42  6D                 	db	109	;'m'
  3831  00DD43  20                 	db	32
  3832  00DD44  72                 	db	114	;'r'
  3833  00DD45  65                 	db	101	;'e'
  3834  00DD46  63                 	db	99	;'c'
  3835  00DD47  6F                 	db	111	;'o'
  3836  00DD48  72                 	db	114	;'r'
  3837  00DD49  64                 	db	100	;'d'
  3838  00DD4A  65                 	db	101	;'e'
  3839  00DD4B  64                 	db	100	;'d'
  3840  00DD4C  20                 	db	32
  3841  00DD4D  6F                 	db	111	;'o'
  3842  00DD4E  75                 	db	117	;'u'
  3843  00DD4F  74                 	db	116	;'t'
  3844  00DD50  70                 	db	112	;'p'
  3845  00DD51  75                 	db	117	;'u'
  3846  00DD52  74                 	db	116	;'t'
  3847  00DD53  20                 	db	32
  3848  00DD54  70                 	db	112	;'p'
  3849  00DD55  6F                 	db	111	;'o'
  3850  00DD56  77                 	db	119	;'w'
  3851  00DD57  65                 	db	101	;'e'
  3852  00DD58  72                 	db	114	;'r'
  3853  00DD59  0A                 	db	10
  3854  00DD5A  0D                 	db	13
  3855  00DD5B  0A                 	db	10
  3856  00DD5C  0D                 	db	13
  3857  00DD5D  4F                 	db	79	;'O'
  3858  00DD5E  75                 	db	117	;'u'
  3859  00DD5F  74                 	db	116	;'t'
  3860  00DD60  70                 	db	112	;'p'
  3861  00DD61  75                 	db	117	;'u'
  3862  00DD62  74                 	db	116	;'t'
  3863  00DD63  20                 	db	32
  3864  00DD64  43                 	db	67	;'C'
  3865  00DD65  6F                 	db	111	;'o'
  3866  00DD66  6E                 	db	110	;'n'
  3867  00DD67  74                 	db	116	;'t'
  3868  00DD68  72                 	db	114	;'r'
  3869  00DD69  6F                 	db	111	;'o'
  3870  00DD6A  6C                 	db	108	;'l'
  3871  00DD6B  20                 	db	32
  3872  00DD6C  43                 	db	67	;'C'
  3873  00DD6D  6F                 	db	111	;'o'
  3874  00DD6E  6D                 	db	109	;'m'
  3875  00DD6F  6D                 	db	109	;'m'
  3876  00DD70  61                 	db	97	;'a'
  3877  00DD71  6E                 	db	110	;'n'
  3878  00DD72  64                 	db	100	;'d'
  3879  00DD73  73                 	db	115	;'s'
  3880  00DD74  3A                 	db	58	;':'
  3881  00DD75  20                 	db	32
  3882  00DD76  43                 	db	67	;'C'
  3883  00DD77  6F                 	db	111	;'o'
  3884  00DD78  6E                 	db	110	;'n'
  3885  00DD79  74                 	db	116	;'t'
  3886  00DD7A  72                 	db	114	;'r'
  3887  00DD7B  6F                 	db	111	;'o'
  3888  00DD7C  6C                 	db	108	;'l'
  3889  00DD7D  20                 	db	32
  3890  00DD7E  74                 	db	116	;'t'
  3891  00DD7F  68                 	db	104	;'h'
  3892  00DD80  65                 	db	101	;'e'
  3893  00DD81  20                 	db	32
  3894  00DD82  6F                 	db	111	;'o'
  3895  00DD83  75                 	db	117	;'u'
  3896  00DD84  74                 	db	116	;'t'
  3897  00DD85  70                 	db	112	;'p'
  3898  00DD86  75                 	db	117	;'u'
  3899  00DD87  74                 	db	116	;'t'
  3900  00DD88  20                 	db	32
  3901  00DD89  73                 	db	115	;'s'
  3902  00DD8A  74                 	db	116	;'t'
  3903  00DD8B  61                 	db	97	;'a'
  3904  00DD8C  74                 	db	116	;'t'
  3905  00DD8D  65                 	db	101	;'e'
  3906  00DD8E  20                 	db	32
  3907  00DD8F  61                 	db	97	;'a'
  3908  00DD90  6E                 	db	110	;'n'
  3909  00DD91  64                 	db	100	;'d'
  3910  00DD92  20                 	db	32
  3911  00DD93  64                 	db	100	;'d'
  3912  00DD94  69                 	db	105	;'i'
  3913  00DD95  6D                 	db	109	;'m'
  3914  00DD96  6D                 	db	109	;'m'
  3915  00DD97  69                 	db	105	;'i'
  3916  00DD98  6E                 	db	110	;'n'
  3917  00DD99  67                 	db	103	;'g'
  3918  00DD9A  20                 	db	32
  3919  00DD9B  66                 	db	102	;'f'
  3920  00DD9C  65                 	db	101	;'e'
  3921  00DD9D  61                 	db	97	;'a'
  3922  00DD9E  74                 	db	116	;'t'
  3923  00DD9F  75                 	db	117	;'u'
  3924  00DDA0  72                 	db	114	;'r'
  3925  00DDA1  65                 	db	101	;'e'
  3926  00DDA2  73                 	db	115	;'s'
  3927  00DDA3  0A                 	db	10
  3928  00DDA4  0D                 	db	13
  3929  00DDA5  20                 	db	32
  3930  00DDA6  20                 	db	32
  3931  00DDA7  20                 	db	32
  3932  00DDA8  45                 	db	69	;'E'
  3933  00DDA9  6E                 	db	110	;'n'
  3934  00DDAA  61                 	db	97	;'a'
  3935  00DDAB  62                 	db	98	;'b'
  3936  00DDAC  6C                 	db	108	;'l'
  3937  00DDAD  65                 	db	101	;'e'
  3938  00DDAE  20                 	db	32
  3939  00DDAF  44                 	db	68	;'D'
  3940  00DDB0  69                 	db	105	;'i'
  3941  00DDB1  6D                 	db	109	;'m'
  3942  00DDB2  6D                 	db	109	;'m'
  3943  00DDB3  69                 	db	105	;'i'
  3944  00DDB4  6E                 	db	110	;'n'
  3945  00DDB5  67                 	db	103	;'g'
  3946  00DDB6  3A                 	db	58	;':'
  3947  00DDB7  20                 	db	32
  3948  00DDB8  45                 	db	69	;'E'
  3949  00DDB9  6E                 	db	110	;'n'
  3950  00DDBA  61                 	db	97	;'a'
  3951  00DDBB  62                 	db	98	;'b'
  3952  00DDBC  6C                 	db	108	;'l'
  3953  00DDBD  65                 	db	101	;'e'
  3954  00DDBE  20                 	db	32
  3955  00DDBF  54                 	db	84	;'T'
  3956  00DDC0  52                 	db	82	;'R'
  3957  00DDC1  49                 	db	73	;'I'
  3958  00DDC2  41                 	db	65	;'A'
  3959  00DDC3  43                 	db	67	;'C'
  3960  00DDC4  20                 	db	32
  3961  00DDC5  6F                 	db	111	;'o'
  3962  00DDC6  75                 	db	117	;'u'
  3963  00DDC7  74                 	db	116	;'t'
  3964  00DDC8  70                 	db	112	;'p'
  3965  00DDC9  75                 	db	117	;'u'
  3966  00DDCA  74                 	db	116	;'t'
  3967  00DDCB  20                 	db	32
  3968  00DDCC  64                 	db	100	;'d'
  3969  00DDCD  69                 	db	105	;'i'
  3970  00DDCE  6D                 	db	109	;'m'
  3971  00DDCF  6D                 	db	109	;'m'
  3972  00DDD0  69                 	db	105	;'i'
  3973  00DDD1  6E                 	db	110	;'n'
  3974  00DDD2  67                 	db	103	;'g'
  3975  00DDD3  0A                 	db	10
  3976  00DDD4  0D                 	db	13
  3977  00DDD5  20                 	db	32
  3978  00DDD6  20                 	db	32
  3979  00DDD7  20                 	db	32
  3980  00DDD8  44                 	db	68	;'D'
  3981  00DDD9  69                 	db	105	;'i'
  3982  00DDDA  73                 	db	115	;'s'
  3983  00DDDB  61                 	db	97	;'a'
  3984  00DDDC  62                 	db	98	;'b'
  3985  00DDDD  6C                 	db	108	;'l'
  3986  00DDDE  65                 	db	101	;'e'
  3987  00DDDF  20                 	db	32
  3988  00DDE0  44                 	db	68	;'D'
  3989  00DDE1  69                 	db	105	;'i'
  3990  00DDE2  6D                 	db	109	;'m'
  3991  00DDE3  6D                 	db	109	;'m'
  3992  00DDE4  69                 	db	105	;'i'
  3993  00DDE5  6E                 	db	110	;'n'
  3994  00DDE6  67                 	db	103	;'g'
  3995  00DDE7  3A                 	db	58	;':'
  3996  00DDE8  20                 	db	32
  3997  00DDE9  44                 	db	68	;'D'
  3998  00DDEA  69                 	db	105	;'i'
  3999  00DDEB  73                 	db	115	;'s'
  4000  00DDEC  61                 	db	97	;'a'
  4001  00DDED  62                 	db	98	;'b'
  4002  00DDEE  6C                 	db	108	;'l'
  4003  00DDEF  65                 	db	101	;'e'
  4004  00DDF0  20                 	db	32
  4005  00DDF1  54                 	db	84	;'T'
  4006  00DDF2  52                 	db	82	;'R'
  4007  00DDF3  49                 	db	73	;'I'
  4008  00DDF4  41                 	db	65	;'A'
  4009  00DDF5  43                 	db	67	;'C'
  4010  00DDF6  20                 	db	32
  4011  00DDF7  6F                 	db	111	;'o'
  4012  00DDF8  75                 	db	117	;'u'
  4013  00DDF9  74                 	db	116	;'t'
  4014  00DDFA  70                 	db	112	;'p'
  4015  00DDFB  75                 	db	117	;'u'
  4016  00DDFC  74                 	db	116	;'t'
  4017  00DDFD  20                 	db	32
  4018  00DDFE  64                 	db	100	;'d'
  4019  00DDFF  69                 	db	105	;'i'
  4020  00DE00  6D                 	db	109	;'m'
  4021  00DE01  6D                 	db	109	;'m'
  4022  00DE02  69                 	db	105	;'i'
  4023  00DE03  6E                 	db	110	;'n'
  4024  00DE04  67                 	db	103	;'g'
  4025  00DE05  0A                 	db	10
  4026  00DE06  0D                 	db	13
  4027  00DE07  20                 	db	32
  4028  00DE08  20                 	db	32
  4029  00DE09  20                 	db	32
  4030  00DE0A  45                 	db	69	;'E'
  4031  00DE0B  6E                 	db	110	;'n'
  4032  00DE0C  61                 	db	97	;'a'
  4033  00DE0D  62                 	db	98	;'b'
  4034  00DE0E  6C                 	db	108	;'l'
  4035  00DE0F  65                 	db	101	;'e'
  4036  00DE10  20                 	db	32
  4037  00DE11  4C                 	db	76	;'L'
  4038  00DE12  6F                 	db	111	;'o'
  4039  00DE13  61                 	db	97	;'a'
  4040  00DE14  64                 	db	100	;'d'
  4041  00DE15  3A                 	db	58	;':'
  4042  00DE16  20                 	db	32
  4043  00DE17  45                 	db	69	;'E'
  4044  00DE18  6E                 	db	110	;'n'
  4045  00DE19  61                 	db	97	;'a'
  4046  00DE1A  62                 	db	98	;'b'
  4047  00DE1B  6C                 	db	108	;'l'
  4048  00DE1C  65                 	db	101	;'e'
  4049  00DE1D  73                 	db	115	;'s'
  4050  00DE1E  20                 	db	32
  4051  00DE1F  74                 	db	116	;'t'
  4052  00DE20  68                 	db	104	;'h'
  4053  00DE21  65                 	db	101	;'e'
  4054  00DE22  20                 	db	32
  4055  00DE23  6F                 	db	111	;'o'
  4056  00DE24  75                 	db	117	;'u'
  4057  00DE25  74                 	db	116	;'t'
  4058  00DE26  70                 	db	112	;'p'
  4059  00DE27  75                 	db	117	;'u'
  4060  00DE28  74                 	db	116	;'t'
  4061  00DE29  20                 	db	32
  4062  00DE2A  54                 	db	84	;'T'
  4063  00DE2B  52                 	db	82	;'R'
  4064  00DE2C  49                 	db	73	;'I'
  4065  00DE2D  41                 	db	65	;'A'
  4066  00DE2E  43                 	db	67	;'C'
  4067  00DE2F  20                 	db	32
  4068  00DE30  77                 	db	119	;'w'
  4069  00DE31  69                 	db	105	;'i'
  4070  00DE32  74                 	db	116	;'t'
  4071  00DE33  68                 	db	104	;'h'
  4072  00DE34  20                 	db	32
  4073  00DE35  64                 	db	100	;'d'
  4074  00DE36  69                 	db	105	;'i'
  4075  00DE37  6D                 	db	109	;'m'
  4076  00DE38  6D                 	db	109	;'m'
  4077  00DE39  69                 	db	105	;'i'
  4078  00DE3A  6E                 	db	110	;'n'
  4079  00DE3B  67                 	db	103	;'g'
  4080  00DE3C  20                 	db	32
  4081  00DE3D  64                 	db	100	;'d'
  4082  00DE3E  69                 	db	105	;'i'
  4083  00DE3F  73                 	db	115	;'s'
  4084  00DE40  61                 	db	97	;'a'
  4085  00DE41  62                 	db	98	;'b'
  4086  00DE42  6C                 	db	108	;'l'
  4087  00DE43  65                 	db	101	;'e'
  4088  00DE44  64                 	db	100	;'d'
  4089  00DE45  0A                 	db	10
  4090  00DE46  0D                 	db	13
  4091  00DE47  20                 	db	32
  4092  00DE48  20                 	db	32
  4093  00DE49  20                 	db	32
  4094  00DE4A  44                 	db	68	;'D'
  4095  00DE4B  69                 	db	105	;'i'
  4096  00DE4C  73                 	db	115	;'s'
  4097  00DE4D  61                 	db	97	;'a'
  4098  00DE4E  62                 	db	98	;'b'
  4099  00DE4F  6C                 	db	108	;'l'
  4100  00DE50  65                 	db	101	;'e'
  4101  00DE51  20                 	db	32
  4102  00DE52  4C                 	db	76	;'L'
  4103  00DE53  6F                 	db	111	;'o'
  4104  00DE54  61                 	db	97	;'a'
  4105  00DE55  64                 	db	100	;'d'
  4106  00DE56  3A                 	db	58	;':'
  4107  00DE57  20                 	db	32
  4108  00DE58  44                 	db	68	;'D'
  4109  00DE59  69                 	db	105	;'i'
  4110  00DE5A  73                 	db	115	;'s'
  4111  00DE5B  61                 	db	97	;'a'
  4112  00DE5C  62                 	db	98	;'b'
  4113  00DE5D  6C                 	db	108	;'l'
  4114  00DE5E  65                 	db	101	;'e'
  4115  00DE5F  73                 	db	115	;'s'
  4116  00DE60  20                 	db	32
  4117  00DE61  74                 	db	116	;'t'
  4118  00DE62  68                 	db	104	;'h'
  4119  00DE63  65                 	db	101	;'e'
  4120  00DE64  20                 	db	32
  4121  00DE65  6F                 	db	111	;'o'
  4122  00DE66  75                 	db	117	;'u'
  4123  00DE67  74                 	db	116	;'t'
  4124  00DE68  70                 	db	112	;'p'
  4125  00DE69  75                 	db	117	;'u'
  4126  00DE6A  74                 	db	116	;'t'
  4127  00DE6B  20                 	db	32
  4128  00DE6C  54                 	db	84	;'T'
  4129  00DE6D  52                 	db	82	;'R'
  4130  00DE6E  49                 	db	73	;'I'
  4131  00DE6F  41                 	db	65	;'A'
  4132  00DE70  43                 	db	67	;'C'
  4133  00DE71  20                 	db	32
  4134  00DE72  63                 	db	99	;'c'
  4135  00DE73  6F                 	db	111	;'o'
  4136  00DE74  6D                 	db	109	;'m'
  4137  00DE75  70                 	db	112	;'p'
  4138  00DE76  6C                 	db	108	;'l'
  4139  00DE77  65                 	db	101	;'e'
  4140  00DE78  74                 	db	116	;'t'
  4141  00DE79  65                 	db	101	;'e'
  4142  00DE7A  6C                 	db	108	;'l'
  4143  00DE7B  79                 	db	121	;'y'
  4144  00DE7C  0A                 	db	10
  4145  00DE7D  0D                 	db	13
  4146  00DE7E  20                 	db	32
  4147  00DE7F  20                 	db	32
  4148  00DE80  20                 	db	32
  4149  00DE81  4C                 	db	76	;'L'
  4150  00DE82  6F                 	db	111	;'o'
  4151  00DE83  61                 	db	97	;'a'
  4152  00DE84  64                 	db	100	;'d'
  4153  00DE85  20                 	db	32
  4154  00DE86  45                 	db	69	;'E'
  4155  00DE87  6E                 	db	110	;'n'
  4156  00DE88  61                 	db	97	;'a'
  4157  00DE89  62                 	db	98	;'b'
  4158  00DE8A  6C                 	db	108	;'l'
  4159  00DE8B  65                 	db	101	;'e'
  4160  00DE8C  64                 	db	100	;'d'
  4161  00DE8D  3F                 	db	63	;'?'
  4162  00DE8E  3A                 	db	58	;':'
  4163  00DE8F  20                 	db	32
  4164  00DE90  52                 	db	82	;'R'
  4165  00DE91  65                 	db	101	;'e'
  4166  00DE92  74                 	db	116	;'t'
  4167  00DE93  75                 	db	117	;'u'
  4168  00DE94  72                 	db	114	;'r'
  4169  00DE95  6E                 	db	110	;'n'
  4170  00DE96  73                 	db	115	;'s'
  4171  00DE97  20                 	db	32
  4172  00DE98  69                 	db	105	;'i'
  4173  00DE99  66                 	db	102	;'f'
  4174  00DE9A  20                 	db	32
  4175  00DE9B  74                 	db	116	;'t'
  4176  00DE9C  68                 	db	104	;'h'
  4177  00DE9D  65                 	db	101	;'e'
  4178  00DE9E  20                 	db	32
  4179  00DE9F  6F                 	db	111	;'o'
  4180  00DEA0  75                 	db	117	;'u'
  4181  00DEA1  74                 	db	116	;'t'
  4182  00DEA2  70                 	db	112	;'p'
  4183  00DEA3  75                 	db	117	;'u'
  4184  00DEA4  74                 	db	116	;'t'
  4185  00DEA5  20                 	db	32
  4186  00DEA6  6C                 	db	108	;'l'
  4187  00DEA7  6F                 	db	111	;'o'
  4188  00DEA8  61                 	db	97	;'a'
  4189  00DEA9  64                 	db	100	;'d'
  4190  00DEAA  20                 	db	32
  4191  00DEAB  69                 	db	105	;'i'
  4192  00DEAC  73                 	db	115	;'s'
  4193  00DEAD  20                 	db	32
  4194  00DEAE  65                 	db	101	;'e'
  4195  00DEAF  6E                 	db	110	;'n'
  4196  00DEB0  61                 	db	97	;'a'
  4197  00DEB1  62                 	db	98	;'b'
  4198  00DEB2  6C                 	db	108	;'l'
  4199  00DEB3  65                 	db	101	;'e'
  4200  00DEB4  64                 	db	100	;'d'
  4201  00DEB5  20                 	db	32
  4202  00DEB6  6F                 	db	111	;'o'
  4203  00DEB7  72                 	db	114	;'r'
  4204  00DEB8  20                 	db	32
  4205  00DEB9  64                 	db	100	;'d'
  4206  00DEBA  69                 	db	105	;'i'
  4207  00DEBB  73                 	db	115	;'s'
  4208  00DEBC  61                 	db	97	;'a'
  4209  00DEBD  62                 	db	98	;'b'
  4210  00DEBE  6C                 	db	108	;'l'
  4211  00DEBF  65                 	db	101	;'e'
  4212  00DEC0  64                 	db	100	;'d'
  4213  00DEC1  0A                 	db	10
  4214  00DEC2  0D                 	db	13
  4215  00DEC3  20                 	db	32
  4216  00DEC4  20                 	db	32
  4217  00DEC5  20                 	db	32
  4218  00DEC6  44                 	db	68	;'D'
  4219  00DEC7  69                 	db	105	;'i'
  4220  00DEC8  6D                 	db	109	;'m'
  4221  00DEC9  6D                 	db	109	;'m'
  4222  00DECA  69                 	db	105	;'i'
  4223  00DECB  6E                 	db	110	;'n'
  4224  00DECC  67                 	db	103	;'g'
  4225  00DECD  20                 	db	32
  4226  00DECE  45                 	db	69	;'E'
  4227  00DECF  6E                 	db	110	;'n'
  4228  00DED0  61                 	db	97	;'a'
  4229  00DED1  62                 	db	98	;'b'
  4230  00DED2  6C                 	db	108	;'l'
  4231  00DED3  65                 	db	101	;'e'
  4232  00DED4  64                 	db	100	;'d'
  4233  00DED5  3F                 	db	63	;'?'
  4234  00DED6  3A                 	db	58	;':'
  4235  00DED7  20                 	db	32
  4236  00DED8  52                 	db	82	;'R'
  4237  00DED9  65                 	db	101	;'e'
  4238  00DEDA  74                 	db	116	;'t'
  4239  00DEDB  75                 	db	117	;'u'
  4240  00DEDC  72                 	db	114	;'r'
  4241  00DEDD  6E                 	db	110	;'n'
  4242  00DEDE  73                 	db	115	;'s'
  4243  00DEDF  20                 	db	32
  4244  00DEE0  69                 	db	105	;'i'
  4245  00DEE1  66                 	db	102	;'f'
  4246  00DEE2  20                 	db	32
  4247  00DEE3  64                 	db	100	;'d'
  4248  00DEE4  69                 	db	105	;'i'
  4249  00DEE5  6D                 	db	109	;'m'
  4250  00DEE6  6D                 	db	109	;'m'
  4251  00DEE7  69                 	db	105	;'i'
  4252  00DEE8  6E                 	db	110	;'n'
  4253  00DEE9  67                 	db	103	;'g'
  4254  00DEEA  20                 	db	32
  4255  00DEEB  6F                 	db	111	;'o'
  4256  00DEEC  66                 	db	102	;'f'
  4257  00DEED  20                 	db	32
  4258  00DEEE  74                 	db	116	;'t'
  4259  00DEEF  68                 	db	104	;'h'
  4260  00DEF0  65                 	db	101	;'e'
  4261  00DEF1  20                 	db	32
  4262  00DEF2  6F                 	db	111	;'o'
  4263  00DEF3  75                 	db	117	;'u'
  4264  00DEF4  74                 	db	116	;'t'
  4265  00DEF5  70                 	db	112	;'p'
  4266  00DEF6  75                 	db	117	;'u'
  4267  00DEF7  74                 	db	116	;'t'
  4268  00DEF8  20                 	db	32
  4269  00DEF9  6C                 	db	108	;'l'
  4270  00DEFA  6F                 	db	111	;'o'
  4271  00DEFB  61                 	db	97	;'a'
  4272  00DEFC  64                 	db	100	;'d'
  4273  00DEFD  20                 	db	32
  4274  00DEFE  69                 	db	105	;'i'
  4275  00DEFF  73                 	db	115	;'s'
  4276  00DF00  20                 	db	32
  4277  00DF01  65                 	db	101	;'e'
  4278  00DF02  6E                 	db	110	;'n'
  4279  00DF03  61                 	db	97	;'a'
  4280  00DF04  62                 	db	98	;'b'
  4281  00DF05  6C                 	db	108	;'l'
  4282  00DF06  65                 	db	101	;'e'
  4283  00DF07  64                 	db	100	;'d'
  4284  00DF08  20                 	db	32
  4285  00DF09  6F                 	db	111	;'o'
  4286  00DF0A  72                 	db	114	;'r'
  4287  00DF0B  20                 	db	32
  4288  00DF0C  6E                 	db	110	;'n'
  4289  00DF0D  6F                 	db	111	;'o'
  4290  00DF0E  74                 	db	116	;'t'
  4291  00DF0F  0A                 	db	10
  4292  00DF10  0D                 	db	13
  4293  00DF11  20                 	db	32
  4294  00DF12  20                 	db	32
  4295  00DF13  20                 	db	32
  4296  00DF14  53                 	db	83	;'S'
  4297  00DF15  65                 	db	101	;'e'
  4298  00DF16  74                 	db	116	;'t'
  4299  00DF17  20                 	db	32
  4300  00DF18  44                 	db	68	;'D'
  4301  00DF19  69                 	db	105	;'i'
  4302  00DF1A  6D                 	db	109	;'m'
  4303  00DF1B  6D                 	db	109	;'m'
  4304  00DF1C  69                 	db	105	;'i'
  4305  00DF1D  6E                 	db	110	;'n'
  4306  00DF1E  67                 	db	103	;'g'
  4307  00DF1F  20                 	db	32
  4308  00DF20  50                 	db	80	;'P'
  4309  00DF21  65                 	db	101	;'e'
  4310  00DF22  72                 	db	114	;'r'
  4311  00DF23  63                 	db	99	;'c'
  4312  00DF24  65                 	db	101	;'e'
  4313  00DF25  6E                 	db	110	;'n'
  4314  00DF26  74                 	db	116	;'t'
  4315  00DF27  61                 	db	97	;'a'
  4316  00DF28  67                 	db	103	;'g'
  4317  00DF29  65                 	db	101	;'e'
  4318  00DF2A  3A                 	db	58	;':'
  4319  00DF2B  20                 	db	32
  4320  00DF2C  3C                 	db	60	;'<'
  4321  00DF2D  78                 	db	120	;'x'
  4322  00DF2E  3E                 	db	62	;'>'
  4323  00DF2F  3A                 	db	58	;':'
  4324  00DF30  20                 	db	32
  4325  00DF31  53                 	db	83	;'S'
  4326  00DF32  65                 	db	101	;'e'
  4327  00DF33  74                 	db	116	;'t'
  4328  00DF34  73                 	db	115	;'s'
  4329  00DF35  20                 	db	32
  4330  00DF36  74                 	db	116	;'t'
  4331  00DF37  68                 	db	104	;'h'
  4332  00DF38  65                 	db	101	;'e'
  4333  00DF39  20                 	db	32
  4334  00DF3A  6F                 	db	111	;'o'
  4335  00DF3B  75                 	db	117	;'u'
  4336  00DF3C  74                 	db	116	;'t'
  4337  00DF3D  70                 	db	112	;'p'
  4338  00DF3E  75                 	db	117	;'u'
  4339  00DF3F  74                 	db	116	;'t'
  4340  00DF40  20                 	db	32
  4341  00DF41  64                 	db	100	;'d'
  4342  00DF42  69                 	db	105	;'i'
  4343  00DF43  6D                 	db	109	;'m'
  4344  00DF44  6D                 	db	109	;'m'
  4345  00DF45  69                 	db	105	;'i'
  4346  00DF46  6E                 	db	110	;'n'
  4347  00DF47  67                 	db	103	;'g'
  4348  00DF48  20                 	db	32
  4349  00DF49  70                 	db	112	;'p'
  4350  00DF4A  65                 	db	101	;'e'
  4351  00DF4B  72                 	db	114	;'r'
  4352  00DF4C  63                 	db	99	;'c'
  4353  00DF4D  65                 	db	101	;'e'
  4354  00DF4E  6E                 	db	110	;'n'
  4355  00DF4F  74                 	db	116	;'t'
  4356  00DF50  61                 	db	97	;'a'
  4357  00DF51  67                 	db	103	;'g'
  4358  00DF52  65                 	db	101	;'e'
  4359  00DF53  20                 	db	32
  4360  00DF54  61                 	db	97	;'a'
  4361  00DF55  73                 	db	115	;'s'
  4362  00DF56  20                 	db	32
  4363  00DF57  78                 	db	120	;'x'
  4364  00DF58  20                 	db	32
  4365  00DF59  70                 	db	112	;'p'
  4366  00DF5A  65                 	db	101	;'e'
  4367  00DF5B  72                 	db	114	;'r'
  4368  00DF5C  63                 	db	99	;'c'
  4369  00DF5D  65                 	db	101	;'e'
  4370  00DF5E  6E                 	db	110	;'n'
  4371  00DF5F  74                 	db	116	;'t'
  4372  00DF60  0A                 	db	10
  4373  00DF61  0D                 	db	13
  4374  00DF62  0A                 	db	10
  4375  00DF63  0D                 	db	13
  4376  00DF64  00                 	db	0
  4377  00DF65                     STR_151:
  4378  00DF65  4C                 	db	76	;'L'
  4379  00DF66  69                 	db	105	;'i'
  4380  00DF67  73                 	db	115	;'s'
  4381  00DF68  74                 	db	116	;'t'
  4382  00DF69  20                 	db	32
  4383  00DF6A  6F                 	db	111	;'o'
  4384  00DF6B  66                 	db	102	;'f'
  4385  00DF6C  20                 	db	32
  4386  00DF6D  73                 	db	115	;'s'
  4387  00DF6E  75                 	db	117	;'u'
  4388  00DF6F  70                 	db	112	;'p'
  4389  00DF70  70                 	db	112	;'p'
  4390  00DF71  6F                 	db	111	;'o'
  4391  00DF72  72                 	db	114	;'r'
  4392  00DF73  74                 	db	116	;'t'
  4393  00DF74  65                 	db	101	;'e'
  4394  00DF75  64                 	db	100	;'d'
  4395  00DF76  20                 	db	32
  4396  00DF77  44                 	db	68	;'D'
  4397  00DF78  65                 	db	101	;'e'
  4398  00DF79  76                 	db	118	;'v'
  4399  00DF7A  69                 	db	105	;'i'
  4400  00DF7B  63                 	db	99	;'c'
  4401  00DF7C  65                 	db	101	;'e'
  4402  00DF7D  20                 	db	32
  4403  00DF7E  43                 	db	67	;'C'
  4404  00DF7F  6F                 	db	111	;'o'
  4405  00DF80  6E                 	db	110	;'n'
  4406  00DF81  74                 	db	116	;'t'
  4407  00DF82  72                 	db	114	;'r'
  4408  00DF83  6F                 	db	111	;'o'
  4409  00DF84  6C                 	db	108	;'l'
  4410  00DF85  20                 	db	32
  4411  00DF86  43                 	db	67	;'C'
  4412  00DF87  6F                 	db	111	;'o'
  4413  00DF88  6D                 	db	109	;'m'
  4414  00DF89  6D                 	db	109	;'m'
  4415  00DF8A  61                 	db	97	;'a'
  4416  00DF8B  6E                 	db	110	;'n'
  4417  00DF8C  64                 	db	100	;'d'
  4418  00DF8D  73                 	db	115	;'s'
  4419  00DF8E  3A                 	db	58	;':'
  4420  00DF8F  0A                 	db	10
  4421  00DF90  0D                 	db	13
  4422  00DF91  20                 	db	32
  4423  00DF92  20                 	db	32
  4424  00DF93  20                 	db	32
  4425  00DF94  52                 	db	82	;'R'
  4426  00DF95  65                 	db	101	;'e'
  4427  00DF96  73                 	db	115	;'s'
  4428  00DF97  65                 	db	101	;'e'
  4429  00DF98  74                 	db	116	;'t'
  4430  00DF99  3A                 	db	58	;':'
  4431  00DF9A  20                 	db	32
  4432  00DF9B  43                 	db	67	;'C'
  4433  00DF9C  6C                 	db	108	;'l'
  4434  00DF9D  65                 	db	101	;'e'
  4435  00DF9E  61                 	db	97	;'a'
  4436  00DF9F  72                 	db	114	;'r'
  4437  00DFA0  73                 	db	115	;'s'
  4438  00DFA1  20                 	db	32
  4439  00DFA2  74                 	db	116	;'t'
  4440  00DFA3  68                 	db	104	;'h'
  4441  00DFA4  65                 	db	101	;'e'
  4442  00DFA5  20                 	db	32
  4443  00DFA6  74                 	db	116	;'t'
  4444  00DFA7  65                 	db	101	;'e'
  4445  00DFA8  72                 	db	114	;'r'
  4446  00DFA9  6D                 	db	109	;'m'
  4447  00DFAA  69                 	db	105	;'i'
  4448  00DFAB  6E                 	db	110	;'n'
  4449  00DFAC  61                 	db	97	;'a'
  4450  00DFAD  6C                 	db	108	;'l'
  4451  00DFAE  20                 	db	32
  4452  00DFAF  61                 	db	97	;'a'
  4453  00DFB0  6E                 	db	110	;'n'
  4454  00DFB1  64                 	db	100	;'d'
  4455  00DFB2  20                 	db	32
  4456  00DFB3  72                 	db	114	;'r'
  4457  00DFB4  65                 	db	101	;'e'
  4458  00DFB5  73                 	db	115	;'s'
  4459  00DFB6  65                 	db	101	;'e'
  4460  00DFB7  74                 	db	116	;'t'
  4461  00DFB8  73                 	db	115	;'s'
  4462  00DFB9  20                 	db	32
  4463  00DFBA  74                 	db	116	;'t'
  4464  00DFBB  68                 	db	104	;'h'
  4465  00DFBC  65                 	db	101	;'e'
  4466  00DFBD  20                 	db	32
  4467  00DFBE  6D                 	db	109	;'m'
  4468  00DFBF  69                 	db	105	;'i'
  4469  00DFC0  63                 	db	99	;'c'
  4470  00DFC1  72                 	db	114	;'r'
  4471  00DFC2  6F                 	db	111	;'o'
  4472  00DFC3  63                 	db	99	;'c'
  4473  00DFC4  6F                 	db	111	;'o'
  4474  00DFC5  6E                 	db	110	;'n'
  4475  00DFC6  74                 	db	116	;'t'
  4476  00DFC7  72                 	db	114	;'r'
  4477  00DFC8  6F                 	db	111	;'o'
  4478  00DFC9  6C                 	db	108	;'l'
  4479  00DFCA  6C                 	db	108	;'l'
  4480  00DFCB  65                 	db	101	;'e'
  4481  00DFCC  72                 	db	114	;'r'
  4482  00DFCD  0A                 	db	10
  4483  00DFCE  0D                 	db	13
  4484  00DFCF  20                 	db	32
  4485  00DFD0  20                 	db	32
  4486  00DFD1  20                 	db	32
  4487  00DFD2  43                 	db	67	;'C'
  4488  00DFD3  6C                 	db	108	;'l'
  4489  00DFD4  65                 	db	101	;'e'
  4490  00DFD5  61                 	db	97	;'a'
  4491  00DFD6  72                 	db	114	;'r'
  4492  00DFD7  3A                 	db	58	;':'
  4493  00DFD8  20                 	db	32
  4494  00DFD9  43                 	db	67	;'C'
  4495  00DFDA  6C                 	db	108	;'l'
  4496  00DFDB  65                 	db	101	;'e'
  4497  00DFDC  61                 	db	97	;'a'
  4498  00DFDD  72                 	db	114	;'r'
  4499  00DFDE  73                 	db	115	;'s'
  4500  00DFDF  20                 	db	32
  4501  00DFE0  74                 	db	116	;'t'
  4502  00DFE1  68                 	db	104	;'h'
  4503  00DFE2  65                 	db	101	;'e'
  4504  00DFE3  20                 	db	32
  4505  00DFE4  74                 	db	116	;'t'
  4506  00DFE5  65                 	db	101	;'e'
  4507  00DFE6  72                 	db	114	;'r'
  4508  00DFE7  6D                 	db	109	;'m'
  4509  00DFE8  69                 	db	105	;'i'
  4510  00DFE9  6E                 	db	110	;'n'
  4511  00DFEA  61                 	db	97	;'a'
  4512  00DFEB  6C                 	db	108	;'l'
  4513  00DFEC  20                 	db	32
  4514  00DFED  62                 	db	98	;'b'
  4515  00DFEE  75                 	db	117	;'u'
  4516  00DFEF  74                 	db	116	;'t'
  4517  00DFF0  20                 	db	32
  4518  00DFF1  64                 	db	100	;'d'
  4519  00DFF2  6F                 	db	111	;'o'
  4520  00DFF3  65                 	db	101	;'e'
  4521  00DFF4  73                 	db	115	;'s'
  4522  00DFF5  6E                 	db	110	;'n'
  4523  00DFF6  27                 	db	39
  4524  00DFF7  74                 	db	116	;'t'
  4525  00DFF8  20                 	db	32
  4526  00DFF9  72                 	db	114	;'r'
  4527  00DFFA  65                 	db	101	;'e'
  4528  00DFFB  73                 	db	115	;'s'
  4529  00DFFC  65                 	db	101	;'e'
  4530  00DFFD  74                 	db	116	;'t'
  4531  00DFFE  20                 	db	32
  4532  00DFFF  74                 	db	116	;'t'
  4533  00E000  68                 	db	104	;'h'
  4534  00E001  65                 	db	101	;'e'
  4535  00E002  20                 	db	32
  4536  00E003  6D                 	db	109	;'m'
  4537  00E004  69                 	db	105	;'i'
  4538  00E005  63                 	db	99	;'c'
  4539  00E006  72                 	db	114	;'r'
  4540  00E007  6F                 	db	111	;'o'
  4541  00E008  0A                 	db	10
  4542  00E009  0D                 	db	13
  4543  00E00A  20                 	db	32
  4544  00E00B  20                 	db	32
  4545  00E00C  20                 	db	32
  4546  00E00D  43                 	db	67	;'C'
  4547  00E00E  61                 	db	97	;'a'
  4548  00E00F  75                 	db	117	;'u'
  4549  00E010  73                 	db	115	;'s'
  4550  00E011  65                 	db	101	;'e'
  4551  00E012  20                 	db	32
  4552  00E013  6F                 	db	111	;'o'
  4553  00E014  66                 	db	102	;'f'
  4554  00E015  20                 	db	32
  4555  00E016  52                 	db	82	;'R'
  4556  00E017  65                 	db	101	;'e'
  4557  00E018  73                 	db	115	;'s'
  4558  00E019  65                 	db	101	;'e'
  4559  00E01A  74                 	db	116	;'t'
  4560  00E01B  3F                 	db	63	;'?'
  4561  00E01C  3A                 	db	58	;':'
  4562  00E01D  20                 	db	32
  4563  00E01E  52                 	db	82	;'R'
  4564  00E01F  65                 	db	101	;'e'
  4565  00E020  74                 	db	116	;'t'
  4566  00E021  75                 	db	117	;'u'
  4567  00E022  72                 	db	114	;'r'
  4568  00E023  6E                 	db	110	;'n'
  4569  00E024  73                 	db	115	;'s'
  4570  00E025  20                 	db	32
  4571  00E026  74                 	db	116	;'t'
  4572  00E027  68                 	db	104	;'h'
  4573  00E028  65                 	db	101	;'e'
  4574  00E029  20                 	db	32
  4575  00E02A  63                 	db	99	;'c'
  4576  00E02B  61                 	db	97	;'a'
  4577  00E02C  75                 	db	117	;'u'
  4578  00E02D  73                 	db	115	;'s'
  4579  00E02E  65                 	db	101	;'e'
  4580  00E02F  20                 	db	32
  4581  00E030  6F                 	db	111	;'o'
  4582  00E031  66                 	db	102	;'f'
  4583  00E032  20                 	db	32
  4584  00E033  74                 	db	116	;'t'
  4585  00E034  68                 	db	104	;'h'
  4586  00E035  65                 	db	101	;'e'
  4587  00E036  20                 	db	32
  4588  00E037  6D                 	db	109	;'m'
  4589  00E038  6F                 	db	111	;'o'
  4590  00E039  73                 	db	115	;'s'
  4591  00E03A  74                 	db	116	;'t'
  4592  00E03B  20                 	db	32
  4593  00E03C  72                 	db	114	;'r'
  4594  00E03D  65                 	db	101	;'e'
  4595  00E03E  63                 	db	99	;'c'
  4596  00E03F  65                 	db	101	;'e'
  4597  00E040  6E                 	db	110	;'n'
  4598  00E041  74                 	db	116	;'t'
  4599  00E042  20                 	db	32
  4600  00E043  64                 	db	100	;'d'
  4601  00E044  65                 	db	101	;'e'
  4602  00E045  76                 	db	118	;'v'
  4603  00E046  69                 	db	105	;'i'
  4604  00E047  63                 	db	99	;'c'
  4605  00E048  65                 	db	101	;'e'
  4606  00E049  20                 	db	32
  4607  00E04A  72                 	db	114	;'r'
  4608  00E04B  65                 	db	101	;'e'
  4609  00E04C  73                 	db	115	;'s'
  4610  00E04D  65                 	db	101	;'e'
  4611  00E04E  74                 	db	116	;'t'
  4612  00E04F  0A                 	db	10
  4613  00E050  0D                 	db	13
  4614  00E051  20                 	db	32
  4615  00E052  20                 	db	32
  4616  00E053  20                 	db	32
  4617  00E054  2A                 	db	42
  4618  00E055  49                 	db	73	;'I'
  4619  00E056  44                 	db	68	;'D'
  4620  00E057  4E                 	db	78	;'N'
  4621  00E058  3F                 	db	63	;'?'
  4622  00E059  3A                 	db	58	;':'
  4623  00E05A  20                 	db	32
  4624  00E05B  52                 	db	82	;'R'
  4625  00E05C  65                 	db	101	;'e'
  4626  00E05D  74                 	db	116	;'t'
  4627  00E05E  75                 	db	117	;'u'
  4628  00E05F  72                 	db	114	;'r'
  4629  00E060  6E                 	db	110	;'n'
  4630  00E061  73                 	db	115	;'s'
  4631  00E062  20                 	db	32
  4632  00E063  64                 	db	100	;'d'
  4633  00E064  65                 	db	101	;'e'
  4634  00E065  76                 	db	118	;'v'
  4635  00E066  69                 	db	105	;'i'
  4636  00E067  63                 	db	99	;'c'
  4637  00E068  65                 	db	101	;'e'
  4638  00E069  20                 	db	32
  4639  00E06A  69                 	db	105	;'i'
  4640  00E06B  64                 	db	100	;'d'
  4641  00E06C  65                 	db	101	;'e'
  4642  00E06D  6E                 	db	110	;'n'
  4643  00E06E  74                 	db	116	;'t'
  4644  00E06F  69                 	db	105	;'i'
  4645  00E070  66                 	db	102	;'f'
  4646  00E071  69                 	db	105	;'i'
  4647  00E072  63                 	db	99	;'c'
  4648  00E073  61                 	db	97	;'a'
  4649  00E074  74                 	db	116	;'t'
  4650  00E075  69                 	db	105	;'i'
  4651  00E076  6F                 	db	111	;'o'
  4652  00E077  6E                 	db	110	;'n'
  4653  00E078  20                 	db	32
  4654  00E079  73                 	db	115	;'s'
  4655  00E07A  74                 	db	116	;'t'
  4656  00E07B  72                 	db	114	;'r'
  4657  00E07C  69                 	db	105	;'i'
  4658  00E07D  6E                 	db	110	;'n'
  4659  00E07E  67                 	db	103	;'g'
  4660  00E07F  0A                 	db	10
  4661  00E080  0D                 	db	13
  4662  00E081  20                 	db	32
  4663  00E082  20                 	db	32
  4664  00E083  20                 	db	32
  4665  00E084  44                 	db	68	;'D'
  4666  00E085  65                 	db	101	;'e'
  4667  00E086  76                 	db	118	;'v'
  4668  00E087  69                 	db	105	;'i'
  4669  00E088  63                 	db	99	;'c'
  4670  00E089  65                 	db	101	;'e'
  4671  00E08A  20                 	db	32
  4672  00E08B  4F                 	db	79	;'O'
  4673  00E08C  6E                 	db	110	;'n'
  4674  00E08D  20                 	db	32
  4675  00E08E  54                 	db	84	;'T'
  4676  00E08F  69                 	db	105	;'i'
  4677  00E090  6D                 	db	109	;'m'
  4678  00E091  65                 	db	101	;'e'
  4679  00E092  3F                 	db	63	;'?'
  4680  00E093  3A                 	db	58	;':'
  4681  00E094  20                 	db	32
  4682  00E095  52                 	db	82	;'R'
  4683  00E096  65                 	db	101	;'e'
  4684  00E097  74                 	db	116	;'t'
  4685  00E098  75                 	db	117	;'u'
  4686  00E099  72                 	db	114	;'r'
  4687  00E09A  6E                 	db	110	;'n'
  4688  00E09B  73                 	db	115	;'s'
  4689  00E09C  20                 	db	32
  4690  00E09D  64                 	db	100	;'d'
  4691  00E09E  65                 	db	101	;'e'
  4692  00E09F  76                 	db	118	;'v'
  4693  00E0A0  69                 	db	105	;'i'
  4694  00E0A1  63                 	db	99	;'c'
  4695  00E0A2  65                 	db	101	;'e'
  4696  00E0A3  20                 	db	32
  4697  00E0A4  6F                 	db	111	;'o'
  4698  00E0A5  6E                 	db	110	;'n'
  4699  00E0A6  20                 	db	32
  4700  00E0A7  74                 	db	116	;'t'
  4701  00E0A8  69                 	db	105	;'i'
  4702  00E0A9  6D                 	db	109	;'m'
  4703  00E0AA  65                 	db	101	;'e'
  4704  00E0AB  20                 	db	32
  4705  00E0AC  73                 	db	115	;'s'
  4706  00E0AD  69                 	db	105	;'i'
  4707  00E0AE  6E                 	db	110	;'n'
  4708  00E0AF  63                 	db	99	;'c'
  4709  00E0B0  65                 	db	101	;'e'
  4710  00E0B1  20                 	db	32
  4711  00E0B2  6C                 	db	108	;'l'
  4712  00E0B3  61                 	db	97	;'a'
  4713  00E0B4  73                 	db	115	;'s'
  4714  00E0B5  74                 	db	116	;'t'
  4715  00E0B6  20                 	db	32
  4716  00E0B7  64                 	db	100	;'d'
  4717  00E0B8  65                 	db	101	;'e'
  4718  00E0B9  76                 	db	118	;'v'
  4719  00E0BA  69                 	db	105	;'i'
  4720  00E0BB  63                 	db	99	;'c'
  4721  00E0BC  65                 	db	101	;'e'
  4722  00E0BD  20                 	db	32
  4723  00E0BE  72                 	db	114	;'r'
  4724  00E0BF  65                 	db	101	;'e'
  4725  00E0C0  73                 	db	115	;'s'
  4726  00E0C1  65                 	db	101	;'e'
  4727  00E0C2  74                 	db	116	;'t'
  4728  00E0C3  0A                 	db	10
  4729  00E0C4  0D                 	db	13
  4730  00E0C5  20                 	db	32
  4731  00E0C6  20                 	db	32
  4732  00E0C7  20                 	db	32
  4733  00E0C8  44                 	db	68	;'D'
  4734  00E0C9  65                 	db	101	;'e'
  4735  00E0CA  76                 	db	118	;'v'
  4736  00E0CB  69                 	db	105	;'i'
  4737  00E0CC  63                 	db	99	;'c'
  4738  00E0CD  65                 	db	101	;'e'
  4739  00E0CE  20                 	db	32
  4740  00E0CF  49                 	db	73	;'I'
  4741  00E0D0  44                 	db	68	;'D'
  4742  00E0D1  3F                 	db	63	;'?'
  4743  00E0D2  3A                 	db	58	;':'
  4744  00E0D3  20                 	db	32
  4745  00E0D4  52                 	db	82	;'R'
  4746  00E0D5  65                 	db	101	;'e'
  4747  00E0D6  74                 	db	116	;'t'
  4748  00E0D7  75                 	db	117	;'u'
  4749  00E0D8  72                 	db	114	;'r'
  4750  00E0D9  6E                 	db	110	;'n'
  4751  00E0DA  73                 	db	115	;'s'
  4752  00E0DB  20                 	db	32
  4753  00E0DC  64                 	db	100	;'d'
  4754  00E0DD  65                 	db	101	;'e'
  4755  00E0DE  76                 	db	118	;'v'
  4756  00E0DF  69                 	db	105	;'i'
  4757  00E0E0  63                 	db	99	;'c'
  4758  00E0E1  65                 	db	101	;'e'
  4759  00E0E2  20                 	db	32
  4760  00E0E3  49                 	db	73	;'I'
  4761  00E0E4  44                 	db	68	;'D'
  4762  00E0E5  20                 	db	32
  4763  00E0E6  61                 	db	97	;'a'
  4764  00E0E7  73                 	db	115	;'s'
  4765  00E0E8  20                 	db	32
  4766  00E0E9  70                 	db	112	;'p'
  4767  00E0EA  72                 	db	114	;'r'
  4768  00E0EB  65                 	db	101	;'e'
  4769  00E0EC  2D                 	db	45
  4770  00E0ED  70                 	db	112	;'p'
  4771  00E0EE  72                 	db	114	;'r'
  4772  00E0EF  6F                 	db	111	;'o'
  4773  00E0F0  67                 	db	103	;'g'
  4774  00E0F1  72                 	db	114	;'r'
  4775  00E0F2  61                 	db	97	;'a'
  4776  00E0F3  6D                 	db	109	;'m'
  4777  00E0F4  6D                 	db	109	;'m'
  4778  00E0F5  65                 	db	101	;'e'
  4779  00E0F6  64                 	db	100	;'d'
  4780  00E0F7  20                 	db	32
  4781  00E0F8  69                 	db	105	;'i'
  4782  00E0F9  6E                 	db	110	;'n'
  4783  00E0FA  20                 	db	32
  4784  00E0FB  66                 	db	102	;'f'
  4785  00E0FC  6C                 	db	108	;'l'
  4786  00E0FD  61                 	db	97	;'a'
  4787  00E0FE  73                 	db	115	;'s'
  4788  00E0FF  68                 	db	104	;'h'
  4789  00E100  20                 	db	32
  4790  00E101  6D                 	db	109	;'m'
  4791  00E102  65                 	db	101	;'e'
  4792  00E103  6D                 	db	109	;'m'
  4793  00E104  6F                 	db	111	;'o'
  4794  00E105  72                 	db	114	;'r'
  4795  00E106  79                 	db	121	;'y'
  4796  00E107  0A                 	db	10
  4797  00E108  0D                 	db	13
  4798  00E109  20                 	db	32
  4799  00E10A  20                 	db	32
  4800  00E10B  20                 	db	32
  4801  00E10C  52                 	db	82	;'R'
  4802  00E10D  65                 	db	101	;'e'
  4803  00E10E  76                 	db	118	;'v'
  4804  00E10F  69                 	db	105	;'i'
  4805  00E110  73                 	db	115	;'s'
  4806  00E111  69                 	db	105	;'i'
  4807  00E112  6F                 	db	111	;'o'
  4808  00E113  6E                 	db	110	;'n'
  4809  00E114  20                 	db	32
  4810  00E115  49                 	db	73	;'I'
  4811  00E116  44                 	db	68	;'D'
  4812  00E117  3F                 	db	63	;'?'
  4813  00E118  3A                 	db	58	;':'
  4814  00E119  20                 	db	32
  4815  00E11A  52                 	db	82	;'R'
  4816  00E11B  65                 	db	101	;'e'
  4817  00E11C  74                 	db	116	;'t'
  4818  00E11D  75                 	db	117	;'u'
  4819  00E11E  72                 	db	114	;'r'
  4820  00E11F  6E                 	db	110	;'n'
  4821  00E120  73                 	db	115	;'s'
  4822  00E121  20                 	db	32
  4823  00E122  64                 	db	100	;'d'
  4824  00E123  65                 	db	101	;'e'
  4825  00E124  76                 	db	118	;'v'
  4826  00E125  69                 	db	105	;'i'
  4827  00E126  63                 	db	99	;'c'
  4828  00E127  65                 	db	101	;'e'
  4829  00E128  20                 	db	32
  4830  00E129  73                 	db	115	;'s'
  4831  00E12A  69                 	db	105	;'i'
  4832  00E12B  6C                 	db	108	;'l'
  4833  00E12C  69                 	db	105	;'i'
  4834  00E12D  63                 	db	99	;'c'
  4835  00E12E  6F                 	db	111	;'o'
  4836  00E12F  6E                 	db	110	;'n'
  4837  00E130  20                 	db	32
  4838  00E131  72                 	db	114	;'r'
  4839  00E132  65                 	db	101	;'e'
  4840  00E133  76                 	db	118	;'v'
  4841  00E134  69                 	db	105	;'i'
  4842  00E135  73                 	db	115	;'s'
  4843  00E136  69                 	db	105	;'i'
  4844  00E137  6F                 	db	111	;'o'
  4845  00E138  6E                 	db	110	;'n'
  4846  00E139  20                 	db	32
  4847  00E13A  49                 	db	73	;'I'
  4848  00E13B  44                 	db	68	;'D'
  4849  00E13C  20                 	db	32
  4850  00E13D  61                 	db	97	;'a'
  4851  00E13E  73                 	db	115	;'s'
  4852  00E13F  20                 	db	32
  4853  00E140  70                 	db	112	;'p'
  4854  00E141  72                 	db	114	;'r'
  4855  00E142  65                 	db	101	;'e'
  4856  00E143  2D                 	db	45
  4857  00E144  70                 	db	112	;'p'
  4858  00E145  72                 	db	114	;'r'
  4859  00E146  6F                 	db	111	;'o'
  4860  00E147  67                 	db	103	;'g'
  4861  00E148  72                 	db	114	;'r'
  4862  00E149  61                 	db	97	;'a'
  4863  00E14A  6D                 	db	109	;'m'
  4864  00E14B  6D                 	db	109	;'m'
  4865  00E14C  65                 	db	101	;'e'
  4866  00E14D  64                 	db	100	;'d'
  4867  00E14E  20                 	db	32
  4868  00E14F  69                 	db	105	;'i'
  4869  00E150  6E                 	db	110	;'n'
  4870  00E151  20                 	db	32
  4871  00E152  66                 	db	102	;'f'
  4872  00E153  6C                 	db	108	;'l'
  4873  00E154  61                 	db	97	;'a'
  4874  00E155  73                 	db	115	;'s'
  4875  00E156  68                 	db	104	;'h'
  4876  00E157  20                 	db	32
  4877  00E158  6D                 	db	109	;'m'
  4878  00E159  65                 	db	101	;'e'
  4879  00E15A  6D                 	db	109	;'m'
  4880  00E15B  6F                 	db	111	;'o'
  4881  00E15C  72                 	db	114	;'r'
  4882  00E15D  79                 	db	121	;'y'
  4883  00E15E  0A                 	db	10
  4884  00E15F  0D                 	db	13
  4885  00E160  20                 	db	32
  4886  00E161  20                 	db	32
  4887  00E162  20                 	db	32
  4888  00E163  55                 	db	85	;'U'
  4889  00E164  73                 	db	115	;'s'
  4890  00E165  65                 	db	101	;'e'
  4891  00E166  72                 	db	114	;'r'
  4892  00E167  20                 	db	32
  4893  00E168  49                 	db	73	;'I'
  4894  00E169  44                 	db	68	;'D'
  4895  00E16A  73                 	db	115	;'s'
  4896  00E16B  3F                 	db	63	;'?'
  4897  00E16C  3A                 	db	58	;':'
  4898  00E16D  20                 	db	32
  4899  00E16E  52                 	db	82	;'R'
  4900  00E16F  65                 	db	101	;'e'
  4901  00E170  74                 	db	116	;'t'
  4902  00E171  75                 	db	117	;'u'
  4903  00E172  72                 	db	114	;'r'
  4904  00E173  6E                 	db	110	;'n'
  4905  00E174  73                 	db	115	;'s'
  4906  00E175  20                 	db	32
  4907  00E176  61                 	db	97	;'a'
  4908  00E177  20                 	db	32
  4909  00E178  6C                 	db	108	;'l'
  4910  00E179  69                 	db	105	;'i'
  4911  00E17A  73                 	db	115	;'s'
  4912  00E17B  74                 	db	116	;'t'
  4913  00E17C  20                 	db	32
  4914  00E17D  6F                 	db	111	;'o'
  4915  00E17E  66                 	db	102	;'f'
  4916  00E17F  20                 	db	32
  4917  00E180  75                 	db	117	;'u'
  4918  00E181  73                 	db	115	;'s'
  4919  00E182  65                 	db	101	;'e'
  4920  00E183  72                 	db	114	;'r'
  4921  00E184  20                 	db	32
  4922  00E185  49                 	db	73	;'I'
  4923  00E186  44                 	db	68	;'D'
  4924  00E187  73                 	db	115	;'s'
  4925  00E188  20                 	db	32
  4926  00E189  28                 	db	40
  4927  00E18A  64                 	db	100	;'d'
  4928  00E18B  69                 	db	105	;'i'
  4929  00E18C  73                 	db	115	;'s'
  4930  00E18D  70                 	db	112	;'p'
  4931  00E18E  6C                 	db	108	;'l'
  4932  00E18F  61                 	db	97	;'a'
  4933  00E190  79                 	db	121	;'y'
  4934  00E191  65                 	db	101	;'e'
  4935  00E192  64                 	db	100	;'d'
  4936  00E193  20                 	db	32
  4937  00E194  69                 	db	105	;'i'
  4938  00E195  6E                 	db	110	;'n'
  4939  00E196  20                 	db	32
  4940  00E197  68                 	db	104	;'h'
  4941  00E198  65                 	db	101	;'e'
  4942  00E199  78                 	db	120	;'x'
  4943  00E19A  29                 	db	41
  4944  00E19B  20                 	db	32
  4945  00E19C  61                 	db	97	;'a'
  4946  00E19D  73                 	db	115	;'s'
  4947  00E19E  20                 	db	32
  4948  00E19F  73                 	db	115	;'s'
  4949  00E1A0  74                 	db	116	;'t'
  4950  00E1A1  6F                 	db	111	;'o'
  4951  00E1A2  72                 	db	114	;'r'
  4952  00E1A3  65                 	db	101	;'e'
  4953  00E1A4  64                 	db	100	;'d'
  4954  00E1A5  20                 	db	32
  4955  00E1A6  69                 	db	105	;'i'
  4956  00E1A7  6E                 	db	110	;'n'
  4957  00E1A8  20                 	db	32
  4958  00E1A9  66                 	db	102	;'f'
  4959  00E1AA  6C                 	db	108	;'l'
  4960  00E1AB  61                 	db	97	;'a'
  4961  00E1AC  73                 	db	115	;'s'
  4962  00E1AD  68                 	db	104	;'h'
  4963  00E1AE  20                 	db	32
  4964  00E1AF  6D                 	db	109	;'m'
  4965  00E1B0  65                 	db	101	;'e'
  4966  00E1B1  6D                 	db	109	;'m'
  4967  00E1B2  6F                 	db	111	;'o'
  4968  00E1B3  72                 	db	114	;'r'
  4969  00E1B4  79                 	db	121	;'y'
  4970  00E1B5  0A                 	db	10
  4971  00E1B6  0D                 	db	13
  4972  00E1B7  20                 	db	32
  4973  00E1B8  20                 	db	32
  4974  00E1B9  20                 	db	32
  4975  00E1BA  41                 	db	65	;'A'
  4976  00E1BB  44                 	db	68	;'D'
  4977  00E1BC  43                 	db	67	;'C'
  4978  00E1BD  20                 	db	32
  4979  00E1BE  45                 	db	69	;'E'
  4980  00E1BF  72                 	db	114	;'r'
  4981  00E1C0  72                 	db	114	;'r'
  4982  00E1C1  6F                 	db	111	;'o'
  4983  00E1C2  72                 	db	114	;'r'
  4984  00E1C3  3F                 	db	63	;'?'
  4985  00E1C4  3A                 	db	58	;':'
  4986  00E1C5  20                 	db	32
  4987  00E1C6  52                 	db	82	;'R'
  4988  00E1C7  65                 	db	101	;'e'
  4989  00E1C8  74                 	db	116	;'t'
  4990  00E1C9  75                 	db	117	;'u'
  4991  00E1CA  72                 	db	114	;'r'
  4992  00E1CB  6E                 	db	110	;'n'
  4993  00E1CC  73                 	db	115	;'s'
  4994  00E1CD  20                 	db	32
  4995  00E1CE  74                 	db	116	;'t'
  4996  00E1CF  68                 	db	104	;'h'
  4997  00E1D0  65                 	db	101	;'e'
  4998  00E1D1  20                 	db	32
  4999  00E1D2  63                 	db	99	;'c'
  5000  00E1D3  61                 	db	97	;'a'
  5001  00E1D4  75                 	db	117	;'u'
  5002  00E1D5  73                 	db	115	;'s'
  5003  00E1D6  65                 	db	101	;'e'
  5004  00E1D7  20                 	db	32
  5005  00E1D8  6F                 	db	111	;'o'
  5006  00E1D9  66                 	db	102	;'f'
  5007  00E1DA  20                 	db	32
  5008  00E1DB  61                 	db	97	;'a'
  5009  00E1DC  6E                 	db	110	;'n'
  5010  00E1DD  20                 	db	32
  5011  00E1DE  41                 	db	65	;'A'
  5012  00E1DF  44                 	db	68	;'D'
  5013  00E1E0  43                 	db	67	;'C'
  5014  00E1E1  20                 	db	32
  5015  00E1E2  65                 	db	101	;'e'
  5016  00E1E3  72                 	db	114	;'r'
  5017  00E1E4  72                 	db	114	;'r'
  5018  00E1E5  6F                 	db	111	;'o'
  5019  00E1E6  72                 	db	114	;'r'
  5020  00E1E7  20                 	db	32
  5021  00E1E8  69                 	db	105	;'i'
  5022  00E1E9  66                 	db	102	;'f'
  5023  00E1EA  20                 	db	32
  5024  00E1EB  61                 	db	97	;'a'
  5025  00E1EC  6E                 	db	110	;'n'
  5026  00E1ED  20                 	db	32
  5027  00E1EE  65                 	db	101	;'e'
  5028  00E1EF  72                 	db	114	;'r'
  5029  00E1F0  72                 	db	114	;'r'
  5030  00E1F1  6F                 	db	111	;'o'
  5031  00E1F2  72                 	db	114	;'r'
  5032  00E1F3  20                 	db	32
  5033  00E1F4  6F                 	db	111	;'o'
  5034  00E1F5  63                 	db	99	;'c'
  5035  00E1F6  63                 	db	99	;'c'
  5036  00E1F7  75                 	db	117	;'u'
  5037  00E1F8  72                 	db	114	;'r'
  5038  00E1F9  72                 	db	114	;'r'
  5039  00E1FA  65                 	db	101	;'e'
  5040  00E1FB  64                 	db	100	;'d'
  5041  00E1FC  0A                 	db	10
  5042  00E1FD  0D                 	db	13
  5043  00E1FE  20                 	db	32
  5044  00E1FF  20                 	db	32
  5045  00E200  20                 	db	32
  5046  00E201  43                 	db	67	;'C'
  5047  00E202  6C                 	db	108	;'l'
  5048  00E203  65                 	db	101	;'e'
  5049  00E204  61                 	db	97	;'a'
  5050  00E205  72                 	db	114	;'r'
  5051  00E206  20                 	db	32
  5052  00E207  41                 	db	65	;'A'
  5053  00E208  44                 	db	68	;'D'
  5054  00E209  43                 	db	67	;'C'
  5055  00E20A  20                 	db	32
  5056  00E20B  45                 	db	69	;'E'
  5057  00E20C  72                 	db	114	;'r'
  5058  00E20D  72                 	db	114	;'r'
  5059  00E20E  6F                 	db	111	;'o'
  5060  00E20F  72                 	db	114	;'r'
  5061  00E210  3A                 	db	58	;':'
  5062  00E211  20                 	db	32
  5063  00E212  43                 	db	67	;'C'
  5064  00E213  6C                 	db	108	;'l'
  5065  00E214  65                 	db	101	;'e'
  5066  00E215  61                 	db	97	;'a'
  5067  00E216  72                 	db	114	;'r'
  5068  00E217  73                 	db	115	;'s'
  5069  00E218  20                 	db	32
  5070  00E219  74                 	db	116	;'t'
  5071  00E21A  68                 	db	104	;'h'
  5072  00E21B  65                 	db	101	;'e'
  5073  00E21C  20                 	db	32
  5074  00E21D  41                 	db	65	;'A'
  5075  00E21E  44                 	db	68	;'D'
  5076  00E21F  43                 	db	67	;'C'
  5077  00E220  20                 	db	32
  5078  00E221  65                 	db	101	;'e'
  5079  00E222  72                 	db	114	;'r'
  5080  00E223  72                 	db	114	;'r'
  5081  00E224  6F                 	db	111	;'o'
  5082  00E225  72                 	db	114	;'r'
  5083  00E226  20                 	db	32
  5084  00E227  61                 	db	97	;'a'
  5085  00E228  6E                 	db	110	;'n'
  5086  00E229  64                 	db	100	;'d'
  5087  00E22A  20                 	db	32
  5088  00E22B  72                 	db	114	;'r'
  5089  00E22C  65                 	db	101	;'e'
  5090  00E22D  73                 	db	115	;'s'
  5091  00E22E  75                 	db	117	;'u'
  5092  00E22F  6D                 	db	109	;'m'
  5093  00E230  65                 	db	101	;'e'
  5094  00E231  73                 	db	115	;'s'
  5095  00E232  20                 	db	32
  5096  00E233  41                 	db	65	;'A'
  5097  00E234  44                 	db	68	;'D'
  5098  00E235  43                 	db	67	;'C'
  5099  00E236  20                 	db	32
  5100  00E237  63                 	db	99	;'c'
  5101  00E238  6F                 	db	111	;'o'
  5102  00E239  6E                 	db	110	;'n'
  5103  00E23A  76                 	db	118	;'v'
  5104  00E23B  65                 	db	101	;'e'
  5105  00E23C  72                 	db	114	;'r'
  5106  00E23D  73                 	db	115	;'s'
  5107  00E23E  69                 	db	105	;'i'
  5108  00E23F  6F                 	db	111	;'o'
  5109  00E240  6E                 	db	110	;'n'
  5110  00E241  73                 	db	115	;'s'
  5111  00E242  0A                 	db	10
  5112  00E243  0D                 	db	13
  5113  00E244  20                 	db	32
  5114  00E245  20                 	db	32
  5115  00E246  20                 	db	32
  5116  00E247  43                 	db	67	;'C'
  5117  00E248  6F                 	db	111	;'o'
  5118  00E249  6D                 	db	109	;'m'
  5119  00E24A  6D                 	db	109	;'m'
  5120  00E24B  20                 	db	32
  5121  00E24C  45                 	db	69	;'E'
  5122  00E24D  72                 	db	114	;'r'
  5123  00E24E  72                 	db	114	;'r'
  5124  00E24F  6F                 	db	111	;'o'
  5125  00E250  72                 	db	114	;'r'
  5126  00E251  3F                 	db	63	;'?'
  5127  00E252  3A                 	db	58	;':'
  5128  00E253  20                 	db	32
  5129  00E254  52                 	db	82	;'R'
  5130  00E255  65                 	db	101	;'e'
  5131  00E256  74                 	db	116	;'t'
  5132  00E257  75                 	db	117	;'u'
  5133  00E258  72                 	db	114	;'r'
  5134  00E259  6E                 	db	110	;'n'
  5135  00E25A  73                 	db	115	;'s'
  5136  00E25B  20                 	db	32
  5137  00E25C  69                 	db	105	;'i'
  5138  00E25D  66                 	db	102	;'f'
  5139  00E25E  20                 	db	32
  5140  00E25F  61                 	db	97	;'a'
  5141  00E260  20                 	db	32
  5142  00E261  63                 	db	99	;'c'
  5143  00E262  6F                 	db	111	;'o'
  5144  00E263  6D                 	db	109	;'m'
  5145  00E264  6D                 	db	109	;'m'
  5146  00E265  75                 	db	117	;'u'
  5147  00E266  6E                 	db	110	;'n'
  5148  00E267  69                 	db	105	;'i'
  5149  00E268  63                 	db	99	;'c'
  5150  00E269  61                 	db	97	;'a'
  5151  00E26A  74                 	db	116	;'t'
  5152  00E26B  69                 	db	105	;'i'
  5153  00E26C  6F                 	db	111	;'o'
  5154  00E26D  6E                 	db	110	;'n'
  5155  00E26E  73                 	db	115	;'s'
  5156  00E26F  20                 	db	32
  5157  00E270  65                 	db	101	;'e'
  5158  00E271  72                 	db	114	;'r'
  5159  00E272  72                 	db	114	;'r'
  5160  00E273  6F                 	db	111	;'o'
  5161  00E274  72                 	db	114	;'r'
  5162  00E275  20                 	db	32
  5163  00E276  68                 	db	104	;'h'
  5164  00E277  61                 	db	97	;'a'
  5165  00E278  73                 	db	115	;'s'
  5166  00E279  20                 	db	32
  5167  00E27A  6F                 	db	111	;'o'
  5168  00E27B  63                 	db	99	;'c'
  5169  00E27C  63                 	db	99	;'c'
  5170  00E27D  75                 	db	117	;'u'
  5171  00E27E  72                 	db	114	;'r'
  5172  00E27F  72                 	db	114	;'r'
  5173  00E280  65                 	db	101	;'e'
  5174  00E281  64                 	db	100	;'d'
  5175  00E282  0A                 	db	10
  5176  00E283  0D                 	db	13
  5177  00E284  20                 	db	32
  5178  00E285  20                 	db	32
  5179  00E286  20                 	db	32
  5180  00E287  43                 	db	67	;'C'
  5181  00E288  6C                 	db	108	;'l'
  5182  00E289  65                 	db	101	;'e'
  5183  00E28A  61                 	db	97	;'a'
  5184  00E28B  72                 	db	114	;'r'
  5185  00E28C  20                 	db	32
  5186  00E28D  43                 	db	67	;'C'
  5187  00E28E  6F                 	db	111	;'o'
  5188  00E28F  6D                 	db	109	;'m'
  5189  00E290  6D                 	db	109	;'m'
  5190  00E291  20                 	db	32
  5191  00E292  45                 	db	69	;'E'
  5192  00E293  72                 	db	114	;'r'
  5193  00E294  72                 	db	114	;'r'
  5194  00E295  6F                 	db	111	;'o'
  5195  00E296  72                 	db	114	;'r'
  5196  00E297  3A                 	db	58	;':'
  5197  00E298  20                 	db	32
  5198  00E299  43                 	db	67	;'C'
  5199  00E29A  6C                 	db	108	;'l'
  5200  00E29B  65                 	db	101	;'e'
  5201  00E29C  61                 	db	97	;'a'
  5202  00E29D  72                 	db	114	;'r'
  5203  00E29E  73                 	db	115	;'s'
  5204  00E29F  20                 	db	32
  5205  00E2A0  74                 	db	116	;'t'
  5206  00E2A1  68                 	db	104	;'h'
  5207  00E2A2  65                 	db	101	;'e'
  5208  00E2A3  20                 	db	32
  5209  00E2A4  63                 	db	99	;'c'
  5210  00E2A5  6F                 	db	111	;'o'
  5211  00E2A6  6D                 	db	109	;'m'
  5212  00E2A7  6D                 	db	109	;'m'
  5213  00E2A8  75                 	db	117	;'u'
  5214  00E2A9  6E                 	db	110	;'n'
  5215  00E2AA  69                 	db	105	;'i'
  5216  00E2AB  63                 	db	99	;'c'
  5217  00E2AC  61                 	db	97	;'a'
  5218  00E2AD  74                 	db	116	;'t'
  5219  00E2AE  69                 	db	105	;'i'
  5220  00E2AF  6F                 	db	111	;'o'
  5221  00E2B0  6E                 	db	110	;'n'
  5222  00E2B1  73                 	db	115	;'s'
  5223  00E2B2  20                 	db	32
  5224  00E2B3  65                 	db	101	;'e'
  5225  00E2B4  72                 	db	114	;'r'
  5226  00E2B5  72                 	db	114	;'r'
  5227  00E2B6  6F                 	db	111	;'o'
  5228  00E2B7  72                 	db	114	;'r'
  5229  00E2B8  0A                 	db	10
  5230  00E2B9  0D                 	db	13
  5231  00E2BA  20                 	db	32
  5232  00E2BB  20                 	db	32
  5233  00E2BC  20                 	db	32
  5234  00E2BD  43                 	db	67	;'C'
  5235  00E2BE  6C                 	db	108	;'l'
  5236  00E2BF  65                 	db	101	;'e'
  5237  00E2C0  61                 	db	97	;'a'
  5238  00E2C1  72                 	db	114	;'r'
  5239  00E2C2  20                 	db	32
  5240  00E2C3  4D                 	db	77	;'M'
  5241  00E2C4  61                 	db	97	;'a'
  5242  00E2C5  78                 	db	120	;'x'
  5243  00E2C6  20                 	db	32
  5244  00E2C7  56                 	db	86	;'V'
  5245  00E2C8  61                 	db	97	;'a'
  5246  00E2C9  6C                 	db	108	;'l'
  5247  00E2CA  75                 	db	117	;'u'
  5248  00E2CB  65                 	db	101	;'e'
  5249  00E2CC  73                 	db	115	;'s'
  5250  00E2CD  3A                 	db	58	;':'
  5251  00E2CE  20                 	db	32
  5252  00E2CF  45                 	db	69	;'E'
  5253  00E2D0  72                 	db	114	;'r'
  5254  00E2D1  61                 	db	97	;'a'
  5255  00E2D2  73                 	db	115	;'s'
  5256  00E2D3  65                 	db	101	;'e'
  5257  00E2D4  73                 	db	115	;'s'
  5258  00E2D5  20                 	db	32
  5259  00E2D6  6D                 	db	109	;'m'
  5260  00E2D7  61                 	db	97	;'a'
  5261  00E2D8  78                 	db	120	;'x'
  5262  00E2D9  69                 	db	105	;'i'
  5263  00E2DA  6D                 	db	109	;'m'
  5264  00E2DB  75                 	db	117	;'u'
  5265  00E2DC  6D                 	db	109	;'m'
  5266  00E2DD  20                 	db	32
  5267  00E2DE  72                 	db	114	;'r'
  5268  00E2DF  65                 	db	101	;'e'
  5269  00E2E0  63                 	db	99	;'c'
  5270  00E2E1  6F                 	db	111	;'o'
  5271  00E2E2  72                 	db	114	;'r'
  5272  00E2E3  64                 	db	100	;'d'
  5273  00E2E4  65                 	db	101	;'e'
  5274  00E2E5  64                 	db	100	;'d'
  5275  00E2E6  20                 	db	32
  5276  00E2E7  76                 	db	118	;'v'
  5277  00E2E8  61                 	db	97	;'a'
  5278  00E2E9  6C                 	db	108	;'l'
  5279  00E2EA  75                 	db	117	;'u'
  5280  00E2EB  65                 	db	101	;'e'
  5281  00E2EC  73                 	db	115	;'s'
  5282  00E2ED  20                 	db	32
  5283  00E2EE  66                 	db	102	;'f'
  5284  00E2EF  72                 	db	114	;'r'
  5285  00E2F0  6F                 	db	111	;'o'
  5286  00E2F1  6D                 	db	109	;'m'
  5287  00E2F2  20                 	db	32
  5288  00E2F3  45                 	db	69	;'E'
  5289  00E2F4  45                 	db	69	;'E'
  5290  00E2F5  50                 	db	80	;'P'
  5291  00E2F6  52                 	db	82	;'R'
  5292  00E2F7  4F                 	db	79	;'O'
  5293  00E2F8  4D                 	db	77	;'M'
  5294  00E2F9  0A                 	db	10
  5295  00E2FA  0D                 	db	13
  5296  00E2FB  20                 	db	32
  5297  00E2FC  20                 	db	32
  5298  00E2FD  20                 	db	32
  5299  00E2FE  48                 	db	72	;'H'
  5300  00E2FF  65                 	db	101	;'e'
  5301  00E300  6C                 	db	108	;'l'
  5302  00E301  70                 	db	112	;'p'
  5303  00E302  3A                 	db	58	;':'
  5304  00E303  20                 	db	32
  5305  00E304  54                 	db	84	;'T'
  5306  00E305  68                 	db	104	;'h'
  5307  00E306  69                 	db	105	;'i'
  5308  00E307  73                 	db	115	;'s'
  5309  00E308  20                 	db	32
  5310  00E309  6D                 	db	109	;'m'
  5311  00E30A  65                 	db	101	;'e'
  5312  00E30B  73                 	db	115	;'s'
  5313  00E30C  73                 	db	115	;'s'
  5314  00E30D  61                 	db	97	;'a'
  5315  00E30E  67                 	db	103	;'g'
  5316  00E30F  65                 	db	101	;'e'
  5317  00E310  2C                 	db	44
  5318  00E311  20                 	db	32
  5319  00E312  6C                 	db	108	;'l'
  5320  00E313  69                 	db	105	;'i'
  5321  00E314  73                 	db	115	;'s'
  5322  00E315  74                 	db	116	;'t'
  5323  00E316  73                 	db	115	;'s'
  5324  00E317  20                 	db	32
  5325  00E318  73                 	db	115	;'s'
  5326  00E319  75                 	db	117	;'u'
  5327  00E31A  70                 	db	112	;'p'
  5328  00E31B  70                 	db	112	;'p'
  5329  00E31C  6F                 	db	111	;'o'
  5330  00E31D  72                 	db	114	;'r'
  5331  00E31E  74                 	db	116	;'t'
  5332  00E31F  65                 	db	101	;'e'
  5333  00E320  64                 	db	100	;'d'
  5334  00E321  20                 	db	32
  5335  00E322  63                 	db	99	;'c'
  5336  00E323  6F                 	db	111	;'o'
  5337  00E324  6D                 	db	109	;'m'
  5338  00E325  6D                 	db	109	;'m'
  5339  00E326  61                 	db	97	;'a'
  5340  00E327  6E                 	db	110	;'n'
  5341  00E328  64                 	db	100	;'d'
  5342  00E329  73                 	db	115	;'s'
  5343  00E32A  0A                 	db	10
  5344  00E32B  0D                 	db	13
  5345  00E32C  0A                 	db	10
  5346  00E32D  0D                 	db	13
  5347  00E32E  00                 	db	0
  5348  00E32F                     STR_155:
  5349  00E32F  4C                 	db	76	;'L'
  5350  00E330  69                 	db	105	;'i'
  5351  00E331  73                 	db	115	;'s'
  5352  00E332  74                 	db	116	;'t'
  5353  00E333  20                 	db	32
  5354  00E334  6F                 	db	111	;'o'
  5355  00E335  66                 	db	102	;'f'
  5356  00E336  20                 	db	32
  5357  00E337  73                 	db	115	;'s'
  5358  00E338  75                 	db	117	;'u'
  5359  00E339  70                 	db	112	;'p'
  5360  00E33A  70                 	db	112	;'p'
  5361  00E33B  6F                 	db	111	;'o'
  5362  00E33C  72                 	db	114	;'r'
  5363  00E33D  74                 	db	116	;'t'
  5364  00E33E  65                 	db	101	;'e'
  5365  00E33F  64                 	db	100	;'d'
  5366  00E340  20                 	db	32
  5367  00E341  50                 	db	80	;'P'
  5368  00E342  72                 	db	114	;'r'
  5369  00E343  69                 	db	105	;'i'
  5370  00E344  6D                 	db	109	;'m'
  5371  00E345  61                 	db	97	;'a'
  5372  00E346  72                 	db	114	;'r'
  5373  00E347  79                 	db	121	;'y'
  5374  00E348  20                 	db	32
  5375  00E349  4D                 	db	77	;'M'
  5376  00E34A  65                 	db	101	;'e'
  5377  00E34B  61                 	db	97	;'a'
  5378  00E34C  73                 	db	115	;'s'
  5379  00E34D  75                 	db	117	;'u'
  5380  00E34E  72                 	db	114	;'r'
  5381  00E34F  65                 	db	101	;'e'
  5382  00E350  6D                 	db	109	;'m'
  5383  00E351  65                 	db	101	;'e'
  5384  00E352  6E                 	db	110	;'n'
  5385  00E353  74                 	db	116	;'t'
  5386  00E354  20                 	db	32
  5387  00E355  43                 	db	67	;'C'
  5388  00E356  6F                 	db	111	;'o'
  5389  00E357  6D                 	db	109	;'m'
  5390  00E358  6D                 	db	109	;'m'
  5391  00E359  61                 	db	97	;'a'
  5392  00E35A  6E                 	db	110	;'n'
  5393  00E35B  64                 	db	100	;'d'
  5394  00E35C  73                 	db	115	;'s'
  5395  00E35D  3A                 	db	58	;':'
  5396  00E35E  0A                 	db	10
  5397  00E35F  0D                 	db	13
  5398  00E360  20                 	db	32
  5399  00E361  20                 	db	32
  5400  00E362  20                 	db	32
  5401  00E363  4D                 	db	77	;'M'
  5402  00E364  65                 	db	101	;'e'
  5403  00E365  61                 	db	97	;'a'
  5404  00E366  73                 	db	115	;'s'
  5405  00E367  75                 	db	117	;'u'
  5406  00E368  72                 	db	114	;'r'
  5407  00E369  65                 	db	101	;'e'
  5408  00E36A  20                 	db	32
  5409  00E36B  44                 	db	68	;'D'
  5410  00E36C  65                 	db	101	;'e'
  5411  00E36D  74                 	db	116	;'t'
  5412  00E36E  65                 	db	101	;'e'
  5413  00E36F  63                 	db	99	;'c'
  5414  00E370  74                 	db	116	;'t'
  5415  00E371  65                 	db	101	;'e'
  5416  00E372  64                 	db	100	;'d'
  5417  00E373  20                 	db	32
  5418  00E374  43                 	db	67	;'C'
  5419  00E375  75                 	db	117	;'u'
  5420  00E376  72                 	db	114	;'r'
  5421  00E377  72                 	db	114	;'r'
  5422  00E378  65                 	db	101	;'e'
  5423  00E379  6E                 	db	110	;'n'
  5424  00E37A  74                 	db	116	;'t'
  5425  00E37B  3F                 	db	63	;'?'
  5426  00E37C  3A                 	db	58	;':'
  5427  00E37D  20                 	db	32
  5428  00E37E  52                 	db	82	;'R'
  5429  00E37F  65                 	db	101	;'e'
  5430  00E380  74                 	db	116	;'t'
  5431  00E381  75                 	db	117	;'u'
  5432  00E382  72                 	db	114	;'r'
  5433  00E383  6E                 	db	110	;'n'
  5434  00E384  73                 	db	115	;'s'
  5435  00E385  20                 	db	32
  5436  00E386  6D                 	db	109	;'m'
  5437  00E387  65                 	db	101	;'e'
  5438  00E388  61                 	db	97	;'a'
  5439  00E389  73                 	db	115	;'s'
  5440  00E38A  75                 	db	117	;'u'
  5441  00E38B  72                 	db	114	;'r'
  5442  00E38C  65                 	db	101	;'e'
  5443  00E38D  64                 	db	100	;'d'
  5444  00E38E  20                 	db	32
  5445  00E38F  6F                 	db	111	;'o'
  5446  00E390  75                 	db	117	;'u'
  5447  00E391  74                 	db	116	;'t'
  5448  00E392  70                 	db	112	;'p'
  5449  00E393  75                 	db	117	;'u'
  5450  00E394  74                 	db	116	;'t'
  5451  00E395  20                 	db	32
  5452  00E396  63                 	db	99	;'c'
  5453  00E397  75                 	db	117	;'u'
  5454  00E398  72                 	db	114	;'r'
  5455  00E399  72                 	db	114	;'r'
  5456  00E39A  65                 	db	101	;'e'
  5457  00E39B  6E                 	db	110	;'n'
  5458  00E39C  74                 	db	116	;'t'
  5459  00E39D  20                 	db	32
  5460  00E39E  69                 	db	105	;'i'
  5461  00E39F  6E                 	db	110	;'n'
  5462  00E3A0  20                 	db	32
  5463  00E3A1  61                 	db	97	;'a'
  5464  00E3A2  6D                 	db	109	;'m'
  5465  00E3A3  70                 	db	112	;'p'
  5466  00E3A4  73                 	db	115	;'s'
  5467  00E3A5  20                 	db	32
  5468  00E3A6  61                 	db	97	;'a'
  5469  00E3A7  73                 	db	115	;'s'
  5470  00E3A8  20                 	db	32
  5471  00E3A9  73                 	db	115	;'s'
  5472  00E3AA  65                 	db	101	;'e'
  5473  00E3AB  65                 	db	101	;'e'
  5474  00E3AC  6E                 	db	110	;'n'
  5475  00E3AD  20                 	db	32
  5476  00E3AE  62                 	db	98	;'b'
  5477  00E3AF  79                 	db	121	;'y'
  5478  00E3B0  20                 	db	32
  5479  00E3B1  41                 	db	65	;'A'
  5480  00E3B2  44                 	db	68	;'D'
  5481  00E3B3  43                 	db	67	;'C'
  5482  00E3B4  0A                 	db	10
  5483  00E3B5  0D                 	db	13
  5484  00E3B6  20                 	db	32
  5485  00E3B7  20                 	db	32
  5486  00E3B8  20                 	db	32
  5487  00E3B9  4D                 	db	77	;'M'
  5488  00E3BA  65                 	db	101	;'e'
  5489  00E3BB  61                 	db	97	;'a'
  5490  00E3BC  73                 	db	115	;'s'
  5491  00E3BD  75                 	db	117	;'u'
  5492  00E3BE  72                 	db	114	;'r'
  5493  00E3BF  65                 	db	101	;'e'
  5494  00E3C0  20                 	db	32
  5495  00E3C1  52                 	db	82	;'R'
  5496  00E3C2  4D                 	db	77	;'M'
  5497  00E3C3  53                 	db	83	;'S'
  5498  00E3C4  20                 	db	32
  5499  00E3C5  43                 	db	67	;'C'
  5500  00E3C6  75                 	db	117	;'u'
  5501  00E3C7  72                 	db	114	;'r'
  5502  00E3C8  72                 	db	114	;'r'
  5503  00E3C9  65                 	db	101	;'e'
  5504  00E3CA  6E                 	db	110	;'n'
  5505  00E3CB  74                 	db	116	;'t'
  5506  00E3CC  3F                 	db	63	;'?'
  5507  00E3CD  3A                 	db	58	;':'
  5508  00E3CE  20                 	db	32
  5509  00E3CF  52                 	db	82	;'R'
  5510  00E3D0  65                 	db	101	;'e'
  5511  00E3D1  74                 	db	116	;'t'
  5512  00E3D2  75                 	db	117	;'u'
  5513  00E3D3  72                 	db	114	;'r'
  5514  00E3D4  6E                 	db	110	;'n'
  5515  00E3D5  73                 	db	115	;'s'
  5516  00E3D6  20                 	db	32
  5517  00E3D7  74                 	db	116	;'t'
  5518  00E3D8  68                 	db	104	;'h'
  5519  00E3D9  65                 	db	101	;'e'
  5520  00E3DA  20                 	db	32
  5521  00E3DB  63                 	db	99	;'c'
  5522  00E3DC  61                 	db	97	;'a'
  5523  00E3DD  6C                 	db	108	;'l'
  5524  00E3DE  63                 	db	99	;'c'
  5525  00E3DF  75                 	db	117	;'u'
  5526  00E3E0  6C                 	db	108	;'l'
  5527  00E3E1  61                 	db	97	;'a'
  5528  00E3E2  74                 	db	116	;'t'
  5529  00E3E3  65                 	db	101	;'e'
  5530  00E3E4  64                 	db	100	;'d'
  5531  00E3E5  20                 	db	32
  5532  00E3E6  52                 	db	82	;'R'
  5533  00E3E7  4D                 	db	77	;'M'
  5534  00E3E8  53                 	db	83	;'S'
  5535  00E3E9  20                 	db	32
  5536  00E3EA  6F                 	db	111	;'o'
  5537  00E3EB  75                 	db	117	;'u'
  5538  00E3EC  74                 	db	116	;'t'
  5539  00E3ED  70                 	db	112	;'p'
  5540  00E3EE  75                 	db	117	;'u'
  5541  00E3EF  74                 	db	116	;'t'
  5542  00E3F0  20                 	db	32
  5543  00E3F1  63                 	db	99	;'c'
  5544  00E3F2  75                 	db	117	;'u'
  5545  00E3F3  72                 	db	114	;'r'
  5546  00E3F4  72                 	db	114	;'r'
  5547  00E3F5  65                 	db	101	;'e'
  5548  00E3F6  6E                 	db	110	;'n'
  5549  00E3F7  74                 	db	116	;'t'
  5550  00E3F8  20                 	db	32
  5551  00E3F9  66                 	db	102	;'f'
  5552  00E3FA  72                 	db	114	;'r'
  5553  00E3FB  6F                 	db	111	;'o'
  5554  00E3FC  6D                 	db	109	;'m'
  5555  00E3FD  20                 	db	32
  5556  00E3FE  6D                 	db	109	;'m'
  5557  00E3FF  65                 	db	101	;'e'
  5558  00E400  61                 	db	97	;'a'
  5559  00E401  73                 	db	115	;'s'
  5560  00E402  75                 	db	117	;'u'
  5561  00E403  72                 	db	114	;'r'
  5562  00E404  65                 	db	101	;'e'
  5563  00E405  6D                 	db	109	;'m'
  5564  00E406  65                 	db	101	;'e'
  5565  00E407  6E                 	db	110	;'n'
  5566  00E408  74                 	db	116	;'t'
  5567  00E409  73                 	db	115	;'s'
  5568  00E40A  20                 	db	32
  5569  00E40B  61                 	db	97	;'a'
  5570  00E40C  6E                 	db	110	;'n'
  5571  00E40D  64                 	db	100	;'d'
  5572  00E40E  20                 	db	32
  5573  00E40F  54                 	db	84	;'T'
  5574  00E410  52                 	db	82	;'R'
  5575  00E411  49                 	db	73	;'I'
  5576  00E412  41                 	db	65	;'A'
  5577  00E413  43                 	db	67	;'C'
  5578  00E414  20                 	db	32
  5579  00E415  66                 	db	102	;'f'
  5580  00E416  69                 	db	105	;'i'
  5581  00E417  72                 	db	114	;'r'
  5582  00E418  69                 	db	105	;'i'
  5583  00E419  6E                 	db	110	;'n'
  5584  00E41A  67                 	db	103	;'g'
  5585  00E41B  20                 	db	32
  5586  00E41C  61                 	db	97	;'a'
  5587  00E41D  6E                 	db	110	;'n'
  5588  00E41E  67                 	db	103	;'g'
  5589  00E41F  6C                 	db	108	;'l'
  5590  00E420  65                 	db	101	;'e'
  5591  00E421  0A                 	db	10
  5592  00E422  0D                 	db	13
  5593  00E423  20                 	db	32
  5594  00E424  20                 	db	32
  5595  00E425  20                 	db	32
  5596  00E426  4D                 	db	77	;'M'
  5597  00E427  65                 	db	101	;'e'
  5598  00E428  61                 	db	97	;'a'
  5599  00E429  73                 	db	115	;'s'
  5600  00E42A  75                 	db	117	;'u'
  5601  00E42B  72                 	db	114	;'r'
  5602  00E42C  65                 	db	101	;'e'
  5603  00E42D  20                 	db	32
  5604  00E42E  52                 	db	82	;'R'
  5605  00E42F  4D                 	db	77	;'M'
  5606  00E430  53                 	db	83	;'S'
  5607  00E431  20                 	db	32
  5608  00E432  56                 	db	86	;'V'
  5609  00E433  6F                 	db	111	;'o'
  5610  00E434  6C                 	db	108	;'l'
  5611  00E435  74                 	db	116	;'t'
  5612  00E436  61                 	db	97	;'a'
  5613  00E437  67                 	db	103	;'g'
  5614  00E438  65                 	db	101	;'e'
  5615  00E439  3F                 	db	63	;'?'
  5616  00E43A  3A                 	db	58	;':'
  5617  00E43B  20                 	db	32
  5618  00E43C  52                 	db	82	;'R'
  5619  00E43D  65                 	db	101	;'e'
  5620  00E43E  74                 	db	116	;'t'
  5621  00E43F  75                 	db	117	;'u'
  5622  00E440  72                 	db	114	;'r'
  5623  00E441  6E                 	db	110	;'n'
  5624  00E442  73                 	db	115	;'s'
  5625  00E443  20                 	db	32
  5626  00E444  74                 	db	116	;'t'
  5627  00E445  68                 	db	104	;'h'
  5628  00E446  65                 	db	101	;'e'
  5629  00E447  20                 	db	32
  5630  00E448  63                 	db	99	;'c'
  5631  00E449  61                 	db	97	;'a'
  5632  00E44A  6C                 	db	108	;'l'
  5633  00E44B  63                 	db	99	;'c'
  5634  00E44C  75                 	db	117	;'u'
  5635  00E44D  6C                 	db	108	;'l'
  5636  00E44E  61                 	db	97	;'a'
  5637  00E44F  74                 	db	116	;'t'
  5638  00E450  65                 	db	101	;'e'
  5639  00E451  64                 	db	100	;'d'
  5640  00E452  20                 	db	32
  5641  00E453  52                 	db	82	;'R'
  5642  00E454  4D                 	db	77	;'M'
  5643  00E455  53                 	db	83	;'S'
  5644  00E456  20                 	db	32
  5645  00E457  6F                 	db	111	;'o'
  5646  00E458  75                 	db	117	;'u'
  5647  00E459  74                 	db	116	;'t'
  5648  00E45A  70                 	db	112	;'p'
  5649  00E45B  75                 	db	117	;'u'
  5650  00E45C  74                 	db	116	;'t'
  5651  00E45D  20                 	db	32
  5652  00E45E  76                 	db	118	;'v'
  5653  00E45F  6F                 	db	111	;'o'
  5654  00E460  6C                 	db	108	;'l'
  5655  00E461  74                 	db	116	;'t'
  5656  00E462  61                 	db	97	;'a'
  5657  00E463  67                 	db	103	;'g'
  5658  00E464  65                 	db	101	;'e'
  5659  00E465  20                 	db	32
  5660  00E466  66                 	db	102	;'f'
  5661  00E467  72                 	db	114	;'r'
  5662  00E468  6F                 	db	111	;'o'
  5663  00E469  6D                 	db	109	;'m'
  5664  00E46A  20                 	db	32
  5665  00E46B  54                 	db	84	;'T'
  5666  00E46C  52                 	db	82	;'R'
  5667  00E46D  49                 	db	73	;'I'
  5668  00E46E  41                 	db	65	;'A'
  5669  00E46F  43                 	db	67	;'C'
  5670  00E470  20                 	db	32
  5671  00E471  66                 	db	102	;'f'
  5672  00E472  69                 	db	105	;'i'
  5673  00E473  72                 	db	114	;'r'
  5674  00E474  69                 	db	105	;'i'
  5675  00E475  6E                 	db	110	;'n'
  5676  00E476  67                 	db	103	;'g'
  5677  00E477  20                 	db	32
  5678  00E478  61                 	db	97	;'a'
  5679  00E479  6E                 	db	110	;'n'
  5680  00E47A  67                 	db	103	;'g'
  5681  00E47B  6C                 	db	108	;'l'
  5682  00E47C  65                 	db	101	;'e'
  5683  00E47D  0A                 	db	10
  5684  00E47E  0D                 	db	13
  5685  00E47F  20                 	db	32
  5686  00E480  20                 	db	32
  5687  00E481  20                 	db	32
  5688  00E482  4D                 	db	77	;'M'
  5689  00E483  65                 	db	101	;'e'
  5690  00E484  61                 	db	97	;'a'
  5691  00E485  73                 	db	115	;'s'
  5692  00E486  75                 	db	117	;'u'
  5693  00E487  72                 	db	114	;'r'
  5694  00E488  65                 	db	101	;'e'
  5695  00E489  20                 	db	32
  5696  00E48A  50                 	db	80	;'P'
  5697  00E48B  6F                 	db	111	;'o'
  5698  00E48C  77                 	db	119	;'w'
  5699  00E48D  65                 	db	101	;'e'
  5700  00E48E  72                 	db	114	;'r'
  5701  00E48F  3F                 	db	63	;'?'
  5702  00E490  3A                 	db	58	;':'
  5703  00E491  20                 	db	32
  5704  00E492  52                 	db	82	;'R'
  5705  00E493  65                 	db	101	;'e'
  5706  00E494  74                 	db	116	;'t'
  5707  00E495  75                 	db	117	;'u'
  5708  00E496  72                 	db	114	;'r'
  5709  00E497  6E                 	db	110	;'n'
  5710  00E498  73                 	db	115	;'s'
  5711  00E499  20                 	db	32
  5712  00E49A  74                 	db	116	;'t'
  5713  00E49B  68                 	db	104	;'h'
  5714  00E49C  65                 	db	101	;'e'
  5715  00E49D  20                 	db	32
  5716  00E49E  63                 	db	99	;'c'
  5717  00E49F  61                 	db	97	;'a'
  5718  00E4A0  6C                 	db	108	;'l'
  5719  00E4A1  63                 	db	99	;'c'
  5720  00E4A2  75                 	db	117	;'u'
  5721  00E4A3  6C                 	db	108	;'l'
  5722  00E4A4  61                 	db	97	;'a'
  5723  00E4A5  74                 	db	116	;'t'
  5724  00E4A6  65                 	db	101	;'e'
  5725  00E4A7  64                 	db	100	;'d'
  5726  00E4A8  20                 	db	32
  5727  00E4A9  6F                 	db	111	;'o'
  5728  00E4AA  75                 	db	117	;'u'
  5729  00E4AB  74                 	db	116	;'t'
  5730  00E4AC  70                 	db	112	;'p'
  5731  00E4AD  75                 	db	117	;'u'
  5732  00E4AE  74                 	db	116	;'t'
  5733  00E4AF  20                 	db	32
  5734  00E4B0  70                 	db	112	;'p'
  5735  00E4B1  6F                 	db	111	;'o'
  5736  00E4B2  77                 	db	119	;'w'
  5737  00E4B3  65                 	db	101	;'e'
  5738  00E4B4  72                 	db	114	;'r'
  5739  00E4B5  20                 	db	32
  5740  00E4B6  69                 	db	105	;'i'
  5741  00E4B7  6E                 	db	110	;'n'
  5742  00E4B8  20                 	db	32
  5743  00E4B9  57                 	db	87	;'W'
  5744  00E4BA  61                 	db	97	;'a'
  5745  00E4BB  74                 	db	116	;'t'
  5746  00E4BC  74                 	db	116	;'t'
  5747  00E4BD  73                 	db	115	;'s'
  5748  00E4BE  0A                 	db	10
  5749  00E4BF  0D                 	db	13
  5750  00E4C0  20                 	db	32
  5751  00E4C1  20                 	db	32
  5752  00E4C2  20                 	db	32
  5753  00E4C3  4D                 	db	77	;'M'
  5754  00E4C4  65                 	db	101	;'e'
  5755  00E4C5  61                 	db	97	;'a'
  5756  00E4C6  73                 	db	115	;'s'
  5757  00E4C7  75                 	db	117	;'u'
  5758  00E4C8  72                 	db	114	;'r'
  5759  00E4C9  65                 	db	101	;'e'
  5760  00E4CA  20                 	db	32
  5761  00E4CB  45                 	db	69	;'E'
  5762  00E4CC  6E                 	db	110	;'n'
  5763  00E4CD  65                 	db	101	;'e'
  5764  00E4CE  72                 	db	114	;'r'
  5765  00E4CF  67                 	db	103	;'g'
  5766  00E4D0  79                 	db	121	;'y'
  5767  00E4D1  3F                 	db	63	;'?'
  5768  00E4D2  3A                 	db	58	;':'
  5769  00E4D3  20                 	db	32
  5770  00E4D4  52                 	db	82	;'R'
  5771  00E4D5  65                 	db	101	;'e'
  5772  00E4D6  74                 	db	116	;'t'
  5773  00E4D7  75                 	db	117	;'u'
  5774  00E4D8  72                 	db	114	;'r'
  5775  00E4D9  6E                 	db	110	;'n'
  5776  00E4DA  73                 	db	115	;'s'
  5777  00E4DB  20                 	db	32
  5778  00E4DC  6D                 	db	109	;'m'
  5779  00E4DD  65                 	db	101	;'e'
  5780  00E4DE  61                 	db	97	;'a'
  5781  00E4DF  73                 	db	115	;'s'
  5782  00E4E0  75                 	db	117	;'u'
  5783  00E4E1  72                 	db	114	;'r'
  5784  00E4E2  65                 	db	101	;'e'
  5785  00E4E3  64                 	db	100	;'d'
  5786  00E4E4  20                 	db	32
  5787  00E4E5  65                 	db	101	;'e'
  5788  00E4E6  6E                 	db	110	;'n'
  5789  00E4E7  65                 	db	101	;'e'
  5790  00E4E8  72                 	db	114	;'r'
  5791  00E4E9  67                 	db	103	;'g'
  5792  00E4EA  79                 	db	121	;'y'
  5793  00E4EB  20                 	db	32
  5794  00E4EC  73                 	db	115	;'s'
  5795  00E4ED  69                 	db	105	;'i'
  5796  00E4EE  6E                 	db	110	;'n'
  5797  00E4EF  63                 	db	99	;'c'
  5798  00E4F0  65                 	db	101	;'e'
  5799  00E4F1  20                 	db	32
  5800  00E4F2  6D                 	db	109	;'m'
  5801  00E4F3  65                 	db	101	;'e'
  5802  00E4F4  61                 	db	97	;'a'
  5803  00E4F5  73                 	db	115	;'s'
  5804  00E4F6  75                 	db	117	;'u'
  5805  00E4F7  72                 	db	114	;'r'
  5806  00E4F8  65                 	db	101	;'e'
  5807  00E4F9  6D                 	db	109	;'m'
  5808  00E4FA  65                 	db	101	;'e'
  5809  00E4FB  6E                 	db	110	;'n'
  5810  00E4FC  74                 	db	116	;'t'
  5811  00E4FD  20                 	db	32
  5812  00E4FE  72                 	db	114	;'r'
  5813  00E4FF  65                 	db	101	;'e'
  5814  00E500  73                 	db	115	;'s'
  5815  00E501  65                 	db	101	;'e'
  5816  00E502  74                 	db	116	;'t'
  5817  00E503  20                 	db	32
  5818  00E504  69                 	db	105	;'i'
  5819  00E505  6E                 	db	110	;'n'
  5820  00E506  20                 	db	32
  5821  00E507  57                 	db	87	;'W'
  5822  00E508  61                 	db	97	;'a'
  5823  00E509  74                 	db	116	;'t'
  5824  00E50A  74                 	db	116	;'t'
  5825  00E50B  20                 	db	32
  5826  00E50C  48                 	db	72	;'H'
  5827  00E50D  6F                 	db	111	;'o'
  5828  00E50E  75                 	db	117	;'u'
  5829  00E50F  72                 	db	114	;'r'
  5830  00E510  73                 	db	115	;'s'
  5831  00E511  0A                 	db	10
  5832  00E512  0D                 	db	13
  5833  00E513  20                 	db	32
  5834  00E514  20                 	db	32
  5835  00E515  20                 	db	32
  5836  00E516  43                 	db	67	;'C'
  5837  00E517  6C                 	db	108	;'l'
  5838  00E518  65                 	db	101	;'e'
  5839  00E519  61                 	db	97	;'a'
  5840  00E51A  72                 	db	114	;'r'
  5841  00E51B  20                 	db	32
  5842  00E51C  45                 	db	69	;'E'
  5843  00E51D  6E                 	db	110	;'n'
  5844  00E51E  65                 	db	101	;'e'
  5845  00E51F  72                 	db	114	;'r'
  5846  00E520  67                 	db	103	;'g'
  5847  00E521  79                 	db	121	;'y'
  5848  00E522  3A                 	db	58	;':'
  5849  00E523  20                 	db	32
  5850  00E524  52                 	db	82	;'R'
  5851  00E525  65                 	db	101	;'e'
  5852  00E526  73                 	db	115	;'s'
  5853  00E527  65                 	db	101	;'e'
  5854  00E528  74                 	db	116	;'t'
  5855  00E529  73                 	db	115	;'s'
  5856  00E52A  20                 	db	32
  5857  00E52B  74                 	db	116	;'t'
  5858  00E52C  68                 	db	104	;'h'
  5859  00E52D  65                 	db	101	;'e'
  5860  00E52E  20                 	db	32
  5861  00E52F  6D                 	db	109	;'m'
  5862  00E530  65                 	db	101	;'e'
  5863  00E531  61                 	db	97	;'a'
  5864  00E532  73                 	db	115	;'s'
  5865  00E533  75                 	db	117	;'u'
  5866  00E534  72                 	db	114	;'r'
  5867  00E535  65                 	db	101	;'e'
  5868  00E536  64                 	db	100	;'d'
  5869  00E537  20                 	db	32
  5870  00E538  6F                 	db	111	;'o'
  5871  00E539  75                 	db	117	;'u'
  5872  00E53A  74                 	db	116	;'t'
  5873  00E53B  70                 	db	112	;'p'
  5874  00E53C  75                 	db	117	;'u'
  5875  00E53D  74                 	db	116	;'t'
  5876  00E53E  20                 	db	32
  5877  00E53F  65                 	db	101	;'e'
  5878  00E540  6E                 	db	110	;'n'
  5879  00E541  65                 	db	101	;'e'
  5880  00E542  72                 	db	114	;'r'
  5881  00E543  67                 	db	103	;'g'
  5882  00E544  79                 	db	121	;'y'
  5883  00E545  20                 	db	32
  5884  00E546  74                 	db	116	;'t'
  5885  00E547  6F                 	db	111	;'o'
  5886  00E548  20                 	db	32
  5887  00E549  7A                 	db	122	;'z'
  5888  00E54A  65                 	db	101	;'e'
  5889  00E54B  72                 	db	114	;'r'
  5890  00E54C  6F                 	db	111	;'o'
  5891  00E54D  0A                 	db	10
  5892  00E54E  0D                 	db	13
  5893  00E54F  20                 	db	32
  5894  00E550  20                 	db	32
  5895  00E551  20                 	db	32
  5896  00E552  4C                 	db	76	;'L'
  5897  00E553  6F                 	db	111	;'o'
  5898  00E554  61                 	db	97	;'a'
  5899  00E555  64                 	db	100	;'d'
  5900  00E556  20                 	db	32
  5901  00E557  4F                 	db	79	;'O'
  5902  00E558  6E                 	db	110	;'n'
  5903  00E559  20                 	db	32
  5904  00E55A  54                 	db	84	;'T'
  5905  00E55B  69                 	db	105	;'i'
  5906  00E55C  6D                 	db	109	;'m'
  5907  00E55D  65                 	db	101	;'e'
  5908  00E55E  3F                 	db	63	;'?'
  5909  00E55F  3A                 	db	58	;':'
  5910  00E560  20                 	db	32
  5911  00E561  52                 	db	82	;'R'
  5912  00E562  65                 	db	101	;'e'
  5913  00E563  74                 	db	116	;'t'
  5914  00E564  75                 	db	117	;'u'
  5915  00E565  72                 	db	114	;'r'
  5916  00E566  6E                 	db	110	;'n'
  5917  00E567  73                 	db	115	;'s'
  5918  00E568  20                 	db	32
  5919  00E569  6C                 	db	108	;'l'
  5920  00E56A  6F                 	db	111	;'o'
  5921  00E56B  61                 	db	97	;'a'
  5922  00E56C  64                 	db	100	;'d'
  5923  00E56D  20                 	db	32
  5924  00E56E  6F                 	db	111	;'o'
  5925  00E56F  6E                 	db	110	;'n'
  5926  00E570  20                 	db	32
  5927  00E571  74                 	db	116	;'t'
  5928  00E572  69                 	db	105	;'i'
  5929  00E573  6D                 	db	109	;'m'
  5930  00E574  65                 	db	101	;'e'
  5931  00E575  20                 	db	32
  5932  00E576  73                 	db	115	;'s'
  5933  00E577  69                 	db	105	;'i'
  5934  00E578  6E                 	db	110	;'n'
  5935  00E579  63                 	db	99	;'c'
  5936  00E57A  65                 	db	101	;'e'
  5937  00E57B  20                 	db	32
  5938  00E57C  6C                 	db	108	;'l'
  5939  00E57D  61                 	db	97	;'a'
  5940  00E57E  73                 	db	115	;'s'
  5941  00E57F  74                 	db	116	;'t'
  5942  00E580  20                 	db	32
  5943  00E581  64                 	db	100	;'d'
  5944  00E582  65                 	db	101	;'e'
  5945  00E583  76                 	db	118	;'v'
  5946  00E584  69                 	db	105	;'i'
  5947  00E585  63                 	db	99	;'c'
  5948  00E586  65                 	db	101	;'e'
  5949  00E587  20                 	db	32
  5950  00E588  72                 	db	114	;'r'
  5951  00E589  65                 	db	101	;'e'
  5952  00E58A  73                 	db	115	;'s'
  5953  00E58B  65                 	db	101	;'e'
  5954  00E58C  74                 	db	116	;'t'
  5955  00E58D  20                 	db	32
  5956  00E58E  69                 	db	105	;'i'
  5957  00E58F  6E                 	db	110	;'n'
  5958  00E590  20                 	db	32
  5959  00E591  73                 	db	115	;'s'
  5960  00E592  65                 	db	101	;'e'
  5961  00E593  63                 	db	99	;'c'
  5962  00E594  6F                 	db	111	;'o'
  5963  00E595  6E                 	db	110	;'n'
  5964  00E596  64                 	db	100	;'d'
  5965  00E597  73                 	db	115	;'s'
  5966  00E598  0A                 	db	10
  5967  00E599  0D                 	db	13
  5968  00E59A  20                 	db	32
  5969  00E59B  20                 	db	32
  5970  00E59C  20                 	db	32
  5971  00E59D  4D                 	db	77	;'M'
  5972  00E59E  61                 	db	97	;'a'
  5973  00E59F  78                 	db	120	;'x'
  5974  00E5A0  20                 	db	32
  5975  00E5A1  52                 	db	82	;'R'
  5976  00E5A2  4D                 	db	77	;'M'
  5977  00E5A3  53                 	db	83	;'S'
  5978  00E5A4  20                 	db	32
  5979  00E5A5  43                 	db	67	;'C'
  5980  00E5A6  75                 	db	117	;'u'
  5981  00E5A7  72                 	db	114	;'r'
  5982  00E5A8  72                 	db	114	;'r'
  5983  00E5A9  65                 	db	101	;'e'
  5984  00E5AA  6E                 	db	110	;'n'
  5985  00E5AB  74                 	db	116	;'t'
  5986  00E5AC  3F                 	db	63	;'?'
  5987  00E5AD  3A                 	db	58	;':'
  5988  00E5AE  20                 	db	32
  5989  00E5AF  50                 	db	80	;'P'
  5990  00E5B0  72                 	db	114	;'r'
  5991  00E5B1  69                 	db	105	;'i'
  5992  00E5B2  6E                 	db	110	;'n'
  5993  00E5B3  74                 	db	116	;'t'
  5994  00E5B4  73                 	db	115	;'s'
  5995  00E5B5  20                 	db	32
  5996  00E5B6  74                 	db	116	;'t'
  5997  00E5B7  68                 	db	104	;'h'
  5998  00E5B8  65                 	db	101	;'e'
  5999  00E5B9  20                 	db	32
  6000  00E5BA  6D                 	db	109	;'m'
  6001  00E5BB  61                 	db	97	;'a'
  6002  00E5BC  78                 	db	120	;'x'
  6003  00E5BD  69                 	db	105	;'i'
  6004  00E5BE  6D                 	db	109	;'m'
  6005  00E5BF  75                 	db	117	;'u'
  6006  00E5C0  6D                 	db	109	;'m'
  6007  00E5C1  20                 	db	32
  6008  00E5C2  72                 	db	114	;'r'
  6009  00E5C3  65                 	db	101	;'e'
  6010  00E5C4  63                 	db	99	;'c'
  6011  00E5C5  6F                 	db	111	;'o'
  6012  00E5C6  72                 	db	114	;'r'
  6013  00E5C7  64                 	db	100	;'d'
  6014  00E5C8  65                 	db	101	;'e'
  6015  00E5C9  64                 	db	100	;'d'
  6016  00E5CA  20                 	db	32
  6017  00E5CB  52                 	db	82	;'R'
  6018  00E5CC  4D                 	db	77	;'M'
  6019  00E5CD  53                 	db	83	;'S'
  6020  00E5CE  20                 	db	32
  6021  00E5CF  6F                 	db	111	;'o'
  6022  00E5D0  75                 	db	117	;'u'
  6023  00E5D1  74                 	db	116	;'t'
  6024  00E5D2  70                 	db	112	;'p'
  6025  00E5D3  75                 	db	117	;'u'
  6026  00E5D4  74                 	db	116	;'t'
  6027  00E5D5  20                 	db	32
  6028  00E5D6  63                 	db	99	;'c'
  6029  00E5D7  75                 	db	117	;'u'
  6030  00E5D8  72                 	db	114	;'r'
  6031  00E5D9  72                 	db	114	;'r'
  6032  00E5DA  65                 	db	101	;'e'
  6033  00E5DB  6E                 	db	110	;'n'
  6034  00E5DC  74                 	db	116	;'t'
  6035  00E5DD  0A                 	db	10
  6036  00E5DE  0D                 	db	13
  6037  00E5DF  20                 	db	32
  6038  00E5E0  20                 	db	32
  6039  00E5E1  20                 	db	32
  6040  00E5E2  4D                 	db	77	;'M'
  6041  00E5E3  61                 	db	97	;'a'
  6042  00E5E4  78                 	db	120	;'x'
  6043  00E5E5  20                 	db	32
  6044  00E5E6  50                 	db	80	;'P'
  6045  00E5E7  6F                 	db	111	;'o'
  6046  00E5E8  77                 	db	119	;'w'
  6047  00E5E9  65                 	db	101	;'e'
  6048  00E5EA  72                 	db	114	;'r'
  6049  00E5EB  3F                 	db	63	;'?'
  6050  00E5EC  3A                 	db	58	;':'
  6051  00E5ED  20                 	db	32
  6052  00E5EE  50                 	db	80	;'P'
  6053  00E5EF  72                 	db	114	;'r'
  6054  00E5F0  69                 	db	105	;'i'
  6055  00E5F1  6E                 	db	110	;'n'
  6056  00E5F2  74                 	db	116	;'t'
  6057  00E5F3  73                 	db	115	;'s'
  6058  00E5F4  20                 	db	32
  6059  00E5F5  74                 	db	116	;'t'
  6060  00E5F6  68                 	db	104	;'h'
  6061  00E5F7  65                 	db	101	;'e'
  6062  00E5F8  20                 	db	32
  6063  00E5F9  6D                 	db	109	;'m'
  6064  00E5FA  61                 	db	97	;'a'
  6065  00E5FB  78                 	db	120	;'x'
  6066  00E5FC  69                 	db	105	;'i'
  6067  00E5FD  6D                 	db	109	;'m'
  6068  00E5FE  75                 	db	117	;'u'
  6069  00E5FF  6D                 	db	109	;'m'
  6070  00E600  20                 	db	32
  6071  00E601  72                 	db	114	;'r'
  6072  00E602  65                 	db	101	;'e'
  6073  00E603  63                 	db	99	;'c'
  6074  00E604  6F                 	db	111	;'o'
  6075  00E605  72                 	db	114	;'r'
  6076  00E606  64                 	db	100	;'d'
  6077  00E607  65                 	db	101	;'e'
  6078  00E608  64                 	db	100	;'d'
  6079  00E609  20                 	db	32
  6080  00E60A  6F                 	db	111	;'o'
  6081  00E60B  75                 	db	117	;'u'
  6082  00E60C  74                 	db	116	;'t'
  6083  00E60D  70                 	db	112	;'p'
  6084  00E60E  75                 	db	117	;'u'
  6085  00E60F  74                 	db	116	;'t'
  6086  00E610  20                 	db	32
  6087  00E611  70                 	db	112	;'p'
  6088  00E612  6F                 	db	111	;'o'
  6089  00E613  77                 	db	119	;'w'
  6090  00E614  65                 	db	101	;'e'
  6091  00E615  72                 	db	114	;'r'
  6092  00E616  0A                 	db	10
  6093  00E617  0D                 	db	13
  6094  00E618  0A                 	db	10
  6095  00E619  0D                 	db	13
  6096  00E61A  00                 	db	0
  6097  00E61B                     STR_153:
  6098  00E61B  4C                 	db	76	;'L'
  6099  00E61C  69                 	db	105	;'i'
  6100  00E61D  73                 	db	115	;'s'
  6101  00E61E  74                 	db	116	;'t'
  6102  00E61F  20                 	db	32
  6103  00E620  6F                 	db	111	;'o'
  6104  00E621  66                 	db	102	;'f'
  6105  00E622  20                 	db	32
  6106  00E623  73                 	db	115	;'s'
  6107  00E624  75                 	db	117	;'u'
  6108  00E625  70                 	db	112	;'p'
  6109  00E626  70                 	db	112	;'p'
  6110  00E627  6F                 	db	111	;'o'
  6111  00E628  72                 	db	114	;'r'
  6112  00E629  74                 	db	116	;'t'
  6113  00E62A  65                 	db	101	;'e'
  6114  00E62B  64                 	db	100	;'d'
  6115  00E62C  20                 	db	32
  6116  00E62D  44                 	db	68	;'D'
  6117  00E62E  65                 	db	101	;'e'
  6118  00E62F  76                 	db	118	;'v'
  6119  00E630  69                 	db	105	;'i'
  6120  00E631  63                 	db	99	;'c'
  6121  00E632  65                 	db	101	;'e'
  6122  00E633  20                 	db	32
  6123  00E634  4D                 	db	77	;'M'
  6124  00E635  65                 	db	101	;'e'
  6125  00E636  61                 	db	97	;'a'
  6126  00E637  73                 	db	115	;'s'
  6127  00E638  75                 	db	117	;'u'
  6128  00E639  72                 	db	114	;'r'
  6129  00E63A  65                 	db	101	;'e'
  6130  00E63B  6D                 	db	109	;'m'
  6131  00E63C  65                 	db	101	;'e'
  6132  00E63D  6E                 	db	110	;'n'
  6133  00E63E  74                 	db	116	;'t'
  6134  00E63F  20                 	db	32
  6135  00E640  43                 	db	67	;'C'
  6136  00E641  6F                 	db	111	;'o'
  6137  00E642  6D                 	db	109	;'m'
  6138  00E643  6D                 	db	109	;'m'
  6139  00E644  61                 	db	97	;'a'
  6140  00E645  6E                 	db	110	;'n'
  6141  00E646  64                 	db	100	;'d'
  6142  00E647  73                 	db	115	;'s'
  6143  00E648  3A                 	db	58	;':'
  6144  00E649  0A                 	db	10
  6145  00E64A  0D                 	db	13
  6146  00E64B  20                 	db	32
  6147  00E64C  20                 	db	32
  6148  00E64D  20                 	db	32
  6149  00E64E  4D                 	db	77	;'M'
  6150  00E64F  65                 	db	101	;'e'
  6151  00E650  61                 	db	97	;'a'
  6152  00E651  73                 	db	115	;'s'
  6153  00E652  75                 	db	117	;'u'
  6154  00E653  72                 	db	114	;'r'
  6155  00E654  65                 	db	101	;'e'
  6156  00E655  20                 	db	32
  6157  00E656  50                 	db	80	;'P'
  6158  00E657  4F                 	db	79	;'O'
  6159  00E658  53                 	db	83	;'S'
  6160  00E659  33                 	db	51	;'3'
  6161  00E65A  50                 	db	80	;'P'
  6162  00E65B  33                 	db	51	;'3'
  6163  00E65C  3F                 	db	63	;'?'
  6164  00E65D  3A                 	db	58	;':'
  6165  00E65E  20                 	db	32
  6166  00E65F  52                 	db	82	;'R'
  6167  00E660  65                 	db	101	;'e'
  6168  00E661  74                 	db	116	;'t'
  6169  00E662  75                 	db	117	;'u'
  6170  00E663  72                 	db	114	;'r'
  6171  00E664  6E                 	db	110	;'n'
  6172  00E665  73                 	db	115	;'s'
  6173  00E666  20                 	db	32
  6174  00E667  2B                 	db	43
  6175  00E668  33                 	db	51	;'3'
  6176  00E669  2E                 	db	46
  6177  00E66A  33                 	db	51	;'3'
  6178  00E66B  56                 	db	86	;'V'
  6179  00E66C  20                 	db	32
  6180  00E66D  41                 	db	65	;'A'
  6181  00E66E  44                 	db	68	;'D'
  6182  00E66F  43                 	db	67	;'C'
  6183  00E670  20                 	db	32
  6184  00E671  43                 	db	67	;'C'
  6185  00E672  6F                 	db	111	;'o'
  6186  00E673  6E                 	db	110	;'n'
  6187  00E674  76                 	db	118	;'v'
  6188  00E675  65                 	db	101	;'e'
  6189  00E676  72                 	db	114	;'r'
  6190  00E677  73                 	db	115	;'s'
  6191  00E678  69                 	db	105	;'i'
  6192  00E679  6F                 	db	111	;'o'
  6193  00E67A  6E                 	db	110	;'n'
  6194  00E67B  20                 	db	32
  6195  00E67C  69                 	db	105	;'i'
  6196  00E67D  6E                 	db	110	;'n'
  6197  00E67E  20                 	db	32
  6198  00E67F  76                 	db	118	;'v'
  6199  00E680  6F                 	db	111	;'o'
  6200  00E681  6C                 	db	108	;'l'
  6201  00E682  74                 	db	116	;'t'
  6202  00E683  73                 	db	115	;'s'
  6203  00E684  0A                 	db	10
  6204  00E685  0D                 	db	13
  6205  00E686  20                 	db	32
  6206  00E687  20                 	db	32
  6207  00E688  20                 	db	32
  6208  00E689  4D                 	db	77	;'M'
  6209  00E68A  65                 	db	101	;'e'
  6210  00E68B  61                 	db	97	;'a'
  6211  00E68C  73                 	db	115	;'s'
  6212  00E68D  75                 	db	117	;'u'
  6213  00E68E  72                 	db	114	;'r'
  6214  00E68F  65                 	db	101	;'e'
  6215  00E690  20                 	db	32
  6216  00E691  50                 	db	80	;'P'
  6217  00E692  4F                 	db	79	;'O'
  6218  00E693  53                 	db	83	;'S'
  6219  00E694  31                 	db	49	;'1'
  6220  00E695  32                 	db	50	;'2'
  6221  00E696  3F                 	db	63	;'?'
  6222  00E697  3A                 	db	58	;':'
  6223  00E698  20                 	db	32
  6224  00E699  52                 	db	82	;'R'
  6225  00E69A  65                 	db	101	;'e'
  6226  00E69B  74                 	db	116	;'t'
  6227  00E69C  75                 	db	117	;'u'
  6228  00E69D  72                 	db	114	;'r'
  6229  00E69E  6E                 	db	110	;'n'
  6230  00E69F  73                 	db	115	;'s'
  6231  00E6A0  20                 	db	32
  6232  00E6A1  2B                 	db	43
  6233  00E6A2  31                 	db	49	;'1'
  6234  00E6A3  32                 	db	50	;'2'
  6235  00E6A4  56                 	db	86	;'V'
  6236  00E6A5  20                 	db	32
  6237  00E6A6  41                 	db	65	;'A'
  6238  00E6A7  44                 	db	68	;'D'
  6239  00E6A8  43                 	db	67	;'C'
  6240  00E6A9  20                 	db	32
  6241  00E6AA  43                 	db	67	;'C'
  6242  00E6AB  6F                 	db	111	;'o'
  6243  00E6AC  6E                 	db	110	;'n'
  6244  00E6AD  76                 	db	118	;'v'
  6245  00E6AE  65                 	db	101	;'e'
  6246  00E6AF  72                 	db	114	;'r'
  6247  00E6B0  73                 	db	115	;'s'
  6248  00E6B1  69                 	db	105	;'i'
  6249  00E6B2  6F                 	db	111	;'o'
  6250  00E6B3  6E                 	db	110	;'n'
  6251  00E6B4  20                 	db	32
  6252  00E6B5  69                 	db	105	;'i'
  6253  00E6B6  6E                 	db	110	;'n'
  6254  00E6B7  20                 	db	32
  6255  00E6B8  76                 	db	118	;'v'
  6256  00E6B9  6F                 	db	111	;'o'
  6257  00E6BA  6C                 	db	108	;'l'
  6258  00E6BB  74                 	db	116	;'t'
  6259  00E6BC  73                 	db	115	;'s'
  6260  00E6BD  0A                 	db	10
  6261  00E6BE  0D                 	db	13
  6262  00E6BF  20                 	db	32
  6263  00E6C0  20                 	db	32
  6264  00E6C1  20                 	db	32
  6265  00E6C2  4D                 	db	77	;'M'
  6266  00E6C3  65                 	db	101	;'e'
  6267  00E6C4  61                 	db	97	;'a'
  6268  00E6C5  73                 	db	115	;'s'
  6269  00E6C6  75                 	db	117	;'u'
  6270  00E6C7  72                 	db	114	;'r'
  6271  00E6C8  65                 	db	101	;'e'
  6272  00E6C9  20                 	db	32
  6273  00E6CA  44                 	db	68	;'D'
  6274  00E6CB  69                 	db	105	;'i'
  6275  00E6CC  65                 	db	101	;'e'
  6276  00E6CD  20                 	db	32
  6277  00E6CE  54                 	db	84	;'T'
  6278  00E6CF  65                 	db	101	;'e'
  6279  00E6D0  6D                 	db	109	;'m'
  6280  00E6D1  70                 	db	112	;'p'
  6281  00E6D2  3F                 	db	63	;'?'
  6282  00E6D3  3A                 	db	58	;':'
  6283  00E6D4  20                 	db	32
  6284  00E6D5  52                 	db	82	;'R'
  6285  00E6D6  65                 	db	101	;'e'
  6286  00E6D7  74                 	db	116	;'t'
  6287  00E6D8  75                 	db	117	;'u'
  6288  00E6D9  72                 	db	114	;'r'
  6289  00E6DA  6E                 	db	110	;'n'
  6290  00E6DB  73                 	db	115	;'s'
  6291  00E6DC  20                 	db	32
  6292  00E6DD  74                 	db	116	;'t'
  6293  00E6DE  68                 	db	104	;'h'
  6294  00E6DF  65                 	db	101	;'e'
  6295  00E6E0  20                 	db	32
  6296  00E6E1  6D                 	db	109	;'m'
  6297  00E6E2  69                 	db	105	;'i'
  6298  00E6E3  63                 	db	99	;'c'
  6299  00E6E4  72                 	db	114	;'r'
  6300  00E6E5  6F                 	db	111	;'o'
  6301  00E6E6  63                 	db	99	;'c'
  6302  00E6E7  6F                 	db	111	;'o'
  6303  00E6E8  6E                 	db	110	;'n'
  6304  00E6E9  74                 	db	116	;'t'
  6305  00E6EA  72                 	db	114	;'r'
  6306  00E6EB  6F                 	db	111	;'o'
  6307  00E6EC  6C                 	db	108	;'l'
  6308  00E6ED  6C                 	db	108	;'l'
  6309  00E6EE  65                 	db	101	;'e'
  6310  00E6EF  72                 	db	114	;'r'
  6311  00E6F0  20                 	db	32
  6312  00E6F1  64                 	db	100	;'d'
  6313  00E6F2  69                 	db	105	;'i'
  6314  00E6F3  65                 	db	101	;'e'
  6315  00E6F4  20                 	db	32
  6316  00E6F5  74                 	db	116	;'t'
  6317  00E6F6  65                 	db	101	;'e'
  6318  00E6F7  6D                 	db	109	;'m'
  6319  00E6F8  70                 	db	112	;'p'
  6320  00E6F9  65                 	db	101	;'e'
  6321  00E6FA  72                 	db	114	;'r'
  6322  00E6FB  61                 	db	97	;'a'
  6323  00E6FC  74                 	db	116	;'t'
  6324  00E6FD  75                 	db	117	;'u'
  6325  00E6FE  72                 	db	114	;'r'
  6326  00E6FF  65                 	db	101	;'e'
  6327  00E700  20                 	db	32
  6328  00E701  69                 	db	105	;'i'
  6329  00E702  6E                 	db	110	;'n'
  6330  00E703  20                 	db	32
  6331  00E704  64                 	db	100	;'d'
  6332  00E705  65                 	db	101	;'e'
  6333  00E706  67                 	db	103	;'g'
  6334  00E707  72                 	db	114	;'r'
  6335  00E708  65                 	db	101	;'e'
  6336  00E709  65                 	db	101	;'e'
  6337  00E70A  73                 	db	115	;'s'
  6338  00E70B  20                 	db	32
  6339  00E70C  43                 	db	67	;'C'
  6340  00E70D  0A                 	db	10
  6341  00E70E  0D                 	db	13
  6342  00E70F  20                 	db	32
  6343  00E710  20                 	db	32
  6344  00E711  20                 	db	32
  6345  00E712  4D                 	db	77	;'M'
  6346  00E713  65                 	db	101	;'e'
  6347  00E714  61                 	db	97	;'a'
  6348  00E715  73                 	db	115	;'s'
  6349  00E716  75                 	db	117	;'u'
  6350  00E717  72                 	db	114	;'r'
  6351  00E718  65                 	db	101	;'e'
  6352  00E719  20                 	db	32
  6353  00E71A  46                 	db	70	;'F'
  6354  00E71B  56                 	db	86	;'V'
  6355  00E71C  52                 	db	82	;'R'
  6356  00E71D  3F                 	db	63	;'?'
  6357  00E71E  3A                 	db	58	;':'
  6358  00E71F  20                 	db	32
  6359  00E720  52                 	db	82	;'R'
  6360  00E721  65                 	db	101	;'e'
  6361  00E722  74                 	db	116	;'t'
  6362  00E723  75                 	db	117	;'u'
  6363  00E724  72                 	db	114	;'r'
  6364  00E725  6E                 	db	110	;'n'
  6365  00E726  73                 	db	115	;'s'
  6366  00E727  20                 	db	32
  6367  00E728  74                 	db	116	;'t'
  6368  00E729  68                 	db	104	;'h'
  6369  00E72A  65                 	db	101	;'e'
  6370  00E72B  20                 	db	32
  6371  00E72C  69                 	db	105	;'i'
  6372  00E72D  6E                 	db	110	;'n'
  6373  00E72E  74                 	db	116	;'t'
  6374  00E72F  65                 	db	101	;'e'
  6375  00E730  72                 	db	114	;'r'
  6376  00E731  6E                 	db	110	;'n'
  6377  00E732  61                 	db	97	;'a'
  6378  00E733  6C                 	db	108	;'l'
  6379  00E734  20                 	db	32
  6380  00E735  66                 	db	102	;'f'
  6381  00E736  69                 	db	105	;'i'
  6382  00E737  78                 	db	120	;'x'
  6383  00E738  65                 	db	101	;'e'
  6384  00E739  64                 	db	100	;'d'
  6385  00E73A  20                 	db	32
  6386  00E73B  76                 	db	118	;'v'
  6387  00E73C  6F                 	db	111	;'o'
  6388  00E73D  6C                 	db	108	;'l'
  6389  00E73E  74                 	db	116	;'t'
  6390  00E73F  61                 	db	97	;'a'
  6391  00E740  67                 	db	103	;'g'
  6392  00E741  65                 	db	101	;'e'
  6393  00E742  20                 	db	32
  6394  00E743  72                 	db	114	;'r'
  6395  00E744  65                 	db	101	;'e'
  6396  00E745  66                 	db	102	;'f'
  6397  00E746  65                 	db	101	;'e'
  6398  00E747  72                 	db	114	;'r'
  6399  00E748  65                 	db	101	;'e'
  6400  00E749  6E                 	db	110	;'n'
  6401  00E74A  63                 	db	99	;'c'
  6402  00E74B  65                 	db	101	;'e'
  6403  00E74C  20                 	db	32
  6404  00E74D  62                 	db	98	;'b'
  6405  00E74E  75                 	db	117	;'u'
  6406  00E74F  66                 	db	102	;'f'
  6407  00E750  66                 	db	102	;'f'
  6408  00E751  65                 	db	101	;'e'
  6409  00E752  72                 	db	114	;'r'
  6410  00E753  20                 	db	32
  6411  00E754  31                 	db	49	;'1'
  6412  00E755  20                 	db	32
  6413  00E756  6F                 	db	111	;'o'
  6414  00E757  75                 	db	117	;'u'
  6415  00E758  74                 	db	116	;'t'
  6416  00E759  70                 	db	112	;'p'
  6417  00E75A  75                 	db	117	;'u'
  6418  00E75B  74                 	db	116	;'t'
  6419  00E75C  20                 	db	32
  6420  00E75D  69                 	db	105	;'i'
  6421  00E75E  6E                 	db	110	;'n'
  6422  00E75F  20                 	db	32
  6423  00E760  76                 	db	118	;'v'
  6424  00E761  6F                 	db	111	;'o'
  6425  00E762  6C                 	db	108	;'l'
  6426  00E763  74                 	db	116	;'t'
  6427  00E764  73                 	db	115	;'s'
  6428  00E765  0A                 	db	10
  6429  00E766  0D                 	db	13
  6430  00E767  20                 	db	32
  6431  00E768  20                 	db	32
  6432  00E769  20                 	db	32
  6433  00E76A  4D                 	db	77	;'M'
  6434  00E76B  65                 	db	101	;'e'
  6435  00E76C  61                 	db	97	;'a'
  6436  00E76D  73                 	db	115	;'s'
  6437  00E76E  75                 	db	117	;'u'
  6438  00E76F  72                 	db	114	;'r'
  6439  00E770  65                 	db	101	;'e'
  6440  00E771  20                 	db	32
  6441  00E772  41                 	db	65	;'A'
  6442  00E773  56                 	db	86	;'V'
  6443  00E774  53                 	db	83	;'S'
  6444  00E775  53                 	db	83	;'S'
  6445  00E776  3F                 	db	63	;'?'
  6446  00E777  3A                 	db	58	;':'
  6447  00E778  20                 	db	32
  6448  00E779  52                 	db	82	;'R'
  6449  00E77A  65                 	db	101	;'e'
  6450  00E77B  74                 	db	116	;'t'
  6451  00E77C  75                 	db	117	;'u'
  6452  00E77D  72                 	db	114	;'r'
  6453  00E77E  6E                 	db	110	;'n'
  6454  00E77F  73                 	db	115	;'s'
  6455  00E780  20                 	db	32
  6456  00E781  74                 	db	116	;'t'
  6457  00E782  68                 	db	104	;'h'
  6458  00E783  65                 	db	101	;'e'
  6459  00E784  20                 	db	32
  6460  00E785  6D                 	db	109	;'m'
  6461  00E786  65                 	db	101	;'e'
  6462  00E787  61                 	db	97	;'a'
  6463  00E788  73                 	db	115	;'s'
  6464  00E789  75                 	db	117	;'u'
  6465  00E78A  72                 	db	114	;'r'
  6466  00E78B  65                 	db	101	;'e'
  6467  00E78C  64                 	db	100	;'d'
  6468  00E78D  20                 	db	32
  6469  00E78E  76                 	db	118	;'v'
  6470  00E78F  61                 	db	97	;'a'
  6471  00E790  6C                 	db	108	;'l'
  6472  00E791  75                 	db	117	;'u'
  6473  00E792  65                 	db	101	;'e'
  6474  00E793  20                 	db	32
  6475  00E794  6F                 	db	111	;'o'
  6476  00E795  66                 	db	102	;'f'
  6477  00E796  20                 	db	32
  6478  00E797  41                 	db	65	;'A'
  6479  00E798  6E                 	db	110	;'n'
  6480  00E799  61                 	db	97	;'a'
  6481  00E79A  6C                 	db	108	;'l'
  6482  00E79B  6F                 	db	111	;'o'
  6483  00E79C  67                 	db	103	;'g'
  6484  00E79D  20                 	db	32
  6485  00E79E  56                 	db	86	;'V'
  6486  00E79F  53                 	db	83	;'S'
  6487  00E7A0  53                 	db	83	;'S'
  6488  00E7A1  20                 	db	32
  6489  00E7A2  69                 	db	105	;'i'
  6490  00E7A3  6E                 	db	110	;'n'
  6491  00E7A4  20                 	db	32
  6492  00E7A5  76                 	db	118	;'v'
  6493  00E7A6  6F                 	db	111	;'o'
  6494  00E7A7  6C                 	db	108	;'l'
  6495  00E7A8  74                 	db	116	;'t'
  6496  00E7A9  73                 	db	115	;'s'
  6497  00E7AA  0A                 	db	10
  6498  00E7AB  0D                 	db	13
  6499  00E7AC  20                 	db	32
  6500  00E7AD  20                 	db	32
  6501  00E7AE  20                 	db	32
  6502  00E7AF  4D                 	db	77	;'M'
  6503  00E7B0  61                 	db	97	;'a'
  6504  00E7B1  78                 	db	120	;'x'
  6505  00E7B2  20                 	db	32
  6506  00E7B3  50                 	db	80	;'P'
  6507  00E7B4  4F                 	db	79	;'O'
  6508  00E7B5  53                 	db	83	;'S'
  6509  00E7B6  33                 	db	51	;'3'
  6510  00E7B7  50                 	db	80	;'P'
  6511  00E7B8  33                 	db	51	;'3'
  6512  00E7B9  20                 	db	32
  6513  00E7BA  56                 	db	86	;'V'
  6514  00E7BB  6F                 	db	111	;'o'
  6515  00E7BC  6C                 	db	108	;'l'
  6516  00E7BD  74                 	db	116	;'t'
  6517  00E7BE  61                 	db	97	;'a'
  6518  00E7BF  67                 	db	103	;'g'
  6519  00E7C0  65                 	db	101	;'e'
  6520  00E7C1  3F                 	db	63	;'?'
  6521  00E7C2  3A                 	db	58	;':'
  6522  00E7C3  20                 	db	32
  6523  00E7C4  52                 	db	82	;'R'
  6524  00E7C5  65                 	db	101	;'e'
  6525  00E7C6  74                 	db	116	;'t'
  6526  00E7C7  75                 	db	117	;'u'
  6527  00E7C8  72                 	db	114	;'r'
  6528  00E7C9  6E                 	db	110	;'n'
  6529  00E7CA  73                 	db	115	;'s'
  6530  00E7CB  20                 	db	32
  6531  00E7CC  74                 	db	116	;'t'
  6532  00E7CD  68                 	db	104	;'h'
  6533  00E7CE  65                 	db	101	;'e'
  6534  00E7CF  20                 	db	32
  6535  00E7D0  6D                 	db	109	;'m'
  6536  00E7D1  61                 	db	97	;'a'
  6537  00E7D2  78                 	db	120	;'x'
  6538  00E7D3  69                 	db	105	;'i'
  6539  00E7D4  6D                 	db	109	;'m'
  6540  00E7D5  75                 	db	117	;'u'
  6541  00E7D6  6D                 	db	109	;'m'
  6542  00E7D7  20                 	db	32
  6543  00E7D8  72                 	db	114	;'r'
  6544  00E7D9  65                 	db	101	;'e'
  6545  00E7DA  63                 	db	99	;'c'
  6546  00E7DB  6F                 	db	111	;'o'
  6547  00E7DC  72                 	db	114	;'r'
  6548  00E7DD  64                 	db	100	;'d'
  6549  00E7DE  65                 	db	101	;'e'
  6550  00E7DF  64                 	db	100	;'d'
  6551  00E7E0  20                 	db	32
  6552  00E7E1  2B                 	db	43
  6553  00E7E2  33                 	db	51	;'3'
  6554  00E7E3  2E                 	db	46
  6555  00E7E4  33                 	db	51	;'3'
  6556  00E7E5  56                 	db	86	;'V'
  6557  00E7E6  20                 	db	32
  6558  00E7E7  52                 	db	82	;'R'
  6559  00E7E8  61                 	db	97	;'a'
  6560  00E7E9  69                 	db	105	;'i'
  6561  00E7EA  6C                 	db	108	;'l'
  6562  00E7EB  20                 	db	32
  6563  00E7EC  56                 	db	86	;'V'
  6564  00E7ED  6F                 	db	111	;'o'
  6565  00E7EE  6C                 	db	108	;'l'
  6566  00E7EF  74                 	db	116	;'t'
  6567  00E7F0  61                 	db	97	;'a'
  6568  00E7F1  67                 	db	103	;'g'
  6569  00E7F2  65                 	db	101	;'e'
  6570  00E7F3  20                 	db	32
  6571  00E7F4  6D                 	db	109	;'m'
  6572  00E7F5  65                 	db	101	;'e'
  6573  00E7F6  61                 	db	97	;'a'
  6574  00E7F7  73                 	db	115	;'s'
  6575  00E7F8  75                 	db	117	;'u'
  6576  00E7F9  72                 	db	114	;'r'
  6577  00E7FA  65                 	db	101	;'e'
  6578  00E7FB  64                 	db	100	;'d'
  6579  00E7FC  0A                 	db	10
  6580  00E7FD  0D                 	db	13
  6581  00E7FE  20                 	db	32
  6582  00E7FF  20                 	db	32
  6583  00E800  20                 	db	32
  6584  00E801  4D                 	db	77	;'M'
  6585  00E802  61                 	db	97	;'a'
  6586  00E803  78                 	db	120	;'x'
  6587  00E804  20                 	db	32
  6588  00E805  50                 	db	80	;'P'
  6589  00E806  4F                 	db	79	;'O'
  6590  00E807  53                 	db	83	;'S'
  6591  00E808  31                 	db	49	;'1'
  6592  00E809  32                 	db	50	;'2'
  6593  00E80A  20                 	db	32
  6594  00E80B  56                 	db	86	;'V'
  6595  00E80C  6F                 	db	111	;'o'
  6596  00E80D  6C                 	db	108	;'l'
  6597  00E80E  74                 	db	116	;'t'
  6598  00E80F  61                 	db	97	;'a'
  6599  00E810  67                 	db	103	;'g'
  6600  00E811  65                 	db	101	;'e'
  6601  00E812  3F                 	db	63	;'?'
  6602  00E813  3A                 	db	58	;':'
  6603  00E814  20                 	db	32
  6604  00E815  52                 	db	82	;'R'
  6605  00E816  65                 	db	101	;'e'
  6606  00E817  74                 	db	116	;'t'
  6607  00E818  75                 	db	117	;'u'
  6608  00E819  72                 	db	114	;'r'
  6609  00E81A  6E                 	db	110	;'n'
  6610  00E81B  73                 	db	115	;'s'
  6611  00E81C  20                 	db	32
  6612  00E81D  74                 	db	116	;'t'
  6613  00E81E  68                 	db	104	;'h'
  6614  00E81F  65                 	db	101	;'e'
  6615  00E820  20                 	db	32
  6616  00E821  6D                 	db	109	;'m'
  6617  00E822  61                 	db	97	;'a'
  6618  00E823  78                 	db	120	;'x'
  6619  00E824  69                 	db	105	;'i'
  6620  00E825  6D                 	db	109	;'m'
  6621  00E826  75                 	db	117	;'u'
  6622  00E827  6D                 	db	109	;'m'
  6623  00E828  20                 	db	32
  6624  00E829  72                 	db	114	;'r'
  6625  00E82A  65                 	db	101	;'e'
  6626  00E82B  63                 	db	99	;'c'
  6627  00E82C  6F                 	db	111	;'o'
  6628  00E82D  72                 	db	114	;'r'
  6629  00E82E  64                 	db	100	;'d'
  6630  00E82F  65                 	db	101	;'e'
  6631  00E830  64                 	db	100	;'d'
  6632  00E831  20                 	db	32
  6633  00E832  2B                 	db	43
  6634  00E833  31                 	db	49	;'1'
  6635  00E834  32                 	db	50	;'2'
  6636  00E835  56                 	db	86	;'V'
  6637  00E836  20                 	db	32
  6638  00E837  52                 	db	82	;'R'
  6639  00E838  61                 	db	97	;'a'
  6640  00E839  69                 	db	105	;'i'
  6641  00E83A  6C                 	db	108	;'l'
  6642  00E83B  20                 	db	32
  6643  00E83C  56                 	db	86	;'V'
  6644  00E83D  6F                 	db	111	;'o'
  6645  00E83E  6C                 	db	108	;'l'
  6646  00E83F  74                 	db	116	;'t'
  6647  00E840  61                 	db	97	;'a'
  6648  00E841  67                 	db	103	;'g'
  6649  00E842  65                 	db	101	;'e'
  6650  00E843  20                 	db	32
  6651  00E844  6D                 	db	109	;'m'
  6652  00E845  65                 	db	101	;'e'
  6653  00E846  61                 	db	97	;'a'
  6654  00E847  73                 	db	115	;'s'
  6655  00E848  75                 	db	117	;'u'
  6656  00E849  72                 	db	114	;'r'
  6657  00E84A  65                 	db	101	;'e'
  6658  00E84B  64                 	db	100	;'d'
  6659  00E84C  0A                 	db	10
  6660  00E84D  0D                 	db	13
  6661  00E84E  20                 	db	32
  6662  00E84F  20                 	db	32
  6663  00E850  20                 	db	32
  6664  00E851  4D                 	db	77	;'M'
  6665  00E852  61                 	db	97	;'a'
  6666  00E853  78                 	db	120	;'x'
  6667  00E854  20                 	db	32
  6668  00E855  44                 	db	68	;'D'
  6669  00E856  69                 	db	105	;'i'
  6670  00E857  65                 	db	101	;'e'
  6671  00E858  20                 	db	32
  6672  00E859  54                 	db	84	;'T'
  6673  00E85A  65                 	db	101	;'e'
  6674  00E85B  6D                 	db	109	;'m'
  6675  00E85C  70                 	db	112	;'p'
  6676  00E85D  3F                 	db	63	;'?'
  6677  00E85E  3A                 	db	58	;':'
  6678  00E85F  20                 	db	32
  6679  00E860  52                 	db	82	;'R'
  6680  00E861  65                 	db	101	;'e'
  6681  00E862  74                 	db	116	;'t'
  6682  00E863  75                 	db	117	;'u'
  6683  00E864  72                 	db	114	;'r'
  6684  00E865  6E                 	db	110	;'n'
  6685  00E866  73                 	db	115	;'s'
  6686  00E867  20                 	db	32
  6687  00E868  74                 	db	116	;'t'
  6688  00E869  68                 	db	104	;'h'
  6689  00E86A  65                 	db	101	;'e'
  6690  00E86B  20                 	db	32
  6691  00E86C  6D                 	db	109	;'m'
  6692  00E86D  61                 	db	97	;'a'
  6693  00E86E  78                 	db	120	;'x'
  6694  00E86F  69                 	db	105	;'i'
  6695  00E870  6D                 	db	109	;'m'
  6696  00E871  75                 	db	117	;'u'
  6697  00E872  6D                 	db	109	;'m'
  6698  00E873  20                 	db	32
  6699  00E874  72                 	db	114	;'r'
  6700  00E875  65                 	db	101	;'e'
  6701  00E876  63                 	db	99	;'c'
  6702  00E877  6F                 	db	111	;'o'
  6703  00E878  72                 	db	114	;'r'
  6704  00E879  64                 	db	100	;'d'
  6705  00E87A  65                 	db	101	;'e'
  6706  00E87B  64                 	db	100	;'d'
  6707  00E87C  20                 	db	32
  6708  00E87D  64                 	db	100	;'d'
  6709  00E87E  69                 	db	105	;'i'
  6710  00E87F  65                 	db	101	;'e'
  6711  00E880  20                 	db	32
  6712  00E881  74                 	db	116	;'t'
  6713  00E882  65                 	db	101	;'e'
  6714  00E883  6D                 	db	109	;'m'
  6715  00E884  70                 	db	112	;'p'
  6716  00E885  65                 	db	101	;'e'
  6717  00E886  72                 	db	114	;'r'
  6718  00E887  61                 	db	97	;'a'
  6719  00E888  74                 	db	116	;'t'
  6720  00E889  75                 	db	117	;'u'
  6721  00E88A  72                 	db	114	;'r'
  6722  00E88B  65                 	db	101	;'e'
  6723  00E88C  20                 	db	32
  6724  00E88D  6D                 	db	109	;'m'
  6725  00E88E  65                 	db	101	;'e'
  6726  00E88F  61                 	db	97	;'a'
  6727  00E890  73                 	db	115	;'s'
  6728  00E891  75                 	db	117	;'u'
  6729  00E892  72                 	db	114	;'r'
  6730  00E893  65                 	db	101	;'e'
  6731  00E894  64                 	db	100	;'d'
  6732  00E895  0A                 	db	10
  6733  00E896  0D                 	db	13
  6734  00E897  20                 	db	32
  6735  00E898  20                 	db	32
  6736  00E899  20                 	db	32
  6737  00E89A  4D                 	db	77	;'M'
  6738  00E89B  61                 	db	97	;'a'
  6739  00E89C  78                 	db	120	;'x'
  6740  00E89D  20                 	db	32
  6741  00E89E  46                 	db	70	;'F'
  6742  00E89F  56                 	db	86	;'V'
  6743  00E8A0  52                 	db	82	;'R'
  6744  00E8A1  20                 	db	32
  6745  00E8A2  56                 	db	86	;'V'
  6746  00E8A3  6F                 	db	111	;'o'
  6747  00E8A4  6C                 	db	108	;'l'
  6748  00E8A5  74                 	db	116	;'t'
  6749  00E8A6  61                 	db	97	;'a'
  6750  00E8A7  67                 	db	103	;'g'
  6751  00E8A8  65                 	db	101	;'e'
  6752  00E8A9  3F                 	db	63	;'?'
  6753  00E8AA  3A                 	db	58	;':'
  6754  00E8AB  20                 	db	32
  6755  00E8AC  52                 	db	82	;'R'
  6756  00E8AD  65                 	db	101	;'e'
  6757  00E8AE  74                 	db	116	;'t'
  6758  00E8AF  75                 	db	117	;'u'
  6759  00E8B0  72                 	db	114	;'r'
  6760  00E8B1  6E                 	db	110	;'n'
  6761  00E8B2  73                 	db	115	;'s'
  6762  00E8B3  20                 	db	32
  6763  00E8B4  74                 	db	116	;'t'
  6764  00E8B5  68                 	db	104	;'h'
  6765  00E8B6  65                 	db	101	;'e'
  6766  00E8B7  20                 	db	32
  6767  00E8B8  6D                 	db	109	;'m'
  6768  00E8B9  61                 	db	97	;'a'
  6769  00E8BA  78                 	db	120	;'x'
  6770  00E8BB  69                 	db	105	;'i'
  6771  00E8BC  6D                 	db	109	;'m'
  6772  00E8BD  75                 	db	117	;'u'
  6773  00E8BE  6D                 	db	109	;'m'
  6774  00E8BF  20                 	db	32
  6775  00E8C0  72                 	db	114	;'r'
  6776  00E8C1  65                 	db	101	;'e'
  6777  00E8C2  63                 	db	99	;'c'
  6778  00E8C3  6F                 	db	111	;'o'
  6779  00E8C4  72                 	db	114	;'r'
  6780  00E8C5  64                 	db	100	;'d'
  6781  00E8C6  65                 	db	101	;'e'
  6782  00E8C7  64                 	db	100	;'d'
  6783  00E8C8  20                 	db	32
  6784  00E8C9  46                 	db	70	;'F'
  6785  00E8CA  56                 	db	86	;'V'
  6786  00E8CB  52                 	db	82	;'R'
  6787  00E8CC  20                 	db	32
  6788  00E8CD  42                 	db	66	;'B'
  6789  00E8CE  75                 	db	117	;'u'
  6790  00E8CF  66                 	db	102	;'f'
  6791  00E8D0  66                 	db	102	;'f'
  6792  00E8D1  65                 	db	101	;'e'
  6793  00E8D2  72                 	db	114	;'r'
  6794  00E8D3  20                 	db	32
  6795  00E8D4  31                 	db	49	;'1'
  6796  00E8D5  20                 	db	32
  6797  00E8D6  56                 	db	86	;'V'
  6798  00E8D7  6F                 	db	111	;'o'
  6799  00E8D8  6C                 	db	108	;'l'
  6800  00E8D9  74                 	db	116	;'t'
  6801  00E8DA  61                 	db	97	;'a'
  6802  00E8DB  67                 	db	103	;'g'
  6803  00E8DC  65                 	db	101	;'e'
  6804  00E8DD  20                 	db	32
  6805  00E8DE  6D                 	db	109	;'m'
  6806  00E8DF  65                 	db	101	;'e'
  6807  00E8E0  61                 	db	97	;'a'
  6808  00E8E1  73                 	db	115	;'s'
  6809  00E8E2  75                 	db	117	;'u'
  6810  00E8E3  72                 	db	114	;'r'
  6811  00E8E4  65                 	db	101	;'e'
  6812  00E8E5  64                 	db	100	;'d'
  6813  00E8E6  0A                 	db	10
  6814  00E8E7  0D                 	db	13
  6815  00E8E8  0A                 	db	10
  6816  00E8E9  0D                 	db	13
  6817  00E8EA  00                 	db	0
  6818  00E8EB                     STR_157:
  6819  00E8EB  4C                 	db	76	;'L'
  6820  00E8EC  69                 	db	105	;'i'
  6821  00E8ED  73                 	db	115	;'s'
  6822  00E8EE  74                 	db	116	;'t'
  6823  00E8EF  20                 	db	32
  6824  00E8F0  6F                 	db	111	;'o'
  6825  00E8F1  66                 	db	102	;'f'
  6826  00E8F2  20                 	db	32
  6827  00E8F3  73                 	db	115	;'s'
  6828  00E8F4  75                 	db	117	;'u'
  6829  00E8F5  70                 	db	112	;'p'
  6830  00E8F6  70                 	db	112	;'p'
  6831  00E8F7  6F                 	db	111	;'o'
  6832  00E8F8  72                 	db	114	;'r'
  6833  00E8F9  74                 	db	116	;'t'
  6834  00E8FA  65                 	db	101	;'e'
  6835  00E8FB  64                 	db	100	;'d'
  6836  00E8FC  20                 	db	32
  6837  00E8FD  4F                 	db	79	;'O'
  6838  00E8FE  75                 	db	117	;'u'
  6839  00E8FF  74                 	db	116	;'t'
  6840  00E900  70                 	db	112	;'p'
  6841  00E901  75                 	db	117	;'u'
  6842  00E902  74                 	db	116	;'t'
  6843  00E903  20                 	db	32
  6844  00E904  43                 	db	67	;'C'
  6845  00E905  6F                 	db	111	;'o'
  6846  00E906  6E                 	db	110	;'n'
  6847  00E907  74                 	db	116	;'t'
  6848  00E908  72                 	db	114	;'r'
  6849  00E909  6F                 	db	111	;'o'
  6850  00E90A  6C                 	db	108	;'l'
  6851  00E90B  20                 	db	32
  6852  00E90C  43                 	db	67	;'C'
  6853  00E90D  6F                 	db	111	;'o'
  6854  00E90E  6D                 	db	109	;'m'
  6855  00E90F  6D                 	db	109	;'m'
  6856  00E910  61                 	db	97	;'a'
  6857  00E911  6E                 	db	110	;'n'
  6858  00E912  64                 	db	100	;'d'
  6859  00E913  73                 	db	115	;'s'
  6860  00E914  3A                 	db	58	;':'
  6861  00E915  0A                 	db	10
  6862  00E916  0D                 	db	13
  6863  00E917  20                 	db	32
  6864  00E918  20                 	db	32
  6865  00E919  20                 	db	32
  6866  00E91A  45                 	db	69	;'E'
  6867  00E91B  6E                 	db	110	;'n'
  6868  00E91C  61                 	db	97	;'a'
  6869  00E91D  62                 	db	98	;'b'
  6870  00E91E  6C                 	db	108	;'l'
  6871  00E91F  65                 	db	101	;'e'
  6872  00E920  20                 	db	32
  6873  00E921  44                 	db	68	;'D'
  6874  00E922  69                 	db	105	;'i'
  6875  00E923  6D                 	db	109	;'m'
  6876  00E924  6D                 	db	109	;'m'
  6877  00E925  69                 	db	105	;'i'
  6878  00E926  6E                 	db	110	;'n'
  6879  00E927  67                 	db	103	;'g'
  6880  00E928  3A                 	db	58	;':'
  6881  00E929  20                 	db	32
  6882  00E92A  45                 	db	69	;'E'
  6883  00E92B  6E                 	db	110	;'n'
  6884  00E92C  61                 	db	97	;'a'
  6885  00E92D  62                 	db	98	;'b'
  6886  00E92E  6C                 	db	108	;'l'
  6887  00E92F  65                 	db	101	;'e'
  6888  00E930  20                 	db	32
  6889  00E931  54                 	db	84	;'T'
  6890  00E932  52                 	db	82	;'R'
  6891  00E933  49                 	db	73	;'I'
  6892  00E934  41                 	db	65	;'A'
  6893  00E935  43                 	db	67	;'C'
  6894  00E936  20                 	db	32
  6895  00E937  6F                 	db	111	;'o'
  6896  00E938  75                 	db	117	;'u'
  6897  00E939  74                 	db	116	;'t'
  6898  00E93A  70                 	db	112	;'p'
  6899  00E93B  75                 	db	117	;'u'
  6900  00E93C  74                 	db	116	;'t'
  6901  00E93D  20                 	db	32
  6902  00E93E  64                 	db	100	;'d'
  6903  00E93F  69                 	db	105	;'i'
  6904  00E940  6D                 	db	109	;'m'
  6905  00E941  6D                 	db	109	;'m'
  6906  00E942  69                 	db	105	;'i'
  6907  00E943  6E                 	db	110	;'n'
  6908  00E944  67                 	db	103	;'g'
  6909  00E945  0A                 	db	10
  6910  00E946  0D                 	db	13
  6911  00E947  20                 	db	32
  6912  00E948  20                 	db	32
  6913  00E949  20                 	db	32
  6914  00E94A  44                 	db	68	;'D'
  6915  00E94B  69                 	db	105	;'i'
  6916  00E94C  73                 	db	115	;'s'
  6917  00E94D  61                 	db	97	;'a'
  6918  00E94E  62                 	db	98	;'b'
  6919  00E94F  6C                 	db	108	;'l'
  6920  00E950  65                 	db	101	;'e'
  6921  00E951  20                 	db	32
  6922  00E952  44                 	db	68	;'D'
  6923  00E953  69                 	db	105	;'i'
  6924  00E954  6D                 	db	109	;'m'
  6925  00E955  6D                 	db	109	;'m'
  6926  00E956  69                 	db	105	;'i'
  6927  00E957  6E                 	db	110	;'n'
  6928  00E958  67                 	db	103	;'g'
  6929  00E959  3A                 	db	58	;':'
  6930  00E95A  20                 	db	32
  6931  00E95B  44                 	db	68	;'D'
  6932  00E95C  69                 	db	105	;'i'
  6933  00E95D  73                 	db	115	;'s'
  6934  00E95E  61                 	db	97	;'a'
  6935  00E95F  62                 	db	98	;'b'
  6936  00E960  6C                 	db	108	;'l'
  6937  00E961  65                 	db	101	;'e'
  6938  00E962  20                 	db	32
  6939  00E963  54                 	db	84	;'T'
  6940  00E964  52                 	db	82	;'R'
  6941  00E965  49                 	db	73	;'I'
  6942  00E966  41                 	db	65	;'A'
  6943  00E967  43                 	db	67	;'C'
  6944  00E968  20                 	db	32
  6945  00E969  6F                 	db	111	;'o'
  6946  00E96A  75                 	db	117	;'u'
  6947  00E96B  74                 	db	116	;'t'
  6948  00E96C  70                 	db	112	;'p'
  6949  00E96D  75                 	db	117	;'u'
  6950  00E96E  74                 	db	116	;'t'
  6951  00E96F  20                 	db	32
  6952  00E970  64                 	db	100	;'d'
  6953  00E971  69                 	db	105	;'i'
  6954  00E972  6D                 	db	109	;'m'
  6955  00E973  6D                 	db	109	;'m'
  6956  00E974  69                 	db	105	;'i'
  6957  00E975  6E                 	db	110	;'n'
  6958  00E976  67                 	db	103	;'g'
  6959  00E977  0A                 	db	10
  6960  00E978  0D                 	db	13
  6961  00E979  20                 	db	32
  6962  00E97A  20                 	db	32
  6963  00E97B  20                 	db	32
  6964  00E97C  45                 	db	69	;'E'
  6965  00E97D  6E                 	db	110	;'n'
  6966  00E97E  61                 	db	97	;'a'
  6967  00E97F  62                 	db	98	;'b'
  6968  00E980  6C                 	db	108	;'l'
  6969  00E981  65                 	db	101	;'e'
  6970  00E982  20                 	db	32
  6971  00E983  4C                 	db	76	;'L'
  6972  00E984  6F                 	db	111	;'o'
  6973  00E985  61                 	db	97	;'a'
  6974  00E986  64                 	db	100	;'d'
  6975  00E987  3A                 	db	58	;':'
  6976  00E988  20                 	db	32
  6977  00E989  45                 	db	69	;'E'
  6978  00E98A  6E                 	db	110	;'n'
  6979  00E98B  61                 	db	97	;'a'
  6980  00E98C  62                 	db	98	;'b'
  6981  00E98D  6C                 	db	108	;'l'
  6982  00E98E  65                 	db	101	;'e'
  6983  00E98F  73                 	db	115	;'s'
  6984  00E990  20                 	db	32
  6985  00E991  74                 	db	116	;'t'
  6986  00E992  68                 	db	104	;'h'
  6987  00E993  65                 	db	101	;'e'
  6988  00E994  20                 	db	32
  6989  00E995  6F                 	db	111	;'o'
  6990  00E996  75                 	db	117	;'u'
  6991  00E997  74                 	db	116	;'t'
  6992  00E998  70                 	db	112	;'p'
  6993  00E999  75                 	db	117	;'u'
  6994  00E99A  74                 	db	116	;'t'
  6995  00E99B  20                 	db	32
  6996  00E99C  54                 	db	84	;'T'
  6997  00E99D  52                 	db	82	;'R'
  6998  00E99E  49                 	db	73	;'I'
  6999  00E99F  41                 	db	65	;'A'
  7000  00E9A0  43                 	db	67	;'C'
  7001  00E9A1  20                 	db	32
  7002  00E9A2  77                 	db	119	;'w'
  7003  00E9A3  69                 	db	105	;'i'
  7004  00E9A4  74                 	db	116	;'t'
  7005  00E9A5  68                 	db	104	;'h'
  7006  00E9A6  20                 	db	32
  7007  00E9A7  64                 	db	100	;'d'
  7008  00E9A8  69                 	db	105	;'i'
  7009  00E9A9  6D                 	db	109	;'m'
  7010  00E9AA  6D                 	db	109	;'m'
  7011  00E9AB  69                 	db	105	;'i'
  7012  00E9AC  6E                 	db	110	;'n'
  7013  00E9AD  67                 	db	103	;'g'
  7014  00E9AE  20                 	db	32
  7015  00E9AF  64                 	db	100	;'d'
  7016  00E9B0  69                 	db	105	;'i'
  7017  00E9B1  73                 	db	115	;'s'
  7018  00E9B2  61                 	db	97	;'a'
  7019  00E9B3  62                 	db	98	;'b'
  7020  00E9B4  6C                 	db	108	;'l'
  7021  00E9B5  65                 	db	101	;'e'
  7022  00E9B6  64                 	db	100	;'d'
  7023  00E9B7  0A                 	db	10
  7024  00E9B8  0D                 	db	13
  7025  00E9B9  20                 	db	32
  7026  00E9BA  20                 	db	32
  7027  00E9BB  20                 	db	32
  7028  00E9BC  44                 	db	68	;'D'
  7029  00E9BD  69                 	db	105	;'i'
  7030  00E9BE  73                 	db	115	;'s'
  7031  00E9BF  61                 	db	97	;'a'
  7032  00E9C0  62                 	db	98	;'b'
  7033  00E9C1  6C                 	db	108	;'l'
  7034  00E9C2  65                 	db	101	;'e'
  7035  00E9C3  20                 	db	32
  7036  00E9C4  4C                 	db	76	;'L'
  7037  00E9C5  6F                 	db	111	;'o'
  7038  00E9C6  61                 	db	97	;'a'
  7039  00E9C7  64                 	db	100	;'d'
  7040  00E9C8  3A                 	db	58	;':'
  7041  00E9C9  20                 	db	32
  7042  00E9CA  44                 	db	68	;'D'
  7043  00E9CB  69                 	db	105	;'i'
  7044  00E9CC  73                 	db	115	;'s'
  7045  00E9CD  61                 	db	97	;'a'
  7046  00E9CE  62                 	db	98	;'b'
  7047  00E9CF  6C                 	db	108	;'l'
  7048  00E9D0  65                 	db	101	;'e'
  7049  00E9D1  73                 	db	115	;'s'
  7050  00E9D2  20                 	db	32
  7051  00E9D3  74                 	db	116	;'t'
  7052  00E9D4  68                 	db	104	;'h'
  7053  00E9D5  65                 	db	101	;'e'
  7054  00E9D6  20                 	db	32
  7055  00E9D7  6F                 	db	111	;'o'
  7056  00E9D8  75                 	db	117	;'u'
  7057  00E9D9  74                 	db	116	;'t'
  7058  00E9DA  70                 	db	112	;'p'
  7059  00E9DB  75                 	db	117	;'u'
  7060  00E9DC  74                 	db	116	;'t'
  7061  00E9DD  20                 	db	32
  7062  00E9DE  54                 	db	84	;'T'
  7063  00E9DF  52                 	db	82	;'R'
  7064  00E9E0  49                 	db	73	;'I'
  7065  00E9E1  41                 	db	65	;'A'
  7066  00E9E2  43                 	db	67	;'C'
  7067  00E9E3  20                 	db	32
  7068  00E9E4  63                 	db	99	;'c'
  7069  00E9E5  6F                 	db	111	;'o'
  7070  00E9E6  6D                 	db	109	;'m'
  7071  00E9E7  70                 	db	112	;'p'
  7072  00E9E8  6C                 	db	108	;'l'
  7073  00E9E9  65                 	db	101	;'e'
  7074  00E9EA  74                 	db	116	;'t'
  7075  00E9EB  65                 	db	101	;'e'
  7076  00E9EC  6C                 	db	108	;'l'
  7077  00E9ED  79                 	db	121	;'y'
  7078  00E9EE  0A                 	db	10
  7079  00E9EF  0D                 	db	13
  7080  00E9F0  20                 	db	32
  7081  00E9F1  20                 	db	32
  7082  00E9F2  20                 	db	32
  7083  00E9F3  4C                 	db	76	;'L'
  7084  00E9F4  6F                 	db	111	;'o'
  7085  00E9F5  61                 	db	97	;'a'
  7086  00E9F6  64                 	db	100	;'d'
  7087  00E9F7  20                 	db	32
  7088  00E9F8  45                 	db	69	;'E'
  7089  00E9F9  6E                 	db	110	;'n'
  7090  00E9FA  61                 	db	97	;'a'
  7091  00E9FB  62                 	db	98	;'b'
  7092  00E9FC  6C                 	db	108	;'l'
  7093  00E9FD  65                 	db	101	;'e'
  7094  00E9FE  64                 	db	100	;'d'
  7095  00E9FF  3F                 	db	63	;'?'
  7096  00EA00  3A                 	db	58	;':'
  7097  00EA01  20                 	db	32
  7098  00EA02  52                 	db	82	;'R'
  7099  00EA03  65                 	db	101	;'e'
  7100  00EA04  74                 	db	116	;'t'
  7101  00EA05  75                 	db	117	;'u'
  7102  00EA06  72                 	db	114	;'r'
  7103  00EA07  6E                 	db	110	;'n'
  7104  00EA08  73                 	db	115	;'s'
  7105  00EA09  20                 	db	32
  7106  00EA0A  69                 	db	105	;'i'
  7107  00EA0B  66                 	db	102	;'f'
  7108  00EA0C  20                 	db	32
  7109  00EA0D  74                 	db	116	;'t'
  7110  00EA0E  68                 	db	104	;'h'
  7111  00EA0F  65                 	db	101	;'e'
  7112  00EA10  20                 	db	32
  7113  00EA11  6F                 	db	111	;'o'
  7114  00EA12  75                 	db	117	;'u'
  7115  00EA13  74                 	db	116	;'t'
  7116  00EA14  70                 	db	112	;'p'
  7117  00EA15  75                 	db	117	;'u'
  7118  00EA16  74                 	db	116	;'t'
  7119  00EA17  20                 	db	32
  7120  00EA18  6C                 	db	108	;'l'
  7121  00EA19  6F                 	db	111	;'o'
  7122  00EA1A  61                 	db	97	;'a'
  7123  00EA1B  64                 	db	100	;'d'
  7124  00EA1C  20                 	db	32
  7125  00EA1D  69                 	db	105	;'i'
  7126  00EA1E  73                 	db	115	;'s'
  7127  00EA1F  20                 	db	32
  7128  00EA20  65                 	db	101	;'e'
  7129  00EA21  6E                 	db	110	;'n'
  7130  00EA22  61                 	db	97	;'a'
  7131  00EA23  62                 	db	98	;'b'
  7132  00EA24  6C                 	db	108	;'l'
  7133  00EA25  65                 	db	101	;'e'
  7134  00EA26  64                 	db	100	;'d'
  7135  00EA27  20                 	db	32
  7136  00EA28  6F                 	db	111	;'o'
  7137  00EA29  72                 	db	114	;'r'
  7138  00EA2A  20                 	db	32
  7139  00EA2B  64                 	db	100	;'d'
  7140  00EA2C  69                 	db	105	;'i'
  7141  00EA2D  73                 	db	115	;'s'
  7142  00EA2E  61                 	db	97	;'a'
  7143  00EA2F  62                 	db	98	;'b'
  7144  00EA30  6C                 	db	108	;'l'
  7145  00EA31  65                 	db	101	;'e'
  7146  00EA32  64                 	db	100	;'d'
  7147  00EA33  0A                 	db	10
  7148  00EA34  0D                 	db	13
  7149  00EA35  20                 	db	32
  7150  00EA36  20                 	db	32
  7151  00EA37  20                 	db	32
  7152  00EA38  44                 	db	68	;'D'
  7153  00EA39  69                 	db	105	;'i'
  7154  00EA3A  6D                 	db	109	;'m'
  7155  00EA3B  6D                 	db	109	;'m'
  7156  00EA3C  69                 	db	105	;'i'
  7157  00EA3D  6E                 	db	110	;'n'
  7158  00EA3E  67                 	db	103	;'g'
  7159  00EA3F  20                 	db	32
  7160  00EA40  45                 	db	69	;'E'
  7161  00EA41  6E                 	db	110	;'n'
  7162  00EA42  61                 	db	97	;'a'
  7163  00EA43  62                 	db	98	;'b'
  7164  00EA44  6C                 	db	108	;'l'
  7165  00EA45  65                 	db	101	;'e'
  7166  00EA46  64                 	db	100	;'d'
  7167  00EA47  3F                 	db	63	;'?'
  7168  00EA48  3A                 	db	58	;':'
  7169  00EA49  20                 	db	32
  7170  00EA4A  52                 	db	82	;'R'
  7171  00EA4B  65                 	db	101	;'e'
  7172  00EA4C  74                 	db	116	;'t'
  7173  00EA4D  75                 	db	117	;'u'
  7174  00EA4E  72                 	db	114	;'r'
  7175  00EA4F  6E                 	db	110	;'n'
  7176  00EA50  73                 	db	115	;'s'
  7177  00EA51  20                 	db	32
  7178  00EA52  69                 	db	105	;'i'
  7179  00EA53  66                 	db	102	;'f'
  7180  00EA54  20                 	db	32
  7181  00EA55  64                 	db	100	;'d'
  7182  00EA56  69                 	db	105	;'i'
  7183  00EA57  6D                 	db	109	;'m'
  7184  00EA58  6D                 	db	109	;'m'
  7185  00EA59  69                 	db	105	;'i'
  7186  00EA5A  6E                 	db	110	;'n'
  7187  00EA5B  67                 	db	103	;'g'
  7188  00EA5C  20                 	db	32
  7189  00EA5D  6F                 	db	111	;'o'
  7190  00EA5E  66                 	db	102	;'f'
  7191  00EA5F  20                 	db	32
  7192  00EA60  74                 	db	116	;'t'
  7193  00EA61  68                 	db	104	;'h'
  7194  00EA62  65                 	db	101	;'e'
  7195  00EA63  20                 	db	32
  7196  00EA64  6F                 	db	111	;'o'
  7197  00EA65  75                 	db	117	;'u'
  7198  00EA66  74                 	db	116	;'t'
  7199  00EA67  70                 	db	112	;'p'
  7200  00EA68  75                 	db	117	;'u'
  7201  00EA69  74                 	db	116	;'t'
  7202  00EA6A  20                 	db	32
  7203  00EA6B  6C                 	db	108	;'l'
  7204  00EA6C  6F                 	db	111	;'o'
  7205  00EA6D  61                 	db	97	;'a'
  7206  00EA6E  64                 	db	100	;'d'
  7207  00EA6F  20                 	db	32
  7208  00EA70  69                 	db	105	;'i'
  7209  00EA71  73                 	db	115	;'s'
  7210  00EA72  20                 	db	32
  7211  00EA73  65                 	db	101	;'e'
  7212  00EA74  6E                 	db	110	;'n'
  7213  00EA75  61                 	db	97	;'a'
  7214  00EA76  62                 	db	98	;'b'
  7215  00EA77  6C                 	db	108	;'l'
  7216  00EA78  65                 	db	101	;'e'
  7217  00EA79  64                 	db	100	;'d'
  7218  00EA7A  20                 	db	32
  7219  00EA7B  6F                 	db	111	;'o'
  7220  00EA7C  72                 	db	114	;'r'
  7221  00EA7D  20                 	db	32
  7222  00EA7E  6E                 	db	110	;'n'
  7223  00EA7F  6F                 	db	111	;'o'
  7224  00EA80  74                 	db	116	;'t'
  7225  00EA81  0A                 	db	10
  7226  00EA82  0D                 	db	13
  7227  00EA83  20                 	db	32
  7228  00EA84  20                 	db	32
  7229  00EA85  20                 	db	32
  7230  00EA86  53                 	db	83	;'S'
  7231  00EA87  65                 	db	101	;'e'
  7232  00EA88  74                 	db	116	;'t'
  7233  00EA89  20                 	db	32
  7234  00EA8A  44                 	db	68	;'D'
  7235  00EA8B  69                 	db	105	;'i'
  7236  00EA8C  6D                 	db	109	;'m'
  7237  00EA8D  6D                 	db	109	;'m'
  7238  00EA8E  69                 	db	105	;'i'
  7239  00EA8F  6E                 	db	110	;'n'
  7240  00EA90  67                 	db	103	;'g'
  7241  00EA91  20                 	db	32
  7242  00EA92  50                 	db	80	;'P'
  7243  00EA93  65                 	db	101	;'e'
  7244  00EA94  72                 	db	114	;'r'
  7245  00EA95  63                 	db	99	;'c'
  7246  00EA96  65                 	db	101	;'e'
  7247  00EA97  6E                 	db	110	;'n'
  7248  00EA98  74                 	db	116	;'t'
  7249  00EA99  61                 	db	97	;'a'
  7250  00EA9A  67                 	db	103	;'g'
  7251  00EA9B  65                 	db	101	;'e'
  7252  00EA9C  3A                 	db	58	;':'
  7253  00EA9D  20                 	db	32
  7254  00EA9E  3C                 	db	60	;'<'
  7255  00EA9F  78                 	db	120	;'x'
  7256  00EAA0  3E                 	db	62	;'>'
  7257  00EAA1  3A                 	db	58	;':'
  7258  00EAA2  20                 	db	32
  7259  00EAA3  53                 	db	83	;'S'
  7260  00EAA4  65                 	db	101	;'e'
  7261  00EAA5  74                 	db	116	;'t'
  7262  00EAA6  73                 	db	115	;'s'
  7263  00EAA7  20                 	db	32
  7264  00EAA8  74                 	db	116	;'t'
  7265  00EAA9  68                 	db	104	;'h'
  7266  00EAAA  65                 	db	101	;'e'
  7267  00EAAB  20                 	db	32
  7268  00EAAC  6F                 	db	111	;'o'
  7269  00EAAD  75                 	db	117	;'u'
  7270  00EAAE  74                 	db	116	;'t'
  7271  00EAAF  70                 	db	112	;'p'
  7272  00EAB0  75                 	db	117	;'u'
  7273  00EAB1  74                 	db	116	;'t'
  7274  00EAB2  20                 	db	32
  7275  00EAB3  64                 	db	100	;'d'
  7276  00EAB4  69                 	db	105	;'i'
  7277  00EAB5  6D                 	db	109	;'m'
  7278  00EAB6  6D                 	db	109	;'m'
  7279  00EAB7  69                 	db	105	;'i'
  7280  00EAB8  6E                 	db	110	;'n'
  7281  00EAB9  67                 	db	103	;'g'
  7282  00EABA  20                 	db	32
  7283  00EABB  70                 	db	112	;'p'
  7284  00EABC  65                 	db	101	;'e'
  7285  00EABD  72                 	db	114	;'r'
  7286  00EABE  63                 	db	99	;'c'
  7287  00EABF  65                 	db	101	;'e'
  7288  00EAC0  6E                 	db	110	;'n'
  7289  00EAC1  74                 	db	116	;'t'
  7290  00EAC2  61                 	db	97	;'a'
  7291  00EAC3  67                 	db	103	;'g'
  7292  00EAC4  65                 	db	101	;'e'
  7293  00EAC5  20                 	db	32
  7294  00EAC6  61                 	db	97	;'a'
  7295  00EAC7  73                 	db	115	;'s'
  7296  00EAC8  20                 	db	32
  7297  00EAC9  78                 	db	120	;'x'
  7298  00EACA  20                 	db	32
  7299  00EACB  70                 	db	112	;'p'
  7300  00EACC  65                 	db	101	;'e'
  7301  00EACD  72                 	db	114	;'r'
  7302  00EACE  63                 	db	99	;'c'
  7303  00EACF  65                 	db	101	;'e'
  7304  00EAD0  6E                 	db	110	;'n'
  7305  00EAD1  74                 	db	116	;'t'
  7306  00EAD2  0A                 	db	10
  7307  00EAD3  0D                 	db	13
  7308  00EAD4  0A                 	db	10
  7309  00EAD5  0D                 	db	13
  7310  00EAD6  00                 	db	0
  7311  00EAD7                     STR_161:
  7312  00EAD7  50                 	db	80	;'P'
  7313  00EAD8  6C                 	db	108	;'l'
  7314  00EAD9  65                 	db	101	;'e'
  7315  00EADA  61                 	db	97	;'a'
  7316  00EADB  73                 	db	115	;'s'
  7317  00EADC  65                 	db	101	;'e'
  7318  00EADD  20                 	db	32
  7319  00EADE  73                 	db	115	;'s'
  7320  00EADF  70                 	db	112	;'p'
  7321  00EAE0  65                 	db	101	;'e'
  7322  00EAE1  63                 	db	99	;'c'
  7323  00EAE2  69                 	db	105	;'i'
  7324  00EAE3  66                 	db	102	;'f'
  7325  00EAE4  79                 	db	121	;'y'
  7326  00EAE5  20                 	db	32
  7327  00EAE6  77                 	db	119	;'w'
  7328  00EAE7  68                 	db	104	;'h'
  7329  00EAE8  61                 	db	97	;'a'
  7330  00EAE9  74                 	db	116	;'t'
  7331  00EAEA  20                 	db	32
  7332  00EAEB  74                 	db	116	;'t'
  7333  00EAEC  79                 	db	121	;'y'
  7334  00EAED  70                 	db	112	;'p'
  7335  00EAEE  65                 	db	101	;'e'
  7336  00EAEF  20                 	db	32
  7337  00EAF0  6F                 	db	111	;'o'
  7338  00EAF1  66                 	db	102	;'f'
  7339  00EAF2  20                 	db	32
  7340  00EAF3  63                 	db	99	;'c'
  7341  00EAF4  6F                 	db	111	;'o'
  7342  00EAF5  6D                 	db	109	;'m'
  7343  00EAF6  6D                 	db	109	;'m'
  7344  00EAF7  61                 	db	97	;'a'
  7345  00EAF8  6E                 	db	110	;'n'
  7346  00EAF9  64                 	db	100	;'d'
  7347  00EAFA  73                 	db	115	;'s'
  7348  00EAFB  20                 	db	32
  7349  00EAFC  79                 	db	121	;'y'
  7350  00EAFD  6F                 	db	111	;'o'
  7351  00EAFE  75                 	db	117	;'u'
  7352  00EAFF  27                 	db	39
  7353  00EB00  64                 	db	100	;'d'
  7354  00EB01  20                 	db	32
  7355  00EB02  6C                 	db	108	;'l'
  7356  00EB03  69                 	db	105	;'i'
  7357  00EB04  6B                 	db	107	;'k'
  7358  00EB05  65                 	db	101	;'e'
  7359  00EB06  20                 	db	32
  7360  00EB07  68                 	db	104	;'h'
  7361  00EB08  65                 	db	101	;'e'
  7362  00EB09  6C                 	db	108	;'l'
  7363  00EB0A  70                 	db	112	;'p'
  7364  00EB0B  20                 	db	32
  7365  00EB0C  77                 	db	119	;'w'
  7366  00EB0D  69                 	db	105	;'i'
  7367  00EB0E  74                 	db	116	;'t'
  7368  00EB0F  68                 	db	104	;'h'
  7369  00EB10  3A                 	db	58	;':'
  7370  00EB11  0A                 	db	10
  7371  00EB12  0D                 	db	13
  7372  00EB13  54                 	db	84	;'T'
  7373  00EB14  72                 	db	114	;'r'
  7374  00EB15  79                 	db	121	;'y'
  7375  00EB16  20                 	db	32
  7376  00EB17  27                 	db	39
  7377  00EB18  48                 	db	72	;'H'
  7378  00EB19  65                 	db	101	;'e'
  7379  00EB1A  6C                 	db	108	;'l'
  7380  00EB1B  70                 	db	112	;'p'
  7381  00EB1C  20                 	db	32
  7382  00EB1D  3C                 	db	60	;'<'
  7383  00EB1E  63                 	db	99	;'c'
  7384  00EB1F  6F                 	db	111	;'o'
  7385  00EB20  6D                 	db	109	;'m'
  7386  00EB21  6D                 	db	109	;'m'
  7387  00EB22  61                 	db	97	;'a'
  7388  00EB23  6E                 	db	110	;'n'
  7389  00EB24  64                 	db	100	;'d'
  7390  00EB25  20                 	db	32
  7391  00EB26  73                 	db	115	;'s'
  7392  00EB27  65                 	db	101	;'e'
  7393  00EB28  74                 	db	116	;'t'
  7394  00EB29  3E                 	db	62	;'>'
  7395  00EB2A  27                 	db	39
  7396  00EB2B  0A                 	db	10
  7397  00EB2C  0D                 	db	13
  7398  00EB2D  0A                 	db	10
  7399  00EB2E  0D                 	db	13
  7400  00EB2F  53                 	db	83	;'S'
  7401  00EB30  75                 	db	117	;'u'
  7402  00EB31  70                 	db	112	;'p'
  7403  00EB32  70                 	db	112	;'p'
  7404  00EB33  6F                 	db	111	;'o'
  7405  00EB34  72                 	db	114	;'r'
  7406  00EB35  74                 	db	116	;'t'
  7407  00EB36  65                 	db	101	;'e'
  7408  00EB37  64                 	db	100	;'d'
  7409  00EB38  20                 	db	32
  7410  00EB39  43                 	db	67	;'C'
  7411  00EB3A  6F                 	db	111	;'o'
  7412  00EB3B  6D                 	db	109	;'m'
  7413  00EB3C  6D                 	db	109	;'m'
  7414  00EB3D  61                 	db	97	;'a'
  7415  00EB3E  6E                 	db	110	;'n'
  7416  00EB3F  64                 	db	100	;'d'
  7417  00EB40  20                 	db	32
  7418  00EB41  53                 	db	83	;'S'
  7419  00EB42  65                 	db	101	;'e'
  7420  00EB43  74                 	db	116	;'t'
  7421  00EB44  73                 	db	115	;'s'
  7422  00EB45  3A                 	db	58	;':'
  7423  00EB46  0A                 	db	10
  7424  00EB47  0D                 	db	13
  7425  00EB48  20                 	db	32
  7426  00EB49  20                 	db	32
  7427  00EB4A  20                 	db	32
  7428  00EB4B  44                 	db	68	;'D'
  7429  00EB4C  65                 	db	101	;'e'
  7430  00EB4D  76                 	db	118	;'v'
  7431  00EB4E  69                 	db	105	;'i'
  7432  00EB4F  63                 	db	99	;'c'
  7433  00EB50  65                 	db	101	;'e'
  7434  00EB51  20                 	db	32
  7435  00EB52  43                 	db	67	;'C'
  7436  00EB53  6F                 	db	111	;'o'
  7437  00EB54  6E                 	db	110	;'n'
  7438  00EB55  74                 	db	116	;'t'
  7439  00EB56  72                 	db	114	;'r'
  7440  00EB57  6F                 	db	111	;'o'
  7441  00EB58  6C                 	db	108	;'l'
  7442  00EB59  20                 	db	32
  7443  00EB5A  43                 	db	67	;'C'
  7444  00EB5B  6F                 	db	111	;'o'
  7445  00EB5C  6D                 	db	109	;'m'
  7446  00EB5D  6D                 	db	109	;'m'
  7447  00EB5E  61                 	db	97	;'a'
  7448  00EB5F  6E                 	db	110	;'n'
  7449  00EB60  64                 	db	100	;'d'
  7450  00EB61  73                 	db	115	;'s'
  7451  00EB62  3A                 	db	58	;':'
  7452  00EB63  20                 	db	32
  7453  00EB64  43                 	db	67	;'C'
  7454  00EB65  6F                 	db	111	;'o'
  7455  00EB66  6D                 	db	109	;'m'
  7456  00EB67  6D                 	db	109	;'m'
  7457  00EB68  61                 	db	97	;'a'
  7458  00EB69  6E                 	db	110	;'n'
  7459  00EB6A  64                 	db	100	;'d'
  7460  00EB6B  73                 	db	115	;'s'
  7461  00EB6C  20                 	db	32
  7462  00EB6D  74                 	db	116	;'t'
  7463  00EB6E  6F                 	db	111	;'o'
  7464  00EB6F  20                 	db	32
  7465  00EB70  76                 	db	118	;'v'
  7466  00EB71  69                 	db	105	;'i'
  7467  00EB72  65                 	db	101	;'e'
  7468  00EB73  77                 	db	119	;'w'
  7469  00EB74  20                 	db	32
  7470  00EB75  61                 	db	97	;'a'
  7471  00EB76  6E                 	db	110	;'n'
  7472  00EB77  64                 	db	100	;'d'
  7473  00EB78  20                 	db	32
  7474  00EB79  63                 	db	99	;'c'
  7475  00EB7A  6F                 	db	111	;'o'
  7476  00EB7B  6E                 	db	110	;'n'
  7477  00EB7C  74                 	db	116	;'t'
  7478  00EB7D  72                 	db	114	;'r'
  7479  00EB7E  6F                 	db	111	;'o'
  7480  00EB7F  6C                 	db	108	;'l'
  7481  00EB80  20                 	db	32
  7482  00EB81  6C                 	db	108	;'l'
  7483  00EB82  6F                 	db	111	;'o'
  7484  00EB83  77                 	db	119	;'w'
  7485  00EB84  20                 	db	32
  7486  00EB85  6C                 	db	108	;'l'
  7487  00EB86  65                 	db	101	;'e'
  7488  00EB87  76                 	db	118	;'v'
  7489  00EB88  65                 	db	101	;'e'
  7490  00EB89  6C                 	db	108	;'l'
  7491  00EB8A  20                 	db	32
  7492  00EB8B  73                 	db	115	;'s'
  7493  00EB8C  79                 	db	121	;'y'
  7494  00EB8D  73                 	db	115	;'s'
  7495  00EB8E  74                 	db	116	;'t'
  7496  00EB8F  65                 	db	101	;'e'
  7497  00EB90  6D                 	db	109	;'m'
  7498  00EB91  20                 	db	32
  7499  00EB92  66                 	db	102	;'f'
  7500  00EB93  75                 	db	117	;'u'
  7501  00EB94  6E                 	db	110	;'n'
  7502  00EB95  63                 	db	99	;'c'
  7503  00EB96  74                 	db	116	;'t'
  7504  00EB97  69                 	db	105	;'i'
  7505  00EB98  6F                 	db	111	;'o'
  7506  00EB99  6E                 	db	110	;'n'
  7507  00EB9A  61                 	db	97	;'a'
  7508  00EB9B  6C                 	db	108	;'l'
  7509  00EB9C  69                 	db	105	;'i'
  7510  00EB9D  74                 	db	116	;'t'
  7511  00EB9E  79                 	db	121	;'y'
  7512  00EB9F  0A                 	db	10
  7513  00EBA0  0D                 	db	13
  7514  00EBA1  20                 	db	32
  7515  00EBA2  20                 	db	32
  7516  00EBA3  20                 	db	32
  7517  00EBA4  44                 	db	68	;'D'
  7518  00EBA5  65                 	db	101	;'e'
  7519  00EBA6  76                 	db	118	;'v'
  7520  00EBA7  69                 	db	105	;'i'
  7521  00EBA8  63                 	db	99	;'c'
  7522  00EBA9  65                 	db	101	;'e'
  7523  00EBAA  20                 	db	32
  7524  00EBAB  4D                 	db	77	;'M'
  7525  00EBAC  65                 	db	101	;'e'
  7526  00EBAD  61                 	db	97	;'a'
  7527  00EBAE  73                 	db	115	;'s'
  7528  00EBAF  75                 	db	117	;'u'
  7529  00EBB0  72                 	db	114	;'r'
  7530  00EBB1  65                 	db	101	;'e'
  7531  00EBB2  6D                 	db	109	;'m'
  7532  00EBB3  65                 	db	101	;'e'
  7533  00EBB4  6E                 	db	110	;'n'
  7534  00EBB5  74                 	db	116	;'t'
  7535  00EBB6  20                 	db	32
  7536  00EBB7  43                 	db	67	;'C'
  7537  00EBB8  6F                 	db	111	;'o'
  7538  00EBB9  6D                 	db	109	;'m'
  7539  00EBBA  6D                 	db	109	;'m'
  7540  00EBBB  61                 	db	97	;'a'
  7541  00EBBC  6E                 	db	110	;'n'
  7542  00EBBD  64                 	db	100	;'d'
  7543  00EBBE  73                 	db	115	;'s'
  7544  00EBBF  3A                 	db	58	;':'
  7545  00EBC0  20                 	db	32
  7546  00EBC1  56                 	db	86	;'V'
  7547  00EBC2  69                 	db	105	;'i'
  7548  00EBC3  65                 	db	101	;'e'
  7549  00EBC4  77                 	db	119	;'w'
  7550  00EBC5  20                 	db	32
  7551  00EBC6  6C                 	db	108	;'l'
  7552  00EBC7  6F                 	db	111	;'o'
  7553  00EBC8  77                 	db	119	;'w'
  7554  00EBC9  20                 	db	32
  7555  00EBCA  6C                 	db	108	;'l'
  7556  00EBCB  65                 	db	101	;'e'
  7557  00EBCC  76                 	db	118	;'v'
  7558  00EBCD  65                 	db	101	;'e'
  7559  00EBCE  6C                 	db	108	;'l'
  7560  00EBCF  20                 	db	32
  7561  00EBD0  73                 	db	115	;'s'
  7562  00EBD1  79                 	db	121	;'y'
  7563  00EBD2  73                 	db	115	;'s'
  7564  00EBD3  74                 	db	116	;'t'
  7565  00EBD4  65                 	db	101	;'e'
  7566  00EBD5  6D                 	db	109	;'m'
  7567  00EBD6  20                 	db	32
  7568  00EBD7  6D                 	db	109	;'m'
  7569  00EBD8  65                 	db	101	;'e'
  7570  00EBD9  61                 	db	97	;'a'
  7571  00EBDA  73                 	db	115	;'s'
  7572  00EBDB  75                 	db	117	;'u'
  7573  00EBDC  72                 	db	114	;'r'
  7574  00EBDD  65                 	db	101	;'e'
  7575  00EBDE  6D                 	db	109	;'m'
  7576  00EBDF  65                 	db	101	;'e'
  7577  00EBE0  6E                 	db	110	;'n'
  7578  00EBE1  74                 	db	116	;'t'
  7579  00EBE2  73                 	db	115	;'s'
  7580  00EBE3  0A                 	db	10
  7581  00EBE4  0D                 	db	13
  7582  00EBE5  20                 	db	32
  7583  00EBE6  20                 	db	32
  7584  00EBE7  20                 	db	32
  7585  00EBE8  50                 	db	80	;'P'
  7586  00EBE9  72                 	db	114	;'r'
  7587  00EBEA  69                 	db	105	;'i'
  7588  00EBEB  6D                 	db	109	;'m'
  7589  00EBEC  61                 	db	97	;'a'
  7590  00EBED  72                 	db	114	;'r'
  7591  00EBEE  79                 	db	121	;'y'
  7592  00EBEF  20                 	db	32
  7593  00EBF0  4D                 	db	77	;'M'
  7594  00EBF1  65                 	db	101	;'e'
  7595  00EBF2  61                 	db	97	;'a'
  7596  00EBF3  73                 	db	115	;'s'
  7597  00EBF4  75                 	db	117	;'u'
  7598  00EBF5  72                 	db	114	;'r'
  7599  00EBF6  65                 	db	101	;'e'
  7600  00EBF7  6D                 	db	109	;'m'
  7601  00EBF8  65                 	db	101	;'e'
  7602  00EBF9  6E                 	db	110	;'n'
  7603  00EBFA  74                 	db	116	;'t'
  7604  00EBFB  20                 	db	32
  7605  00EBFC  43                 	db	67	;'C'
  7606  00EBFD  6F                 	db	111	;'o'
  7607  00EBFE  6D                 	db	109	;'m'
  7608  00EBFF  6D                 	db	109	;'m'
  7609  00EC00  61                 	db	97	;'a'
  7610  00EC01  6E                 	db	110	;'n'
  7611  00EC02  64                 	db	100	;'d'
  7612  00EC03  73                 	db	115	;'s'
  7613  00EC04  3A                 	db	58	;':'
  7614  00EC05  20                 	db	32
  7615  00EC06  56                 	db	86	;'V'
  7616  00EC07  69                 	db	105	;'i'
  7617  00EC08  65                 	db	101	;'e'
  7618  00EC09  77                 	db	119	;'w'
  7619  00EC0A  20                 	db	32
  7620  00EC0B  68                 	db	104	;'h'
  7621  00EC0C  69                 	db	105	;'i'
  7622  00EC0D  67                 	db	103	;'g'
  7623  00EC0E  68                 	db	104	;'h'
  7624  00EC0F  20                 	db	32
  7625  00EC10  6C                 	db	108	;'l'
  7626  00EC11  65                 	db	101	;'e'
  7627  00EC12  76                 	db	118	;'v'
  7628  00EC13  65                 	db	101	;'e'
  7629  00EC14  6C                 	db	108	;'l'
  7630  00EC15  20                 	db	32
  7631  00EC16  6F                 	db	111	;'o'
  7632  00EC17  75                 	db	117	;'u'
  7633  00EC18  74                 	db	116	;'t'
  7634  00EC19  70                 	db	112	;'p'
  7635  00EC1A  75                 	db	117	;'u'
  7636  00EC1B  74                 	db	116	;'t'
  7637  00EC1C  20                 	db	32
  7638  00EC1D  6D                 	db	109	;'m'
  7639  00EC1E  65                 	db	101	;'e'
  7640  00EC1F  61                 	db	97	;'a'
  7641  00EC20  73                 	db	115	;'s'
  7642  00EC21  75                 	db	117	;'u'
  7643  00EC22  72                 	db	114	;'r'
  7644  00EC23  65                 	db	101	;'e'
  7645  00EC24  6D                 	db	109	;'m'
  7646  00EC25  65                 	db	101	;'e'
  7647  00EC26  6E                 	db	110	;'n'
  7648  00EC27  74                 	db	116	;'t'
  7649  00EC28  73                 	db	115	;'s'
  7650  00EC29  20                 	db	32
  7651  00EC2A  61                 	db	97	;'a'
  7652  00EC2B  6E                 	db	110	;'n'
  7653  00EC2C  64                 	db	100	;'d'
  7654  00EC2D  20                 	db	32
  7655  00EC2E  63                 	db	99	;'c'
  7656  00EC2F  61                 	db	97	;'a'
  7657  00EC30  6C                 	db	108	;'l'
  7658  00EC31  63                 	db	99	;'c'
  7659  00EC32  75                 	db	117	;'u'
  7660  00EC33  6C                 	db	108	;'l'
  7661  00EC34  61                 	db	97	;'a'
  7662  00EC35  74                 	db	116	;'t'
  7663  00EC36  69                 	db	105	;'i'
  7664  00EC37  6F                 	db	111	;'o'
  7665  00EC38  6E                 	db	110	;'n'
  7666  00EC39  73                 	db	115	;'s'
  7667  00EC3A  0A                 	db	10
  7668  00EC3B  0D                 	db	13
  7669  00EC3C  20                 	db	32
  7670  00EC3D  20                 	db	32
  7671  00EC3E  20                 	db	32
  7672  00EC3F  4F                 	db	79	;'O'
  7673  00EC40  75                 	db	117	;'u'
  7674  00EC41  74                 	db	116	;'t'
  7675  00EC42  70                 	db	112	;'p'
  7676  00EC43  75                 	db	117	;'u'
  7677  00EC44  74                 	db	116	;'t'
  7678  00EC45  20                 	db	32
  7679  00EC46  43                 	db	67	;'C'
  7680  00EC47  6F                 	db	111	;'o'
  7681  00EC48  6E                 	db	110	;'n'
  7682  00EC49  74                 	db	116	;'t'
  7683  00EC4A  72                 	db	114	;'r'
  7684  00EC4B  6F                 	db	111	;'o'
  7685  00EC4C  6C                 	db	108	;'l'
  7686  00EC4D  20                 	db	32
  7687  00EC4E  43                 	db	67	;'C'
  7688  00EC4F  6F                 	db	111	;'o'
  7689  00EC50  6D                 	db	109	;'m'
  7690  00EC51  6D                 	db	109	;'m'
  7691  00EC52  61                 	db	97	;'a'
  7692  00EC53  6E                 	db	110	;'n'
  7693  00EC54  64                 	db	100	;'d'
  7694  00EC55  73                 	db	115	;'s'
  7695  00EC56  3A                 	db	58	;':'
  7696  00EC57  20                 	db	32
  7697  00EC58  43                 	db	67	;'C'
  7698  00EC59  6F                 	db	111	;'o'
  7699  00EC5A  6E                 	db	110	;'n'
  7700  00EC5B  74                 	db	116	;'t'
  7701  00EC5C  72                 	db	114	;'r'
  7702  00EC5D  6F                 	db	111	;'o'
  7703  00EC5E  6C                 	db	108	;'l'
  7704  00EC5F  20                 	db	32
  7705  00EC60  74                 	db	116	;'t'
  7706  00EC61  68                 	db	104	;'h'
  7707  00EC62  65                 	db	101	;'e'
  7708  00EC63  20                 	db	32
  7709  00EC64  6F                 	db	111	;'o'
  7710  00EC65  75                 	db	117	;'u'
  7711  00EC66  74                 	db	116	;'t'
  7712  00EC67  70                 	db	112	;'p'
  7713  00EC68  75                 	db	117	;'u'
  7714  00EC69  74                 	db	116	;'t'
  7715  00EC6A  20                 	db	32
  7716  00EC6B  73                 	db	115	;'s'
  7717  00EC6C  74                 	db	116	;'t'
  7718  00EC6D  61                 	db	97	;'a'
  7719  00EC6E  74                 	db	116	;'t'
  7720  00EC6F  65                 	db	101	;'e'
  7721  00EC70  20                 	db	32
  7722  00EC71  61                 	db	97	;'a'
  7723  00EC72  6E                 	db	110	;'n'
  7724  00EC73  64                 	db	100	;'d'
  7725  00EC74  20                 	db	32
  7726  00EC75  64                 	db	100	;'d'
  7727  00EC76  69                 	db	105	;'i'
  7728  00EC77  6D                 	db	109	;'m'
  7729  00EC78  6D                 	db	109	;'m'
  7730  00EC79  69                 	db	105	;'i'
  7731  00EC7A  6E                 	db	110	;'n'
  7732  00EC7B  67                 	db	103	;'g'
  7733  00EC7C  20                 	db	32
  7734  00EC7D  66                 	db	102	;'f'
  7735  00EC7E  65                 	db	101	;'e'
  7736  00EC7F  61                 	db	97	;'a'
  7737  00EC80  74                 	db	116	;'t'
  7738  00EC81  75                 	db	117	;'u'
  7739  00EC82  72                 	db	114	;'r'
  7740  00EC83  65                 	db	101	;'e'
  7741  00EC84  73                 	db	115	;'s'
  7742  00EC85  0A                 	db	10
  7743  00EC86  0D                 	db	13
  7744  00EC87  0A                 	db	10
  7745  00EC88  0D                 	db	13
  7746  00EC89  27                 	db	39
  7747  00EC8A  48                 	db	72	;'H'
  7748  00EC8B  65                 	db	101	;'e'
  7749  00EC8C  6C                 	db	108	;'l'
  7750  00EC8D  70                 	db	112	;'p'
  7751  00EC8E  20                 	db	32
  7752  00EC8F  41                 	db	65	;'A'
  7753  00EC90  6C                 	db	108	;'l'
  7754  00EC91  6C                 	db	108	;'l'
  7755  00EC92  27                 	db	39
  7756  00EC93  20                 	db	32
  7757  00EC94  77                 	db	119	;'w'
  7758  00EC95  69                 	db	105	;'i'
  7759  00EC96  6C                 	db	108	;'l'
  7760  00EC97  6C                 	db	108	;'l'
  7761  00EC98  20                 	db	32
  7762  00EC99  6C                 	db	108	;'l'
  7763  00EC9A  69                 	db	105	;'i'
  7764  00EC9B  73                 	db	115	;'s'
  7765  00EC9C  74                 	db	116	;'t'
  7766  00EC9D  20                 	db	32
  7767  00EC9E  61                 	db	97	;'a'
  7768  00EC9F  6C                 	db	108	;'l'
  7769  00ECA0  6C                 	db	108	;'l'
  7770  00ECA1  20                 	db	32
  7771  00ECA2  63                 	db	99	;'c'
  7772  00ECA3  6F                 	db	111	;'o'
  7773  00ECA4  6D                 	db	109	;'m'
  7774  00ECA5  6D                 	db	109	;'m'
  7775  00ECA6  61                 	db	97	;'a'
  7776  00ECA7  6E                 	db	110	;'n'
  7777  00ECA8  64                 	db	100	;'d'
  7778  00ECA9  73                 	db	115	;'s'
  7779  00ECAA  0A                 	db	10
  7780  00ECAB  0D                 	db	13
  7781  00ECAC  00                 	db	0
  7782  00ECAD                     STR_168:
  7783  00ECAD  20                 	db	32
  7784  00ECAE  20                 	db	32
  7785  00ECAF  20                 	db	32
  7786  00ECB0  20                 	db	32
  7787  00ECB1  5F                 	db	95	;'_'
  7788  00ECB2  20                 	db	32
  7789  00ECB3  20                 	db	32
  7790  00ECB4  20                 	db	32
  7791  00ECB5  5F                 	db	95	;'_'
  7792  00ECB6  5F                 	db	95	;'_'
  7793  00ECB7  5F                 	db	95	;'_'
  7794  00ECB8  20                 	db	32
  7795  00ECB9  20                 	db	32
  7796  00ECBA  20                 	db	32
  7797  00ECBB  5F                 	db	95	;'_'
  7798  00ECBC  5F                 	db	95	;'_'
  7799  00ECBD  5F                 	db	95	;'_'
  7800  00ECBE  20                 	db	32
  7801  00ECBF  20                 	db	32
  7802  00ECC0  20                 	db	32
  7803  00ECC1  20                 	db	32
  7804  00ECC2  20                 	db	32
  7805  00ECC3  20                 	db	32
  7806  00ECC4  20                 	db	32
  7807  00ECC5  20                 	db	32
  7808  00ECC6  20                 	db	32
  7809  00ECC7  20                 	db	32
  7810  00ECC8  20                 	db	32
  7811  00ECC9  20                 	db	32
  7812  00ECCA  20                 	db	32
  7813  00ECCB  20                 	db	32
  7814  00ECCC  20                 	db	32
  7815  00ECCD  20                 	db	32
  7816  00ECCE  20                 	db	32
  7817  00ECCF  20                 	db	32
  7818  00ECD0  20                 	db	32
  7819  00ECD1  20                 	db	32
  7820  00ECD2  20                 	db	32
  7821  00ECD3  20                 	db	32
  7822  00ECD4  5F                 	db	95	;'_'
  7823  00ECD5  5F                 	db	95	;'_'
  7824  00ECD6  20                 	db	32
  7825  00ECD7  20                 	db	32
  7826  00ECD8  5F                 	db	95	;'_'
  7827  00ECD9  5F                 	db	95	;'_'
  7828  00ECDA  20                 	db	32
  7829  00ECDB  20                 	db	32
  7830  00ECDC  20                 	db	32
  7831  00ECDD  20                 	db	32
  7832  00ECDE  20                 	db	32
  7833  00ECDF  5F                 	db	95	;'_'
  7834  00ECE0  20                 	db	32
  7835  00ECE1  20                 	db	32
  7836  00ECE2  20                 	db	32
  7837  00ECE3  20                 	db	32
  7838  00ECE4  20                 	db	32
  7839  00ECE5  20                 	db	32
  7840  00ECE6  20                 	db	32
  7841  00ECE7  20                 	db	32
  7842  00ECE8  20                 	db	32
  7843  00ECE9  20                 	db	32
  7844  00ECEA  20                 	db	32
  7845  00ECEB  20                 	db	32
  7846  00ECEC  20                 	db	32
  7847  00ECED  20                 	db	32
  7848  00ECEE  20                 	db	32
  7849  00ECEF  20                 	db	32
  7850  00ECF0  20                 	db	32
  7851  00ECF1  20                 	db	32
  7852  00ECF2  20                 	db	32
  7853  00ECF3  20                 	db	32
  7854  00ECF4  20                 	db	32
  7855  00ECF5  20                 	db	32
  7856  00ECF6  20                 	db	32
  7857  00ECF7  20                 	db	32
  7858  00ECF8  20                 	db	32
  7859  00ECF9  20                 	db	32
  7860  00ECFA  5F                 	db	95	;'_'
  7861  00ECFB  20                 	db	32
  7862  00ECFC  20                 	db	32
  7863  00ECFD  20                 	db	32
  7864  00ECFE  5F                 	db	95	;'_'
  7865  00ECFF  5F                 	db	95	;'_'
  7866  00ED00  5F                 	db	95	;'_'
  7867  00ED01  20                 	db	32
  7868  00ED02  20                 	db	32
  7869  00ED03  5F                 	db	95	;'_'
  7870  00ED04  20                 	db	32
  7871  00ED05  20                 	db	32
  7872  00ED06  20                 	db	32
  7873  00ED07  20                 	db	32
  7874  00ED08  20                 	db	32
  7875  00ED09  20                 	db	32
  7876  00ED0A  0A                 	db	10
  7877  00ED0B  0D                 	db	13
  7878  00ED0C  20                 	db	32
  7879  00ED0D  20                 	db	32
  7880  00ED0E  20                 	db	32
  7881  00ED0F  2F                 	db	47
  7882  00ED10  5F                 	db	95	;'_'
  7883  00ED11  5C                 	db	92	;'\'
  7884  00ED12  20                 	db	32
  7885  00ED13  2F                 	db	47
  7886  00ED14  20                 	db	32
  7887  00ED15  5F                 	db	95	;'_'
  7888  00ED16  5F                 	db	95	;'_'
  7889  00ED17  7C                 	db	124
  7890  00ED18  20                 	db	32
  7891  00ED19  7C                 	db	124
  7892  00ED1A  20                 	db	32
  7893  00ED1B  5F                 	db	95	;'_'
  7894  00ED1C  20                 	db	32
  7895  00ED1D  5C                 	db	92	;'\'
  7896  00ED1E  5F                 	db	95	;'_'
  7897  00ED1F  5F                 	db	95	;'_'
  7898  00ED20  5F                 	db	95	;'_'
  7899  00ED21  5F                 	db	95	;'_'
  7900  00ED22  5F                 	db	95	;'_'
  7901  00ED23  20                 	db	32
  7902  00ED24  5F                 	db	95	;'_'
  7903  00ED25  5F                 	db	95	;'_'
  7904  00ED26  20                 	db	32
  7905  00ED27  5F                 	db	95	;'_'
  7906  00ED28  5F                 	db	95	;'_'
  7907  00ED29  5F                 	db	95	;'_'
  7908  00ED2A  5F                 	db	95	;'_'
  7909  00ED2B  5F                 	db	95	;'_'
  7910  00ED2C  20                 	db	32
  7911  00ED2D  5F                 	db	95	;'_'
  7912  00ED2E  20                 	db	32
  7913  00ED2F  5F                 	db	95	;'_'
  7914  00ED30  20                 	db	32
  7915  00ED31  20                 	db	32
  7916  00ED32  7C                 	db	124
  7917  00ED33  20                 	db	32
  7918  00ED34  20                 	db	32
  7919  00ED35  5C                 	db	92	;'\'
  7920  00ED36  2F                 	db	47
  7921  00ED37  20                 	db	32
  7922  00ED38  20                 	db	32
  7923  00ED39  7C                 	db	124
  7924  00ED3A  5F                 	db	95	;'_'
  7925  00ED3B  5F                 	db	95	;'_'
  7926  00ED3C  5F                 	db	95	;'_'
  7927  00ED3D  7C                 	db	124
  7928  00ED3E  20                 	db	32
  7929  00ED3F  7C                 	db	124
  7930  00ED40  5F                 	db	95	;'_'
  7931  00ED41  20                 	db	32
  7932  00ED42  5F                 	db	95	;'_'
  7933  00ED43  5F                 	db	95	;'_'
  7934  00ED44  5F                 	db	95	;'_'
  7935  00ED45  20                 	db	32
  7936  00ED46  5F                 	db	95	;'_'
  7937  00ED47  20                 	db	32
  7938  00ED48  5F                 	db	95	;'_'
  7939  00ED49  20                 	db	32
  7940  00ED4A  20                 	db	32
  7941  00ED4B  20                 	db	32
  7942  00ED4C  5F                 	db	95	;'_'
  7943  00ED4D  5F                 	db	95	;'_'
  7944  00ED4E  20                 	db	32
  7945  00ED4F  5F                 	db	95	;'_'
  7946  00ED50  20                 	db	32
  7947  00ED51  5F                 	db	95	;'_'
  7948  00ED52  20                 	db	32
  7949  00ED53  5F                 	db	95	;'_'
  7950  00ED54  20                 	db	32
  7951  00ED55  20                 	db	32
  7952  00ED56  5F                 	db	95	;'_'
  7953  00ED57  5F                 	db	95	;'_'
  7954  00ED58  7C                 	db	124
  7955  00ED59  20                 	db	32
  7956  00ED5A  7C                 	db	124
  7957  00ED5B  20                 	db	32
  7958  00ED5C  7C                 	db	124
  7959  00ED5D  20                 	db	32
  7960  00ED5E  20                 	db	32
  7961  00ED5F  20                 	db	32
  7962  00ED60  5C                 	db	92	;'\'
  7963  00ED61  28                 	db	40
  7964  00ED62  5F                 	db	95	;'_'
  7965  00ED63  29                 	db	41
  7966  00ED64  5F                 	db	95	;'_'
  7967  00ED65  20                 	db	32
  7968  00ED66  5F                 	db	95	;'_'
  7969  00ED67  5F                 	db	95	;'_'
  7970  00ED68  20                 	db	32
  7971  00ED69  20                 	db	32
  7972  00ED6A  5F                 	db	95	;'_'
  7973  00ED6B  20                 	db	32
  7974  00ED6C  5F                 	db	95	;'_'
  7975  00ED6D  5F                 	db	95	;'_'
  7976  00ED6E  20                 	db	32
  7977  00ED6F  20                 	db	32
  7978  00ED70  5F                 	db	95	;'_'
  7979  00ED71  5F                 	db	95	;'_'
  7980  00ED72  5F                 	db	95	;'_'
  7981  00ED73  20                 	db	32
  7982  00ED74  5F                 	db	95	;'_'
  7983  00ED75  20                 	db	32
  7984  00ED76  5F                 	db	95	;'_'
  7985  00ED77  20                 	db	32
  7986  00ED78  0A                 	db	10
  7987  00ED79  0D                 	db	13
  7988  00ED7A  20                 	db	32
  7989  00ED7B  20                 	db	32
  7990  00ED7C  2F                 	db	47
  7991  00ED7D  20                 	db	32
  7992  00ED7E  5F                 	db	95	;'_'
  7993  00ED7F  20                 	db	32
  7994  00ED80  5C                 	db	92	;'\'
  7995  00ED81  20                 	db	32
  7996  00ED82  28                 	db	40
  7997  00ED83  5F                 	db	95	;'_'
  7998  00ED84  5F                 	db	95	;'_'
  7999  00ED85  20                 	db	32
  8000  00ED86  20                 	db	32
  8001  00ED87  7C                 	db	124
  8002  00ED88  20                 	db	32
  8003  00ED89  20                 	db	32
  8004  00ED8A  5F                 	db	95	;'_'
  8005  00ED8B  2F                 	db	47
  8006  00ED8C  20                 	db	32
  8007  00ED8D  5F                 	db	95	;'_'
  8008  00ED8E  20                 	db	32
  8009  00ED8F  5C                 	db	92	;'\'
  8010  00ED90  20                 	db	32
  8011  00ED91  56                 	db	86	;'V'
  8012  00ED92  20                 	db	32
  8013  00ED93  20                 	db	32
  8014  00ED94  56                 	db	86	;'V'
  8015  00ED95  20                 	db	32
  8016  00ED96  2F                 	db	47
  8017  00ED97  20                 	db	32
  8018  00ED98  2D                 	db	45
  8019  00ED99  5F                 	db	95	;'_'
  8020  00ED9A  29                 	db	41
  8021  00ED9B  20                 	db	32
  8022  00ED9C  27                 	db	39
  8023  00ED9D  5F                 	db	95	;'_'
  8024  00ED9E  7C                 	db	124
  8025  00ED9F  20                 	db	32
  8026  00EDA0  7C                 	db	124
  8027  00EDA1  20                 	db	32
  8028  00EDA2  7C                 	db	124
  8029  00EDA3  5C                 	db	92	;'\'
  8030  00EDA4  2F                 	db	47
  8031  00EDA5  7C                 	db	124
  8032  00EDA6  20                 	db	32
  8033  00EDA7  2F                 	db	47
  8034  00EDA8  20                 	db	32
  8035  00EDA9  2D                 	db	45
  8036  00EDAA  5F                 	db	95	;'_'
  8037  00EDAB  29                 	db	41
  8038  00EDAC  20                 	db	32
  8039  00EDAD  20                 	db	32
  8040  00EDAE  5F                 	db	95	;'_'
  8041  00EDAF  2F                 	db	47
  8042  00EDB0  20                 	db	32
  8043  00EDB1  2D                 	db	45
  8044  00EDB2  5F                 	db	95	;'_'
  8045  00EDB3  29                 	db	41
  8046  00EDB4  20                 	db	32
  8047  00EDB5  27                 	db	39
  8048  00EDB6  5F                 	db	95	;'_'
  8049  00EDB7  7C                 	db	124
  8050  00EDB8  20                 	db	32
  8051  00EDB9  2F                 	db	47
  8052  00EDBA  20                 	db	32
  8053  00EDBB  5F                 	db	95	;'_'
  8054  00EDBC  60                 	db	96	;'`'
  8055  00EDBD  20                 	db	32
  8056  00EDBE  7C                 	db	124
  8057  00EDBF  20                 	db	32
  8058  00EDC0  27                 	db	39
  8059  00EDC1  20                 	db	32
  8060  00EDC2  5C                 	db	92	;'\'
  8061  00EDC3  2F                 	db	47
  8062  00EDC4  20                 	db	32
  8063  00EDC5  5F                 	db	95	;'_'
  8064  00EDC6  60                 	db	96	;'`'
  8065  00EDC7  20                 	db	32
  8066  00EDC8  7C                 	db	124
  8067  00EDC9  20                 	db	32
  8068  00EDCA  7C                 	db	124
  8069  00EDCB  20                 	db	32
  8070  00EDCC  7C                 	db	124
  8071  00EDCD  29                 	db	41
  8072  00EDCE  20                 	db	32
  8073  00EDCF  7C                 	db	124
  8074  00EDD0  20                 	db	32
  8075  00EDD1  7C                 	db	124
  8076  00EDD2  20                 	db	32
  8077  00EDD3  27                 	db	39
  8078  00EDD4  20                 	db	32
  8079  00EDD5  20                 	db	32
  8080  00EDD6  5C                 	db	92	;'\'
  8081  00EDD7  7C                 	db	124
  8082  00EDD8  20                 	db	32
  8083  00EDD9  27                 	db	39
  8084  00EDDA  20                 	db	32
  8085  00EDDB  20                 	db	32
  8086  00EDDC  5C                 	db	92	;'\'
  8087  00EDDD  2F                 	db	47
  8088  00EDDE  20                 	db	32
  8089  00EDDF  2D                 	db	45
  8090  00EDE0  5F                 	db	95	;'_'
  8091  00EDE1  29                 	db	41
  8092  00EDE2  20                 	db	32
  8093  00EDE3  27                 	db	39
  8094  00EDE4  5F                 	db	95	;'_'
  8095  00EDE5  7C                 	db	124
  8096  00EDE6  0A                 	db	10
  8097  00EDE7  0D                 	db	13
  8098  00EDE8  20                 	db	32
  8099  00EDE9  2F                 	db	47
  8100  00EDEA  5F                 	db	95	;'_'
  8101  00EDEB  2F                 	db	47
  8102  00EDEC  20                 	db	32
  8103  00EDED  5C                 	db	92	;'\'
  8104  00EDEE  5F                 	db	95	;'_'
  8105  00EDEF  5C                 	db	92	;'\'
  8106  00EDF0  5F                 	db	95	;'_'
  8107  00EDF1  5F                 	db	95	;'_'
  8108  00EDF2  5F                 	db	95	;'_'
  8109  00EDF3  7C                 	db	124
  8110  00EDF4  20                 	db	32
  8111  00EDF5  7C                 	db	124
  8112  00EDF6  5F                 	db	95	;'_'
  8113  00EDF7  7C                 	db	124
  8114  00EDF8  20                 	db	32
  8115  00EDF9  5C                 	db	92	;'\'
  8116  00EDFA  5F                 	db	95	;'_'
  8117  00EDFB  5F                 	db	95	;'_'
  8118  00EDFC  5F                 	db	95	;'_'
  8119  00EDFD  2F                 	db	47
  8120  00EDFE  5C                 	db	92	;'\'
  8121  00EDFF  5F                 	db	95	;'_'
  8122  00EE00  2F                 	db	47
  8123  00EE01  5C                 	db	92	;'\'
  8124  00EE02  5F                 	db	95	;'_'
  8125  00EE03  2F                 	db	47
  8126  00EE04  5C                 	db	92	;'\'
  8127  00EE05  5F                 	db	95	;'_'
  8128  00EE06  5F                 	db	95	;'_'
  8129  00EE07  5F                 	db	95	;'_'
  8130  00EE08  7C                 	db	124
  8131  00EE09  5F                 	db	95	;'_'
  8132  00EE0A  7C                 	db	124
  8133  00EE0B  20                 	db	32
  8134  00EE0C  20                 	db	32
  8135  00EE0D  20                 	db	32
  8136  00EE0E  7C                 	db	124
  8137  00EE0F  5F                 	db	95	;'_'
  8138  00EE10  7C                 	db	124
  8139  00EE11  20                 	db	32
  8140  00EE12  20                 	db	32
  8141  00EE13  7C                 	db	124
  8142  00EE14  5F                 	db	95	;'_'
  8143  00EE15  5C                 	db	92	;'\'
  8144  00EE16  5F                 	db	95	;'_'
  8145  00EE17  5F                 	db	95	;'_'
  8146  00EE18  5F                 	db	95	;'_'
  8147  00EE19  7C                 	db	124
  8148  00EE1A  5C                 	db	92	;'\'
  8149  00EE1B  5F                 	db	95	;'_'
  8150  00EE1C  5F                 	db	95	;'_'
  8151  00EE1D  5C                 	db	92	;'\'
  8152  00EE1E  5F                 	db	95	;'_'
  8153  00EE1F  5F                 	db	95	;'_'
  8154  00EE20  5F                 	db	95	;'_'
  8155  00EE21  7C                 	db	124
  8156  00EE22  5F                 	db	95	;'_'
  8157  00EE23  7C                 	db	124
  8158  00EE24  20                 	db	32
  8159  00EE25  20                 	db	32
  8160  00EE26  20                 	db	32
  8161  00EE27  5C                 	db	92	;'\'
  8162  00EE28  5F                 	db	95	;'_'
  8163  00EE29  5F                 	db	95	;'_'
  8164  00EE2A  2C                 	db	44
  8165  00EE2B  5F                 	db	95	;'_'
  8166  00EE2C  7C                 	db	124
  8167  00EE2D  5F                 	db	95	;'_'
  8168  00EE2E  7C                 	db	124
  8169  00EE2F  7C                 	db	124
  8170  00EE30  5F                 	db	95	;'_'
  8171  00EE31  5C                 	db	92	;'\'
  8172  00EE32  5F                 	db	95	;'_'
  8173  00EE33  5F                 	db	95	;'_'
  8174  00EE34  2C                 	db	44
  8175  00EE35  5F                 	db	95	;'_'
  8176  00EE36  7C                 	db	124
  8177  00EE37  20                 	db	32
  8178  00EE38  7C                 	db	124
  8179  00EE39  5F                 	db	95	;'_'
  8180  00EE3A  5F                 	db	95	;'_'
  8181  00EE3B  5F                 	db	95	;'_'
  8182  00EE3C  2F                 	db	47
  8183  00EE3D  7C                 	db	124
  8184  00EE3E  5F                 	db	95	;'_'
  8185  00EE3F  7C                 	db	124
  8186  00EE40  5F                 	db	95	;'_'
  8187  00EE41  7C                 	db	124
  8188  00EE42  5F                 	db	95	;'_'
  8189  00EE43  7C                 	db	124
  8190  00EE44  5F                 	db	95	;'_'
  8191  00EE45  7C                 	db	124
  8192  00EE46  5F                 	db	95	;'_'
  8193  00EE47  7C                 	db	124
  8194  00EE48  5F                 	db	95	;'_'
  8195  00EE49  7C                 	db	124
  8196  00EE4A  5F                 	db	95	;'_'
  8197  00EE4B  5C                 	db	92	;'\'
  8198  00EE4C  5F                 	db	95	;'_'
  8199  00EE4D  5F                 	db	95	;'_'
  8200  00EE4E  5F                 	db	95	;'_'
  8201  00EE4F  7C                 	db	124
  8202  00EE50  5F                 	db	95	;'_'
  8203  00EE51  7C                 	db	124
  8204  00EE52  20                 	db	32
  8205  00EE53  20                 	db	32
  8206  00EE54  0A                 	db	10
  8207  00EE55  0D                 	db	13
  8208  00EE56  00                 	db	0
  8209  00EE57  20                 	db	32
  8210  00EE58  20                 	db	32
  8211  00EE59  20                 	db	32
  8212  00EE5A  20                 	db	32
  8213  00EE5B  42                 	db	66	;'B'
  8214  00EE5C  6F                 	db	111	;'o'
  8215  00EE5D  6F                 	db	111	;'o'
  8216  00EE5E  74                 	db	116	;'t'
  8217  00EE5F  20                 	db	32
  8218  00EE60  63                 	db	99	;'c'
  8219  00EE61  6F                 	db	111	;'o'
  8220  00EE62  6D                 	db	109	;'m'
  8221  00EE63  70                 	db	112	;'p'
  8222  00EE64  6C                 	db	108	;'l'
  8223  00EE65  65                 	db	101	;'e'
  8224  00EE66  74                 	db	116	;'t'
  8225  00EE67  65                 	db	101	;'e'
  8226  00EE68  0A                 	db	10
  8227  00EE69  0D                 	db	13
  8228  00EE6A  20                 	db	32
  8229  00EE6B  20                 	db	32
  8230  00EE6C  20                 	db	32
  8231  00EE6D  20                 	db	32
  8232  00EE6E  50                 	db	80	;'P'
  8233  00EE6F  49                 	db	73	;'I'
  8234  00EE70  43                 	db	67	;'C'
  8235  00EE71  31                 	db	49	;'1'
  8236  00EE72  38                 	db	56	;'8'
  8237  00EE73  46                 	db	70	;'F'
  8238  00EE74  36                 	db	54	;'6'
  8239  00EE75  37                 	db	55	;'7'
  8240  00EE76  4B                 	db	75	;'K'
  8241  00EE77  34                 	db	52	;'4'
  8242  00EE78  30                 	db	48	;'0'
  8243  00EE79  20                 	db	32
  8244  00EE7A  6D                 	db	109	;'m'
  8245  00EE7B  54                 	db	84	;'T'
  8246  00EE7C  6F                 	db	111	;'o'
  8247  00EE7D  75                 	db	117	;'u'
  8248  00EE7E  63                 	db	99	;'c'
  8249  00EE7F  68                 	db	104	;'h'
  8250  00EE80  20                 	db	32
  8251  00EE81  54                 	db	84	;'T'
  8252  00EE82  65                 	db	101	;'e'
  8253  00EE83  73                 	db	115	;'s'
  8254  00EE84  74                 	db	116	;'t'
  8255  00EE85  20                 	db	32
  8256  00EE86  42                 	db	66	;'B'
  8257  00EE87  6F                 	db	111	;'o'
  8258  00EE88  61                 	db	97	;'a'
  8259  00EE89  72                 	db	114	;'r'
  8260  00EE8A  64                 	db	100	;'d'
  8261  00EE8B  0A                 	db	10
  8262  00EE8C  0D                 	db	13
  8263  00EE8D  20                 	db	32
  8264  00EE8E  20                 	db	32
  8265  00EE8F  20                 	db	32
  8266  00EE90  20                 	db	32
  8267  00EE91  45                 	db	69	;'E'
  8268  00EE92  76                 	db	118	;'v'
  8269  00EE93  61                 	db	97	;'a'
  8270  00EE94  6C                 	db	108	;'l'
  8271  00EE95  75                 	db	117	;'u'
  8272  00EE96  61                 	db	97	;'a'
  8273  00EE97  74                 	db	116	;'t'
  8274  00EE98  65                 	db	101	;'e'
  8275  00EE99  73                 	db	115	;'s'
  8276  00EE9A  20                 	db	32
  8277  00EE9B  74                 	db	116	;'t'
  8278  00EE9C  68                 	db	104	;'h'
  8279  00EE9D  65                 	db	101	;'e'
  8280  00EE9E  20                 	db	32
  8281  00EE9F  6D                 	db	109	;'m'
  8282  00EEA0  54                 	db	84	;'T'
  8283  00EEA1  6F                 	db	111	;'o'
  8284  00EEA2  75                 	db	117	;'u'
  8285  00EEA3  63                 	db	99	;'c'
  8286  00EEA4  68                 	db	104	;'h'
  8287  00EEA5  20                 	db	32
  8288  00EEA6  63                 	db	99	;'c'
  8289  00EEA7  61                 	db	97	;'a'
  8290  00EEA8  70                 	db	112	;'p'
  8291  00EEA9  61                 	db	97	;'a'
  8292  00EEAA  63                 	db	99	;'c'
  8293  00EEAB  69                 	db	105	;'i'
  8294  00EEAC  74                 	db	116	;'t'
  8295  00EEAD  69                 	db	105	;'i'
  8296  00EEAE  76                 	db	118	;'v'
  8297  00EEAF  65                 	db	101	;'e'
  8298  00EEB0  20                 	db	32
  8299  00EEB1  74                 	db	116	;'t'
  8300  00EEB2  6F                 	db	111	;'o'
  8301  00EEB3  75                 	db	117	;'u'
  8302  00EEB4  63                 	db	99	;'c'
  8303  00EEB5  68                 	db	104	;'h'
  8304  00EEB6  20                 	db	32
  8305  00EEB7  6C                 	db	108	;'l'
  8306  00EEB8  69                 	db	105	;'i'
  8307  00EEB9  62                 	db	98	;'b'
  8308  00EEBA  72                 	db	114	;'r'
  8309  00EEBB  61                 	db	97	;'a'
  8310  00EEBC  72                 	db	114	;'r'
  8311  00EEBD  79                 	db	121	;'y'
  8312  00EEBE  20                 	db	32
  8313  00EEBF  64                 	db	100	;'d'
  8314  00EEC0  69                 	db	105	;'i'
  8315  00EEC1  73                 	db	115	;'s'
  8316  00EEC2  74                 	db	116	;'t'
  8317  00EEC3  72                 	db	114	;'r'
  8318  00EEC4  69                 	db	105	;'i'
  8319  00EEC5  62                 	db	98	;'b'
  8320  00EEC6  75                 	db	117	;'u'
  8321  00EEC7  74                 	db	116	;'t'
  8322  00EEC8  65                 	db	101	;'e'
  8323  00EEC9  64                 	db	100	;'d'
  8324  00EECA  20                 	db	32
  8325  00EECB  62                 	db	98	;'b'
  8326  00EECC  79                 	db	121	;'y'
  8327  00EECD  20                 	db	32
  8328  00EECE  4D                 	db	77	;'M'
  8329  00EECF  69                 	db	105	;'i'
  8330  00EED0  63                 	db	99	;'c'
  8331  00EED1  72                 	db	114	;'r'
  8332  00EED2  6F                 	db	111	;'o'
  8333  00EED3  63                 	db	99	;'c'
  8334  00EED4  68                 	db	104	;'h'
  8335  00EED5  69                 	db	105	;'i'
  8336  00EED6  70                 	db	112	;'p'
  8337  00EED7  0A                 	db	10
  8338  00EED8  0D                 	db	13
  8339  00EED9  20                 	db	32
  8340  00EEDA  20                 	db	32
  8341  00EEDB  20                 	db	32
  8342  00EEDC  20                 	db	32
  8343  00EEDD  53                 	db	83	;'S'
  8344  00EEDE  65                 	db	101	;'e'
  8345  00EEDF  74                 	db	116	;'t'
  8346  00EEE0  73                 	db	115	;'s'
  8347  00EEE1  20                 	db	32
  8348  00EEE2  74                 	db	116	;'t'
  8349  00EEE3  68                 	db	104	;'h'
  8350  00EEE4  65                 	db	101	;'e'
  8351  00EEE5  20                 	db	32
  8352  00EEE6  73                 	db	115	;'s'
  8353  00EEE7  74                 	db	116	;'t'
  8354  00EEE8  61                 	db	97	;'a'
  8355  00EEE9  74                 	db	116	;'t'
  8356  00EEEA  65                 	db	101	;'e'
  8357  00EEEB  20                 	db	32
  8358  00EEEC  6F                 	db	111	;'o'
  8359  00EEED  66                 	db	102	;'f'
  8360  00EEEE  20                 	db	32
  8361  00EEEF  66                 	db	102	;'f'
  8362  00EEF0  69                 	db	105	;'i'
  8363  00EEF1  76                 	db	118	;'v'
  8364  00EEF2  65                 	db	101	;'e'
  8365  00EEF3  20                 	db	32
  8366  00EEF4  4C                 	db	76	;'L'
  8367  00EEF5  45                 	db	69	;'E'
  8368  00EEF6  44                 	db	68	;'D'
  8369  00EEF7  73                 	db	115	;'s'
  8370  00EEF8  20                 	db	32
  8371  00EEF9  62                 	db	98	;'b'
  8372  00EEFA  61                 	db	97	;'a'
  8373  00EEFB  73                 	db	115	;'s'
  8374  00EEFC  65                 	db	101	;'e'
  8375  00EEFD  64                 	db	100	;'d'
  8376  00EEFE  20                 	db	32
  8377  00EEFF  6F                 	db	111	;'o'
  8378  00EF00  6E                 	db	110	;'n'
  8379  00EF01  20                 	db	32
  8380  00EF02  6D                 	db	109	;'m'
  8381  00EF03  54                 	db	84	;'T'
  8382  00EF04  6F                 	db	111	;'o'
  8383  00EF05  75                 	db	117	;'u'
  8384  00EF06  63                 	db	99	;'c'
  8385  00EF07  68                 	db	104	;'h'
  8386  00EF08  20                 	db	32
  8387  00EF09  63                 	db	99	;'c'
  8388  00EF0A  61                 	db	97	;'a'
  8389  00EF0B  70                 	db	112	;'p'
  8390  00EF0C  61                 	db	97	;'a'
  8391  00EF0D  63                 	db	99	;'c'
  8392  00EF0E  69                 	db	105	;'i'
  8393  00EF0F  74                 	db	116	;'t'
  8394  00EF10  69                 	db	105	;'i'
  8395  00EF11  76                 	db	118	;'v'
  8396  00EF12  65                 	db	101	;'e'
  8397  00EF13  20                 	db	32
  8398  00EF14  70                 	db	112	;'p'
  8399  00EF15  75                 	db	117	;'u'
  8400  00EF16  73                 	db	115	;'s'
  8401  00EF17  68                 	db	104	;'h'
  8402  00EF18  62                 	db	98	;'b'
  8403  00EF19  75                 	db	117	;'u'
  8404  00EF1A  74                 	db	116	;'t'
  8405  00EF1B  74                 	db	116	;'t'
  8406  00EF1C  6F                 	db	111	;'o'
  8407  00EF1D  6E                 	db	110	;'n'
  8408  00EF1E  73                 	db	115	;'s'
  8409  00EF1F  0A                 	db	10
  8410  00EF20  0D                 	db	13
  8411  00EF21  20                 	db	32
  8412  00EF22  20                 	db	32
  8413  00EF23  20                 	db	32
  8414  00EF24  20                 	db	32
  8415  00EF25  42                 	db	66	;'B'
  8416  00EF26  61                 	db	97	;'a'
  8417  00EF27  75                 	db	117	;'u'
  8418  00EF28  64                 	db	100	;'d'
  8419  00EF29  20                 	db	32
  8420  00EF2A  72                 	db	114	;'r'
  8421  00EF2B  61                 	db	97	;'a'
  8422  00EF2C  74                 	db	116	;'t'
  8423  00EF2D  65                 	db	101	;'e'
  8424  00EF2E  3A                 	db	58	;':'
  8425  00EF2F  20                 	db	32
  8426  00EF30  31                 	db	49	;'1'
  8427  00EF31  31                 	db	49	;'1'
  8428  00EF32  35                 	db	53	;'5'
  8429  00EF33  32                 	db	50	;'2'
  8430  00EF34  30                 	db	48	;'0'
  8431  00EF35  30                 	db	48	;'0'
  8432  00EF36  20                 	db	32
  8433  00EF37  62                 	db	98	;'b'
  8434  00EF38  70                 	db	112	;'p'
  8435  00EF39  73                 	db	115	;'s'
  8436  00EF3A  0A                 	db	10
  8437  00EF3B  0D                 	db	13
  8438  00EF3C  20                 	db	32
  8439  00EF3D  20                 	db	32
  8440  00EF3E  20                 	db	32
  8441  00EF3F  20                 	db	32
  8442  00EF40  4E                 	db	78	;'N'
  8443  00EF41  6F                 	db	111	;'o'
  8444  00EF42  20                 	db	32
  8445  00EF43  70                 	db	112	;'p'
  8446  00EF44  61                 	db	97	;'a'
  8447  00EF45  72                 	db	114	;'r'
  8448  00EF46  69                 	db	105	;'i'
  8449  00EF47  74                 	db	116	;'t'
  8450  00EF48  79                 	db	121	;'y'
  8451  00EF49  2C                 	db	44
  8452  00EF4A  20                 	db	32
  8453  00EF4B  38                 	db	56	;'8'
  8454  00EF4C  20                 	db	32
  8455  00EF4D  62                 	db	98	;'b'
  8456  00EF4E  69                 	db	105	;'i'
  8457  00EF4F  74                 	db	116	;'t'
  8458  00EF50  73                 	db	115	;'s'
  8459  00EF51  2C                 	db	44
  8460  00EF52  20                 	db	32
  8461  00EF53  6E                 	db	110	;'n'
  8462  00EF54  6F                 	db	111	;'o'
  8463  00EF55  20                 	db	32
  8464  00EF56  66                 	db	102	;'f'
  8465  00EF57  6C                 	db	108	;'l'
  8466  00EF58  6F                 	db	111	;'o'
  8467  00EF59  77                 	db	119	;'w'
  8468  00EF5A  20                 	db	32
  8469  00EF5B  63                 	db	99	;'c'
  8470  00EF5C  6F                 	db	111	;'o'
  8471  00EF5D  6E                 	db	110	;'n'
  8472  00EF5E  74                 	db	116	;'t'
  8473  00EF5F  72                 	db	114	;'r'
  8474  00EF60  6F                 	db	111	;'o'
  8475  00EF61  6C                 	db	108	;'l'
  8476  00EF62  2C                 	db	44
  8477  00EF63  20                 	db	32
  8478  00EF64  31                 	db	49	;'1'
  8479  00EF65  20                 	db	32
  8480  00EF66  73                 	db	115	;'s'
  8481  00EF67  74                 	db	116	;'t'
  8482  00EF68  6F                 	db	111	;'o'
  8483  00EF69  70                 	db	112	;'p'
  8484  00EF6A  20                 	db	32
  8485  00EF6B  62                 	db	98	;'b'
  8486  00EF6C  69                 	db	105	;'i'
  8487  00EF6D  74                 	db	116	;'t'
  8488  00EF6E  0A                 	db	10
  8489  00EF6F  0D                 	db	13
  8490  00EF70  20                 	db	32
  8491  00EF71  20                 	db	32
  8492  00EF72  20                 	db	32
  8493  00EF73  20                 	db	32
  8494  00EF74  43                 	db	67	;'C'
  8495  00EF75  6F                 	db	111	;'o'
  8496  00EF76  6D                 	db	109	;'m'
  8497  00EF77  6D                 	db	109	;'m'
  8498  00EF78  61                 	db	97	;'a'
  8499  00EF79  6E                 	db	110	;'n'
  8500  00EF7A  64                 	db	100	;'d'
  8501  00EF7B  73                 	db	115	;'s'
  8502  00EF7C  20                 	db	32
  8503  00EF7D  61                 	db	97	;'a'
  8504  00EF7E  72                 	db	114	;'r'
  8505  00EF7F  65                 	db	101	;'e'
  8506  00EF80  20                 	db	32
  8507  00EF81  63                 	db	99	;'c'
  8508  00EF82  61                 	db	97	;'a'
  8509  00EF83  73                 	db	115	;'s'
  8510  00EF84  65                 	db	101	;'e'
  8511  00EF85  20                 	db	32
  8512  00EF86  73                 	db	115	;'s'
  8513  00EF87  65                 	db	101	;'e'
  8514  00EF88  6E                 	db	110	;'n'
  8515  00EF89  73                 	db	115	;'s'
  8516  00EF8A  69                 	db	105	;'i'
  8517  00EF8B  74                 	db	116	;'t'
  8518  00EF8C  69                 	db	105	;'i'
  8519  00EF8D  76                 	db	118	;'v'
  8520  00EF8E  65                 	db	101	;'e'
  8521  00EF8F  0A                 	db	10
  8522  00EF90  0D                 	db	13
  8523  00EF91  20                 	db	32
  8524  00EF92  20                 	db	32
  8525  00EF93  20                 	db	32
  8526  00EF94  20                 	db	32
  8527  00EF95  45                 	db	69	;'E'
  8528  00EF96  6E                 	db	110	;'n'
  8529  00EF97  74                 	db	116	;'t'
  8530  00EF98  65                 	db	101	;'e'
  8531  00EF99  72                 	db	114	;'r'
  8532  00EF9A  20                 	db	32
  8533  00EF9B  61                 	db	97	;'a'
  8534  00EF9C  20                 	db	32
  8535  00EF9D  63                 	db	99	;'c'
  8536  00EF9E  6F                 	db	111	;'o'
  8537  00EF9F  6D                 	db	109	;'m'
  8538  00EFA0  6D                 	db	109	;'m'
  8539  00EFA1  61                 	db	97	;'a'
  8540  00EFA2  6E                 	db	110	;'n'
  8541  00EFA3  64                 	db	100	;'d'
  8542  00EFA4  2C                 	db	44
  8543  00EFA5  20                 	db	32
  8544  00EFA6  6F                 	db	111	;'o'
  8545  00EFA7  72                 	db	114	;'r'
  8546  00EFA8  20                 	db	32
  8547  00EFA9  65                 	db	101	;'e'
  8548  00EFAA  6E                 	db	110	;'n'
  8549  00EFAB  74                 	db	116	;'t'
  8550  00EFAC  65                 	db	101	;'e'
  8551  00EFAD  72                 	db	114	;'r'
  8552  00EFAE  20                 	db	32
  8553  00EFAF  48                 	db	72	;'H'
  8554  00EFB0  65                 	db	101	;'e'
  8555  00EFB1  6C                 	db	108	;'l'
  8556  00EFB2  70                 	db	112	;'p'
  8557  00EFB3  20                 	db	32
  8558  00EFB4  66                 	db	102	;'f'
  8559  00EFB5  6F                 	db	111	;'o'
  8560  00EFB6  72                 	db	114	;'r'
  8561  00EFB7  20                 	db	32
  8562  00EFB8  6C                 	db	108	;'l'
  8563  00EFB9  69                 	db	105	;'i'
  8564  00EFBA  73                 	db	115	;'s'
  8565  00EFBB  74                 	db	116	;'t'
  8566  00EFBC  20                 	db	32
  8567  00EFBD  6F                 	db	111	;'o'
  8568  00EFBE  66                 	db	102	;'f'
  8569  00EFBF  20                 	db	32
  8570  00EFC0  63                 	db	99	;'c'
  8571  00EFC1  6F                 	db	111	;'o'
  8572  00EFC2  6D                 	db	109	;'m'
  8573  00EFC3  6D                 	db	109	;'m'
  8574  00EFC4  61                 	db	97	;'a'
  8575  00EFC5  6E                 	db	110	;'n'
  8576  00EFC6  64                 	db	100	;'d'
  8577  00EFC7  73                 	db	115	;'s'
  8578  00EFC8  0A                 	db	10
  8579  00EFC9  0D                 	db	13
  8580  00EFCA  00                 	db	0
  8581  00EFCB                     STR_106:
  8582  00EFCB  57                 	db	87	;'W'
  8583  00EFCC  41                 	db	65	;'A'
  8584  00EFCD  52                 	db	82	;'R'
  8585  00EFCE  4E                 	db	78	;'N'
  8586  00EFCF  49                 	db	73	;'I'
  8587  00EFD0  4E                 	db	78	;'N'
  8588  00EFD1  47                 	db	71	;'G'
  8589  00EFD2  3A                 	db	58	;':'
  8590  00EFD3  20                 	db	32
  8591  00EFD4  55                 	db	85	;'U'
  8592  00EFD5  73                 	db	115	;'s'
  8593  00EFD6  69                 	db	105	;'i'
  8594  00EFD7  6E                 	db	110	;'n'
  8595  00EFD8  67                 	db	103	;'g'
  8596  00EFD9  20                 	db	32
  8597  00EFDA  74                 	db	116	;'t'
  8598  00EFDB  68                 	db	104	;'h'
  8599  00EFDC  65                 	db	101	;'e'
  8600  00EFDD  20                 	db	32
  8601  00EFDE  64                 	db	100	;'d'
  8602  00EFDF  69                 	db	105	;'i'
  8603  00EFE0  6D                 	db	109	;'m'
  8604  00EFE1  6D                 	db	109	;'m'
  8605  00EFE2  69                 	db	105	;'i'
  8606  00EFE3  6E                 	db	110	;'n'
  8607  00EFE4  67                 	db	103	;'g'
  8608  00EFE5  20                 	db	32
  8609  00EFE6  66                 	db	102	;'f'
  8610  00EFE7  65                 	db	101	;'e'
  8611  00EFE8  61                 	db	97	;'a'
  8612  00EFE9  74                 	db	116	;'t'
  8613  00EFEA  75                 	db	117	;'u'
  8614  00EFEB  72                 	db	114	;'r'
  8615  00EFEC  65                 	db	101	;'e'
  8616  00EFED  20                 	db	32
  8617  00EFEE  77                 	db	119	;'w'
  8618  00EFEF  69                 	db	105	;'i'
  8619  00EFF0  74                 	db	116	;'t'
  8620  00EFF1  68                 	db	104	;'h'
  8621  00EFF2  20                 	db	32
  8622  00EFF3  6C                 	db	108	;'l'
  8623  00EFF4  6F                 	db	111	;'o'
  8624  00EFF5  61                 	db	97	;'a'
  8625  00EFF6  64                 	db	100	;'d'
  8626  00EFF7  20                 	db	32
  8627  00EFF8  64                 	db	100	;'d'
  8628  00EFF9  65                 	db	101	;'e'
  8629  00EFFA  76                 	db	118	;'v'
  8630  00EFFB  69                 	db	105	;'i'
  8631  00EFFC  63                 	db	99	;'c'
  8632  00EFFD  65                 	db	101	;'e'
  8633  00EFFE  73                 	db	115	;'s'
  8634  00EFFF  20                 	db	32
  8635  00F000  6F                 	db	111	;'o'
  8636  00F001  74                 	db	116	;'t'
  8637  00F002  68                 	db	104	;'h'
  8638  00F003  65                 	db	101	;'e'
  8639  00F004  72                 	db	114	;'r'
  8640  00F005  20                 	db	32
  8641  00F006  74                 	db	116	;'t'
  8642  00F007  68                 	db	104	;'h'
  8643  00F008  61                 	db	97	;'a'
  8644  00F009  6E                 	db	110	;'n'
  8645  00F00A  20                 	db	32
  8646  00F00B  61                 	db	97	;'a'
  8647  00F00C  20                 	db	32
  8648  00F00D  6C                 	db	108	;'l'
  8649  00F00E  69                 	db	105	;'i'
  8650  00F00F  67                 	db	103	;'g'
  8651  00F010  68                 	db	104	;'h'
  8652  00F011  74                 	db	116	;'t'
  8653  00F012  20                 	db	32
  8654  00F013  62                 	db	98	;'b'
  8655  00F014  75                 	db	117	;'u'
  8656  00F015  6C                 	db	108	;'l'
  8657  00F016  62                 	db	98	;'b'
  8658  00F017  20                 	db	32
  8659  00F018  63                 	db	99	;'c'
  8660  00F019  61                 	db	97	;'a'
  8661  00F01A  6E                 	db	110	;'n'
  8662  00F01B  20                 	db	32
  8663  00F01C  72                 	db	114	;'r'
  8664  00F01D  65                 	db	101	;'e'
  8665  00F01E  73                 	db	115	;'s'
  8666  00F01F  75                 	db	117	;'u'
  8667  00F020  6C                 	db	108	;'l'
  8668  00F021  74                 	db	116	;'t'
  8669  00F022  20                 	db	32
  8670  00F023  69                 	db	105	;'i'
  8671  00F024  6E                 	db	110	;'n'
  8672  00F025  20                 	db	32
  8673  00F026  64                 	db	100	;'d'
  8674  00F027  65                 	db	101	;'e'
  8675  00F028  76                 	db	118	;'v'
  8676  00F029  69                 	db	105	;'i'
  8677  00F02A  63                 	db	99	;'c'
  8678  00F02B  65                 	db	101	;'e'
  8679  00F02C  20                 	db	32
  8680  00F02D  64                 	db	100	;'d'
  8681  00F02E  61                 	db	97	;'a'
  8682  00F02F  6D                 	db	109	;'m'
  8683  00F030  61                 	db	97	;'a'
  8684  00F031  67                 	db	103	;'g'
  8685  00F032  65                 	db	101	;'e'
  8686  00F033  00                 	db	0
  8687  00F034                     STR_107:
  8688  00F034  4F                 	db	79	;'O'
  8689  00F035  6E                 	db	110	;'n'
  8690  00F036  6C                 	db	108	;'l'
  8691  00F037  79                 	db	121	;'y'
  8692  00F038  20                 	db	32
  8693  00F039  65                 	db	101	;'e'
  8694  00F03A  6E                 	db	110	;'n'
  8695  00F03B  61                 	db	97	;'a'
  8696  00F03C  62                 	db	98	;'b'
  8697  00F03D  6C                 	db	108	;'l'
  8698  00F03E  65                 	db	101	;'e'
  8699  00F03F  20                 	db	32
  8700  00F040  64                 	db	100	;'d'
  8701  00F041  69                 	db	105	;'i'
  8702  00F042  6D                 	db	109	;'m'
  8703  00F043  6D                 	db	109	;'m'
  8704  00F044  69                 	db	105	;'i'
  8705  00F045  6E                 	db	110	;'n'
  8706  00F046  67                 	db	103	;'g'
  8707  00F047  20                 	db	32
  8708  00F048  69                 	db	105	;'i'
  8709  00F049  66                 	db	102	;'f'
  8710  00F04A  20                 	db	32
  8711  00F04B  79                 	db	121	;'y'
  8712  00F04C  6F                 	db	111	;'o'
  8713  00F04D  75                 	db	117	;'u'
  8714  00F04E  20                 	db	32
  8715  00F04F  61                 	db	97	;'a'
  8716  00F050  72                 	db	114	;'r'
  8717  00F051  65                 	db	101	;'e'
  8718  00F052  20                 	db	32
  8719  00F053  63                 	db	99	;'c'
  8720  00F054  6F                 	db	111	;'o'
  8721  00F055  6D                 	db	109	;'m'
  8722  00F056  70                 	db	112	;'p'
  8723  00F057  6C                 	db	108	;'l'
  8724  00F058  65                 	db	101	;'e'
  8725  00F059  74                 	db	116	;'t'
  8726  00F05A  65                 	db	101	;'e'
  8727  00F05B  6C                 	db	108	;'l'
  8728  00F05C  79                 	db	121	;'y'
  8729  00F05D  20                 	db	32
  8730  00F05E  73                 	db	115	;'s'
  8731  00F05F  75                 	db	117	;'u'
  8732  00F060  72                 	db	114	;'r'
  8733  00F061  65                 	db	101	;'e'
  8734  00F062  20                 	db	32
  8735  00F063  74                 	db	116	;'t'
  8736  00F064  68                 	db	104	;'h'
  8737  00F065  65                 	db	101	;'e'
  8738  00F066  20                 	db	32
  8739  00F067  6C                 	db	108	;'l'
  8740  00F068  6F                 	db	111	;'o'
  8741  00F069  61                 	db	97	;'a'
  8742  00F06A  64                 	db	100	;'d'
  8743  00F06B  20                 	db	32
  8744  00F06C  69                 	db	105	;'i'
  8745  00F06D  73                 	db	115	;'s'
  8746  00F06E  20                 	db	32
  8747  00F06F  63                 	db	99	;'c'
  8748  00F070  6F                 	db	111	;'o'
  8749  00F071  6D                 	db	109	;'m'
  8750  00F072  70                 	db	112	;'p'
  8751  00F073  61                 	db	97	;'a'
  8752  00F074  74                 	db	116	;'t'
  8753  00F075  69                 	db	105	;'i'
  8754  00F076  62                 	db	98	;'b'
  8755  00F077  6C                 	db	108	;'l'
  8756  00F078  65                 	db	101	;'e'
  8757  00F079  20                 	db	32
  8758  00F07A  77                 	db	119	;'w'
  8759  00F07B  69                 	db	105	;'i'
  8760  00F07C  74                 	db	116	;'t'
  8761  00F07D  68                 	db	104	;'h'
  8762  00F07E  20                 	db	32
  8763  00F07F  61                 	db	97	;'a'
  8764  00F080  20                 	db	32
  8765  00F081  73                 	db	115	;'s'
  8766  00F082  6F                 	db	111	;'o'
  8767  00F083  6C                 	db	108	;'l'
  8768  00F084  69                 	db	105	;'i'
  8769  00F085  64                 	db	100	;'d'
  8770  00F086  20                 	db	32
  8771  00F087  73                 	db	115	;'s'
  8772  00F088  74                 	db	116	;'t'
  8773  00F089  61                 	db	97	;'a'
  8774  00F08A  74                 	db	116	;'t'
  8775  00F08B  65                 	db	101	;'e'
  8776  00F08C  20                 	db	32
  8777  00F08D  64                 	db	100	;'d'
  8778  00F08E  69                 	db	105	;'i'
  8779  00F08F  6D                 	db	109	;'m'
  8780  00F090  6D                 	db	109	;'m'
  8781  00F091  69                 	db	105	;'i'
  8782  00F092  6E                 	db	110	;'n'
  8783  00F093  67                 	db	103	;'g'
  8784  00F094  20                 	db	32
  8785  00F095  63                 	db	99	;'c'
  8786  00F096  69                 	db	105	;'i'
  8787  00F097  72                 	db	114	;'r'
  8788  00F098  63                 	db	99	;'c'
  8789  00F099  75                 	db	117	;'u'
  8790  00F09A  69                 	db	105	;'i'
  8791  00F09B  74                 	db	116	;'t'
  8792  00F09C  00                 	db	0
  8793  00F09D                     STR_127:
  8794  00F09D  49                 	db	73	;'I'
  8795  00F09E  66                 	db	102	;'f'
  8796  00F09F  20                 	db	32
  8797  00F0A0  79                 	db	121	;'y'
  8798  00F0A1  6F                 	db	111	;'o'
  8799  00F0A2  75                 	db	117	;'u'
  8800  00F0A3  27                 	db	39
  8801  00F0A4  64                 	db	100	;'d'
  8802  00F0A5  20                 	db	32
  8803  00F0A6  6C                 	db	108	;'l'
  8804  00F0A7  69                 	db	105	;'i'
  8805  00F0A8  6B                 	db	107	;'k'
  8806  00F0A9  65                 	db	101	;'e'
  8807  00F0AA  20                 	db	32
  8808  00F0AB  74                 	db	116	;'t'
  8809  00F0AC  6F                 	db	111	;'o'
  8810  00F0AD  20                 	db	32
  8811  00F0AE  63                 	db	99	;'c'
  8812  00F0AF  6F                 	db	111	;'o'
  8813  00F0B0  6D                 	db	109	;'m'
  8814  00F0B1  70                 	db	112	;'p'
  8815  00F0B2  6C                 	db	108	;'l'
  8816  00F0B3  65                 	db	101	;'e'
  8817  00F0B4  74                 	db	116	;'t'
  8818  00F0B5  65                 	db	101	;'e'
  8819  00F0B6  6C                 	db	108	;'l'
  8820  00F0B7  79                 	db	121	;'y'
  8821  00F0B8  20                 	db	32
  8822  00F0B9  65                 	db	101	;'e'
  8823  00F0BA  6E                 	db	110	;'n'
  8824  00F0BB  61                 	db	97	;'a'
  8825  00F0BC  62                 	db	98	;'b'
  8826  00F0BD  6C                 	db	108	;'l'
  8827  00F0BE  65                 	db	101	;'e'
  8828  00F0BF  20                 	db	32
  8829  00F0C0  6F                 	db	111	;'o'
  8830  00F0C1  72                 	db	114	;'r'
  8831  00F0C2  20                 	db	32
  8832  00F0C3  64                 	db	100	;'d'
  8833  00F0C4  69                 	db	105	;'i'
  8834  00F0C5  73                 	db	115	;'s'
  8835  00F0C6  61                 	db	97	;'a'
  8836  00F0C7  62                 	db	98	;'b'
  8837  00F0C8  6C                 	db	108	;'l'
  8838  00F0C9  65                 	db	101	;'e'
  8839  00F0CA  20                 	db	32
  8840  00F0CB  74                 	db	116	;'t'
  8841  00F0CC  68                 	db	104	;'h'
  8842  00F0CD  65                 	db	101	;'e'
  8843  00F0CE  20                 	db	32
  8844  00F0CF  6C                 	db	108	;'l'
  8845  00F0D0  6F                 	db	111	;'o'
  8846  00F0D1  61                 	db	97	;'a'
  8847  00F0D2  64                 	db	100	;'d'
  8848  00F0D3  2C                 	db	44
  8849  00F0D4  20                 	db	32
  8850  00F0D5  64                 	db	100	;'d'
  8851  00F0D6  69                 	db	105	;'i'
  8852  00F0D7  73                 	db	115	;'s'
  8853  00F0D8  61                 	db	97	;'a'
  8854  00F0D9  62                 	db	98	;'b'
  8855  00F0DA  6C                 	db	108	;'l'
  8856  00F0DB  65                 	db	101	;'e'
  8857  00F0DC  20                 	db	32
  8858  00F0DD  64                 	db	100	;'d'
  8859  00F0DE  69                 	db	105	;'i'
  8860  00F0DF  6D                 	db	109	;'m'
  8861  00F0E0  6D                 	db	109	;'m'
  8862  00F0E1  69                 	db	105	;'i'
  8863  00F0E2  6E                 	db	110	;'n'
  8864  00F0E3  67                 	db	103	;'g'
  8865  00F0E4  20                 	db	32
  8866  00F0E5  61                 	db	97	;'a'
  8867  00F0E6  6E                 	db	110	;'n'
  8868  00F0E7  64                 	db	100	;'d'
  8869  00F0E8  20                 	db	32
  8870  00F0E9  75                 	db	117	;'u'
  8871  00F0EA  73                 	db	115	;'s'
  8872  00F0EB  65                 	db	101	;'e'
  8873  00F0EC  20                 	db	32
  8874  00F0ED  72                 	db	114	;'r'
  8875  00F0EE  65                 	db	101	;'e'
  8876  00F0EF  73                 	db	115	;'s'
  8877  00F0F0  70                 	db	112	;'p'
  8878  00F0F1  65                 	db	101	;'e'
  8879  00F0F2  63                 	db	99	;'c'
  8880  00F0F3  74                 	db	116	;'t'
  8881  00F0F4  69                 	db	105	;'i'
  8882  00F0F5  76                 	db	118	;'v'
  8883  00F0F6  65                 	db	101	;'e'
  8884  00F0F7  20                 	db	32
  8885  00F0F8  63                 	db	99	;'c'
  8886  00F0F9  6F                 	db	111	;'o'
  8887  00F0FA  6D                 	db	109	;'m'
  8888  00F0FB  6D                 	db	109	;'m'
  8889  00F0FC  61                 	db	97	;'a'
  8890  00F0FD  6E                 	db	110	;'n'
  8891  00F0FE  64                 	db	100	;'d'
  8892  00F0FF  73                 	db	115	;'s'
  8893  00F100  0A                 	db	10
  8894  00F101  0D                 	db	13
  8895  00F102  00                 	db	0
  8896  00F103                     STR_79:
  8897  00F103  54                 	db	84	;'T'
  8898  00F104  68                 	db	104	;'h'
  8899  00F105  69                 	db	105	;'i'
  8900  00F106  73                 	db	115	;'s'
  8901  00F107  20                 	db	32
  8902  00F108  63                 	db	99	;'c'
  8903  00F109  6F                 	db	111	;'o'
  8904  00F10A  75                 	db	117	;'u'
  8905  00F10B  6C                 	db	108	;'l'
  8906  00F10C  64                 	db	100	;'d'
  8907  00F10D  20                 	db	32
  8908  00F10E  68                 	db	104	;'h'
  8909  00F10F  61                 	db	97	;'a'
  8910  00F110  76                 	db	118	;'v'
  8911  00F111  65                 	db	101	;'e'
  8912  00F112  20                 	db	32
  8913  00F113  62                 	db	98	;'b'
  8914  00F114  65                 	db	101	;'e'
  8915  00F115  65                 	db	101	;'e'
  8916  00F116  6E                 	db	110	;'n'
  8917  00F117  20                 	db	32
  8918  00F118  63                 	db	99	;'c'
  8919  00F119  61                 	db	97	;'a'
  8920  00F11A  75                 	db	117	;'u'
  8921  00F11B  73                 	db	115	;'s'
  8922  00F11C  65                 	db	101	;'e'
  8923  00F11D  64                 	db	100	;'d'
  8924  00F11E  20                 	db	32
  8925  00F11F  62                 	db	98	;'b'
  8926  00F120  79                 	db	121	;'y'
  8927  00F121  20                 	db	32
  8928  00F122  55                 	db	85	;'U'
  8929  00F123  41                 	db	65	;'A'
  8930  00F124  52                 	db	82	;'R'
  8931  00F125  54                 	db	84	;'T'
  8932  00F126  20                 	db	32
  8933  00F127  28                 	db	40
  8934  00F128  74                 	db	116	;'t'
  8935  00F129  68                 	db	104	;'h'
  8936  00F12A  69                 	db	105	;'i'
  8937  00F12B  73                 	db	115	;'s'
  8938  00F12C  20                 	db	32
  8939  00F12D  69                 	db	105	;'i'
  8940  00F12E  6E                 	db	110	;'n'
  8941  00F12F  74                 	db	116	;'t'
  8942  00F130  65                 	db	101	;'e'
  8943  00F131  72                 	db	114	;'r'
  8944  00F132  66                 	db	102	;'f'
  8945  00F133  61                 	db	97	;'a'
  8946  00F134  63                 	db	99	;'c'
  8947  00F135  65                 	db	101	;'e'
  8948  00F136  29                 	db	41
  8949  00F137  20                 	db	32
  8950  00F138  6F                 	db	111	;'o'
  8951  00F139  72                 	db	114	;'r'
  8952  00F13A  20                 	db	32
  8953  00F13B  49                 	db	73	;'I'
  8954  00F13C  32                 	db	50	;'2'
  8955  00F13D  43                 	db	67	;'C'
  8956  00F13E  20                 	db	32
  8957  00F13F  28                 	db	40
  8958  00F140  4F                 	db	79	;'O'
  8959  00F141  4C                 	db	76	;'L'
  8960  00F142  45                 	db	69	;'E'
  8961  00F143  44                 	db	68	;'D'
  8962  00F144  20                 	db	32
  8963  00F145  64                 	db	100	;'d'
  8964  00F146  69                 	db	105	;'i'
  8965  00F147  73                 	db	115	;'s'
  8966  00F148  70                 	db	112	;'p'
  8967  00F149  6C                 	db	108	;'l'
  8968  00F14A  61                 	db	97	;'a'
  8969  00F14B  79                 	db	121	;'y'
  8970  00F14C  20                 	db	32
  8971  00F14D  69                 	db	105	;'i'
  8972  00F14E  6E                 	db	110	;'n'
  8973  00F14F  74                 	db	116	;'t'
  8974  00F150  65                 	db	101	;'e'
  8975  00F151  72                 	db	114	;'r'
  8976  00F152  66                 	db	102	;'f'
  8977  00F153  61                 	db	97	;'a'
  8978  00F154  63                 	db	99	;'c'
  8979  00F155  65                 	db	101	;'e'
  8980  00F156  29                 	db	41
  8981  00F157  0A                 	db	10
  8982  00F158  0D                 	db	13
  8983  00F159  00                 	db	0
  8984  00F15A                     STR_126:
  8985  00F15A  45                 	db	69	;'E'
  8986  00F15B  52                 	db	82	;'R'
  8987  00F15C  52                 	db	82	;'R'
  8988  00F15D  4F                 	db	79	;'O'
  8989  00F15E  52                 	db	82	;'R'
  8990  00F15F  3A                 	db	58	;':'
  8991  00F160  20                 	db	32
  8992  00F161  50                 	db	80	;'P'
  8993  00F162  6C                 	db	108	;'l'
  8994  00F163  65                 	db	101	;'e'
  8995  00F164  61                 	db	97	;'a'
  8996  00F165  73                 	db	115	;'s'
  8997  00F166  65                 	db	101	;'e'
  8998  00F167  20                 	db	32
  8999  00F168  73                 	db	115	;'s'
  9000  00F169  65                 	db	101	;'e'
  9001  00F16A  74                 	db	116	;'t'
  9002  00F16B  20                 	db	32
  9003  00F16C  64                 	db	100	;'d'
  9004  00F16D  69                 	db	105	;'i'
  9005  00F16E  6D                 	db	109	;'m'
  9006  00F16F  6D                 	db	109	;'m'
  9007  00F170  69                 	db	105	;'i'
  9008  00F171  6E                 	db	110	;'n'
  9009  00F172  67                 	db	103	;'g'
  9010  00F173  20                 	db	32
  9011  00F174  70                 	db	112	;'p'
  9012  00F175  65                 	db	101	;'e'
  9013  00F176  72                 	db	114	;'r'
  9014  00F177  63                 	db	99	;'c'
  9015  00F178  65                 	db	101	;'e'
  9016  00F179  6E                 	db	110	;'n'
  9017  00F17A  74                 	db	116	;'t'
  9018  00F17B  61                 	db	97	;'a'
  9019  00F17C  67                 	db	103	;'g'
  9020  00F17D  65                 	db	101	;'e'
  9021  00F17E  20                 	db	32
  9022  00F17F  74                 	db	116	;'t'
  9023  00F180  6F                 	db	111	;'o'
  9024  00F181  20                 	db	32
  9025  00F182  61                 	db	97	;'a'
  9026  00F183  6E                 	db	110	;'n'
  9027  00F184  20                 	db	32
  9028  00F185  69                 	db	105	;'i'
  9029  00F186  6E                 	db	110	;'n'
  9030  00F187  74                 	db	116	;'t'
  9031  00F188  65                 	db	101	;'e'
  9032  00F189  67                 	db	103	;'g'
  9033  00F18A  65                 	db	101	;'e'
  9034  00F18B  72                 	db	114	;'r'
  9035  00F18C  20                 	db	32
  9036  00F18D  67                 	db	103	;'g'
  9037  00F18E  72                 	db	114	;'r'
  9038  00F18F  65                 	db	101	;'e'
  9039  00F190  61                 	db	97	;'a'
  9040  00F191  74                 	db	116	;'t'
  9041  00F192  65                 	db	101	;'e'
  9042  00F193  72                 	db	114	;'r'
  9043  00F194  20                 	db	32
  9044  00F195  74                 	db	116	;'t'
  9045  00F196  68                 	db	104	;'h'
  9046  00F197  61                 	db	97	;'a'
  9047  00F198  6E                 	db	110	;'n'
  9048  00F199  20                 	db	32
  9049  00F19A  30                 	db	48	;'0'
  9050  00F19B  20                 	db	32
  9051  00F19C  61                 	db	97	;'a'
  9052  00F19D  6E                 	db	110	;'n'
  9053  00F19E  64                 	db	100	;'d'
  9054  00F19F  20                 	db	32
  9055  00F1A0  6C                 	db	108	;'l'
  9056  00F1A1  65                 	db	101	;'e'
  9057  00F1A2  73                 	db	115	;'s'
  9058  00F1A3  73                 	db	115	;'s'
  9059  00F1A4  20                 	db	32
  9060  00F1A5  74                 	db	116	;'t'
  9061  00F1A6  68                 	db	104	;'h'
  9062  00F1A7  61                 	db	97	;'a'
  9063  00F1A8  6E                 	db	110	;'n'
  9064  00F1A9  20                 	db	32
  9065  00F1AA  31                 	db	49	;'1'
  9066  00F1AB  30                 	db	48	;'0'
  9067  00F1AC  30                 	db	48	;'0'
  9068  00F1AD  0A                 	db	10
  9069  00F1AE  0D                 	db	13
  9070  00F1AF  00                 	db	0
  9071  00F1B0                     STR_58:
  9072  00F1B0  44                 	db	68	;'D'
  9073  00F1B1  65                 	db	101	;'e'
  9074  00F1B2  76                 	db	118	;'v'
  9075  00F1B3  69                 	db	105	;'i'
  9076  00F1B4  63                 	db	99	;'c'
  9077  00F1B5  65                 	db	101	;'e'
  9078  00F1B6  20                 	db	32
  9079  00F1B7  49                 	db	73	;'I'
  9080  00F1B8  44                 	db	68	;'D'
  9081  00F1B9  20                 	db	32
  9082  00F1BA  73                 	db	115	;'s'
  9083  00F1BB  74                 	db	116	;'t'
  9084  00F1BC  6F                 	db	111	;'o'
  9085  00F1BD  72                 	db	114	;'r'
  9086  00F1BE  65                 	db	101	;'e'
  9087  00F1BF  64                 	db	100	;'d'
  9088  00F1C0  20                 	db	32
  9089  00F1C1  69                 	db	105	;'i'
  9090  00F1C2  6E                 	db	110	;'n'
  9091  00F1C3  20                 	db	32
  9092  00F1C4  46                 	db	70	;'F'
  9093  00F1C5  6C                 	db	108	;'l'
  9094  00F1C6  61                 	db	97	;'a'
  9095  00F1C7  73                 	db	115	;'s'
  9096  00F1C8  68                 	db	104	;'h'
  9097  00F1C9  20                 	db	32
  9098  00F1CA  69                 	db	105	;'i'
  9099  00F1CB  73                 	db	115	;'s'
  9100  00F1CC  3A                 	db	58	;':'
  9101  00F1CD  20                 	db	32
  9102  00F1CE  30                 	db	48	;'0'
  9103  00F1CF  78                 	db	120	;'x'
  9104  00F1D0  25                 	db	37
  9105  00F1D1  58                 	db	88	;'X'
  9106  00F1D2  2E                 	db	46
  9107  00F1D3  20                 	db	32
  9108  00F1D4  54                 	db	84	;'T'
  9109  00F1D5  68                 	db	104	;'h'
  9110  00F1D6  69                 	db	105	;'i'
  9111  00F1D7  73                 	db	115	;'s'
  9112  00F1D8  20                 	db	32
  9113  00F1D9  63                 	db	99	;'c'
  9114  00F1DA  6F                 	db	111	;'o'
  9115  00F1DB  72                 	db	114	;'r'
  9116  00F1DC  72                 	db	114	;'r'
  9117  00F1DD  65                 	db	101	;'e'
  9118  00F1DE  73                 	db	115	;'s'
  9119  00F1DF  70                 	db	112	;'p'
  9120  00F1E0  6F                 	db	111	;'o'
  9121  00F1E1  6E                 	db	110	;'n'
  9122  00F1E2  64                 	db	100	;'d'
  9123  00F1E3  73                 	db	115	;'s'
  9124  00F1E4  20                 	db	32
  9125  00F1E5  74                 	db	116	;'t'
  9126  00F1E6  6F                 	db	111	;'o'
  9127  00F1E7  20                 	db	32
  9128  00F1E8  61                 	db	97	;'a'
  9129  00F1E9  20                 	db	32
  9130  00F1EA  64                 	db	100	;'d'
  9131  00F1EB  65                 	db	101	;'e'
  9132  00F1EC  76                 	db	118	;'v'
  9133  00F1ED  69                 	db	105	;'i'
  9134  00F1EE  63                 	db	99	;'c'
  9135  00F1EF  65                 	db	101	;'e'
  9136  00F1F0  20                 	db	32
  9137  00F1F1  70                 	db	112	;'p'
  9138  00F1F2  61                 	db	97	;'a'
  9139  00F1F3  72                 	db	114	;'r'
  9140  00F1F4  74                 	db	116	;'t'
  9141  00F1F5  20                 	db	32
  9142  00F1F6  6E                 	db	110	;'n'
  9143  00F1F7  75                 	db	117	;'u'
  9144  00F1F8  6D                 	db	109	;'m'
  9145  00F1F9  62                 	db	98	;'b'
  9146  00F1FA  65                 	db	101	;'e'
  9147  00F1FB  72                 	db	114	;'r'
  9148  00F1FC  20                 	db	32
  9149  00F1FD  6F                 	db	111	;'o'
  9150  00F1FE  66                 	db	102	;'f'
  9151  00F1FF  20                 	db	32
  9152  00F200  25                 	db	37
  9153  00F201  73                 	db	115	;'s'
  9154  00F202  0A                 	db	10
  9155  00F203  0D                 	db	13
  9156  00F204  00                 	db	0
  9157  00F205                     STR_102:
  9158  00F205  4D                 	db	77	;'M'
  9159  00F206  65                 	db	101	;'e'
  9160  00F207  61                 	db	97	;'a'
  9161  00F208  73                 	db	115	;'s'
  9162  00F209  75                 	db	117	;'u'
  9163  00F20A  72                 	db	114	;'r'
  9164  00F20B  65                 	db	101	;'e'
  9165  00F20C  64                 	db	100	;'d'
  9166  00F20D  20                 	db	32
  9167  00F20E  6F                 	db	111	;'o'
  9168  00F20F  75                 	db	117	;'u'
  9169  00F210  74                 	db	116	;'t'
  9170  00F211  70                 	db	112	;'p'
  9171  00F212  75                 	db	117	;'u'
  9172  00F213  74                 	db	116	;'t'
  9173  00F214  20                 	db	32
  9174  00F215  65                 	db	101	;'e'
  9175  00F216  6E                 	db	110	;'n'
  9176  00F217  65                 	db	101	;'e'
  9177  00F218  72                 	db	114	;'r'
  9178  00F219  67                 	db	103	;'g'
  9179  00F21A  79                 	db	121	;'y'
  9180  00F21B  20                 	db	32
  9181  00F21C  73                 	db	115	;'s'
  9182  00F21D  69                 	db	105	;'i'
  9183  00F21E  6E                 	db	110	;'n'
  9184  00F21F  63                 	db	99	;'c'
  9185  00F220  65                 	db	101	;'e'
  9186  00F221  20                 	db	32
  9187  00F222  6C                 	db	108	;'l'
  9188  00F223  61                 	db	97	;'a'
  9189  00F224  73                 	db	115	;'s'
  9190  00F225  74                 	db	116	;'t'
  9191  00F226  20                 	db	32
  9192  00F227  6D                 	db	109	;'m'
  9193  00F228  65                 	db	101	;'e'
  9194  00F229  61                 	db	97	;'a'
  9195  00F22A  73                 	db	115	;'s'
  9196  00F22B  75                 	db	117	;'u'
  9197  00F22C  72                 	db	114	;'r'
  9198  00F22D  65                 	db	101	;'e'
  9199  00F22E  6D                 	db	109	;'m'
  9200  00F22F  65                 	db	101	;'e'
  9201  00F230  6E                 	db	110	;'n'
  9202  00F231  74                 	db	116	;'t'
  9203  00F232  20                 	db	32
  9204  00F233  72                 	db	114	;'r'
  9205  00F234  65                 	db	101	;'e'
  9206  00F235  73                 	db	115	;'s'
  9207  00F236  65                 	db	101	;'e'
  9208  00F237  74                 	db	116	;'t'
  9209  00F238  20                 	db	32
  9210  00F239  69                 	db	105	;'i'
  9211  00F23A  73                 	db	115	;'s'
  9212  00F23B  20                 	db	32
  9213  00F23C  25                 	db	37
  9214  00F23D  2E                 	db	46
  9215  00F23E  33                 	db	51	;'3'
  9216  00F23F  66                 	db	102	;'f'
  9217  00F240  20                 	db	32
  9218  00F241  57                 	db	87	;'W'
  9219  00F242  61                 	db	97	;'a'
  9220  00F243  74                 	db	116	;'t'
  9221  00F244  74                 	db	116	;'t'
  9222  00F245  20                 	db	32
  9223  00F246  48                 	db	72	;'H'
  9224  00F247  6F                 	db	111	;'o'
  9225  00F248  75                 	db	117	;'u'
  9226  00F249  72                 	db	114	;'r'
  9227  00F24A  73                 	db	115	;'s'
  9228  00F24B  0A                 	db	10
  9229  00F24C  0D                 	db	13
  9230  00F24D  00                 	db	0
  9231  00F24E                     STR_131:
  9232  00F24E  54                 	db	84	;'T'
  9233  00F24F  68                 	db	104	;'h'
  9234  00F250  69                 	db	105	;'i'
  9235  00F251  73                 	db	115	;'s'
  9236  00F252  20                 	db	32
  9237  00F253  63                 	db	99	;'c'
  9238  00F254  6F                 	db	111	;'o'
  9239  00F255  72                 	db	114	;'r'
  9240  00F256  72                 	db	114	;'r'
  9241  00F257  65                 	db	101	;'e'
  9242  00F258  73                 	db	115	;'s'
  9243  00F259  70                 	db	112	;'p'
  9244  00F25A  6F                 	db	111	;'o'
  9245  00F25B  6E                 	db	110	;'n'
  9246  00F25C  64                 	db	100	;'d'
  9247  00F25D  73                 	db	115	;'s'
  9248  00F25E  20                 	db	32
  9249  00F25F  74                 	db	116	;'t'
  9250  00F260  6F                 	db	111	;'o'
  9251  00F261  20                 	db	32
  9252  00F262  61                 	db	97	;'a'
  9253  00F263  20                 	db	32
  9254  00F264  31                 	db	49	;'1'
  9255  00F265  36                 	db	54	;'6'
  9256  00F266  20                 	db	32
  9257  00F267  62                 	db	98	;'b'
  9258  00F268  69                 	db	105	;'i'
  9259  00F269  74                 	db	116	;'t'
  9260  00F26A  20                 	db	32
  9261  00F26B  74                 	db	116	;'t'
  9262  00F26C  69                 	db	105	;'i'
  9263  00F26D  6D                 	db	109	;'m'
  9264  00F26E  65                 	db	101	;'e'
  9265  00F26F  72                 	db	114	;'r'
  9266  00F270  20                 	db	32
  9267  00F271  70                 	db	112	;'p'
  9268  00F272  72                 	db	114	;'r'
  9269  00F273  65                 	db	101	;'e'
  9270  00F274  2D                 	db	45
  9271  00F275  6C                 	db	108	;'l'
  9272  00F276  6F                 	db	111	;'o'
  9273  00F277  61                 	db	97	;'a'
  9274  00F278  64                 	db	100	;'d'
  9275  00F279  20                 	db	32
  9276  00F27A  76                 	db	118	;'v'
  9277  00F27B  61                 	db	97	;'a'
  9278  00F27C  6C                 	db	108	;'l'
  9279  00F27D  75                 	db	117	;'u'
  9280  00F27E  65                 	db	101	;'e'
  9281  00F27F  20                 	db	32
  9282  00F280  6F                 	db	111	;'o'
  9283  00F281  66                 	db	102	;'f'
  9284  00F282  20                 	db	32
  9285  00F283  30                 	db	48	;'0'
  9286  00F284  78                 	db	120	;'x'
  9287  00F285  25                 	db	37
  9288  00F286  58                 	db	88	;'X'
  9289  00F287  20                 	db	32
  9290  00F288  28                 	db	40
  9291  00F289  25                 	db	37
  9292  00F28A  75                 	db	117	;'u'
  9293  00F28B  20                 	db	32
  9294  00F28C  4C                 	db	76	;'L'
  9295  00F28D  53                 	db	83	;'S'
  9296  00F28E  42                 	db	66	;'B'
  9297  00F28F  73                 	db	115	;'s'
  9298  00F290  29                 	db	41
  9299  00F291  20                 	db	32
  9300  00F292  0A                 	db	10
  9301  00F293  0D                 	db	13
  9302  00F294  00                 	db	0
  9303  00F295                     STR_62:
  9304  00F295  54                 	db	84	;'T'
  9305  00F296  68                 	db	104	;'h'
  9306  00F297  65                 	db	101	;'e'
  9307  00F298  20                 	db	32
  9308  00F299  66                 	db	102	;'f'
  9309  00F29A  6F                 	db	111	;'o'
  9310  00F29B  6C                 	db	108	;'l'
  9311  00F29C  6C                 	db	108	;'l'
  9312  00F29D  6F                 	db	111	;'o'
  9313  00F29E  77                 	db	119	;'w'
  9314  00F29F  69                 	db	105	;'i'
  9315  00F2A0  6E                 	db	110	;'n'
  9316  00F2A1  67                 	db	103	;'g'
  9317  00F2A2  20                 	db	32
  9318  00F2A3  55                 	db	85	;'U'
  9319  00F2A4  73                 	db	115	;'s'
  9320  00F2A5  65                 	db	101	;'e'
  9321  00F2A6  72                 	db	114	;'r'
  9322  00F2A7  20                 	db	32
  9323  00F2A8  49                 	db	73	;'I'
  9324  00F2A9  44                 	db	68	;'D'
  9325  00F2AA  73                 	db	115	;'s'
  9326  00F2AB  20                 	db	32
  9327  00F2AC  68                 	db	104	;'h'
  9328  00F2AD  61                 	db	97	;'a'
  9329  00F2AE  76                 	db	118	;'v'
  9330  00F2AF  65                 	db	101	;'e'
  9331  00F2B0  20                 	db	32
  9332  00F2B1  62                 	db	98	;'b'
  9333  00F2B2  65                 	db	101	;'e'
  9334  00F2B3  65                 	db	101	;'e'
  9335  00F2B4  6E                 	db	110	;'n'
  9336  00F2B5  20                 	db	32
  9337  00F2B6  72                 	db	114	;'r'
  9338  00F2B7  65                 	db	101	;'e'
  9339  00F2B8  74                 	db	116	;'t'
  9340  00F2B9  72                 	db	114	;'r'
  9341  00F2BA  69                 	db	105	;'i'
  9342  00F2BB  65                 	db	101	;'e'
  9343  00F2BC  76                 	db	118	;'v'
  9344  00F2BD  65                 	db	101	;'e'
  9345  00F2BE  64                 	db	100	;'d'
  9346  00F2BF  20                 	db	32
  9347  00F2C0  66                 	db	102	;'f'
  9348  00F2C1  72                 	db	114	;'r'
  9349  00F2C2  6F                 	db	111	;'o'
  9350  00F2C3  6D                 	db	109	;'m'
  9351  00F2C4  20                 	db	32
  9352  00F2C5  66                 	db	102	;'f'
  9353  00F2C6  6C                 	db	108	;'l'
  9354  00F2C7  61                 	db	97	;'a'
  9355  00F2C8  73                 	db	115	;'s'
  9356  00F2C9  68                 	db	104	;'h'
  9357  00F2CA  20                 	db	32
  9358  00F2CB  6D                 	db	109	;'m'
  9359  00F2CC  65                 	db	101	;'e'
  9360  00F2CD  6D                 	db	109	;'m'
  9361  00F2CE  6F                 	db	111	;'o'
  9362  00F2CF  72                 	db	114	;'r'
  9363  00F2D0  79                 	db	121	;'y'
  9364  00F2D1  3A                 	db	58	;':'
  9365  00F2D2  0A                 	db	10
  9366  00F2D3  0D                 	db	13
  9367  00F2D4  00                 	db	0
  9368  00F2D5                     STR_130:
  9369  00F2D5  43                 	db	67	;'C'
  9370  00F2D6  61                 	db	97	;'a'
  9371  00F2D7  6C                 	db	108	;'l'
  9372  00F2D8  63                 	db	99	;'c'
  9373  00F2D9  75                 	db	117	;'u'
  9374  00F2DA  6C                 	db	108	;'l'
  9375  00F2DB  61                 	db	97	;'a'
  9376  00F2DC  74                 	db	116	;'t'
  9377  00F2DD  65                 	db	101	;'e'
  9378  00F2DE  64                 	db	100	;'d'
  9379  00F2DF  20                 	db	32
  9380  00F2E0  54                 	db	84	;'T'
  9381  00F2E1  52                 	db	82	;'R'
  9382  00F2E2  49                 	db	73	;'I'
  9383  00F2E3  41                 	db	65	;'A'
  9384  00F2E4  43                 	db	67	;'C'
  9385  00F2E5  20                 	db	32
  9386  00F2E6  66                 	db	102	;'f'
  9387  00F2E7  69                 	db	105	;'i'
  9388  00F2E8  72                 	db	114	;'r'
  9389  00F2E9  69                 	db	105	;'i'
  9390  00F2EA  6E                 	db	110	;'n'
  9391  00F2EB  67                 	db	103	;'g'
  9392  00F2EC  20                 	db	32
  9393  00F2ED  61                 	db	97	;'a'
  9394  00F2EE  6E                 	db	110	;'n'
  9395  00F2EF  67                 	db	103	;'g'
  9396  00F2F0  6C                 	db	108	;'l'
  9397  00F2F1  65                 	db	101	;'e'
  9398  00F2F2  20                 	db	32
  9399  00F2F3  69                 	db	105	;'i'
  9400  00F2F4  73                 	db	115	;'s'
  9401  00F2F5  20                 	db	32
  9402  00F2F6  25                 	db	37
  9403  00F2F7  2E                 	db	46
  9404  00F2F8  33                 	db	51	;'3'
  9405  00F2F9  66                 	db	102	;'f'
  9406  00F2FA  20                 	db	32
  9407  00F2FB  72                 	db	114	;'r'
  9408  00F2FC  61                 	db	97	;'a'
  9409  00F2FD  64                 	db	100	;'d'
  9410  00F2FE  69                 	db	105	;'i'
  9411  00F2FF  61                 	db	97	;'a'
  9412  00F300  6E                 	db	110	;'n'
  9413  00F301  73                 	db	115	;'s'
  9414  00F302  20                 	db	32
  9415  00F303  28                 	db	40
  9416  00F304  25                 	db	37
  9417  00F305  2E                 	db	46
  9418  00F306  33                 	db	51	;'3'
  9419  00F307  66                 	db	102	;'f'
  9420  00F308  20                 	db	32
  9421  00F309  64                 	db	100	;'d'
  9422  00F30A  65                 	db	101	;'e'
  9423  00F30B  67                 	db	103	;'g'
  9424  00F30C  72                 	db	114	;'r'
  9425  00F30D  65                 	db	101	;'e'
  9426  00F30E  65                 	db	101	;'e'
  9427  00F30F  73                 	db	115	;'s'
  9428  00F310  29                 	db	41
  9429  00F311  0A                 	db	10
  9430  00F312  0D                 	db	13
  9431  00F313  00                 	db	0
  9432  00F314                     STR_163:
  9433  00F314  53                 	db	83	;'S'
  9434  00F315  79                 	db	121	;'y'
  9435  00F316  73                 	db	115	;'s'
  9436  00F317  74                 	db	116	;'t'
  9437  00F318  65                 	db	101	;'e'
  9438  00F319  6D                 	db	109	;'m'
  9439  00F31A  20                 	db	32
  9440  00F31B  70                 	db	112	;'p'
  9441  00F31C  61                 	db	97	;'a'
  9442  00F31D  72                 	db	114	;'r'
  9443  00F31E  61                 	db	97	;'a'
  9444  00F31F  6D                 	db	109	;'m'
  9445  00F320  65                 	db	101	;'e'
  9446  00F321  74                 	db	116	;'t'
  9447  00F322  65                 	db	101	;'e'
  9448  00F323  72                 	db	114	;'r'
  9449  00F324  73                 	db	115	;'s'
  9450  00F325  20                 	db	32
  9451  00F326  61                 	db	97	;'a'
  9452  00F327  6E                 	db	110	;'n'
  9453  00F328  64                 	db	100	;'d'
  9454  00F329  20                 	db	32
  9455  00F32A  61                 	db	97	;'a'
  9456  00F32B  66                 	db	102	;'f'
  9457  00F32C  66                 	db	102	;'f'
  9458  00F32D  69                 	db	105	;'i'
  9459  00F32E  72                 	db	114	;'r'
  9460  00F32F  6D                 	db	109	;'m'
  9461  00F330  61                 	db	97	;'a'
  9462  00F331  74                 	db	116	;'t'
  9463  00F332  69                 	db	105	;'i'
  9464  00F333  76                 	db	118	;'v'
  9465  00F334  65                 	db	101	;'e'
  9466  00F335  20                 	db	32
  9467  00F336  72                 	db	114	;'r'
  9468  00F337  65                 	db	101	;'e'
  9469  00F338  73                 	db	115	;'s'
  9470  00F339  70                 	db	112	;'p'
  9471  00F33A  6F                 	db	111	;'o'
  9472  00F33B  6E                 	db	110	;'n'
  9473  00F33C  73                 	db	115	;'s'
  9474  00F33D  65                 	db	101	;'e'
  9475  00F33E  73                 	db	115	;'s'
  9476  00F33F  20                 	db	32
  9477  00F340  61                 	db	97	;'a'
  9478  00F341  70                 	db	112	;'p'
  9479  00F342  70                 	db	112	;'p'
  9480  00F343  65                 	db	101	;'e'
  9481  00F344  61                 	db	97	;'a'
  9482  00F345  72                 	db	114	;'r'
  9483  00F346  20                 	db	32
  9484  00F347  69                 	db	105	;'i'
  9485  00F348  6E                 	db	110	;'n'
  9486  00F349  20                 	db	32
  9487  00F34A  67                 	db	103	;'g'
  9488  00F34B  72                 	db	114	;'r'
  9489  00F34C  65                 	db	101	;'e'
  9490  00F34D  65                 	db	101	;'e'
  9491  00F34E  6E                 	db	110	;'n'
  9492  00F34F  0A                 	db	10
  9493  00F350  0D                 	db	13
  9494  00F351  00                 	db	0
  9495  00F352                     STR_60:
  9496  00F352  44                 	db	68	;'D'
  9497  00F353  65                 	db	101	;'e'
  9498  00F354  76                 	db	118	;'v'
  9499  00F355  69                 	db	105	;'i'
  9500  00F356  63                 	db	99	;'c'
  9501  00F357  65                 	db	101	;'e'
  9502  00F358  20                 	db	32
  9503  00F359  73                 	db	115	;'s'
  9504  00F35A  69                 	db	105	;'i'
  9505  00F35B  6C                 	db	108	;'l'
  9506  00F35C  69                 	db	105	;'i'
  9507  00F35D  63                 	db	99	;'c'
  9508  00F35E  6F                 	db	111	;'o'
  9509  00F35F  6E                 	db	110	;'n'
  9510  00F360  20                 	db	32
  9511  00F361  72                 	db	114	;'r'
  9512  00F362  65                 	db	101	;'e'
  9513  00F363  76                 	db	118	;'v'
  9514  00F364  69                 	db	105	;'i'
  9515  00F365  73                 	db	115	;'s'
  9516  00F366  69                 	db	105	;'i'
  9517  00F367  6F                 	db	111	;'o'
  9518  00F368  6E                 	db	110	;'n'
  9519  00F369  20                 	db	32
  9520  00F36A  49                 	db	73	;'I'
  9521  00F36B  44                 	db	68	;'D'
  9522  00F36C  20                 	db	32
  9523  00F36D  61                 	db	97	;'a'
  9524  00F36E  73                 	db	115	;'s'
  9525  00F36F  20                 	db	32
  9526  00F370  73                 	db	115	;'s'
  9527  00F371  74                 	db	116	;'t'
  9528  00F372  6F                 	db	111	;'o'
  9529  00F373  72                 	db	114	;'r'
  9530  00F374  65                 	db	101	;'e'
  9531  00F375  64                 	db	100	;'d'
  9532  00F376  20                 	db	32
  9533  00F377  69                 	db	105	;'i'
  9534  00F378  6E                 	db	110	;'n'
  9535  00F379  20                 	db	32
  9536  00F37A  46                 	db	70	;'F'
  9537  00F37B  6C                 	db	108	;'l'
  9538  00F37C  61                 	db	97	;'a'
  9539  00F37D  73                 	db	115	;'s'
  9540  00F37E  68                 	db	104	;'h'
  9541  00F37F  20                 	db	32
  9542  00F380  69                 	db	105	;'i'
  9543  00F381  73                 	db	115	;'s'
  9544  00F382  3A                 	db	58	;':'
  9545  00F383  20                 	db	32
  9546  00F384  25                 	db	37
  9547  00F385  63                 	db	99	;'c'
  9548  00F386  25                 	db	37
  9549  00F387  30                 	db	48	;'0'
  9550  00F388  33                 	db	51	;'3'
  9551  00F389  64                 	db	100	;'d'
  9552  00F38A  0A                 	db	10
  9553  00F38B  0D                 	db	13
  9554  00F38C  00                 	db	0
  9555  00F38D                     STR_104:
  9556  00F38D  4D                 	db	77	;'M'
  9557  00F38E  65                 	db	101	;'e'
  9558  00F38F  61                 	db	97	;'a'
  9559  00F390  73                 	db	115	;'s'
  9560  00F391  75                 	db	117	;'u'
  9561  00F392  72                 	db	114	;'r'
  9562  00F393  65                 	db	101	;'e'
  9563  00F394  64                 	db	100	;'d'
  9564  00F395  20                 	db	32
  9565  00F396  6F                 	db	111	;'o'
  9566  00F397  75                 	db	117	;'u'
  9567  00F398  74                 	db	116	;'t'
  9568  00F399  70                 	db	112	;'p'
  9569  00F39A  75                 	db	117	;'u'
  9570  00F39B  74                 	db	116	;'t'
  9571  00F39C  20                 	db	32
  9572  00F39D  65                 	db	101	;'e'
  9573  00F39E  6E                 	db	110	;'n'
  9574  00F39F  65                 	db	101	;'e'
  9575  00F3A0  72                 	db	114	;'r'
  9576  00F3A1  67                 	db	103	;'g'
  9577  00F3A2  79                 	db	121	;'y'
  9578  00F3A3  20                 	db	32
  9579  00F3A4  68                 	db	104	;'h'
  9580  00F3A5  61                 	db	97	;'a'
  9581  00F3A6  73                 	db	115	;'s'
  9582  00F3A7  20                 	db	32
  9583  00F3A8  62                 	db	98	;'b'
  9584  00F3A9  65                 	db	101	;'e'
  9585  00F3AA  65                 	db	101	;'e'
  9586  00F3AB  6E                 	db	110	;'n'
  9587  00F3AC  20                 	db	32
  9588  00F3AD  72                 	db	114	;'r'
  9589  00F3AE  65                 	db	101	;'e'
  9590  00F3AF  73                 	db	115	;'s'
  9591  00F3B0  65                 	db	101	;'e'
  9592  00F3B1  74                 	db	116	;'t'
  9593  00F3B2  20                 	db	32
  9594  00F3B3  74                 	db	116	;'t'
  9595  00F3B4  6F                 	db	111	;'o'
  9596  00F3B5  20                 	db	32
  9597  00F3B6  7A                 	db	122	;'z'
  9598  00F3B7  65                 	db	101	;'e'
  9599  00F3B8  72                 	db	114	;'r'
  9600  00F3B9  6F                 	db	111	;'o'
  9601  00F3BA  20                 	db	32
  9602  00F3BB  57                 	db	87	;'W'
  9603  00F3BC  61                 	db	97	;'a'
  9604  00F3BD  74                 	db	116	;'t'
  9605  00F3BE  74                 	db	116	;'t'
  9606  00F3BF  20                 	db	32
  9607  00F3C0  48                 	db	72	;'H'
  9608  00F3C1  6F                 	db	111	;'o'
  9609  00F3C2  75                 	db	117	;'u'
  9610  00F3C3  72                 	db	114	;'r'
  9611  00F3C4  73                 	db	115	;'s'
  9612  00F3C5  0A                 	db	10
  9613  00F3C6  0D                 	db	13
  9614  00F3C7  00                 	db	0
  9615  00F3C8                     STR_133:
  9616  00F3C8  44                 	db	68	;'D'
  9617  00F3C9  65                 	db	101	;'e'
  9618  00F3CA  76                 	db	118	;'v'
  9619  00F3CB  69                 	db	105	;'i'
  9620  00F3CC  63                 	db	99	;'c'
  9621  00F3CD  65                 	db	101	;'e'
  9622  00F3CE  20                 	db	32
  9623  00F3CF  6F                 	db	111	;'o'
  9624  00F3D0  6E                 	db	110	;'n'
  9625  00F3D1  20                 	db	32
  9626  00F3D2  74                 	db	116	;'t'
  9627  00F3D3  69                 	db	105	;'i'
  9628  00F3D4  6D                 	db	109	;'m'
  9629  00F3D5  65                 	db	101	;'e'
  9630  00F3D6  20                 	db	32
  9631  00F3D7  73                 	db	115	;'s'
  9632  00F3D8  69                 	db	105	;'i'
  9633  00F3D9  6E                 	db	110	;'n'
  9634  00F3DA  63                 	db	99	;'c'
  9635  00F3DB  65                 	db	101	;'e'
  9636  00F3DC  20                 	db	32
  9637  00F3DD  6C                 	db	108	;'l'
  9638  00F3DE  61                 	db	97	;'a'
  9639  00F3DF  73                 	db	115	;'s'
  9640  00F3E0  74                 	db	116	;'t'
  9641  00F3E1  20                 	db	32
  9642  00F3E2  72                 	db	114	;'r'
  9643  00F3E3  65                 	db	101	;'e'
  9644  00F3E4  73                 	db	115	;'s'
  9645  00F3E5  65                 	db	101	;'e'
  9646  00F3E6  74                 	db	116	;'t'
  9647  00F3E7  20                 	db	32
  9648  00F3E8  63                 	db	99	;'c'
  9649  00F3E9  6F                 	db	111	;'o'
  9650  00F3EA  6E                 	db	110	;'n'
  9651  00F3EB  64                 	db	100	;'d'
  9652  00F3EC  69                 	db	105	;'i'
  9653  00F3ED  74                 	db	116	;'t'
  9654  00F3EE  69                 	db	105	;'i'
  9655  00F3EF  6F                 	db	111	;'o'
  9656  00F3F0  6E                 	db	110	;'n'
  9657  00F3F1  20                 	db	32
  9658  00F3F2  69                 	db	105	;'i'
  9659  00F3F3  73                 	db	115	;'s'
  9660  00F3F4  20                 	db	32
  9661  00F3F5  25                 	db	37
  9662  00F3F6  64                 	db	100	;'d'
  9663  00F3F7  20                 	db	32
  9664  00F3F8  73                 	db	115	;'s'
  9665  00F3F9  65                 	db	101	;'e'
  9666  00F3FA  63                 	db	99	;'c'
  9667  00F3FB  6F                 	db	111	;'o'
  9668  00F3FC  6E                 	db	110	;'n'
  9669  00F3FD  64                 	db	100	;'d'
  9670  00F3FE  73                 	db	115	;'s'
  9671  00F3FF  0A                 	db	10
  9672  00F400  0D                 	db	13
  9673  00F401  00                 	db	0
  9674  00F402                     STR_90:
  9675  00F402  46                 	db	70	;'F'
  9676  00F403  69                 	db	105	;'i'
  9677  00F404  78                 	db	120	;'x'
  9678  00F405  65                 	db	101	;'e'
  9679  00F406  64                 	db	100	;'d'
  9680  00F407  20                 	db	32
  9681  00F408  56                 	db	86	;'V'
  9682  00F409  6F                 	db	111	;'o'
  9683  00F40A  6C                 	db	108	;'l'
  9684  00F40B  74                 	db	116	;'t'
  9685  00F40C  61                 	db	97	;'a'
  9686  00F40D  67                 	db	103	;'g'
  9687  00F40E  65                 	db	101	;'e'
  9688  00F40F  20                 	db	32
  9689  00F410  52                 	db	82	;'R'
  9690  00F411  65                 	db	101	;'e'
  9691  00F412  66                 	db	102	;'f'
  9692  00F413  65                 	db	101	;'e'
  9693  00F414  72                 	db	114	;'r'
  9694  00F415  65                 	db	101	;'e'
  9695  00F416  6E                 	db	110	;'n'
  9696  00F417  63                 	db	99	;'c'
  9697  00F418  65                 	db	101	;'e'
  9698  00F419  20                 	db	32
  9699  00F41A  42                 	db	66	;'B'
  9700  00F41B  75                 	db	117	;'u'
  9701  00F41C  66                 	db	102	;'f'
  9702  00F41D  66                 	db	102	;'f'
  9703  00F41E  65                 	db	101	;'e'
  9704  00F41F  72                 	db	114	;'r'
  9705  00F420  20                 	db	32
  9706  00F421  31                 	db	49	;'1'
  9707  00F422  20                 	db	32
  9708  00F423  6D                 	db	109	;'m'
  9709  00F424  65                 	db	101	;'e'
  9710  00F425  61                 	db	97	;'a'
  9711  00F426  73                 	db	115	;'s'
  9712  00F427  75                 	db	117	;'u'
  9713  00F428  72                 	db	114	;'r'
  9714  00F429  65                 	db	101	;'e'
  9715  00F42A  64                 	db	100	;'d'
  9716  00F42B  20                 	db	32
  9717  00F42C  61                 	db	97	;'a'
  9718  00F42D  73                 	db	115	;'s'
  9719  00F42E  20                 	db	32
  9720  00F42F  25                 	db	37
  9721  00F430  2E                 	db	46
  9722  00F431  33                 	db	51	;'3'
  9723  00F432  66                 	db	102	;'f'
  9724  00F433  20                 	db	32
  9725  00F434  56                 	db	86	;'V'
  9726  00F435  6F                 	db	111	;'o'
  9727  00F436  6C                 	db	108	;'l'
  9728  00F437  74                 	db	116	;'t'
  9729  00F438  73                 	db	115	;'s'
  9730  00F439  0A                 	db	10
  9731  00F43A  0D                 	db	13
  9732  00F43B  00                 	db	0
  9733  00F43C                     STR_100:
  9734  00F43C  4F                 	db	79	;'O'
  9735  00F43D  75                 	db	117	;'u'
  9736  00F43E  74                 	db	116	;'t'
  9737  00F43F  70                 	db	112	;'p'
  9738  00F440  75                 	db	117	;'u'
  9739  00F441  74                 	db	116	;'t'
  9740  00F442  20                 	db	32
  9741  00F443  70                 	db	112	;'p'
  9742  00F444  6F                 	db	111	;'o'
  9743  00F445  77                 	db	119	;'w'
  9744  00F446  65                 	db	101	;'e'
  9745  00F447  72                 	db	114	;'r'
  9746  00F448  20                 	db	32
  9747  00F449  63                 	db	99	;'c'
  9748  00F44A  61                 	db	97	;'a'
  9749  00F44B  6C                 	db	108	;'l'
  9750  00F44C  63                 	db	99	;'c'
  9751  00F44D  75                 	db	117	;'u'
  9752  00F44E  6C                 	db	108	;'l'
  9753  00F44F  61                 	db	97	;'a'
  9754  00F450  74                 	db	116	;'t'
  9755  00F451  65                 	db	101	;'e'
  9756  00F452  64                 	db	100	;'d'
  9757  00F453  20                 	db	32
  9758  00F454  61                 	db	97	;'a'
  9759  00F455  73                 	db	115	;'s'
  9760  00F456  20                 	db	32
  9761  00F457  25                 	db	37
  9762  00F458  2E                 	db	46
  9763  00F459  33                 	db	51	;'3'
  9764  00F45A  66                 	db	102	;'f'
  9765  00F45B  20                 	db	32
  9766  00F45C  57                 	db	87	;'W'
  9767  00F45D  61                 	db	97	;'a'
  9768  00F45E  74                 	db	116	;'t'
  9769  00F45F  74                 	db	116	;'t'
  9770  00F460  73                 	db	115	;'s'
  9771  00F461  20                 	db	32
  9772  00F462  66                 	db	102	;'f'
  9773  00F463  72                 	db	114	;'r'
  9774  00F464  6F                 	db	111	;'o'
  9775  00F465  6D                 	db	109	;'m'
  9776  00F466  20                 	db	32
  9777  00F467  52                 	db	82	;'R'
  9778  00F468  4D                 	db	77	;'M'
  9779  00F469  53                 	db	83	;'S'
  9780  00F46A  20                 	db	32
  9781  00F46B  76                 	db	118	;'v'
  9782  00F46C  61                 	db	97	;'a'
  9783  00F46D  6C                 	db	108	;'l'
  9784  00F46E  75                 	db	117	;'u'
  9785  00F46F  65                 	db	101	;'e'
  9786  00F470  73                 	db	115	;'s'
  9787  00F471  0A                 	db	10
  9788  00F472  0D                 	db	13
  9789  00F473  00                 	db	0
  9790  00F474                     STR_162:
  9791  00F474  48                 	db	72	;'H'
  9792  00F475  65                 	db	101	;'e'
  9793  00F476  6C                 	db	108	;'l'
  9794  00F477  70                 	db	112	;'p'
  9795  00F478  20                 	db	32
  9796  00F479  6D                 	db	109	;'m'
  9797  00F47A  65                 	db	101	;'e'
  9798  00F47B  73                 	db	115	;'s'
  9799  00F47C  73                 	db	115	;'s'
  9800  00F47D  61                 	db	97	;'a'
  9801  00F47E  67                 	db	103	;'g'
  9802  00F47F  65                 	db	101	;'e'
  9803  00F480  73                 	db	115	;'s'
  9804  00F481  20                 	db	32
  9805  00F482  61                 	db	97	;'a'
  9806  00F483  6E                 	db	110	;'n'
  9807  00F484  64                 	db	100	;'d'
  9808  00F485  20                 	db	32
  9809  00F486  6E                 	db	110	;'n'
  9810  00F487  65                 	db	101	;'e'
  9811  00F488  75                 	db	117	;'u'
  9812  00F489  74                 	db	116	;'t'
  9813  00F48A  72                 	db	114	;'r'
  9814  00F48B  61                 	db	97	;'a'
  9815  00F48C  6C                 	db	108	;'l'
  9816  00F48D  20                 	db	32
  9817  00F48E  72                 	db	114	;'r'
  9818  00F48F  65                 	db	101	;'e'
  9819  00F490  73                 	db	115	;'s'
  9820  00F491  70                 	db	112	;'p'
  9821  00F492  6F                 	db	111	;'o'
  9822  00F493  6E                 	db	110	;'n'
  9823  00F494  73                 	db	115	;'s'
  9824  00F495  65                 	db	101	;'e'
  9825  00F496  73                 	db	115	;'s'
  9826  00F497  20                 	db	32
  9827  00F498  61                 	db	97	;'a'
  9828  00F499  70                 	db	112	;'p'
  9829  00F49A  70                 	db	112	;'p'
  9830  00F49B  65                 	db	101	;'e'
  9831  00F49C  61                 	db	97	;'a'
  9832  00F49D  72                 	db	114	;'r'
  9833  00F49E  20                 	db	32
  9834  00F49F  69                 	db	105	;'i'
  9835  00F4A0  6E                 	db	110	;'n'
  9836  00F4A1  20                 	db	32
  9837  00F4A2  79                 	db	121	;'y'
  9838  00F4A3  65                 	db	101	;'e'
  9839  00F4A4  6C                 	db	108	;'l'
  9840  00F4A5  6C                 	db	108	;'l'
  9841  00F4A6  6F                 	db	111	;'o'
  9842  00F4A7  77                 	db	119	;'w'
  9843  00F4A8  0A                 	db	10
  9844  00F4A9  0D                 	db	13
  9845  00F4AA  00                 	db	0
  9846  00F4AB                     STR_149:
  9847  00F4AB  4D                 	db	77	;'M'
  9848  00F4AC  61                 	db	97	;'a'
  9849  00F4AD  78                 	db	120	;'x'
  9850  00F4AE  69                 	db	105	;'i'
  9851  00F4AF  6D                 	db	109	;'m'
  9852  00F4B0  75                 	db	117	;'u'
  9853  00F4B1  6D                 	db	109	;'m'
  9854  00F4B2  20                 	db	32
  9855  00F4B3  72                 	db	114	;'r'
  9856  00F4B4  65                 	db	101	;'e'
  9857  00F4B5  63                 	db	99	;'c'
  9858  00F4B6  6F                 	db	111	;'o'
  9859  00F4B7  72                 	db	114	;'r'
  9860  00F4B8  64                 	db	100	;'d'
  9861  00F4B9  65                 	db	101	;'e'
  9862  00F4BA  64                 	db	100	;'d'
  9863  00F4BB  20                 	db	32
  9864  00F4BC  76                 	db	118	;'v'
  9865  00F4BD  61                 	db	97	;'a'
  9866  00F4BE  6C                 	db	108	;'l'
  9867  00F4BF  75                 	db	117	;'u'
  9868  00F4C0  65                 	db	101	;'e'
  9869  00F4C1  73                 	db	115	;'s'
  9870  00F4C2  20                 	db	32
  9871  00F4C3  65                 	db	101	;'e'
  9872  00F4C4  72                 	db	114	;'r'
  9873  00F4C5  61                 	db	97	;'a'
  9874  00F4C6  73                 	db	115	;'s'
  9875  00F4C7  65                 	db	101	;'e'
  9876  00F4C8  64                 	db	100	;'d'
  9877  00F4C9  20                 	db	32
  9878  00F4CA  66                 	db	102	;'f'
  9879  00F4CB  72                 	db	114	;'r'
  9880  00F4CC  6F                 	db	111	;'o'
  9881  00F4CD  6D                 	db	109	;'m'
  9882  00F4CE  20                 	db	32
  9883  00F4CF  53                 	db	83	;'S'
  9884  00F4D0  52                 	db	82	;'R'
  9885  00F4D1  41                 	db	65	;'A'
  9886  00F4D2  4D                 	db	77	;'M'
  9887  00F4D3  20                 	db	32
  9888  00F4D4  61                 	db	97	;'a'
  9889  00F4D5  6E                 	db	110	;'n'
  9890  00F4D6  64                 	db	100	;'d'
  9891  00F4D7  20                 	db	32
  9892  00F4D8  45                 	db	69	;'E'
  9893  00F4D9  45                 	db	69	;'E'
  9894  00F4DA  50                 	db	80	;'P'
  9895  00F4DB  52                 	db	82	;'R'
  9896  00F4DC  4F                 	db	79	;'O'
  9897  00F4DD  4D                 	db	77	;'M'
  9898  00F4DE  0A                 	db	10
  9899  00F4DF  0D                 	db	13
  9900  00F4E0  00                 	db	0
  9901  00F4E1                     STR_63:
  9902  00F4E1  20                 	db	32
  9903  00F4E2  20                 	db	32
  9904  00F4E3  20                 	db	32
  9905  00F4E4  20                 	db	32
  9906  00F4E5  55                 	db	85	;'U'
  9907  00F4E6  73                 	db	115	;'s'
  9908  00F4E7  65                 	db	101	;'e'
  9909  00F4E8  72                 	db	114	;'r'
  9910  00F4E9  20                 	db	32
  9911  00F4EA  49                 	db	73	;'I'
  9912  00F4EB  44                 	db	68	;'D'
  9913  00F4EC  20                 	db	32
  9914  00F4ED  57                 	db	87	;'W'
  9915  00F4EE  6F                 	db	111	;'o'
  9916  00F4EF  72                 	db	114	;'r'
  9917  00F4F0  64                 	db	100	;'d'
  9918  00F4F1  20                 	db	32
  9919  00F4F2  25                 	db	37
  9920  00F4F3  64                 	db	100	;'d'
  9921  00F4F4  20                 	db	32
  9922  00F4F5  28                 	db	40
  9923  00F4F6  46                 	db	70	;'F'
  9924  00F4F7  6C                 	db	108	;'l'
  9925  00F4F8  61                 	db	97	;'a'
  9926  00F4F9  73                 	db	115	;'s'
  9927  00F4FA  68                 	db	104	;'h'
  9928  00F4FB  20                 	db	32
  9929  00F4FC  61                 	db	97	;'a'
  9930  00F4FD  64                 	db	100	;'d'
  9931  00F4FE  64                 	db	100	;'d'
  9932  00F4FF  72                 	db	114	;'r'
  9933  00F500  65                 	db	101	;'e'
  9934  00F501  73                 	db	115	;'s'
  9935  00F502  73                 	db	115	;'s'
  9936  00F503  20                 	db	32
  9937  00F504  30                 	db	48	;'0'
  9938  00F505  78                 	db	120	;'x'
  9939  00F506  32                 	db	50	;'2'
  9940  00F507  30                 	db	48	;'0'
  9941  00F508  30                 	db	48	;'0'
  9942  00F509  30                 	db	48	;'0'
  9943  00F50A  30                 	db	48	;'0'
  9944  00F50B  25                 	db	37
  9945  00F50C  58                 	db	88	;'X'
  9946  00F50D  29                 	db	41
  9947  00F50E  3A                 	db	58	;':'
  9948  00F50F  20                 	db	32
  9949  00F510  30                 	db	48	;'0'
  9950  00F511  78                 	db	120	;'x'
  9951  00F512  25                 	db	37
  9952  00F513  58                 	db	88	;'X'
  9953  00F514  0A                 	db	10
  9954  00F515  0D                 	db	13
  9955  00F516  00                 	db	0
  9956  00F517                     STR_147:
  9957  00F517  4D                 	db	77	;'M'
  9958  00F518  61                 	db	97	;'a'
  9959  00F519  78                 	db	120	;'x'
  9960  00F51A  69                 	db	105	;'i'
  9961  00F51B  6D                 	db	109	;'m'
  9962  00F51C  75                 	db	117	;'u'
  9963  00F51D  6D                 	db	109	;'m'
  9964  00F51E  20                 	db	32
  9965  00F51F  72                 	db	114	;'r'
  9966  00F520  65                 	db	101	;'e'
  9967  00F521  63                 	db	99	;'c'
  9968  00F522  6F                 	db	111	;'o'
  9969  00F523  72                 	db	114	;'r'
  9970  00F524  64                 	db	100	;'d'
  9971  00F525  65                 	db	101	;'e'
  9972  00F526  64                 	db	100	;'d'
  9973  00F527  20                 	db	32
  9974  00F528  46                 	db	70	;'F'
  9975  00F529  56                 	db	86	;'V'
  9976  00F52A  52                 	db	82	;'R'
  9977  00F52B  20                 	db	32
  9978  00F52C  62                 	db	98	;'b'
  9979  00F52D  75                 	db	117	;'u'
  9980  00F52E  66                 	db	102	;'f'
  9981  00F52F  66                 	db	102	;'f'
  9982  00F530  65                 	db	101	;'e'
  9983  00F531  72                 	db	114	;'r'
  9984  00F532  20                 	db	32
  9985  00F533  31                 	db	49	;'1'
  9986  00F534  20                 	db	32
  9987  00F535  76                 	db	118	;'v'
  9988  00F536  6F                 	db	111	;'o'
  9989  00F537  6C                 	db	108	;'l'
  9990  00F538  74                 	db	116	;'t'
  9991  00F539  61                 	db	97	;'a'
  9992  00F53A  67                 	db	103	;'g'
  9993  00F53B  65                 	db	101	;'e'
  9994  00F53C  20                 	db	32
  9995  00F53D  69                 	db	105	;'i'
  9996  00F53E  73                 	db	115	;'s'
  9997  00F53F  20                 	db	32
  9998  00F540  25                 	db	37
  9999  00F541  2E                 	db	46
 10000  00F542  33                 	db	51	;'3'
 10001  00F543  66                 	db	102	;'f'
 10002  00F544  20                 	db	32
 10003  00F545  56                 	db	86	;'V'
 10004  00F546  6F                 	db	111	;'o'
 10005  00F547  6C                 	db	108	;'l'
 10006  00F548  74                 	db	116	;'t'
 10007  00F549  73                 	db	115	;'s'
 10008  00F54A  0A                 	db	10
 10009  00F54B  0D                 	db	13
 10010  00F54C  00                 	db	0
 10011  00F54D                     STR_109:
 10012  00F54D  49                 	db	73	;'I'
 10013  00F54E  66                 	db	102	;'f'
 10014  00F54F  20                 	db	32
 10015  00F550  79                 	db	121	;'y'
 10016  00F551  65                 	db	101	;'e'
 10017  00F552  73                 	db	115	;'s'
 10018  00F553  2C                 	db	44
 10019  00F554  20                 	db	32
 10020  00F555  72                 	db	114	;'r'
 10021  00F556  65                 	db	101	;'e'
 10022  00F557  70                 	db	112	;'p'
 10023  00F558  6C                 	db	108	;'l'
 10024  00F559  79                 	db	121	;'y'
 10025  00F55A  20                 	db	32
 10026  00F55B  27                 	db	39
 10027  00F55C  45                 	db	69	;'E'
 10028  00F55D  6E                 	db	110	;'n'
 10029  00F55E  61                 	db	97	;'a'
 10030  00F55F  62                 	db	98	;'b'
 10031  00F560  6C                 	db	108	;'l'
 10032  00F561  65                 	db	101	;'e'
 10033  00F562  20                 	db	32
 10034  00F563  44                 	db	68	;'D'
 10035  00F564  69                 	db	105	;'i'
 10036  00F565  6D                 	db	109	;'m'
 10037  00F566  6D                 	db	109	;'m'
 10038  00F567  69                 	db	105	;'i'
 10039  00F568  6E                 	db	110	;'n'
 10040  00F569  67                 	db	103	;'g'
 10041  00F56A  20                 	db	32
 10042  00F56B  59                 	db	89	;'Y'
 10043  00F56C  27                 	db	39
 10044  00F56D  20                 	db	32
 10045  00F56E  6F                 	db	111	;'o'
 10046  00F56F  6E                 	db	110	;'n'
 10047  00F570  20                 	db	32
 10048  00F571  74                 	db	116	;'t'
 10049  00F572  68                 	db	104	;'h'
 10050  00F573  65                 	db	101	;'e'
 10051  00F574  20                 	db	32
 10052  00F575  6E                 	db	110	;'n'
 10053  00F576  65                 	db	101	;'e'
 10054  00F577  78                 	db	120	;'x'
 10055  00F578  74                 	db	116	;'t'
 10056  00F579  20                 	db	32
 10057  00F57A  6C                 	db	108	;'l'
 10058  00F57B  69                 	db	105	;'i'
 10059  00F57C  6E                 	db	110	;'n'
 10060  00F57D  65                 	db	101	;'e'
 10061  00F57E  3A                 	db	58	;':'
 10062  00F57F  0A                 	db	10
 10063  00F580  0D                 	db	13
 10064  00F581  00                 	db	0
 10065  00F582                     STR_121:
 10066  00F582  4C                 	db	76	;'L'
 10067  00F583  6F                 	db	111	;'o'
 10068  00F584  61                 	db	97	;'a'
 10069  00F585  64                 	db	100	;'d'
 10070  00F586  20                 	db	32
 10071  00F587  69                 	db	105	;'i'
 10072  00F588  73                 	db	115	;'s'
 10073  00F589  20                 	db	32
 10074  00F58A  63                 	db	99	;'c'
 10075  00F58B  75                 	db	117	;'u'
 10076  00F58C  72                 	db	114	;'r'
 10077  00F58D  72                 	db	114	;'r'
 10078  00F58E  65                 	db	101	;'e'
 10079  00F58F  6E                 	db	110	;'n'
 10080  00F590  74                 	db	116	;'t'
 10081  00F591  6C                 	db	108	;'l'
 10082  00F592  79                 	db	121	;'y'
 10083  00F593  20                 	db	32
 10084  00F594  65                 	db	101	;'e'
 10085  00F595  6E                 	db	110	;'n'
 10086  00F596  61                 	db	97	;'a'
 10087  00F597  62                 	db	98	;'b'
 10088  00F598  6C                 	db	108	;'l'
 10089  00F599  65                 	db	101	;'e'
 10090  00F59A  64                 	db	100	;'d'
 10091  00F59B  2C                 	db	44
 10092  00F59C  20                 	db	32
 10093  00F59D  62                 	db	98	;'b'
 10094  00F59E  75                 	db	117	;'u'
 10095  00F59F  74                 	db	116	;'t'
 10096  00F5A0  20                 	db	32
 10097  00F5A1  64                 	db	100	;'d'
 10098  00F5A2  69                 	db	105	;'i'
 10099  00F5A3  6D                 	db	109	;'m'
 10100  00F5A4  6D                 	db	109	;'m'
 10101  00F5A5  69                 	db	105	;'i'
 10102  00F5A6  6E                 	db	110	;'n'
 10103  00F5A7  67                 	db	103	;'g'
 10104  00F5A8  20                 	db	32
 10105  00F5A9  69                 	db	105	;'i'
 10106  00F5AA  73                 	db	115	;'s'
 10107  00F5AB  20                 	db	32
 10108  00F5AC  64                 	db	100	;'d'
 10109  00F5AD  69                 	db	105	;'i'
 10110  00F5AE  73                 	db	115	;'s'
 10111  00F5AF  61                 	db	97	;'a'
 10112  00F5B0  62                 	db	98	;'b'
 10113  00F5B1  6C                 	db	108	;'l'
 10114  00F5B2  65                 	db	101	;'e'
 10115  00F5B3  64                 	db	100	;'d'
 10116  00F5B4  0A                 	db	10
 10117  00F5B5  0D                 	db	13
 10118  00F5B6  00                 	db	0
 10119  00F5B7                     STR_135:
 10120  00F5B7  4C                 	db	76	;'L'
 10121  00F5B8  6F                 	db	111	;'o'
 10122  00F5B9  61                 	db	97	;'a'
 10123  00F5BA  64                 	db	100	;'d'
 10124  00F5BB  20                 	db	32
 10125  00F5BC  6F                 	db	111	;'o'
 10126  00F5BD  6E                 	db	110	;'n'
 10127  00F5BE  20                 	db	32
 10128  00F5BF  74                 	db	116	;'t'
 10129  00F5C0  69                 	db	105	;'i'
 10130  00F5C1  6D                 	db	109	;'m'
 10131  00F5C2  65                 	db	101	;'e'
 10132  00F5C3  20                 	db	32
 10133  00F5C4  73                 	db	115	;'s'
 10134  00F5C5  69                 	db	105	;'i'
 10135  00F5C6  6E                 	db	110	;'n'
 10136  00F5C7  63                 	db	99	;'c'
 10137  00F5C8  65                 	db	101	;'e'
 10138  00F5C9  20                 	db	32
 10139  00F5CA  6C                 	db	108	;'l'
 10140  00F5CB  61                 	db	97	;'a'
 10141  00F5CC  73                 	db	115	;'s'
 10142  00F5CD  74                 	db	116	;'t'
 10143  00F5CE  20                 	db	32
 10144  00F5CF  64                 	db	100	;'d'
 10145  00F5D0  65                 	db	101	;'e'
 10146  00F5D1  76                 	db	118	;'v'
 10147  00F5D2  69                 	db	105	;'i'
 10148  00F5D3  63                 	db	99	;'c'
 10149  00F5D4  65                 	db	101	;'e'
 10150  00F5D5  20                 	db	32
 10151  00F5D6  72                 	db	114	;'r'
 10152  00F5D7  65                 	db	101	;'e'
 10153  00F5D8  73                 	db	115	;'s'
 10154  00F5D9  65                 	db	101	;'e'
 10155  00F5DA  74                 	db	116	;'t'
 10156  00F5DB  20                 	db	32
 10157  00F5DC  69                 	db	105	;'i'
 10158  00F5DD  73                 	db	115	;'s'
 10159  00F5DE  20                 	db	32
 10160  00F5DF  25                 	db	37
 10161  00F5E0  64                 	db	100	;'d'
 10162  00F5E1  20                 	db	32
 10163  00F5E2  73                 	db	115	;'s'
 10164  00F5E3  65                 	db	101	;'e'
 10165  00F5E4  63                 	db	99	;'c'
 10166  00F5E5  6F                 	db	111	;'o'
 10167  00F5E6  6E                 	db	110	;'n'
 10168  00F5E7  64                 	db	100	;'d'
 10169  00F5E8  73                 	db	115	;'s'
 10170  00F5E9  0A                 	db	10
 10171  00F5EA  0D                 	db	13
 10172  00F5EB  00                 	db	0
 10173  00F5EC                     STR_108:
 10174  00F5EC  41                 	db	65	;'A'
 10175  00F5ED  72                 	db	114	;'r'
 10176  00F5EE  65                 	db	101	;'e'
 10177  00F5EF  20                 	db	32
 10178  00F5F0  79                 	db	121	;'y'
 10179  00F5F1  6F                 	db	111	;'o'
 10180  00F5F2  75                 	db	117	;'u'
 10181  00F5F3  20                 	db	32
 10182  00F5F4  73                 	db	115	;'s'
 10183  00F5F5  75                 	db	117	;'u'
 10184  00F5F6  72                 	db	114	;'r'
 10185  00F5F7  65                 	db	101	;'e'
 10186  00F5F8  20                 	db	32
 10187  00F5F9  79                 	db	121	;'y'
 10188  00F5FA  6F                 	db	111	;'o'
 10189  00F5FB  75                 	db	117	;'u'
 10190  00F5FC  27                 	db	39
 10191  00F5FD  64                 	db	100	;'d'
 10192  00F5FE  20                 	db	32
 10193  00F5FF  6C                 	db	108	;'l'
 10194  00F600  69                 	db	105	;'i'
 10195  00F601  6B                 	db	107	;'k'
 10196  00F602  65                 	db	101	;'e'
 10197  00F603  20                 	db	32
 10198  00F604  74                 	db	116	;'t'
 10199  00F605  6F                 	db	111	;'o'
 10200  00F606  20                 	db	32
 10201  00F607  65                 	db	101	;'e'
 10202  00F608  6E                 	db	110	;'n'
 10203  00F609  61                 	db	97	;'a'
 10204  00F60A  62                 	db	98	;'b'
 10205  00F60B  6C                 	db	108	;'l'
 10206  00F60C  65                 	db	101	;'e'
 10207  00F60D  20                 	db	32
 10208  00F60E  6F                 	db	111	;'o'
 10209  00F60F  75                 	db	117	;'u'
 10210  00F610  74                 	db	116	;'t'
 10211  00F611  70                 	db	112	;'p'
 10212  00F612  75                 	db	117	;'u'
 10213  00F613  74                 	db	116	;'t'
 10214  00F614  20                 	db	32
 10215  00F615  64                 	db	100	;'d'
 10216  00F616  69                 	db	105	;'i'
 10217  00F617  6D                 	db	109	;'m'
 10218  00F618  6D                 	db	109	;'m'
 10219  00F619  69                 	db	105	;'i'
 10220  00F61A  6E                 	db	110	;'n'
 10221  00F61B  67                 	db	103	;'g'
 10222  00F61C  3F                 	db	63	;'?'
 10223  00F61D  0A                 	db	10
 10224  00F61E  0D                 	db	13
 10225  00F61F  00                 	db	0
 10226  00F620                     STR_52:
 10227  00F620  54                 	db	84	;'T'
 10228  00F621  68                 	db	104	;'h'
 10229  00F622  65                 	db	101	;'e'
 10230  00F623  20                 	db	32
 10231  00F624  63                 	db	99	;'c'
 10232  00F625  61                 	db	97	;'a'
 10233  00F626  75                 	db	117	;'u'
 10234  00F627  73                 	db	115	;'s'
 10235  00F628  65                 	db	101	;'e'
 10236  00F629  20                 	db	32
 10237  00F62A  6F                 	db	111	;'o'
 10238  00F62B  66                 	db	102	;'f'
 10239  00F62C  20                 	db	32
 10240  00F62D  74                 	db	116	;'t'
 10241  00F62E  68                 	db	104	;'h'
 10242  00F62F  65                 	db	101	;'e'
 10243  00F630  20                 	db	32
 10244  00F631  6D                 	db	109	;'m'
 10245  00F632  6F                 	db	111	;'o'
 10246  00F633  73                 	db	115	;'s'
 10247  00F634  74                 	db	116	;'t'
 10248  00F635  20                 	db	32
 10249  00F636  72                 	db	114	;'r'
 10250  00F637  65                 	db	101	;'e'
 10251  00F638  63                 	db	99	;'c'
 10252  00F639  65                 	db	101	;'e'
 10253  00F63A  6E                 	db	110	;'n'
 10254  00F63B  74                 	db	116	;'t'
 10255  00F63C  20                 	db	32
 10256  00F63D  64                 	db	100	;'d'
 10257  00F63E  65                 	db	101	;'e'
 10258  00F63F  76                 	db	118	;'v'
 10259  00F640  69                 	db	105	;'i'
 10260  00F641  63                 	db	99	;'c'
 10261  00F642  65                 	db	101	;'e'
 10262  00F643  20                 	db	32
 10263  00F644  72                 	db	114	;'r'
 10264  00F645  65                 	db	101	;'e'
 10265  00F646  73                 	db	115	;'s'
 10266  00F647  65                 	db	101	;'e'
 10267  00F648  74                 	db	116	;'t'
 10268  00F649  20                 	db	32
 10269  00F64A  77                 	db	119	;'w'
 10270  00F64B  61                 	db	97	;'a'
 10271  00F64C  73                 	db	115	;'s'
 10272  00F64D  3A                 	db	58	;':'
 10273  00F64E  20                 	db	32
 10274  00F64F  25                 	db	37
 10275  00F650  73                 	db	115	;'s'
 10276  00F651  0A                 	db	10
 10277  00F652  0D                 	db	13
 10278  00F653  00                 	db	0
 10279  00F654                     STR_141:
 10280  00F654  4D                 	db	77	;'M'
 10281  00F655  61                 	db	97	;'a'
 10282  00F656  78                 	db	120	;'x'
 10283  00F657  69                 	db	105	;'i'
 10284  00F658  6D                 	db	109	;'m'
 10285  00F659  75                 	db	117	;'u'
 10286  00F65A  6D                 	db	109	;'m'
 10287  00F65B  20                 	db	32
 10288  00F65C  72                 	db	114	;'r'
 10289  00F65D  65                 	db	101	;'e'
 10290  00F65E  63                 	db	99	;'c'
 10291  00F65F  6F                 	db	111	;'o'
 10292  00F660  72                 	db	114	;'r'
 10293  00F661  64                 	db	100	;'d'
 10294  00F662  65                 	db	101	;'e'
 10295  00F663  64                 	db	100	;'d'
 10296  00F664  20                 	db	32
 10297  00F665  2B                 	db	43
 10298  00F666  33                 	db	51	;'3'
 10299  00F667  2E                 	db	46
 10300  00F668  33                 	db	51	;'3'
 10301  00F669  56                 	db	86	;'V'
 10302  00F66A  20                 	db	32
 10303  00F66B  72                 	db	114	;'r'
 10304  00F66C  61                 	db	97	;'a'
 10305  00F66D  69                 	db	105	;'i'
 10306  00F66E  6C                 	db	108	;'l'
 10307  00F66F  20                 	db	32
 10308  00F670  76                 	db	118	;'v'
 10309  00F671  6F                 	db	111	;'o'
 10310  00F672  6C                 	db	108	;'l'
 10311  00F673  74                 	db	116	;'t'
 10312  00F674  61                 	db	97	;'a'
 10313  00F675  67                 	db	103	;'g'
 10314  00F676  65                 	db	101	;'e'
 10315  00F677  20                 	db	32
 10316  00F678  69                 	db	105	;'i'
 10317  00F679  73                 	db	115	;'s'
 10318  00F67A  20                 	db	32
 10319  00F67B  25                 	db	37
 10320  00F67C  2E                 	db	46
 10321  00F67D  33                 	db	51	;'3'
 10322  00F67E  66                 	db	102	;'f'
 10323  00F67F  20                 	db	32
 10324  00F680  56                 	db	86	;'V'
 10325  00F681  6F                 	db	111	;'o'
 10326  00F682  6C                 	db	108	;'l'
 10327  00F683  74                 	db	116	;'t'
 10328  00F684  73                 	db	115	;'s'
 10329  00F685  0A                 	db	10
 10330  00F686  0D                 	db	13
 10331  00F687  00                 	db	0
 10332  00F688                     STR_137:
 10333  00F688  4D                 	db	77	;'M'
 10334  00F689  61                 	db	97	;'a'
 10335  00F68A  78                 	db	120	;'x'
 10336  00F68B  69                 	db	105	;'i'
 10337  00F68C  6D                 	db	109	;'m'
 10338  00F68D  75                 	db	117	;'u'
 10339  00F68E  6D                 	db	109	;'m'
 10340  00F68F  20                 	db	32
 10341  00F690  72                 	db	114	;'r'
 10342  00F691  65                 	db	101	;'e'
 10343  00F692  63                 	db	99	;'c'
 10344  00F693  6F                 	db	111	;'o'
 10345  00F694  72                 	db	114	;'r'
 10346  00F695  64                 	db	100	;'d'
 10347  00F696  65                 	db	101	;'e'
 10348  00F697  64                 	db	100	;'d'
 10349  00F698  20                 	db	32
 10350  00F699  52                 	db	82	;'R'
 10351  00F69A  4D                 	db	77	;'M'
 10352  00F69B  53                 	db	83	;'S'
 10353  00F69C  20                 	db	32
 10354  00F69D  6F                 	db	111	;'o'
 10355  00F69E  75                 	db	117	;'u'
 10356  00F69F  74                 	db	116	;'t'
 10357  00F6A0  70                 	db	112	;'p'
 10358  00F6A1  75                 	db	117	;'u'
 10359  00F6A2  74                 	db	116	;'t'
 10360  00F6A3  20                 	db	32
 10361  00F6A4  63                 	db	99	;'c'
 10362  00F6A5  75                 	db	117	;'u'
 10363  00F6A6  72                 	db	114	;'r'
 10364  00F6A7  72                 	db	114	;'r'
 10365  00F6A8  65                 	db	101	;'e'
 10366  00F6A9  6E                 	db	110	;'n'
 10367  00F6AA  74                 	db	116	;'t'
 10368  00F6AB  20                 	db	32
 10369  00F6AC  69                 	db	105	;'i'
 10370  00F6AD  73                 	db	115	;'s'
 10371  00F6AE  20                 	db	32
 10372  00F6AF  25                 	db	37
 10373  00F6B0  2E                 	db	46
 10374  00F6B1  33                 	db	51	;'3'
 10375  00F6B2  66                 	db	102	;'f'
 10376  00F6B3  20                 	db	32
 10377  00F6B4  41                 	db	65	;'A'
 10378  00F6B5  72                 	db	114	;'r'
 10379  00F6B6  6D                 	db	109	;'m'
 10380  00F6B7  73                 	db	115	;'s'
 10381  00F6B8  0A                 	db	10
 10382  00F6B9  0D                 	db	13
 10383  00F6BA  00                 	db	0
 10384  00F6BB                     STR_143:
 10385  00F6BB  4D                 	db	77	;'M'
 10386  00F6BC  61                 	db	97	;'a'
 10387  00F6BD  78                 	db	120	;'x'
 10388  00F6BE  69                 	db	105	;'i'
 10389  00F6BF  6D                 	db	109	;'m'
 10390  00F6C0  75                 	db	117	;'u'
 10391  00F6C1  6D                 	db	109	;'m'
 10392  00F6C2  20                 	db	32
 10393  00F6C3  72                 	db	114	;'r'
 10394  00F6C4  65                 	db	101	;'e'
 10395  00F6C5  63                 	db	99	;'c'
 10396  00F6C6  6F                 	db	111	;'o'
 10397  00F6C7  72                 	db	114	;'r'
 10398  00F6C8  64                 	db	100	;'d'
 10399  00F6C9  65                 	db	101	;'e'
 10400  00F6CA  64                 	db	100	;'d'
 10401  00F6CB  20                 	db	32
 10402  00F6CC  2B                 	db	43
 10403  00F6CD  31                 	db	49	;'1'
 10404  00F6CE  32                 	db	50	;'2'
 10405  00F6CF  56                 	db	86	;'V'
 10406  00F6D0  20                 	db	32
 10407  00F6D1  72                 	db	114	;'r'
 10408  00F6D2  61                 	db	97	;'a'
 10409  00F6D3  69                 	db	105	;'i'
 10410  00F6D4  6C                 	db	108	;'l'
 10411  00F6D5  20                 	db	32
 10412  00F6D6  76                 	db	118	;'v'
 10413  00F6D7  6F                 	db	111	;'o'
 10414  00F6D8  6C                 	db	108	;'l'
 10415  00F6D9  74                 	db	116	;'t'
 10416  00F6DA  61                 	db	97	;'a'
 10417  00F6DB  67                 	db	103	;'g'
 10418  00F6DC  65                 	db	101	;'e'
 10419  00F6DD  20                 	db	32
 10420  00F6DE  69                 	db	105	;'i'
 10421  00F6DF  73                 	db	115	;'s'
 10422  00F6E0  20                 	db	32
 10423  00F6E1  25                 	db	37
 10424  00F6E2  2E                 	db	46
 10425  00F6E3  33                 	db	51	;'3'
 10426  00F6E4  66                 	db	102	;'f'
 10427  00F6E5  20                 	db	32
 10428  00F6E6  56                 	db	86	;'V'
 10429  00F6E7  6F                 	db	111	;'o'
 10430  00F6E8  6C                 	db	108	;'l'
 10431  00F6E9  74                 	db	116	;'t'
 10432  00F6EA  73                 	db	115	;'s'
 10433  00F6EB  0A                 	db	10
 10434  00F6EC  0D                 	db	13
 10435  00F6ED  00                 	db	0
 10436  00F6EE                     STR_73:
 10437  00F6EE  54                 	db	84	;'T'
 10438  00F6EF  68                 	db	104	;'h'
 10439  00F6F0  65                 	db	101	;'e'
 10440  00F6F1  20                 	db	32
 10441  00F6F2  66                 	db	102	;'f'
 10442  00F6F3  6F                 	db	111	;'o'
 10443  00F6F4  6C                 	db	108	;'l'
 10444  00F6F5  6C                 	db	108	;'l'
 10445  00F6F6  6F                 	db	111	;'o'
 10446  00F6F7  77                 	db	119	;'w'
 10447  00F6F8  69                 	db	105	;'i'
 10448  00F6F9  6E                 	db	110	;'n'
 10449  00F6FA  67                 	db	103	;'g'
 10450  00F6FB  20                 	db	32
 10451  00F6FC  63                 	db	99	;'c'
 10452  00F6FD  68                 	db	104	;'h'
 10453  00F6FE  61                 	db	97	;'a'
 10454  00F6FF  6E                 	db	110	;'n'
 10455  00F700  6E                 	db	110	;'n'
 10456  00F701  65                 	db	101	;'e'
 10457  00F702  6C                 	db	108	;'l'
 10458  00F703  20                 	db	32
 10459  00F704  63                 	db	99	;'c'
 10460  00F705  61                 	db	97	;'a'
 10461  00F706  75                 	db	117	;'u'
 10462  00F707  73                 	db	115	;'s'
 10463  00F708  65                 	db	101	;'e'
 10464  00F709  64                 	db	100	;'d'
 10465  00F70A  20                 	db	32
 10466  00F70B  61                 	db	97	;'a'
 10467  00F70C  6E                 	db	110	;'n'
 10468  00F70D  20                 	db	32
 10469  00F70E  41                 	db	65	;'A'
 10470  00F70F  44                 	db	68	;'D'
 10471  00F710  43                 	db	67	;'C'
 10472  00F711  20                 	db	32
 10473  00F712  65                 	db	101	;'e'
 10474  00F713  72                 	db	114	;'r'
 10475  00F714  72                 	db	114	;'r'
 10476  00F715  6F                 	db	111	;'o'
 10477  00F716  72                 	db	114	;'r'
 10478  00F717  3A                 	db	58	;':'
 10479  00F718  20                 	db	32
 10480  00F719  25                 	db	37
 10481  00F71A  73                 	db	115	;'s'
 10482  00F71B  0A                 	db	10
 10483  00F71C  0D                 	db	13
 10484  00F71D  00                 	db	0
 10485  00F71E                     STR_56:
 10486  00F71E  4D                 	db	77	;'M'
 10487  00F71F  61                 	db	97	;'a'
 10488  00F720  72                 	db	114	;'r'
 10489  00F721  71                 	db	113	;'q'
 10490  00F722  75                 	db	117	;'u'
 10491  00F723  65                 	db	101	;'e'
 10492  00F724  74                 	db	116	;'t'
 10493  00F725  74                 	db	116	;'t'
 10494  00F726  65                 	db	101	;'e'
 10495  00F727  20                 	db	32
 10496  00F728  55                 	db	85	;'U'
 10497  00F729  6E                 	db	110	;'n'
 10498  00F72A  69                 	db	105	;'i'
 10499  00F72B  76                 	db	118	;'v'
 10500  00F72C  65                 	db	101	;'e'
 10501  00F72D  72                 	db	114	;'r'
 10502  00F72E  73                 	db	115	;'s'
 10503  00F72F  69                 	db	105	;'i'
 10504  00F730  74                 	db	116	;'t'
 10505  00F731  79                 	db	121	;'y'
 10506  00F732  20                 	db	32
 10507  00F733  45                 	db	69	;'E'
 10508  00F734  4C                 	db	76	;'L'
 10509  00F735  45                 	db	69	;'E'
 10510  00F736  4E                 	db	78	;'N'
 10511  00F737  20                 	db	32
 10512  00F738  33                 	db	51	;'3'
 10513  00F739  30                 	db	48	;'0'
 10514  00F73A  33                 	db	51	;'3'
 10515  00F73B  35                 	db	53	;'5'
 10516  00F73C  20                 	db	32
 10517  00F73D  46                 	db	70	;'F'
 10518  00F73E  69                 	db	105	;'i'
 10519  00F73F  6E                 	db	110	;'n'
 10520  00F740  61                 	db	97	;'a'
 10521  00F741  6C                 	db	108	;'l'
 10522  00F742  20                 	db	32
 10523  00F743  50                 	db	80	;'P'
 10524  00F744  72                 	db	114	;'r'
 10525  00F745  6F                 	db	111	;'o'
 10526  00F746  6A                 	db	106	;'j'
 10527  00F747  65                 	db	101	;'e'
 10528  00F748  63                 	db	99	;'c'
 10529  00F749  74                 	db	116	;'t'
 10530  00F74A  0A                 	db	10
 10531  00F74B  0D                 	db	13
 10532  00F74C  00                 	db	0
 10533  00F74D                     STR_165:
 10534  00F74D  45                 	db	69	;'E'
 10535  00F74E  72                 	db	114	;'r'
 10536  00F74F  72                 	db	114	;'r'
 10537  00F750  6F                 	db	111	;'o'
 10538  00F751  72                 	db	114	;'r'
 10539  00F752  73                 	db	115	;'s'
 10540  00F753  20                 	db	32
 10541  00F754  61                 	db	97	;'a'
 10542  00F755  6E                 	db	110	;'n'
 10543  00F756  64                 	db	100	;'d'
 10544  00F757  20                 	db	32
 10545  00F758  6E                 	db	110	;'n'
 10546  00F759  65                 	db	101	;'e'
 10547  00F75A  67                 	db	103	;'g'
 10548  00F75B  61                 	db	97	;'a'
 10549  00F75C  74                 	db	116	;'t'
 10550  00F75D  69                 	db	105	;'i'
 10551  00F75E  76                 	db	118	;'v'
 10552  00F75F  65                 	db	101	;'e'
 10553  00F760  20                 	db	32
 10554  00F761  72                 	db	114	;'r'
 10555  00F762  65                 	db	101	;'e'
 10556  00F763  73                 	db	115	;'s'
 10557  00F764  70                 	db	112	;'p'
 10558  00F765  6F                 	db	111	;'o'
 10559  00F766  6E                 	db	110	;'n'
 10560  00F767  73                 	db	115	;'s'
 10561  00F768  65                 	db	101	;'e'
 10562  00F769  73                 	db	115	;'s'
 10563  00F76A  20                 	db	32
 10564  00F76B  61                 	db	97	;'a'
 10565  00F76C  70                 	db	112	;'p'
 10566  00F76D  70                 	db	112	;'p'
 10567  00F76E  65                 	db	101	;'e'
 10568  00F76F  61                 	db	97	;'a'
 10569  00F770  72                 	db	114	;'r'
 10570  00F771  20                 	db	32
 10571  00F772  69                 	db	105	;'i'
 10572  00F773  6E                 	db	110	;'n'
 10573  00F774  20                 	db	32
 10574  00F775  72                 	db	114	;'r'
 10575  00F776  65                 	db	101	;'e'
 10576  00F777  64                 	db	100	;'d'
 10577  00F778  0A                 	db	10
 10578  00F779  0D                 	db	13
 10579  00F77A  00                 	db	0
 10580  00F77B                     STR_128:
 10581  00F77B  45                 	db	69	;'E'
 10582  00F77C  6E                 	db	110	;'n'
 10583  00F77D  74                 	db	116	;'t'
 10584  00F77E  65                 	db	101	;'e'
 10585  00F77F  72                 	db	114	;'r'
 10586  00F780  20                 	db	32
 10587  00F781  27                 	db	39
 10588  00F782  48                 	db	72	;'H'
 10589  00F783  65                 	db	101	;'e'
 10590  00F784  6C                 	db	108	;'l'
 10591  00F785  70                 	db	112	;'p'
 10592  00F786  27                 	db	39
 10593  00F787  20                 	db	32
 10594  00F788  66                 	db	102	;'f'
 10595  00F789  6F                 	db	111	;'o'
 10596  00F78A  72                 	db	114	;'r'
 10597  00F78B  20                 	db	32
 10598  00F78C  6C                 	db	108	;'l'
 10599  00F78D  69                 	db	105	;'i'
 10600  00F78E  73                 	db	115	;'s'
 10601  00F78F  74                 	db	116	;'t'
 10602  00F790  20                 	db	32
 10603  00F791  6F                 	db	111	;'o'
 10604  00F792  66                 	db	102	;'f'
 10605  00F793  20                 	db	32
 10606  00F794  61                 	db	97	;'a'
 10607  00F795  76                 	db	118	;'v'
 10608  00F796  61                 	db	97	;'a'
 10609  00F797  69                 	db	105	;'i'
 10610  00F798  6C                 	db	108	;'l'
 10611  00F799  61                 	db	97	;'a'
 10612  00F79A  62                 	db	98	;'b'
 10613  00F79B  6C                 	db	108	;'l'
 10614  00F79C  65                 	db	101	;'e'
 10615  00F79D  20                 	db	32
 10616  00F79E  63                 	db	99	;'c'
 10617  00F79F  6F                 	db	111	;'o'
 10618  00F7A0  6D                 	db	109	;'m'
 10619  00F7A1  6D                 	db	109	;'m'
 10620  00F7A2  61                 	db	97	;'a'
 10621  00F7A3  6E                 	db	110	;'n'
 10622  00F7A4  64                 	db	100	;'d'
 10623  00F7A5  73                 	db	115	;'s'
 10624  00F7A6  0A                 	db	10
 10625  00F7A7  0D                 	db	13
 10626  00F7A8  00                 	db	0
 10627  00F7A9                     STR_139:
 10628  00F7A9  4D                 	db	77	;'M'
 10629  00F7AA  61                 	db	97	;'a'
 10630  00F7AB  78                 	db	120	;'x'
 10631  00F7AC  69                 	db	105	;'i'
 10632  00F7AD  6D                 	db	109	;'m'
 10633  00F7AE  75                 	db	117	;'u'
 10634  00F7AF  6D                 	db	109	;'m'
 10635  00F7B0  20                 	db	32
 10636  00F7B1  72                 	db	114	;'r'
 10637  00F7B2  65                 	db	101	;'e'
 10638  00F7B3  63                 	db	99	;'c'
 10639  00F7B4  6F                 	db	111	;'o'
 10640  00F7B5  72                 	db	114	;'r'
 10641  00F7B6  64                 	db	100	;'d'
 10642  00F7B7  65                 	db	101	;'e'
 10643  00F7B8  64                 	db	100	;'d'
 10644  00F7B9  20                 	db	32
 10645  00F7BA  6F                 	db	111	;'o'
 10646  00F7BB  75                 	db	117	;'u'
 10647  00F7BC  74                 	db	116	;'t'
 10648  00F7BD  70                 	db	112	;'p'
 10649  00F7BE  75                 	db	117	;'u'
 10650  00F7BF  74                 	db	116	;'t'
 10651  00F7C0  20                 	db	32
 10652  00F7C1  70                 	db	112	;'p'
 10653  00F7C2  6F                 	db	111	;'o'
 10654  00F7C3  77                 	db	119	;'w'
 10655  00F7C4  65                 	db	101	;'e'
 10656  00F7C5  72                 	db	114	;'r'
 10657  00F7C6  20                 	db	32
 10658  00F7C7  69                 	db	105	;'i'
 10659  00F7C8  73                 	db	115	;'s'
 10660  00F7C9  20                 	db	32
 10661  00F7CA  25                 	db	37
 10662  00F7CB  2E                 	db	46
 10663  00F7CC  33                 	db	51	;'3'
 10664  00F7CD  66                 	db	102	;'f'
 10665  00F7CE  20                 	db	32
 10666  00F7CF  57                 	db	87	;'W'
 10667  00F7D0  61                 	db	97	;'a'
 10668  00F7D1  74                 	db	116	;'t'
 10669  00F7D2  74                 	db	116	;'t'
 10670  00F7D3  73                 	db	115	;'s'
 10671  00F7D4  0A                 	db	10
 10672  00F7D5  0D                 	db	13
 10673  00F7D6  00                 	db	0
 10674  00F7D7                     STR_145:
 10675  00F7D7  4D                 	db	77	;'M'
 10676  00F7D8  61                 	db	97	;'a'
 10677  00F7D9  78                 	db	120	;'x'
 10678  00F7DA  69                 	db	105	;'i'
 10679  00F7DB  6D                 	db	109	;'m'
 10680  00F7DC  75                 	db	117	;'u'
 10681  00F7DD  6D                 	db	109	;'m'
 10682  00F7DE  20                 	db	32
 10683  00F7DF  72                 	db	114	;'r'
 10684  00F7E0  65                 	db	101	;'e'
 10685  00F7E1  63                 	db	99	;'c'
 10686  00F7E2  6F                 	db	111	;'o'
 10687  00F7E3  72                 	db	114	;'r'
 10688  00F7E4  64                 	db	100	;'d'
 10689  00F7E5  65                 	db	101	;'e'
 10690  00F7E6  64                 	db	100	;'d'
 10691  00F7E7  20                 	db	32
 10692  00F7E8  64                 	db	100	;'d'
 10693  00F7E9  69                 	db	105	;'i'
 10694  00F7EA  65                 	db	101	;'e'
 10695  00F7EB  20                 	db	32
 10696  00F7EC  74                 	db	116	;'t'
 10697  00F7ED  65                 	db	101	;'e'
 10698  00F7EE  6D                 	db	109	;'m'
 10699  00F7EF  70                 	db	112	;'p'
 10700  00F7F0  65                 	db	101	;'e'
 10701  00F7F1  72                 	db	114	;'r'
 10702  00F7F2  61                 	db	97	;'a'
 10703  00F7F3  74                 	db	116	;'t'
 10704  00F7F4  75                 	db	117	;'u'
 10705  00F7F5  72                 	db	114	;'r'
 10706  00F7F6  65                 	db	101	;'e'
 10707  00F7F7  20                 	db	32
 10708  00F7F8  69                 	db	105	;'i'
 10709  00F7F9  73                 	db	115	;'s'
 10710  00F7FA  20                 	db	32
 10711  00F7FB  25                 	db	37
 10712  00F7FC  2E                 	db	46
 10713  00F7FD  33                 	db	51	;'3'
 10714  00F7FE  66                 	db	102	;'f'
 10715  00F7FF  20                 	db	32
 10716  00F800  43                 	db	67	;'C'
 10717  00F801  0A                 	db	10
 10718  00F802  0D                 	db	13
 10719  00F803  00                 	db	0
 10720  00F804                     STR_115:
 10721  00F804  4C                 	db	76	;'L'
 10722  00F805  6F                 	db	111	;'o'
 10723  00F806  61                 	db	97	;'a'
 10724  00F807  64                 	db	100	;'d'
 10725  00F808  20                 	db	32
 10726  00F809  68                 	db	104	;'h'
 10727  00F80A  61                 	db	97	;'a'
 10728  00F80B  73                 	db	115	;'s'
 10729  00F80C  20                 	db	32
 10730  00F80D  62                 	db	98	;'b'
 10731  00F80E  65                 	db	101	;'e'
 10732  00F80F  65                 	db	101	;'e'
 10733  00F810  6E                 	db	110	;'n'
 10734  00F811  20                 	db	32
 10735  00F812  65                 	db	101	;'e'
 10736  00F813  6E                 	db	110	;'n'
 10737  00F814  61                 	db	97	;'a'
 10738  00F815  62                 	db	98	;'b'
 10739  00F816  6C                 	db	108	;'l'
 10740  00F817  65                 	db	101	;'e'
 10741  00F818  64                 	db	100	;'d'
 10742  00F819  2C                 	db	44
 10743  00F81A  20                 	db	32
 10744  00F81B  64                 	db	100	;'d'
 10745  00F81C  69                 	db	105	;'i'
 10746  00F81D  6D                 	db	109	;'m'
 10747  00F81E  6D                 	db	109	;'m'
 10748  00F81F  69                 	db	105	;'i'
 10749  00F820  6E                 	db	110	;'n'
 10750  00F821  67                 	db	103	;'g'
 10751  00F822  20                 	db	32
 10752  00F823  64                 	db	100	;'d'
 10753  00F824  69                 	db	105	;'i'
 10754  00F825  73                 	db	115	;'s'
 10755  00F826  61                 	db	97	;'a'
 10756  00F827  62                 	db	98	;'b'
 10757  00F828  6C                 	db	108	;'l'
 10758  00F829  65                 	db	101	;'e'
 10759  00F82A  64                 	db	100	;'d'
 10760  00F82B  0A                 	db	10
 10761  00F82C  0D                 	db	13
 10762  00F82D  00                 	db	0
 10763  00F82E                     STR_122:
 10764  00F82E  4C                 	db	76	;'L'
 10765  00F82F  6F                 	db	111	;'o'
 10766  00F830  61                 	db	97	;'a'
 10767  00F831  64                 	db	100	;'d'
 10768  00F832  20                 	db	32
 10769  00F833  61                 	db	97	;'a'
 10770  00F834  6E                 	db	110	;'n'
 10771  00F835  64                 	db	100	;'d'
 10772  00F836  20                 	db	32
 10773  00F837  64                 	db	100	;'d'
 10774  00F838  69                 	db	105	;'i'
 10775  00F839  6D                 	db	109	;'m'
 10776  00F83A  6D                 	db	109	;'m'
 10777  00F83B  69                 	db	105	;'i'
 10778  00F83C  6E                 	db	110	;'n'
 10779  00F83D  67                 	db	103	;'g'
 10780  00F83E  20                 	db	32
 10781  00F83F  61                 	db	97	;'a'
 10782  00F840  72                 	db	114	;'r'
 10783  00F841  65                 	db	101	;'e'
 10784  00F842  20                 	db	32
 10785  00F843  63                 	db	99	;'c'
 10786  00F844  75                 	db	117	;'u'
 10787  00F845  72                 	db	114	;'r'
 10788  00F846  72                 	db	114	;'r'
 10789  00F847  65                 	db	101	;'e'
 10790  00F848  6E                 	db	110	;'n'
 10791  00F849  74                 	db	116	;'t'
 10792  00F84A  6C                 	db	108	;'l'
 10793  00F84B  79                 	db	121	;'y'
 10794  00F84C  20                 	db	32
 10795  00F84D  64                 	db	100	;'d'
 10796  00F84E  69                 	db	105	;'i'
 10797  00F84F  73                 	db	115	;'s'
 10798  00F850  61                 	db	97	;'a'
 10799  00F851  62                 	db	98	;'b'
 10800  00F852  6C                 	db	108	;'l'
 10801  00F853  65                 	db	101	;'e'
 10802  00F854  64                 	db	100	;'d'
 10803  00F855  0A                 	db	10
 10804  00F856  0D                 	db	13
 10805  00F857  00                 	db	0
 10806  00F858                     STR_181:
 10807  00F858  57                 	db	87	;'W'
 10808  00F859  69                 	db	105	;'i'
 10809  00F85A  6E                 	db	110	;'n'
 10810  00F85B  64                 	db	100	;'d'
 10811  00F85C  6F                 	db	111	;'o'
 10812  00F85D  77                 	db	119	;'w'
 10813  00F85E  65                 	db	101	;'e'
 10814  00F85F  64                 	db	100	;'d'
 10815  00F860  20                 	db	32
 10816  00F861  57                 	db	87	;'W'
 10817  00F862  61                 	db	97	;'a'
 10818  00F863  74                 	db	116	;'t'
 10819  00F864  63                 	db	99	;'c'
 10820  00F865  68                 	db	104	;'h'
 10821  00F866  20                 	db	32
 10822  00F867  44                 	db	68	;'D'
 10823  00F868  6F                 	db	111	;'o'
 10824  00F869  67                 	db	103	;'g'
 10825  00F86A  20                 	db	32
 10826  00F86B  54                 	db	84	;'T'
 10827  00F86C  69                 	db	105	;'i'
 10828  00F86D  6D                 	db	109	;'m'
 10829  00F86E  65                 	db	101	;'e'
 10830  00F86F  72                 	db	114	;'r'
 10831  00F870  20                 	db	32
 10832  00F871  56                 	db	86	;'V'
 10833  00F872  69                 	db	105	;'i'
 10834  00F873  6F                 	db	111	;'o'
 10835  00F874  6C                 	db	108	;'l'
 10836  00F875  61                 	db	97	;'a'
 10837  00F876  74                 	db	116	;'t'
 10838  00F877  69                 	db	105	;'i'
 10839  00F878  6F                 	db	111	;'o'
 10840  00F879  6E                 	db	110	;'n'
 10841  00F87A  20                 	db	32
 10842  00F87B  52                 	db	82	;'R'
 10843  00F87C  65                 	db	101	;'e'
 10844  00F87D  73                 	db	115	;'s'
 10845  00F87E  65                 	db	101	;'e'
 10846  00F87F  74                 	db	116	;'t'
 10847  00F880  00                 	db	0
 10848  00F881                     STR_113:
 10849  00F881  54                 	db	84	;'T'
 10850  00F882  52                 	db	82	;'R'
 10851  00F883  49                 	db	73	;'I'
 10852  00F884  41                 	db	65	;'A'
 10853  00F885  43                 	db	67	;'C'
 10854  00F886  20                 	db	32
 10855  00F887  6F                 	db	111	;'o'
 10856  00F888  75                 	db	117	;'u'
 10857  00F889  74                 	db	116	;'t'
 10858  00F88A  70                 	db	112	;'p'
 10859  00F88B  75                 	db	117	;'u'
 10860  00F88C  74                 	db	116	;'t'
 10861  00F88D  20                 	db	32
 10862  00F88E  64                 	db	100	;'d'
 10863  00F88F  69                 	db	105	;'i'
 10864  00F890  6D                 	db	109	;'m'
 10865  00F891  6D                 	db	109	;'m'
 10866  00F892  69                 	db	105	;'i'
 10867  00F893  6E                 	db	110	;'n'
 10868  00F894  67                 	db	103	;'g'
 10869  00F895  20                 	db	32
 10870  00F896  68                 	db	104	;'h'
 10871  00F897  61                 	db	97	;'a'
 10872  00F898  73                 	db	115	;'s'
 10873  00F899  20                 	db	32
 10874  00F89A  62                 	db	98	;'b'
 10875  00F89B  65                 	db	101	;'e'
 10876  00F89C  65                 	db	101	;'e'
 10877  00F89D  6E                 	db	110	;'n'
 10878  00F89E  20                 	db	32
 10879  00F89F  64                 	db	100	;'d'
 10880  00F8A0  69                 	db	105	;'i'
 10881  00F8A1  73                 	db	115	;'s'
 10882  00F8A2  61                 	db	97	;'a'
 10883  00F8A3  62                 	db	98	;'b'
 10884  00F8A4  6C                 	db	108	;'l'
 10885  00F8A5  65                 	db	101	;'e'
 10886  00F8A6  64                 	db	100	;'d'
 10887  00F8A7  0A                 	db	10
 10888  00F8A8  0D                 	db	13
 10889  00F8A9  00                 	db	0
 10890  00F8AA                     STR_164:
 10891  00F8AA  4D                 	db	77	;'M'
 10892  00F8AB  65                 	db	101	;'e'
 10893  00F8AC  61                 	db	97	;'a'
 10894  00F8AD  73                 	db	115	;'s'
 10895  00F8AE  75                 	db	117	;'u'
 10896  00F8AF  72                 	db	114	;'r'
 10897  00F8B0  65                 	db	101	;'e'
 10898  00F8B1  6D                 	db	109	;'m'
 10899  00F8B2  65                 	db	101	;'e'
 10900  00F8B3  6E                 	db	110	;'n'
 10901  00F8B4  74                 	db	116	;'t'
 10902  00F8B5  20                 	db	32
 10903  00F8B6  72                 	db	114	;'r'
 10904  00F8B7  65                 	db	101	;'e'
 10905  00F8B8  73                 	db	115	;'s'
 10906  00F8B9  70                 	db	112	;'p'
 10907  00F8BA  6F                 	db	111	;'o'
 10908  00F8BB  6E                 	db	110	;'n'
 10909  00F8BC  73                 	db	115	;'s'
 10910  00F8BD  65                 	db	101	;'e'
 10911  00F8BE  73                 	db	115	;'s'
 10912  00F8BF  20                 	db	32
 10913  00F8C0  61                 	db	97	;'a'
 10914  00F8C1  70                 	db	112	;'p'
 10915  00F8C2  70                 	db	112	;'p'
 10916  00F8C3  65                 	db	101	;'e'
 10917  00F8C4  61                 	db	97	;'a'
 10918  00F8C5  72                 	db	114	;'r'
 10919  00F8C6  20                 	db	32
 10920  00F8C7  69                 	db	105	;'i'
 10921  00F8C8  6E                 	db	110	;'n'
 10922  00F8C9  20                 	db	32
 10923  00F8CA  63                 	db	99	;'c'
 10924  00F8CB  79                 	db	121	;'y'
 10925  00F8CC  61                 	db	97	;'a'
 10926  00F8CD  6E                 	db	110	;'n'
 10927  00F8CE  0A                 	db	10
 10928  00F8CF  0D                 	db	13
 10929  00F8D0  00                 	db	0
 10930  00F8D1                     STR_92:
 10931  00F8D1  41                 	db	65	;'A'
 10932  00F8D2  56                 	db	86	;'V'
 10933  00F8D3  53                 	db	83	;'S'
 10934  00F8D4  53                 	db	83	;'S'
 10935  00F8D5  20                 	db	32
 10936  00F8D6  6D                 	db	109	;'m'
 10937  00F8D7  65                 	db	101	;'e'
 10938  00F8D8  61                 	db	97	;'a'
 10939  00F8D9  73                 	db	115	;'s'
 10940  00F8DA  75                 	db	117	;'u'
 10941  00F8DB  72                 	db	114	;'r'
 10942  00F8DC  65                 	db	101	;'e'
 10943  00F8DD  64                 	db	100	;'d'
 10944  00F8DE  20                 	db	32
 10945  00F8DF  61                 	db	97	;'a'
 10946  00F8E0  73                 	db	115	;'s'
 10947  00F8E1  20                 	db	32
 10948  00F8E2  25                 	db	37
 10949  00F8E3  2E                 	db	46
 10950  00F8E4  33                 	db	51	;'3'
 10951  00F8E5  66                 	db	102	;'f'
 10952  00F8E6  20                 	db	32
 10953  00F8E7  56                 	db	86	;'V'
 10954  00F8E8  6F                 	db	111	;'o'
 10955  00F8E9  6C                 	db	108	;'l'
 10956  00F8EA  74                 	db	116	;'t'
 10957  00F8EB  73                 	db	115	;'s'
 10958  00F8EC  20                 	db	32
 10959  00F8ED  62                 	db	98	;'b'
 10960  00F8EE  79                 	db	121	;'y'
 10961  00F8EF  20                 	db	32
 10962  00F8F0  41                 	db	65	;'A'
 10963  00F8F1  44                 	db	68	;'D'
 10964  00F8F2  43                 	db	67	;'C'
 10965  00F8F3  0A                 	db	10
 10966  00F8F4  0D                 	db	13
 10967  00F8F5  00                 	db	0
 10968  00F8F6                     STR_84:
 10969  00F8F6  2B                 	db	43
 10970  00F8F7  33                 	db	51	;'3'
 10971  00F8F8  2E                 	db	46
 10972  00F8F9  33                 	db	51	;'3'
 10973  00F8FA  56                 	db	86	;'V'
 10974  00F8FB  20                 	db	32
 10975  00F8FC  72                 	db	114	;'r'
 10976  00F8FD  61                 	db	97	;'a'
 10977  00F8FE  69                 	db	105	;'i'
 10978  00F8FF  6C                 	db	108	;'l'
 10979  00F900  20                 	db	32
 10980  00F901  6D                 	db	109	;'m'
 10981  00F902  65                 	db	101	;'e'
 10982  00F903  61                 	db	97	;'a'
 10983  00F904  73                 	db	115	;'s'
 10984  00F905  75                 	db	117	;'u'
 10985  00F906  72                 	db	114	;'r'
 10986  00F907  65                 	db	101	;'e'
 10987  00F908  64                 	db	100	;'d'
 10988  00F909  20                 	db	32
 10989  00F90A  61                 	db	97	;'a'
 10990  00F90B  73                 	db	115	;'s'
 10991  00F90C  20                 	db	32
 10992  00F90D  2B                 	db	43
 10993  00F90E  25                 	db	37
 10994  00F90F  2E                 	db	46
 10995  00F910  33                 	db	51	;'3'
 10996  00F911  66                 	db	102	;'f'
 10997  00F912  20                 	db	32
 10998  00F913  56                 	db	86	;'V'
 10999  00F914  6F                 	db	111	;'o'
 11000  00F915  6C                 	db	108	;'l'
 11001  00F916  74                 	db	116	;'t'
 11002  00F917  73                 	db	115	;'s'
 11003  00F918  0A                 	db	10
 11004  00F919  0D                 	db	13
 11005  00F91A  00                 	db	0
 11006  00F91B                     STR_129:
 11007  00F91B  44                 	db	68	;'D'
 11008  00F91C  69                 	db	105	;'i'
 11009  00F91D  6D                 	db	109	;'m'
 11010  00F91E  6D                 	db	109	;'m'
 11011  00F91F  69                 	db	105	;'i'
 11012  00F920  6E                 	db	110	;'n'
 11013  00F921  67                 	db	103	;'g'
 11014  00F922  20                 	db	32
 11015  00F923  68                 	db	104	;'h'
 11016  00F924  61                 	db	97	;'a'
 11017  00F925  73                 	db	115	;'s'
 11018  00F926  20                 	db	32
 11019  00F927  62                 	db	98	;'b'
 11020  00F928  65                 	db	101	;'e'
 11021  00F929  65                 	db	101	;'e'
 11022  00F92A  6E                 	db	110	;'n'
 11023  00F92B  20                 	db	32
 11024  00F92C  73                 	db	115	;'s'
 11025  00F92D  65                 	db	101	;'e'
 11026  00F92E  74                 	db	116	;'t'
 11027  00F92F  20                 	db	32
 11028  00F930  74                 	db	116	;'t'
 11029  00F931  6F                 	db	111	;'o'
 11030  00F932  20                 	db	32
 11031  00F933  25                 	db	37
 11032  00F934  64                 	db	100	;'d'
 11033  00F935  20                 	db	32
 11034  00F936  70                 	db	112	;'p'
 11035  00F937  65                 	db	101	;'e'
 11036  00F938  72                 	db	114	;'r'
 11037  00F939  63                 	db	99	;'c'
 11038  00F93A  65                 	db	101	;'e'
 11039  00F93B  6E                 	db	110	;'n'
 11040  00F93C  74                 	db	116	;'t'
 11041  00F93D  0A                 	db	10
 11042  00F93E  0D                 	db	13
 11043  00F93F  00                 	db	0
 11044  00F940                     STR_88:
 11045  00F940  44                 	db	68	;'D'
 11046  00F941  69                 	db	105	;'i'
 11047  00F942  65                 	db	101	;'e'
 11048  00F943  20                 	db	32
 11049  00F944  54                 	db	84	;'T'
 11050  00F945  65                 	db	101	;'e'
 11051  00F946  6D                 	db	109	;'m'
 11052  00F947  70                 	db	112	;'p'
 11053  00F948  65                 	db	101	;'e'
 11054  00F949  72                 	db	114	;'r'
 11055  00F94A  61                 	db	97	;'a'
 11056  00F94B  74                 	db	116	;'t'
 11057  00F94C  75                 	db	117	;'u'
 11058  00F94D  72                 	db	114	;'r'
 11059  00F94E  65                 	db	101	;'e'
 11060  00F94F  20                 	db	32
 11061  00F950  6D                 	db	109	;'m'
 11062  00F951  65                 	db	101	;'e'
 11063  00F952  61                 	db	97	;'a'
 11064  00F953  73                 	db	115	;'s'
 11065  00F954  75                 	db	117	;'u'
 11066  00F955  72                 	db	114	;'r'
 11067  00F956  65                 	db	101	;'e'
 11068  00F957  64                 	db	100	;'d'
 11069  00F958  20                 	db	32
 11070  00F959  61                 	db	97	;'a'
 11071  00F95A  73                 	db	115	;'s'
 11072  00F95B  20                 	db	32
 11073  00F95C  25                 	db	37
 11074  00F95D  2E                 	db	46
 11075  00F95E  33                 	db	51	;'3'
 11076  00F95F  66                 	db	102	;'f'
 11077  00F960  43                 	db	67	;'C'
 11078  00F961  0A                 	db	10
 11079  00F962  0D                 	db	13
 11080  00F963  00                 	db	0
 11081  00F964                     STR_86:
 11082  00F964  2B                 	db	43
 11083  00F965  31                 	db	49	;'1'
 11084  00F966  32                 	db	50	;'2'
 11085  00F967  56                 	db	86	;'V'
 11086  00F968  20                 	db	32
 11087  00F969  72                 	db	114	;'r'
 11088  00F96A  61                 	db	97	;'a'
 11089  00F96B  69                 	db	105	;'i'
 11090  00F96C  6C                 	db	108	;'l'
 11091  00F96D  20                 	db	32
 11092  00F96E  6D                 	db	109	;'m'
 11093  00F96F  65                 	db	101	;'e'
 11094  00F970  61                 	db	97	;'a'
 11095  00F971  73                 	db	115	;'s'
 11096  00F972  75                 	db	117	;'u'
 11097  00F973  72                 	db	114	;'r'
 11098  00F974  65                 	db	101	;'e'
 11099  00F975  64                 	db	100	;'d'
 11100  00F976  20                 	db	32
 11101  00F977  61                 	db	97	;'a'
 11102  00F978  73                 	db	115	;'s'
 11103  00F979  20                 	db	32
 11104  00F97A  2B                 	db	43
 11105  00F97B  25                 	db	37
 11106  00F97C  2E                 	db	46
 11107  00F97D  33                 	db	51	;'3'
 11108  00F97E  66                 	db	102	;'f'
 11109  00F97F  20                 	db	32
 11110  00F980  56                 	db	86	;'V'
 11111  00F981  6F                 	db	111	;'o'
 11112  00F982  6C                 	db	108	;'l'
 11113  00F983  74                 	db	116	;'t'
 11114  00F984  73                 	db	115	;'s'
 11115  00F985  0A                 	db	10
 11116  00F986  0D                 	db	13
 11117  00F987  00                 	db	0
 11118  00F988                     STR_80:
 11119  00F988  4E                 	db	78	;'N'
 11120  00F989  6F                 	db	111	;'o'
 11121  00F98A  20                 	db	32
 11122  00F98B  63                 	db	99	;'c'
 11123  00F98C  6F                 	db	111	;'o'
 11124  00F98D  6D                 	db	109	;'m'
 11125  00F98E  6D                 	db	109	;'m'
 11126  00F98F  75                 	db	117	;'u'
 11127  00F990  6E                 	db	110	;'n'
 11128  00F991  69                 	db	105	;'i'
 11129  00F992  63                 	db	99	;'c'
 11130  00F993  61                 	db	97	;'a'
 11131  00F994  74                 	db	116	;'t'
 11132  00F995  69                 	db	105	;'i'
 11133  00F996  6F                 	db	111	;'o'
 11134  00F997  6E                 	db	110	;'n'
 11135  00F998  73                 	db	115	;'s'
 11136  00F999  20                 	db	32
 11137  00F99A  65                 	db	101	;'e'
 11138  00F99B  72                 	db	114	;'r'
 11139  00F99C  72                 	db	114	;'r'
 11140  00F99D  6F                 	db	111	;'o'
 11141  00F99E  72                 	db	114	;'r'
 11142  00F99F  20                 	db	32
 11143  00F9A0  64                 	db	100	;'d'
 11144  00F9A1  65                 	db	101	;'e'
 11145  00F9A2  74                 	db	116	;'t'
 11146  00F9A3  65                 	db	101	;'e'
 11147  00F9A4  63                 	db	99	;'c'
 11148  00F9A5  74                 	db	116	;'t'
 11149  00F9A6  65                 	db	101	;'e'
 11150  00F9A7  64                 	db	100	;'d'
 11151  00F9A8  0A                 	db	10
 11152  00F9A9  0D                 	db	13
 11153  00F9AA  00                 	db	0
 11154  00F9AB                     STR_111:
 11155  00F9AB  4F                 	db	79	;'O'
 11156  00F9AC  75                 	db	117	;'u'
 11157  00F9AD  74                 	db	116	;'t'
 11158  00F9AE  70                 	db	112	;'p'
 11159  00F9AF  75                 	db	117	;'u'
 11160  00F9B0  74                 	db	116	;'t'
 11161  00F9B1  20                 	db	32
 11162  00F9B2  64                 	db	100	;'d'
 11163  00F9B3  69                 	db	105	;'i'
 11164  00F9B4  6D                 	db	109	;'m'
 11165  00F9B5  6D                 	db	109	;'m'
 11166  00F9B6  69                 	db	105	;'i'
 11167  00F9B7  6E                 	db	110	;'n'
 11168  00F9B8  67                 	db	103	;'g'
 11169  00F9B9  20                 	db	32
 11170  00F9BA  68                 	db	104	;'h'
 11171  00F9BB  61                 	db	97	;'a'
 11172  00F9BC  73                 	db	115	;'s'
 11173  00F9BD  20                 	db	32
 11174  00F9BE  62                 	db	98	;'b'
 11175  00F9BF  65                 	db	101	;'e'
 11176  00F9C0  65                 	db	101	;'e'
 11177  00F9C1  6E                 	db	110	;'n'
 11178  00F9C2  20                 	db	32
 11179  00F9C3  65                 	db	101	;'e'
 11180  00F9C4  6E                 	db	110	;'n'
 11181  00F9C5  61                 	db	97	;'a'
 11182  00F9C6  62                 	db	98	;'b'
 11183  00F9C7  6C                 	db	108	;'l'
 11184  00F9C8  65                 	db	101	;'e'
 11185  00F9C9  64                 	db	100	;'d'
 11186  00F9CA  0A                 	db	10
 11187  00F9CB  0D                 	db	13
 11188  00F9CC  00                 	db	0
 11189  00F9CD                     STR_96:
 11190  00F9CD  52                 	db	82	;'R'
 11191  00F9CE  4D                 	db	77	;'M'
 11192  00F9CF  53                 	db	83	;'S'
 11193  00F9D0  20                 	db	32
 11194  00F9D1  4F                 	db	79	;'O'
 11195  00F9D2  75                 	db	117	;'u'
 11196  00F9D3  74                 	db	116	;'t'
 11197  00F9D4  70                 	db	112	;'p'
 11198  00F9D5  75                 	db	117	;'u'
 11199  00F9D6  74                 	db	116	;'t'
 11200  00F9D7  20                 	db	32
 11201  00F9D8  43                 	db	67	;'C'
 11202  00F9D9  75                 	db	117	;'u'
 11203  00F9DA  72                 	db	114	;'r'
 11204  00F9DB  72                 	db	114	;'r'
 11205  00F9DC  65                 	db	101	;'e'
 11206  00F9DD  6E                 	db	110	;'n'
 11207  00F9DE  74                 	db	116	;'t'
 11208  00F9DF  20                 	db	32
 11209  00F9E0  69                 	db	105	;'i'
 11210  00F9E1  73                 	db	115	;'s'
 11211  00F9E2  20                 	db	32
 11212  00F9E3  25                 	db	37
 11213  00F9E4  2E                 	db	46
 11214  00F9E5  33                 	db	51	;'3'
 11215  00F9E6  66                 	db	102	;'f'
 11216  00F9E7  20                 	db	32
 11217  00F9E8  41                 	db	65	;'A'
 11218  00F9E9  72                 	db	114	;'r'
 11219  00F9EA  6D                 	db	109	;'m'
 11220  00F9EB  73                 	db	115	;'s'
 11221  00F9EC  0A                 	db	10
 11222  00F9ED  0D                 	db	13
 11223  00F9EE  00                 	db	0
 11224  00F9EF                     STR_98:
 11225  00F9EF  52                 	db	82	;'R'
 11226  00F9F0  4D                 	db	77	;'M'
 11227  00F9F1  53                 	db	83	;'S'
 11228  00F9F2  20                 	db	32
 11229  00F9F3  4F                 	db	79	;'O'
 11230  00F9F4  75                 	db	117	;'u'
 11231  00F9F5  74                 	db	116	;'t'
 11232  00F9F6  70                 	db	112	;'p'
 11233  00F9F7  75                 	db	117	;'u'
 11234  00F9F8  74                 	db	116	;'t'
 11235  00F9F9  20                 	db	32
 11236  00F9FA  56                 	db	86	;'V'
 11237  00F9FB  6F                 	db	111	;'o'
 11238  00F9FC  6C                 	db	108	;'l'
 11239  00F9FD  74                 	db	116	;'t'
 11240  00F9FE  61                 	db	97	;'a'
 11241  00F9FF  67                 	db	103	;'g'
 11242  00FA00  65                 	db	101	;'e'
 11243  00FA01  20                 	db	32
 11244  00FA02  69                 	db	105	;'i'
 11245  00FA03  73                 	db	115	;'s'
 11246  00FA04  20                 	db	32
 11247  00FA05  25                 	db	37
 11248  00FA06  2E                 	db	46
 11249  00FA07  33                 	db	51	;'3'
 11250  00FA08  66                 	db	102	;'f'
 11251  00FA09  20                 	db	32
 11252  00FA0A  56                 	db	86	;'V'
 11253  00FA0B  72                 	db	114	;'r'
 11254  00FA0C  6D                 	db	109	;'m'
 11255  00FA0D  73                 	db	115	;'s'
 11256  00FA0E  0A                 	db	10
 11257  00FA0F  0D                 	db	13
 11258  00FA10  00                 	db	0
 11259  00FA11                     STR_154:
 11260  00FA11  48                 	db	72	;'H'
 11261  00FA12  65                 	db	101	;'e'
 11262  00FA13  6C                 	db	108	;'l'
 11263  00FA14  70                 	db	112	;'p'
 11264  00FA15  20                 	db	32
 11265  00FA16  50                 	db	80	;'P'
 11266  00FA17  72                 	db	114	;'r'
 11267  00FA18  69                 	db	105	;'i'
 11268  00FA19  6D                 	db	109	;'m'
 11269  00FA1A  61                 	db	97	;'a'
 11270  00FA1B  72                 	db	114	;'r'
 11271  00FA1C  79                 	db	121	;'y'
 11272  00FA1D  20                 	db	32
 11273  00FA1E  4D                 	db	77	;'M'
 11274  00FA1F  65                 	db	101	;'e'
 11275  00FA20  61                 	db	97	;'a'
 11276  00FA21  73                 	db	115	;'s'
 11277  00FA22  75                 	db	117	;'u'
 11278  00FA23  72                 	db	114	;'r'
 11279  00FA24  65                 	db	101	;'e'
 11280  00FA25  6D                 	db	109	;'m'
 11281  00FA26  65                 	db	101	;'e'
 11282  00FA27  6E                 	db	110	;'n'
 11283  00FA28  74                 	db	116	;'t'
 11284  00FA29  20                 	db	32
 11285  00FA2A  43                 	db	67	;'C'
 11286  00FA2B  6F                 	db	111	;'o'
 11287  00FA2C  6D                 	db	109	;'m'
 11288  00FA2D  6D                 	db	109	;'m'
 11289  00FA2E  61                 	db	97	;'a'
 11290  00FA2F  6E                 	db	110	;'n'
 11291  00FA30  64                 	db	100	;'d'
 11292  00FA31  73                 	db	115	;'s'
 11293  00FA32  00                 	db	0
 11294  00FA33                     STR_78:
 11295  00FA33  43                 	db	67	;'C'
 11296  00FA34  6F                 	db	111	;'o'
 11297  00FA35  6D                 	db	109	;'m'
 11298  00FA36  6D                 	db	109	;'m'
 11299  00FA37  75                 	db	117	;'u'
 11300  00FA38  6E                 	db	110	;'n'
 11301  00FA39  69                 	db	105	;'i'
 11302  00FA3A  63                 	db	99	;'c'
 11303  00FA3B  61                 	db	97	;'a'
 11304  00FA3C  74                 	db	116	;'t'
 11305  00FA3D  69                 	db	105	;'i'
 11306  00FA3E  6F                 	db	111	;'o'
 11307  00FA3F  6E                 	db	110	;'n'
 11308  00FA40  73                 	db	115	;'s'
 11309  00FA41  20                 	db	32
 11310  00FA42  65                 	db	101	;'e'
 11311  00FA43  72                 	db	114	;'r'
 11312  00FA44  72                 	db	114	;'r'
 11313  00FA45  6F                 	db	111	;'o'
 11314  00FA46  72                 	db	114	;'r'
 11315  00FA47  20                 	db	32
 11316  00FA48  64                 	db	100	;'d'
 11317  00FA49  65                 	db	101	;'e'
 11318  00FA4A  74                 	db	116	;'t'
 11319  00FA4B  65                 	db	101	;'e'
 11320  00FA4C  63                 	db	99	;'c'
 11321  00FA4D  74                 	db	116	;'t'
 11322  00FA4E  65                 	db	101	;'e'
 11323  00FA4F  64                 	db	100	;'d'
 11324  00FA50  21                 	db	33
 11325  00FA51  0A                 	db	10
 11326  00FA52  0D                 	db	13
 11327  00FA53  00                 	db	0
 11328  00FA54                     STR_152:
 11329  00FA54  48                 	db	72	;'H'
 11330  00FA55  65                 	db	101	;'e'
 11331  00FA56  6C                 	db	108	;'l'
 11332  00FA57  70                 	db	112	;'p'
 11333  00FA58  20                 	db	32
 11334  00FA59  44                 	db	68	;'D'
 11335  00FA5A  65                 	db	101	;'e'
 11336  00FA5B  76                 	db	118	;'v'
 11337  00FA5C  69                 	db	105	;'i'
 11338  00FA5D  63                 	db	99	;'c'
 11339  00FA5E  65                 	db	101	;'e'
 11340  00FA5F  20                 	db	32
 11341  00FA60  4D                 	db	77	;'M'
 11342  00FA61  65                 	db	101	;'e'
 11343  00FA62  61                 	db	97	;'a'
 11344  00FA63  73                 	db	115	;'s'
 11345  00FA64  75                 	db	117	;'u'
 11346  00FA65  72                 	db	114	;'r'
 11347  00FA66  65                 	db	101	;'e'
 11348  00FA67  6D                 	db	109	;'m'
 11349  00FA68  65                 	db	101	;'e'
 11350  00FA69  6E                 	db	110	;'n'
 11351  00FA6A  74                 	db	116	;'t'
 11352  00FA6B  20                 	db	32
 11353  00FA6C  43                 	db	67	;'C'
 11354  00FA6D  6F                 	db	111	;'o'
 11355  00FA6E  6D                 	db	109	;'m'
 11356  00FA6F  6D                 	db	109	;'m'
 11357  00FA70  61                 	db	97	;'a'
 11358  00FA71  6E                 	db	110	;'n'
 11359  00FA72  64                 	db	100	;'d'
 11360  00FA73  73                 	db	115	;'s'
 11361  00FA74  00                 	db	0
 11362  00FA75                     STR_94:
 11363  00FA75  4D                 	db	77	;'M'
 11364  00FA76  65                 	db	101	;'e'
 11365  00FA77  61                 	db	97	;'a'
 11366  00FA78  73                 	db	115	;'s'
 11367  00FA79  75                 	db	117	;'u'
 11368  00FA7A  72                 	db	114	;'r'
 11369  00FA7B  65                 	db	101	;'e'
 11370  00FA7C  64                 	db	100	;'d'
 11371  00FA7D  20                 	db	32
 11372  00FA7E  43                 	db	67	;'C'
 11373  00FA7F  75                 	db	117	;'u'
 11374  00FA80  72                 	db	114	;'r'
 11375  00FA81  72                 	db	114	;'r'
 11376  00FA82  65                 	db	101	;'e'
 11377  00FA83  6E                 	db	110	;'n'
 11378  00FA84  74                 	db	116	;'t'
 11379  00FA85  20                 	db	32
 11380  00FA86  69                 	db	105	;'i'
 11381  00FA87  73                 	db	115	;'s'
 11382  00FA88  20                 	db	32
 11383  00FA89  25                 	db	37
 11384  00FA8A  2E                 	db	46
 11385  00FA8B  33                 	db	51	;'3'
 11386  00FA8C  66                 	db	102	;'f'
 11387  00FA8D  20                 	db	32
 11388  00FA8E  41                 	db	65	;'A'
 11389  00FA8F  6D                 	db	109	;'m'
 11390  00FA90  70                 	db	112	;'p'
 11391  00FA91  73                 	db	115	;'s'
 11392  00FA92  0A                 	db	10
 11393  00FA93  0D                 	db	13
 11394  00FA94  00                 	db	0
 11395  00FA95                     STR_120:
 11396  00FA95  44                 	db	68	;'D'
 11397  00FA96  69                 	db	105	;'i'
 11398  00FA97  6D                 	db	109	;'m'
 11399  00FA98  6D                 	db	109	;'m'
 11400  00FA99  69                 	db	105	;'i'
 11401  00FA9A  6E                 	db	110	;'n'
 11402  00FA9B  67                 	db	103	;'g'
 11403  00FA9C  20                 	db	32
 11404  00FA9D  69                 	db	105	;'i'
 11405  00FA9E  73                 	db	115	;'s'
 11406  00FA9F  20                 	db	32
 11407  00FAA0  63                 	db	99	;'c'
 11408  00FAA1  75                 	db	117	;'u'
 11409  00FAA2  72                 	db	114	;'r'
 11410  00FAA3  72                 	db	114	;'r'
 11411  00FAA4  65                 	db	101	;'e'
 11412  00FAA5  6E                 	db	110	;'n'
 11413  00FAA6  74                 	db	116	;'t'
 11414  00FAA7  6C                 	db	108	;'l'
 11415  00FAA8  79                 	db	121	;'y'
 11416  00FAA9  20                 	db	32
 11417  00FAAA  65                 	db	101	;'e'
 11418  00FAAB  6E                 	db	110	;'n'
 11419  00FAAC  61                 	db	97	;'a'
 11420  00FAAD  62                 	db	98	;'b'
 11421  00FAAE  6C                 	db	108	;'l'
 11422  00FAAF  65                 	db	101	;'e'
 11423  00FAB0  64                 	db	100	;'d'
 11424  00FAB1  0A                 	db	10
 11425  00FAB2  0D                 	db	13
 11426  00FAB3  00                 	db	0
 11427  00FAB4                     STR_82:
 11428  00FAB4  43                 	db	67	;'C'
 11429  00FAB5  6F                 	db	111	;'o'
 11430  00FAB6  6D                 	db	109	;'m'
 11431  00FAB7  6D                 	db	109	;'m'
 11432  00FAB8  75                 	db	117	;'u'
 11433  00FAB9  6E                 	db	110	;'n'
 11434  00FABA  69                 	db	105	;'i'
 11435  00FABB  63                 	db	99	;'c'
 11436  00FABC  61                 	db	97	;'a'
 11437  00FABD  74                 	db	116	;'t'
 11438  00FABE  69                 	db	105	;'i'
 11439  00FABF  6F                 	db	111	;'o'
 11440  00FAC0  6E                 	db	110	;'n'
 11441  00FAC1  73                 	db	115	;'s'
 11442  00FAC2  20                 	db	32
 11443  00FAC3  65                 	db	101	;'e'
 11444  00FAC4  72                 	db	114	;'r'
 11445  00FAC5  72                 	db	114	;'r'
 11446  00FAC6  6F                 	db	111	;'o'
 11447  00FAC7  72                 	db	114	;'r'
 11448  00FAC8  20                 	db	32
 11449  00FAC9  63                 	db	99	;'c'
 11450  00FACA  6C                 	db	108	;'l'
 11451  00FACB  65                 	db	101	;'e'
 11452  00FACC  61                 	db	97	;'a'
 11453  00FACD  72                 	db	114	;'r'
 11454  00FACE  65                 	db	101	;'e'
 11455  00FACF  64                 	db	100	;'d'
 11456  00FAD0  0A                 	db	10
 11457  00FAD1  0D                 	db	13
 11458  00FAD2  00                 	db	0
 11459  00FAD3                     STR_171:
 11460  00FAD3  44                 	db	68	;'D'
 11461  00FAD4  72                 	db	114	;'r'
 11462  00FAD5  65                 	db	101	;'e'
 11463  00FAD6  77                 	db	119	;'w'
 11464  00FAD7  20                 	db	32
 11465  00FAD8  4D                 	db	77	;'M'
 11466  00FAD9  61                 	db	97	;'a'
 11467  00FADA  61                 	db	97	;'a'
 11468  00FADB  74                 	db	116	;'t'
 11469  00FADC  6D                 	db	109	;'m'
 11470  00FADD  61                 	db	97	;'a'
 11471  00FADE  6E                 	db	110	;'n'
 11472  00FADF  20                 	db	32
 11473  00FAE0  61                 	db	97	;'a'
 11474  00FAE1  6E                 	db	110	;'n'
 11475  00FAE2  64                 	db	100	;'d'
 11476  00FAE3  20                 	db	32
 11477  00FAE4  47                 	db	71	;'G'
 11478  00FAE5  61                 	db	97	;'a'
 11479  00FAE6  62                 	db	98	;'b'
 11480  00FAE7  65                 	db	101	;'e'
 11481  00FAE8  20                 	db	32
 11482  00FAE9  54                 	db	84	;'T'
 11483  00FAEA  68                 	db	104	;'h'
 11484  00FAEB  61                 	db	97	;'a'
 11485  00FAEC  6C                 	db	108	;'l'
 11486  00FAED  6A                 	db	106	;'j'
 11487  00FAEE  69                 	db	105	;'i'
 11488  00FAEF  0A                 	db	10
 11489  00FAF0  0D                 	db	13
 11490  00FAF1  00                 	db	0
 11491  00FAF2                     STR_166:
 11492  00FAF2  55                 	db	85	;'U'
 11493  00FAF3  73                 	db	115	;'s'
 11494  00FAF4  65                 	db	101	;'e'
 11495  00FAF5  72                 	db	114	;'r'
 11496  00FAF6  20                 	db	32
 11497  00FAF7  69                 	db	105	;'i'
 11498  00FAF8  6E                 	db	110	;'n'
 11499  00FAF9  70                 	db	112	;'p'
 11500  00FAFA  75                 	db	117	;'u'
 11501  00FAFB  74                 	db	116	;'t'
 11502  00FAFC  20                 	db	32
 11503  00FAFD  61                 	db	97	;'a'
 11504  00FAFE  70                 	db	112	;'p'
 11505  00FAFF  70                 	db	112	;'p'
 11506  00FB00  65                 	db	101	;'e'
 11507  00FB01  61                 	db	97	;'a'
 11508  00FB02  72                 	db	114	;'r'
 11509  00FB03  73                 	db	115	;'s'
 11510  00FB04  20                 	db	32
 11511  00FB05  69                 	db	105	;'i'
 11512  00FB06  6E                 	db	110	;'n'
 11513  00FB07  20                 	db	32
 11514  00FB08  77                 	db	119	;'w'
 11515  00FB09  68                 	db	104	;'h'
 11516  00FB0A  69                 	db	105	;'i'
 11517  00FB0B  74                 	db	116	;'t'
 11518  00FB0C  65                 	db	101	;'e'
 11519  00FB0D  0A                 	db	10
 11520  00FB0E  0D                 	db	13
 11521  00FB0F  00                 	db	0
 11522  00FB10                     STR_118:
 11523  00FB10  4C                 	db	76	;'L'
 11524  00FB11  6F                 	db	111	;'o'
 11525  00FB12  61                 	db	97	;'a'
 11526  00FB13  64                 	db	100	;'d'
 11527  00FB14  20                 	db	32
 11528  00FB15  69                 	db	105	;'i'
 11529  00FB16  73                 	db	115	;'s'
 11530  00FB17  20                 	db	32
 11531  00FB18  63                 	db	99	;'c'
 11532  00FB19  75                 	db	117	;'u'
 11533  00FB1A  72                 	db	114	;'r'
 11534  00FB1B  72                 	db	114	;'r'
 11535  00FB1C  65                 	db	101	;'e'
 11536  00FB1D  6E                 	db	110	;'n'
 11537  00FB1E  74                 	db	116	;'t'
 11538  00FB1F  6C                 	db	108	;'l'
 11539  00FB20  79                 	db	121	;'y'
 11540  00FB21  20                 	db	32
 11541  00FB22  64                 	db	100	;'d'
 11542  00FB23  69                 	db	105	;'i'
 11543  00FB24  73                 	db	115	;'s'
 11544  00FB25  61                 	db	97	;'a'
 11545  00FB26  62                 	db	98	;'b'
 11546  00FB27  6C                 	db	108	;'l'
 11547  00FB28  65                 	db	101	;'e'
 11548  00FB29  64                 	db	100	;'d'
 11549  00FB2A  0A                 	db	10
 11550  00FB2B  0D                 	db	13
 11551  00FB2C  00                 	db	0
 11552  00FB2D                     STR_150:
 11553  00FB2D  48                 	db	72	;'H'
 11554  00FB2E  65                 	db	101	;'e'
 11555  00FB2F  6C                 	db	108	;'l'
 11556  00FB30  70                 	db	112	;'p'
 11557  00FB31  20                 	db	32
 11558  00FB32  44                 	db	68	;'D'
 11559  00FB33  65                 	db	101	;'e'
 11560  00FB34  76                 	db	118	;'v'
 11561  00FB35  69                 	db	105	;'i'
 11562  00FB36  63                 	db	99	;'c'
 11563  00FB37  65                 	db	101	;'e'
 11564  00FB38  20                 	db	32
 11565  00FB39  43                 	db	67	;'C'
 11566  00FB3A  6F                 	db	111	;'o'
 11567  00FB3B  6E                 	db	110	;'n'
 11568  00FB3C  74                 	db	116	;'t'
 11569  00FB3D  72                 	db	114	;'r'
 11570  00FB3E  6F                 	db	111	;'o'
 11571  00FB3F  6C                 	db	108	;'l'
 11572  00FB40  20                 	db	32
 11573  00FB41  43                 	db	67	;'C'
 11574  00FB42  6F                 	db	111	;'o'
 11575  00FB43  6D                 	db	109	;'m'
 11576  00FB44  6D                 	db	109	;'m'
 11577  00FB45  61                 	db	97	;'a'
 11578  00FB46  6E                 	db	110	;'n'
 11579  00FB47  64                 	db	100	;'d'
 11580  00FB48  73                 	db	115	;'s'
 11581  00FB49  00                 	db	0
 11582  00FB4A                     STR_156:
 11583  00FB4A  48                 	db	72	;'H'
 11584  00FB4B  65                 	db	101	;'e'
 11585  00FB4C  6C                 	db	108	;'l'
 11586  00FB4D  70                 	db	112	;'p'
 11587  00FB4E  20                 	db	32
 11588  00FB4F  4F                 	db	79	;'O'
 11589  00FB50  75                 	db	117	;'u'
 11590  00FB51  74                 	db	116	;'t'
 11591  00FB52  70                 	db	112	;'p'
 11592  00FB53  75                 	db	117	;'u'
 11593  00FB54  74                 	db	116	;'t'
 11594  00FB55  20                 	db	32
 11595  00FB56  43                 	db	67	;'C'
 11596  00FB57  6F                 	db	111	;'o'
 11597  00FB58  6E                 	db	110	;'n'
 11598  00FB59  74                 	db	116	;'t'
 11599  00FB5A  72                 	db	114	;'r'
 11600  00FB5B  6F                 	db	111	;'o'
 11601  00FB5C  6C                 	db	108	;'l'
 11602  00FB5D  20                 	db	32
 11603  00FB5E  43                 	db	67	;'C'
 11604  00FB5F  6F                 	db	111	;'o'
 11605  00FB60  6D                 	db	109	;'m'
 11606  00FB61  6D                 	db	109	;'m'
 11607  00FB62  61                 	db	97	;'a'
 11608  00FB63  6E                 	db	110	;'n'
 11609  00FB64  64                 	db	100	;'d'
 11610  00FB65  73                 	db	115	;'s'
 11611  00FB66  00                 	db	0
 11612  00FB67                     STR_169:
 11613  00FB67  4D                 	db	77	;'M'
 11614  00FB68  61                 	db	97	;'a'
 11615  00FB69  72                 	db	114	;'r'
 11616  00FB6A  71                 	db	113	;'q'
 11617  00FB6B  75                 	db	117	;'u'
 11618  00FB6C  65                 	db	101	;'e'
 11619  00FB6D  74                 	db	116	;'t'
 11620  00FB6E  74                 	db	116	;'t'
 11621  00FB6F  65                 	db	101	;'e'
 11622  00FB70  20                 	db	32
 11623  00FB71  55                 	db	85	;'U'
 11624  00FB72  6E                 	db	110	;'n'
 11625  00FB73  69                 	db	105	;'i'
 11626  00FB74  76                 	db	118	;'v'
 11627  00FB75  65                 	db	101	;'e'
 11628  00FB76  72                 	db	114	;'r'
 11629  00FB77  73                 	db	115	;'s'
 11630  00FB78  69                 	db	105	;'i'
 11631  00FB79  74                 	db	116	;'t'
 11632  00FB7A  79                 	db	121	;'y'
 11633  00FB7B  20                 	db	32
 11634  00FB7C  45                 	db	69	;'E'
 11635  00FB7D  45                 	db	69	;'E'
 11636  00FB7E  43                 	db	67	;'C'
 11637  00FB7F  45                 	db	69	;'E'
 11638  00FB80  0A                 	db	10
 11639  00FB81  0D                 	db	13
 11640  00FB82  00                 	db	0
 11641  00FB83                     STR_117:
 11642  00FB83  4C                 	db	76	;'L'
 11643  00FB84  6F                 	db	111	;'o'
 11644  00FB85  61                 	db	97	;'a'
 11645  00FB86  64                 	db	100	;'d'
 11646  00FB87  20                 	db	32
 11647  00FB88  69                 	db	105	;'i'
 11648  00FB89  73                 	db	115	;'s'
 11649  00FB8A  20                 	db	32
 11650  00FB8B  63                 	db	99	;'c'
 11651  00FB8C  75                 	db	117	;'u'
 11652  00FB8D  72                 	db	114	;'r'
 11653  00FB8E  72                 	db	114	;'r'
 11654  00FB8F  65                 	db	101	;'e'
 11655  00FB90  6E                 	db	110	;'n'
 11656  00FB91  74                 	db	116	;'t'
 11657  00FB92  6C                 	db	108	;'l'
 11658  00FB93  79                 	db	121	;'y'
 11659  00FB94  20                 	db	32
 11660  00FB95  65                 	db	101	;'e'
 11661  00FB96  6E                 	db	110	;'n'
 11662  00FB97  61                 	db	97	;'a'
 11663  00FB98  62                 	db	98	;'b'
 11664  00FB99  6C                 	db	108	;'l'
 11665  00FB9A  65                 	db	101	;'e'
 11666  00FB9B  64                 	db	100	;'d'
 11667  00FB9C  0A                 	db	10
 11668  00FB9D  0D                 	db	13
 11669  00FB9E  00                 	db	0
 11670  00FB9F                     STR_182:
 11671  00FB9F  52                 	db	82	;'R'
 11672  00FBA0  45                 	db	69	;'E'
 11673  00FBA1  53                 	db	83	;'S'
 11674  00FBA2  45                 	db	69	;'E'
 11675  00FBA3  54                 	db	84	;'T'
 11676  00FBA4  20                 	db	32
 11677  00FBA5  49                 	db	73	;'I'
 11678  00FBA6  6E                 	db	110	;'n'
 11679  00FBA7  73                 	db	115	;'s'
 11680  00FBA8  74                 	db	116	;'t'
 11681  00FBA9  72                 	db	114	;'r'
 11682  00FBAA  75                 	db	117	;'u'
 11683  00FBAB  63                 	db	99	;'c'
 11684  00FBAC  74                 	db	116	;'t'
 11685  00FBAD  69                 	db	105	;'i'
 11686  00FBAE  6F                 	db	111	;'o'
 11687  00FBAF  6E                 	db	110	;'n'
 11688  00FBB0  20                 	db	32
 11689  00FBB1  45                 	db	69	;'E'
 11690  00FBB2  78                 	db	120	;'x'
 11691  00FBB3  65                 	db	101	;'e'
 11692  00FBB4  63                 	db	99	;'c'
 11693  00FBB5  75                 	db	117	;'u'
 11694  00FBB6  74                 	db	116	;'t'
 11695  00FBB7  65                 	db	101	;'e'
 11696  00FBB8  64                 	db	100	;'d'
 11697  00FBB9  00                 	db	0
 11698  00FBBA                     STR_93:
 11699  00FBBA  4D                 	db	77	;'M'
 11700  00FBBB  65                 	db	101	;'e'
 11701  00FBBC  61                 	db	97	;'a'
 11702  00FBBD  73                 	db	115	;'s'
 11703  00FBBE  75                 	db	117	;'u'
 11704  00FBBF  72                 	db	114	;'r'
 11705  00FBC0  65                 	db	101	;'e'
 11706  00FBC1  20                 	db	32
 11707  00FBC2  44                 	db	68	;'D'
 11708  00FBC3  65                 	db	101	;'e'
 11709  00FBC4  74                 	db	116	;'t'
 11710  00FBC5  65                 	db	101	;'e'
 11711  00FBC6  63                 	db	99	;'c'
 11712  00FBC7  74                 	db	116	;'t'
 11713  00FBC8  65                 	db	101	;'e'
 11714  00FBC9  64                 	db	100	;'d'
 11715  00FBCA  20                 	db	32
 11716  00FBCB  43                 	db	67	;'C'
 11717  00FBCC  75                 	db	117	;'u'
 11718  00FBCD  72                 	db	114	;'r'
 11719  00FBCE  72                 	db	114	;'r'
 11720  00FBCF  65                 	db	101	;'e'
 11721  00FBD0  6E                 	db	110	;'n'
 11722  00FBD1  74                 	db	116	;'t'
 11723  00FBD2  3F                 	db	63	;'?'
 11724  00FBD3  00                 	db	0
 11725  00FBD4                     STR_124:
 11726  00FBD4  4C                 	db	76	;'L'
 11727  00FBD5  6F                 	db	111	;'o'
 11728  00FBD6  61                 	db	97	;'a'
 11729  00FBD7  64                 	db	100	;'d'
 11730  00FBD8  20                 	db	32
 11731  00FBD9  68                 	db	104	;'h'
 11732  00FBDA  61                 	db	97	;'a'
 11733  00FBDB  73                 	db	115	;'s'
 11734  00FBDC  20                 	db	32
 11735  00FBDD  62                 	db	98	;'b'
 11736  00FBDE  65                 	db	101	;'e'
 11737  00FBDF  65                 	db	101	;'e'
 11738  00FBE0  6E                 	db	110	;'n'
 11739  00FBE1  20                 	db	32
 11740  00FBE2  64                 	db	100	;'d'
 11741  00FBE3  69                 	db	105	;'i'
 11742  00FBE4  73                 	db	115	;'s'
 11743  00FBE5  61                 	db	97	;'a'
 11744  00FBE6  62                 	db	98	;'b'
 11745  00FBE7  6C                 	db	108	;'l'
 11746  00FBE8  65                 	db	101	;'e'
 11747  00FBE9  64                 	db	100	;'d'
 11748  00FBEA  0A                 	db	10
 11749  00FBEB  0D                 	db	13
 11750  00FBEC  00                 	db	0
 11751  00FBED                     STR_125:
 11752  00FBED  53                 	db	83	;'S'
 11753  00FBEE  65                 	db	101	;'e'
 11754  00FBEF  74                 	db	116	;'t'
 11755  00FBF0  20                 	db	32
 11756  00FBF1  44                 	db	68	;'D'
 11757  00FBF2  69                 	db	105	;'i'
 11758  00FBF3  6D                 	db	109	;'m'
 11759  00FBF4  6D                 	db	109	;'m'
 11760  00FBF5  69                 	db	105	;'i'
 11761  00FBF6  6E                 	db	110	;'n'
 11762  00FBF7  67                 	db	103	;'g'
 11763  00FBF8  20                 	db	32
 11764  00FBF9  50                 	db	80	;'P'
 11765  00FBFA  65                 	db	101	;'e'
 11766  00FBFB  72                 	db	114	;'r'
 11767  00FBFC  63                 	db	99	;'c'
 11768  00FBFD  65                 	db	101	;'e'
 11769  00FBFE  6E                 	db	110	;'n'
 11770  00FBFF  74                 	db	116	;'t'
 11771  00FC00  61                 	db	97	;'a'
 11772  00FC01  67                 	db	103	;'g'
 11773  00FC02  65                 	db	101	;'e'
 11774  00FC03  3A                 	db	58	;':'
 11775  00FC04  20                 	db	32
 11776  00FC05  00                 	db	0
 11777  00FC06                     STR_74:
 11778  00FC06  4E                 	db	78	;'N'
 11779  00FC07  6F                 	db	111	;'o'
 11780  00FC08  20                 	db	32
 11781  00FC09  41                 	db	65	;'A'
 11782  00FC0A  44                 	db	68	;'D'
 11783  00FC0B  43                 	db	67	;'C'
 11784  00FC0C  20                 	db	32
 11785  00FC0D  45                 	db	69	;'E'
 11786  00FC0E  72                 	db	114	;'r'
 11787  00FC0F  72                 	db	114	;'r'
 11788  00FC10  6F                 	db	111	;'o'
 11789  00FC11  72                 	db	114	;'r'
 11790  00FC12  20                 	db	32
 11791  00FC13  64                 	db	100	;'d'
 11792  00FC14  65                 	db	101	;'e'
 11793  00FC15  74                 	db	116	;'t'
 11794  00FC16  65                 	db	101	;'e'
 11795  00FC17  63                 	db	99	;'c'
 11796  00FC18  74                 	db	116	;'t'
 11797  00FC19  65                 	db	101	;'e'
 11798  00FC1A  64                 	db	100	;'d'
 11799  00FC1B  0A                 	db	10
 11800  00FC1C  0D                 	db	13
 11801  00FC1D  00                 	db	0
 11802  00FC1E                     STR_184:
 11803  00FC1E  53                 	db	83	;'S'
 11804  00FC1F  74                 	db	116	;'t'
 11805  00FC20  61                 	db	97	;'a'
 11806  00FC21  63                 	db	99	;'c'
 11807  00FC22  6B                 	db	107	;'k'
 11808  00FC23  20                 	db	32
 11809  00FC24  55                 	db	85	;'U'
 11810  00FC25  6E                 	db	110	;'n'
 11811  00FC26  64                 	db	100	;'d'
 11812  00FC27  65                 	db	101	;'e'
 11813  00FC28  72                 	db	114	;'r'
 11814  00FC29  66                 	db	102	;'f'
 11815  00FC2A  6C                 	db	108	;'l'
 11816  00FC2B  6F                 	db	111	;'o'
 11817  00FC2C  77                 	db	119	;'w'
 11818  00FC2D  20                 	db	32
 11819  00FC2E  52                 	db	82	;'R'
 11820  00FC2F  65                 	db	101	;'e'
 11821  00FC30  73                 	db	115	;'s'
 11822  00FC31  65                 	db	101	;'e'
 11823  00FC32  74                 	db	116	;'t'
 11824  00FC33  00                 	db	0
 11825  00FC34                     STR_71:
 11826  00FC34  49                 	db	73	;'I'
 11827  00FC35  6E                 	db	110	;'n'
 11828  00FC36  74                 	db	116	;'t'
 11829  00FC37  65                 	db	101	;'e'
 11830  00FC38  72                 	db	114	;'r'
 11831  00FC39  6E                 	db	110	;'n'
 11832  00FC3A  61                 	db	97	;'a'
 11833  00FC3B  6C                 	db	108	;'l'
 11834  00FC3C  20                 	db	32
 11835  00FC3D  46                 	db	70	;'F'
 11836  00FC3E  56                 	db	86	;'V'
 11837  00FC3F  52                 	db	82	;'R'
 11838  00FC40  20                 	db	32
 11839  00FC41  42                 	db	66	;'B'
 11840  00FC42  75                 	db	117	;'u'
 11841  00FC43  66                 	db	102	;'f'
 11842  00FC44  66                 	db	102	;'f'
 11843  00FC45  65                 	db	101	;'e'
 11844  00FC46  72                 	db	114	;'r'
 11845  00FC47  20                 	db	32
 11846  00FC48  31                 	db	49	;'1'
 11847  00FC49  00                 	db	0
 11848  00FC4A                     STR_183:
 11849  00FC4A  53                 	db	83	;'S'
 11850  00FC4B  74                 	db	116	;'t'
 11851  00FC4C  61                 	db	97	;'a'
 11852  00FC4D  63                 	db	99	;'c'
 11853  00FC4E  6B                 	db	107	;'k'
 11854  00FC4F  20                 	db	32
 11855  00FC50  4F                 	db	79	;'O'
 11856  00FC51  76                 	db	118	;'v'
 11857  00FC52  65                 	db	101	;'e'
 11858  00FC53  72                 	db	114	;'r'
 11859  00FC54  66                 	db	102	;'f'
 11860  00FC55  6C                 	db	108	;'l'
 11861  00FC56  6F                 	db	111	;'o'
 11862  00FC57  77                 	db	119	;'w'
 11863  00FC58  20                 	db	32
 11864  00FC59  52                 	db	82	;'R'
 11865  00FC5A  65                 	db	101	;'e'
 11866  00FC5B  73                 	db	115	;'s'
 11867  00FC5C  65                 	db	101	;'e'
 11868  00FC5D  74                 	db	116	;'t'
 11869  00FC5E  00                 	db	0
 11870  00FC5F                     STR_76:
 11871  00FC5F  43                 	db	67	;'C'
 11872  00FC60  6C                 	db	108	;'l'
 11873  00FC61  65                 	db	101	;'e'
 11874  00FC62  61                 	db	97	;'a'
 11875  00FC63  72                 	db	114	;'r'
 11876  00FC64  69                 	db	105	;'i'
 11877  00FC65  6E                 	db	110	;'n'
 11878  00FC66  67                 	db	103	;'g'
 11879  00FC67  20                 	db	32
 11880  00FC68  41                 	db	65	;'A'
 11881  00FC69  44                 	db	68	;'D'
 11882  00FC6A  43                 	db	67	;'C'
 11883  00FC6B  20                 	db	32
 11884  00FC6C  45                 	db	69	;'E'
 11885  00FC6D  72                 	db	114	;'r'
 11886  00FC6E  72                 	db	114	;'r'
 11887  00FC6F  6F                 	db	111	;'o'
 11888  00FC70  72                 	db	114	;'r'
 11889  00FC71  0A                 	db	10
 11890  00FC72  0D                 	db	13
 11891  00FC73  00                 	db	0
 11892  00FC74                     STR_97:
 11893  00FC74  4D                 	db	77	;'M'
 11894  00FC75  65                 	db	101	;'e'
 11895  00FC76  61                 	db	97	;'a'
 11896  00FC77  73                 	db	115	;'s'
 11897  00FC78  75                 	db	117	;'u'
 11898  00FC79  72                 	db	114	;'r'
 11899  00FC7A  65                 	db	101	;'e'
 11900  00FC7B  20                 	db	32
 11901  00FC7C  52                 	db	82	;'R'
 11902  00FC7D  4D                 	db	77	;'M'
 11903  00FC7E  53                 	db	83	;'S'
 11904  00FC7F  20                 	db	32
 11905  00FC80  56                 	db	86	;'V'
 11906  00FC81  6F                 	db	111	;'o'
 11907  00FC82  6C                 	db	108	;'l'
 11908  00FC83  74                 	db	116	;'t'
 11909  00FC84  61                 	db	97	;'a'
 11910  00FC85  67                 	db	103	;'g'
 11911  00FC86  65                 	db	101	;'e'
 11912  00FC87  3F                 	db	63	;'?'
 11913  00FC88  00                 	db	0
 11914  00FC89                     STR_95:
 11915  00FC89  4D                 	db	77	;'M'
 11916  00FC8A  65                 	db	101	;'e'
 11917  00FC8B  61                 	db	97	;'a'
 11918  00FC8C  73                 	db	115	;'s'
 11919  00FC8D  75                 	db	117	;'u'
 11920  00FC8E  72                 	db	114	;'r'
 11921  00FC8F  65                 	db	101	;'e'
 11922  00FC90  20                 	db	32
 11923  00FC91  52                 	db	82	;'R'
 11924  00FC92  4D                 	db	77	;'M'
 11925  00FC93  53                 	db	83	;'S'
 11926  00FC94  20                 	db	32
 11927  00FC95  43                 	db	67	;'C'
 11928  00FC96  75                 	db	117	;'u'
 11929  00FC97  72                 	db	114	;'r'
 11930  00FC98  72                 	db	114	;'r'
 11931  00FC99  65                 	db	101	;'e'
 11932  00FC9A  6E                 	db	110	;'n'
 11933  00FC9B  74                 	db	116	;'t'
 11934  00FC9C  3F                 	db	63	;'?'
 11935  00FC9D  00                 	db	0
 11936  00FC9E                     STR_140:
 11937  00FC9E  4D                 	db	77	;'M'
 11938  00FC9F  61                 	db	97	;'a'
 11939  00FCA0  78                 	db	120	;'x'
 11940  00FCA1  20                 	db	32
 11941  00FCA2  50                 	db	80	;'P'
 11942  00FCA3  4F                 	db	79	;'O'
 11943  00FCA4  53                 	db	83	;'S'
 11944  00FCA5  33                 	db	51	;'3'
 11945  00FCA6  50                 	db	80	;'P'
 11946  00FCA7  33                 	db	51	;'3'
 11947  00FCA8  20                 	db	32
 11948  00FCA9  56                 	db	86	;'V'
 11949  00FCAA  6F                 	db	111	;'o'
 11950  00FCAB  6C                 	db	108	;'l'
 11951  00FCAC  74                 	db	116	;'t'
 11952  00FCAD  61                 	db	97	;'a'
 11953  00FCAE  67                 	db	103	;'g'
 11954  00FCAF  65                 	db	101	;'e'
 11955  00FCB0  3F                 	db	63	;'?'
 11956  00FCB1  00                 	db	0
 11957  00FCB2                     STR_179:
 11958  00FCB2  4D                 	db	77	;'M'
 11959  00FCB3  61                 	db	97	;'a'
 11960  00FCB4  73                 	db	115	;'s'
 11961  00FCB5  74                 	db	116	;'t'
 11962  00FCB6  65                 	db	101	;'e'
 11963  00FCB7  72                 	db	114	;'r'
 11964  00FCB8  20                 	db	32
 11965  00FCB9  43                 	db	67	;'C'
 11966  00FCBA  6C                 	db	108	;'l'
 11967  00FCBB  65                 	db	101	;'e'
 11968  00FCBC  61                 	db	97	;'a'
 11969  00FCBD  72                 	db	114	;'r'
 11970  00FCBE  20                 	db	32
 11971  00FCBF  52                 	db	82	;'R'
 11972  00FCC0  65                 	db	101	;'e'
 11973  00FCC1  73                 	db	115	;'s'
 11974  00FCC2  65                 	db	101	;'e'
 11975  00FCC3  74                 	db	116	;'t'
 11976  00FCC4  00                 	db	0
 11977  00FCC5                     STR_142:
 11978  00FCC5  4D                 	db	77	;'M'
 11979  00FCC6  61                 	db	97	;'a'
 11980  00FCC7  78                 	db	120	;'x'
 11981  00FCC8  20                 	db	32
 11982  00FCC9  50                 	db	80	;'P'
 11983  00FCCA  4F                 	db	79	;'O'
 11984  00FCCB  53                 	db	83	;'S'
 11985  00FCCC  31                 	db	49	;'1'
 11986  00FCCD  32                 	db	50	;'2'
 11987  00FCCE  20                 	db	32
 11988  00FCCF  56                 	db	86	;'V'
 11989  00FCD0  6F                 	db	111	;'o'
 11990  00FCD1  6C                 	db	108	;'l'
 11991  00FCD2  74                 	db	116	;'t'
 11992  00FCD3  61                 	db	97	;'a'
 11993  00FCD4  67                 	db	103	;'g'
 11994  00FCD5  65                 	db	101	;'e'
 11995  00FCD6  3F                 	db	63	;'?'
 11996  00FCD7  00                 	db	0
 11997  00FCD8                     STR_87:
 11998  00FCD8  4D                 	db	77	;'M'
 11999  00FCD9  65                 	db	101	;'e'
 12000  00FCDA  61                 	db	97	;'a'
 12001  00FCDB  73                 	db	115	;'s'
 12002  00FCDC  75                 	db	117	;'u'
 12003  00FCDD  72                 	db	114	;'r'
 12004  00FCDE  65                 	db	101	;'e'
 12005  00FCDF  20                 	db	32
 12006  00FCE0  44                 	db	68	;'D'
 12007  00FCE1  69                 	db	105	;'i'
 12008  00FCE2  65                 	db	101	;'e'
 12009  00FCE3  20                 	db	32
 12010  00FCE4  54                 	db	84	;'T'
 12011  00FCE5  65                 	db	101	;'e'
 12012  00FCE6  6D                 	db	109	;'m'
 12013  00FCE7  70                 	db	112	;'p'
 12014  00FCE8  3F                 	db	63	;'?'
 12015  00FCE9  00                 	db	0
 12016  00FCEA                     STR_189:
 12017  00FCEA  30                 	db	48	;'0'
 12018  00FCEB  31                 	db	49	;'1'
 12019  00FCEC  32                 	db	50	;'2'
 12020  00FCED  33                 	db	51	;'3'
 12021  00FCEE  34                 	db	52	;'4'
 12022  00FCEF  35                 	db	53	;'5'
 12023  00FCF0  36                 	db	54	;'6'
 12024  00FCF1  37                 	db	55	;'7'
 12025  00FCF2  38                 	db	56	;'8'
 12026  00FCF3  39                 	db	57	;'9'
 12027  00FCF4  41                 	db	65	;'A'
 12028  00FCF5  42                 	db	66	;'B'
 12029  00FCF6  43                 	db	67	;'C'
 12030  00FCF7  44                 	db	68	;'D'
 12031  00FCF8  45                 	db	69	;'E'
 12032  00FCF9  46                 	db	70	;'F'
 12033  00FCFA  00                 	db	0
 12034  00FCFB                     STR_55:
 12035  00FCFB  41                 	db	65	;'A'
 12036  00FCFC  43                 	db	67	;'C'
 12037  00FCFD  20                 	db	32
 12038  00FCFE  50                 	db	80	;'P'
 12039  00FCFF  6F                 	db	111	;'o'
 12040  00FD00  77                 	db	119	;'w'
 12041  00FD01  65                 	db	101	;'e'
 12042  00FD02  72                 	db	114	;'r'
 12043  00FD03  20                 	db	32
 12044  00FD04  4D                 	db	77	;'M'
 12045  00FD05  65                 	db	101	;'e'
 12046  00FD06  74                 	db	116	;'t'
 12047  00FD07  65                 	db	101	;'e'
 12048  00FD08  72                 	db	114	;'r'
 12049  00FD09  0A                 	db	10
 12050  00FD0A  0D                 	db	13
 12051  00FD0B  00                 	db	0
 12052  00FD0C                     STR_119:
 12053  00FD0C  44                 	db	68	;'D'
 12054  00FD0D  69                 	db	105	;'i'
 12055  00FD0E  6D                 	db	109	;'m'
 12056  00FD0F  6D                 	db	109	;'m'
 12057  00FD10  69                 	db	105	;'i'
 12058  00FD11  6E                 	db	110	;'n'
 12059  00FD12  67                 	db	103	;'g'
 12060  00FD13  20                 	db	32
 12061  00FD14  45                 	db	69	;'E'
 12062  00FD15  6E                 	db	110	;'n'
 12063  00FD16  61                 	db	97	;'a'
 12064  00FD17  62                 	db	98	;'b'
 12065  00FD18  6C                 	db	108	;'l'
 12066  00FD19  65                 	db	101	;'e'
 12067  00FD1A  64                 	db	100	;'d'
 12068  00FD1B  3F                 	db	63	;'?'
 12069  00FD1C  00                 	db	0
 12070  00FD1D                     STR_146:
 12071  00FD1D  4D                 	db	77	;'M'
 12072  00FD1E  61                 	db	97	;'a'
 12073  00FD1F  78                 	db	120	;'x'
 12074  00FD20  20                 	db	32
 12075  00FD21  46                 	db	70	;'F'
 12076  00FD22  56                 	db	86	;'V'
 12077  00FD23  52                 	db	82	;'R'
 12078  00FD24  20                 	db	32
 12079  00FD25  56                 	db	86	;'V'
 12080  00FD26  6F                 	db	111	;'o'
 12081  00FD27  6C                 	db	108	;'l'
 12082  00FD28  74                 	db	116	;'t'
 12083  00FD29  61                 	db	97	;'a'
 12084  00FD2A  67                 	db	103	;'g'
 12085  00FD2B  65                 	db	101	;'e'
 12086  00FD2C  3F                 	db	63	;'?'
 12087  00FD2D  00                 	db	0
 12088  00FD2E                     STR_136:
 12089  00FD2E  4D                 	db	77	;'M'
 12090  00FD2F  61                 	db	97	;'a'
 12091  00FD30  78                 	db	120	;'x'
 12092  00FD31  20                 	db	32
 12093  00FD32  52                 	db	82	;'R'
 12094  00FD33  4D                 	db	77	;'M'
 12095  00FD34  53                 	db	83	;'S'
 12096  00FD35  20                 	db	32
 12097  00FD36  43                 	db	67	;'C'
 12098  00FD37  75                 	db	117	;'u'
 12099  00FD38  72                 	db	114	;'r'
 12100  00FD39  72                 	db	114	;'r'
 12101  00FD3A  65                 	db	101	;'e'
 12102  00FD3B  6E                 	db	110	;'n'
 12103  00FD3C  74                 	db	116	;'t'
 12104  00FD3D  3F                 	db	63	;'?'
 12105  00FD3E  00                 	db	0
 12106  00FD3F                     STR_110:
 12107  00FD3F  45                 	db	69	;'E'
 12108  00FD40  6E                 	db	110	;'n'
 12109  00FD41  61                 	db	97	;'a'
 12110  00FD42  62                 	db	98	;'b'
 12111  00FD43  6C                 	db	108	;'l'
 12112  00FD44  65                 	db	101	;'e'
 12113  00FD45  20                 	db	32
 12114  00FD46  44                 	db	68	;'D'
 12115  00FD47  69                 	db	105	;'i'
 12116  00FD48  6D                 	db	109	;'m'
 12117  00FD49  6D                 	db	109	;'m'
 12118  00FD4A  69                 	db	105	;'i'
 12119  00FD4B  6E                 	db	110	;'n'
 12120  00FD4C  67                 	db	103	;'g'
 12121  00FD4D  20                 	db	32
 12122  00FD4E  59                 	db	89	;'Y'
 12123  00FD4F  00                 	db	0
 12124  00FD50                     STR_81:
 12125  00FD50  43                 	db	67	;'C'
 12126  00FD51  6C                 	db	108	;'l'
 12127  00FD52  65                 	db	101	;'e'
 12128  00FD53  61                 	db	97	;'a'
 12129  00FD54  72                 	db	114	;'r'
 12130  00FD55  20                 	db	32
 12131  00FD56  43                 	db	67	;'C'
 12132  00FD57  6F                 	db	111	;'o'
 12133  00FD58  6D                 	db	109	;'m'
 12134  00FD59  6D                 	db	109	;'m'
 12135  00FD5A  20                 	db	32
 12136  00FD5B  45                 	db	69	;'E'
 12137  00FD5C  72                 	db	114	;'r'
 12138  00FD5D  72                 	db	114	;'r'
 12139  00FD5E  6F                 	db	111	;'o'
 12140  00FD5F  72                 	db	114	;'r'
 12141  00FD60  00                 	db	0
 12142  00FD61                     STR_148:
 12143  00FD61  43                 	db	67	;'C'
 12144  00FD62  6C                 	db	108	;'l'
 12145  00FD63  65                 	db	101	;'e'
 12146  00FD64  61                 	db	97	;'a'
 12147  00FD65  72                 	db	114	;'r'
 12148  00FD66  20                 	db	32
 12149  00FD67  4D                 	db	77	;'M'
 12150  00FD68  61                 	db	97	;'a'
 12151  00FD69  78                 	db	120	;'x'
 12152  00FD6A  20                 	db	32
 12153  00FD6B  56                 	db	86	;'V'
 12154  00FD6C  61                 	db	97	;'a'
 12155  00FD6D  6C                 	db	108	;'l'
 12156  00FD6E  75                 	db	117	;'u'
 12157  00FD6F  65                 	db	101	;'e'
 12158  00FD70  73                 	db	115	;'s'
 12159  00FD71  00                 	db	0
 12160  00FD72                     STR_176:
 12161  00FD72  55                 	db	85	;'U'
 12162  00FD73  6E                 	db	110	;'n'
 12163  00FD74  64                 	db	100	;'d'
 12164  00FD75  65                 	db	101	;'e'
 12165  00FD76  66                 	db	102	;'f'
 12166  00FD77  69                 	db	105	;'i'
 12167  00FD78  6E                 	db	110	;'n'
 12168  00FD79  65                 	db	101	;'e'
 12169  00FD7A  64                 	db	100	;'d'
 12170  00FD7B  20                 	db	32
 12171  00FD7C  52                 	db	82	;'R'
 12172  00FD7D  65                 	db	101	;'e'
 12173  00FD7E  73                 	db	115	;'s'
 12174  00FD7F  65                 	db	101	;'e'
 12175  00FD80  74                 	db	116	;'t'
 12176  00FD81  00                 	db	0
 12177  00FD82                     STR_178:
 12178  00FD82  42                 	db	66	;'B'
 12179  00FD83  72                 	db	114	;'r'
 12180  00FD84  6F                 	db	111	;'o'
 12181  00FD85  77                 	db	119	;'w'
 12182  00FD86  6E                 	db	110	;'n'
 12183  00FD87  20                 	db	32
 12184  00FD88  4F                 	db	79	;'O'
 12185  00FD89  75                 	db	117	;'u'
 12186  00FD8A  74                 	db	116	;'t'
 12187  00FD8B  20                 	db	32
 12188  00FD8C  52                 	db	82	;'R'
 12189  00FD8D  65                 	db	101	;'e'
 12190  00FD8E  73                 	db	115	;'s'
 12191  00FD8F  65                 	db	101	;'e'
 12192  00FD90  74                 	db	116	;'t'
 12193  00FD91  00                 	db	0
 12194  00FD92                     STR_83:
 12195  00FD92  4D                 	db	77	;'M'
 12196  00FD93  65                 	db	101	;'e'
 12197  00FD94  61                 	db	97	;'a'
 12198  00FD95  73                 	db	115	;'s'
 12199  00FD96  75                 	db	117	;'u'
 12200  00FD97  72                 	db	114	;'r'
 12201  00FD98  65                 	db	101	;'e'
 12202  00FD99  20                 	db	32
 12203  00FD9A  50                 	db	80	;'P'
 12204  00FD9B  4F                 	db	79	;'O'
 12205  00FD9C  53                 	db	83	;'S'
 12206  00FD9D  33                 	db	51	;'3'
 12207  00FD9E  50                 	db	80	;'P'
 12208  00FD9F  33                 	db	51	;'3'
 12209  00FDA0  3F                 	db	63	;'?'
 12210  00FDA1  00                 	db	0
 12211  00FDA2                     STR_132:
 12212  00FDA2  44                 	db	68	;'D'
 12213  00FDA3  65                 	db	101	;'e'
 12214  00FDA4  76                 	db	118	;'v'
 12215  00FDA5  69                 	db	105	;'i'
 12216  00FDA6  63                 	db	99	;'c'
 12217  00FDA7  65                 	db	101	;'e'
 12218  00FDA8  20                 	db	32
 12219  00FDA9  4F                 	db	79	;'O'
 12220  00FDAA  6E                 	db	110	;'n'
 12221  00FDAB  20                 	db	32
 12222  00FDAC  54                 	db	84	;'T'
 12223  00FDAD  69                 	db	105	;'i'
 12224  00FDAE  6D                 	db	109	;'m'
 12225  00FDAF  65                 	db	101	;'e'
 12226  00FDB0  3F                 	db	63	;'?'
 12227  00FDB1  00                 	db	0
 12228  00FDB2                     STR_51:
 12229  00FDB2  43                 	db	67	;'C'
 12230  00FDB3  61                 	db	97	;'a'
 12231  00FDB4  75                 	db	117	;'u'
 12232  00FDB5  73                 	db	115	;'s'
 12233  00FDB6  65                 	db	101	;'e'
 12234  00FDB7  20                 	db	32
 12235  00FDB8  6F                 	db	111	;'o'
 12236  00FDB9  66                 	db	102	;'f'
 12237  00FDBA  20                 	db	32
 12238  00FDBB  52                 	db	82	;'R'
 12239  00FDBC  65                 	db	101	;'e'
 12240  00FDBD  73                 	db	115	;'s'
 12241  00FDBE  65                 	db	101	;'e'
 12242  00FDBF  74                 	db	116	;'t'
 12243  00FDC0  3F                 	db	63	;'?'
 12244  00FDC1  00                 	db	0
 12245  00FDC2                     STR_101:
 12246  00FDC2  4D                 	db	77	;'M'
 12247  00FDC3  65                 	db	101	;'e'
 12248  00FDC4  61                 	db	97	;'a'
 12249  00FDC5  73                 	db	115	;'s'
 12250  00FDC6  75                 	db	117	;'u'
 12251  00FDC7  72                 	db	114	;'r'
 12252  00FDC8  65                 	db	101	;'e'
 12253  00FDC9  20                 	db	32
 12254  00FDCA  45                 	db	69	;'E'
 12255  00FDCB  6E                 	db	110	;'n'
 12256  00FDCC  65                 	db	101	;'e'
 12257  00FDCD  72                 	db	114	;'r'
 12258  00FDCE  67                 	db	103	;'g'
 12259  00FDCF  79                 	db	121	;'y'
 12260  00FDD0  3F                 	db	63	;'?'
 12261  00FDD1  00                 	db	0
 12262  00FDD2                     STR_112:
 12263  00FDD2  44                 	db	68	;'D'
 12264  00FDD3  69                 	db	105	;'i'
 12265  00FDD4  73                 	db	115	;'s'
 12266  00FDD5  61                 	db	97	;'a'
 12267  00FDD6  62                 	db	98	;'b'
 12268  00FDD7  6C                 	db	108	;'l'
 12269  00FDD8  65                 	db	101	;'e'
 12270  00FDD9  20                 	db	32
 12271  00FDDA  44                 	db	68	;'D'
 12272  00FDDB  69                 	db	105	;'i'
 12273  00FDDC  6D                 	db	109	;'m'
 12274  00FDDD  6D                 	db	109	;'m'
 12275  00FDDE  69                 	db	105	;'i'
 12276  00FDDF  6E                 	db	110	;'n'
 12277  00FDE0  67                 	db	103	;'g'
 12278  00FDE1  00                 	db	0
 12279  00FDE2                     STR_75:
 12280  00FDE2  43                 	db	67	;'C'
 12281  00FDE3  6C                 	db	108	;'l'
 12282  00FDE4  65                 	db	101	;'e'
 12283  00FDE5  61                 	db	97	;'a'
 12284  00FDE6  72                 	db	114	;'r'
 12285  00FDE7  20                 	db	32
 12286  00FDE8  41                 	db	65	;'A'
 12287  00FDE9  44                 	db	68	;'D'
 12288  00FDEA  43                 	db	67	;'C'
 12289  00FDEB  20                 	db	32
 12290  00FDEC  45                 	db	69	;'E'
 12291  00FDED  72                 	db	114	;'r'
 12292  00FDEE  72                 	db	114	;'r'
 12293  00FDEF  6F                 	db	111	;'o'
 12294  00FDF0  72                 	db	114	;'r'
 12295  00FDF1  00                 	db	0
 12296  00FDF2                     STR_177:
 12297  00FDF2  50                 	db	80	;'P'
 12298  00FDF3  6F                 	db	111	;'o'
 12299  00FDF4  77                 	db	119	;'w'
 12300  00FDF5  65                 	db	101	;'e'
 12301  00FDF6  72                 	db	114	;'r'
 12302  00FDF7  20                 	db	32
 12303  00FDF8  4F                 	db	79	;'O'
 12304  00FDF9  6E                 	db	110	;'n'
 12305  00FDFA  20                 	db	32
 12306  00FDFB  52                 	db	82	;'R'
 12307  00FDFC  65                 	db	101	;'e'
 12308  00FDFD  73                 	db	115	;'s'
 12309  00FDFE  65                 	db	101	;'e'
 12310  00FDFF  74                 	db	116	;'t'
 12311  00FE00  00                 	db	0
 12312  00FE01                     STR_85:
 12313  00FE01  4D                 	db	77	;'M'
 12314  00FE02  65                 	db	101	;'e'
 12315  00FE03  61                 	db	97	;'a'
 12316  00FE04  73                 	db	115	;'s'
 12317  00FE05  75                 	db	117	;'u'
 12318  00FE06  72                 	db	114	;'r'
 12319  00FE07  65                 	db	101	;'e'
 12320  00FE08  20                 	db	32
 12321  00FE09  50                 	db	80	;'P'
 12322  00FE0A  4F                 	db	79	;'O'
 12323  00FE0B  53                 	db	83	;'S'
 12324  00FE0C  31                 	db	49	;'1'
 12325  00FE0D  32                 	db	50	;'2'
 12326  00FE0E  3F                 	db	63	;'?'
 12327  00FE0F  00                 	db	0
 12328  00FE10                     STR_99:
 12329  00FE10  4D                 	db	77	;'M'
 12330  00FE11  65                 	db	101	;'e'
 12331  00FE12  61                 	db	97	;'a'
 12332  00FE13  73                 	db	115	;'s'
 12333  00FE14  75                 	db	117	;'u'
 12334  00FE15  72                 	db	114	;'r'
 12335  00FE16  65                 	db	101	;'e'
 12336  00FE17  20                 	db	32
 12337  00FE18  50                 	db	80	;'P'
 12338  00FE19  6F                 	db	111	;'o'
 12339  00FE1A  77                 	db	119	;'w'
 12340  00FE1B  65                 	db	101	;'e'
 12341  00FE1C  72                 	db	114	;'r'
 12342  00FE1D  3F                 	db	63	;'?'
 12343  00FE1E  00                 	db	0
 12344  00FE1F                     STR_105:
 12345  00FE1F  45                 	db	69	;'E'
 12346  00FE20  6E                 	db	110	;'n'
 12347  00FE21  61                 	db	97	;'a'
 12348  00FE22  62                 	db	98	;'b'
 12349  00FE23  6C                 	db	108	;'l'
 12350  00FE24  65                 	db	101	;'e'
 12351  00FE25  20                 	db	32
 12352  00FE26  44                 	db	68	;'D'
 12353  00FE27  69                 	db	105	;'i'
 12354  00FE28  6D                 	db	109	;'m'
 12355  00FE29  6D                 	db	109	;'m'
 12356  00FE2A  69                 	db	105	;'i'
 12357  00FE2B  6E                 	db	110	;'n'
 12358  00FE2C  67                 	db	103	;'g'
 12359  00FE2D  00                 	db	0
 12360  00FE2E                     STR_2:
 12361  00FE2E  41                 	db	65	;'A'
 12362  00FE2F  43                 	db	67	;'C'
 12363  00FE30  20                 	db	32
 12364  00FE31  50                 	db	80	;'P'
 12365  00FE32  6F                 	db	111	;'o'
 12366  00FE33  77                 	db	119	;'w'
 12367  00FE34  65                 	db	101	;'e'
 12368  00FE35  72                 	db	114	;'r'
 12369  00FE36  20                 	db	32
 12370  00FE37  4D                 	db	77	;'M'
 12371  00FE38  65                 	db	101	;'e'
 12372  00FE39  74                 	db	116	;'t'
 12373  00FE3A  65                 	db	101	;'e'
 12374  00FE3B  72                 	db	114	;'r'
 12375  00FE3C  00                 	db	0
 12376  00FE3D                     STR_70:
 12377  00FE3D  49                 	db	73	;'I'
 12378  00FE3E  6E                 	db	110	;'n'
 12379  00FE3F  74                 	db	116	;'t'
 12380  00FE40  65                 	db	101	;'e'
 12381  00FE41  72                 	db	114	;'r'
 12382  00FE42  6E                 	db	110	;'n'
 12383  00FE43  61                 	db	97	;'a'
 12384  00FE44  6C                 	db	108	;'l'
 12385  00FE45  20                 	db	32
 12386  00FE46  44                 	db	68	;'D'
 12387  00FE47  41                 	db	65	;'A'
 12388  00FE48  43                 	db	67	;'C'
 12389  00FE49  31                 	db	49	;'1'
 12390  00FE4A  00                 	db	0
 12391  00FE4B                     STR_91:
 12392  00FE4B  4D                 	db	77	;'M'
 12393  00FE4C  65                 	db	101	;'e'
 12394  00FE4D  61                 	db	97	;'a'
 12395  00FE4E  73                 	db	115	;'s'
 12396  00FE4F  75                 	db	117	;'u'
 12397  00FE50  72                 	db	114	;'r'
 12398  00FE51  65                 	db	101	;'e'
 12399  00FE52  20                 	db	32
 12400  00FE53  41                 	db	65	;'A'
 12401  00FE54  56                 	db	86	;'V'
 12402  00FE55  53                 	db	83	;'S'
 12403  00FE56  53                 	db	83	;'S'
 12404  00FE57  3F                 	db	63	;'?'
 12405  00FE58  00                 	db	0
 12406  00FE59                     STR_116:
 12407  00FE59  4C                 	db	76	;'L'
 12408  00FE5A  6F                 	db	111	;'o'
 12409  00FE5B  61                 	db	97	;'a'
 12410  00FE5C  64                 	db	100	;'d'
 12411  00FE5D  20                 	db	32
 12412  00FE5E  45                 	db	69	;'E'
 12413  00FE5F  6E                 	db	110	;'n'
 12414  00FE60  61                 	db	97	;'a'
 12415  00FE61  62                 	db	98	;'b'
 12416  00FE62  6C                 	db	108	;'l'
 12417  00FE63  65                 	db	101	;'e'
 12418  00FE64  64                 	db	100	;'d'
 12419  00FE65  3F                 	db	63	;'?'
 12420  00FE66  00                 	db	0
 12421  00FE67                     STR_134:
 12422  00FE67  4C                 	db	76	;'L'
 12423  00FE68  6F                 	db	111	;'o'
 12424  00FE69  61                 	db	97	;'a'
 12425  00FE6A  64                 	db	100	;'d'
 12426  00FE6B  20                 	db	32
 12427  00FE6C  4F                 	db	79	;'O'
 12428  00FE6D  6E                 	db	110	;'n'
 12429  00FE6E  20                 	db	32
 12430  00FE6F  54                 	db	84	;'T'
 12431  00FE70  69                 	db	105	;'i'
 12432  00FE71  6D                 	db	109	;'m'
 12433  00FE72  65                 	db	101	;'e'
 12434  00FE73  3F                 	db	63	;'?'
 12435  00FE74  00                 	db	0
 12436  00FE75                     STR_144:
 12437  00FE75  4D                 	db	77	;'M'
 12438  00FE76  61                 	db	97	;'a'
 12439  00FE77  78                 	db	120	;'x'
 12440  00FE78  20                 	db	32
 12441  00FE79  44                 	db	68	;'D'
 12442  00FE7A  69                 	db	105	;'i'
 12443  00FE7B  65                 	db	101	;'e'
 12444  00FE7C  20                 	db	32
 12445  00FE7D  54                 	db	84	;'T'
 12446  00FE7E  65                 	db	101	;'e'
 12447  00FE7F  6D                 	db	109	;'m'
 12448  00FE80  70                 	db	112	;'p'
 12449  00FE81  3F                 	db	63	;'?'
 12450  00FE82  00                 	db	0
 12451  00FE83                     STR_68:
 12452  00FE83  49                 	db	73	;'I'
 12453  00FE84  6E                 	db	110	;'n'
 12454  00FE85  74                 	db	116	;'t'
 12455  00FE86  65                 	db	101	;'e'
 12456  00FE87  72                 	db	114	;'r'
 12457  00FE88  6E                 	db	110	;'n'
 12458  00FE89  61                 	db	97	;'a'
 12459  00FE8A  6C                 	db	108	;'l'
 12460  00FE8B  20                 	db	32
 12461  00FE8C  41                 	db	65	;'A'
 12462  00FE8D  56                 	db	86	;'V'
 12463  00FE8E  53                 	db	83	;'S'
 12464  00FE8F  53                 	db	83	;'S'
 12465  00FE90  00                 	db	0
 12466  00FE91                     STR_69:
 12467  00FE91  49                 	db	73	;'I'
 12468  00FE92  6E                 	db	110	;'n'
 12469  00FE93  74                 	db	116	;'t'
 12470  00FE94  65                 	db	101	;'e'
 12471  00FE95  72                 	db	114	;'r'
 12472  00FE96  6E                 	db	110	;'n'
 12473  00FE97  61                 	db	97	;'a'
 12474  00FE98  6C                 	db	108	;'l'
 12475  00FE99  20                 	db	32
 12476  00FE9A  54                 	db	84	;'T'
 12477  00FE9B  65                 	db	101	;'e'
 12478  00FE9C  6D                 	db	109	;'m'
 12479  00FE9D  70                 	db	112	;'p'
 12480  00FE9E  00                 	db	0
 12481  00FE9F                     STR_174:
 12482  00FE9F  50                 	db	80	;'P'
 12483  00FEA0  49                 	db	73	;'I'
 12484  00FEA1  43                 	db	67	;'C'
 12485  00FEA2  31                 	db	49	;'1'
 12486  00FEA3  38                 	db	56	;'8'
 12487  00FEA4  4C                 	db	76	;'L'
 12488  00FEA5  46                 	db	70	;'F'
 12489  00FEA6  36                 	db	54	;'6'
 12490  00FEA7  37                 	db	55	;'7'
 12491  00FEA8  4B                 	db	75	;'K'
 12492  00FEA9  34                 	db	52	;'4'
 12493  00FEAA  30                 	db	48	;'0'
 12494  00FEAB  00                 	db	0
 12495  00FEAC                     STR_172:
 12496  00FEAC  50                 	db	80	;'P'
 12497  00FEAD  53                 	db	83	;'S'
 12498  00FEAE  4F                 	db	79	;'O'
 12499  00FEAF  43                 	db	67	;'C'
 12500  00FEB0  73                 	db	115	;'s'
 12501  00FEB1  20                 	db	32
 12502  00FEB2  53                 	db	83	;'S'
 12503  00FEB3  55                 	db	85	;'U'
 12504  00FEB4  43                 	db	67	;'C'
 12505  00FEB5  4B                 	db	75	;'K'
 12506  00FEB6  0A                 	db	10
 12507  00FEB7  0D                 	db	13
 12508  00FEB8  00                 	db	0
 12509  00FEB9                     STR_59:
 12510  00FEB9  52                 	db	82	;'R'
 12511  00FEBA  65                 	db	101	;'e'
 12512  00FEBB  76                 	db	118	;'v'
 12513  00FEBC  69                 	db	105	;'i'
 12514  00FEBD  73                 	db	115	;'s'
 12515  00FEBE  69                 	db	105	;'i'
 12516  00FEBF  6F                 	db	111	;'o'
 12517  00FEC0  6E                 	db	110	;'n'
 12518  00FEC1  20                 	db	32
 12519  00FEC2  49                 	db	73	;'I'
 12520  00FEC3  44                 	db	68	;'D'
 12521  00FEC4  3F                 	db	63	;'?'
 12522  00FEC5  00                 	db	0
 12523  00FEC6                     STR_89:
 12524  00FEC6  4D                 	db	77	;'M'
 12525  00FEC7  65                 	db	101	;'e'
 12526  00FEC8  61                 	db	97	;'a'
 12527  00FEC9  73                 	db	115	;'s'
 12528  00FECA  75                 	db	117	;'u'
 12529  00FECB  72                 	db	114	;'r'
 12530  00FECC  65                 	db	101	;'e'
 12531  00FECD  20                 	db	32
 12532  00FECE  46                 	db	70	;'F'
 12533  00FECF  56                 	db	86	;'V'
 12534  00FED0  52                 	db	82	;'R'
 12535  00FED1  3F                 	db	63	;'?'
 12536  00FED2  00                 	db	0
 12537  00FED3                     STR_123:
 12538  00FED3  44                 	db	68	;'D'
 12539  00FED4  69                 	db	105	;'i'
 12540  00FED5  73                 	db	115	;'s'
 12541  00FED6  61                 	db	97	;'a'
 12542  00FED7  62                 	db	98	;'b'
 12543  00FED8  6C                 	db	108	;'l'
 12544  00FED9  65                 	db	101	;'e'
 12545  00FEDA  20                 	db	32
 12546  00FEDB  4C                 	db	76	;'L'
 12547  00FEDC  6F                 	db	111	;'o'
 12548  00FEDD  61                 	db	97	;'a'
 12549  00FEDE  64                 	db	100	;'d'
 12550  00FEDF  00                 	db	0
 12551  00FEE0                     STR_103:
 12552  00FEE0  43                 	db	67	;'C'
 12553  00FEE1  6C                 	db	108	;'l'
 12554  00FEE2  65                 	db	101	;'e'
 12555  00FEE3  61                 	db	97	;'a'
 12556  00FEE4  72                 	db	114	;'r'
 12557  00FEE5  20                 	db	32
 12558  00FEE6  45                 	db	69	;'E'
 12559  00FEE7  6E                 	db	110	;'n'
 12560  00FEE8  65                 	db	101	;'e'
 12561  00FEE9  72                 	db	114	;'r'
 12562  00FEEA  67                 	db	103	;'g'
 12563  00FEEB  79                 	db	121	;'y'
 12564  00FEEC  00                 	db	0
 12565  00FEED                     STR_4:
 12566  00FEED  44                 	db	68	;'D'
 12567  00FEEE  72                 	db	114	;'r'
 12568  00FEEF  65                 	db	101	;'e'
 12569  00FEF0  77                 	db	119	;'w'
 12570  00FEF1  20                 	db	32
 12571  00FEF2  4D                 	db	77	;'M'
 12572  00FEF3  61                 	db	97	;'a'
 12573  00FEF4  61                 	db	97	;'a'
 12574  00FEF5  74                 	db	116	;'t'
 12575  00FEF6  6D                 	db	109	;'m'
 12576  00FEF7  61                 	db	97	;'a'
 12577  00FEF8  6E                 	db	110	;'n'
 12578  00FEF9  00                 	db	0
 12579  00FEFA                     STR_173:
 12580  00FEFA  50                 	db	80	;'P'
 12581  00FEFB  49                 	db	73	;'I'
 12582  00FEFC  43                 	db	67	;'C'
 12583  00FEFD  31                 	db	49	;'1'
 12584  00FEFE  38                 	db	56	;'8'
 12585  00FEFF  46                 	db	70	;'F'
 12586  00FF00  36                 	db	54	;'6'
 12587  00FF01  37                 	db	55	;'7'
 12588  00FF02  4B                 	db	75	;'K'
 12589  00FF03  34                 	db	52	;'4'
 12590  00FF04  30                 	db	48	;'0'
 12591  00FF05  00                 	db	0
 12592  00FF06                     STR_77:
 12593  00FF06  43                 	db	67	;'C'
 12594  00FF07  6F                 	db	111	;'o'
 12595  00FF08  6D                 	db	109	;'m'
 12596  00FF09  6D                 	db	109	;'m'
 12597  00FF0A  20                 	db	32
 12598  00FF0B  45                 	db	69	;'E'
 12599  00FF0C  72                 	db	114	;'r'
 12600  00FF0D  72                 	db	114	;'r'
 12601  00FF0E  6F                 	db	111	;'o'
 12602  00FF0F  72                 	db	114	;'r'
 12603  00FF10  3F                 	db	63	;'?'
 12604  00FF11  00                 	db	0
 12605  00FF12                     STR_114:
 12606  00FF12  45                 	db	69	;'E'
 12607  00FF13  6E                 	db	110	;'n'
 12608  00FF14  61                 	db	97	;'a'
 12609  00FF15  62                 	db	98	;'b'
 12610  00FF16  6C                 	db	108	;'l'
 12611  00FF17  65                 	db	101	;'e'
 12612  00FF18  20                 	db	32
 12613  00FF19  4C                 	db	76	;'L'
 12614  00FF1A  6F                 	db	111	;'o'
 12615  00FF1B  61                 	db	97	;'a'
 12616  00FF1C  64                 	db	100	;'d'
 12617  00FF1D  00                 	db	0
 12618  00FF1E                     STR_5:
 12619  00FF1E  47                 	db	71	;'G'
 12620  00FF1F  61                 	db	97	;'a'
 12621  00FF20  62                 	db	98	;'b'
 12622  00FF21  65                 	db	101	;'e'
 12623  00FF22  20                 	db	32
 12624  00FF23  54                 	db	84	;'T'
 12625  00FF24  68                 	db	104	;'h'
 12626  00FF25  61                 	db	97	;'a'
 12627  00FF26  6C                 	db	108	;'l'
 12628  00FF27  6A                 	db	106	;'j'
 12629  00FF28  69                 	db	105	;'i'
 12630  00FF29  00                 	db	0
 12631  00FF2A  25                 	db	37
 12632  00FF2B  6C                 	db	108	;'l'
 12633  00FF2C  75                 	db	117	;'u'
 12634  00FF2D  2E                 	db	46
 12635  00FF2E  25                 	db	37
 12636  00FF2F  36                 	db	54	;'6'
 12637  00FF30  2E                 	db	46
 12638  00FF31  36                 	db	54	;'6'
 12639  00FF32  6C                 	db	108	;'l'
 12640  00FF33  75                 	db	117	;'u'
 12641  00FF34  00                 	db	0
 12642  00FF35                     STR_57:
 12643  00FF35  44                 	db	68	;'D'
 12644  00FF36  65                 	db	101	;'e'
 12645  00FF37  76                 	db	118	;'v'
 12646  00FF38  69                 	db	105	;'i'
 12647  00FF39  63                 	db	99	;'c'
 12648  00FF3A  65                 	db	101	;'e'
 12649  00FF3B  20                 	db	32
 12650  00FF3C  49                 	db	73	;'I'
 12651  00FF3D  44                 	db	68	;'D'
 12652  00FF3E  3F                 	db	63	;'?'
 12653  00FF3F  00                 	db	0
 12654  00FF40                     STR_138:
 12655  00FF40  4D                 	db	77	;'M'
 12656  00FF41  61                 	db	97	;'a'
 12657  00FF42  78                 	db	120	;'x'
 12658  00FF43  20                 	db	32
 12659  00FF44  50                 	db	80	;'P'
 12660  00FF45  6F                 	db	111	;'o'
 12661  00FF46  77                 	db	119	;'w'
 12662  00FF47  65                 	db	101	;'e'
 12663  00FF48  72                 	db	114	;'r'
 12664  00FF49  3F                 	db	63	;'?'
 12665  00FF4A  00                 	db	0
 12666  00FF4B                     STR_64:
 12667  00FF4B  41                 	db	65	;'A'
 12668  00FF4C  44                 	db	68	;'D'
 12669  00FF4D  43                 	db	67	;'C'
 12670  00FF4E  20                 	db	32
 12671  00FF4F  45                 	db	69	;'E'
 12672  00FF50  72                 	db	114	;'r'
 12673  00FF51  72                 	db	114	;'r'
 12674  00FF52  6F                 	db	111	;'o'
 12675  00FF53  72                 	db	114	;'r'
 12676  00FF54  3F                 	db	63	;'?'
 12677  00FF55  00                 	db	0
 12678  00FF56                     STR_167:
 12679  00FF56  45                 	db	69	;'E'
 12680  00FF57  61                 	db	97	;'a'
 12681  00FF58  73                 	db	115	;'s'
 12682  00FF59  74                 	db	116	;'t'
 12683  00FF5A  65                 	db	101	;'e'
 12684  00FF5B  72                 	db	114	;'r'
 12685  00FF5C  20                 	db	32
 12686  00FF5D  45                 	db	69	;'E'
 12687  00FF5E  67                 	db	103	;'g'
 12688  00FF5F  67                 	db	103	;'g'
 12689  00FF60  00                 	db	0
 12690  00FF61                     STR_61:
 12691  00FF61  55                 	db	85	;'U'
 12692  00FF62  73                 	db	115	;'s'
 12693  00FF63  65                 	db	101	;'e'
 12694  00FF64  72                 	db	114	;'r'
 12695  00FF65  20                 	db	32
 12696  00FF66  49                 	db	73	;'I'
 12697  00FF67  44                 	db	68	;'D'
 12698  00FF68  73                 	db	115	;'s'
 12699  00FF69  3F                 	db	63	;'?'
 12700  00FF6A  00                 	db	0
 12701  00FF6B                     STR_72:
 12702  00FF6B  55                 	db	85	;'U'
 12703  00FF6C  6E                 	db	110	;'n'
 12704  00FF6D  64                 	db	100	;'d'
 12705  00FF6E  65                 	db	101	;'e'
 12706  00FF6F  66                 	db	102	;'f'
 12707  00FF70  69                 	db	105	;'i'
 12708  00FF71  6E                 	db	110	;'n'
 12709  00FF72  65                 	db	101	;'e'
 12710  00FF73  64                 	db	100	;'d'
 12711  00FF74  00                 	db	0
 12712  00FF75                     STR_3:
 12713  00FF75  45                 	db	69	;'E'
 12714  00FF76  4C                 	db	76	;'L'
 12715  00FF77  45                 	db	69	;'E'
 12716  00FF78  4E                 	db	78	;'N'
 12717  00FF79  20                 	db	32
 12718  00FF7A  33                 	db	51	;'3'
 12719  00FF7B  30                 	db	48	;'0'
 12720  00FF7C  33                 	db	51	;'3'
 12721  00FF7D  35                 	db	53	;'5'
 12722  00FF7E  00                 	db	0
 12723  00FF7F                     STR_158:
 12724  00FF7F  48                 	db	72	;'H'
 12725  00FF80  65                 	db	101	;'e'
 12726  00FF81  6C                 	db	108	;'l'
 12727  00FF82  70                 	db	112	;'p'
 12728  00FF83  20                 	db	32
 12729  00FF84  41                 	db	65	;'A'
 12730  00FF85  6C                 	db	108	;'l'
 12731  00FF86  6C                 	db	108	;'l'
 12732  00FF87  00                 	db	0
 12733  00FF88                     STR_188:
 12734  00FF88  28                 	db	40
 12735  00FF89  6E                 	db	110	;'n'
 12736  00FF8A  75                 	db	117	;'u'
 12737  00FF8B  6C                 	db	108	;'l'
 12738  00FF8C  6C                 	db	108	;'l'
 12739  00FF8D  29                 	db	41
 12740  00FF8E  00                 	db	0
 12741  00FF8F                     STR_67:
 12742  00FF8F  50                 	db	80	;'P'
 12743  00FF90  4F                 	db	79	;'O'
 12744  00FF91  53                 	db	83	;'S'
 12745  00FF92  33                 	db	51	;'3'
 12746  00FF93  50                 	db	80	;'P'
 12747  00FF94  33                 	db	51	;'3'
 12748  00FF95  00                 	db	0
 12749  00FF96                     STR_66:
 12750  00FF96  50                 	db	80	;'P'
 12751  00FF97  4F                 	db	79	;'O'
 12752  00FF98  53                 	db	83	;'S'
 12753  00FF99  31                 	db	49	;'1'
 12754  00FF9A  32                 	db	50	;'2'
 12755  00FF9B  00                 	db	0
 12756  00FF9C                     STR_53:
 12757  00FF9C  2A                 	db	42
 12758  00FF9D  49                 	db	73	;'I'
 12759  00FF9E  44                 	db	68	;'D'
 12760  00FF9F  4E                 	db	78	;'N'
 12761  00FFA0  3F                 	db	63	;'?'
 12762  00FFA1  00                 	db	0
 12763  00FFA2                     STR_48:
 12764  00FFA2  43                 	db	67	;'C'
 12765  00FFA3  6C                 	db	108	;'l'
 12766  00FFA4  65                 	db	101	;'e'
 12767  00FFA5  61                 	db	97	;'a'
 12768  00FFA6  72                 	db	114	;'r'
 12769  00FFA7  00                 	db	0
 12770  00FFA8                     STR_65:
 12771  00FFA8  49                 	db	73	;'I'
 12772  00FFA9  53                 	db	83	;'S'
 12773  00FFAA  4E                 	db	78	;'N'
 12774  00FFAB  53                 	db	83	;'S'
 12775  00FFAC  00                 	db	0
 12776  00FFAD                     STR_160:
 12777  00FFAD  48                 	db	72	;'H'
 12778  00FFAE  65                 	db	101	;'e'
 12779  00FFAF  6C                 	db	108	;'l'
 12780  00FFB0  70                 	db	112	;'p'
 12781  00FFB1  00                 	db	0
 12782  00FFB2                     STR_6:
 12783  00FFB2  1B                 	db	27
 12784  00FFB3  5B                 	db	91	;'['
 12785  00FFB4  32                 	db	50	;'2'
 12786  00FFB5  4A                 	db	74	;'J'
 12787  00FFB6  00                 	db	0
 12788  00FFB7                     STR_54:
 12789  00FFB7  49                 	db	73	;'I'
 12790  00FFB8  44                 	db	68	;'D'
 12791  00FFB9  4E                 	db	78	;'N'
 12792  00FFBA  00                 	db	0
 12793  00FFBB                     STR_7:
 12794  00FFBB  1B                 	db	27
 12795  00FFBC  5B                 	db	91	;'['
 12796  00FFBD  48                 	db	72	;'H'
 12797  00FFBE  00                 	db	0
 12798  00FFBF  1B                 	db	27
 12799  00FFC0  5B                 	db	91	;'['
 12800  00FFC1  73                 	db	115	;'s'
 12801  00FFC2  00                 	db	0
 12802  00FFC3  1B                 	db	27
 12803  00FFC4  5B                 	db	91	;'['
 12804  00FFC5  75                 	db	117	;'u'
 12805  00FFC6  00                 	db	0
 12806  00FFC7                     STR_1:
 12807  00FFC7  1B                 	db	27
 12808  00FFC8  5B                 	db	91	;'['
 12809  00FFC9  4B                 	db	75	;'K'
 12810  00FFCA  00                 	db	0
 12811  00FFCB                     STR_24:
 12812  00FFCB  33                 	db	51	;'3'
 12813  00FFCC  30                 	db	48	;'0'
 12814  00FFCD  00                 	db	0
 12815  00FFCE                     STR_25:
 12816  00FFCE  33                 	db	51	;'3'
 12817  00FFCF  31                 	db	49	;'1'
 12818  00FFD0  00                 	db	0
 12819  00FFD1                     STR_35:
 12820  00FFD1  34                 	db	52	;'4'
 12821  00FFD2  31                 	db	49	;'1'
 12822  00FFD3  00                 	db	0
 12823  00FFD4                     STR_26:
 12824  00FFD4  33                 	db	51	;'3'
 12825  00FFD5  32                 	db	50	;'2'
 12826  00FFD6  00                 	db	0
 12827  00FFD7                     STR_36:
 12828  00FFD7  34                 	db	52	;'4'
 12829  00FFD8  32                 	db	50	;'2'
 12830  00FFD9  00                 	db	0
 12831  00FFDA                     STR_27:
 12832  00FFDA  33                 	db	51	;'3'
 12833  00FFDB  33                 	db	51	;'3'
 12834  00FFDC  00                 	db	0
 12835  00FFDD                     STR_37:
 12836  00FFDD  34                 	db	52	;'4'
 12837  00FFDE  33                 	db	51	;'3'
 12838  00FFDF  00                 	db	0
 12839  00FFE0                     STR_28:
 12840  00FFE0  33                 	db	51	;'3'
 12841  00FFE1  34                 	db	52	;'4'
 12842  00FFE2  00                 	db	0
 12843  00FFE3                     STR_38:
 12844  00FFE3  34                 	db	52	;'4'
 12845  00FFE4  34                 	db	52	;'4'
 12846  00FFE5  00                 	db	0
 12847  00FFE6                     STR_39:
 12848  00FFE6  34                 	db	52	;'4'
 12849  00FFE7  35                 	db	53	;'5'
 12850  00FFE8  00                 	db	0
 12851  00FFE9                     STR_30:
 12852  00FFE9  33                 	db	51	;'3'
 12853  00FFEA  36                 	db	54	;'6'
 12854  00FFEB  00                 	db	0
 12855  00FFEC                     STR_40:
 12856  00FFEC  34                 	db	52	;'4'
 12857  00FFED  36                 	db	54	;'6'
 12858  00FFEE  00                 	db	0
 12859  00FFEF                     STR_31:
 12860  00FFEF  33                 	db	51	;'3'
 12861  00FFF0  37                 	db	55	;'7'
 12862  00FFF1  00                 	db	0
 12863  00FFF2                     STR_41:
 12864  00FFF2  34                 	db	52	;'4'
 12865  00FFF3  37                 	db	55	;'7'
 12866  00FFF4  00                 	db	0
 12867  00FFF5                     STR_15:
 12868  00FFF5  1B                 	db	27
 12869  00FFF6  5B                 	db	91	;'['
 12870  00FFF7  00                 	db	0
 12871  00FFF8                     STR_21:
 12872  00FFF8  38                 	db	56	;'8'
 12873  00FFF9  00                 	db	0
 12874  00FFFA                     STR_23:
 12875  00FFFA  3B                 	db	59	;';'
 12876  00FFFB  00                 	db	0
 12877  00FFFC                     STR_43:
 12878  00FFFC  6D                 	db	109	;'m'
 12879  00FFFD  00                 	db	0
 12880  0000                     
 12881                           ; #config settings
 12882  00FFFE  00                 	db	0	; dummy byte at the end
 12883  0000                     
 12884                           	psect	nvBANK2
 12885  0002FC                     __pnvBANK2:
 12886                           	opt stack 0
 12887  0002FC                     _reset_cause:
 12888                           	opt stack 0
 12889  0002FC                     	ds	1
 12890  0000                     _INT0PPS	set	3568
 12891  0000                     _HLVDCON0bits	set	3778
 12892  0000                     _HLVDCON0	set	3778
 12893  0000                     _HLVDCON1	set	3779
 12894  0000                     _PIR8bits	set	3643
 12895  0000                     _FVRCONbits	set	3780
 12896  0000                     _FVRCON	set	3780
 12897  0000                     _RC2REG	set	3825
 12898  0000                     _RC2STAbits	set	3829
 12899  0000                     _TX2REG	set	3826
 12900  0000                     _TX2STAbits	set	3830
 12901  0000                     _SP2BRGH	set	3828
 12902  0000                     _SP2BRGL	set	3827
 12903  0000                     _TX2STA	set	3830
 12904  0000                     _RC2STA	set	3829
 12905  0000                     _BAUD2CON	set	3831
 12906  0000                     _PIR1bits	set	3636
 12907  0000                     _PIE1bits	set	3626
 12908  0000                     _PIR0bits	set	3635
 12909  0000                     _PIE0bits	set	3625
 12910  0000                     _PIR2bits	set	3637
 12911  0000                     _PIE2bits	set	3627
 12912  0000                     _PIR5bits	set	3640
 12913  0000                     _PIE5bits	set	3630
 12914  0000                     _PIR3bits	set	3638
 12915  0000                     _PIE3bits	set	3628
 12916  0000                     _IPR1bits	set	3616
 12917  0000                     _IPR0bits	set	3615
 12918  0000                     _IPR2bits	set	3617
 12919  0000                     _IPR5bits	set	3620
 12920  0000                     _IPR3bits	set	3618
 12921  0000                     _SSP1DATPPS	set	3610
 12922  0000                     _RC7PPS	set	3689
 12923  0000                     _RX2PPS	set	3601
 12924  0000                     _RC6PPS	set	3688
 12925  0000                     _SSP1CLKPPS	set	3609
 12926  0000                     _RG7PPS	set	3721
 12927  0000                     _SLRCONH	set	3774
 12928  0000                     _SLRCONG	set	3769
 12929  0000                     _SLRCONF	set	3761
 12930  0000                     _SLRCONE	set	3756
 12931  0000                     _SLRCOND	set	3748
 12932  0000                     _SLRCONC	set	3743
 12933  0000                     _SLRCONB	set	3735
 12934  0000                     _SLRCONA	set	3727
 12935  0000                     _ODCOND	set	3749
 12936  0000                     _ODCONC	set	3744
 12937  0000                     _ODCONH	set	3775
 12938  0000                     _ODCONB	set	3736
 12939  0000                     _ODCONG	set	3770
 12940  0000                     _ODCONA	set	3728
 12941  0000                     _ODCONF	set	3762
 12942  0000                     _ODCONE	set	3757
 12943  0000                     _WPUH	set	3776
 12944  0000                     _WPUC	set	3745
 12945  0000                     _WPUA	set	3729
 12946  0000                     _WPUG	set	3771
 12947  0000                     _WPUB	set	3737
 12948  0000                     _WPUE	set	3758
 12949  0000                     _WPUF	set	3763
 12950  0000                     _WPUD	set	3750
 12951  0000                     _ANSELA	set	3730
 12952  0000                     _ANSELF	set	3764
 12953  0000                     _ANSELG	set	3772
 12954  0000                     _ANSELE	set	3759
 12955  0000                     _ANSELB	set	3738
 12956  0000                     _ANSELD	set	3751
 12957  0000                     _PMD5	set	3665
 12958  0000                     _PMD4	set	3664
 12959  0000                     _PMD3	set	3663
 12960  0000                     _PMD2	set	3662
 12961  0000                     _PMD1	set	3661
 12962  0000                     _PMD0	set	3660
 12963  0000                     _OSCTUNE	set	3656
 12964  0000                     _OSCFRQ	set	3657
 12965  0000                     _OSCEN	set	3655
 12966  0000                     _OSCCON3	set	3653
 12967  0000                     _OSCCON1	set	3651
 12968  0000                     _SBOREN	set	29279
 12969  0000                     _PLLR	set	29232
 12970  0000                     _T7GCONbits	set	3889
 12971  0000                     _T7CONbits	set	3888
 12972  0000                     _T7CON	set	3888
 12973  0000                     _TMR7L	set	3886
 12974  0000                     _TMR7H	set	3887
 12975  0000                     _T7CLK	set	3891
 12976  0000                     _T7GATE	set	3890
 12977  0000                     _T7GCON	set	3889
 12978  0000                     _ADCON1bits	set	3929
 12979  0000                     _ADCON2bits	set	3930
 12980  0000                     _ADPRE	set	3934
 12981  0000                     _ADCON3bits	set	3931
 12982  0000                     _ADACQ	set	3932
 12983  0000                     _ADCLK	set	3927
 12984  0000                     _ADACT	set	3926
 12985  0000                     _ADREF	set	3928
 12986  0000                     _ADCON3	set	3931
 12987  0000                     _ADCON2	set	3930
 12988  0000                     _ADCON1	set	3929
 12989  0000                     _ADCAP	set	3933
 12990  0000                     _ADPCH	set	3935
 12991  0000                     _PCON0bits	set	4055
 12992  0000                     _LATGbits	set	3967
 12993  0000                     _SSP1BUF	set	3985
 12994  0000                     _SSP1CON2bits	set	3990
 12995  0000                     _SSP1CON1bits	set	3989
 12996  0000                     _SSP1ADD	set	3986
 12997  0000                     _SSP1CON3	set	3991
 12998  0000                     _SSP1CON1	set	3989
 12999  0000                     _SSP1STAT	set	3988
 13000  0000                     _PR4	set	4022
 13001  0000                     _TMR4	set	4021
 13002  0000                     _T4CONbits	set	4023
 13003  0000                     _T4RSTbits	set	4026
 13004  0000                     _T4HLTbits	set	4024
 13005  0000                     _T4CON	set	4023
 13006  0000                     _T4TMR	set	4021
 13007  0000                     _T4PR	set	4022
 13008  0000                     _T4RST	set	4026
 13009  0000                     _T4HLT	set	4024
 13010  0000                     _T4CLKCON	set	4025
 13011  0000                     _NVMDAT	set	3958
 13012  0000                     _NVMADRL	set	3956
 13013  0000                     _NVMADRH	set	3957
 13014  0000                     _NVMCON2	set	3960
 13015  0000                     _TABLAT	set	4085
 13016  0000                     _TBLPTRL	set	4086
 13017  0000                     _TBLPTRH	set	4087
 13018  0000                     _TBLPTRU	set	4088
 13019  0000                     _NVMCON1bits	set	3959
 13020  0000                     _T5GCONbits	set	4036
 13021  0000                     _T5CONbits	set	4035
 13022  0000                     _T5CON	set	4035
 13023  0000                     _TMR5L	set	4033
 13024  0000                     _TMR5H	set	4034
 13025  0000                     _T5CLK	set	4038
 13026  0000                     _T5GATE	set	4037
 13027  0000                     _T5GCON	set	4036
 13028  0000                     _ADERRL	set	3950
 13029  0000                     _ADERRH	set	3951
 13030  0000                     _ADPREVL	set	3937
 13031  0000                     _ADPREVH	set	3938
 13032  0000                     _ADFLTRL	set	3954
 13033  0000                     _ADFLTRH	set	3955
 13034  0000                     _ADSTATbits	set	3941
 13035  0000                     _ADACCL	set	3952
 13036  0000                     _ADACCH	set	3953
 13037  0000                     _ADCNT	set	3943
 13038  0000                     _ADRESL	set	3939
 13039  0000                     _ADRESH	set	3940
 13040  0000                     _ADCON0bits	set	3936
 13041  0000                     _ADCON0	set	3936
 13042  0000                     _ADSTAT	set	3941
 13043  0000                     _ADRPT	set	3942
 13044  0000                     _ADSTPTH	set	3945
 13045  0000                     _ADSTPTL	set	3944
 13046  0000                     _ADUTHH	set	3949
 13047  0000                     _ADUTHL	set	3948
 13048  0000                     _ADLTHH	set	3947
 13049  0000                     _ADLTHL	set	3946
 13050  0000                     _LATFbits	set	3966
 13051  0000                     _PR6	set	4016
 13052  0000                     _TMR6	set	4015
 13053  0000                     _T6CONbits	set	4017
 13054  0000                     _T6RSTbits	set	4020
 13055  0000                     _T6HLTbits	set	4018
 13056  0000                     _T6CON	set	4017
 13057  0000                     _T6TMR	set	4015
 13058  0000                     _T6PR	set	4016
 13059  0000                     _T6RST	set	4020
 13060  0000                     _T6HLT	set	4018
 13061  0000                     _T6CLKCON	set	4019
 13062  0000                     _INTCONbits	set	4082
 13063  0000                     _TRISD	set	3972
 13064  0000                     _TRISC	set	3971
 13065  0000                     _TRISH	set	3976
 13066  0000                     _TRISB	set	3970
 13067  0000                     _TRISG	set	3975
 13068  0000                     _TRISA	set	3969
 13069  0000                     _TRISF	set	3974
 13070  0000                     _TRISE	set	3973
 13071  0000                     _LATH	set	3968
 13072  0000                     _LATC	set	3963
 13073  0000                     _LATG	set	3967
 13074  0000                     _LATB	set	3962
 13075  0000                     _LATF	set	3966
 13076  0000                     _LATA	set	3961
 13077  0000                     _LATD	set	3964
 13078  0000                     _LATE	set	3965
 13079                           
 13080                           	psect	cinit
 13081  019840                     __pcinit:
 13082                           	opt stack 0
 13083  019840                     start_initialization:
 13084                           	opt stack 0
 13085  019840                     __initialization:
 13086                           	opt stack 0
 13087                           
 13088                           ; Initialize objects allocated to BANK2 (37 bytes)
 13089                           ; load TBLPTR registers with __pidataBANK2
 13090  019840  0E7A               	movlw	low __pidataBANK2
 13091  019842  6EF6               	movwf	tblptrl,c
 13092  019844  0EAE               	movlw	high __pidataBANK2
 13093  019846  6EF7               	movwf	tblptrh,c
 13094  019848  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 13095  01984A  6EF8               	movwf	tblptru,c
 13096  01984C  EE02  F0D7         	lfsr	0,__pdataBANK2
 13097  019850  EE10 F025          	lfsr	1,37
 13098  019854                     copy_data0:
 13099  019854  0009               	tblrd		*+
 13100  019856  CFF5 FFEE          	movff	tablat,postinc0
 13101  01985A  50E5               	movf	postdec1,w,c
 13102  01985C  50E1               	movf	fsr1l,w,c
 13103  01985E  E1FA               	bnz	copy_data0
 13104                           
 13105                           ; Initialize objects allocated to BANK1 (2 bytes)
 13106                           ; load TBLPTR registers with __pidataBANK1
 13107  019860  0EE4               	movlw	low __pidataBANK1
 13108  019862  6EF6               	movwf	tblptrl,c
 13109  019864  0EB1               	movlw	high __pidataBANK1
 13110  019866  6EF7               	movwf	tblptrh,c
 13111  019868  0E01               	movlw	low (__pidataBANK1 shr (0+16))
 13112  01986A  6EF8               	movwf	tblptru,c
 13113  01986C  0009               	tblrd		*+	;fetch initializer
 13114  01986E  CFF5 F1E7          	movff	tablat,__pdataBANK1
 13115  019872  0009               	tblrd		*+	;fetch initializer
 13116  019874  CFF5 F1E8          	movff	tablat,__pdataBANK1+1
 13117                           
 13118                           ; Initialize objects allocated to BANK0 (4 bytes)
 13119                           ; load TBLPTR registers with __pidataBANK0
 13120  019878  0ED0               	movlw	low __pidataBANK0
 13121  01987A  6EF6               	movwf	tblptrl,c
 13122  01987C  0EB1               	movlw	high __pidataBANK0
 13123  01987E  6EF7               	movwf	tblptrh,c
 13124  019880  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 13125  019882  6EF8               	movwf	tblptru,c
 13126  019884  EE00  F0F7         	lfsr	0,__pdataBANK0
 13127  019888  EE10 F004          	lfsr	1,4
 13128  01988C                     copy_data1:
 13129  01988C  0009               	tblrd		*+
 13130  01988E  CFF5 FFEE          	movff	tablat,postinc0
 13131  019892  50E5               	movf	postdec1,w,c
 13132  019894  50E1               	movf	fsr1l,w,c
 13133  019896  E1FA               	bnz	copy_data1
 13134                           
 13135                           ; Clear objects allocated to BANK3 (256 bytes)
 13136  019898  EE03  F000         	lfsr	0,__pbssBANK3
 13137  01989C  EE11 F000          	lfsr	1,256
 13138  0198A0                     clear_0:
 13139  0198A0  6AEE               	clrf	postinc0,c
 13140  0198A2  50E5               	movf	postdec1,w,c
 13141  0198A4  50E1               	movf	fsr1l,w,c
 13142  0198A6  E1FC               	bnz	clear_0
 13143  0198A8  50E2               	movf	fsr1h,w,c
 13144  0198AA  E1FA               	bnz	clear_0
 13145                           
 13146                           ; Clear objects allocated to BANK2 (138 bytes)
 13147  0198AC  EE02  F000         	lfsr	0,__pbssBANK2
 13148  0198B0  0E8A               	movlw	138
 13149  0198B2                     clear_1:
 13150  0198B2  6AEE               	clrf	postinc0,c
 13151  0198B4  06E8               	decf	wreg,f,c
 13152  0198B6  E1FD               	bnz	clear_1
 13153                           
 13154                           ; Clear objects allocated to BANK1 (33 bytes)
 13155  0198B8  EE01  F0C6         	lfsr	0,__pbssBANK1
 13156  0198BC  0E21               	movlw	33
 13157  0198BE                     clear_2:
 13158  0198BE  6AEE               	clrf	postinc0,c
 13159  0198C0  06E8               	decf	wreg,f,c
 13160  0198C2  E1FD               	bnz	clear_2
 13161                           
 13162                           ; Clear objects allocated to BITBANK0 (1 bytes)
 13163  0198C4  0100               	movlb	0
 13164  0198C6  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
 13165                           
 13166                           ; Clear objects allocated to BANK0 (7 bytes)
 13167  0198C8  EE00  F0F0         	lfsr	0,__pbssBANK0
 13168  0198CC  0E07               	movlw	7
 13169  0198CE                     clear_3:
 13170  0198CE  6AEE               	clrf	postinc0,c
 13171  0198D0  06E8               	decf	wreg,f,c
 13172  0198D2  E1FD               	bnz	clear_3
 13173                           
 13174                           ; Clear objects allocated to BITCOMRAM (1 bytes)
 13175  0198D4  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
 13176  0198D6                     end_of_initialization:
 13177                           	opt stack 0
 13178  0198D6                     __end_of__initialization:
 13179                           	opt stack 0
 13180  0198D6  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13181  0198D8  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13182  0198DA  0100               	movlb	0
 13183  0198DC  EF39  F0C2         	goto	_main	;jump to C main() function
 13184                           tblptru	equ	0xFF8
 13185                           tblptrh	equ	0xFF7
 13186                           tblptrl	equ	0xFF6
 13187                           tablat	equ	0xFF5
 13188                           postinc0	equ	0xFEE
 13189                           wreg	equ	0xFE8
 13190                           postdec1	equ	0xFE5
 13191                           fsr1h	equ	0xFE2
 13192                           fsr1l	equ	0xFE1
 13193                           
 13194                           	psect	bitbssCOMRAM
 13195  0002F0                     __pbitbssCOMRAM:
 13196                           	opt stack 0
 13197  0002F0                     _adc_error_flag:
 13198                           	opt stack 0
 13199  0002F0                     	ds	1
 13200  0002F1                     _load_enable:
 13201                           	opt stack 0
 13202  0002F1                     	ds	1
 13203                           tblptru	equ	0xFF8
 13204                           tblptrh	equ	0xFF7
 13205                           tblptrl	equ	0xFF6
 13206                           tablat	equ	0xFF5
 13207                           postinc0	equ	0xFEE
 13208                           wreg	equ	0xFE8
 13209                           postdec1	equ	0xFE5
 13210                           fsr1h	equ	0xFE2
 13211                           fsr1l	equ	0xFE1
 13212                           
 13213                           	psect	bitbssBANK0
 13214  0007D8                     __pbitbssBANK0:
 13215                           	opt stack 0
 13216  0007D8                     _eusart2RxStringReady:
 13217                           	opt stack 0
 13218  0007D8                     	ds	1
 13219                           tblptru	equ	0xFF8
 13220                           tblptrh	equ	0xFF7
 13221                           tblptrl	equ	0xFF6
 13222                           tablat	equ	0xFF5
 13223                           postinc0	equ	0xFEE
 13224                           wreg	equ	0xFE8
 13225                           postdec1	equ	0xFE5
 13226                           fsr1h	equ	0xFE2
 13227                           fsr1l	equ	0xFE1
 13228                           
 13229                           	psect	bssBANK0
 13230  0000F0                     __pbssBANK0:
 13231                           	opt stack 0
 13232  0000F0                     _Total_Energy:
 13233                           	opt stack 0
 13234  0000F0                     	ds	4
 13235  0000F4                     _eusart2RxHead:
 13236                           	opt stack 0
 13237  0000F4                     	ds	1
 13238  0000F5                     I2C1_ISR@i2c_address:
 13239                           	opt stack 0
 13240  0000F5                     	ds	2
 13241                           tblptru	equ	0xFF8
 13242                           tblptrh	equ	0xFF7
 13243                           tblptrl	equ	0xFF6
 13244                           tablat	equ	0xFF5
 13245                           postinc0	equ	0xFEE
 13246                           wreg	equ	0xFE8
 13247                           postdec1	equ	0xFE5
 13248                           fsr1h	equ	0xFE2
 13249                           fsr1l	equ	0xFE1
 13250                           
 13251                           	psect	dataBANK0
 13252  0000F7                     __pdataBANK0:
 13253                           	opt stack 0
 13254  0000F7                     _TRIAC_Firing_Angle:
 13255                           	opt stack 0
 13256  0000F7                     	ds	4
 13257                           tblptru	equ	0xFF8
 13258                           tblptrh	equ	0xFF7
 13259                           tblptrl	equ	0xFF6
 13260                           tablat	equ	0xFF5
 13261                           postinc0	equ	0xFEE
 13262                           wreg	equ	0xFE8
 13263                           postdec1	equ	0xFE5
 13264                           fsr1h	equ	0xFE2
 13265                           fsr1l	equ	0xFE1
 13266                           
 13267                           	psect	bssBANK1
 13268  0001C6                     __pbssBANK1:
 13269                           	opt stack 0
 13270  0001C6                     _Avg_Power:
 13271                           	opt stack 0
 13272  0001C6                     	ds	4
 13273  0001CA                     _Irms:
 13274                           	opt stack 0
 13275  0001CA                     	ds	4
 13276  0001CE                     _Ipk:
 13277                           	opt stack 0
 13278  0001CE                     	ds	4
 13279  0001D2                     _Temp_ADC_Result:
 13280                           	opt stack 0
 13281  0001D2                     	ds	4
 13282  0001D6                     _POS12_ADC_Result:
 13283                           	opt stack 0
 13284  0001D6                     	ds	4
 13285  0001DA                     _POS3P3_ADC_Result:
 13286                           	opt stack 0
 13287  0001DA                     	ds	4
 13288  0001DE                     _eusart2RxTail:
 13289                           	opt stack 0
 13290  0001DE                     	ds	1
 13291  0001DF                     _eusart2TxBufferRemaining:
 13292                           	opt stack 0
 13293  0001DF                     	ds	1
 13294  0001E0                     _eusart2TxTail:
 13295                           	opt stack 0
 13296  0001E0                     	ds	1
 13297  0001E1                     _eusart2TxHead:
 13298                           	opt stack 0
 13299  0001E1                     	ds	1
 13300  0001E2                     _FVR_ADC_Result:
 13301                           	opt stack 0
 13302  0001E2                     	ds	4
 13303  0001E6                     _OLED_I2C_Status:
 13304                           	opt stack 0
 13305  0001E6                     	ds	1
 13306                           tblptru	equ	0xFF8
 13307                           tblptrh	equ	0xFF7
 13308                           tblptrl	equ	0xFF6
 13309                           tablat	equ	0xFF5
 13310                           postinc0	equ	0xFEE
 13311                           wreg	equ	0xFE8
 13312                           postdec1	equ	0xFE5
 13313                           fsr1h	equ	0xFE2
 13314                           fsr1l	equ	0xFE1
 13315                           
 13316                           	psect	dataBANK1
 13317  0001E7                     __pdataBANK1:
 13318                           	opt stack 0
 13319  0001E7                     _dimming_period:
 13320                           	opt stack 0
 13321  0001E7                     	ds	2
 13322                           tblptru	equ	0xFF8
 13323                           tblptrh	equ	0xFF7
 13324                           tblptrl	equ	0xFF6
 13325                           tablat	equ	0xFF5
 13326                           postinc0	equ	0xFEE
 13327                           wreg	equ	0xFE8
 13328                           postdec1	equ	0xFE5
 13329                           fsr1h	equ	0xFE2
 13330                           fsr1l	equ	0xFE1
 13331                           
 13332                           	psect	bssBANK2
 13333  000200                     __pbssBANK2:
 13334                           	opt stack 0
 13335  000200                     _i2c1_object:
 13336                           	opt stack 0
 13337  000200                     	ds	7
 13338  000207                     _max_FVR_ADC_Result:
 13339                           	opt stack 0
 13340  000207                     	ds	4
 13341  00020B                     _max_Temp_ADC_Result:
 13342                           	opt stack 0
 13343  00020B                     	ds	4
 13344  00020F                     _max_POS12_ADC_Result:
 13345                           	opt stack 0
 13346  00020F                     	ds	4
 13347  000213                     _max_POS3P3_ADC_Result:
 13348                           	opt stack 0
 13349  000213                     	ds	4
 13350  000217                     _max_Power:
 13351                           	opt stack 0
 13352  000217                     	ds	4
 13353  00021B                     _max_Irms:
 13354                           	opt stack 0
 13355  00021B                     	ds	4
 13356  00021F                     _load_on_time:
 13357                           	opt stack 0
 13358  00021F                     	ds	4
 13359  000223                     _dev_on_time:
 13360                           	opt stack 0
 13361  000223                     	ds	4
 13362  000227                     _Vrms:
 13363                           	opt stack 0
 13364  000227                     	ds	4
 13365  00022B                     _Imeas:
 13366                           	opt stack 0
 13367  00022B                     	ds	4
 13368  00022F                     _Vpk:
 13369                           	opt stack 0
 13370  00022F                     	ds	4
 13371  000233                     _ADC_Result_Scaling:
 13372                           	opt stack 0
 13373  000233                     	ds	4
 13374  000237                     _AVSS_ADC_Result:
 13375                           	opt stack 0
 13376  000237                     	ds	4
 13377  00023B                     _TMR4_InterruptHandler:
 13378                           	opt stack 0
 13379  00023B                     	ds	3
 13380  00023E                     _INT0_InterruptHandler:
 13381                           	opt stack 0
 13382  00023E                     	ds	3
 13383  000241                     _TMR5_InterruptHandler:
 13384                           	opt stack 0
 13385  000241                     	ds	3
 13386  000244                     _TMR7_InterruptHandler:
 13387                           	opt stack 0
 13388  000244                     	ds	3
 13389  000247                     _ADCC_ADTI_InterruptHandler:
 13390                           	opt stack 0
 13391  000247                     	ds	3
 13392  00024A                     _TMR6_InterruptHandler:
 13393                           	opt stack 0
 13394  00024A                     	ds	3
 13395  00024D                     _EUSART2_RxDefaultInterruptHandler:
 13396                           	opt stack 0
 13397  00024D                     	ds	3
 13398  000250                     _EUSART2_TxDefaultInterruptHandler:
 13399                           	opt stack 0
 13400  000250                     	ds	3
 13401  000253                     _errno:
 13402                           	opt stack 0
 13403  000253                     	ds	2
 13404  000255                     I2C1_ISR@pi2c_buf_ptr:
 13405                           	opt stack 0
 13406  000255                     	ds	2
 13407  000257                     _p_i2c1_current:
 13408                           	opt stack 0
 13409  000257                     	ds	2
 13410  000259                     _p_i2c1_trb_current:
 13411                           	opt stack 0
 13412  000259                     	ds	2
 13413  00025B                     TMR4_ISR@CountCallBack:
 13414                           	opt stack 0
 13415  00025B                     	ds	2
 13416  00025D                     _timer5ReloadVal:
 13417                           	opt stack 0
 13418  00025D                     	ds	2
 13419  00025F                     _timer7ReloadVal:
 13420                           	opt stack 0
 13421  00025F                     	ds	2
 13422  000261                     _current_adc_channel:
 13423                           	opt stack 0
 13424  000261                     	ds	1
 13425  000262                     _background_color:
 13426                           	opt stack 0
 13427  000262                     	ds	1
 13428  000263                     _foreground_color:
 13429                           	opt stack 0
 13430  000263                     	ds	1
 13431  000264                     _attribute:
 13432                           	opt stack 0
 13433  000264                     	ds	1
 13434  000265                     I2C1_ISR@i2c_10bit_address_restart:
 13435                           	opt stack 0
 13436  000265                     	ds	1
 13437  000266                     I2C1_ISR@i2c_bytes_left:
 13438                           	opt stack 0
 13439  000266                     	ds	1
 13440  000267                     _i2c1_trb_count:
 13441                           	opt stack 0
 13442  000267                     	ds	1
 13443  000268                     _i2c1_state:
 13444                           	opt stack 0
 13445  000268                     	ds	1
 13446  000269                     _eusart2RxCount:
 13447                           	opt stack 0
 13448  000269                     	ds	1
 13449  00026A                     ftoa@buf:
 13450                           	opt stack 0
 13451  00026A                     	ds	17
 13452  00027B                     I2C1_MasterRead@trBlock:
 13453                           	opt stack 0
 13454  00027B                     	ds	5
 13455  000280                     I2C1_MasterWrite@trBlock:
 13456                           	opt stack 0
 13457  000280                     	ds	5
 13458  000285                     _i2c1_tr_queue:
 13459                           	opt stack 0
 13460  000285                     	ds	5
 13461                           tblptru	equ	0xFF8
 13462                           tblptrh	equ	0xFF7
 13463                           tblptrl	equ	0xFF6
 13464                           tablat	equ	0xFF5
 13465                           postinc0	equ	0xFEE
 13466                           wreg	equ	0xFE8
 13467                           postdec1	equ	0xFE5
 13468                           fsr1h	equ	0xFE2
 13469                           fsr1l	equ	0xFE1
 13470                           
 13471                           	psect	dataBANK2
 13472  0002D7                     __pdataBANK2:
 13473                           	opt stack 0
 13474  0002D7                     getCauseOfResetString@strings:
 13475                           	opt stack 0
 13476  0002D7                     	ds	18
 13477  0002E9                     getDeviceIDString@F17550:
 13478                           	opt stack 0
 13479  0002E9                     	ds	6
 13480  0002EF                     _Irms_offset:
 13481                           	opt stack 0
 13482  0002EF                     	ds	4
 13483  0002F3                     _Vpk_const:
 13484                           	opt stack 0
 13485  0002F3                     	ds	4
 13486  0002F7                     _Temp_ADC_Offset:
 13487                           	opt stack 0
 13488  0002F7                     	ds	4
 13489  0002FB                     _next_channel:
 13490                           	opt stack 0
 13491  0002FB                     	ds	1
 13492                           tblptru	equ	0xFF8
 13493                           tblptrh	equ	0xFF7
 13494                           tblptrl	equ	0xFF6
 13495                           tablat	equ	0xFF5
 13496                           postinc0	equ	0xFEE
 13497                           wreg	equ	0xFE8
 13498                           postdec1	equ	0xFE5
 13499                           fsr1h	equ	0xFE2
 13500                           fsr1l	equ	0xFE1
 13501                           
 13502                           	psect	bssBANK3
 13503  000300                     __pbssBANK3:
 13504                           	opt stack 0
 13505  000300                     _eusart2TxBuffer:
 13506                           	opt stack 0
 13507  000300                     	ds	128
 13508  000380                     _eusart2RxBuffer:
 13509                           	opt stack 0
 13510  000380                     	ds	64
 13511  0003C0                     _line:
 13512                           	opt stack 0
 13513  0003C0                     	ds	64
 13514                           tblptru	equ	0xFF8
 13515                           tblptrh	equ	0xFF7
 13516                           tblptrl	equ	0xFF6
 13517                           tablat	equ	0xFF5
 13518                           postinc0	equ	0xFEE
 13519                           wreg	equ	0xFE8
 13520                           postdec1	equ	0xFE5
 13521                           fsr1h	equ	0xFE2
 13522                           fsr1l	equ	0xFE1
 13523                           
 13524                           	psect	cstackBANK4
 13525  000400                     __pcstackBANK4:
 13526                           	opt stack 0
 13527  000400                     terminal_ringBufferPull@charNumber:
 13528                           	opt stack 0
 13529                           
 13530                           ; 2 bytes @ 0x0
 13531  000400                     	ds	2
 13532  000402                     terminal_ringBufferPull@index_3260:
 13533                           	opt stack 0
 13534                           
 13535                           ; 2 bytes @ 0x2
 13536  000402                     	ds	2
 13537  000404                     terminal_ringBufferPull@index:
 13538                           	opt stack 0
 13539                           
 13540                           ; 2 bytes @ 0x4
 13541  000404                     	ds	2
 13542                           tblptru	equ	0xFF8
 13543                           tblptrh	equ	0xFF7
 13544                           tblptrl	equ	0xFF6
 13545                           tablat	equ	0xFF5
 13546                           postinc0	equ	0xFEE
 13547                           wreg	equ	0xFE8
 13548                           postdec1	equ	0xFE5
 13549                           fsr1h	equ	0xFE2
 13550                           fsr1l	equ	0xFE1
 13551                           
 13552                           	psect	cstackBANK2
 13553  00028A                     __pcstackBANK2:
 13554                           	opt stack 0
 13555  00028A                     terminal_textAttributes@foreground_color:
 13556                           	opt stack 0
 13557                           
 13558                           ; 1 bytes @ 0x0
 13559  00028A                     	ds	1
 13560  00028B                     terminal_textAttributes@output_buff:
 13561                           	opt stack 0
 13562                           
 13563                           ; 15 bytes @ 0x1
 13564  00028B                     	ds	15
 13565  00029A                     ringBufferLUT@channel_name:
 13566                           	opt stack 0
 13567                           
 13568                           ; 22 bytes @ 0x10
 13569  00029A                     	ds	22
 13570  0002B0                     ringBufferLUT@arg_buff:
 13571                           	opt stack 0
 13572                           
 13573                           ; 3 bytes @ 0x26
 13574  0002B0                     	ds	3
 13575  0002B3                     ringBufferLUT@angle_degrees:
 13576                           	opt stack 0
 13577                           
 13578                           ; 4 bytes @ 0x29
 13579  0002B3                     	ds	4
 13580  0002B7                     ringBufferLUT@max_current_print:
 13581                           	opt stack 0
 13582                           
 13583                           ; 4 bytes @ 0x2D
 13584  0002B7                     	ds	4
 13585  0002BB                     ringBufferLUT@max_Power_print:
 13586                           	opt stack 0
 13587                           
 13588                           ; 4 bytes @ 0x31
 13589  0002BB                     	ds	4
 13590  0002BF                     ringBufferLUT@max_voltage_print:
 13591                           	opt stack 0
 13592                           
 13593                           ; 4 bytes @ 0x35
 13594  0002BF                     	ds	4
 13595  0002C3                     ringBufferLUT@max_voltage_print_3616:
 13596                           	opt stack 0
 13597                           
 13598                           ; 4 bytes @ 0x39
 13599  0002C3                     	ds	4
 13600  0002C7                     ringBufferLUT@max_temp_print:
 13601                           	opt stack 0
 13602                           
 13603                           ; 4 bytes @ 0x3D
 13604  0002C7                     	ds	4
 13605  0002CB                     ringBufferLUT@max_voltage_print_3622:
 13606                           	opt stack 0
 13607                           
 13608                           ; 4 bytes @ 0x41
 13609  0002CB                     	ds	4
 13610  0002CF                     ringBufferLUT@index:
 13611                           	opt stack 0
 13612                           
 13613                           ; 2 bytes @ 0x45
 13614  0002CF                     	ds	2
 13615  0002D1                     ringBufferLUT@percentage:
 13616                           	opt stack 0
 13617                           
 13618                           ; 2 bytes @ 0x47
 13619  0002D1                     	ds	2
 13620  0002D3                     ringBufferLUT@userID:
 13621                           	opt stack 0
 13622                           
 13623                           ; 2 bytes @ 0x49
 13624  0002D3                     	ds	2
 13625  0002D5                     ??_main:
 13626                           
 13627                           ; 1 bytes @ 0x4B
 13628  0002D5                     	ds	2
 13629                           tblptru	equ	0xFF8
 13630                           tblptrh	equ	0xFF7
 13631                           tblptrl	equ	0xFF6
 13632                           tablat	equ	0xFF5
 13633                           postinc0	equ	0xFEE
 13634                           wreg	equ	0xFE8
 13635                           postdec1	equ	0xFE5
 13636                           fsr1h	equ	0xFE2
 13637                           fsr1l	equ	0xFE1
 13638                           
 13639                           	psect	cstackBANK1
 13640  000100                     __pcstackBANK1:
 13641                           	opt stack 0
 13642  000100                     ??_heartbeatTimerCallback:
 13643  000100                     ADCC_StartConversion@channel:
 13644                           	opt stack 0
 13645  000100                     TMR7_WriteTimer@timerVal:
 13646                           	opt stack 0
 13647                           
 13648                           ; 2 bytes @ 0x0
 13649  000100                     	ds	1
 13650  000101                     
 13651                           ; 1 bytes @ 0x1
 13652  000101                     	ds	1
 13653  000102                     ??_INTERRUPT_InterruptManagerLow:
 13654  000102                     
 13655                           ; 1 bytes @ 0x2
 13656  000102                     	ds	21
 13657  000117                     ??_isdigit:
 13658  000117                     ?_strlen:
 13659                           	opt stack 0
 13660  000117                     ?_strcmp:
 13661                           	opt stack 0
 13662  000117                     ?_getCauseOfResetString:
 13663                           	opt stack 0
 13664  000117                     ?_strchr:
 13665                           	opt stack 0
 13666  000117                     ?___wmul:
 13667                           	opt stack 0
 13668  000117                     ?___awmod:
 13669                           	opt stack 0
 13670  000117                     ?__tdiv_to_l_:
 13671                           	opt stack 0
 13672  000117                     ?__div_to_l_:
 13673                           	opt stack 0
 13674  000117                     ?___lldiv:
 13675                           	opt stack 0
 13676  000117                     ?___xxtofl:
 13677                           	opt stack 0
 13678  000117                     EUSART2_Read@readValue:
 13679                           	opt stack 0
 13680  000117                     EUSART2_Write@txData:
 13681                           	opt stack 0
 13682  000117                     getCauseOfReset@return_reset_cause:
 13683                           	opt stack 0
 13684  000117                     DATAEE_WriteByte@bAdd:
 13685                           	opt stack 0
 13686  000117                     DATAEE_ReadByte@bAdd:
 13687                           	opt stack 0
 13688  000117                     I2C1_MasterTRBInsert@ptrb_list:
 13689                           	opt stack 0
 13690  000117                     I2C1_MasterWriteTRBBuild@ptrb:
 13691                           	opt stack 0
 13692  000117                     ___wmul@multiplier:
 13693                           	opt stack 0
 13694  000117                     ___awmod@dividend:
 13695                           	opt stack 0
 13696  000117                     memmove@d1:
 13697                           	opt stack 0
 13698  000117                     strcat@to:
 13699                           	opt stack 0
 13700  000117                     strcmp@s1:
 13701                           	opt stack 0
 13702  000117                     strcpy@to:
 13703                           	opt stack 0
 13704  000117                     strlen@s:
 13705                           	opt stack 0
 13706  000117                     strncpy@to:
 13707                           	opt stack 0
 13708  000117                     strchr@ptr:
 13709                           	opt stack 0
 13710  000117                     TMR6_SetInterruptHandler@InterruptHandler:
 13711                           	opt stack 0
 13712  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
 13713                           	opt stack 0
 13714  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
 13715                           	opt stack 0
 13716  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
 13717                           	opt stack 0
 13718  000117                     TMR7_SetInterruptHandler@InterruptHandler:
 13719                           	opt stack 0
 13720  000117                     TMR5_SetInterruptHandler@InterruptHandler:
 13721                           	opt stack 0
 13722  000117                     INT0_SetInterruptHandler@InterruptHandler:
 13723                           	opt stack 0
 13724  000117                     TMR4_SetInterruptHandler@InterruptHandler:
 13725                           	opt stack 0
 13726  000117                     __tdiv_to_l_@f1:
 13727                           	opt stack 0
 13728  000117                     FLASH_ReadByte@flashAddr:
 13729                           	opt stack 0
 13730  000117                     __div_to_l_@f1:
 13731                           	opt stack 0
 13732  000117                     ___flge@ff1:
 13733                           	opt stack 0
 13734  000117                     ___lldiv@dividend:
 13735                           	opt stack 0
 13736  000117                     ___xxtofl@val:
 13737                           	opt stack 0
 13738                           
 13739                           ; 4 bytes @ 0x17
 13740  000117                     	ds	1
 13741  000118                     putch@txData:
 13742                           	opt stack 0
 13743  000118                     _isdigit$4252:
 13744                           	opt stack 0
 13745                           
 13746                           ; 1 bytes @ 0x18
 13747  000118                     	ds	1
 13748  000119                     ??_strlen:
 13749  000119                     ?_readDoubleFromEEPROM:
 13750                           	opt stack 0
 13751  000119                     DATAEE_WriteByte@bData:
 13752                           	opt stack 0
 13753  000119                     getCauseOfResetString@r:
 13754                           	opt stack 0
 13755  000119                     isdigit@c:
 13756                           	opt stack 0
 13757  000119                     I2C1_MasterTRBInsert@pflag:
 13758                           	opt stack 0
 13759  000119                     I2C1_MasterWriteTRBBuild@pdata:
 13760                           	opt stack 0
 13761  000119                     readDoubleFromEEPROM@starting_address:
 13762                           	opt stack 0
 13763  000119                     ___wmul@multiplicand:
 13764                           	opt stack 0
 13765  000119                     ___awmod@divisor:
 13766                           	opt stack 0
 13767  000119                     memmove@s1:
 13768                           	opt stack 0
 13769  000119                     strcat@from:
 13770                           	opt stack 0
 13771  000119                     strcmp@s2:
 13772                           	opt stack 0
 13773  000119                     strcpy@from:
 13774                           	opt stack 0
 13775  000119                     strncpy@from:
 13776                           	opt stack 0
 13777  000119                     strchr@chr:
 13778                           	opt stack 0
 13779                           
 13780                           ; 2 bytes @ 0x19
 13781  000119                     	ds	1
 13782  00011A                     ??_TMR7_Initialize:
 13783  00011A                     ??_TMR5_Initialize:
 13784  00011A                     DATAEE_WriteByte@GIEBitValue:
 13785                           	opt stack 0
 13786  00011A                     __tdiv_to_l_@f2:
 13787                           	opt stack 0
 13788                           
 13789                           ; 3 bytes @ 0x1A
 13790  00011A                     	ds	1
 13791  00011B                     ??_strcmp:
 13792  00011B                     ??___xxtofl:
 13793  00011B                     ?_FLASH_ReadWord:
 13794                           	opt stack 0
 13795  00011B                     I2C1_MasterWriteTRBBuild@length:
 13796                           	opt stack 0
 13797  00011B                     ___awmod@counter:
 13798                           	opt stack 0
 13799  00011B                     ___wmul@product:
 13800                           	opt stack 0
 13801  00011B                     memmove@n:
 13802                           	opt stack 0
 13803  00011B                     strcat@cp:
 13804                           	opt stack 0
 13805  00011B                     strcpy@cp:
 13806                           	opt stack 0
 13807  00011B                     strlen@cp:
 13808                           	opt stack 0
 13809  00011B                     strncpy@size:
 13810                           	opt stack 0
 13811  00011B                     FLASH_ReadWord@flashAddr:
 13812                           	opt stack 0
 13813  00011B                     writeDoubleToEEPROM@input_double:
 13814                           	opt stack 0
 13815  00011B                     __div_to_l_@f2:
 13816                           	opt stack 0
 13817  00011B                     ___flge@ff2:
 13818                           	opt stack 0
 13819  00011B                     ___lldiv@divisor:
 13820                           	opt stack 0
 13821                           
 13822                           ; 4 bytes @ 0x1B
 13823  00011B                     	ds	1
 13824  00011C                     I2C1_MasterTRBInsert@count:
 13825                           	opt stack 0
 13826  00011C                     ___awmod@sign:
 13827                           	opt stack 0
 13828  00011C                     strcmp@r:
 13829                           	opt stack 0
 13830  00011C                     I2C1_MasterWriteTRBBuild@address:
 13831                           	opt stack 0
 13832                           
 13833                           ; 2 bytes @ 0x1C
 13834  00011C                     	ds	1
 13835  00011D                     ??_memmove:
 13836  00011D                     ??__tdiv_to_l_:
 13837  00011D                     ?_atoi:
 13838                           	opt stack 0
 13839  00011D                     ?_strncmp:
 13840                           	opt stack 0
 13841  00011D                     ?___awdiv:
 13842                           	opt stack 0
 13843  00011D                     atoi@s:
 13844                           	opt stack 0
 13845  00011D                     ___awdiv@dividend:
 13846                           	opt stack 0
 13847  00011D                     strncpy@cp:
 13848                           	opt stack 0
 13849  00011D                     strncmp@s1:
 13850                           	opt stack 0
 13851  00011D                     readDoubleFromEEPROM@output_data:
 13852                           	opt stack 0
 13853                           
 13854                           ; 4 bytes @ 0x1D
 13855  00011D                     	ds	1
 13856  00011E                     ??_I2C1_MasterWriteTRBBuild:
 13857                           
 13858                           ; 1 bytes @ 0x1E
 13859  00011E                     	ds	1
 13860  00011F                     ??_atoi:
 13861  00011F                     ??_FLASH_ReadWord:
 13862  00011F                     ??___flge:
 13863  00011F                     ___xxtofl@sign:
 13864                           	opt stack 0
 13865  00011F                     writeDoubleToEEPROM@starting_address:
 13866                           	opt stack 0
 13867  00011F                     ___awdiv@divisor:
 13868                           	opt stack 0
 13869  00011F                     memmove@d:
 13870                           	opt stack 0
 13871  00011F                     strncmp@s2:
 13872                           	opt stack 0
 13873  00011F                     __div_to_l_@quot:
 13874                           	opt stack 0
 13875  00011F                     ___lldiv@quotient:
 13876                           	opt stack 0
 13877                           
 13878                           ; 4 bytes @ 0x1F
 13879  00011F                     	ds	1
 13880  000120                     ___xxtofl@exp:
 13881                           	opt stack 0
 13882  000120                     I2C1_MasterWrite@pdata:
 13883                           	opt stack 0
 13884  000120                     __tdiv_to_l_@quot:
 13885                           	opt stack 0
 13886                           
 13887                           ; 4 bytes @ 0x20
 13888  000120                     	ds	1
 13889  000121                     atoi@sign:
 13890                           	opt stack 0
 13891  000121                     ___awdiv@counter:
 13892                           	opt stack 0
 13893  000121                     readDoubleFromEEPROM@byte_index:
 13894                           	opt stack 0
 13895  000121                     memmove@s:
 13896                           	opt stack 0
 13897  000121                     strncmp@len:
 13898                           	opt stack 0
 13899  000121                     writeDoubleToEEPROM@input_data:
 13900                           	opt stack 0
 13901  000121                     ___xxtofl@arg:
 13902                           	opt stack 0
 13903                           
 13904                           ; 4 bytes @ 0x21
 13905  000121                     	ds	1
 13906  000122                     ??_getMajorRevisionID:
 13907  000122                     ?_getDeviceID:
 13908                           	opt stack 0
 13909  000122                     ?_getUserID:
 13910                           	opt stack 0
 13911  000122                     I2C1_MasterWrite@length:
 13912                           	opt stack 0
 13913  000122                     ___awdiv@sign:
 13914                           	opt stack 0
 13915  000122                     getMinorRevisionID@REVID_RAW:
 13916                           	opt stack 0
 13917  000122                     atoi@a:
 13918                           	opt stack 0
 13919                           
 13920                           ; 2 bytes @ 0x22
 13921  000122                     	ds	1
 13922  000123                     ??_strncmp:
 13923  000123                     __div_to_l_@cntr:
 13924                           	opt stack 0
 13925  000123                     ___lldiv@counter:
 13926                           	opt stack 0
 13927  000123                     I2C1_MasterWrite@address:
 13928                           	opt stack 0
 13929  000123                     ___awdiv@quotient:
 13930                           	opt stack 0
 13931                           
 13932                           ; 2 bytes @ 0x23
 13933  000123                     	ds	1
 13934  000124                     ?_getDeviceIDString:
 13935                           	opt stack 0
 13936  000124                     ?___llmod:
 13937                           	opt stack 0
 13938  000124                     __div_to_l_@exp1:
 13939                           	opt stack 0
 13940  000124                     __tdiv_to_l_@cntr:
 13941                           	opt stack 0
 13942  000124                     getDeviceIDString@inputDevID:
 13943                           	opt stack 0
 13944  000124                     getUserID@initialOffset:
 13945                           	opt stack 0
 13946  000124                     ___llmod@dividend:
 13947                           	opt stack 0
 13948                           
 13949                           ; 4 bytes @ 0x24
 13950  000124                     	ds	1
 13951  000125                     ?___flneg:
 13952                           	opt stack 0
 13953  000125                     __tdiv_to_l_@exp1:
 13954                           	opt stack 0
 13955  000125                     I2C1_MasterWrite@pflag:
 13956                           	opt stack 0
 13957  000125                     getMajorRevisionID@REVID_RAW:
 13958                           	opt stack 0
 13959  000125                     writeDoubleToEEPROM@byte_index:
 13960                           	opt stack 0
 13961  000125                     ___flneg@f1:
 13962                           	opt stack 0
 13963                           
 13964                           ; 4 bytes @ 0x25
 13965  000125                     	ds	1
 13966  000126                     ??_getDeviceIDString:
 13967  000126                     ?_strstr:
 13968                           	opt stack 0
 13969  000126                     strstr@s1:
 13970                           	opt stack 0
 13971                           
 13972                           ; 2 bytes @ 0x26
 13973  000126                     	ds	1
 13974  000127                     ??_OLED_PutChar:
 13975  000127                     OLED_Command@temp:
 13976                           	opt stack 0
 13977                           
 13978                           ; 1 bytes @ 0x27
 13979  000127                     	ds	1
 13980  000128                     getUserID@inputUserID:
 13981                           	opt stack 0
 13982  000128                     OLED_Command@length:
 13983                           	opt stack 0
 13984  000128                     strstr@s2:
 13985                           	opt stack 0
 13986  000128                     ___llmod@divisor:
 13987                           	opt stack 0
 13988  000128                     getDeviceIDString@strings:
 13989                           	opt stack 0
 13990                           
 13991                           ; 6 bytes @ 0x28
 13992  000128                     	ds	1
 13993  000129                     ?___fladd:
 13994                           	opt stack 0
 13995  000129                     getUserID@IDOffset:
 13996                           	opt stack 0
 13997  000129                     OLED_Command@timeout:
 13998                           	opt stack 0
 13999  000129                     ___fladd@b:
 14000                           	opt stack 0
 14001                           
 14002                           ; 4 bytes @ 0x29
 14003  000129                     	ds	1
 14004  00012A                     
 14005                           ; 1 bytes @ 0x2A
 14006  00012A                     	ds	1
 14007  00012B                     OLED_Command@data_array:
 14008                           	opt stack 0
 14009  00012B                     OLED_PutChar@data_array:
 14010                           	opt stack 0
 14011                           
 14012                           ; 9 bytes @ 0x2B
 14013  00012B                     	ds	1
 14014  00012C                     ___llmod@counter:
 14015                           	opt stack 0
 14016                           
 14017                           ; 1 bytes @ 0x2C
 14018  00012C                     	ds	1
 14019  00012D                     OLED_YX@Column:
 14020                           	opt stack 0
 14021  00012D                     ___fladd@a:
 14022                           	opt stack 0
 14023                           
 14024                           ; 4 bytes @ 0x2D
 14025  00012D                     	ds	1
 14026  00012E                     ??_OLED_YX:
 14027                           
 14028                           ; 1 bytes @ 0x2E
 14029  00012E                     	ds	1
 14030  00012F                     OLED_YX@Row:
 14031                           	opt stack 0
 14032                           
 14033                           ; 1 bytes @ 0x2F
 14034  00012F                     	ds	2
 14035  000131                     ??___fladd:
 14036                           
 14037                           ; 1 bytes @ 0x31
 14038  000131                     	ds	3
 14039  000134                     OLED_PutChar@input_base:
 14040                           	opt stack 0
 14041                           
 14042                           ; 2 bytes @ 0x34
 14043  000134                     	ds	2
 14044  000136                     OLED_PutChar@length:
 14045                           	opt stack 0
 14046                           
 14047                           ; 1 bytes @ 0x36
 14048  000136                     	ds	1
 14049  000137                     OLED_PutChar@timeout:
 14050                           	opt stack 0
 14051                           
 14052                           ; 2 bytes @ 0x37
 14053  000137                     	ds	2
 14054  000139                     OLED_PutChar@ch:
 14055                           	opt stack 0
 14056  000139                     ___fladd@signs:
 14057                           	opt stack 0
 14058                           
 14059                           ; 1 bytes @ 0x39
 14060  000139                     	ds	1
 14061  00013A                     ___fladd@aexp:
 14062                           	opt stack 0
 14063  00013A                     OLED_Clear@row:
 14064                           	opt stack 0
 14065  00013A                     OLED_Write_String@s:
 14066                           	opt stack 0
 14067                           
 14068                           ; 2 bytes @ 0x3A
 14069  00013A                     	ds	1
 14070  00013B                     ___fladd@bexp:
 14071                           	opt stack 0
 14072                           
 14073                           ; 1 bytes @ 0x3B
 14074  00013B                     	ds	1
 14075  00013C                     ___fladd@grs:
 14076                           	opt stack 0
 14077  00013C                     OLED_Clear@col:
 14078                           	opt stack 0
 14079                           
 14080                           ; 2 bytes @ 0x3C
 14081  00013C                     	ds	1
 14082  00013D                     ?___fldiv:
 14083                           	opt stack 0
 14084  00013D                     ?___flsub:
 14085                           	opt stack 0
 14086  00013D                     ___flsub@b:
 14087                           	opt stack 0
 14088  00013D                     ___fldiv@b:
 14089                           	opt stack 0
 14090                           
 14091                           ; 4 bytes @ 0x3D
 14092  00013D                     	ds	4
 14093  000141                     ___flsub@a:
 14094                           	opt stack 0
 14095  000141                     ___fldiv@a:
 14096                           	opt stack 0
 14097                           
 14098                           ; 4 bytes @ 0x41
 14099  000141                     	ds	4
 14100  000145                     ??___fldiv:
 14101  000145                     
 14102                           ; 1 bytes @ 0x45
 14103  000145                     	ds	4
 14104  000149                     ___fldiv@sign:
 14105                           	opt stack 0
 14106                           
 14107                           ; 1 bytes @ 0x49
 14108  000149                     	ds	1
 14109  00014A                     ___fldiv@rem:
 14110                           	opt stack 0
 14111                           
 14112                           ; 4 bytes @ 0x4A
 14113  00014A                     	ds	4
 14114  00014E                     ___fldiv@new_exp:
 14115                           	opt stack 0
 14116                           
 14117                           ; 2 bytes @ 0x4E
 14118  00014E                     	ds	2
 14119  000150                     ___fldiv@grs:
 14120                           	opt stack 0
 14121                           
 14122                           ; 4 bytes @ 0x50
 14123  000150                     	ds	4
 14124  000154                     ___fldiv@bexp:
 14125                           	opt stack 0
 14126                           
 14127                           ; 1 bytes @ 0x54
 14128  000154                     	ds	1
 14129  000155                     ___fldiv@aexp:
 14130                           	opt stack 0
 14131                           
 14132                           ; 1 bytes @ 0x55
 14133  000155                     	ds	1
 14134  000156                     ?___flmul:
 14135                           	opt stack 0
 14136  000156                     ___flmul@b:
 14137                           	opt stack 0
 14138                           
 14139                           ; 4 bytes @ 0x56
 14140  000156                     	ds	4
 14141  00015A                     ___flmul@a:
 14142                           	opt stack 0
 14143                           
 14144                           ; 4 bytes @ 0x5A
 14145  00015A                     	ds	4
 14146  00015E                     ??___flmul:
 14147                           
 14148                           ; 1 bytes @ 0x5E
 14149  00015E                     	ds	4
 14150  000162                     ___flmul@sign:
 14151                           	opt stack 0
 14152                           
 14153                           ; 1 bytes @ 0x62
 14154  000162                     	ds	1
 14155  000163                     ___flmul@aexp:
 14156                           	opt stack 0
 14157                           
 14158                           ; 1 bytes @ 0x63
 14159  000163                     	ds	1
 14160  000164                     ___flmul@grs:
 14161                           	opt stack 0
 14162                           
 14163                           ; 4 bytes @ 0x64
 14164  000164                     	ds	4
 14165  000168                     ___flmul@bexp:
 14166                           	opt stack 0
 14167                           
 14168                           ; 1 bytes @ 0x68
 14169  000168                     	ds	1
 14170  000169                     ___flmul@prod:
 14171                           	opt stack 0
 14172                           
 14173                           ; 4 bytes @ 0x69
 14174  000169                     	ds	4
 14175  00016D                     ___flmul@temp:
 14176                           	opt stack 0
 14177                           
 14178                           ; 2 bytes @ 0x6D
 14179  00016D                     	ds	2
 14180  00016F                     ?_fround:
 14181                           	opt stack 0
 14182  00016F                     ?_scale:
 14183                           	opt stack 0
 14184                           
 14185                           ; 4 bytes @ 0x6F
 14186  00016F                     	ds	4
 14187  000173                     _fround$5107:
 14188                           	opt stack 0
 14189  000173                     _scale$5108:
 14190                           	opt stack 0
 14191                           
 14192                           ; 4 bytes @ 0x73
 14193  000173                     	ds	4
 14194  000177                     scale@scl:
 14195                           	opt stack 0
 14196  000177                     _fround$5106:
 14197                           	opt stack 0
 14198                           
 14199                           ; 4 bytes @ 0x77
 14200  000177                     	ds	1
 14201  000178                     ?___fltol:
 14202                           	opt stack 0
 14203  000178                     ___fltol@f1:
 14204                           	opt stack 0
 14205                           
 14206                           ; 4 bytes @ 0x78
 14207  000178                     	ds	3
 14208  00017B                     fround@prec:
 14209                           	opt stack 0
 14210                           
 14211                           ; 1 bytes @ 0x7B
 14212  00017B                     	ds	1
 14213  00017C                     ??___fltol:
 14214                           
 14215                           ; 1 bytes @ 0x7C
 14216  00017C                     	ds	4
 14217  000180                     ___fltol@sign1:
 14218                           	opt stack 0
 14219                           
 14220                           ; 1 bytes @ 0x80
 14221  000180                     	ds	1
 14222  000181                     ___fltol@exp1:
 14223                           	opt stack 0
 14224                           
 14225                           ; 1 bytes @ 0x81
 14226  000181                     	ds	1
 14227  000182                     ?__doprnt:
 14228                           	opt stack 0
 14229  000182                     __doprnt@pb:
 14230                           	opt stack 0
 14231                           
 14232                           ; 2 bytes @ 0x82
 14233  000182                     	ds	2
 14234  000184                     __doprnt@f:
 14235                           	opt stack 0
 14236                           
 14237                           ; 2 bytes @ 0x84
 14238  000184                     	ds	2
 14239  000186                     __doprnt@ap:
 14240                           	opt stack 0
 14241                           
 14242                           ; 2 bytes @ 0x86
 14243  000186                     	ds	2
 14244  000188                     ??__doprnt:
 14245                           
 14246                           ; 1 bytes @ 0x88
 14247  000188                     	ds	6
 14248  00018E                     __doprnt$5109:
 14249                           	opt stack 0
 14250                           
 14251                           ; 4 bytes @ 0x8E
 14252  00018E                     	ds	4
 14253  000192                     __doprnt@idx:
 14254                           	opt stack 0
 14255                           
 14256                           ; 1 bytes @ 0x92
 14257  000192                     	ds	1
 14258  000193                     __doprnt@cp:
 14259                           	opt stack 0
 14260                           
 14261                           ; 2 bytes @ 0x93
 14262  000193                     	ds	2
 14263  000195                     __doprnt@len:
 14264                           	opt stack 0
 14265                           
 14266                           ; 2 bytes @ 0x95
 14267  000195                     	ds	2
 14268  000197                     __doprnt@exp:
 14269                           	opt stack 0
 14270                           
 14271                           ; 2 bytes @ 0x97
 14272  000197                     	ds	2
 14273  000199                     __doprnt@tmpval:
 14274                           	opt stack 0
 14275                           
 14276                           ; 4 bytes @ 0x99
 14277  000199                     	ds	4
 14278  00019D                     __doprnt@fval:
 14279                           	opt stack 0
 14280                           
 14281                           ; 4 bytes @ 0x9D
 14282  00019D                     	ds	4
 14283  0001A1                     __doprnt@val:
 14284                           	opt stack 0
 14285                           
 14286                           ; 4 bytes @ 0xA1
 14287  0001A1                     	ds	4
 14288  0001A5                     __doprnt@width:
 14289                           	opt stack 0
 14290                           
 14291                           ; 2 bytes @ 0xA5
 14292  0001A5                     	ds	2
 14293  0001A7                     __doprnt@flag:
 14294                           	opt stack 0
 14295                           
 14296                           ; 2 bytes @ 0xA7
 14297  0001A7                     	ds	2
 14298  0001A9                     __doprnt@prec:
 14299                           	opt stack 0
 14300                           
 14301                           ; 2 bytes @ 0xA9
 14302  0001A9                     	ds	2
 14303  0001AB                     __doprnt@c:
 14304                           	opt stack 0
 14305                           
 14306                           ; 1 bytes @ 0xAB
 14307  0001AB                     	ds	1
 14308  0001AC                     ?_printf:
 14309                           	opt stack 0
 14310  0001AC                     printf@f:
 14311                           	opt stack 0
 14312                           
 14313                           ; 2 bytes @ 0xAC
 14314  0001AC                     	ds	10
 14315  0001B6                     printf@ap:
 14316                           	opt stack 0
 14317                           
 14318                           ; 2 bytes @ 0xB6
 14319  0001B6                     	ds	2
 14320  0001B8                     printf@pb:
 14321                           	opt stack 0
 14322                           
 14323                           ; 5 bytes @ 0xB8
 14324  0001B8                     	ds	5
 14325  0001BD                     terminal_textAttributes@background_color:
 14326                           	opt stack 0
 14327                           
 14328                           ; 1 bytes @ 0xBD
 14329  0001BD                     	ds	1
 14330  0001BE                     terminal_textAttributes@input_attribute:
 14331                           	opt stack 0
 14332                           
 14333                           ; 1 bytes @ 0xBE
 14334  0001BE                     	ds	1
 14335  0001BF                     ringBufferLUT@line:
 14336                           	opt stack 0
 14337                           
 14338                           ; 2 bytes @ 0xBF
 14339  0001BF                     	ds	2
 14340  0001C1                     ??_ringBufferLUT:
 14341                           
 14342                           ; 1 bytes @ 0xC1
 14343  0001C1                     	ds	2
 14344  0001C3                     ??_terminal_ringBufferPull:
 14345                           
 14346                           ; 1 bytes @ 0xC3
 14347  0001C3                     	ds	3
 14348                           tblptru	equ	0xFF8
 14349                           tblptrh	equ	0xFF7
 14350                           tblptrl	equ	0xFF6
 14351                           tablat	equ	0xFF5
 14352                           postinc0	equ	0xFEE
 14353                           wreg	equ	0xFE8
 14354                           postdec1	equ	0xFE5
 14355                           fsr1h	equ	0xFE2
 14356                           fsr1l	equ	0xFE1
 14357                           
 14358                           	psect	cstackBANK0
 14359  000060                     __pcstackBANK0:
 14360                           	opt stack 0
 14361  000060                     ??i2___fladd:
 14362                           
 14363                           ; 1 bytes @ 0x0
 14364  000060                     	ds	8
 14365  000068                     i2___fladd@signs:
 14366                           	opt stack 0
 14367                           
 14368                           ; 1 bytes @ 0x8
 14369  000068                     	ds	1
 14370  000069                     i2___fladd@aexp:
 14371                           	opt stack 0
 14372                           
 14373                           ; 1 bytes @ 0x9
 14374  000069                     	ds	1
 14375  00006A                     i2___fladd@bexp:
 14376                           	opt stack 0
 14377                           
 14378                           ; 1 bytes @ 0xA
 14379  00006A                     	ds	1
 14380  00006B                     i2___fladd@grs:
 14381                           	opt stack 0
 14382                           
 14383                           ; 1 bytes @ 0xB
 14384  00006B                     	ds	1
 14385  00006C                     ?_sqrt:
 14386                           	opt stack 0
 14387  00006C                     ?_eval_poly:
 14388                           	opt stack 0
 14389  00006C                     ?i2___fltol:
 14390                           	opt stack 0
 14391  00006C                     eval_poly@x:
 14392                           	opt stack 0
 14393  00006C                     sqrt@a:
 14394                           	opt stack 0
 14395  00006C                     i2___fltol@f1:
 14396                           	opt stack 0
 14397                           
 14398                           ; 4 bytes @ 0xC
 14399  00006C                     	ds	4
 14400  000070                     ??_sqrt:
 14401  000070                     ??i2___fltol:
 14402  000070                     eval_poly@d:
 14403                           	opt stack 0
 14404                           
 14405                           ; 2 bytes @ 0x10
 14406  000070                     	ds	2
 14407  000072                     eval_poly@n:
 14408                           	opt stack 0
 14409                           
 14410                           ; 2 bytes @ 0x12
 14411  000072                     	ds	2
 14412  000074                     ??_eval_poly:
 14413  000074                     sqrt@sign:
 14414                           	opt stack 0
 14415  000074                     i2___fltol@sign1:
 14416                           	opt stack 0
 14417                           
 14418                           ; 1 bytes @ 0x14
 14419  000074                     	ds	1
 14420  000075                     sqrt@i:
 14421                           	opt stack 0
 14422  000075                     i2___fltol@exp1:
 14423                           	opt stack 0
 14424                           
 14425                           ; 1 bytes @ 0x15
 14426  000075                     	ds	1
 14427  000076                     ?_abs:
 14428                           	opt stack 0
 14429  000076                     ?_floor:
 14430                           	opt stack 0
 14431  000076                     abs@a:
 14432                           	opt stack 0
 14433  000076                     sqrt@tfrac:
 14434                           	opt stack 0
 14435  000076                     floor@x:
 14436                           	opt stack 0
 14437                           
 14438                           ; 4 bytes @ 0x16
 14439  000076                     	ds	2
 14440  000078                     ??_abs:
 14441  000078                     eval_poly@res:
 14442                           	opt stack 0
 14443                           
 14444                           ; 4 bytes @ 0x18
 14445  000078                     	ds	2
 14446  00007A                     sqrt@p:
 14447                           	opt stack 0
 14448  00007A                     floor@i:
 14449                           	opt stack 0
 14450                           
 14451                           ; 4 bytes @ 0x1A
 14452  00007A                     	ds	1
 14453  00007B                     sqrt@grs:
 14454                           	opt stack 0
 14455                           
 14456                           ; 4 bytes @ 0x1B
 14457  00007B                     	ds	1
 14458  00007C                     ?_atan:
 14459                           	opt stack 0
 14460  00007C                     atan@f:
 14461                           	opt stack 0
 14462                           
 14463                           ; 4 bytes @ 0x1C
 14464  00007C                     	ds	2
 14465  00007E                     floor@expon:
 14466                           	opt stack 0
 14467                           
 14468                           ; 2 bytes @ 0x1E
 14469  00007E                     	ds	1
 14470  00007F                     sqrt@exp:
 14471                           	opt stack 0
 14472                           
 14473                           ; 2 bytes @ 0x1F
 14474  00007F                     	ds	1
 14475  000080                     ?i2___flsub:
 14476                           	opt stack 0
 14477  000080                     atan@y:
 14478                           	opt stack 0
 14479  000080                     i2___flsub@b:
 14480                           	opt stack 0
 14481                           
 14482                           ; 4 bytes @ 0x20
 14483  000080                     	ds	1
 14484  000081                     sqrt@root:
 14485                           	opt stack 0
 14486                           
 14487                           ; 4 bytes @ 0x21
 14488  000081                     	ds	3
 14489  000084                     atan@x:
 14490                           	opt stack 0
 14491  000084                     i2___flsub@a:
 14492                           	opt stack 0
 14493                           
 14494                           ; 4 bytes @ 0x24
 14495  000084                     	ds	1
 14496  000085                     sqrt@frac:
 14497                           	opt stack 0
 14498                           
 14499                           ; 4 bytes @ 0x25
 14500  000085                     	ds	3
 14501  000088                     ?i2__doprnt:
 14502                           	opt stack 0
 14503  000088                     ?_sin:
 14504                           	opt stack 0
 14505  000088                     atan@recip:
 14506                           	opt stack 0
 14507  000088                     i2__doprnt@pb:
 14508                           	opt stack 0
 14509  000088                     sin@f:
 14510                           	opt stack 0
 14511                           
 14512                           ; 4 bytes @ 0x28
 14513  000088                     	ds	1
 14514  000089                     atan@val_squared:
 14515                           	opt stack 0
 14516                           
 14517                           ; 4 bytes @ 0x29
 14518  000089                     	ds	1
 14519  00008A                     i2__doprnt@f:
 14520                           	opt stack 0
 14521                           
 14522                           ; 2 bytes @ 0x2A
 14523  00008A                     	ds	2
 14524  00008C                     i2__doprnt@ap:
 14525                           	opt stack 0
 14526  00008C                     sin@y:
 14527                           	opt stack 0
 14528                           
 14529                           ; 4 bytes @ 0x2C
 14530  00008C                     	ds	1
 14531  00008D                     atan@val:
 14532                           	opt stack 0
 14533                           
 14534                           ; 4 bytes @ 0x2D
 14535  00008D                     	ds	1
 14536  00008E                     ??i2__doprnt:
 14537                           
 14538                           ; 1 bytes @ 0x2E
 14539  00008E                     	ds	2
 14540  000090                     _sin$5353:
 14541                           	opt stack 0
 14542                           
 14543                           ; 4 bytes @ 0x30
 14544  000090                     	ds	1
 14545  000091                     ?_asin:
 14546                           	opt stack 0
 14547  000091                     asin@x:
 14548                           	opt stack 0
 14549                           
 14550                           ; 4 bytes @ 0x31
 14551  000091                     	ds	3
 14552  000094                     sin@x2:
 14553                           	opt stack 0
 14554  000094                     i2__doprnt$5357:
 14555                           	opt stack 0
 14556                           
 14557                           ; 4 bytes @ 0x34
 14558  000094                     	ds	1
 14559  000095                     asin@sgn:
 14560                           	opt stack 0
 14561                           
 14562                           ; 4 bytes @ 0x35
 14563  000095                     	ds	3
 14564  000098                     sin@sgn:
 14565                           	opt stack 0
 14566  000098                     i2__doprnt@idx:
 14567                           	opt stack 0
 14568                           
 14569                           ; 1 bytes @ 0x38
 14570  000098                     	ds	1
 14571  000099                     ?_currentMeasuredToPeak:
 14572                           	opt stack 0
 14573  000099                     i2__doprnt@cp:
 14574                           	opt stack 0
 14575  000099                     currentMeasuredToPeak@Measured:
 14576                           	opt stack 0
 14577  000099                     _asin$5352:
 14578                           	opt stack 0
 14579                           
 14580                           ; 4 bytes @ 0x39
 14581  000099                     	ds	2
 14582  00009B                     i2__doprnt@len:
 14583                           	opt stack 0
 14584                           
 14585                           ; 2 bytes @ 0x3B
 14586  00009B                     	ds	2
 14587  00009D                     i2__doprnt@exp:
 14588                           	opt stack 0
 14589  00009D                     currentMeasuredToPeak@Angle:
 14590                           	opt stack 0
 14591  00009D                     _asin$5351:
 14592                           	opt stack 0
 14593                           
 14594                           ; 4 bytes @ 0x3D
 14595  00009D                     	ds	2
 14596  00009F                     i2__doprnt@tmpval:
 14597                           	opt stack 0
 14598                           
 14599                           ; 4 bytes @ 0x3F
 14600  00009F                     	ds	2
 14601  0000A1                     currentMeasuredToPeak@Peak:
 14602                           	opt stack 0
 14603  0000A1                     asin@y:
 14604                           	opt stack 0
 14605                           
 14606                           ; 4 bytes @ 0x41
 14607  0000A1                     	ds	2
 14608  0000A3                     i2__doprnt@fval:
 14609                           	opt stack 0
 14610                           
 14611                           ; 4 bytes @ 0x43
 14612  0000A3                     	ds	2
 14613  0000A5                     _asin$5350:
 14614                           	opt stack 0
 14615                           
 14616                           ; 4 bytes @ 0x45
 14617  0000A5                     	ds	2
 14618  0000A7                     i2__doprnt@val:
 14619                           	opt stack 0
 14620                           
 14621                           ; 4 bytes @ 0x47
 14622  0000A7                     	ds	2
 14623  0000A9                     ?_acos:
 14624                           	opt stack 0
 14625  0000A9                     acos@x:
 14626                           	opt stack 0
 14627                           
 14628                           ; 4 bytes @ 0x49
 14629  0000A9                     	ds	2
 14630  0000AB                     i2__doprnt@width:
 14631                           	opt stack 0
 14632                           
 14633                           ; 2 bytes @ 0x4B
 14634  0000AB                     	ds	2
 14635  0000AD                     i2__doprnt@flag:
 14636                           	opt stack 0
 14637  0000AD                     _acos$5349:
 14638                           	opt stack 0
 14639                           
 14640                           ; 4 bytes @ 0x4D
 14641  0000AD                     	ds	2
 14642  0000AF                     i2__doprnt@prec:
 14643                           	opt stack 0
 14644                           
 14645                           ; 2 bytes @ 0x4F
 14646  0000AF                     	ds	2
 14647  0000B1                     ?_peakToRMS:
 14648                           	opt stack 0
 14649  0000B1                     i2__doprnt@c:
 14650                           	opt stack 0
 14651  0000B1                     peakToRMS@Peak:
 14652                           	opt stack 0
 14653                           
 14654                           ; 4 bytes @ 0x51
 14655  0000B1                     	ds	1
 14656  0000B2                     ?i2_printf:
 14657                           	opt stack 0
 14658  0000B2                     i2printf@f:
 14659                           	opt stack 0
 14660                           
 14661                           ; 2 bytes @ 0x52
 14662  0000B2                     	ds	2
 14663  0000B4                     i2printf@ap:
 14664                           	opt stack 0
 14665                           
 14666                           ; 2 bytes @ 0x54
 14667  0000B4                     	ds	1
 14668  0000B5                     peakToRMS@Angle:
 14669                           	opt stack 0
 14670                           
 14671                           ; 4 bytes @ 0x55
 14672  0000B5                     	ds	1
 14673  0000B6                     i2printf@pb:
 14674                           	opt stack 0
 14675                           
 14676                           ; 5 bytes @ 0x56
 14677  0000B6                     	ds	3
 14678  0000B9                     _peakToRMS$5342:
 14679                           	opt stack 0
 14680                           
 14681                           ; 4 bytes @ 0x59
 14682  0000B9                     	ds	4
 14683  0000BD                     _peakToRMS$5343:
 14684                           	opt stack 0
 14685                           
 14686                           ; 4 bytes @ 0x5D
 14687  0000BD                     	ds	4
 14688  0000C1                     _peakToRMS$5341:
 14689                           	opt stack 0
 14690                           
 14691                           ; 4 bytes @ 0x61
 14692  0000C1                     	ds	4
 14693  0000C5                     peakToRMS@RMS:
 14694                           	opt stack 0
 14695                           
 14696                           ; 4 bytes @ 0x65
 14697  0000C5                     	ds	4
 14698  0000C9                     _ADCPostProcessingCallback$5346:
 14699                           	opt stack 0
 14700                           
 14701                           ; 4 bytes @ 0x69
 14702  0000C9                     	ds	4
 14703  0000CD                     _ADCPostProcessingCallback$5347:
 14704                           	opt stack 0
 14705                           
 14706                           ; 4 bytes @ 0x6D
 14707  0000CD                     	ds	4
 14708  0000D1                     _ADCPostProcessingCallback$5348:
 14709                           	opt stack 0
 14710                           
 14711                           ; 4 bytes @ 0x71
 14712  0000D1                     	ds	4
 14713  0000D5                     ADCPostProcessingCallback@current_adc_channel:
 14714                           	opt stack 0
 14715                           
 14716                           ; 1 bytes @ 0x75
 14717  0000D5                     	ds	1
 14718  0000D6                     _ADCPostProcessingCallback$5344:
 14719                           	opt stack 0
 14720                           
 14721                           ; 4 bytes @ 0x76
 14722  0000D6                     	ds	4
 14723  0000DA                     _ADCPostProcessingCallback$5345:
 14724                           	opt stack 0
 14725                           
 14726                           ; 4 bytes @ 0x7A
 14727  0000DA                     	ds	4
 14728  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
 14729                           
 14730                           ; 1 bytes @ 0x7E
 14731  0000DE                     	ds	18
 14732                           tblptru	equ	0xFF8
 14733                           tblptrh	equ	0xFF7
 14734                           tblptrl	equ	0xFF6
 14735                           tablat	equ	0xFF5
 14736                           postinc0	equ	0xFEE
 14737                           wreg	equ	0xFE8
 14738                           postdec1	equ	0xFE5
 14739                           fsr1h	equ	0xFE2
 14740                           fsr1l	equ	0xFE1
 14741                           
 14742                           	psect	cstackCOMRAM
 14743  000001                     __pcstackCOMRAM:
 14744                           	opt stack 0
 14745  000001                     ??_I2C1_Stop:
 14746  000001                     ??i2_isdigit:
 14747  000001                     ?_ADCC_GetConversionResult:
 14748                           	opt stack 0
 14749  000001                     ?_ADCC_GetFilterValue:
 14750                           	opt stack 0
 14751  000001                     ?i2___wmul:
 14752                           	opt stack 0
 14753  000001                     ?i2___awmod:
 14754                           	opt stack 0
 14755  000001                     ?i2__div_to_l_:
 14756                           	opt stack 0
 14757  000001                     ?i2__tdiv_to_l_:
 14758                           	opt stack 0
 14759  000001                     ?i2___lldiv:
 14760                           	opt stack 0
 14761  000001                     i2EUSART2_Write@txData:
 14762                           	opt stack 0
 14763  000001                     TMR5_WriteTimer@timerVal:
 14764                           	opt stack 0
 14765  000001                     i2DATAEE_WriteByte@bAdd:
 14766                           	opt stack 0
 14767  000001                     i2DATAEE_ReadByte@bAdd:
 14768                           	opt stack 0
 14769  000001                     i2___wmul@multiplier:
 14770                           	opt stack 0
 14771  000001                     i2___awmod@dividend:
 14772                           	opt stack 0
 14773  000001                     i2__tdiv_to_l_@f1:
 14774                           	opt stack 0
 14775  000001                     frexp@value:
 14776                           	opt stack 0
 14777  000001                     i2__div_to_l_@f1:
 14778                           	opt stack 0
 14779  000001                     i2___lldiv@dividend:
 14780                           	opt stack 0
 14781                           
 14782                           ; 4 bytes @ 0x0
 14783  000001                     	ds	1
 14784  000002                     i2putch@txData:
 14785                           	opt stack 0
 14786  000002                     i2_isdigit$4252:
 14787                           	opt stack 0
 14788                           
 14789                           ; 1 bytes @ 0x1
 14790  000002                     	ds	1
 14791  000003                     ??_ADCC_GetConversionResult:
 14792  000003                     ??_ADCC_GetFilterValue:
 14793  000003                     ?i2_readDoubleFromEEPROM:
 14794                           	opt stack 0
 14795  000003                     I2C1_Stop@completion_code:
 14796                           	opt stack 0
 14797  000003                     i2DATAEE_WriteByte@bData:
 14798                           	opt stack 0
 14799  000003                     i2isdigit@c:
 14800                           	opt stack 0
 14801  000003                     i2readDoubleFromEEPROM@starting_address:
 14802                           	opt stack 0
 14803  000003                     i2___wmul@multiplicand:
 14804                           	opt stack 0
 14805  000003                     i2___awmod@divisor:
 14806                           	opt stack 0
 14807                           
 14808                           ; 2 bytes @ 0x2
 14809  000003                     	ds	1
 14810  000004                     ??_I2C1_ISR:
 14811  000004                     i2DATAEE_WriteByte@GIEBitValue:
 14812                           	opt stack 0
 14813  000004                     i2__tdiv_to_l_@f2:
 14814                           	opt stack 0
 14815                           
 14816                           ; 3 bytes @ 0x3
 14817  000004                     	ds	1
 14818  000005                     ?i2___xxtofl:
 14819                           	opt stack 0
 14820  000005                     i2___awmod@counter:
 14821                           	opt stack 0
 14822  000005                     frexp@eptr:
 14823                           	opt stack 0
 14824  000005                     i2___wmul@product:
 14825                           	opt stack 0
 14826  000005                     i2writeDoubleToEEPROM@input_double:
 14827                           	opt stack 0
 14828  000005                     i2__div_to_l_@f2:
 14829                           	opt stack 0
 14830  000005                     i2___lldiv@divisor:
 14831                           	opt stack 0
 14832  000005                     i2___xxtofl@val:
 14833                           	opt stack 0
 14834                           
 14835                           ; 4 bytes @ 0x4
 14836  000005                     	ds	1
 14837  000006                     i2___awmod@sign:
 14838                           	opt stack 0
 14839                           
 14840                           ; 1 bytes @ 0x5
 14841  000006                     	ds	1
 14842  000007                     ??_frexp:
 14843  000007                     ??i2__tdiv_to_l_:
 14844  000007                     ?i2___awdiv:
 14845                           	opt stack 0
 14846  000007                     i2___awdiv@dividend:
 14847                           	opt stack 0
 14848  000007                     i2readDoubleFromEEPROM@output_data:
 14849                           	opt stack 0
 14850                           
 14851                           ; 4 bytes @ 0x6
 14852  000007                     	ds	2
 14853  000009                     ??i2___xxtofl:
 14854  000009                     i2writeDoubleToEEPROM@starting_address:
 14855                           	opt stack 0
 14856  000009                     i2___awdiv@divisor:
 14857                           	opt stack 0
 14858  000009                     i2__div_to_l_@quot:
 14859                           	opt stack 0
 14860  000009                     i2___lldiv@quotient:
 14861                           	opt stack 0
 14862                           
 14863                           ; 4 bytes @ 0x8
 14864  000009                     	ds	1
 14865  00000A                     i2__tdiv_to_l_@quot:
 14866                           	opt stack 0
 14867                           
 14868                           ; 4 bytes @ 0x9
 14869  00000A                     	ds	1
 14870  00000B                     i2___awdiv@counter:
 14871                           	opt stack 0
 14872  00000B                     i2readDoubleFromEEPROM@byte_index:
 14873                           	opt stack 0
 14874  00000B                     i2writeDoubleToEEPROM@input_data:
 14875                           	opt stack 0
 14876                           
 14877                           ; 4 bytes @ 0xA
 14878  00000B                     	ds	1
 14879  00000C                     i2___awdiv@sign:
 14880                           	opt stack 0
 14881                           
 14882                           ; 1 bytes @ 0xB
 14883  00000C                     	ds	1
 14884  00000D                     i2__div_to_l_@cntr:
 14885                           	opt stack 0
 14886  00000D                     i2___lldiv@counter:
 14887                           	opt stack 0
 14888  00000D                     i2___xxtofl@sign:
 14889                           	opt stack 0
 14890  00000D                     i2___awdiv@quotient:
 14891                           	opt stack 0
 14892                           
 14893                           ; 2 bytes @ 0xC
 14894  00000D                     	ds	1
 14895  00000E                     ?i2___llmod:
 14896                           	opt stack 0
 14897  00000E                     i2__div_to_l_@exp1:
 14898                           	opt stack 0
 14899  00000E                     i2__tdiv_to_l_@cntr:
 14900                           	opt stack 0
 14901  00000E                     i2___xxtofl@exp:
 14902                           	opt stack 0
 14903  00000E                     i2___llmod@dividend:
 14904                           	opt stack 0
 14905                           
 14906                           ; 4 bytes @ 0xD
 14907  00000E                     	ds	1
 14908  00000F                     i2__tdiv_to_l_@exp1:
 14909                           	opt stack 0
 14910  00000F                     i2writeDoubleToEEPROM@byte_index:
 14911                           	opt stack 0
 14912  00000F                     i2___xxtofl@arg:
 14913                           	opt stack 0
 14914                           
 14915                           ; 4 bytes @ 0xE
 14916  00000F                     	ds	2
 14917  000011                     
 14918                           ; 1 bytes @ 0x10
 14919  000011                     	ds	1
 14920  000012                     i2___llmod@divisor:
 14921                           	opt stack 0
 14922                           
 14923                           ; 4 bytes @ 0x11
 14924  000012                     	ds	1
 14925  000013                     ?i2___fldiv:
 14926                           	opt stack 0
 14927  000013                     i2___fldiv@b:
 14928                           	opt stack 0
 14929                           
 14930                           ; 4 bytes @ 0x12
 14931  000013                     	ds	3
 14932  000016                     i2___llmod@counter:
 14933                           	opt stack 0
 14934                           
 14935                           ; 1 bytes @ 0x15
 14936  000016                     	ds	1
 14937  000017                     i2___fldiv@a:
 14938                           	opt stack 0
 14939                           
 14940                           ; 4 bytes @ 0x16
 14941  000017                     	ds	4
 14942  00001B                     ??i2___fldiv:
 14943                           
 14944                           ; 1 bytes @ 0x1A
 14945  00001B                     	ds	4
 14946  00001F                     i2___fldiv@sign:
 14947                           	opt stack 0
 14948                           
 14949                           ; 1 bytes @ 0x1E
 14950  00001F                     	ds	1
 14951  000020                     i2___fldiv@rem:
 14952                           	opt stack 0
 14953                           
 14954                           ; 4 bytes @ 0x1F
 14955  000020                     	ds	4
 14956  000024                     i2___fldiv@new_exp:
 14957                           	opt stack 0
 14958                           
 14959                           ; 2 bytes @ 0x23
 14960  000024                     	ds	2
 14961  000026                     i2___fldiv@grs:
 14962                           	opt stack 0
 14963                           
 14964                           ; 4 bytes @ 0x25
 14965  000026                     	ds	4
 14966  00002A                     i2___fldiv@bexp:
 14967                           	opt stack 0
 14968                           
 14969                           ; 1 bytes @ 0x29
 14970  00002A                     	ds	1
 14971  00002B                     i2___fldiv@aexp:
 14972                           	opt stack 0
 14973                           
 14974                           ; 1 bytes @ 0x2A
 14975  00002B                     	ds	1
 14976  00002C                     ?i2___flneg:
 14977                           	opt stack 0
 14978  00002C                     i2___flneg@f1:
 14979                           	opt stack 0
 14980                           
 14981                           ; 4 bytes @ 0x2B
 14982  00002C                     	ds	4
 14983  000030                     ?_fabs:
 14984                           	opt stack 0
 14985  000030                     ?i2___flmul:
 14986                           	opt stack 0
 14987  000030                     fabs@d:
 14988                           	opt stack 0
 14989  000030                     i2___flmul@b:
 14990                           	opt stack 0
 14991                           
 14992                           ; 4 bytes @ 0x2F
 14993  000030                     	ds	4
 14994  000034                     i2___flge@ff1:
 14995                           	opt stack 0
 14996  000034                     i2___flmul@a:
 14997                           	opt stack 0
 14998                           
 14999                           ; 4 bytes @ 0x33
 15000  000034                     	ds	4
 15001  000038                     ??i2___flmul:
 15002  000038                     i2___flge@ff2:
 15003                           	opt stack 0
 15004                           
 15005                           ; 4 bytes @ 0x37
 15006  000038                     	ds	4
 15007  00003C                     ??i2___flge:
 15008  00003C                     i2___flmul@sign:
 15009                           	opt stack 0
 15010                           
 15011                           ; 1 bytes @ 0x3B
 15012  00003C                     	ds	1
 15013  00003D                     i2___flmul@aexp:
 15014                           	opt stack 0
 15015                           
 15016                           ; 1 bytes @ 0x3C
 15017  00003D                     	ds	1
 15018  00003E                     i2___flmul@grs:
 15019                           	opt stack 0
 15020                           
 15021                           ; 4 bytes @ 0x3D
 15022  00003E                     	ds	2
 15023  000040                     writeEnergyToEEPROMCallback@current_value:
 15024                           	opt stack 0
 15025                           
 15026                           ; 4 bytes @ 0x3F
 15027  000040                     	ds	2
 15028  000042                     i2___flmul@bexp:
 15029                           	opt stack 0
 15030                           
 15031                           ; 1 bytes @ 0x41
 15032  000042                     	ds	1
 15033  000043                     i2___flmul@prod:
 15034                           	opt stack 0
 15035                           
 15036                           ; 4 bytes @ 0x42
 15037  000043                     	ds	1
 15038  000044                     
 15039                           ; 1 bytes @ 0x43
 15040  000044                     	ds	3
 15041  000047                     i2___flmul@temp:
 15042                           	opt stack 0
 15043                           
 15044                           ; 2 bytes @ 0x46
 15045  000047                     	ds	2
 15046  000049                     ?i2_fround:
 15047                           	opt stack 0
 15048  000049                     ?i2_scale:
 15049                           	opt stack 0
 15050                           
 15051                           ; 4 bytes @ 0x48
 15052  000049                     	ds	4
 15053  00004D                     i2_fround$5355:
 15054                           	opt stack 0
 15055  00004D                     i2_scale$5356:
 15056                           	opt stack 0
 15057                           
 15058                           ; 4 bytes @ 0x4C
 15059  00004D                     	ds	4
 15060  000051                     i2scale@scl:
 15061                           	opt stack 0
 15062  000051                     i2_fround$5354:
 15063                           	opt stack 0
 15064                           
 15065                           ; 4 bytes @ 0x50
 15066  000051                     	ds	4
 15067  000055                     i2fround@prec:
 15068                           	opt stack 0
 15069                           
 15070                           ; 1 bytes @ 0x54
 15071  000055                     	ds	1
 15072  000056                     ?i2___fladd:
 15073                           	opt stack 0
 15074  000056                     i2___fladd@b:
 15075                           	opt stack 0
 15076                           
 15077                           ; 4 bytes @ 0x55
 15078  000056                     	ds	4
 15079  00005A                     i2___fladd@a:
 15080                           	opt stack 0
 15081                           
 15082                           ; 4 bytes @ 0x59
 15083  00005A                     	ds	4
 15084  00005E                     tblptru	equ	0xFF8
 15085                           tblptrh	equ	0xFF7
 15086                           tblptrl	equ	0xFF6
 15087                           tablat	equ	0xFF5
 15088                           postinc0	equ	0xFEE
 15089                           wreg	equ	0xFE8
 15090                           postdec1	equ	0xFE5
 15091                           fsr1h	equ	0xFE2
 15092                           fsr1l	equ	0xFE1
 15093                           
 15094                           ; 1 bytes @ 0x5D
 15095 ;;
 15096 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 15097 ;;
 15098 ;; *************** function _main *****************
 15099 ;; Defined at:
 15100 ;;		line 494 in file "main.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;		None
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;		None
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  1    wreg      void 
 15107 ;; Registers used:
 15108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15116 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 15117 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 15118 ;;Total ram usage:        2 bytes
 15119 ;; Hardware stack levels required when called:   21
 15120 ;; This function calls:
 15121 ;;		_ADCC_SetADTIInterruptHandler
 15122 ;;		_INT0_SetInterruptHandler
 15123 ;;		_OLED_Clear
 15124 ;;		_OLED_Init
 15125 ;;		_OLED_Write_String
 15126 ;;		_OLED_YX
 15127 ;;		_SYSTEM_Initialize
 15128 ;;		_TMR4_SetInterruptHandler
 15129 ;;		_TMR5_SetInterruptHandler
 15130 ;;		_TMR5_StopTimer
 15131 ;;		_TMR6_SetInterruptHandler
 15132 ;;		_TMR7_SetInterruptHandler
 15133 ;;		_getCauseOfReset
 15134 ;;		_recoverSRAMMaxFromEEPROM
 15135 ;;		_saveSRAMMaxToEEPROM
 15136 ;;		_terminal_clearTerminal
 15137 ;;		_terminal_ringBufferPull
 15138 ;;		_terminal_setCursorHome
 15139 ;;		_terminal_textAttributesReset
 15140 ;; This function is called by:
 15141 ;;		Startup code after reset
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           	psect	text0
 15146  018472                     __ptext0:
 15147                           	opt stack 0
 15148  018472                     _main:
 15149                           	opt stack 10
 15150                           
 15151                           ;main.c: 498: reset_cause = getCauseOfReset();
 15152                           
 15153                           ;incstack = 0
 15154  018472  ECC5  F0D1         	call	_getCauseOfReset	;wreg free
 15155  018476  0102               	movlb	2	; () banked
 15156  018478  6FFC               	movwf	_reset_cause& (0+255),b
 15157                           
 15158                           ; BSR set to: 2
 15159                           ;main.c: 502: _delay((unsigned long)((250)*(64000000/4000.0)));
 15160  01847A  0E15               	movlw	21
 15161  01847C  0102               	movlb	2	; () banked
 15162  01847E  6FD6               	movwf	(??_main+1)& (0+255),b
 15163  018480  0E4B               	movlw	75
 15164  018482  6FD5               	movwf	??_main& (0+255),b
 15165  018484  0EBE               	movlw	190
 15166  018486                     u33767:
 15167  018486  2EE8               	decfsz	wreg,f,c
 15168  018488  D7FE               	bra	u33767
 15169  01848A  2FD5               	decfsz	??_main& (0+255),f,b
 15170  01848C  D7FC               	bra	u33767
 15171  01848E  2FD6               	decfsz	(??_main+1)& (0+255),f,b
 15172  018490  D7FA               	bra	u33767
 15173  018492  F000               	nop	
 15174                           
 15175                           ;main.c: 505: SYSTEM_Initialize();
 15176  018494  EC31  F0D5         	call	_SYSTEM_Initialize	;wreg free
 15177                           
 15178                           ;main.c: 508: LATGbits.LATG0 = 0;
 15179  018498  907F               	bcf	3967,0,c	;volatile
 15180                           
 15181                           ;main.c: 509: LATGbits.LATG1 = 0;
 15182  01849A  927F               	bcf	3967,1,c	;volatile
 15183                           
 15184                           ;main.c: 510: load_enable = 0;
 15185  01849C  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 15186                           
 15187                           ;main.c: 513: ADCON2bits.ADCRS = 7;
 15188  01849E  010F               	movlb	15	; () banked
 15189  0184A0  895A               	bsf	90,4,b	;volatile
 15190  0184A2  8B5A               	bsf	90,5,b	;volatile
 15191  0184A4  8D5A               	bsf	90,6,b	;volatile
 15192                           
 15193                           ; BSR set to: 15
 15194                           ;main.c: 514: ADCAP = 20;
 15195  0184A6  0E14               	movlw	20
 15196  0184A8  6F5D               	movwf	93,b	;volatile
 15197                           
 15198                           ; BSR set to: 15
 15199                           ;main.c: 517: TMR6_SetInterruptHandler(heartbeatTimerCallback);
 15200  0184AA  0E78               	movlw	low _heartbeatTimerCallback
 15201  0184AC  0101               	movlb	1	; () banked
 15202  0184AE  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 15203  0184B0  0EA8               	movlw	high _heartbeatTimerCallback
 15204  0184B2  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15205  0184B4  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
 15206  0184B6  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15207  0184B8  EC81  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 15208                           
 15209                           ;main.c: 520: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
 15210  0184BC  0E68               	movlw	low _ADCPostProcessingCallback
 15211  0184BE  0101               	movlb	1	; () banked
 15212  0184C0  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 15213  0184C2  0E40               	movlw	high _ADCPostProcessingCallback
 15214  0184C4  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 15215  0184C6  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
 15216  0184C8  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 15217  0184CA  ECAB  F0D8         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 15218                           
 15219                           ;main.c: 523: TMR7_SetInterruptHandler(acquisitionTimerCallback);
 15220  0184CE  0EA2               	movlw	low _acquisitionTimerCallback
 15221  0184D0  0101               	movlb	1	; () banked
 15222  0184D2  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 15223  0184D4  0EB0               	movlw	high _acquisitionTimerCallback
 15224  0184D6  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15225  0184D8  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
 15226  0184DA  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15227  0184DC  EC7A  F0D8         	call	_TMR7_SetInterruptHandler	;wreg free
 15228                           
 15229                           ;main.c: 526: INT0_SetInterruptHandler(dimmingOffTimeCallback);
 15230  0184E0  0E3C               	movlw	low _dimmingOffTimeCallback
 15231  0184E2  0101               	movlb	1	; () banked
 15232  0184E4  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 15233  0184E6  0EB0               	movlw	high _dimmingOffTimeCallback
 15234  0184E8  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15235  0184EA  0E01               	movlw	low (_dimmingOffTimeCallback shr (0+16))
 15236  0184EC  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15237  0184EE  EC96  F0D8         	call	_INT0_SetInterruptHandler	;wreg free
 15238                           
 15239                           ;main.c: 529: TMR5_SetInterruptHandler(dimmingOnTimeCallback);
 15240  0184F2  0E72               	movlw	low _dimmingOnTimeCallback
 15241  0184F4  0101               	movlb	1	; () banked
 15242  0184F6  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 15243  0184F8  0EB1               	movlw	high _dimmingOnTimeCallback
 15244  0184FA  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15245  0184FC  0E01               	movlw	low (_dimmingOnTimeCallback shr (0+16))
 15246  0184FE  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15247  018500  EC88  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 15248                           
 15249                           ;main.c: 532: TMR4_SetInterruptHandler(writeEnergyToEEPROMCallback);
 15250  018504  0E24               	movlw	low _writeEnergyToEEPROMCallback
 15251  018506  0101               	movlb	1	; () banked
 15252  018508  6F17               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 15253  01850A  0E9C               	movlw	high _writeEnergyToEEPROMCallback
 15254  01850C  6F18               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15255  01850E  0E01               	movlw	low (_writeEnergyToEEPROMCallback shr (0+16))
 15256  018510  6F19               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15257  018512  EC8F  F0D8         	call	_TMR4_SetInterruptHandler	;wreg free
 15258                           
 15259                           ;main.c: 535: TMR5_StopTimer();
 15260  018516  ECEA  F0D8         	call	_TMR5_StopTimer	;wreg free
 15261                           
 15262                           ;main.c: 536: PIE0bits.INT0IE = 0;
 15263  01851A  010E               	movlb	14	; () banked
 15264  01851C  9129               	bcf	41,0,b	;volatile
 15265                           
 15266                           ; BSR set to: 14
 15267                           ;main.c: 539: recoverSRAMMaxFromEEPROM();
 15268  01851E  ECD8  F0C2         	call	_recoverSRAMMaxFromEEPROM	;wreg free
 15269                           
 15270                           ;main.c: 542: (INTCONbits.GIEH = 1);
 15271  018522  8EF2               	bsf	intcon,7,c	;volatile
 15272                           
 15273                           ;main.c: 545: (INTCONbits.GIEL = 1);
 15274  018524  8CF2               	bsf	intcon,6,c	;volatile
 15275                           
 15276                           ;main.c: 548: terminal_clearTerminal();
 15277  018526  EC6A  F0D8         	call	_terminal_clearTerminal	;wreg free
 15278                           
 15279                           ;main.c: 549: terminal_setCursorHome();
 15280  01852A  EC5A  F0D8         	call	_terminal_setCursorHome	;wreg free
 15281                           
 15282                           ;main.c: 550: terminal_textAttributesReset();
 15283  01852E  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 15284                           
 15285                           ;main.c: 553: OLED_Init();
 15286  018532  EC70  F0CC         	call	_OLED_Init	;wreg free
 15287                           
 15288                           ;main.c: 554: OLED_Clear();
 15289  018536  EC1C  F0D4         	call	_OLED_Clear	;wreg free
 15290                           
 15291                           ;main.c: 555: OLED_YX(0,0);
 15292  01853A  0E00               	movlw	0
 15293  01853C  0101               	movlb	1	; () banked
 15294  01853E  6F2D               	movwf	OLED_YX@Column& (0+255),b
 15295  018540  0E00               	movlw	0
 15296  018542  ECD7  F0D4         	call	_OLED_YX
 15297                           
 15298                           ;main.c: 556: OLED_Write_String("AC Power Meter");
 15299  018546  0E2E               	movlw	low STR_2
 15300  018548  0101               	movlb	1	; () banked
 15301  01854A  6F3A               	movwf	OLED_Write_String@s& (0+255),b
 15302  01854C  0EFE               	movlw	high STR_2
 15303  01854E  6F3B               	movwf	(OLED_Write_String@s+1)& (0+255),b
 15304  018550  EC46  F0D1         	call	_OLED_Write_String	;wreg free
 15305                           
 15306                           ;main.c: 557: OLED_YX(1,0);
 15307  018554  0E00               	movlw	0
 15308  018556  0101               	movlb	1	; () banked
 15309  018558  6F2D               	movwf	OLED_YX@Column& (0+255),b
 15310  01855A  0E01               	movlw	1
 15311  01855C  ECD7  F0D4         	call	_OLED_YX
 15312                           
 15313                           ;main.c: 558: OLED_Write_String("ELEN 3035");
 15314  018560  0E75               	movlw	low STR_3
 15315  018562  0101               	movlb	1	; () banked
 15316  018564  6F3A               	movwf	OLED_Write_String@s& (0+255),b
 15317  018566  0EFF               	movlw	high STR_3
 15318  018568  6F3B               	movwf	(OLED_Write_String@s+1)& (0+255),b
 15319  01856A  EC46  F0D1         	call	_OLED_Write_String	;wreg free
 15320                           
 15321                           ;main.c: 559: OLED_YX(2,0);
 15322  01856E  0E00               	movlw	0
 15323  018570  0101               	movlb	1	; () banked
 15324  018572  6F2D               	movwf	OLED_YX@Column& (0+255),b
 15325  018574  0E02               	movlw	2
 15326  018576  ECD7  F0D4         	call	_OLED_YX
 15327                           
 15328                           ;main.c: 560: OLED_Write_String("Drew Maatman");
 15329  01857A  0EED               	movlw	low STR_4
 15330  01857C  0101               	movlb	1	; () banked
 15331  01857E  6F3A               	movwf	OLED_Write_String@s& (0+255),b
 15332  018580  0EFE               	movlw	high STR_4
 15333  018582  6F3B               	movwf	(OLED_Write_String@s+1)& (0+255),b
 15334  018584  EC46  F0D1         	call	_OLED_Write_String	;wreg free
 15335                           
 15336                           ;main.c: 561: OLED_YX(3,0);
 15337  018588  0E00               	movlw	0
 15338  01858A  0101               	movlb	1	; () banked
 15339  01858C  6F2D               	movwf	OLED_YX@Column& (0+255),b
 15340  01858E  0E03               	movlw	3
 15341  018590  ECD7  F0D4         	call	_OLED_YX
 15342                           
 15343                           ;main.c: 562: OLED_Write_String("Gabe Thalji");
 15344  018594  0E1E               	movlw	low STR_5
 15345  018596  0101               	movlb	1	; () banked
 15346  018598  6F3A               	movwf	OLED_Write_String@s& (0+255),b
 15347  01859A  0EFF               	movlw	high STR_5
 15348  01859C  6F3B               	movwf	(OLED_Write_String@s+1)& (0+255),b
 15349  01859E  EC46  F0D1         	call	_OLED_Write_String	;wreg free
 15350  0185A2                     
 15351                           ;main.c: 566: {
 15352                           ;main.c: 569: if (eusart2RxStringReady) {
 15353  0185A2  0100               	movlb	0	; () banked
 15354  0185A4  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 15355                           
 15356                           ; BSR set to: 0
 15357                           ;main.c: 571: terminal_ringBufferPull();
 15358  0185A6  ECCF  F0C5         	call	_terminal_ringBufferPull	;wreg free
 15359                           
 15360                           ;main.c: 573: }
 15361                           ;main.c: 576: saveSRAMMaxToEEPROM();
 15362  0185AA  EC48  F0BC         	call	_saveSRAMMaxToEEPROM	;wreg free
 15363  0185AE  D7F9               	goto	l1381
 15364  0185B0                     __end_of_main:
 15365                           	opt stack 0
 15366                           tblptru	equ	0xFF8
 15367                           tblptrh	equ	0xFF7
 15368                           tblptrl	equ	0xFF6
 15369                           tablat	equ	0xFF5
 15370                           intcon	equ	0xFF2
 15371                           postinc0	equ	0xFEE
 15372                           wreg	equ	0xFE8
 15373                           postdec1	equ	0xFE5
 15374                           fsr1h	equ	0xFE2
 15375                           fsr1l	equ	0xFE1
 15376                           
 15377 ;; *************** function _terminal_setCursorHome *****************
 15378 ;; Defined at:
 15379 ;;		line 85 in file "ring_buffer_interface.c"
 15380 ;; Parameters:    Size  Location     Type
 15381 ;;		None
 15382 ;; Auto vars:     Size  Location     Type
 15383 ;;		None
 15384 ;; Return value:  Size  Location     Type
 15385 ;;                  1    wreg      void 
 15386 ;; Registers used:
 15387 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15388 ;; Tracked objects:
 15389 ;;		On entry : 0/0
 15390 ;;		On exit  : 0/0
 15391 ;;		Unchanged: 0/0
 15392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15397 ;;Total ram usage:        0 bytes
 15398 ;; Hardware stack levels used:    1
 15399 ;; Hardware stack levels required when called:   17
 15400 ;; This function calls:
 15401 ;;		_printf
 15402 ;; This function is called by:
 15403 ;;		_main
 15404 ;; This function uses a non-reentrant model
 15405 ;;
 15406                           
 15407                           	psect	text1
 15408  01B0B4                     __ptext1:
 15409                           	opt stack 0
 15410  01B0B4                     _terminal_setCursorHome:
 15411                           	opt stack 13
 15412                           
 15413                           ;ring_buffer_interface.c: 86: printf("\033[H");
 15414                           
 15415                           ;incstack = 0
 15416  01B0B4  0EBB               	movlw	low STR_7
 15417  01B0B6  0101               	movlb	1	; () banked
 15418  01B0B8  6FAC               	movwf	printf@f& (0+255),b
 15419  01B0BA  0EFF               	movlw	high STR_7
 15420  01B0BC  6FAD               	movwf	(printf@f+1)& (0+255),b
 15421  01B0BE  ECB9  F0D4         	call	_printf	;wreg free
 15422  01B0C2  0012               	return		;funcret
 15423  01B0C4                     __end_of_terminal_setCursorHome:
 15424                           	opt stack 0
 15425                           tblptru	equ	0xFF8
 15426                           tblptrh	equ	0xFF7
 15427                           tblptrl	equ	0xFF6
 15428                           tablat	equ	0xFF5
 15429                           intcon	equ	0xFF2
 15430                           postinc0	equ	0xFEE
 15431                           wreg	equ	0xFE8
 15432                           postdec1	equ	0xFE5
 15433                           fsr1h	equ	0xFE2
 15434                           fsr1l	equ	0xFE1
 15435                           
 15436 ;; *************** function _terminal_ringBufferPull *****************
 15437 ;; Defined at:
 15438 ;;		line 12 in file "ring_buffer_interface.c"
 15439 ;; Parameters:    Size  Location     Type
 15440 ;;		None
 15441 ;; Auto vars:     Size  Location     Type
 15442 ;;  index           2    2[BANK4 ] int 
 15443 ;;  index           2    4[BANK4 ] int 
 15444 ;;  charNumber      2    0[BANK4 ] int 
 15445 ;; Return value:  Size  Location     Type
 15446 ;;                  1    wreg      void 
 15447 ;; Registers used:
 15448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15449 ;; Tracked objects:
 15450 ;;		On entry : 0/0
 15451 ;;		On exit  : 0/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15455 ;;      Locals:         0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0       0
 15456 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15457 ;;      Totals:         0       0       3       0       0       6       0       0       0       0       0       0       
      +0       0       0
 15458 ;;Total ram usage:        9 bytes
 15459 ;; Hardware stack levels used:    1
 15460 ;; Hardware stack levels required when called:   20
 15461 ;; This function calls:
 15462 ;;		_EUSART2_Read
 15463 ;;		_ringBufferLUT
 15464 ;;		_strlen
 15465 ;; This function is called by:
 15466 ;;		_main
 15467 ;; This function uses a non-reentrant model
 15468 ;;
 15469                           
 15470                           	psect	text2
 15471  018B9E                     __ptext2:
 15472                           	opt stack 0
 15473  018B9E                     _terminal_ringBufferPull:
 15474                           	opt stack 10
 15475                           
 15476                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
 15477                           
 15478                           ;incstack = 0
 15479  018B9E  C269  F400         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 15480  018BA2  0104               	movlb	4	; () banked
 15481  018BA4  6B01               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 15482                           
 15483                           ; BSR set to: 4
 15484                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
 15485  018BA6  0E00               	movlw	0
 15486  018BA8  6F05               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 15487  018BAA  0E00               	movlw	0
 15488  018BAC  6F04               	movwf	terminal_ringBufferPull@index& (0+255),b
 15489  018BAE                     l23145:
 15490                           
 15491                           ; BSR set to: 4
 15492  018BAE  BF05               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 15493  018BB0  D006               	goto	l1420
 15494  018BB2  5105               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 15495  018BB4  E10F               	bnz	l23155
 15496  018BB6  0E40               	movlw	64
 15497  018BB8  5D04               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 15498  018BBA  B0D8               	btfsc	status,0,c
 15499  018BBC  D00B               	goto	u33470
 15500  018BBE                     l1420:
 15501                           
 15502                           ; BSR set to: 4
 15503                           ;ring_buffer_interface.c: 19: line[index] = '\0';
 15504                           
 15505                           ; BSR set to: 4
 15506  018BBE  0EC0               	movlw	low _line
 15507  018BC0  2504               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 15508  018BC2  6ED9               	movwf	fsr2l,c
 15509  018BC4  0E03               	movlw	high _line
 15510  018BC6  2105               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 15511  018BC8  6EDA               	movwf	fsr2h,c
 15512  018BCA  0E00               	movlw	0
 15513  018BCC  6EDF               	movwf	indf2,c
 15514                           
 15515                           ; BSR set to: 4
 15516  018BCE  4B04               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 15517  018BD0  2B05               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 15518  018BD2  D7ED               	goto	l23145
 15519  018BD4                     u33470:
 15520  018BD4                     l23155:
 15521                           
 15522                           ; BSR set to: 4
 15523                           ;ring_buffer_interface.c: 21: }
 15524                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
 15525  018BD4  0E00               	movlw	0
 15526  018BD6  6F03               	movwf	(terminal_ringBufferPull@index_3260+1)& (0+255),b
 15527  018BD8  0E00               	movlw	0
 15528  018BDA  6F02               	movwf	terminal_ringBufferPull@index_3260& (0+255),b
 15529  018BDC  D00F               	goto	l1422
 15530  018BDE                     
 15531                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
 15532                           
 15533                           ; BSR set to: 4
 15534  018BDE  EC26  F0D3         	call	_EUSART2_Read	;wreg free
 15535  018BE2  0101               	movlb	1	; () banked
 15536  018BE4  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15537  018BE6  0EC0               	movlw	low _line
 15538  018BE8  0104               	movlb	4	; () banked
 15539  018BEA  2502               	addwf	terminal_ringBufferPull@index_3260& (0+255),w,b
 15540  018BEC  6ED9               	movwf	fsr2l,c
 15541  018BEE  0E03               	movlw	high _line
 15542  018BF0  2103               	addwfc	(terminal_ringBufferPull@index_3260+1)& (0+255),w,b
 15543  018BF2  6EDA               	movwf	fsr2h,c
 15544  018BF4  C1C3  FFDF         	movff	??_terminal_ringBufferPull,indf2
 15545                           
 15546                           ; BSR set to: 4
 15547  018BF8  4B02               	infsnz	terminal_ringBufferPull@index_3260& (0+255),f,b
 15548  018BFA  2B03               	incf	(terminal_ringBufferPull@index_3260+1)& (0+255),f,b
 15549  018BFC                     l1422:
 15550                           
 15551                           ; BSR set to: 4
 15552                           
 15553                           ; BSR set to: 4
 15554  018BFC  5100               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 15555  018BFE  5D02               	subwf	terminal_ringBufferPull@index_3260& (0+255),w,b
 15556  018C00  5103               	movf	(terminal_ringBufferPull@index_3260+1)& (0+255),w,b
 15557  018C02  0A80               	xorlw	128
 15558  018C04  0101               	movlb	1	; () banked
 15559  018C06  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15560  018C08  0104               	movlb	4	; () banked
 15561  018C0A  5101               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 15562  018C0C  0A80               	xorlw	128
 15563  018C0E  0101               	movlb	1	; () banked
 15564  018C10  59C3               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 15565  018C12  A0D8               	btfss	status,0,c
 15566  018C14  D7E4               	goto	l1423
 15567                           
 15568                           ; BSR set to: 1
 15569                           ;ring_buffer_interface.c: 28: }
 15570                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
 15571  018C16  C0F4  F1DE         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 15572                           
 15573                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
 15574                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
 15575  018C1A  D017               	goto	l1425
 15576  018C1C                     
 15577                           ; BSR set to: 1
 15578                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
 15579                           
 15580                           ; BSR set to: 1
 15581  018C1C  0EFF               	movlw	255
 15582  018C1E  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15583  018C20  0EFF               	movlw	255
 15584  018C22  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15585  018C24  0EC0               	movlw	low _line
 15586  018C26  6F17               	movwf	strlen@s& (0+255),b
 15587  018C28  0E03               	movlw	high _line
 15588  018C2A  6F18               	movwf	(strlen@s+1)& (0+255),b
 15589  018C2C  EC1A  F0D1         	call	_strlen	;wreg free
 15590  018C30  0101               	movlb	1	; () banked
 15591  018C32  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15592  018C34  2717               	addwf	?_strlen& (0+255),f,b
 15593  018C36  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15594  018C38  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15595  018C3A  0EC0               	movlw	low _line
 15596  018C3C  2517               	addwf	?_strlen& (0+255),w,b
 15597  018C3E  6ED9               	movwf	fsr2l,c
 15598  018C40  0E03               	movlw	high _line
 15599  018C42  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15600  018C44  6EDA               	movwf	fsr2h,c
 15601  018C46  0E00               	movlw	0
 15602  018C48  6EDF               	movwf	indf2,c
 15603  018C4A                     l1425:
 15604                           
 15605                           ; BSR set to: 1
 15606  018C4A  0EFF               	movlw	255
 15607  018C4C  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15608  018C4E  0EFF               	movlw	255
 15609  018C50  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15610  018C52  0EC0               	movlw	low _line
 15611  018C54  6F17               	movwf	strlen@s& (0+255),b
 15612  018C56  0E03               	movlw	high _line
 15613  018C58  6F18               	movwf	(strlen@s+1)& (0+255),b
 15614  018C5A  EC1A  F0D1         	call	_strlen	;wreg free
 15615  018C5E  0101               	movlb	1	; () banked
 15616  018C60  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15617  018C62  2717               	addwf	?_strlen& (0+255),f,b
 15618  018C64  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15619  018C66  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15620  018C68  0EC0               	movlw	low _line
 15621  018C6A  2517               	addwf	?_strlen& (0+255),w,b
 15622  018C6C  6ED9               	movwf	fsr2l,c
 15623  018C6E  0E03               	movlw	high _line
 15624  018C70  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15625  018C72  6EDA               	movwf	fsr2h,c
 15626  018C74  0E0A               	movlw	10
 15627  018C76  18DE               	xorwf	postinc2,w,c
 15628  018C78  B4D8               	btfsc	status,2,c
 15629  018C7A  D7D0               	goto	l1426
 15630                           
 15631                           ; BSR set to: 1
 15632  018C7C  0EFF               	movlw	255
 15633  018C7E  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15634  018C80  0EFF               	movlw	255
 15635  018C82  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15636  018C84  0EC0               	movlw	low _line
 15637  018C86  6F17               	movwf	strlen@s& (0+255),b
 15638  018C88  0E03               	movlw	high _line
 15639  018C8A  6F18               	movwf	(strlen@s+1)& (0+255),b
 15640  018C8C  EC1A  F0D1         	call	_strlen	;wreg free
 15641  018C90  0101               	movlb	1	; () banked
 15642  018C92  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15643  018C94  2717               	addwf	?_strlen& (0+255),f,b
 15644  018C96  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15645  018C98  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15646  018C9A  0EC0               	movlw	low _line
 15647  018C9C  2517               	addwf	?_strlen& (0+255),w,b
 15648  018C9E  6ED9               	movwf	fsr2l,c
 15649  018CA0  0E03               	movlw	high _line
 15650  018CA2  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15651  018CA4  6EDA               	movwf	fsr2h,c
 15652  018CA6  0E0D               	movlw	13
 15653  018CA8  18DE               	xorwf	postinc2,w,c
 15654  018CAA  B4D8               	btfsc	status,2,c
 15655  018CAC  D7B7               	goto	l1426
 15656                           
 15657                           ; BSR set to: 1
 15658                           ;ring_buffer_interface.c: 40: }
 15659                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
 15660  018CAE  0100               	movlb	0	; () banked
 15661  018CB0  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
 15665  018CB2  0EC0               	movlw	low _line
 15666  018CB4  0101               	movlb	1	; () banked
 15667  018CB6  6FBF               	movwf	ringBufferLUT@line& (0+255),b
 15668  018CB8  0E03               	movlw	high _line
 15669  018CBA  6FC0               	movwf	(ringBufferLUT@line+1)& (0+255),b
 15670  018CBC  EC00  F080         	call	_ringBufferLUT	;wreg free
 15671  018CC0  0012               	return		;funcret
 15672  018CC2                     __end_of_terminal_ringBufferPull:
 15673                           	opt stack 0
 15674                           tblptru	equ	0xFF8
 15675                           tblptrh	equ	0xFF7
 15676                           tblptrl	equ	0xFF6
 15677                           tablat	equ	0xFF5
 15678                           intcon	equ	0xFF2
 15679                           postinc0	equ	0xFEE
 15680                           wreg	equ	0xFE8
 15681                           postdec1	equ	0xFE5
 15682                           fsr1h	equ	0xFE2
 15683                           fsr1l	equ	0xFE1
 15684                           indf2	equ	0xFDF
 15685                           postinc2	equ	0xFDE
 15686                           fsr2h	equ	0xFDA
 15687                           fsr2l	equ	0xFD9
 15688                           status	equ	0xFD8
 15689                           
 15690 ;; *************** function _ringBufferLUT *****************
 15691 ;; Defined at:
 15692 ;;		line 61 in file "ring_buffer_LUT.c"
 15693 ;; Parameters:    Size  Location     Type
 15694 ;;  line            2  191[BANK1 ] PTR unsigned char 
 15695 ;;		 -> line(64), 
 15696 ;; Auto vars:     Size  Location     Type
 15697 ;;  angle_degree    4   41[BANK2 ] PTR unsigned char 
 15698 ;;  index           2   69[BANK2 ] int 
 15699 ;;  channel_name   22   16[BANK2 ] unsigned char [22]
 15700 ;;  userID          2   73[BANK2 ] int 
 15701 ;;  max_voltage_    4   65[BANK2 ] int 
 15702 ;;  max_temp_pri    4   61[BANK2 ] int 
 15703 ;;  max_voltage_    4   57[BANK2 ] int 
 15704 ;;  max_voltage_    4   53[BANK2 ] int 
 15705 ;;  max_Power_pr    4   49[BANK2 ] int 
 15706 ;;  max_current_    4   45[BANK2 ] int 
 15707 ;;  arg_buff        3   38[BANK2 ] unsigned char [3]
 15708 ;;  percentage      2   71[BANK2 ] int 
 15709 ;; Return value:  Size  Location     Type
 15710 ;;                  1    wreg      void 
 15711 ;; Registers used:
 15712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15713 ;; Tracked objects:
 15714 ;;		On entry : 0/0
 15715 ;;		On exit  : 0/0
 15716 ;;		Unchanged: 0/0
 15717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15718 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15719 ;;      Locals:         0       0       0      59       0       0       0       0       0       0       0       0       
      +0       0       0
 15720 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15721 ;;      Totals:         0       0       4      59       0       0       0       0       0       0       0       0       
      +0       0       0
 15722 ;;Total ram usage:       63 bytes
 15723 ;; Hardware stack levels used:    1
 15724 ;; Hardware stack levels required when called:   19
 15725 ;; This function calls:
 15726 ;;		_TMR5_StopTimer
 15727 ;;		_TMR7_StopTimer
 15728 ;;		___fladd
 15729 ;;		___fldiv
 15730 ;;		___flmul
 15731 ;;		___flneg
 15732 ;;		___wmul
 15733 ;;		___xxtofl
 15734 ;;		_atoi
 15735 ;;		_getCauseOfResetString
 15736 ;;		_getDeviceID
 15737 ;;		_getDeviceIDString
 15738 ;;		_getMajorRevisionID
 15739 ;;		_getMinorRevisionID
 15740 ;;		_getUserID
 15741 ;;		_printf
 15742 ;;		_readDoubleFromEEPROM
 15743 ;;		_strcmp
 15744 ;;		_strcpy
 15745 ;;		_strstr
 15746 ;;		_terminal_printNewline
 15747 ;;		_terminal_textAttributes
 15748 ;;		_terminal_textAttributesReset
 15749 ;;		_writeDoubleToEEPROM
 15750 ;; This function is called by:
 15751 ;;		_terminal_ringBufferPull
 15752 ;; This function uses a non-reentrant model
 15753 ;;
 15754                           
 15755                           	psect	text3
 15756  010000                     __ptext3:
 15757                           	opt stack 0
 15758  010000                     _ringBufferLUT:
 15759                           	opt stack 10
 15760                           
 15761                           ;ring_buffer_LUT.c: 67: if((0 == strcmp(line, "Reset"))) {
 15762                           
 15763                           ;incstack = 0
 15764  010000  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 15765  010004  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15766  010008  0E7C               	movlw	low (STR_176+10)
 15767  01000A  0101               	movlb	1	; () banked
 15768  01000C  6F19               	movwf	strcmp@s2& (0+255),b
 15769  01000E  0EFD               	movlw	high (STR_176+10)
 15770  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15771  010012  ECEE  F0D1         	call	_strcmp	;wreg free
 15772  010016  0101               	movlb	1	; () banked
 15773  010018  5117               	movf	?_strcmp& (0+255),w,b
 15774  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15775  01001C  A4D8               	btfss	status,2,c
 15776  01001E  D026               	goto	l1603
 15777                           
 15778                           ; BSR set to: 1
 15779                           ;ring_buffer_LUT.c: 71: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 15780  010020  C0F0  F11B         	movff	_Total_Energy,writeDoubleToEEPROM@input_double	;volatile
 15781  010024  C0F1  F11C         	movff	_Total_Energy+1,writeDoubleToEEPROM@input_double+1	;volatile
 15782  010028  C0F2  F11D         	movff	_Total_Energy+2,writeDoubleToEEPROM@input_double+2	;volatile
 15783  01002C  C0F3  F11E         	movff	_Total_Energy+3,writeDoubleToEEPROM@input_double+3	;volatile
 15784  010030  0E09               	movlw	low _Total_Energy_address
 15785  010032  6EF6               	movwf	tblptrl,c
 15786  010034                     	if	1	;There is more than 1 active tblptr byte
 15787  010034  0ED0               	movlw	high _Total_Energy_address
 15788  010036  6EF7               	movwf	tblptrh,c
 15789  010038                     	endif
 15790  010038                     	if	1	;There are 3 active tblptr bytes
 15791  010038  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 15792  01003A  6EF8               	movwf	tblptru,c
 15793  01003C                     	endif
 15794  01003C  0009               	tblrd		*+
 15795  01003E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15796  010042  000A               	tblrd		*-
 15797  010044  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15798  010048  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 15799                           
 15800                           ;ring_buffer_LUT.c: 74: printf("\033[2J");
 15801  01004C  0EB2               	movlw	low STR_6
 15802  01004E  0101               	movlb	1	; () banked
 15803  010050  6FAC               	movwf	printf@f& (0+255),b
 15804  010052  0EFF               	movlw	high STR_6
 15805  010054  6FAD               	movwf	(printf@f+1)& (0+255),b
 15806  010056  ECB9  F0D4         	call	_printf	;wreg free
 15807                           
 15808                           ;ring_buffer_LUT.c: 77: printf("\033[H");
 15809  01005A  0EBB               	movlw	low STR_7
 15810  01005C  0101               	movlb	1	; () banked
 15811  01005E  6FAC               	movwf	printf@f& (0+255),b
 15812  010060  0EFF               	movlw	high STR_7
 15813  010062  6FAD               	movwf	(printf@f+1)& (0+255),b
 15814  010064  ECB9  F0D4         	call	_printf	;wreg free
 15815  010068  00FF               	reset		;# 
 15816                           
 15817                           ;ring_buffer_LUT.c: 82: }
 15818  01006A  0012               	return	
 15819  01006C                     l1603:
 15820                           
 15821                           ;ring_buffer_LUT.c: 85: else if((0 == strcmp(line, "Clear"))) {
 15822  01006C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 15823  010070  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15824  010074  0EA2               	movlw	low STR_48
 15825  010076  0101               	movlb	1	; () banked
 15826  010078  6F19               	movwf	strcmp@s2& (0+255),b
 15827  01007A  0EFF               	movlw	high STR_48
 15828  01007C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15829  01007E  ECEE  F0D1         	call	_strcmp	;wreg free
 15830  010082  0101               	movlb	1	; () banked
 15831  010084  5117               	movf	?_strcmp& (0+255),w,b
 15832  010086  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15833  010088  A4D8               	btfss	status,2,c
 15834  01008A  D00E               	goto	l1605
 15835                           
 15836                           ; BSR set to: 1
 15837                           ;ring_buffer_LUT.c: 88: printf("\033[2J");
 15838  01008C  0EB2               	movlw	low STR_6
 15839  01008E  6FAC               	movwf	printf@f& (0+255),b
 15840  010090  0EFF               	movlw	high STR_6
 15841  010092  6FAD               	movwf	(printf@f+1)& (0+255),b
 15842  010094  ECB9  F0D4         	call	_printf	;wreg free
 15843                           
 15844                           ;ring_buffer_LUT.c: 91: printf("\033[H");
 15845  010098  0EBB               	movlw	low STR_7
 15846  01009A  0101               	movlb	1	; () banked
 15847  01009C  6FAC               	movwf	printf@f& (0+255),b
 15848  01009E  0EFF               	movlw	high STR_7
 15849  0100A0  6FAD               	movwf	(printf@f+1)& (0+255),b
 15850  0100A2  ECB9  F0D4         	call	_printf	;wreg free
 15851                           
 15852                           ;ring_buffer_LUT.c: 93: }
 15853  0100A6  0012               	return	
 15854  0100A8                     l1605:
 15855                           
 15856                           ;ring_buffer_LUT.c: 96: else if((0 == strcmp(line, "Cause of Reset?"))) {
 15857  0100A8  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 15858  0100AC  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15859  0100B0  0EB2               	movlw	low STR_51
 15860  0100B2  0101               	movlb	1	; () banked
 15861  0100B4  6F19               	movwf	strcmp@s2& (0+255),b
 15862  0100B6  0EFD               	movlw	high STR_51
 15863  0100B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15864  0100BA  ECEE  F0D1         	call	_strcmp	;wreg free
 15865  0100BE  0101               	movlb	1	; () banked
 15866  0100C0  5117               	movf	?_strcmp& (0+255),w,b
 15867  0100C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15868  0100C4  A4D8               	btfss	status,2,c
 15869  0100C6  D019               	goto	l1607
 15870                           
 15871                           ; BSR set to: 1
 15872                           ;ring_buffer_LUT.c: 98: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15873  0100C8  0E00               	movlw	0
 15874  0100CA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 15875  0100CC  0E00               	movlw	0
 15876  0100CE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15877  0100D0  0E02               	movlw	2
 15878  0100D2  EC33  F0AA         	call	_terminal_textAttributes
 15879                           
 15880                           ;ring_buffer_LUT.c: 101: printf("The cause of the most recent device reset was: %s\n\r",
 15881                           ;ring_buffer_LUT.c: 102: getCauseOfResetString(reset_cause));
 15882  0100D6  0E20               	movlw	low STR_52
 15883  0100D8  0101               	movlb	1	; () banked
 15884  0100DA  6FAC               	movwf	printf@f& (0+255),b
 15885  0100DC  0EF6               	movlw	high STR_52
 15886  0100DE  6FAD               	movwf	(printf@f+1)& (0+255),b
 15887  0100E0  0102               	movlb	2	; () banked
 15888  0100E2  51FC               	movf	_reset_cause& (0+255),w,b
 15889  0100E4  EC41  F0D6         	call	_getCauseOfResetString
 15890  0100E8  C117  F1AE         	movff	?_getCauseOfResetString,?_printf+2
 15891  0100EC  C118  F1AF         	movff	?_getCauseOfResetString+1,?_printf+3
 15892  0100F0  ECB9  F0D4         	call	_printf	;wreg free
 15893                           
 15894                           ;ring_buffer_LUT.c: 104: terminal_textAttributesReset();
 15895  0100F4  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 15896                           
 15897                           ;ring_buffer_LUT.c: 106: }
 15898  0100F8  0012               	return	
 15899  0100FA                     l1607:
 15900                           
 15901                           ;ring_buffer_LUT.c: 109: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN
      +                          "))) {
 15902  0100FA  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 15903  0100FE  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15904  010102  0E9C               	movlw	low STR_53
 15905  010104  0101               	movlb	1	; () banked
 15906  010106  6F19               	movwf	strcmp@s2& (0+255),b
 15907  010108  0EFF               	movlw	high STR_53
 15908  01010A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15909  01010C  ECEE  F0D1         	call	_strcmp	;wreg free
 15910  010110  0101               	movlb	1	; () banked
 15911  010112  5117               	movf	?_strcmp& (0+255),w,b
 15912  010114  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15913  010116  B4D8               	btfsc	status,2,c
 15914  010118  D00F               	goto	u32760
 15915                           
 15916                           ; BSR set to: 1
 15917  01011A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 15918  01011E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15919  010122  0EB7               	movlw	low STR_54
 15920  010124  6F19               	movwf	strcmp@s2& (0+255),b
 15921  010126  0EFF               	movlw	high STR_54
 15922  010128  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15923  01012A  ECEE  F0D1         	call	_strcmp	;wreg free
 15924  01012E  0101               	movlb	1	; () banked
 15925  010130  5117               	movf	?_strcmp& (0+255),w,b
 15926  010132  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15927  010134  A4D8               	btfss	status,2,c
 15928  010136  D018               	goto	l1609
 15929  010138                     u32760:
 15930                           
 15931                           ; BSR set to: 1
 15932                           ;ring_buffer_LUT.c: 111: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15933                           
 15934                           ; BSR set to: 1
 15935  010138  0E00               	movlw	0
 15936  01013A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 15937  01013C  0E00               	movlw	0
 15938  01013E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15939  010140  0E02               	movlw	2
 15940  010142  EC33  F0AA         	call	_terminal_textAttributes
 15941                           
 15942                           ;ring_buffer_LUT.c: 112: printf("AC Power Meter\n\r");
 15943  010146  0EFB               	movlw	low STR_55
 15944  010148  0101               	movlb	1	; () banked
 15945  01014A  6FAC               	movwf	printf@f& (0+255),b
 15946  01014C  0EFC               	movlw	high STR_55
 15947  01014E  6FAD               	movwf	(printf@f+1)& (0+255),b
 15948  010150  ECB9  F0D4         	call	_printf	;wreg free
 15949                           
 15950                           ;ring_buffer_LUT.c: 113: printf("Marquette University ELEN 3035 Final Project\n\r");
 15951  010154  0E1E               	movlw	low STR_56
 15952  010156  0101               	movlb	1	; () banked
 15953  010158  6FAC               	movwf	printf@f& (0+255),b
 15954  01015A  0EF7               	movlw	high STR_56
 15955  01015C  6FAD               	movwf	(printf@f+1)& (0+255),b
 15956  01015E  ECB9  F0D4         	call	_printf	;wreg free
 15957                           
 15958                           ;ring_buffer_LUT.c: 114: terminal_textAttributesReset();
 15959  010162  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 15960                           
 15961                           ;ring_buffer_LUT.c: 116: }
 15962  010166  0012               	return	
 15963  010168                     l1609:
 15964                           
 15965                           ;ring_buffer_LUT.c: 119: else if((0 == strcmp(line, "Device ID?"))) {
 15966  010168  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 15967  01016C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15968  010170  0E35               	movlw	low STR_57
 15969  010172  0101               	movlb	1	; () banked
 15970  010174  6F19               	movwf	strcmp@s2& (0+255),b
 15971  010176  0EFF               	movlw	high STR_57
 15972  010178  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15973  01017A  ECEE  F0D1         	call	_strcmp	;wreg free
 15974  01017E  0101               	movlb	1	; () banked
 15975  010180  5117               	movf	?_strcmp& (0+255),w,b
 15976  010182  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15977  010184  A4D8               	btfss	status,2,c
 15978  010186  D023               	goto	l1613
 15979                           
 15980                           ; BSR set to: 1
 15981                           ;ring_buffer_LUT.c: 121: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15982  010188  0E00               	movlw	0
 15983  01018A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 15984  01018C  0E00               	movlw	0
 15985  01018E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15986  010190  0E02               	movlw	2
 15987  010192  EC33  F0AA         	call	_terminal_textAttributes
 15988                           
 15989                           ;ring_buffer_LUT.c: 124: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
 15990                           ;ring_buffer_LUT.c: 125: "part number of %s\n\r",
 15991                           ;ring_buffer_LUT.c: 126: getDeviceID(),
 15992                           ;ring_buffer_LUT.c: 127: getDeviceIDString(getDeviceID()));
 15993  010196  0EB0               	movlw	low STR_58
 15994  010198  0101               	movlb	1	; () banked
 15995  01019A  6FAC               	movwf	printf@f& (0+255),b
 15996  01019C  0EF1               	movlw	high STR_58
 15997  01019E  6FAD               	movwf	(printf@f+1)& (0+255),b
 15998  0101A0  EC85  F0D7         	call	_getDeviceID	;wreg free
 15999  0101A4  C122  F1AE         	movff	?_getDeviceID,?_printf+2
 16000  0101A8  C123  F1AF         	movff	?_getDeviceID+1,?_printf+3
 16001  0101AC  EC85  F0D7         	call	_getDeviceID	;wreg free
 16002  0101B0  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 16003  0101B4  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 16004  0101B8  ECBA  F0D0         	call	_getDeviceIDString	;wreg free
 16005  0101BC  C124  F1B0         	movff	?_getDeviceIDString,?_printf+4
 16006  0101C0  C125  F1B1         	movff	?_getDeviceIDString+1,?_printf+5
 16007  0101C4  ECB9  F0D4         	call	_printf	;wreg free
 16008                           
 16009                           ;ring_buffer_LUT.c: 129: terminal_textAttributesReset();
 16010  0101C8  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16011                           
 16012                           ;ring_buffer_LUT.c: 131: }
 16013  0101CC  0012               	return	
 16014  0101CE                     l1613:
 16015                           
 16016                           ;ring_buffer_LUT.c: 134: else if((0 == strcmp(line, "Revision ID?"))) {
 16017  0101CE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16018  0101D2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16019  0101D6  0EB9               	movlw	low STR_59
 16020  0101D8  0101               	movlb	1	; () banked
 16021  0101DA  6F19               	movwf	strcmp@s2& (0+255),b
 16022  0101DC  0EFE               	movlw	high STR_59
 16023  0101DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16024  0101E0  ECEE  F0D1         	call	_strcmp	;wreg free
 16025  0101E4  0101               	movlb	1	; () banked
 16026  0101E6  5117               	movf	?_strcmp& (0+255),w,b
 16027  0101E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16028  0101EA  A4D8               	btfss	status,2,c
 16029  0101EC  D022               	goto	l1615
 16030                           
 16031                           ; BSR set to: 1
 16032                           ;ring_buffer_LUT.c: 136: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16033  0101EE  0E00               	movlw	0
 16034  0101F0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16035  0101F2  0E00               	movlw	0
 16036  0101F4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16037  0101F6  0E02               	movlw	2
 16038  0101F8  EC33  F0AA         	call	_terminal_textAttributes
 16039                           
 16040                           ;ring_buffer_LUT.c: 139: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
 16041                           ;ring_buffer_LUT.c: 140: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
 16042  0101FC  0E52               	movlw	low STR_60
 16043  0101FE  0101               	movlb	1	; () banked
 16044  010200  6FAC               	movwf	printf@f& (0+255),b
 16045  010202  0EF3               	movlw	high STR_60
 16046  010204  6FAD               	movwf	(printf@f+1)& (0+255),b
 16047  010206  EC9B  F0D4         	call	_getMajorRevisionID	;wreg free
 16048  01020A  0101               	movlb	1	; () banked
 16049  01020C  6FC1               	movwf	??_ringBufferLUT& (0+255),b
 16050  01020E  0E41               	movlw	65
 16051  010210  25C1               	addwf	??_ringBufferLUT& (0+255),w,b
 16052  010212  6FAE               	movwf	(?_printf+2)& (0+255),b
 16053  010214  6BAF               	clrf	(?_printf+3)& (0+255),b
 16054  010216  0E00               	movlw	0
 16055  010218  23AF               	addwfc	(?_printf+3)& (0+255),f,b
 16056  01021A  ECF1  F0D6         	call	_getMinorRevisionID	;wreg free
 16057  01021E  0101               	movlb	1	; () banked
 16058  010220  6FC2               	movwf	(??_ringBufferLUT+1)& (0+255),b
 16059  010222  51C2               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 16060  010224  6FB0               	movwf	(?_printf+4)& (0+255),b
 16061  010226  6BB1               	clrf	(?_printf+5)& (0+255),b
 16062  010228  ECB9  F0D4         	call	_printf	;wreg free
 16063                           
 16064                           ;ring_buffer_LUT.c: 142: terminal_textAttributesReset();
 16065  01022C  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16066                           
 16067                           ;ring_buffer_LUT.c: 144: }
 16068  010230  0012               	return	
 16069  010232                     l1615:
 16070                           
 16071                           ;ring_buffer_LUT.c: 147: else if((0 == strcmp(line, "User IDs?"))) {
 16072  010232  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16073  010236  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16074  01023A  0E61               	movlw	low STR_61
 16075  01023C  0101               	movlb	1	; () banked
 16076  01023E  6F19               	movwf	strcmp@s2& (0+255),b
 16077  010240  0EFF               	movlw	high STR_61
 16078  010242  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16079  010244  ECEE  F0D1         	call	_strcmp	;wreg free
 16080  010248  0101               	movlb	1	; () banked
 16081  01024A  5117               	movf	?_strcmp& (0+255),w,b
 16082  01024C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16083  01024E  A4D8               	btfss	status,2,c
 16084  010250  D03E               	goto	l1617
 16085                           
 16086                           ; BSR set to: 1
 16087                           ;ring_buffer_LUT.c: 149: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16088  010252  0E00               	movlw	0
 16089  010254  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16090  010256  0E00               	movlw	0
 16091  010258  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16092  01025A  0E02               	movlw	2
 16093  01025C  EC33  F0AA         	call	_terminal_textAttributes
 16094                           
 16095                           ;ring_buffer_LUT.c: 151: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
 16096  010260  0E95               	movlw	low STR_62
 16097  010262  0101               	movlb	1	; () banked
 16098  010264  6FAC               	movwf	printf@f& (0+255),b
 16099  010266  0EF2               	movlw	high STR_62
 16100  010268  6FAD               	movwf	(printf@f+1)& (0+255),b
 16101  01026A  ECB9  F0D4         	call	_printf	;wreg free
 16102                           
 16103                           ;ring_buffer_LUT.c: 154: for (int userID = 0; userID <= 7; userID++) {
 16104  01026E  0E00               	movlw	0
 16105  010270  0102               	movlb	2	; () banked
 16106  010272  6FD4               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 16107  010274  0E00               	movlw	0
 16108  010276  6FD3               	movwf	ringBufferLUT@userID& (0+255),b
 16109  010278                     l22699:
 16110                           
 16111                           ; BSR set to: 2
 16112  010278  BFD4               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 16113  01027A  D006               	goto	l1618
 16114  01027C  51D4               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 16115  01027E  E124               	bnz	l22709
 16116  010280  0E08               	movlw	8
 16117  010282  5DD3               	subwf	ringBufferLUT@userID& (0+255),w,b
 16118  010284  B0D8               	btfsc	status,0,c
 16119  010286  D020               	goto	u32810
 16120  010288                     l1618:
 16121                           
 16122                           ; BSR set to: 2
 16123                           ;ring_buffer_LUT.c: 156: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
 16124                           ;ring_buffer_LUT.c: 157: userID,
 16125                           ;ring_buffer_LUT.c: 158: (2 * userID),
 16126                           ;ring_buffer_LUT.c: 159: getUserID(userID));
 16127                           
 16128                           ; BSR set to: 2
 16129  010288  0EE1               	movlw	low STR_63
 16130  01028A  0101               	movlb	1	; () banked
 16131  01028C  6FAC               	movwf	printf@f& (0+255),b
 16132  01028E  0EF4               	movlw	high STR_63
 16133  010290  6FAD               	movwf	(printf@f+1)& (0+255),b
 16134  010292  C2D3  F1AE         	movff	ringBufferLUT@userID,?_printf+2
 16135  010296  C2D4  F1AF         	movff	ringBufferLUT@userID+1,?_printf+3
 16136  01029A  90D8               	bcf	status,0,c
 16137  01029C  0102               	movlb	2	; () banked
 16138  01029E  35D3               	rlcf	ringBufferLUT@userID& (0+255),w,b
 16139  0102A0  0101               	movlb	1	; () banked
 16140  0102A2  6FB0               	movwf	(?_printf+4)& (0+255),b
 16141  0102A4  0102               	movlb	2	; () banked
 16142  0102A6  35D4               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 16143  0102A8  0101               	movlb	1	; () banked
 16144  0102AA  6FB1               	movwf	(?_printf+5)& (0+255),b
 16145  0102AC  0102               	movlb	2	; () banked
 16146  0102AE  51D3               	movf	ringBufferLUT@userID& (0+255),w,b
 16147  0102B0  ECD9  F0D3         	call	_getUserID
 16148  0102B4  C122  F1B2         	movff	?_getUserID,?_printf+6
 16149  0102B8  C123  F1B3         	movff	?_getUserID+1,?_printf+7
 16150  0102BC  ECB9  F0D4         	call	_printf	;wreg free
 16151  0102C0  0102               	movlb	2	; () banked
 16152  0102C2  4BD3               	infsnz	ringBufferLUT@userID& (0+255),f,b
 16153  0102C4  2BD4               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 16154  0102C6  D7D8               	goto	l22699
 16155  0102C8                     u32810:
 16156  0102C8                     l22709:
 16157                           
 16158                           ; BSR set to: 2
 16159                           ;ring_buffer_LUT.c: 161: }
 16160                           ;ring_buffer_LUT.c: 163: terminal_textAttributesReset();
 16161  0102C8  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16162                           
 16163                           ;ring_buffer_LUT.c: 165: }
 16164  0102CC  0012               	return	
 16165  0102CE                     l1617:
 16166                           
 16167                           ;ring_buffer_LUT.c: 168: else if((0 == strcmp(line, "ADC Error?"))) {
 16168  0102CE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16169  0102D2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16170  0102D6  0E4B               	movlw	low STR_64
 16171  0102D8  0101               	movlb	1	; () banked
 16172  0102DA  6F19               	movwf	strcmp@s2& (0+255),b
 16173  0102DC  0EFF               	movlw	high STR_64
 16174  0102DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16175  0102E0  ECEE  F0D1         	call	_strcmp	;wreg free
 16176  0102E4  0101               	movlb	1	; () banked
 16177  0102E6  5117               	movf	?_strcmp& (0+255),w,b
 16178  0102E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16179  0102EA  A4D8               	btfss	status,2,c
 16180  0102EC  D0A4               	goto	l1621
 16181                           
 16182                           ; BSR set to: 1
 16183                           ;ring_buffer_LUT.c: 170: if (adc_error_flag) {
 16184  0102EE  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 16185  0102F0  D090               	goto	l1622
 16186                           
 16187                           ; BSR set to: 1
 16188                           ;ring_buffer_LUT.c: 172: terminal_textAttributes(RED, BLACK, NORMAL);
 16189  0102F2  0E00               	movlw	0
 16190  0102F4  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16191  0102F6  0E00               	movlw	0
 16192  0102F8  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16193  0102FA  0E01               	movlw	1
 16194  0102FC  EC33  F0AA         	call	_terminal_textAttributes
 16195                           
 16196                           ;ring_buffer_LUT.c: 175: current_adc_channel = ADPCH;
 16197  010300  CF5F F261          	movff	3935,_current_adc_channel	;volatile
 16198                           
 16199                           ;ring_buffer_LUT.c: 178: char channel_name[22];
 16200                           ;ring_buffer_LUT.c: 180: switch (current_adc_channel) {
 16201  010304  D060               	goto	l1623
 16202  010306                     
 16203                           ;ring_buffer_LUT.c: 183: strcpy(channel_name, "ISNS");
 16204  010306  0E9A               	movlw	low ringBufferLUT@channel_name
 16205  010308  0101               	movlb	1	; () banked
 16206  01030A  6F17               	movwf	strcpy@to& (0+255),b
 16207  01030C  0E02               	movlw	high ringBufferLUT@channel_name
 16208  01030E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 16209  010310  0EA8               	movlw	low STR_65
 16210  010312  6F19               	movwf	strcpy@from& (0+255),b
 16211  010314  0EFF               	movlw	high STR_65
 16212  010316  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 16213  010318  ECA3  F0D5         	call	_strcpy	;wreg free
 16214                           
 16215                           ;ring_buffer_LUT.c: 184: break;
 16216  01031C  D06C               	goto	l1625
 16217  01031E                     
 16218                           ;ring_buffer_LUT.c: 187: strcpy(channel_name, "POS12");
 16219  01031E  0E9A               	movlw	low ringBufferLUT@channel_name
 16220  010320  0101               	movlb	1	; () banked
 16221  010322  6F17               	movwf	strcpy@to& (0+255),b
 16222  010324  0E02               	movlw	high ringBufferLUT@channel_name
 16223  010326  6F18               	movwf	(strcpy@to+1)& (0+255),b
 16224  010328  0E96               	movlw	low STR_66
 16225  01032A  6F19               	movwf	strcpy@from& (0+255),b
 16226  01032C  0EFF               	movlw	high STR_66
 16227  01032E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 16228  010330  ECA3  F0D5         	call	_strcpy	;wreg free
 16229                           
 16230                           ;ring_buffer_LUT.c: 188: break;
 16231  010334  D060               	goto	l1625
 16232  010336                     
 16233                           ;ring_buffer_LUT.c: 191: strcpy(channel_name, "POS3P3");
 16234  010336  0E9A               	movlw	low ringBufferLUT@channel_name
 16235  010338  0101               	movlb	1	; () banked
 16236  01033A  6F17               	movwf	strcpy@to& (0+255),b
 16237  01033C  0E02               	movlw	high ringBufferLUT@channel_name
 16238  01033E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 16239  010340  0E8F               	movlw	low STR_67
 16240  010342  6F19               	movwf	strcpy@from& (0+255),b
 16241  010344  0EFF               	movlw	high STR_67
 16242  010346  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 16243  010348  ECA3  F0D5         	call	_strcpy	;wreg free
 16244                           
 16245                           ;ring_buffer_LUT.c: 192: break;
 16246  01034C  D054               	goto	l1625
 16247  01034E                     
 16248                           ;ring_buffer_LUT.c: 195: strcpy(channel_name, "Internal AVSS");
 16249  01034E  0E9A               	movlw	low ringBufferLUT@channel_name
 16250  010350  0101               	movlb	1	; () banked
 16251  010352  6F17               	movwf	strcpy@to& (0+255),b
 16252  010354  0E02               	movlw	high ringBufferLUT@channel_name
 16253  010356  6F18               	movwf	(strcpy@to+1)& (0+255),b
 16254  010358  0E83               	movlw	low STR_68
 16255  01035A  6F19               	movwf	strcpy@from& (0+255),b
 16256  01035C  0EFE               	movlw	high STR_68
 16257  01035E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 16258  010360  ECA3  F0D5         	call	_strcpy	;wreg free
 16259                           
 16260                           ;ring_buffer_LUT.c: 196: break;
 16261  010364  D048               	goto	l1625
 16262  010366                     
 16263                           ;ring_buffer_LUT.c: 199: strcpy(channel_name, "Internal Temp");
 16264  010366  0E9A               	movlw	low ringBufferLUT@channel_name
 16265  010368  0101               	movlb	1	; () banked
 16266  01036A  6F17               	movwf	strcpy@to& (0+255),b
 16267  01036C  0E02               	movlw	high ringBufferLUT@channel_name
 16268  01036E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 16269  010370  0E91               	movlw	low STR_69
 16270  010372  6F19               	movwf	strcpy@from& (0+255),b
 16271  010374  0EFE               	movlw	high STR_69
 16272  010376  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 16273  010378  ECA3  F0D5         	call	_strcpy	;wreg free
 16274                           
 16275                           ;ring_buffer_LUT.c: 200: break;
 16276  01037C  D03C               	goto	l1625
 16277  01037E                     
 16278                           ;ring_buffer_LUT.c: 203: strcpy(channel_name, "Internal DAC1");
 16279  01037E  0E9A               	movlw	low ringBufferLUT@channel_name
 16280  010380  0101               	movlb	1	; () banked
 16281  010382  6F17               	movwf	strcpy@to& (0+255),b
 16282  010384  0E02               	movlw	high ringBufferLUT@channel_name
 16283  010386  6F18               	movwf	(strcpy@to+1)& (0+255),b
 16284  010388  0E3D               	movlw	low STR_70
 16285  01038A  6F19               	movwf	strcpy@from& (0+255),b
 16286  01038C  0EFE               	movlw	high STR_70
 16287  01038E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 16288  010390  ECA3  F0D5         	call	_strcpy	;wreg free
 16289                           
 16290                           ;ring_buffer_LUT.c: 204: break;
 16291  010394  D030               	goto	l1625
 16292  010396                     
 16293                           ;ring_buffer_LUT.c: 207: strcpy(channel_name, "Internal FVR Buffer 1");
 16294  010396  0E9A               	movlw	low ringBufferLUT@channel_name
 16295  010398  0101               	movlb	1	; () banked
 16296  01039A  6F17               	movwf	strcpy@to& (0+255),b
 16297  01039C  0E02               	movlw	high ringBufferLUT@channel_name
 16298  01039E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 16299  0103A0  0E34               	movlw	low STR_71
 16300  0103A2  6F19               	movwf	strcpy@from& (0+255),b
 16301  0103A4  0EFC               	movlw	high STR_71
 16302  0103A6  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 16303  0103A8  ECA3  F0D5         	call	_strcpy	;wreg free
 16304                           
 16305                           ;ring_buffer_LUT.c: 208: break;
 16306  0103AC  D024               	goto	l1625
 16307  0103AE                     
 16308                           ;ring_buffer_LUT.c: 211: strcpy(channel_name, "Undefined");
 16309  0103AE  0E9A               	movlw	low ringBufferLUT@channel_name
 16310  0103B0  0101               	movlb	1	; () banked
 16311  0103B2  6F17               	movwf	strcpy@to& (0+255),b
 16312  0103B4  0E02               	movlw	high ringBufferLUT@channel_name
 16313  0103B6  6F18               	movwf	(strcpy@to+1)& (0+255),b
 16314  0103B8  0E6B               	movlw	low STR_72
 16315  0103BA  6F19               	movwf	strcpy@from& (0+255),b
 16316  0103BC  0EFF               	movlw	high STR_72
 16317  0103BE  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 16318  0103C0  ECA3  F0D5         	call	_strcpy	;wreg free
 16319                           
 16320                           ;ring_buffer_LUT.c: 214: }
 16321                           
 16322                           ;ring_buffer_LUT.c: 212: break;
 16323  0103C4  D018               	goto	l1625
 16324  0103C6                     l1623:
 16325  0103C6  0102               	movlb	2	; () banked
 16326  0103C8  5161               	movf	_current_adc_channel& (0+255),w,b
 16327                           
 16328                           ; Switch size 1, requested type "space"
 16329                           ; Number of cases is 7, Range of values is 0 to 63
 16330                           ; switch strategies available:
 16331                           ; Name         Instructions Cycles
 16332                           ; simple_byte           22    12 (average)
 16333                           ;	Chosen strategy is simple_byte
 16334  0103CA  0A00               	xorlw	0	; case 0
 16335  0103CC  B4D8               	btfsc	status,2,c
 16336  0103CE  D79B               	goto	l1624
 16337  0103D0  0A04               	xorlw	4	; case 4
 16338  0103D2  B4D8               	btfsc	status,2,c
 16339  0103D4  D7A4               	goto	l1626
 16340  0103D6  0A26               	xorlw	38	; case 34
 16341  0103D8  B4D8               	btfsc	status,2,c
 16342  0103DA  D7AD               	goto	l1627
 16343  0103DC  0A1E               	xorlw	30	; case 60
 16344  0103DE  B4D8               	btfsc	status,2,c
 16345  0103E0  D7B6               	goto	l1628
 16346  0103E2  0A01               	xorlw	1	; case 61
 16347  0103E4  B4D8               	btfsc	status,2,c
 16348  0103E6  D7BF               	goto	l1629
 16349  0103E8  0A03               	xorlw	3	; case 62
 16350  0103EA  B4D8               	btfsc	status,2,c
 16351  0103EC  D7C8               	goto	l1630
 16352  0103EE  0A01               	xorlw	1	; case 63
 16353  0103F0  B4D8               	btfsc	status,2,c
 16354  0103F2  D7D1               	goto	l1631
 16355  0103F4  D7DC               	goto	l1632
 16356  0103F6                     l1625:
 16357                           
 16358                           ;ring_buffer_LUT.c: 217: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
 16359                           
 16360                           ; BSR set to: 2
 16361  0103F6  0EEE               	movlw	low STR_73
 16362  0103F8  0101               	movlb	1	; () banked
 16363  0103FA  6FAC               	movwf	printf@f& (0+255),b
 16364  0103FC  0EF6               	movlw	high STR_73
 16365  0103FE  6FAD               	movwf	(printf@f+1)& (0+255),b
 16366  010400  0E9A               	movlw	low ringBufferLUT@channel_name
 16367  010402  6FAE               	movwf	(?_printf+2)& (0+255),b
 16368  010404  0E02               	movlw	high ringBufferLUT@channel_name
 16369  010406  6FAF               	movwf	(?_printf+3)& (0+255),b
 16370  010408  ECB9  F0D4         	call	_printf	;wreg free
 16371                           
 16372                           ;ring_buffer_LUT.c: 218: terminal_textAttributesReset();
 16373  01040C  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16374                           
 16375                           ;ring_buffer_LUT.c: 220: }
 16376  010410  0012               	return	
 16377  010412                     l1622:
 16378                           
 16379                           ;ring_buffer_LUT.c: 222: else {
 16380                           ;ring_buffer_LUT.c: 224: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16381  010412  0E00               	movlw	0
 16382  010414  0101               	movlb	1	; () banked
 16383  010416  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16384  010418  0E00               	movlw	0
 16385  01041A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16386  01041C  0E02               	movlw	2
 16387  01041E  EC33  F0AA         	call	_terminal_textAttributes
 16388                           
 16389                           ;ring_buffer_LUT.c: 225: printf("No ADC Error detected\n\r");
 16390  010422  0E06               	movlw	low STR_74
 16391  010424  0101               	movlb	1	; () banked
 16392  010426  6FAC               	movwf	printf@f& (0+255),b
 16393  010428  0EFC               	movlw	high STR_74
 16394  01042A  6FAD               	movwf	(printf@f+1)& (0+255),b
 16395  01042C  ECB9  F0D4         	call	_printf	;wreg free
 16396                           
 16397                           ;ring_buffer_LUT.c: 226: terminal_textAttributesReset();
 16398  010430  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16399                           
 16400                           ;ring_buffer_LUT.c: 228: }
 16401                           ;ring_buffer_LUT.c: 230: }
 16402  010434  0012               	return	
 16403  010436                     l1621:
 16404                           
 16405                           ;ring_buffer_LUT.c: 233: else if((0 == strcmp(line, "Clear ADC Error"))) {
 16406  010436  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16407  01043A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16408  01043E  0EE2               	movlw	low STR_75
 16409  010440  0101               	movlb	1	; () banked
 16410  010442  6F19               	movwf	strcmp@s2& (0+255),b
 16411  010444  0EFD               	movlw	high STR_75
 16412  010446  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16413  010448  ECEE  F0D1         	call	_strcmp	;wreg free
 16414  01044C  0101               	movlb	1	; () banked
 16415  01044E  5117               	movf	?_strcmp& (0+255),w,b
 16416  010450  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16417  010452  A4D8               	btfss	status,2,c
 16418  010454  D018               	goto	l1635
 16419                           
 16420                           ; BSR set to: 1
 16421                           ;ring_buffer_LUT.c: 235: LATFbits.LATF3 = 0;
 16422  010456  967E               	bcf	3966,3,c	;volatile
 16423                           
 16424                           ;ring_buffer_LUT.c: 236: adc_error_flag = 0;
 16425  010458  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 16426                           
 16427                           ;ring_buffer_LUT.c: 238: PIE5bits.TMR7IE = 1;
 16428  01045A  010E               	movlb	14	; () banked
 16429  01045C  8D2E               	bsf	46,6,b	;volatile
 16430                           
 16431                           ; BSR set to: 14
 16432                           ;ring_buffer_LUT.c: 239: TMR7_StopTimer();
 16433  01045E  ECDC  F0D8         	call	_TMR7_StopTimer	;wreg free
 16434                           
 16435                           ;ring_buffer_LUT.c: 241: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16436  010462  0E00               	movlw	0
 16437  010464  0101               	movlb	1	; () banked
 16438  010466  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16439  010468  0E00               	movlw	0
 16440  01046A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16441  01046C  0E02               	movlw	2
 16442  01046E  EC33  F0AA         	call	_terminal_textAttributes
 16443                           
 16444                           ;ring_buffer_LUT.c: 242: printf("Clearing ADC Error\n\r");
 16445  010472  0E5F               	movlw	low STR_76
 16446  010474  0101               	movlb	1	; () banked
 16447  010476  6FAC               	movwf	printf@f& (0+255),b
 16448  010478  0EFC               	movlw	high STR_76
 16449  01047A  6FAD               	movwf	(printf@f+1)& (0+255),b
 16450  01047C  ECB9  F0D4         	call	_printf	;wreg free
 16451                           
 16452                           ;ring_buffer_LUT.c: 243: terminal_textAttributesReset();
 16453  010480  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16454                           
 16455                           ;ring_buffer_LUT.c: 245: }
 16456  010484  0012               	return	
 16457  010486                     l1635:
 16458                           
 16459                           ;ring_buffer_LUT.c: 248: else if((0 == strcmp(line, "Comm Error?"))) {
 16460  010486  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16461  01048A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16462  01048E  0E06               	movlw	low STR_77
 16463  010490  0101               	movlb	1	; () banked
 16464  010492  6F19               	movwf	strcmp@s2& (0+255),b
 16465  010494  0EFF               	movlw	high STR_77
 16466  010496  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16467  010498  ECEE  F0D1         	call	_strcmp	;wreg free
 16468  01049C  0101               	movlb	1	; () banked
 16469  01049E  5117               	movf	?_strcmp& (0+255),w,b
 16470  0104A0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16471  0104A2  A4D8               	btfss	status,2,c
 16472  0104A4  D02C               	goto	l1637
 16473                           
 16474                           ; BSR set to: 1
 16475                           ;ring_buffer_LUT.c: 250: if (LATFbits.LATF1 == 1) {
 16476  0104A6  A27E               	btfss	3966,1,c	;volatile
 16477  0104A8  D018               	goto	l1638
 16478                           
 16479                           ; BSR set to: 1
 16480                           ;ring_buffer_LUT.c: 252: terminal_textAttributes(RED, BLACK, NORMAL);
 16481  0104AA  0E00               	movlw	0
 16482  0104AC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16483  0104AE  0E00               	movlw	0
 16484  0104B0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16485  0104B2  0E01               	movlw	1
 16486  0104B4  EC33  F0AA         	call	_terminal_textAttributes
 16487                           
 16488                           ;ring_buffer_LUT.c: 253: printf("Communications error detected!\n\r");
 16489  0104B8  0E33               	movlw	low STR_78
 16490  0104BA  0101               	movlb	1	; () banked
 16491  0104BC  6FAC               	movwf	printf@f& (0+255),b
 16492  0104BE  0EFA               	movlw	high STR_78
 16493  0104C0  6FAD               	movwf	(printf@f+1)& (0+255),b
 16494  0104C2  ECB9  F0D4         	call	_printf	;wreg free
 16495                           
 16496                           ;ring_buffer_LUT.c: 254: printf("This could have been caused by UART (this interface) or
      +                           I2C (OLED display interface)\n\r");
 16497  0104C6  0E03               	movlw	low STR_79
 16498  0104C8  0101               	movlb	1	; () banked
 16499  0104CA  6FAC               	movwf	printf@f& (0+255),b
 16500  0104CC  0EF1               	movlw	high STR_79
 16501  0104CE  6FAD               	movwf	(printf@f+1)& (0+255),b
 16502  0104D0  ECB9  F0D4         	call	_printf	;wreg free
 16503                           
 16504                           ;ring_buffer_LUT.c: 255: terminal_textAttributesReset();
 16505  0104D4  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16506                           
 16507                           ;ring_buffer_LUT.c: 257: }
 16508  0104D8  0012               	return	
 16509  0104DA                     l1638:
 16510                           
 16511                           ;ring_buffer_LUT.c: 259: else {
 16512                           ;ring_buffer_LUT.c: 261: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16513  0104DA  0E00               	movlw	0
 16514  0104DC  0101               	movlb	1	; () banked
 16515  0104DE  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16516  0104E0  0E00               	movlw	0
 16517  0104E2  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16518  0104E4  0E02               	movlw	2
 16519  0104E6  EC33  F0AA         	call	_terminal_textAttributes
 16520                           
 16521                           ;ring_buffer_LUT.c: 262: printf("No communications error detected\n\r");
 16522  0104EA  0E88               	movlw	low STR_80
 16523  0104EC  0101               	movlb	1	; () banked
 16524  0104EE  6FAC               	movwf	printf@f& (0+255),b
 16525  0104F0  0EF9               	movlw	high STR_80
 16526  0104F2  6FAD               	movwf	(printf@f+1)& (0+255),b
 16527  0104F4  ECB9  F0D4         	call	_printf	;wreg free
 16528                           
 16529                           ;ring_buffer_LUT.c: 263: terminal_textAttributesReset();
 16530  0104F8  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16531                           
 16532                           ;ring_buffer_LUT.c: 265: }
 16533                           ;ring_buffer_LUT.c: 266: }
 16534  0104FC  0012               	return	
 16535  0104FE                     l1637:
 16536                           
 16537                           ;ring_buffer_LUT.c: 269: else if((0 == strcmp(line, "Clear Comm Error"))) {
 16538  0104FE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16539  010502  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16540  010506  0E50               	movlw	low STR_81
 16541  010508  0101               	movlb	1	; () banked
 16542  01050A  6F19               	movwf	strcmp@s2& (0+255),b
 16543  01050C  0EFD               	movlw	high STR_81
 16544  01050E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16545  010510  ECEE  F0D1         	call	_strcmp	;wreg free
 16546  010514  0101               	movlb	1	; () banked
 16547  010516  5117               	movf	?_strcmp& (0+255),w,b
 16548  010518  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16549  01051A  A4D8               	btfss	status,2,c
 16550  01051C  D012               	goto	l1641
 16551                           
 16552                           ; BSR set to: 1
 16553                           ;ring_buffer_LUT.c: 271: LATFbits.LATF1 = 0;
 16554  01051E  927E               	bcf	3966,1,c	;volatile
 16555                           
 16556                           ; BSR set to: 1
 16557                           ;ring_buffer_LUT.c: 272: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16558  010520  0E00               	movlw	0
 16559  010522  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16560  010524  0E00               	movlw	0
 16561  010526  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16562  010528  0E02               	movlw	2
 16563  01052A  EC33  F0AA         	call	_terminal_textAttributes
 16564                           
 16565                           ;ring_buffer_LUT.c: 273: printf("Communications error cleared\n\r");
 16566  01052E  0EB4               	movlw	low STR_82
 16567  010530  0101               	movlb	1	; () banked
 16568  010532  6FAC               	movwf	printf@f& (0+255),b
 16569  010534  0EFA               	movlw	high STR_82
 16570  010536  6FAD               	movwf	(printf@f+1)& (0+255),b
 16571  010538  ECB9  F0D4         	call	_printf	;wreg free
 16572                           
 16573                           ;ring_buffer_LUT.c: 274: terminal_textAttributesReset();
 16574  01053C  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16575                           
 16576                           ;ring_buffer_LUT.c: 276: }
 16577  010540  0012               	return	
 16578  010542                     l1641:
 16579                           
 16580                           ;ring_buffer_LUT.c: 280: else if((0 == strcmp(line, "Measure POS3P3?"))) {
 16581  010542  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16582  010546  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16583  01054A  0E92               	movlw	low STR_83
 16584  01054C  0101               	movlb	1	; () banked
 16585  01054E  6F19               	movwf	strcmp@s2& (0+255),b
 16586  010550  0EFD               	movlw	high STR_83
 16587  010552  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16588  010554  ECEE  F0D1         	call	_strcmp	;wreg free
 16589  010558  0101               	movlb	1	; () banked
 16590  01055A  5117               	movf	?_strcmp& (0+255),w,b
 16591  01055C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16592  01055E  A4D8               	btfss	status,2,c
 16593  010560  D019               	goto	l1643
 16594                           
 16595                           ; BSR set to: 1
 16596                           ;ring_buffer_LUT.c: 282: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16597  010562  0E00               	movlw	0
 16598  010564  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16599  010566  0E00               	movlw	0
 16600  010568  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16601  01056A  0E06               	movlw	6
 16602  01056C  EC33  F0AA         	call	_terminal_textAttributes
 16603                           
 16604                           ;ring_buffer_LUT.c: 283: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
 16605  010570  0EF6               	movlw	low STR_84
 16606  010572  0101               	movlb	1	; () banked
 16607  010574  6FAC               	movwf	printf@f& (0+255),b
 16608  010576  0EF8               	movlw	high STR_84
 16609  010578  6FAD               	movwf	(printf@f+1)& (0+255),b
 16610  01057A  C1DA  F1AE         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
 16611  01057E  C1DB  F1AF         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
 16612  010582  C1DC  F1B0         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
 16613  010586  C1DD  F1B1         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
 16614  01058A  ECB9  F0D4         	call	_printf	;wreg free
 16615                           
 16616                           ;ring_buffer_LUT.c: 284: terminal_textAttributesReset();
 16617  01058E  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16618                           
 16619                           ;ring_buffer_LUT.c: 286: }
 16620  010592  0012               	return	
 16621  010594                     l1643:
 16622                           
 16623                           ;ring_buffer_LUT.c: 289: else if((0 == strcmp(line, "Measure POS12?"))) {
 16624  010594  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16625  010598  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16626  01059C  0E01               	movlw	low STR_85
 16627  01059E  0101               	movlb	1	; () banked
 16628  0105A0  6F19               	movwf	strcmp@s2& (0+255),b
 16629  0105A2  0EFE               	movlw	high STR_85
 16630  0105A4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16631  0105A6  ECEE  F0D1         	call	_strcmp	;wreg free
 16632  0105AA  0101               	movlb	1	; () banked
 16633  0105AC  5117               	movf	?_strcmp& (0+255),w,b
 16634  0105AE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16635  0105B0  A4D8               	btfss	status,2,c
 16636  0105B2  D019               	goto	l1645
 16637                           
 16638                           ; BSR set to: 1
 16639                           ;ring_buffer_LUT.c: 291: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16640  0105B4  0E00               	movlw	0
 16641  0105B6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16642  0105B8  0E00               	movlw	0
 16643  0105BA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16644  0105BC  0E06               	movlw	6
 16645  0105BE  EC33  F0AA         	call	_terminal_textAttributes
 16646                           
 16647                           ;ring_buffer_LUT.c: 292: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
 16648  0105C2  0E64               	movlw	low STR_86
 16649  0105C4  0101               	movlb	1	; () banked
 16650  0105C6  6FAC               	movwf	printf@f& (0+255),b
 16651  0105C8  0EF9               	movlw	high STR_86
 16652  0105CA  6FAD               	movwf	(printf@f+1)& (0+255),b
 16653  0105CC  C1D6  F1AE         	movff	_POS12_ADC_Result,?_printf+2	;volatile
 16654  0105D0  C1D7  F1AF         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
 16655  0105D4  C1D8  F1B0         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
 16656  0105D8  C1D9  F1B1         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
 16657  0105DC  ECB9  F0D4         	call	_printf	;wreg free
 16658                           
 16659                           ;ring_buffer_LUT.c: 293: terminal_textAttributesReset();
 16660  0105E0  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16661                           
 16662                           ;ring_buffer_LUT.c: 295: }
 16663  0105E4  0012               	return	
 16664  0105E6                     l1645:
 16665                           
 16666                           ;ring_buffer_LUT.c: 298: else if((0 == strcmp(line, "Measure Die Temp?"))) {
 16667  0105E6  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16668  0105EA  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16669  0105EE  0ED8               	movlw	low STR_87
 16670  0105F0  0101               	movlb	1	; () banked
 16671  0105F2  6F19               	movwf	strcmp@s2& (0+255),b
 16672  0105F4  0EFC               	movlw	high STR_87
 16673  0105F6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16674  0105F8  ECEE  F0D1         	call	_strcmp	;wreg free
 16675  0105FC  0101               	movlb	1	; () banked
 16676  0105FE  5117               	movf	?_strcmp& (0+255),w,b
 16677  010600  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16678  010602  A4D8               	btfss	status,2,c
 16679  010604  D019               	goto	l1647
 16680                           
 16681                           ; BSR set to: 1
 16682                           ;ring_buffer_LUT.c: 300: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16683  010606  0E00               	movlw	0
 16684  010608  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16685  01060A  0E00               	movlw	0
 16686  01060C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16687  01060E  0E06               	movlw	6
 16688  010610  EC33  F0AA         	call	_terminal_textAttributes
 16689                           
 16690                           ;ring_buffer_LUT.c: 301: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
 16691  010614  0E40               	movlw	low STR_88
 16692  010616  0101               	movlb	1	; () banked
 16693  010618  6FAC               	movwf	printf@f& (0+255),b
 16694  01061A  0EF9               	movlw	high STR_88
 16695  01061C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16696  01061E  C1D2  F1AE         	movff	_Temp_ADC_Result,?_printf+2	;volatile
 16697  010622  C1D3  F1AF         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
 16698  010626  C1D4  F1B0         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
 16699  01062A  C1D5  F1B1         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
 16700  01062E  ECB9  F0D4         	call	_printf	;wreg free
 16701                           
 16702                           ;ring_buffer_LUT.c: 302: terminal_textAttributesReset();
 16703  010632  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16704                           
 16705                           ;ring_buffer_LUT.c: 306: }
 16706  010636  0012               	return	
 16707  010638                     l1647:
 16708                           
 16709                           ;ring_buffer_LUT.c: 309: else if((0 == strcmp(line, "Measure FVR?"))) {
 16710  010638  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16711  01063C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16712  010640  0EC6               	movlw	low STR_89
 16713  010642  0101               	movlb	1	; () banked
 16714  010644  6F19               	movwf	strcmp@s2& (0+255),b
 16715  010646  0EFE               	movlw	high STR_89
 16716  010648  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16717  01064A  ECEE  F0D1         	call	_strcmp	;wreg free
 16718  01064E  0101               	movlb	1	; () banked
 16719  010650  5117               	movf	?_strcmp& (0+255),w,b
 16720  010652  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16721  010654  A4D8               	btfss	status,2,c
 16722  010656  D019               	goto	l1649
 16723                           
 16724                           ; BSR set to: 1
 16725                           ;ring_buffer_LUT.c: 311: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16726  010658  0E00               	movlw	0
 16727  01065A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16728  01065C  0E00               	movlw	0
 16729  01065E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16730  010660  0E06               	movlw	6
 16731  010662  EC33  F0AA         	call	_terminal_textAttributes
 16732                           
 16733                           ;ring_buffer_LUT.c: 312: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
 16734  010666  0E02               	movlw	low STR_90
 16735  010668  0101               	movlb	1	; () banked
 16736  01066A  6FAC               	movwf	printf@f& (0+255),b
 16737  01066C  0EF4               	movlw	high STR_90
 16738  01066E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16739  010670  C1E2  F1AE         	movff	_FVR_ADC_Result,?_printf+2	;volatile
 16740  010674  C1E3  F1AF         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
 16741  010678  C1E4  F1B0         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
 16742  01067C  C1E5  F1B1         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
 16743  010680  ECB9  F0D4         	call	_printf	;wreg free
 16744                           
 16745                           ;ring_buffer_LUT.c: 313: terminal_textAttributesReset();
 16746  010684  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16747                           
 16748                           ;ring_buffer_LUT.c: 315: }
 16749  010688  0012               	return	
 16750  01068A                     l1649:
 16751                           
 16752                           ;ring_buffer_LUT.c: 318: else if((0 == strcmp(line, "Measure AVSS?"))) {
 16753  01068A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16754  01068E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16755  010692  0E4B               	movlw	low STR_91
 16756  010694  0101               	movlb	1	; () banked
 16757  010696  6F19               	movwf	strcmp@s2& (0+255),b
 16758  010698  0EFE               	movlw	high STR_91
 16759  01069A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16760  01069C  ECEE  F0D1         	call	_strcmp	;wreg free
 16761  0106A0  0101               	movlb	1	; () banked
 16762  0106A2  5117               	movf	?_strcmp& (0+255),w,b
 16763  0106A4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16764  0106A6  A4D8               	btfss	status,2,c
 16765  0106A8  D019               	goto	l1651
 16766                           
 16767                           ; BSR set to: 1
 16768                           ;ring_buffer_LUT.c: 320: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16769  0106AA  0E00               	movlw	0
 16770  0106AC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16771  0106AE  0E00               	movlw	0
 16772  0106B0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16773  0106B2  0E06               	movlw	6
 16774  0106B4  EC33  F0AA         	call	_terminal_textAttributes
 16775                           
 16776                           ;ring_buffer_LUT.c: 321: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 16777  0106B8  0ED1               	movlw	low STR_92
 16778  0106BA  0101               	movlb	1	; () banked
 16779  0106BC  6FAC               	movwf	printf@f& (0+255),b
 16780  0106BE  0EF8               	movlw	high STR_92
 16781  0106C0  6FAD               	movwf	(printf@f+1)& (0+255),b
 16782  0106C2  C237  F1AE         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 16783  0106C6  C238  F1AF         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 16784  0106CA  C239  F1B0         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 16785  0106CE  C23A  F1B1         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 16786  0106D2  ECB9  F0D4         	call	_printf	;wreg free
 16787                           
 16788                           ;ring_buffer_LUT.c: 322: terminal_textAttributesReset();
 16789  0106D6  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16790                           
 16791                           ;ring_buffer_LUT.c: 324: }
 16792  0106DA  0012               	return	
 16793  0106DC                     l1651:
 16794                           
 16795                           ;ring_buffer_LUT.c: 327: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 16796  0106DC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16797  0106E0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16798  0106E4  0EBA               	movlw	low STR_93
 16799  0106E6  0101               	movlb	1	; () banked
 16800  0106E8  6F19               	movwf	strcmp@s2& (0+255),b
 16801  0106EA  0EFB               	movlw	high STR_93
 16802  0106EC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16803  0106EE  ECEE  F0D1         	call	_strcmp	;wreg free
 16804  0106F2  0101               	movlb	1	; () banked
 16805  0106F4  5117               	movf	?_strcmp& (0+255),w,b
 16806  0106F6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16807  0106F8  A4D8               	btfss	status,2,c
 16808  0106FA  D019               	goto	l1653
 16809                           
 16810                           ; BSR set to: 1
 16811                           ;ring_buffer_LUT.c: 329: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16812  0106FC  0E00               	movlw	0
 16813  0106FE  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16814  010700  0E00               	movlw	0
 16815  010702  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16816  010704  0E06               	movlw	6
 16817  010706  EC33  F0AA         	call	_terminal_textAttributes
 16818                           
 16819                           ;ring_buffer_LUT.c: 330: printf("Measured Current is %.3f Amps\n\r", Imeas);
 16820  01070A  0E75               	movlw	low STR_94
 16821  01070C  0101               	movlb	1	; () banked
 16822  01070E  6FAC               	movwf	printf@f& (0+255),b
 16823  010710  0EFA               	movlw	high STR_94
 16824  010712  6FAD               	movwf	(printf@f+1)& (0+255),b
 16825  010714  C22B  F1AE         	movff	_Imeas,?_printf+2	;volatile
 16826  010718  C22C  F1AF         	movff	_Imeas+1,?_printf+3	;volatile
 16827  01071C  C22D  F1B0         	movff	_Imeas+2,?_printf+4	;volatile
 16828  010720  C22E  F1B1         	movff	_Imeas+3,?_printf+5	;volatile
 16829  010724  ECB9  F0D4         	call	_printf	;wreg free
 16830                           
 16831                           ;ring_buffer_LUT.c: 331: terminal_textAttributesReset();
 16832  010728  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16833                           
 16834                           ;ring_buffer_LUT.c: 333: }
 16835  01072C  0012               	return	
 16836  01072E                     l1653:
 16837                           
 16838                           ;ring_buffer_LUT.c: 336: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 16839  01072E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16840  010732  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16841  010736  0E89               	movlw	low STR_95
 16842  010738  0101               	movlb	1	; () banked
 16843  01073A  6F19               	movwf	strcmp@s2& (0+255),b
 16844  01073C  0EFC               	movlw	high STR_95
 16845  01073E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16846  010740  ECEE  F0D1         	call	_strcmp	;wreg free
 16847  010744  0101               	movlb	1	; () banked
 16848  010746  5117               	movf	?_strcmp& (0+255),w,b
 16849  010748  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16850  01074A  A4D8               	btfss	status,2,c
 16851  01074C  D019               	goto	l1655
 16852                           
 16853                           ; BSR set to: 1
 16854                           ;ring_buffer_LUT.c: 338: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16855  01074E  0E00               	movlw	0
 16856  010750  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16857  010752  0E00               	movlw	0
 16858  010754  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16859  010756  0E06               	movlw	6
 16860  010758  EC33  F0AA         	call	_terminal_textAttributes
 16861                           
 16862                           ;ring_buffer_LUT.c: 339: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 16863  01075C  0ECD               	movlw	low STR_96
 16864  01075E  0101               	movlb	1	; () banked
 16865  010760  6FAC               	movwf	printf@f& (0+255),b
 16866  010762  0EF9               	movlw	high STR_96
 16867  010764  6FAD               	movwf	(printf@f+1)& (0+255),b
 16868  010766  C1CA  F1AE         	movff	_Irms,?_printf+2	;volatile
 16869  01076A  C1CB  F1AF         	movff	_Irms+1,?_printf+3	;volatile
 16870  01076E  C1CC  F1B0         	movff	_Irms+2,?_printf+4	;volatile
 16871  010772  C1CD  F1B1         	movff	_Irms+3,?_printf+5	;volatile
 16872  010776  ECB9  F0D4         	call	_printf	;wreg free
 16873                           
 16874                           ;ring_buffer_LUT.c: 340: terminal_textAttributesReset();
 16875  01077A  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16876                           
 16877                           ;ring_buffer_LUT.c: 342: }
 16878  01077E  0012               	return	
 16879  010780                     l1655:
 16880                           
 16881                           ;ring_buffer_LUT.c: 345: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 16882  010780  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16883  010784  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16884  010788  0E74               	movlw	low STR_97
 16885  01078A  0101               	movlb	1	; () banked
 16886  01078C  6F19               	movwf	strcmp@s2& (0+255),b
 16887  01078E  0EFC               	movlw	high STR_97
 16888  010790  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16889  010792  ECEE  F0D1         	call	_strcmp	;wreg free
 16890  010796  0101               	movlb	1	; () banked
 16891  010798  5117               	movf	?_strcmp& (0+255),w,b
 16892  01079A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16893  01079C  A4D8               	btfss	status,2,c
 16894  01079E  D019               	goto	l1657
 16895                           
 16896                           ; BSR set to: 1
 16897                           ;ring_buffer_LUT.c: 347: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16898  0107A0  0E00               	movlw	0
 16899  0107A2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16900  0107A4  0E00               	movlw	0
 16901  0107A6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16902  0107A8  0E06               	movlw	6
 16903  0107AA  EC33  F0AA         	call	_terminal_textAttributes
 16904                           
 16905                           ;ring_buffer_LUT.c: 348: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 16906  0107AE  0EEF               	movlw	low STR_98
 16907  0107B0  0101               	movlb	1	; () banked
 16908  0107B2  6FAC               	movwf	printf@f& (0+255),b
 16909  0107B4  0EF9               	movlw	high STR_98
 16910  0107B6  6FAD               	movwf	(printf@f+1)& (0+255),b
 16911  0107B8  C227  F1AE         	movff	_Vrms,?_printf+2	;volatile
 16912  0107BC  C228  F1AF         	movff	_Vrms+1,?_printf+3	;volatile
 16913  0107C0  C229  F1B0         	movff	_Vrms+2,?_printf+4	;volatile
 16914  0107C4  C22A  F1B1         	movff	_Vrms+3,?_printf+5	;volatile
 16915  0107C8  ECB9  F0D4         	call	_printf	;wreg free
 16916                           
 16917                           ;ring_buffer_LUT.c: 349: terminal_textAttributesReset();
 16918  0107CC  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16919                           
 16920                           ;ring_buffer_LUT.c: 351: }
 16921  0107D0  0012               	return	
 16922  0107D2                     l1657:
 16923                           
 16924                           ;ring_buffer_LUT.c: 354: else if ((0 == strcmp(line, "Measure Power?"))) {
 16925  0107D2  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16926  0107D6  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16927  0107DA  0E10               	movlw	low STR_99
 16928  0107DC  0101               	movlb	1	; () banked
 16929  0107DE  6F19               	movwf	strcmp@s2& (0+255),b
 16930  0107E0  0EFE               	movlw	high STR_99
 16931  0107E2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16932  0107E4  ECEE  F0D1         	call	_strcmp	;wreg free
 16933  0107E8  0101               	movlb	1	; () banked
 16934  0107EA  5117               	movf	?_strcmp& (0+255),w,b
 16935  0107EC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16936  0107EE  A4D8               	btfss	status,2,c
 16937  0107F0  D019               	goto	l1659
 16938                           
 16939                           ; BSR set to: 1
 16940                           ;ring_buffer_LUT.c: 356: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16941  0107F2  0E00               	movlw	0
 16942  0107F4  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16943  0107F6  0E00               	movlw	0
 16944  0107F8  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16945  0107FA  0E06               	movlw	6
 16946  0107FC  EC33  F0AA         	call	_terminal_textAttributes
 16947                           
 16948                           ;ring_buffer_LUT.c: 357: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 16949  010800  0E3C               	movlw	low STR_100
 16950  010802  0101               	movlb	1	; () banked
 16951  010804  6FAC               	movwf	printf@f& (0+255),b
 16952  010806  0EF4               	movlw	high STR_100
 16953  010808  6FAD               	movwf	(printf@f+1)& (0+255),b
 16954  01080A  C1C6  F1AE         	movff	_Avg_Power,?_printf+2	;volatile
 16955  01080E  C1C7  F1AF         	movff	_Avg_Power+1,?_printf+3	;volatile
 16956  010812  C1C8  F1B0         	movff	_Avg_Power+2,?_printf+4	;volatile
 16957  010816  C1C9  F1B1         	movff	_Avg_Power+3,?_printf+5	;volatile
 16958  01081A  ECB9  F0D4         	call	_printf	;wreg free
 16959                           
 16960                           ;ring_buffer_LUT.c: 358: terminal_textAttributesReset();
 16961  01081E  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16962                           
 16963                           ;ring_buffer_LUT.c: 360: }
 16964  010822  0012               	return	
 16965  010824                     l1659:
 16966                           
 16967                           ;ring_buffer_LUT.c: 363: else if ((0 == strcmp(line, "Measure Energy?"))) {
 16968  010824  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16969  010828  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16970  01082C  0EC2               	movlw	low STR_101
 16971  01082E  0101               	movlb	1	; () banked
 16972  010830  6F19               	movwf	strcmp@s2& (0+255),b
 16973  010832  0EFD               	movlw	high STR_101
 16974  010834  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16975  010836  ECEE  F0D1         	call	_strcmp	;wreg free
 16976  01083A  0101               	movlb	1	; () banked
 16977  01083C  5117               	movf	?_strcmp& (0+255),w,b
 16978  01083E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16979  010840  A4D8               	btfss	status,2,c
 16980  010842  D019               	goto	l1661
 16981                           
 16982                           ; BSR set to: 1
 16983                           ;ring_buffer_LUT.c: 365: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16984  010844  0E00               	movlw	0
 16985  010846  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16986  010848  0E00               	movlw	0
 16987  01084A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16988  01084C  0E06               	movlw	6
 16989  01084E  EC33  F0AA         	call	_terminal_textAttributes
 16990                           
 16991                           ;ring_buffer_LUT.c: 366: printf("Measured output energy since last measurement reset is 
      +                          %.3f Watt Hours\n\r", Total_Energy);
 16992  010852  0E05               	movlw	low STR_102
 16993  010854  0101               	movlb	1	; () banked
 16994  010856  6FAC               	movwf	printf@f& (0+255),b
 16995  010858  0EF2               	movlw	high STR_102
 16996  01085A  6FAD               	movwf	(printf@f+1)& (0+255),b
 16997  01085C  C0F0  F1AE         	movff	_Total_Energy,?_printf+2	;volatile
 16998  010860  C0F1  F1AF         	movff	_Total_Energy+1,?_printf+3	;volatile
 16999  010864  C0F2  F1B0         	movff	_Total_Energy+2,?_printf+4	;volatile
 17000  010868  C0F3  F1B1         	movff	_Total_Energy+3,?_printf+5	;volatile
 17001  01086C  ECB9  F0D4         	call	_printf	;wreg free
 17002                           
 17003                           ;ring_buffer_LUT.c: 367: terminal_textAttributesReset();
 17004  010870  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17005                           
 17006                           ;ring_buffer_LUT.c: 369: }
 17007  010874  0012               	return	
 17008  010876                     l1661:
 17009                           
 17010                           ;ring_buffer_LUT.c: 372: else if ((0 == strcmp(line, "Clear Energy"))) {
 17011  010876  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17012  01087A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17013  01087E  0EE0               	movlw	low STR_103
 17014  010880  0101               	movlb	1	; () banked
 17015  010882  6F19               	movwf	strcmp@s2& (0+255),b
 17016  010884  0EFE               	movlw	high STR_103
 17017  010886  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17018  010888  ECEE  F0D1         	call	_strcmp	;wreg free
 17019  01088C  0101               	movlb	1	; () banked
 17020  01088E  5117               	movf	?_strcmp& (0+255),w,b
 17021  010890  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17022  010892  A4D8               	btfss	status,2,c
 17023  010894  D032               	goto	l1663
 17024                           
 17025                           ; BSR set to: 1
 17026                           ;ring_buffer_LUT.c: 375: Total_Energy = 0.0;
 17027  010896  0E00               	movlw	0
 17028  010898  0100               	movlb	0	; () banked
 17029  01089A  6FF0               	movwf	_Total_Energy& (0+255),b	;volatile
 17030  01089C  0E00               	movlw	0
 17031  01089E  6FF1               	movwf	(_Total_Energy+1)& (0+255),b	;volatile
 17032  0108A0  0E00               	movlw	0
 17033  0108A2  6FF2               	movwf	(_Total_Energy+2)& (0+255),b	;volatile
 17034  0108A4  0E00               	movlw	0
 17035  0108A6  6FF3               	movwf	(_Total_Energy+3)& (0+255),b	;volatile
 17036                           
 17037                           ; BSR set to: 0
 17038                           ;ring_buffer_LUT.c: 376: writeDoubleToEEPROM(0.0, Total_Energy_address);
 17039  0108A8  0E00               	movlw	0
 17040  0108AA  0101               	movlb	1	; () banked
 17041  0108AC  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 17042  0108AE  0E00               	movlw	0
 17043  0108B0  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 17044  0108B2  0E00               	movlw	0
 17045  0108B4  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 17046  0108B6  0E00               	movlw	0
 17047  0108B8  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 17048  0108BA  0E09               	movlw	low _Total_Energy_address
 17049  0108BC  6EF6               	movwf	tblptrl,c
 17050  0108BE                     	if	1	;There is more than 1 active tblptr byte
 17051  0108BE  0ED0               	movlw	high _Total_Energy_address
 17052  0108C0  6EF7               	movwf	tblptrh,c
 17053  0108C2                     	endif
 17054  0108C2                     	if	1	;There are 3 active tblptr bytes
 17055  0108C2  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 17056  0108C4  6EF8               	movwf	tblptru,c
 17057  0108C6                     	endif
 17058  0108C6  0009               	tblrd		*+
 17059  0108C8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 17060  0108CC  000A               	tblrd		*-
 17061  0108CE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 17062  0108D2  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 17063                           
 17064                           ;ring_buffer_LUT.c: 378: terminal_textAttributes(RED, BLACK, NORMAL);
 17065  0108D6  0E00               	movlw	0
 17066  0108D8  0101               	movlb	1	; () banked
 17067  0108DA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17068  0108DC  0E00               	movlw	0
 17069  0108DE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17070  0108E0  0E01               	movlw	1
 17071  0108E2  EC33  F0AA         	call	_terminal_textAttributes
 17072                           
 17073                           ;ring_buffer_LUT.c: 379: printf("Measured output energy has been reset to zero Watt Hour
      +                          s\n\r");
 17074  0108E6  0E8D               	movlw	low STR_104
 17075  0108E8  0101               	movlb	1	; () banked
 17076  0108EA  6FAC               	movwf	printf@f& (0+255),b
 17077  0108EC  0EF3               	movlw	high STR_104
 17078  0108EE  6FAD               	movwf	(printf@f+1)& (0+255),b
 17079  0108F0  ECB9  F0D4         	call	_printf	;wreg free
 17080                           
 17081                           ;ring_buffer_LUT.c: 380: terminal_textAttributesReset();
 17082  0108F4  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17083                           
 17084                           ;ring_buffer_LUT.c: 382: }
 17085  0108F8  0012               	return	
 17086  0108FA                     l1663:
 17087                           
 17088                           ;ring_buffer_LUT.c: 385: else if ((0 == strcmp(line, "Enable Dimming"))) {
 17089  0108FA  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17090  0108FE  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17091  010902  0E1F               	movlw	low STR_105
 17092  010904  0101               	movlb	1	; () banked
 17093  010906  6F19               	movwf	strcmp@s2& (0+255),b
 17094  010908  0EFE               	movlw	high STR_105
 17095  01090A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17096  01090C  ECEE  F0D1         	call	_strcmp	;wreg free
 17097  010910  0101               	movlb	1	; () banked
 17098  010912  5117               	movf	?_strcmp& (0+255),w,b
 17099  010914  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17100  010916  A4D8               	btfss	status,2,c
 17101  010918  D046               	goto	l1665
 17102                           
 17103                           ; BSR set to: 1
 17104                           ;ring_buffer_LUT.c: 389: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 17105  01091A  0E01               	movlw	1
 17106  01091C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17107  01091E  0E02               	movlw	2
 17108  010920  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17109  010922  0E00               	movlw	0
 17110  010924  EC33  F0AA         	call	_terminal_textAttributes
 17111                           
 17112                           ;ring_buffer_LUT.c: 390: printf("WARNING: Using the dimming feature with load devices ot
      +                          her than a light bulb can result in device damage");
 17113  010928  0ECB               	movlw	low STR_106
 17114  01092A  0101               	movlb	1	; () banked
 17115  01092C  6FAC               	movwf	printf@f& (0+255),b
 17116  01092E  0EEF               	movlw	high STR_106
 17117  010930  6FAD               	movwf	(printf@f+1)& (0+255),b
 17118  010932  ECB9  F0D4         	call	_printf	;wreg free
 17119                           
 17120                           ;ring_buffer_LUT.c: 391: terminal_textAttributesReset();
 17121  010936  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17122                           
 17123                           ;ring_buffer_LUT.c: 392: terminal_printNewline();
 17124  01093A  EC62  F0D8         	call	_terminal_printNewline	;wreg free
 17125                           
 17126                           ;ring_buffer_LUT.c: 393: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 17127  01093E  0E01               	movlw	1
 17128  010940  0101               	movlb	1	; () banked
 17129  010942  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17130  010944  0E02               	movlw	2
 17131  010946  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17132  010948  0E00               	movlw	0
 17133  01094A  EC33  F0AA         	call	_terminal_textAttributes
 17134                           
 17135                           ;ring_buffer_LUT.c: 394: printf("Only enable dimming if you are completely sure the load
      +                           is compatible with a solid state dimming circuit");
 17136  01094E  0E34               	movlw	low STR_107
 17137  010950  0101               	movlb	1	; () banked
 17138  010952  6FAC               	movwf	printf@f& (0+255),b
 17139  010954  0EF0               	movlw	high STR_107
 17140  010956  6FAD               	movwf	(printf@f+1)& (0+255),b
 17141  010958  ECB9  F0D4         	call	_printf	;wreg free
 17142                           
 17143                           ;ring_buffer_LUT.c: 395: terminal_textAttributesReset();
 17144  01095C  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17145                           
 17146                           ;ring_buffer_LUT.c: 396: terminal_printNewline();
 17147  010960  EC62  F0D8         	call	_terminal_printNewline	;wreg free
 17148                           
 17149                           ;ring_buffer_LUT.c: 397: terminal_textAttributes(BLACK, YELLOW, NORMAL);
 17150  010964  0E03               	movlw	3
 17151  010966  0101               	movlb	1	; () banked
 17152  010968  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17153  01096A  0E00               	movlw	0
 17154  01096C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17155  01096E  0E00               	movlw	0
 17156  010970  EC33  F0AA         	call	_terminal_textAttributes
 17157                           
 17158                           ;ring_buffer_LUT.c: 398: printf("Are you sure you'd like to enable output dimming?\n\r")
      +                          ;
 17159  010974  0EEC               	movlw	low STR_108
 17160  010976  0101               	movlb	1	; () banked
 17161  010978  6FAC               	movwf	printf@f& (0+255),b
 17162  01097A  0EF5               	movlw	high STR_108
 17163  01097C  6FAD               	movwf	(printf@f+1)& (0+255),b
 17164  01097E  ECB9  F0D4         	call	_printf	;wreg free
 17165                           
 17166                           ;ring_buffer_LUT.c: 399: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17167  010982  0E00               	movlw	0
 17168  010984  0101               	movlb	1	; () banked
 17169  010986  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17170  010988  0E00               	movlw	0
 17171  01098A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17172  01098C  0E03               	movlw	3
 17173  01098E  EC33  F0AA         	call	_terminal_textAttributes
 17174                           
 17175                           ;ring_buffer_LUT.c: 400: printf("If yes, reply 'Enable Dimming Y' on the next line:\n\r"
      +                          );
 17176  010992  0E4D               	movlw	low STR_109
 17177  010994  0101               	movlb	1	; () banked
 17178  010996  6FAC               	movwf	printf@f& (0+255),b
 17179  010998  0EF5               	movlw	high STR_109
 17180  01099A  6FAD               	movwf	(printf@f+1)& (0+255),b
 17181  01099C  ECB9  F0D4         	call	_printf	;wreg free
 17182                           
 17183                           ;ring_buffer_LUT.c: 401: terminal_textAttributesReset();
 17184  0109A0  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17185                           
 17186                           ;ring_buffer_LUT.c: 403: }
 17187  0109A4  0012               	return	
 17188  0109A6                     l1665:
 17189                           
 17190                           ;ring_buffer_LUT.c: 406: else if ((0 == strcmp(line, "Enable Dimming Y"))) {
 17191  0109A6  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17192  0109AA  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17193  0109AE  0E3F               	movlw	low STR_110
 17194  0109B0  0101               	movlb	1	; () banked
 17195  0109B2  6F19               	movwf	strcmp@s2& (0+255),b
 17196  0109B4  0EFD               	movlw	high STR_110
 17197  0109B6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17198  0109B8  ECEE  F0D1         	call	_strcmp	;wreg free
 17199  0109BC  0101               	movlb	1	; () banked
 17200  0109BE  5117               	movf	?_strcmp& (0+255),w,b
 17201  0109C0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17202  0109C2  A4D8               	btfss	status,2,c
 17203  0109C4  D015               	goto	l1667
 17204                           
 17205                           ; BSR set to: 1
 17206                           ;ring_buffer_LUT.c: 409: LATGbits.LATG0 = 0;
 17207  0109C6  907F               	bcf	3967,0,c	;volatile
 17208                           
 17209                           ;ring_buffer_LUT.c: 412: PIE0bits.INT0IE = 1;
 17210  0109C8  010E               	movlb	14	; () banked
 17211  0109CA  8129               	bsf	41,0,b	;volatile
 17212                           
 17213                           ; BSR set to: 14
 17214                           ;ring_buffer_LUT.c: 414: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17215  0109CC  0E00               	movlw	0
 17216  0109CE  0101               	movlb	1	; () banked
 17217  0109D0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17218  0109D2  0E00               	movlw	0
 17219  0109D4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17220  0109D6  0E02               	movlw	2
 17221  0109D8  EC33  F0AA         	call	_terminal_textAttributes
 17222                           
 17223                           ;ring_buffer_LUT.c: 415: printf("Output dimming has been enabled\n\r");
 17224  0109DC  0EAB               	movlw	low STR_111
 17225  0109DE  0101               	movlb	1	; () banked
 17226  0109E0  6FAC               	movwf	printf@f& (0+255),b
 17227  0109E2  0EF9               	movlw	high STR_111
 17228  0109E4  6FAD               	movwf	(printf@f+1)& (0+255),b
 17229  0109E6  ECB9  F0D4         	call	_printf	;wreg free
 17230                           
 17231                           ;ring_buffer_LUT.c: 416: terminal_textAttributesReset();
 17232  0109EA  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17233                           
 17234                           ;ring_buffer_LUT.c: 418: }
 17235  0109EE  0012               	return	
 17236  0109F0                     l1667:
 17237                           
 17238                           ;ring_buffer_LUT.c: 421: else if ((0 == strcmp(line, "Disable Dimming"))) {
 17239  0109F0  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17240  0109F4  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17241  0109F8  0ED2               	movlw	low STR_112
 17242  0109FA  0101               	movlb	1	; () banked
 17243  0109FC  6F19               	movwf	strcmp@s2& (0+255),b
 17244  0109FE  0EFD               	movlw	high STR_112
 17245  010A00  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17246  010A02  ECEE  F0D1         	call	_strcmp	;wreg free
 17247  010A06  0101               	movlb	1	; () banked
 17248  010A08  5117               	movf	?_strcmp& (0+255),w,b
 17249  010A0A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17250  010A0C  A4D8               	btfss	status,2,c
 17251  010A0E  D017               	goto	l1669
 17252                           
 17253                           ; BSR set to: 1
 17254                           ;ring_buffer_LUT.c: 424: LATGbits.LATG0 = 1;
 17255  010A10  807F               	bsf	3967,0,c	;volatile
 17256                           
 17257                           ;ring_buffer_LUT.c: 427: PIE0bits.INT0IE = 0;
 17258  010A12  010E               	movlb	14	; () banked
 17259  010A14  9129               	bcf	41,0,b	;volatile
 17260                           
 17261                           ; BSR set to: 14
 17262                           ;ring_buffer_LUT.c: 428: TMR5_StopTimer();
 17263  010A16  ECEA  F0D8         	call	_TMR5_StopTimer	;wreg free
 17264                           
 17265                           ;ring_buffer_LUT.c: 430: terminal_textAttributes(RED, BLACK, NORMAL);
 17266  010A1A  0E00               	movlw	0
 17267  010A1C  0101               	movlb	1	; () banked
 17268  010A1E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17269  010A20  0E00               	movlw	0
 17270  010A22  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17271  010A24  0E01               	movlw	1
 17272  010A26  EC33  F0AA         	call	_terminal_textAttributes
 17273                           
 17274                           ;ring_buffer_LUT.c: 431: printf("TRIAC output dimming has been disabled\n\r");
 17275  010A2A  0E81               	movlw	low STR_113
 17276  010A2C  0101               	movlb	1	; () banked
 17277  010A2E  6FAC               	movwf	printf@f& (0+255),b
 17278  010A30  0EF8               	movlw	high STR_113
 17279  010A32  6FAD               	movwf	(printf@f+1)& (0+255),b
 17280  010A34  ECB9  F0D4         	call	_printf	;wreg free
 17281                           
 17282                           ;ring_buffer_LUT.c: 432: terminal_textAttributesReset();
 17283  010A38  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17284                           
 17285                           ;ring_buffer_LUT.c: 434: }
 17286  010A3C  0012               	return	
 17287  010A3E                     l1669:
 17288                           
 17289                           ;ring_buffer_LUT.c: 437: else if ((0 == strcmp(line, "Enable Load"))) {
 17290  010A3E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17291  010A42  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17292  010A46  0E12               	movlw	low STR_114
 17293  010A48  0101               	movlb	1	; () banked
 17294  010A4A  6F19               	movwf	strcmp@s2& (0+255),b
 17295  010A4C  0EFF               	movlw	high STR_114
 17296  010A4E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17297  010A50  ECEE  F0D1         	call	_strcmp	;wreg free
 17298  010A54  0101               	movlb	1	; () banked
 17299  010A56  5117               	movf	?_strcmp& (0+255),w,b
 17300  010A58  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17301  010A5A  A4D8               	btfss	status,2,c
 17302  010A5C  D014               	goto	l1671
 17303                           
 17304                           ; BSR set to: 1
 17305                           ;ring_buffer_LUT.c: 439: LATGbits.LATG0 = 1;
 17306  010A5E  807F               	bsf	3967,0,c	;volatile
 17307                           
 17308                           ;ring_buffer_LUT.c: 440: LATGbits.LATG1 = 0;
 17309  010A60  927F               	bcf	3967,1,c	;volatile
 17310                           
 17311                           ;ring_buffer_LUT.c: 441: load_enable = 1;
 17312  010A62  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17313                           
 17314                           ; BSR set to: 1
 17315                           ;ring_buffer_LUT.c: 443: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17316  010A64  0E00               	movlw	0
 17317  010A66  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17318  010A68  0E00               	movlw	0
 17319  010A6A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17320  010A6C  0E02               	movlw	2
 17321  010A6E  EC33  F0AA         	call	_terminal_textAttributes
 17322                           
 17323                           ;ring_buffer_LUT.c: 444: printf("Load has been enabled, dimming disabled\n\r");
 17324  010A72  0E04               	movlw	low STR_115
 17325  010A74  0101               	movlb	1	; () banked
 17326  010A76  6FAC               	movwf	printf@f& (0+255),b
 17327  010A78  0EF8               	movlw	high STR_115
 17328  010A7A  6FAD               	movwf	(printf@f+1)& (0+255),b
 17329  010A7C  ECB9  F0D4         	call	_printf	;wreg free
 17330                           
 17331                           ;ring_buffer_LUT.c: 445: terminal_textAttributesReset();
 17332  010A80  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17333                           
 17334                           ;ring_buffer_LUT.c: 447: }
 17335  010A84  0012               	return	
 17336  010A86                     l1671:
 17337                           
 17338                           ;ring_buffer_LUT.c: 450: else if ((0 == strcmp(line, "Load Enabled?"))) {
 17339  010A86  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17340  010A8A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17341  010A8E  0E59               	movlw	low STR_116
 17342  010A90  0101               	movlb	1	; () banked
 17343  010A92  6F19               	movwf	strcmp@s2& (0+255),b
 17344  010A94  0EFE               	movlw	high STR_116
 17345  010A96  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17346  010A98  ECEE  F0D1         	call	_strcmp	;wreg free
 17347  010A9C  0101               	movlb	1	; () banked
 17348  010A9E  5117               	movf	?_strcmp& (0+255),w,b
 17349  010AA0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17350  010AA2  A4D8               	btfss	status,2,c
 17351  010AA4  D025               	goto	l1673
 17352                           
 17353                           ; BSR set to: 1
 17354                           ;ring_buffer_LUT.c: 452: if (load_enable == 1) {
 17355  010AA6  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17356  010AA8  D011               	goto	l1674
 17357                           
 17358                           ; BSR set to: 1
 17359                           ;ring_buffer_LUT.c: 454: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17360  010AAA  0E00               	movlw	0
 17361  010AAC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17362  010AAE  0E00               	movlw	0
 17363  010AB0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17364  010AB2  0E02               	movlw	2
 17365  010AB4  EC33  F0AA         	call	_terminal_textAttributes
 17366                           
 17367                           ;ring_buffer_LUT.c: 455: printf("Load is currently enabled\n\r");
 17368  010AB8  0E83               	movlw	low STR_117
 17369  010ABA  0101               	movlb	1	; () banked
 17370  010ABC  6FAC               	movwf	printf@f& (0+255),b
 17371  010ABE  0EFB               	movlw	high STR_117
 17372  010AC0  6FAD               	movwf	(printf@f+1)& (0+255),b
 17373  010AC2  ECB9  F0D4         	call	_printf	;wreg free
 17374                           
 17375                           ;ring_buffer_LUT.c: 456: terminal_textAttributesReset();
 17376  010AC6  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17377                           
 17378                           ;ring_buffer_LUT.c: 458: }
 17379  010ACA  0012               	return	
 17380  010ACC                     l1674:
 17381                           
 17382                           ;ring_buffer_LUT.c: 460: else {
 17383                           ;ring_buffer_LUT.c: 462: terminal_textAttributes(RED, BLACK, NORMAL);
 17384  010ACC  0E00               	movlw	0
 17385  010ACE  0101               	movlb	1	; () banked
 17386  010AD0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17387  010AD2  0E00               	movlw	0
 17388  010AD4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17389  010AD6  0E01               	movlw	1
 17390  010AD8  EC33  F0AA         	call	_terminal_textAttributes
 17391                           
 17392                           ;ring_buffer_LUT.c: 463: printf("Load is currently disabled\n\r");
 17393  010ADC  0E10               	movlw	low STR_118
 17394  010ADE  0101               	movlb	1	; () banked
 17395  010AE0  6FAC               	movwf	printf@f& (0+255),b
 17396  010AE2  0EFB               	movlw	high STR_118
 17397  010AE4  6FAD               	movwf	(printf@f+1)& (0+255),b
 17398  010AE6  ECB9  F0D4         	call	_printf	;wreg free
 17399                           
 17400                           ;ring_buffer_LUT.c: 464: terminal_textAttributesReset();
 17401  010AEA  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17402                           
 17403                           ;ring_buffer_LUT.c: 467: }
 17404                           ;ring_buffer_LUT.c: 469: }
 17405  010AEE  0012               	return	
 17406  010AF0                     l1673:
 17407                           
 17408                           ;ring_buffer_LUT.c: 472: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 17409  010AF0  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17410  010AF4  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17411  010AF8  0E0C               	movlw	low STR_119
 17412  010AFA  0101               	movlb	1	; () banked
 17413  010AFC  6F19               	movwf	strcmp@s2& (0+255),b
 17414  010AFE  0EFD               	movlw	high STR_119
 17415  010B00  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17416  010B02  ECEE  F0D1         	call	_strcmp	;wreg free
 17417  010B06  0101               	movlb	1	; () banked
 17418  010B08  5117               	movf	?_strcmp& (0+255),w,b
 17419  010B0A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17420  010B0C  A4D8               	btfss	status,2,c
 17421  010B0E  D039               	goto	l1677
 17422                           
 17423                           ; BSR set to: 1
 17424                           ;ring_buffer_LUT.c: 474: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 17425  010B10  B25E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17426                           
 17427                           ; BSR set to: 1
 17428  010B12  B07F               	btfsc	3967,0,c	;volatile
 17429  010B14  D011               	goto	l1678
 17430                           
 17431                           ; BSR set to: 1
 17432                           ;ring_buffer_LUT.c: 476: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17433  010B16  0E00               	movlw	0
 17434  010B18  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17435  010B1A  0E00               	movlw	0
 17436  010B1C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17437  010B1E  0E02               	movlw	2
 17438  010B20  EC33  F0AA         	call	_terminal_textAttributes
 17439                           
 17440                           ;ring_buffer_LUT.c: 477: printf("Dimming is currently enabled\n\r");
 17441  010B24  0E95               	movlw	low STR_120
 17442  010B26  0101               	movlb	1	; () banked
 17443  010B28  6FAC               	movwf	printf@f& (0+255),b
 17444  010B2A  0EFA               	movlw	high STR_120
 17445  010B2C  6FAD               	movwf	(printf@f+1)& (0+255),b
 17446  010B2E  ECB9  F0D4         	call	_printf	;wreg free
 17447                           
 17448                           ;ring_buffer_LUT.c: 478: terminal_textAttributesReset();
 17449  010B32  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17450                           
 17451                           ;ring_buffer_LUT.c: 480: }
 17452  010B36  0012               	return	
 17453  010B38                     l1678:
 17454                           
 17455                           ; BSR set to: 1
 17456                           ;ring_buffer_LUT.c: 482: else if (load_enable == 1){
 17457  010B38  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17458  010B3A  D011               	goto	l1680
 17459                           
 17460                           ; BSR set to: 1
 17461                           ;ring_buffer_LUT.c: 484: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17462  010B3C  0E00               	movlw	0
 17463  010B3E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17464  010B40  0E00               	movlw	0
 17465  010B42  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17466  010B44  0E03               	movlw	3
 17467  010B46  EC33  F0AA         	call	_terminal_textAttributes
 17468                           
 17469                           ;ring_buffer_LUT.c: 485: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 17470  010B4A  0E82               	movlw	low STR_121
 17471  010B4C  0101               	movlb	1	; () banked
 17472  010B4E  6FAC               	movwf	printf@f& (0+255),b
 17473  010B50  0EF5               	movlw	high STR_121
 17474  010B52  6FAD               	movwf	(printf@f+1)& (0+255),b
 17475  010B54  ECB9  F0D4         	call	_printf	;wreg free
 17476                           
 17477                           ;ring_buffer_LUT.c: 486: terminal_textAttributesReset();
 17478  010B58  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17479                           
 17480                           ;ring_buffer_LUT.c: 488: }
 17481  010B5C  0012               	return	
 17482  010B5E                     l1680:
 17483                           
 17484                           ;ring_buffer_LUT.c: 490: else {
 17485                           ;ring_buffer_LUT.c: 492: terminal_textAttributes(RED, BLACK, NORMAL);
 17486  010B5E  0E00               	movlw	0
 17487  010B60  0101               	movlb	1	; () banked
 17488  010B62  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17489  010B64  0E00               	movlw	0
 17490  010B66  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17491  010B68  0E01               	movlw	1
 17492  010B6A  EC33  F0AA         	call	_terminal_textAttributes
 17493                           
 17494                           ;ring_buffer_LUT.c: 493: printf("Load and dimming are currently disabled\n\r");
 17495  010B6E  0E2E               	movlw	low STR_122
 17496  010B70  0101               	movlb	1	; () banked
 17497  010B72  6FAC               	movwf	printf@f& (0+255),b
 17498  010B74  0EF8               	movlw	high STR_122
 17499  010B76  6FAD               	movwf	(printf@f+1)& (0+255),b
 17500  010B78  ECB9  F0D4         	call	_printf	;wreg free
 17501                           
 17502                           ;ring_buffer_LUT.c: 494: terminal_textAttributesReset();
 17503  010B7C  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17504                           
 17505                           ;ring_buffer_LUT.c: 496: }
 17506                           ;ring_buffer_LUT.c: 500: }
 17507  010B80  0012               	return	
 17508  010B82                     l1677:
 17509                           
 17510                           ;ring_buffer_LUT.c: 505: else if ((0 == strcmp(line, "Disable Load"))) {
 17511  010B82  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17512  010B86  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17513  010B8A  0ED3               	movlw	low STR_123
 17514  010B8C  0101               	movlb	1	; () banked
 17515  010B8E  6F19               	movwf	strcmp@s2& (0+255),b
 17516  010B90  0EFE               	movlw	high STR_123
 17517  010B92  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17518  010B94  ECEE  F0D1         	call	_strcmp	;wreg free
 17519  010B98  0101               	movlb	1	; () banked
 17520  010B9A  5117               	movf	?_strcmp& (0+255),w,b
 17521  010B9C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17522  010B9E  A4D8               	btfss	status,2,c
 17523  010BA0  D014               	goto	l1683
 17524                           
 17525                           ; BSR set to: 1
 17526                           ;ring_buffer_LUT.c: 507: LATGbits.LATG1 = 0;
 17527  010BA2  927F               	bcf	3967,1,c	;volatile
 17528                           
 17529                           ;ring_buffer_LUT.c: 508: LATGbits.LATG0 = 0;
 17530  010BA4  907F               	bcf	3967,0,c	;volatile
 17531                           
 17532                           ;ring_buffer_LUT.c: 509: load_enable = 0;
 17533  010BA6  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17534                           
 17535                           ; BSR set to: 1
 17536                           ;ring_buffer_LUT.c: 511: terminal_textAttributes(RED, BLACK, NORMAL);
 17537  010BA8  0E00               	movlw	0
 17538  010BAA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17539  010BAC  0E00               	movlw	0
 17540  010BAE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17541  010BB0  0E01               	movlw	1
 17542  010BB2  EC33  F0AA         	call	_terminal_textAttributes
 17543                           
 17544                           ;ring_buffer_LUT.c: 512: printf("Load has been disabled\n\r");
 17545  010BB6  0ED4               	movlw	low STR_124
 17546  010BB8  0101               	movlb	1	; () banked
 17547  010BBA  6FAC               	movwf	printf@f& (0+255),b
 17548  010BBC  0EFB               	movlw	high STR_124
 17549  010BBE  6FAD               	movwf	(printf@f+1)& (0+255),b
 17550  010BC0  ECB9  F0D4         	call	_printf	;wreg free
 17551                           
 17552                           ;ring_buffer_LUT.c: 513: terminal_textAttributesReset();
 17553  010BC4  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17554                           
 17555                           ;ring_buffer_LUT.c: 515: }
 17556  010BC8  0012               	return	
 17557  010BCA                     l1683:
 17558                           
 17559                           ;ring_buffer_LUT.c: 518: else if ((strstr(line, "Set Dimming Percentage: "))) {
 17560  010BCA  C1BF  F126         	movff	ringBufferLUT@line,strstr@s1
 17561  010BCE  C1C0  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 17562  010BD2  0EED               	movlw	low STR_125
 17563  010BD4  0101               	movlb	1	; () banked
 17564  010BD6  6F28               	movwf	strstr@s2& (0+255),b
 17565  010BD8  0EFB               	movlw	high STR_125
 17566  010BDA  6F29               	movwf	(strstr@s2+1)& (0+255),b
 17567  010BDC  EC05  F0CD         	call	_strstr	;wreg free
 17568  010BE0  0101               	movlb	1	; () banked
 17569  010BE2  5126               	movf	?_strstr& (0+255),w,b
 17570  010BE4  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 17571  010BE6  B4D8               	btfsc	status,2,c
 17572  010BE8  D127               	goto	l1685
 17573                           
 17574                           ; BSR set to: 1
 17575                           ;ring_buffer_LUT.c: 521: char arg_buff[3];
 17576                           ;ring_buffer_LUT.c: 524: for (int index = 0; index < 3; index++) {
 17577  010BEA  0E00               	movlw	0
 17578  010BEC  0102               	movlb	2	; () banked
 17579  010BEE  6FD0               	movwf	(ringBufferLUT@index+1)& (0+255),b
 17580  010BF0  0E00               	movlw	0
 17581  010BF2  6FCF               	movwf	ringBufferLUT@index& (0+255),b
 17582  010BF4                     l22879:
 17583                           
 17584                           ; BSR set to: 2
 17585  010BF4  BFD0               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 17586  010BF6  D006               	goto	l1686
 17587  010BF8  51D0               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 17588  010BFA  E11F               	bnz	l22889
 17589  010BFC  0E03               	movlw	3
 17590  010BFE  5DCF               	subwf	ringBufferLUT@index& (0+255),w,b
 17591  010C00  B0D8               	btfsc	status,0,c
 17592  010C02  D01B               	goto	u33120
 17593  010C04                     l1686:
 17594                           
 17595                           ; BSR set to: 2
 17596                           ;ring_buffer_LUT.c: 526: arg_buff[index] = line[index + 24];
 17597                           
 17598                           ; BSR set to: 2
 17599  010C04  0E18               	movlw	24
 17600  010C06  25CF               	addwf	ringBufferLUT@index& (0+255),w,b
 17601  010C08  0101               	movlb	1	; () banked
 17602  010C0A  6FC1               	movwf	??_ringBufferLUT& (0+255),b
 17603  010C0C  0E00               	movlw	0
 17604  010C0E  0102               	movlb	2	; () banked
 17605  010C10  21D0               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 17606  010C12  0101               	movlb	1	; () banked
 17607  010C14  6FC2               	movwf	(??_ringBufferLUT+1)& (0+255),b
 17608  010C16  51C1               	movf	??_ringBufferLUT& (0+255),w,b
 17609  010C18  25BF               	addwf	ringBufferLUT@line& (0+255),w,b
 17610  010C1A  6ED9               	movwf	fsr2l,c
 17611  010C1C  51C2               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 17612  010C1E  21C0               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 17613  010C20  6EDA               	movwf	fsr2h,c
 17614  010C22  0EB0               	movlw	low ringBufferLUT@arg_buff
 17615  010C24  0102               	movlb	2	; () banked
 17616  010C26  25CF               	addwf	ringBufferLUT@index& (0+255),w,b
 17617  010C28  6EE1               	movwf	fsr1l,c
 17618  010C2A  0E02               	movlw	high ringBufferLUT@arg_buff
 17619  010C2C  21D0               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 17620  010C2E  6EE2               	movwf	fsr1h,c
 17621  010C30  CFDF FFE7          	movff	indf2,indf1
 17622                           
 17623                           ; BSR set to: 2
 17624  010C34  4BCF               	infsnz	ringBufferLUT@index& (0+255),f,b
 17625  010C36  2BD0               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 17626  010C38  D7DD               	goto	l22879
 17627  010C3A                     u33120:
 17628  010C3A                     l22889:
 17629                           
 17630                           ; BSR set to: 2
 17631                           ;ring_buffer_LUT.c: 528: }
 17632                           ;ring_buffer_LUT.c: 530: int percentage = atoi(arg_buff);
 17633  010C3A  0EB0               	movlw	low ringBufferLUT@arg_buff
 17634  010C3C  0101               	movlb	1	; () banked
 17635  010C3E  6F1D               	movwf	atoi@s& (0+255),b
 17636  010C40  0E02               	movlw	high ringBufferLUT@arg_buff
 17637  010C42  6F1E               	movwf	(atoi@s+1)& (0+255),b
 17638  010C44  ECED  F0C9         	call	_atoi	;wreg free
 17639  010C48  C11D  F2D1         	movff	?_atoi,ringBufferLUT@percentage
 17640  010C4C  C11E  F2D2         	movff	?_atoi+1,ringBufferLUT@percentage+1
 17641                           
 17642                           ;ring_buffer_LUT.c: 533: if ( (percentage >= 100) ||
 17643                           ;ring_buffer_LUT.c: 534: (percentage <= 0)) {
 17644  010C50  0102               	movlb	2	; () banked
 17645  010C52  BFD2               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 17646  010C54  D006               	goto	u33130
 17647  010C56  51D2               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 17648  010C58  E10B               	bnz	l22895
 17649  010C5A  0E64               	movlw	100
 17650  010C5C  5DD1               	subwf	ringBufferLUT@percentage& (0+255),w,b
 17651  010C5E  B0D8               	btfsc	status,0,c
 17652  010C60  D007               	goto	u33140
 17653  010C62                     u33130:
 17654                           
 17655                           ; BSR set to: 2
 17656  010C62  BFD2               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 17657  010C64  D005               	goto	u33140
 17658  010C66  51D2               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 17659  010C68  E12B               	bnz	l22897
 17660  010C6A  05D1               	decf	ringBufferLUT@percentage& (0+255),w,b
 17661  010C6C  B0D8               	btfsc	status,0,c
 17662  010C6E  D028               	goto	l1688
 17663  010C70                     u33140:
 17664  010C70                     l22895:
 17665                           
 17666                           ; BSR set to: 2
 17667                           ;ring_buffer_LUT.c: 536: terminal_textAttributes(RED, BLACK, NORMAL);
 17668  010C70  0E00               	movlw	0
 17669  010C72  0101               	movlb	1	; () banked
 17670  010C74  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17671  010C76  0E00               	movlw	0
 17672  010C78  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17673  010C7A  0E01               	movlw	1
 17674  010C7C  EC33  F0AA         	call	_terminal_textAttributes
 17675                           
 17676                           ;ring_buffer_LUT.c: 537: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 17677  010C80  0E5A               	movlw	low STR_126
 17678  010C82  0101               	movlb	1	; () banked
 17679  010C84  6FAC               	movwf	printf@f& (0+255),b
 17680  010C86  0EF1               	movlw	high STR_126
 17681  010C88  6FAD               	movwf	(printf@f+1)& (0+255),b
 17682  010C8A  ECB9  F0D4         	call	_printf	;wreg free
 17683                           
 17684                           ;ring_buffer_LUT.c: 538: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17685  010C8E  0E00               	movlw	0
 17686  010C90  0101               	movlb	1	; () banked
 17687  010C92  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17688  010C94  0E00               	movlw	0
 17689  010C96  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17690  010C98  0E03               	movlw	3
 17691  010C9A  EC33  F0AA         	call	_terminal_textAttributes
 17692                           
 17693                           ;ring_buffer_LUT.c: 539: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 17694  010C9E  0E9D               	movlw	low STR_127
 17695  010CA0  0101               	movlb	1	; () banked
 17696  010CA2  6FAC               	movwf	printf@f& (0+255),b
 17697  010CA4  0EF0               	movlw	high STR_127
 17698  010CA6  6FAD               	movwf	(printf@f+1)& (0+255),b
 17699  010CA8  ECB9  F0D4         	call	_printf	;wreg free
 17700                           
 17701                           ;ring_buffer_LUT.c: 540: printf("Enter 'Help' for list of available commands\n\r");
 17702  010CAC  0E7B               	movlw	low STR_128
 17703  010CAE  0101               	movlb	1	; () banked
 17704  010CB0  6FAC               	movwf	printf@f& (0+255),b
 17705  010CB2  0EF7               	movlw	high STR_128
 17706  010CB4  6FAD               	movwf	(printf@f+1)& (0+255),b
 17707  010CB6  ECB9  F0D4         	call	_printf	;wreg free
 17708                           
 17709                           ;ring_buffer_LUT.c: 541: terminal_textAttributesReset();
 17710  010CBA  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17711                           
 17712                           ;ring_buffer_LUT.c: 543: }
 17713  010CBE  0012               	return	
 17714  010CC0                     l1688:
 17715  010CC0                     l22897:
 17716                           
 17717                           ;ring_buffer_LUT.c: 546: else {
 17718                           ;ring_buffer_LUT.c: 549: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 17719  010CC0  0E00               	movlw	0
 17720  010CC2  0101               	movlb	1	; () banked
 17721  010CC4  6F41               	movwf	___fldiv@a& (0+255),b
 17722  010CC6  0E00               	movlw	0
 17723  010CC8  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 17724  010CCA  0EC8               	movlw	200
 17725  010CCC  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 17726  010CCE  0E42               	movlw	66
 17727  010CD0  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 17728  010CD2  0E00               	movlw	0
 17729  010CD4  6F2D               	movwf	___fladd@a& (0+255),b
 17730  010CD6  0E00               	movlw	0
 17731  010CD8  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 17732  010CDA  0EC8               	movlw	200
 17733  010CDC  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 17734  010CDE  0E42               	movlw	66
 17735  010CE0  6F30               	movwf	(___fladd@a+3)& (0+255),b
 17736  010CE2  C2D1  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 17737  010CE6  C2D2  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 17738  010CEA  0E00               	movlw	0
 17739  010CEC  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 17740  010CEE  0EFF               	movlw	-1
 17741  010CF0  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 17742  010CF2  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 17743  010CF4  0E01               	movlw	1
 17744  010CF6  ECE7  F0C0         	call	___xxtofl
 17745  010CFA  C117  F125         	movff	?___xxtofl,___flneg@f1
 17746  010CFE  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 17747  010D02  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 17748  010D06  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 17749  010D0A  EC59  F0D6         	call	___flneg	;wreg free
 17750  010D0E  C125  F129         	movff	?___flneg,___fladd@b
 17751  010D12  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 17752  010D16  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 17753  010D1A  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 17754  010D1E  EC38  F0AF         	call	___fladd	;wreg free
 17755  010D22  C129  F13D         	movff	?___fladd,___fldiv@b
 17756  010D26  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 17757  010D2A  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 17758  010D2E  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 17759  010D32  EC3C  F0B8         	call	___fldiv	;wreg free
 17760  010D36  C13D  F156         	movff	?___fldiv,___flmul@b
 17761  010D3A  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 17762  010D3E  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 17763  010D42  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 17764  010D46  0EDB               	movlw	219
 17765  010D48  0101               	movlb	1	; () banked
 17766  010D4A  6F5A               	movwf	___flmul@a& (0+255),b
 17767  010D4C  0E0F               	movlw	15
 17768  010D4E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17769  010D50  0E49               	movlw	73
 17770  010D52  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17771  010D54  0E40               	movlw	64
 17772  010D56  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17773  010D58  ECE7  F0AB         	call	___flmul	;wreg free
 17774  010D5C  C156  F0F7         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 17775  010D60  C157  F0F8         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 17776  010D64  C158  F0F9         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 17777  010D68  C159  F0FA         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 17778                           
 17779                           ;ring_buffer_LUT.c: 550: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 17780  010D6C  C0F7  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 17781  010D70  C0F8  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 17782  010D74  C0F9  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 17783  010D78  C0FA  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 17784  010D7C  0EE1               	movlw	225
 17785  010D7E  0101               	movlb	1	; () banked
 17786  010D80  6F5A               	movwf	___flmul@a& (0+255),b
 17787  010D82  0E2E               	movlw	46
 17788  010D84  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17789  010D86  0E65               	movlw	101
 17790  010D88  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17791  010D8A  0E42               	movlw	66
 17792  010D8C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17793  010D8E  ECE7  F0AB         	call	___flmul	;wreg free
 17794  010D92  C156  F2B3         	movff	?___flmul,ringBufferLUT@angle_degrees
 17795  010D96  C157  F2B4         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 17796  010D9A  C158  F2B5         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 17797  010D9E  C159  F2B6         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 17798                           
 17799                           ;ring_buffer_LUT.c: 551: dimming_period = (percentage) * (0xFFFF / 100);
 17800  010DA2  C2D1  F117         	movff	ringBufferLUT@percentage,___wmul@multiplier
 17801  010DA6  C2D2  F118         	movff	ringBufferLUT@percentage+1,___wmul@multiplier+1
 17802  010DAA  0E02               	movlw	2
 17803  010DAC  0101               	movlb	1	; () banked
 17804  010DAE  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17805  010DB0  0E8F               	movlw	143
 17806  010DB2  6F19               	movwf	___wmul@multiplicand& (0+255),b
 17807  010DB4  ECB5  F0D6         	call	___wmul	;wreg free
 17808  010DB8  C117  F1E7         	movff	?___wmul,_dimming_period	;volatile
 17809  010DBC  C118  F1E8         	movff	?___wmul+1,_dimming_period+1	;volatile
 17810                           
 17811                           ;ring_buffer_LUT.c: 553: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17812  010DC0  0E00               	movlw	0
 17813  010DC2  0101               	movlb	1	; () banked
 17814  010DC4  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17815  010DC6  0E00               	movlw	0
 17816  010DC8  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17817  010DCA  0E02               	movlw	2
 17818  010DCC  EC33  F0AA         	call	_terminal_textAttributes
 17819                           
 17820                           ;ring_buffer_LUT.c: 554: printf("Dimming has been set to %d percent\n\r", percentage);
 17821  010DD0  0E1B               	movlw	low STR_129
 17822  010DD2  0101               	movlb	1	; () banked
 17823  010DD4  6FAC               	movwf	printf@f& (0+255),b
 17824  010DD6  0EF9               	movlw	high STR_129
 17825  010DD8  6FAD               	movwf	(printf@f+1)& (0+255),b
 17826  010DDA  C2D1  F1AE         	movff	ringBufferLUT@percentage,?_printf+2
 17827  010DDE  C2D2  F1AF         	movff	ringBufferLUT@percentage+1,?_printf+3
 17828  010DE2  ECB9  F0D4         	call	_printf	;wreg free
 17829                           
 17830                           ;ring_buffer_LUT.c: 555: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 17831  010DE6  0ED5               	movlw	low STR_130
 17832  010DE8  0101               	movlb	1	; () banked
 17833  010DEA  6FAC               	movwf	printf@f& (0+255),b
 17834  010DEC  0EF2               	movlw	high STR_130
 17835  010DEE  6FAD               	movwf	(printf@f+1)& (0+255),b
 17836  010DF0  C0F7  F1AE         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 17837  010DF4  C0F8  F1AF         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 17838  010DF8  C0F9  F1B0         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 17839  010DFC  C0FA  F1B1         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 17840  010E00  C2B3  F1B2         	movff	ringBufferLUT@angle_degrees,?_printf+6
 17841  010E04  C2B4  F1B3         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 17842  010E08  C2B5  F1B4         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 17843  010E0C  C2B6  F1B5         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 17844  010E10  ECB9  F0D4         	call	_printf	;wreg free
 17845                           
 17846                           ;ring_buffer_LUT.c: 556: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 17847  010E14  0E4E               	movlw	low STR_131
 17848  010E16  0101               	movlb	1	; () banked
 17849  010E18  6FAC               	movwf	printf@f& (0+255),b
 17850  010E1A  0EF2               	movlw	high STR_131
 17851  010E1C  6FAD               	movwf	(printf@f+1)& (0+255),b
 17852  010E1E  C1E7  F1AE         	movff	_dimming_period,?_printf+2	;volatile
 17853  010E22  C1E8  F1AF         	movff	_dimming_period+1,?_printf+3	;volatile
 17854  010E26  C1E7  F1B0         	movff	_dimming_period,?_printf+4	;volatile
 17855  010E2A  C1E8  F1B1         	movff	_dimming_period+1,?_printf+5	;volatile
 17856  010E2E  ECB9  F0D4         	call	_printf	;wreg free
 17857                           
 17858                           ;ring_buffer_LUT.c: 557: terminal_textAttributesReset();
 17859  010E32  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17860                           
 17861                           ;ring_buffer_LUT.c: 559: }
 17862                           ;ring_buffer_LUT.c: 561: }
 17863  010E36  0012               	return	
 17864  010E38                     l1685:
 17865                           
 17866                           ;ring_buffer_LUT.c: 564: else if((0 == strcmp(line, "Device On Time?"))) {
 17867  010E38  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17868  010E3C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17869  010E40  0EA2               	movlw	low STR_132
 17870  010E42  0101               	movlb	1	; () banked
 17871  010E44  6F19               	movwf	strcmp@s2& (0+255),b
 17872  010E46  0EFD               	movlw	high STR_132
 17873  010E48  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17874  010E4A  ECEE  F0D1         	call	_strcmp	;wreg free
 17875  010E4E  0101               	movlb	1	; () banked
 17876  010E50  5117               	movf	?_strcmp& (0+255),w,b
 17877  010E52  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17878  010E54  A4D8               	btfss	status,2,c
 17879  010E56  D019               	goto	l1693
 17880                           
 17881                           ; BSR set to: 1
 17882                           ;ring_buffer_LUT.c: 566: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17883  010E58  0E00               	movlw	0
 17884  010E5A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17885  010E5C  0E00               	movlw	0
 17886  010E5E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17887  010E60  0E02               	movlw	2
 17888  010E62  EC33  F0AA         	call	_terminal_textAttributes
 17889                           
 17890                           ;ring_buffer_LUT.c: 567: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 17891  010E66  0EC8               	movlw	low STR_133
 17892  010E68  0101               	movlb	1	; () banked
 17893  010E6A  6FAC               	movwf	printf@f& (0+255),b
 17894  010E6C  0EF3               	movlw	high STR_133
 17895  010E6E  6FAD               	movwf	(printf@f+1)& (0+255),b
 17896  010E70  C223  F1AE         	movff	_dev_on_time,?_printf+2	;volatile
 17897  010E74  C224  F1AF         	movff	_dev_on_time+1,?_printf+3	;volatile
 17898  010E78  C225  F1B0         	movff	_dev_on_time+2,?_printf+4	;volatile
 17899  010E7C  C226  F1B1         	movff	_dev_on_time+3,?_printf+5	;volatile
 17900  010E80  ECB9  F0D4         	call	_printf	;wreg free
 17901                           
 17902                           ;ring_buffer_LUT.c: 568: terminal_textAttributesReset();
 17903  010E84  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17904                           
 17905                           ;ring_buffer_LUT.c: 570: }
 17906  010E88  0012               	return	
 17907  010E8A                     l1693:
 17908                           
 17909                           ;ring_buffer_LUT.c: 573: else if((0 == strcmp(line, "Load On Time?"))) {
 17910  010E8A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17911  010E8E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17912  010E92  0E67               	movlw	low STR_134
 17913  010E94  0101               	movlb	1	; () banked
 17914  010E96  6F19               	movwf	strcmp@s2& (0+255),b
 17915  010E98  0EFE               	movlw	high STR_134
 17916  010E9A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17917  010E9C  ECEE  F0D1         	call	_strcmp	;wreg free
 17918  010EA0  0101               	movlb	1	; () banked
 17919  010EA2  5117               	movf	?_strcmp& (0+255),w,b
 17920  010EA4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17921  010EA6  A4D8               	btfss	status,2,c
 17922  010EA8  D019               	goto	l1695
 17923                           
 17924                           ; BSR set to: 1
 17925                           ;ring_buffer_LUT.c: 575: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17926  010EAA  0E00               	movlw	0
 17927  010EAC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17928  010EAE  0E00               	movlw	0
 17929  010EB0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17930  010EB2  0E02               	movlw	2
 17931  010EB4  EC33  F0AA         	call	_terminal_textAttributes
 17932                           
 17933                           ;ring_buffer_LUT.c: 576: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 17934  010EB8  0EB7               	movlw	low STR_135
 17935  010EBA  0101               	movlb	1	; () banked
 17936  010EBC  6FAC               	movwf	printf@f& (0+255),b
 17937  010EBE  0EF5               	movlw	high STR_135
 17938  010EC0  6FAD               	movwf	(printf@f+1)& (0+255),b
 17939  010EC2  C21F  F1AE         	movff	_load_on_time,?_printf+2	;volatile
 17940  010EC6  C220  F1AF         	movff	_load_on_time+1,?_printf+3	;volatile
 17941  010ECA  C221  F1B0         	movff	_load_on_time+2,?_printf+4	;volatile
 17942  010ECE  C222  F1B1         	movff	_load_on_time+3,?_printf+5	;volatile
 17943  010ED2  ECB9  F0D4         	call	_printf	;wreg free
 17944                           
 17945                           ;ring_buffer_LUT.c: 577: terminal_textAttributesReset();
 17946  010ED6  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17947                           
 17948                           ;ring_buffer_LUT.c: 579: }
 17949  010EDA  0012               	return	
 17950  010EDC                     l1695:
 17951                           
 17952                           ;ring_buffer_LUT.c: 582: else if((0 == strcmp(line, "Max RMS Current?"))) {
 17953  010EDC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17954  010EE0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17955  010EE4  0E2E               	movlw	low STR_136
 17956  010EE6  0101               	movlb	1	; () banked
 17957  010EE8  6F19               	movwf	strcmp@s2& (0+255),b
 17958  010EEA  0EFD               	movlw	high STR_136
 17959  010EEC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17960  010EEE  ECEE  F0D1         	call	_strcmp	;wreg free
 17961  010EF2  0101               	movlb	1	; () banked
 17962  010EF4  5117               	movf	?_strcmp& (0+255),w,b
 17963  010EF6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17964  010EF8  A4D8               	btfss	status,2,c
 17965  010EFA  D030               	goto	l1697
 17966                           
 17967                           ; BSR set to: 1
 17968                           ;ring_buffer_LUT.c: 585: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 17969  010EFC  0E07               	movlw	low _max_Irms_address
 17970  010EFE  6EF6               	movwf	tblptrl,c
 17971  010F00                     	if	1	;There is more than 1 active tblptr byte
 17972  010F00  0ED0               	movlw	high _max_Irms_address
 17973  010F02  6EF7               	movwf	tblptrh,c
 17974  010F04                     	endif
 17975  010F04                     	if	1	;There are 3 active tblptr bytes
 17976  010F04  0E00               	movlw	low (_max_Irms_address shr (0+16))
 17977  010F06  6EF8               	movwf	tblptru,c
 17978  010F08                     	endif
 17979  010F08  0009               	tblrd		*+
 17980  010F0A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 17981  010F0E  000A               	tblrd		*-
 17982  010F10  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 17983  010F14  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 17984  010F18  C119  F2B7         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 17985  010F1C  C11A  F2B8         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 17986  010F20  C11B  F2B9         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 17987  010F24  C11C  F2BA         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 17988                           
 17989                           ;ring_buffer_LUT.c: 587: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17990  010F28  0E00               	movlw	0
 17991  010F2A  0101               	movlb	1	; () banked
 17992  010F2C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17993  010F2E  0E00               	movlw	0
 17994  010F30  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17995  010F32  0E06               	movlw	6
 17996  010F34  EC33  F0AA         	call	_terminal_textAttributes
 17997                           
 17998                           ;ring_buffer_LUT.c: 588: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 17999  010F38  0E88               	movlw	low STR_137
 18000  010F3A  0101               	movlb	1	; () banked
 18001  010F3C  6FAC               	movwf	printf@f& (0+255),b
 18002  010F3E  0EF6               	movlw	high STR_137
 18003  010F40  6FAD               	movwf	(printf@f+1)& (0+255),b
 18004  010F42  C2B7  F1AE         	movff	ringBufferLUT@max_current_print,?_printf+2
 18005  010F46  C2B8  F1AF         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 18006  010F4A  C2B9  F1B0         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 18007  010F4E  C2BA  F1B1         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 18008  010F52  ECB9  F0D4         	call	_printf	;wreg free
 18009                           
 18010                           ;ring_buffer_LUT.c: 589: terminal_textAttributesReset();
 18011  010F56  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18012                           
 18013                           ;ring_buffer_LUT.c: 591: }
 18014  010F5A  0012               	return	
 18015  010F5C                     l1697:
 18016                           
 18017                           ;ring_buffer_LUT.c: 594: else if((0 == strcmp(line, "Max Power?"))) {
 18018  010F5C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18019  010F60  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18020  010F64  0E40               	movlw	low STR_138
 18021  010F66  0101               	movlb	1	; () banked
 18022  010F68  6F19               	movwf	strcmp@s2& (0+255),b
 18023  010F6A  0EFF               	movlw	high STR_138
 18024  010F6C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18025  010F6E  ECEE  F0D1         	call	_strcmp	;wreg free
 18026  010F72  0101               	movlb	1	; () banked
 18027  010F74  5117               	movf	?_strcmp& (0+255),w,b
 18028  010F76  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18029  010F78  A4D8               	btfss	status,2,c
 18030  010F7A  D030               	goto	l1699
 18031                           
 18032                           ; BSR set to: 1
 18033                           ;ring_buffer_LUT.c: 597: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 18034  010F7C  0E05               	movlw	low _max_Power_address
 18035  010F7E  6EF6               	movwf	tblptrl,c
 18036  010F80                     	if	1	;There is more than 1 active tblptr byte
 18037  010F80  0ED0               	movlw	high _max_Power_address
 18038  010F82  6EF7               	movwf	tblptrh,c
 18039  010F84                     	endif
 18040  010F84                     	if	1	;There are 3 active tblptr bytes
 18041  010F84  0E00               	movlw	low (_max_Power_address shr (0+16))
 18042  010F86  6EF8               	movwf	tblptru,c
 18043  010F88                     	endif
 18044  010F88  0009               	tblrd		*+
 18045  010F8A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18046  010F8E  000A               	tblrd		*-
 18047  010F90  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18048  010F94  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18049  010F98  C119  F2BB         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 18050  010F9C  C11A  F2BC         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 18051  010FA0  C11B  F2BD         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 18052  010FA4  C11C  F2BE         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 18053                           
 18054                           ;ring_buffer_LUT.c: 599: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18055  010FA8  0E00               	movlw	0
 18056  010FAA  0101               	movlb	1	; () banked
 18057  010FAC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18058  010FAE  0E00               	movlw	0
 18059  010FB0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18060  010FB2  0E06               	movlw	6
 18061  010FB4  EC33  F0AA         	call	_terminal_textAttributes
 18062                           
 18063                           ;ring_buffer_LUT.c: 600: printf("Maximum recorded output power is %.3f Watts\n\r", max_P
      +                          ower_print);
 18064  010FB8  0EA9               	movlw	low STR_139
 18065  010FBA  0101               	movlb	1	; () banked
 18066  010FBC  6FAC               	movwf	printf@f& (0+255),b
 18067  010FBE  0EF7               	movlw	high STR_139
 18068  010FC0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18069  010FC2  C2BB  F1AE         	movff	ringBufferLUT@max_Power_print,?_printf+2
 18070  010FC6  C2BC  F1AF         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 18071  010FCA  C2BD  F1B0         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 18072  010FCE  C2BE  F1B1         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 18073  010FD2  ECB9  F0D4         	call	_printf	;wreg free
 18074                           
 18075                           ;ring_buffer_LUT.c: 601: terminal_textAttributesReset();
 18076  010FD6  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18077                           
 18078                           ;ring_buffer_LUT.c: 603: }
 18079  010FDA  0012               	return	
 18080  010FDC                     l1699:
 18081                           
 18082                           ;ring_buffer_LUT.c: 606: else if((0 == strcmp(line, "Max POS3P3 Voltage?"))) {
 18083  010FDC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18084  010FE0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18085  010FE4  0E9E               	movlw	low STR_140
 18086  010FE6  0101               	movlb	1	; () banked
 18087  010FE8  6F19               	movwf	strcmp@s2& (0+255),b
 18088  010FEA  0EFC               	movlw	high STR_140
 18089  010FEC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18090  010FEE  ECEE  F0D1         	call	_strcmp	;wreg free
 18091  010FF2  0101               	movlb	1	; () banked
 18092  010FF4  5117               	movf	?_strcmp& (0+255),w,b
 18093  010FF6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18094  010FF8  A4D8               	btfss	status,2,c
 18095  010FFA  D030               	goto	l1701
 18096                           
 18097                           ; BSR set to: 1
 18098                           ;ring_buffer_LUT.c: 609: double max_voltage_print = readDoubleFromEEPROM(max_POS3P3_ADC_
      +                          Result_address);
 18099  010FFC  0E03               	movlw	low _max_POS3P3_ADC_Result_address
 18100  010FFE  6EF6               	movwf	tblptrl,c
 18101  011000                     	if	1	;There is more than 1 active tblptr byte
 18102  011000  0ED0               	movlw	high _max_POS3P3_ADC_Result_address
 18103  011002  6EF7               	movwf	tblptrh,c
 18104  011004                     	endif
 18105  011004                     	if	1	;There are 3 active tblptr bytes
 18106  011004  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 18107  011006  6EF8               	movwf	tblptru,c
 18108  011008                     	endif
 18109  011008  0009               	tblrd		*+
 18110  01100A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18111  01100E  000A               	tblrd		*-
 18112  011010  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18113  011014  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18114  011018  C119  F2BF         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print
 18115  01101C  C11A  F2C0         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print+1
 18116  011020  C11B  F2C1         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print+2
 18117  011024  C11C  F2C2         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print+3
 18118                           
 18119                           ;ring_buffer_LUT.c: 611: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18120  011028  0E00               	movlw	0
 18121  01102A  0101               	movlb	1	; () banked
 18122  01102C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18123  01102E  0E00               	movlw	0
 18124  011030  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18125  011032  0E06               	movlw	6
 18126  011034  EC33  F0AA         	call	_terminal_textAttributes
 18127                           
 18128                           ;ring_buffer_LUT.c: 612: printf("Maximum recorded +3.3V rail voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 18129  011038  0E54               	movlw	low STR_141
 18130  01103A  0101               	movlb	1	; () banked
 18131  01103C  6FAC               	movwf	printf@f& (0+255),b
 18132  01103E  0EF6               	movlw	high STR_141
 18133  011040  6FAD               	movwf	(printf@f+1)& (0+255),b
 18134  011042  C2BF  F1AE         	movff	ringBufferLUT@max_voltage_print,?_printf+2
 18135  011046  C2C0  F1AF         	movff	ringBufferLUT@max_voltage_print+1,?_printf+3
 18136  01104A  C2C1  F1B0         	movff	ringBufferLUT@max_voltage_print+2,?_printf+4
 18137  01104E  C2C2  F1B1         	movff	ringBufferLUT@max_voltage_print+3,?_printf+5
 18138  011052  ECB9  F0D4         	call	_printf	;wreg free
 18139                           
 18140                           ;ring_buffer_LUT.c: 613: terminal_textAttributesReset();
 18141  011056  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18142                           
 18143                           ;ring_buffer_LUT.c: 615: }
 18144  01105A  0012               	return	
 18145  01105C                     l1701:
 18146                           
 18147                           ;ring_buffer_LUT.c: 618: else if((0 == strcmp(line, "Max POS12 Voltage?"))) {
 18148  01105C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18149  011060  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18150  011064  0EC5               	movlw	low STR_142
 18151  011066  0101               	movlb	1	; () banked
 18152  011068  6F19               	movwf	strcmp@s2& (0+255),b
 18153  01106A  0EFC               	movlw	high STR_142
 18154  01106C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18155  01106E  ECEE  F0D1         	call	_strcmp	;wreg free
 18156  011072  0101               	movlb	1	; () banked
 18157  011074  5117               	movf	?_strcmp& (0+255),w,b
 18158  011076  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18159  011078  A4D8               	btfss	status,2,c
 18160  01107A  D030               	goto	l1703
 18161                           
 18162                           ; BSR set to: 1
 18163                           ;ring_buffer_LUT.c: 621: double max_voltage_print = readDoubleFromEEPROM(max_POS12_ADC_R
      +                          esult_address);
 18164  01107C  0E01               	movlw	low _max_POS12_ADC_Result_address
 18165  01107E  6EF6               	movwf	tblptrl,c
 18166  011080                     	if	1	;There is more than 1 active tblptr byte
 18167  011080  0ED0               	movlw	high _max_POS12_ADC_Result_address
 18168  011082  6EF7               	movwf	tblptrh,c
 18169  011084                     	endif
 18170  011084                     	if	1	;There are 3 active tblptr bytes
 18171  011084  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 18172  011086  6EF8               	movwf	tblptru,c
 18173  011088                     	endif
 18174  011088  0009               	tblrd		*+
 18175  01108A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18176  01108E  000A               	tblrd		*-
 18177  011090  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18178  011094  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18179  011098  C119  F2C3         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3616
 18180  01109C  C11A  F2C4         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3616+1
 18181  0110A0  C11B  F2C5         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3616+2
 18182  0110A4  C11C  F2C6         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3616+3
 18183                           
 18184                           ;ring_buffer_LUT.c: 623: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18185  0110A8  0E00               	movlw	0
 18186  0110AA  0101               	movlb	1	; () banked
 18187  0110AC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18188  0110AE  0E00               	movlw	0
 18189  0110B0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18190  0110B2  0E06               	movlw	6
 18191  0110B4  EC33  F0AA         	call	_terminal_textAttributes
 18192                           
 18193                           ;ring_buffer_LUT.c: 624: printf("Maximum recorded +12V rail voltage is %.3f Volts\n\r", 
      +                          max_voltage_print);
 18194  0110B8  0EBB               	movlw	low STR_143
 18195  0110BA  0101               	movlb	1	; () banked
 18196  0110BC  6FAC               	movwf	printf@f& (0+255),b
 18197  0110BE  0EF6               	movlw	high STR_143
 18198  0110C0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18199  0110C2  C2C3  F1AE         	movff	ringBufferLUT@max_voltage_print_3616,?_printf+2
 18200  0110C6  C2C4  F1AF         	movff	ringBufferLUT@max_voltage_print_3616+1,?_printf+3
 18201  0110CA  C2C5  F1B0         	movff	ringBufferLUT@max_voltage_print_3616+2,?_printf+4
 18202  0110CE  C2C6  F1B1         	movff	ringBufferLUT@max_voltage_print_3616+3,?_printf+5
 18203  0110D2  ECB9  F0D4         	call	_printf	;wreg free
 18204                           
 18205                           ;ring_buffer_LUT.c: 625: terminal_textAttributesReset();
 18206  0110D6  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18207                           
 18208                           ;ring_buffer_LUT.c: 627: }
 18209  0110DA  0012               	return	
 18210  0110DC                     l1703:
 18211                           
 18212                           ;ring_buffer_LUT.c: 630: else if((0 == strcmp(line, "Max Die Temp?"))) {
 18213  0110DC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18214  0110E0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18215  0110E4  0E75               	movlw	low STR_144
 18216  0110E6  0101               	movlb	1	; () banked
 18217  0110E8  6F19               	movwf	strcmp@s2& (0+255),b
 18218  0110EA  0EFE               	movlw	high STR_144
 18219  0110EC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18220  0110EE  ECEE  F0D1         	call	_strcmp	;wreg free
 18221  0110F2  0101               	movlb	1	; () banked
 18222  0110F4  5117               	movf	?_strcmp& (0+255),w,b
 18223  0110F6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18224  0110F8  A4D8               	btfss	status,2,c
 18225  0110FA  D030               	goto	l1705
 18226                           
 18227                           ; BSR set to: 1
 18228                           ;ring_buffer_LUT.c: 633: double max_temp_print = readDoubleFromEEPROM(max_Temp_ADC_Resul
      +                          t_address);
 18229  0110FC  0EFF               	movlw	low _max_Temp_ADC_Result_address
 18230  0110FE  6EF6               	movwf	tblptrl,c
 18231  011100                     	if	1	;There is more than 1 active tblptr byte
 18232  011100  0ECF               	movlw	high _max_Temp_ADC_Result_address
 18233  011102  6EF7               	movwf	tblptrh,c
 18234  011104                     	endif
 18235  011104                     	if	1	;There are 3 active tblptr bytes
 18236  011104  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 18237  011106  6EF8               	movwf	tblptru,c
 18238  011108                     	endif
 18239  011108  0009               	tblrd		*+
 18240  01110A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18241  01110E  000A               	tblrd		*-
 18242  011110  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18243  011114  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18244  011118  C119  F2C7         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_temp_print
 18245  01111C  C11A  F2C8         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_temp_print+1
 18246  011120  C11B  F2C9         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_temp_print+2
 18247  011124  C11C  F2CA         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_temp_print+3
 18248                           
 18249                           ;ring_buffer_LUT.c: 635: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18250  011128  0E00               	movlw	0
 18251  01112A  0101               	movlb	1	; () banked
 18252  01112C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18253  01112E  0E00               	movlw	0
 18254  011130  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18255  011132  0E06               	movlw	6
 18256  011134  EC33  F0AA         	call	_terminal_textAttributes
 18257                           
 18258                           ;ring_buffer_LUT.c: 636: printf("Maximum recorded die temperature is %.3f C\n\r", max_te
      +                          mp_print);
 18259  011138  0ED7               	movlw	low STR_145
 18260  01113A  0101               	movlb	1	; () banked
 18261  01113C  6FAC               	movwf	printf@f& (0+255),b
 18262  01113E  0EF7               	movlw	high STR_145
 18263  011140  6FAD               	movwf	(printf@f+1)& (0+255),b
 18264  011142  C2C7  F1AE         	movff	ringBufferLUT@max_temp_print,?_printf+2
 18265  011146  C2C8  F1AF         	movff	ringBufferLUT@max_temp_print+1,?_printf+3
 18266  01114A  C2C9  F1B0         	movff	ringBufferLUT@max_temp_print+2,?_printf+4
 18267  01114E  C2CA  F1B1         	movff	ringBufferLUT@max_temp_print+3,?_printf+5
 18268  011152  ECB9  F0D4         	call	_printf	;wreg free
 18269                           
 18270                           ;ring_buffer_LUT.c: 637: terminal_textAttributesReset();
 18271  011156  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18272                           
 18273                           ;ring_buffer_LUT.c: 639: }
 18274  01115A  0012               	return	
 18275  01115C                     l1705:
 18276                           
 18277                           ;ring_buffer_LUT.c: 642: else if((0 == strcmp(line, "Max FVR Voltage?"))) {
 18278  01115C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18279  011160  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18280  011164  0E1D               	movlw	low STR_146
 18281  011166  0101               	movlb	1	; () banked
 18282  011168  6F19               	movwf	strcmp@s2& (0+255),b
 18283  01116A  0EFD               	movlw	high STR_146
 18284  01116C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18285  01116E  ECEE  F0D1         	call	_strcmp	;wreg free
 18286  011172  0101               	movlb	1	; () banked
 18287  011174  5117               	movf	?_strcmp& (0+255),w,b
 18288  011176  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18289  011178  A4D8               	btfss	status,2,c
 18290  01117A  D030               	goto	l1707
 18291                           
 18292                           ; BSR set to: 1
 18293                           ;ring_buffer_LUT.c: 645: double max_voltage_print = readDoubleFromEEPROM(max_FVR_ADC_Res
      +                          ult_address);
 18294  01117C  0EFD               	movlw	low _max_FVR_ADC_Result_address
 18295  01117E  6EF6               	movwf	tblptrl,c
 18296  011180                     	if	1	;There is more than 1 active tblptr byte
 18297  011180  0ECF               	movlw	high _max_FVR_ADC_Result_address
 18298  011182  6EF7               	movwf	tblptrh,c
 18299  011184                     	endif
 18300  011184                     	if	1	;There are 3 active tblptr bytes
 18301  011184  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 18302  011186  6EF8               	movwf	tblptru,c
 18303  011188                     	endif
 18304  011188  0009               	tblrd		*+
 18305  01118A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18306  01118E  000A               	tblrd		*-
 18307  011190  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18308  011194  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18309  011198  C119  F2CB         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3622
 18310  01119C  C11A  F2CC         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3622+1
 18311  0111A0  C11B  F2CD         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3622+2
 18312  0111A4  C11C  F2CE         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3622+3
 18313                           
 18314                           ;ring_buffer_LUT.c: 647: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18315  0111A8  0E00               	movlw	0
 18316  0111AA  0101               	movlb	1	; () banked
 18317  0111AC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18318  0111AE  0E00               	movlw	0
 18319  0111B0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18320  0111B2  0E06               	movlw	6
 18321  0111B4  EC33  F0AA         	call	_terminal_textAttributes
 18322                           
 18323                           ;ring_buffer_LUT.c: 648: printf("Maximum recorded FVR buffer 1 voltage is %.3f Volts\n\r
      +                          ", max_voltage_print);
 18324  0111B8  0E17               	movlw	low STR_147
 18325  0111BA  0101               	movlb	1	; () banked
 18326  0111BC  6FAC               	movwf	printf@f& (0+255),b
 18327  0111BE  0EF5               	movlw	high STR_147
 18328  0111C0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18329  0111C2  C2CB  F1AE         	movff	ringBufferLUT@max_voltage_print_3622,?_printf+2
 18330  0111C6  C2CC  F1AF         	movff	ringBufferLUT@max_voltage_print_3622+1,?_printf+3
 18331  0111CA  C2CD  F1B0         	movff	ringBufferLUT@max_voltage_print_3622+2,?_printf+4
 18332  0111CE  C2CE  F1B1         	movff	ringBufferLUT@max_voltage_print_3622+3,?_printf+5
 18333  0111D2  ECB9  F0D4         	call	_printf	;wreg free
 18334                           
 18335                           ;ring_buffer_LUT.c: 649: terminal_textAttributesReset();
 18336  0111D6  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18337                           
 18338                           ;ring_buffer_LUT.c: 651: }
 18339  0111DA  0012               	return	
 18340  0111DC                     l1707:
 18341                           
 18342                           ;ring_buffer_LUT.c: 654: else if((0 == strcmp(line, "Clear Max Values"))) {
 18343  0111DC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18344  0111E0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18345  0111E4  0E61               	movlw	low STR_148
 18346  0111E6  0101               	movlb	1	; () banked
 18347  0111E8  6F19               	movwf	strcmp@s2& (0+255),b
 18348  0111EA  0EFD               	movlw	high STR_148
 18349  0111EC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18350  0111EE  ECEE  F0D1         	call	_strcmp	;wreg free
 18351  0111F2  0101               	movlb	1	; () banked
 18352  0111F4  5117               	movf	?_strcmp& (0+255),w,b
 18353  0111F6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18354  0111F8  A4D8               	btfss	status,2,c
 18355  0111FA  D0CC               	goto	l1709
 18356                           
 18357                           ; BSR set to: 1
 18358                           ;ring_buffer_LUT.c: 657: writeDoubleToEEPROM(0.0, max_Irms_address);
 18359  0111FC  0E00               	movlw	0
 18360  0111FE  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18361  011200  0E00               	movlw	0
 18362  011202  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18363  011204  0E00               	movlw	0
 18364  011206  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18365  011208  0E00               	movlw	0
 18366  01120A  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18367  01120C  0E07               	movlw	low _max_Irms_address
 18368  01120E  6EF6               	movwf	tblptrl,c
 18369  011210                     	if	1	;There is more than 1 active tblptr byte
 18370  011210  0ED0               	movlw	high _max_Irms_address
 18371  011212  6EF7               	movwf	tblptrh,c
 18372  011214                     	endif
 18373  011214                     	if	1	;There are 3 active tblptr bytes
 18374  011214  0E00               	movlw	low (_max_Irms_address shr (0+16))
 18375  011216  6EF8               	movwf	tblptru,c
 18376  011218                     	endif
 18377  011218  0009               	tblrd		*+
 18378  01121A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18379  01121E  000A               	tblrd		*-
 18380  011220  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18381  011224  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18382                           
 18383                           ;ring_buffer_LUT.c: 658: writeDoubleToEEPROM(0.0, max_Power_address);
 18384  011228  0E00               	movlw	0
 18385  01122A  0101               	movlb	1	; () banked
 18386  01122C  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18387  01122E  0E00               	movlw	0
 18388  011230  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18389  011232  0E00               	movlw	0
 18390  011234  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18391  011236  0E00               	movlw	0
 18392  011238  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18393  01123A  0E05               	movlw	low _max_Power_address
 18394  01123C  6EF6               	movwf	tblptrl,c
 18395  01123E                     	if	1	;There is more than 1 active tblptr byte
 18396  01123E  0ED0               	movlw	high _max_Power_address
 18397  011240  6EF7               	movwf	tblptrh,c
 18398  011242                     	endif
 18399  011242                     	if	1	;There are 3 active tblptr bytes
 18400  011242  0E00               	movlw	low (_max_Power_address shr (0+16))
 18401  011244  6EF8               	movwf	tblptru,c
 18402  011246                     	endif
 18403  011246  0009               	tblrd		*+
 18404  011248  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18405  01124C  000A               	tblrd		*-
 18406  01124E  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18407  011252  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18408                           
 18409                           ;ring_buffer_LUT.c: 659: writeDoubleToEEPROM(0.0, max_POS3P3_ADC_Result_address);
 18410  011256  0E00               	movlw	0
 18411  011258  0101               	movlb	1	; () banked
 18412  01125A  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18413  01125C  0E00               	movlw	0
 18414  01125E  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18415  011260  0E00               	movlw	0
 18416  011262  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18417  011264  0E00               	movlw	0
 18418  011266  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18419  011268  0E03               	movlw	low _max_POS3P3_ADC_Result_address
 18420  01126A  6EF6               	movwf	tblptrl,c
 18421  01126C                     	if	1	;There is more than 1 active tblptr byte
 18422  01126C  0ED0               	movlw	high _max_POS3P3_ADC_Result_address
 18423  01126E  6EF7               	movwf	tblptrh,c
 18424  011270                     	endif
 18425  011270                     	if	1	;There are 3 active tblptr bytes
 18426  011270  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 18427  011272  6EF8               	movwf	tblptru,c
 18428  011274                     	endif
 18429  011274  0009               	tblrd		*+
 18430  011276  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18431  01127A  000A               	tblrd		*-
 18432  01127C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18433  011280  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18434                           
 18435                           ;ring_buffer_LUT.c: 660: writeDoubleToEEPROM(0.0, max_POS12_ADC_Result_address);
 18436  011284  0E00               	movlw	0
 18437  011286  0101               	movlb	1	; () banked
 18438  011288  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18439  01128A  0E00               	movlw	0
 18440  01128C  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18441  01128E  0E00               	movlw	0
 18442  011290  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18443  011292  0E00               	movlw	0
 18444  011294  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18445  011296  0E01               	movlw	low _max_POS12_ADC_Result_address
 18446  011298  6EF6               	movwf	tblptrl,c
 18447  01129A                     	if	1	;There is more than 1 active tblptr byte
 18448  01129A  0ED0               	movlw	high _max_POS12_ADC_Result_address
 18449  01129C  6EF7               	movwf	tblptrh,c
 18450  01129E                     	endif
 18451  01129E                     	if	1	;There are 3 active tblptr bytes
 18452  01129E  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 18453  0112A0  6EF8               	movwf	tblptru,c
 18454  0112A2                     	endif
 18455  0112A2  0009               	tblrd		*+
 18456  0112A4  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18457  0112A8  000A               	tblrd		*-
 18458  0112AA  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18459  0112AE  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18460                           
 18461                           ;ring_buffer_LUT.c: 661: writeDoubleToEEPROM(0.0, max_Temp_ADC_Result_address);
 18462  0112B2  0E00               	movlw	0
 18463  0112B4  0101               	movlb	1	; () banked
 18464  0112B6  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18465  0112B8  0E00               	movlw	0
 18466  0112BA  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18467  0112BC  0E00               	movlw	0
 18468  0112BE  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18469  0112C0  0E00               	movlw	0
 18470  0112C2  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18471  0112C4  0EFF               	movlw	low _max_Temp_ADC_Result_address
 18472  0112C6  6EF6               	movwf	tblptrl,c
 18473  0112C8                     	if	1	;There is more than 1 active tblptr byte
 18474  0112C8  0ECF               	movlw	high _max_Temp_ADC_Result_address
 18475  0112CA  6EF7               	movwf	tblptrh,c
 18476  0112CC                     	endif
 18477  0112CC                     	if	1	;There are 3 active tblptr bytes
 18478  0112CC  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 18479  0112CE  6EF8               	movwf	tblptru,c
 18480  0112D0                     	endif
 18481  0112D0  0009               	tblrd		*+
 18482  0112D2  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18483  0112D6  000A               	tblrd		*-
 18484  0112D8  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18485  0112DC  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18486                           
 18487                           ;ring_buffer_LUT.c: 662: writeDoubleToEEPROM(0.0, max_FVR_ADC_Result_address);
 18488  0112E0  0E00               	movlw	0
 18489  0112E2  0101               	movlb	1	; () banked
 18490  0112E4  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18491  0112E6  0E00               	movlw	0
 18492  0112E8  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18493  0112EA  0E00               	movlw	0
 18494  0112EC  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18495  0112EE  0E00               	movlw	0
 18496  0112F0  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18497  0112F2  0EFD               	movlw	low _max_FVR_ADC_Result_address
 18498  0112F4  6EF6               	movwf	tblptrl,c
 18499  0112F6                     	if	1	;There is more than 1 active tblptr byte
 18500  0112F6  0ECF               	movlw	high _max_FVR_ADC_Result_address
 18501  0112F8  6EF7               	movwf	tblptrh,c
 18502  0112FA                     	endif
 18503  0112FA                     	if	1	;There are 3 active tblptr bytes
 18504  0112FA  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 18505  0112FC  6EF8               	movwf	tblptru,c
 18506  0112FE                     	endif
 18507  0112FE  0009               	tblrd		*+
 18508  011300  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18509  011304  000A               	tblrd		*-
 18510  011306  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18511  01130A  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 18512                           
 18513                           ;ring_buffer_LUT.c: 665: max_Irms = 0.0;
 18514  01130E  0E00               	movlw	0
 18515  011310  0102               	movlb	2	; () banked
 18516  011312  6F1B               	movwf	_max_Irms& (0+255),b	;volatile
 18517  011314  0E00               	movlw	0
 18518  011316  6F1C               	movwf	(_max_Irms+1)& (0+255),b	;volatile
 18519  011318  0E00               	movlw	0
 18520  01131A  6F1D               	movwf	(_max_Irms+2)& (0+255),b	;volatile
 18521  01131C  0E00               	movlw	0
 18522  01131E  6F1E               	movwf	(_max_Irms+3)& (0+255),b	;volatile
 18523                           
 18524                           ; BSR set to: 2
 18525                           ;ring_buffer_LUT.c: 666: max_Power = 0.0;
 18526  011320  0E00               	movlw	0
 18527  011322  6F17               	movwf	_max_Power& (0+255),b	;volatile
 18528  011324  0E00               	movlw	0
 18529  011326  6F18               	movwf	(_max_Power+1)& (0+255),b	;volatile
 18530  011328  0E00               	movlw	0
 18531  01132A  6F19               	movwf	(_max_Power+2)& (0+255),b	;volatile
 18532  01132C  0E00               	movlw	0
 18533  01132E  6F1A               	movwf	(_max_Power+3)& (0+255),b	;volatile
 18534                           
 18535                           ; BSR set to: 2
 18536                           ;ring_buffer_LUT.c: 667: max_POS3P3_ADC_Result = 0.0;
 18537  011330  0E00               	movlw	0
 18538  011332  6F13               	movwf	_max_POS3P3_ADC_Result& (0+255),b	;volatile
 18539  011334  0E00               	movlw	0
 18540  011336  6F14               	movwf	(_max_POS3P3_ADC_Result+1)& (0+255),b	;volatile
 18541  011338  0E00               	movlw	0
 18542  01133A  6F15               	movwf	(_max_POS3P3_ADC_Result+2)& (0+255),b	;volatile
 18543  01133C  0E00               	movlw	0
 18544  01133E  6F16               	movwf	(_max_POS3P3_ADC_Result+3)& (0+255),b	;volatile
 18545                           
 18546                           ; BSR set to: 2
 18547                           ;ring_buffer_LUT.c: 668: max_POS12_ADC_Result = 0.0;
 18548  011340  0E00               	movlw	0
 18549  011342  6F0F               	movwf	_max_POS12_ADC_Result& (0+255),b	;volatile
 18550  011344  0E00               	movlw	0
 18551  011346  6F10               	movwf	(_max_POS12_ADC_Result+1)& (0+255),b	;volatile
 18552  011348  0E00               	movlw	0
 18553  01134A  6F11               	movwf	(_max_POS12_ADC_Result+2)& (0+255),b	;volatile
 18554  01134C  0E00               	movlw	0
 18555  01134E  6F12               	movwf	(_max_POS12_ADC_Result+3)& (0+255),b	;volatile
 18556                           
 18557                           ; BSR set to: 2
 18558                           ;ring_buffer_LUT.c: 669: max_Temp_ADC_Result = 0.0;
 18559  011350  0E00               	movlw	0
 18560  011352  6F0B               	movwf	_max_Temp_ADC_Result& (0+255),b	;volatile
 18561  011354  0E00               	movlw	0
 18562  011356  6F0C               	movwf	(_max_Temp_ADC_Result+1)& (0+255),b	;volatile
 18563  011358  0E00               	movlw	0
 18564  01135A  6F0D               	movwf	(_max_Temp_ADC_Result+2)& (0+255),b	;volatile
 18565  01135C  0E00               	movlw	0
 18566  01135E  6F0E               	movwf	(_max_Temp_ADC_Result+3)& (0+255),b	;volatile
 18567                           
 18568                           ; BSR set to: 2
 18569                           ;ring_buffer_LUT.c: 670: max_FVR_ADC_Result = 0.0;
 18570  011360  0E00               	movlw	0
 18571  011362  6F07               	movwf	_max_FVR_ADC_Result& (0+255),b	;volatile
 18572  011364  0E00               	movlw	0
 18573  011366  6F08               	movwf	(_max_FVR_ADC_Result+1)& (0+255),b	;volatile
 18574  011368  0E00               	movlw	0
 18575  01136A  6F09               	movwf	(_max_FVR_ADC_Result+2)& (0+255),b	;volatile
 18576  01136C  0E00               	movlw	0
 18577  01136E  6F0A               	movwf	(_max_FVR_ADC_Result+3)& (0+255),b	;volatile
 18578                           
 18579                           ; BSR set to: 2
 18580                           ;ring_buffer_LUT.c: 672: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18581  011370  0E00               	movlw	0
 18582  011372  0101               	movlb	1	; () banked
 18583  011374  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18584  011376  0E00               	movlw	0
 18585  011378  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18586  01137A  0E02               	movlw	2
 18587  01137C  EC33  F0AA         	call	_terminal_textAttributes
 18588                           
 18589                           ;ring_buffer_LUT.c: 673: printf("Maximum recorded values erased from SRAM and EEPROM\n\r
      +                          ");
 18590  011380  0EAB               	movlw	low STR_149
 18591  011382  0101               	movlb	1	; () banked
 18592  011384  6FAC               	movwf	printf@f& (0+255),b
 18593  011386  0EF4               	movlw	high STR_149
 18594  011388  6FAD               	movwf	(printf@f+1)& (0+255),b
 18595  01138A  ECB9  F0D4         	call	_printf	;wreg free
 18596                           
 18597                           ;ring_buffer_LUT.c: 674: terminal_textAttributesReset();
 18598  01138E  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18599                           
 18600                           ;ring_buffer_LUT.c: 676: }
 18601  011392  0012               	return	
 18602  011394                     l1709:
 18603                           
 18604                           ;ring_buffer_LUT.c: 680: else if((0 == strcmp(line, "Help Device Control Commands"))) {
 18605  011394  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18606  011398  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18607  01139C  0E2D               	movlw	low STR_150
 18608  01139E  0101               	movlb	1	; () banked
 18609  0113A0  6F19               	movwf	strcmp@s2& (0+255),b
 18610  0113A2  0EFB               	movlw	high STR_150
 18611  0113A4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18612  0113A6  ECEE  F0D1         	call	_strcmp	;wreg free
 18613  0113AA  0101               	movlb	1	; () banked
 18614  0113AC  5117               	movf	?_strcmp& (0+255),w,b
 18615  0113AE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18616  0113B0  A4D8               	btfss	status,2,c
 18617  0113B2  D011               	goto	l1711
 18618                           
 18619                           ; BSR set to: 1
 18620                           ;ring_buffer_LUT.c: 682: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18621  0113B4  0E00               	movlw	0
 18622  0113B6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18623  0113B8  0E00               	movlw	0
 18624  0113BA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18625  0113BC  0E03               	movlw	3
 18626  0113BE  EC33  F0AA         	call	_terminal_textAttributes
 18627                           
 18628                           ;ring_buffer_LUT.c: 683: printf("List of supported Device Control Commands:\n\r"
 18629                           ;ring_buffer_LUT.c: 685: "   Reset: Clears the terminal and resets the microcontroller\n
      +                          \r"
 18630                           ;ring_buffer_LUT.c: 686: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 18631                           ;ring_buffer_LUT.c: 687: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 18632                           ;ring_buffer_LUT.c: 688: "   *IDN?: Returns device identification string\n\r"
 18633                           ;ring_buffer_LUT.c: 689: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 18634  0113C2  0E65               	movlw	low STR_151
 18635  0113C4  0101               	movlb	1	; () banked
 18636  0113C6  6FAC               	movwf	printf@f& (0+255),b
 18637  0113C8  0EDF               	movlw	high STR_151
 18638  0113CA  6FAD               	movwf	(printf@f+1)& (0+255),b
 18639  0113CC  ECB9  F0D4         	call	_printf	;wreg free
 18640                           
 18641                           ;ring_buffer_LUT.c: 701: terminal_textAttributesReset();
 18642  0113D0  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18643                           
 18644                           ;ring_buffer_LUT.c: 703: }
 18645  0113D4  0012               	return	
 18646  0113D6                     l1711:
 18647                           
 18648                           ;ring_buffer_LUT.c: 706: else if((0 == strcmp(line, "Help Device Measurement Commands"))
      +                          ) {
 18649  0113D6  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18650  0113DA  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18651  0113DE  0E54               	movlw	low STR_152
 18652  0113E0  0101               	movlb	1	; () banked
 18653  0113E2  6F19               	movwf	strcmp@s2& (0+255),b
 18654  0113E4  0EFA               	movlw	high STR_152
 18655  0113E6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18656  0113E8  ECEE  F0D1         	call	_strcmp	;wreg free
 18657  0113EC  0101               	movlb	1	; () banked
 18658  0113EE  5117               	movf	?_strcmp& (0+255),w,b
 18659  0113F0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18660  0113F2  A4D8               	btfss	status,2,c
 18661  0113F4  D011               	goto	l1713
 18662                           
 18663                           ; BSR set to: 1
 18664                           ;ring_buffer_LUT.c: 708: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18665  0113F6  0E00               	movlw	0
 18666  0113F8  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18667  0113FA  0E00               	movlw	0
 18668  0113FC  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18669  0113FE  0E03               	movlw	3
 18670  011400  EC33  F0AA         	call	_terminal_textAttributes
 18671                           
 18672                           ;ring_buffer_LUT.c: 709: printf("List of supported Device Measurement Commands:\n\r"
 18673                           ;ring_buffer_LUT.c: 711: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
 18674                           ;ring_buffer_LUT.c: 712: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
 18675                           ;ring_buffer_LUT.c: 713: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
 18676                           ;ring_buffer_LUT.c: 714: "   Measure FVR?: Returns the internal fixed voltage reference 
      +                          buffer 1 output in volts\n\r"
 18677                           ;ring_buffer_LUT.c: 715: "   Measure AVSS?: Returns the measured value of Analog VSS in 
      +                          volts\n\r"
 18678  011404  0E1B               	movlw	low STR_153
 18679  011406  0101               	movlb	1	; () banked
 18680  011408  6FAC               	movwf	printf@f& (0+255),b
 18681  01140A  0EE6               	movlw	high STR_153
 18682  01140C  6FAD               	movwf	(printf@f+1)& (0+255),b
 18683  01140E  ECB9  F0D4         	call	_printf	;wreg free
 18684                           
 18685                           ;ring_buffer_LUT.c: 722: terminal_textAttributesReset();
 18686  011412  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18687                           
 18688                           ;ring_buffer_LUT.c: 724: }
 18689  011416  0012               	return	
 18690  011418                     l1713:
 18691                           
 18692                           ;ring_buffer_LUT.c: 727: else if((0 == strcmp(line, "Help Primary Measurement Commands")
      +                          )) {
 18693  011418  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18694  01141C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18695  011420  0E11               	movlw	low STR_154
 18696  011422  0101               	movlb	1	; () banked
 18697  011424  6F19               	movwf	strcmp@s2& (0+255),b
 18698  011426  0EFA               	movlw	high STR_154
 18699  011428  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18700  01142A  ECEE  F0D1         	call	_strcmp	;wreg free
 18701  01142E  0101               	movlb	1	; () banked
 18702  011430  5117               	movf	?_strcmp& (0+255),w,b
 18703  011432  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18704  011434  A4D8               	btfss	status,2,c
 18705  011436  D011               	goto	l1715
 18706                           
 18707                           ; BSR set to: 1
 18708                           ;ring_buffer_LUT.c: 729: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18709  011438  0E00               	movlw	0
 18710  01143A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18711  01143C  0E00               	movlw	0
 18712  01143E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18713  011440  0E03               	movlw	3
 18714  011442  EC33  F0AA         	call	_terminal_textAttributes
 18715                           
 18716                           ;ring_buffer_LUT.c: 730: printf("List of supported Primary Measurement Commands:\n\r"
 18717                           ;ring_buffer_LUT.c: 732: "   Measure Detected Current?: Returns measured output current 
      +                          in amps as seen by ADC\n\r"
 18718                           ;ring_buffer_LUT.c: 733: "   Measure RMS Current?: Returns the calculated RMS output cur
      +                          rent from measurements and TRIAC firing angle\n\r"
 18719                           ;ring_buffer_LUT.c: 734: "   Measure RMS Voltage?: Returns the calculated RMS output vol
      +                          tage from TRIAC firing angle\n\r"
 18720                           ;ring_buffer_LUT.c: 735: "   Measure Power?: Returns the calculated output power in Watt
      +                          s\n\r"
 18721  011446  0E2F               	movlw	low STR_155
 18722  011448  0101               	movlb	1	; () banked
 18723  01144A  6FAC               	movwf	printf@f& (0+255),b
 18724  01144C  0EE3               	movlw	high STR_155
 18725  01144E  6FAD               	movwf	(printf@f+1)& (0+255),b
 18726  011450  ECB9  F0D4         	call	_printf	;wreg free
 18727                           
 18728                           ;ring_buffer_LUT.c: 743: terminal_textAttributesReset();
 18729  011454  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18730                           
 18731                           ;ring_buffer_LUT.c: 745: }
 18732  011458  0012               	return	
 18733  01145A                     l1715:
 18734                           
 18735                           ;ring_buffer_LUT.c: 748: else if((0 == strcmp(line, "Help Output Control Commands"))) {
 18736  01145A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18737  01145E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18738  011462  0E4A               	movlw	low STR_156
 18739  011464  0101               	movlb	1	; () banked
 18740  011466  6F19               	movwf	strcmp@s2& (0+255),b
 18741  011468  0EFB               	movlw	high STR_156
 18742  01146A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18743  01146C  ECEE  F0D1         	call	_strcmp	;wreg free
 18744  011470  0101               	movlb	1	; () banked
 18745  011472  5117               	movf	?_strcmp& (0+255),w,b
 18746  011474  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18747  011476  A4D8               	btfss	status,2,c
 18748  011478  D011               	goto	l1717
 18749                           
 18750                           ; BSR set to: 1
 18751                           ;ring_buffer_LUT.c: 750: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18752  01147A  0E00               	movlw	0
 18753  01147C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18754  01147E  0E00               	movlw	0
 18755  011480  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18756  011482  0E03               	movlw	3
 18757  011484  EC33  F0AA         	call	_terminal_textAttributes
 18758                           
 18759                           ;ring_buffer_LUT.c: 751: printf("List of supported Output Control Commands:\n\r"
 18760                           ;ring_buffer_LUT.c: 753: "   Enable Dimming: Enable TRIAC output dimming\n\r"
 18761                           ;ring_buffer_LUT.c: 754: "   Disable Dimming: Disable TRIAC output dimming\n\r"
 18762                           ;ring_buffer_LUT.c: 755: "   Enable Load: Enables the output TRIAC with dimming disabled
      +                          \n\r"
 18763                           ;ring_buffer_LUT.c: 756: "   Disable Load: Disables the output TRIAC completely\n\r"
 18764                           ;ring_buffer_LUT.c: 757: "   Load Enabled?: Returns if the output load is enabled or dis
      +                          abled\n\r"
 18765  011488  0EEB               	movlw	low STR_157
 18766  01148A  0101               	movlb	1	; () banked
 18767  01148C  6FAC               	movwf	printf@f& (0+255),b
 18768  01148E  0EE8               	movlw	high STR_157
 18769  011490  6FAD               	movwf	(printf@f+1)& (0+255),b
 18770  011492  ECB9  F0D4         	call	_printf	;wreg free
 18771                           
 18772                           ;ring_buffer_LUT.c: 762: terminal_textAttributesReset();
 18773  011496  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18774                           
 18775                           ;ring_buffer_LUT.c: 764: }
 18776  01149A  0012               	return	
 18777  01149C                     l1717:
 18778                           
 18779                           ;ring_buffer_LUT.c: 767: else if((0 == strcmp(line, "Help All"))) {
 18780  01149C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18781  0114A0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18782  0114A4  0E7F               	movlw	low STR_158
 18783  0114A6  0101               	movlb	1	; () banked
 18784  0114A8  6F19               	movwf	strcmp@s2& (0+255),b
 18785  0114AA  0EFF               	movlw	high STR_158
 18786  0114AC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18787  0114AE  ECEE  F0D1         	call	_strcmp	;wreg free
 18788  0114B2  0101               	movlb	1	; () banked
 18789  0114B4  5117               	movf	?_strcmp& (0+255),w,b
 18790  0114B6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18791  0114B8  A4D8               	btfss	status,2,c
 18792  0114BA  D011               	goto	l1719
 18793                           
 18794                           ; BSR set to: 1
 18795                           ;ring_buffer_LUT.c: 769: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18796  0114BC  0E00               	movlw	0
 18797  0114BE  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18798  0114C0  0E00               	movlw	0
 18799  0114C2  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18800  0114C4  0E03               	movlw	3
 18801  0114C6  EC33  F0AA         	call	_terminal_textAttributes
 18802                           
 18803                           ;ring_buffer_LUT.c: 770: printf("List of all supported commands:\n\r"
 18804                           ;ring_buffer_LUT.c: 772: "Device Control Commands: Commands to view and control low leve
      +                          l system functionality\n\r"
 18805                           ;ring_buffer_LUT.c: 773: "   Reset: Clears the terminal and resets the microcontroller\n
      +                          \r"
 18806                           ;ring_buffer_LUT.c: 774: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 18807                           ;ring_buffer_LUT.c: 775: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 18808                           ;ring_buffer_LUT.c: 776: "   *IDN?: Returns device identification string\n\r"
 18809  0114CA  0E5B               	movlw	low STR_159
 18810  0114CC  0101               	movlb	1	; () banked
 18811  0114CE  6FAC               	movwf	printf@f& (0+255),b
 18812  0114D0  0ED3               	movlw	high STR_159
 18813  0114D2  6FAD               	movwf	(printf@f+1)& (0+255),b
 18814  0114D4  ECB9  F0D4         	call	_printf	;wreg free
 18815                           
 18816                           ;ring_buffer_LUT.c: 821: terminal_textAttributesReset();
 18817  0114D8  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18818                           
 18819                           ;ring_buffer_LUT.c: 823: }
 18820  0114DC  0012               	return	
 18821  0114DE                     l1719:
 18822                           
 18823                           ;ring_buffer_LUT.c: 827: else if((0 == strcmp(line, "Help"))) {
 18824  0114DE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18825  0114E2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18826  0114E6  0EAD               	movlw	low STR_160
 18827  0114E8  0101               	movlb	1	; () banked
 18828  0114EA  6F19               	movwf	strcmp@s2& (0+255),b
 18829  0114EC  0EFF               	movlw	high STR_160
 18830  0114EE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18831  0114F0  ECEE  F0D1         	call	_strcmp	;wreg free
 18832  0114F4  0101               	movlb	1	; () banked
 18833  0114F6  5117               	movf	?_strcmp& (0+255),w,b
 18834  0114F8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18835  0114FA  A4D8               	btfss	status,2,c
 18836  0114FC  D050               	goto	l1721
 18837                           
 18838                           ; BSR set to: 1
 18839                           ;ring_buffer_LUT.c: 829: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18840  0114FE  0E00               	movlw	0
 18841  011500  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18842  011502  0E00               	movlw	0
 18843  011504  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18844  011506  0E03               	movlw	3
 18845  011508  EC33  F0AA         	call	_terminal_textAttributes
 18846                           
 18847                           ;ring_buffer_LUT.c: 830: printf("Please specify what type of commands you'd like help wi
      +                          th:\n\r"
 18848                           ;ring_buffer_LUT.c: 831: "Try 'Help <command set>'\n\r\n\r"
 18849                           ;ring_buffer_LUT.c: 833: "Supported Command Sets:\n\r"
 18850                           ;ring_buffer_LUT.c: 834: "   Device Control Commands: Commands to view and control low l
      +                          evel system functionality\n\r"
 18851                           ;ring_buffer_LUT.c: 835: "   Device Measurement Commands: View low level system measurem
      +                          ents\n\r"
 18852                           ;ring_buffer_LUT.c: 836: "   Primary Measurement Commands: View high level output measur
      +                          ements and calculations\n\r"
 18853  01150C  0ED7               	movlw	low STR_161
 18854  01150E  0101               	movlb	1	; () banked
 18855  011510  6FAC               	movwf	printf@f& (0+255),b
 18856  011512  0EEA               	movlw	high STR_161
 18857  011514  6FAD               	movwf	(printf@f+1)& (0+255),b
 18858  011516  ECB9  F0D4         	call	_printf	;wreg free
 18859                           
 18860                           ;ring_buffer_LUT.c: 843: terminal_printNewline();
 18861  01151A  EC62  F0D8         	call	_terminal_printNewline	;wreg free
 18862                           
 18863                           ;ring_buffer_LUT.c: 844: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 18864  01151E  0E74               	movlw	low STR_162
 18865  011520  0101               	movlb	1	; () banked
 18866  011522  6FAC               	movwf	printf@f& (0+255),b
 18867  011524  0EF4               	movlw	high STR_162
 18868  011526  6FAD               	movwf	(printf@f+1)& (0+255),b
 18869  011528  ECB9  F0D4         	call	_printf	;wreg free
 18870                           
 18871                           ;ring_buffer_LUT.c: 846: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18872  01152C  0E00               	movlw	0
 18873  01152E  0101               	movlb	1	; () banked
 18874  011530  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18875  011532  0E00               	movlw	0
 18876  011534  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18877  011536  0E02               	movlw	2
 18878  011538  EC33  F0AA         	call	_terminal_textAttributes
 18879                           
 18880                           ;ring_buffer_LUT.c: 847: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 18881  01153C  0E14               	movlw	low STR_163
 18882  01153E  0101               	movlb	1	; () banked
 18883  011540  6FAC               	movwf	printf@f& (0+255),b
 18884  011542  0EF3               	movlw	high STR_163
 18885  011544  6FAD               	movwf	(printf@f+1)& (0+255),b
 18886  011546  ECB9  F0D4         	call	_printf	;wreg free
 18887                           
 18888                           ;ring_buffer_LUT.c: 848: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18889  01154A  0E00               	movlw	0
 18890  01154C  0101               	movlb	1	; () banked
 18891  01154E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18892  011550  0E00               	movlw	0
 18893  011552  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18894  011554  0E06               	movlw	6
 18895  011556  EC33  F0AA         	call	_terminal_textAttributes
 18896                           
 18897                           ;ring_buffer_LUT.c: 849: printf("Measurement responses appear in cyan\n\r");
 18898  01155A  0EAA               	movlw	low STR_164
 18899  01155C  0101               	movlb	1	; () banked
 18900  01155E  6FAC               	movwf	printf@f& (0+255),b
 18901  011560  0EF8               	movlw	high STR_164
 18902  011562  6FAD               	movwf	(printf@f+1)& (0+255),b
 18903  011564  ECB9  F0D4         	call	_printf	;wreg free
 18904                           
 18905                           ;ring_buffer_LUT.c: 850: terminal_textAttributes(RED, BLACK, NORMAL);
 18906  011568  0E00               	movlw	0
 18907  01156A  0101               	movlb	1	; () banked
 18908  01156C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18909  01156E  0E00               	movlw	0
 18910  011570  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18911  011572  0E01               	movlw	1
 18912  011574  EC33  F0AA         	call	_terminal_textAttributes
 18913                           
 18914                           ;ring_buffer_LUT.c: 851: printf("Errors and negative responses appear in red\n\r");
 18915  011578  0E4D               	movlw	low STR_165
 18916  01157A  0101               	movlb	1	; () banked
 18917  01157C  6FAC               	movwf	printf@f& (0+255),b
 18918  01157E  0EF7               	movlw	high STR_165
 18919  011580  6FAD               	movwf	(printf@f+1)& (0+255),b
 18920  011582  ECB9  F0D4         	call	_printf	;wreg free
 18921                           
 18922                           ;ring_buffer_LUT.c: 852: terminal_textAttributesReset();
 18923  011586  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18924                           
 18925                           ;ring_buffer_LUT.c: 853: printf("User input appears in white\n\r");
 18926  01158A  0EF2               	movlw	low STR_166
 18927  01158C  0101               	movlb	1	; () banked
 18928  01158E  6FAC               	movwf	printf@f& (0+255),b
 18929  011590  0EFA               	movlw	high STR_166
 18930  011592  6FAD               	movwf	(printf@f+1)& (0+255),b
 18931  011594  ECB9  F0D4         	call	_printf	;wreg free
 18932                           
 18933                           ;ring_buffer_LUT.c: 856: terminal_printNewline();
 18934  011598  EC62  F0D8         	call	_terminal_printNewline	;wreg free
 18935                           
 18936                           ;ring_buffer_LUT.c: 858: }
 18937  01159C  0012               	return	
 18938  01159E                     l1721:
 18939                           
 18940                           ;ring_buffer_LUT.c: 861: else if ((0 == strcmp(line, "Easter Egg"))) {
 18941  01159E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18942  0115A2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18943  0115A6  0E56               	movlw	low STR_167
 18944  0115A8  0101               	movlb	1	; () banked
 18945  0115AA  6F19               	movwf	strcmp@s2& (0+255),b
 18946  0115AC  0EFF               	movlw	high STR_167
 18947  0115AE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18948  0115B0  ECEE  F0D1         	call	_strcmp	;wreg free
 18949  0115B4  0101               	movlb	1	; () banked
 18950  0115B6  5117               	movf	?_strcmp& (0+255),w,b
 18951  0115B8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18952  0115BA  A4D8               	btfss	status,2,c
 18953  0115BC  0012               	return	
 18954                           
 18955                           ; BSR set to: 1
 18956                           ;ring_buffer_LUT.c: 863: terminal_printNewline();
 18957  0115BE  EC62  F0D8         	call	_terminal_printNewline	;wreg free
 18958                           
 18959                           ;ring_buffer_LUT.c: 864: terminal_textAttributes(RED, BLACK, NORMAL);
 18960  0115C2  0E00               	movlw	0
 18961  0115C4  0101               	movlb	1	; () banked
 18962  0115C6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18963  0115C8  0E00               	movlw	0
 18964  0115CA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18965  0115CC  0E01               	movlw	1
 18966  0115CE  EC33  F0AA         	call	_terminal_textAttributes
 18967                           
 18968                           ;ring_buffer_LUT.c: 865: printf(
 18969                           ;ring_buffer_LUT.c: 866: "    _   ___   ___                      __  __     _           
      +                                         _   ___  _      \n\r"
 18970                           ;ring_buffer_LUT.c: 867: "   /_\\ / __| | _ \\_____ __ _____ _ _  |  \\/  |___| |_ ___ _
      +                           _   __ _ _ _  __| | |   \\(_)_ __  _ __  ___ _ _ \n\r"
 18971                           ;ring_buffer_LUT.c: 868: "  / _ \\ (__  |  _/ _ \\ V  V / -_) '_| | |\\/| / -_)  _/ -_) 
      +                          '_| / _` | ' \\/ _` | | |) | | '  \\| '  \\/ -_) '_|\n\r"
 18972                           ;ring_buffer_LUT.c: 869: " /_/ \\_\\___| |_| \\___/\\_/\\_/\\___|_|   |_|  |_\\___|\\__\
      +                          \___|_|   \\__,_|_||_\\__,_| |___/|_|_|_|_|_|_|_\\___|_|  \n\r"
 18973  0115D2  0EAD               	movlw	low STR_168
 18974  0115D4  0101               	movlb	1	; () banked
 18975  0115D6  6FAC               	movwf	printf@f& (0+255),b
 18976  0115D8  0EEC               	movlw	high STR_168
 18977  0115DA  6FAD               	movwf	(printf@f+1)& (0+255),b
 18978  0115DC  ECB9  F0D4         	call	_printf	;wreg free
 18979                           
 18980                           ;ring_buffer_LUT.c: 874: terminal_printNewline();
 18981  0115E0  EC62  F0D8         	call	_terminal_printNewline	;wreg free
 18982                           
 18983                           ;ring_buffer_LUT.c: 875: terminal_textAttributes(YELLOW, BLUE, NORMAL);
 18984  0115E4  0E04               	movlw	4
 18985  0115E6  0101               	movlb	1	; () banked
 18986  0115E8  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18987  0115EA  0E00               	movlw	0
 18988  0115EC  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18989  0115EE  0E03               	movlw	3
 18990  0115F0  EC33  F0AA         	call	_terminal_textAttributes
 18991                           
 18992                           ;ring_buffer_LUT.c: 876: printf("Marquette University EECE\n\r");
 18993  0115F4  0E67               	movlw	low STR_169
 18994  0115F6  0101               	movlb	1	; () banked
 18995  0115F8  6FAC               	movwf	printf@f& (0+255),b
 18996  0115FA  0EFB               	movlw	high STR_169
 18997  0115FC  6FAD               	movwf	(printf@f+1)& (0+255),b
 18998  0115FE  ECB9  F0D4         	call	_printf	;wreg free
 18999                           
 19000                           ;ring_buffer_LUT.c: 877: terminal_textAttributes(GREEN, BLACK, NORMAL);
 19001  011602  0E00               	movlw	0
 19002  011604  0101               	movlb	1	; () banked
 19003  011606  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19004  011608  0E00               	movlw	0
 19005  01160A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19006  01160C  0E02               	movlw	2
 19007  01160E  EC33  F0AA         	call	_terminal_textAttributes
 19008                           
 19009                           ;ring_buffer_LUT.c: 878: printf("ELEN 3035 Final Project\n\r");
 19010  011612  0E33               	movlw	low (STR_56+21)
 19011  011614  0101               	movlb	1	; () banked
 19012  011616  6FAC               	movwf	printf@f& (0+255),b
 19013  011618  0EF7               	movlw	high (STR_56+21)
 19014  01161A  6FAD               	movwf	(printf@f+1)& (0+255),b
 19015  01161C  ECB9  F0D4         	call	_printf	;wreg free
 19016                           
 19017                           ;ring_buffer_LUT.c: 879: printf("Drew Maatman and Gabe Thalji\n\r");
 19018  011620  0ED3               	movlw	low STR_171
 19019  011622  0101               	movlb	1	; () banked
 19020  011624  6FAC               	movwf	printf@f& (0+255),b
 19021  011626  0EFA               	movlw	high STR_171
 19022  011628  6FAD               	movwf	(printf@f+1)& (0+255),b
 19023  01162A  ECB9  F0D4         	call	_printf	;wreg free
 19024                           
 19025                           ;ring_buffer_LUT.c: 880: terminal_textAttributes(YELLOW, BLACK, BOLD);
 19026  01162E  0E00               	movlw	0
 19027  011630  0101               	movlb	1	; () banked
 19028  011632  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19029  011634  0E01               	movlw	1
 19030  011636  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19031  011638  0E03               	movlw	3
 19032  01163A  EC33  F0AA         	call	_terminal_textAttributes
 19033                           
 19034                           ;ring_buffer_LUT.c: 881: printf("PSOCs SUCK\n\r");
 19035  01163E  0EAC               	movlw	low STR_172
 19036  011640  0101               	movlb	1	; () banked
 19037  011642  6FAC               	movwf	printf@f& (0+255),b
 19038  011644  0EFE               	movlw	high STR_172
 19039  011646  6FAD               	movwf	(printf@f+1)& (0+255),b
 19040  011648  ECB9  F0D4         	call	_printf	;wreg free
 19041                           
 19042                           ;ring_buffer_LUT.c: 882: terminal_textAttributesReset();
 19043  01164C  EC48  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19044                           
 19045                           ;ring_buffer_LUT.c: 883: terminal_printNewline();
 19046  011650  EC62  F0D8         	call	_terminal_printNewline	;wreg free
 19047  011654  0012               	return	
 19048  011656                     __end_of_ringBufferLUT:
 19049                           	opt stack 0
 19050                           tblptru	equ	0xFF8
 19051                           tblptrh	equ	0xFF7
 19052                           tblptrl	equ	0xFF6
 19053                           tablat	equ	0xFF5
 19054                           intcon	equ	0xFF2
 19055                           postinc0	equ	0xFEE
 19056                           wreg	equ	0xFE8
 19057                           indf1	equ	0xFE7
 19058                           postdec1	equ	0xFE5
 19059                           fsr1h	equ	0xFE2
 19060                           fsr1l	equ	0xFE1
 19061                           indf2	equ	0xFDF
 19062                           postinc2	equ	0xFDE
 19063                           fsr2h	equ	0xFDA
 19064                           fsr2l	equ	0xFD9
 19065                           status	equ	0xFD8
 19066                           
 19067 ;; *************** function _terminal_textAttributesReset *****************
 19068 ;; Defined at:
 19069 ;;		line 223 in file "ring_buffer_interface.c"
 19070 ;; Parameters:    Size  Location     Type
 19071 ;;		None
 19072 ;; Auto vars:     Size  Location     Type
 19073 ;;		None
 19074 ;; Return value:  Size  Location     Type
 19075 ;;                  1    wreg      void 
 19076 ;; Registers used:
 19077 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19078 ;; Tracked objects:
 19079 ;;		On entry : 0/0
 19080 ;;		On exit  : 0/0
 19081 ;;		Unchanged: 0/0
 19082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19087 ;;Total ram usage:        0 bytes
 19088 ;; Hardware stack levels used:    1
 19089 ;; Hardware stack levels required when called:   18
 19090 ;; This function calls:
 19091 ;;		_terminal_textAttributes
 19092 ;; This function is called by:
 19093 ;;		_main
 19094 ;;		_ringBufferLUT
 19095 ;; This function uses a non-reentrant model
 19096 ;;
 19097                           
 19098                           	psect	text4
 19099  01B090                     __ptext4:
 19100                           	opt stack 0
 19101  01B090                     _terminal_textAttributesReset:
 19102                           	opt stack 12
 19103                           
 19104                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 19105                           
 19106                           ;incstack = 0
 19107  01B090  0E00               	movlw	0
 19108  01B092  0101               	movlb	1	; () banked
 19109  01B094  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19110  01B096  0E00               	movlw	0
 19111  01B098  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19112  01B09A  0E07               	movlw	7
 19113  01B09C  EC33  F0AA         	call	_terminal_textAttributes
 19114  01B0A0  0012               	return		;funcret
 19115  01B0A2                     __end_of_terminal_textAttributesReset:
 19116                           	opt stack 0
 19117                           tblptru	equ	0xFF8
 19118                           tblptrh	equ	0xFF7
 19119                           tblptrl	equ	0xFF6
 19120                           tablat	equ	0xFF5
 19121                           intcon	equ	0xFF2
 19122                           postinc0	equ	0xFEE
 19123                           wreg	equ	0xFE8
 19124                           indf1	equ	0xFE7
 19125                           postdec1	equ	0xFE5
 19126                           fsr1h	equ	0xFE2
 19127                           fsr1l	equ	0xFE1
 19128                           indf2	equ	0xFDF
 19129                           postinc2	equ	0xFDE
 19130                           fsr2h	equ	0xFDA
 19131                           fsr2l	equ	0xFD9
 19132                           status	equ	0xFD8
 19133                           
 19134 ;; *************** function _terminal_textAttributes *****************
 19135 ;; Defined at:
 19136 ;;		line 115 in file "ring_buffer_interface.c"
 19137 ;; Parameters:    Size  Location     Type
 19138 ;;  foreground_c    1    wreg     enum E18048
 19139 ;;  background_c    1  189[BANK1 ] enum E18048
 19140 ;;  input_attrib    1  190[BANK1 ] enum E18040
 19141 ;; Auto vars:     Size  Location     Type
 19142 ;;  foreground_c    1    0[BANK2 ] enum E18048
 19143 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 19144 ;; Return value:  Size  Location     Type
 19145 ;;                  1    wreg      void 
 19146 ;; Registers used:
 19147 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19148 ;; Tracked objects:
 19149 ;;		On entry : 0/0
 19150 ;;		On exit  : 0/0
 19151 ;;		Unchanged: 0/0
 19152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19153 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19154 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 19155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19156 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 19157 ;;Total ram usage:       18 bytes
 19158 ;; Hardware stack levels used:    1
 19159 ;; Hardware stack levels required when called:   17
 19160 ;; This function calls:
 19161 ;;		_printf
 19162 ;;		_strcat
 19163 ;;		_strncpy
 19164 ;; This function is called by:
 19165 ;;		_terminal_textAttributesReset
 19166 ;;		_ringBufferLUT
 19167 ;; This function uses a non-reentrant model
 19168 ;;
 19169                           
 19170                           	psect	text5
 19171  015466                     __ptext5:
 19172                           	opt stack 0
 19173  015466                     _terminal_textAttributes:
 19174                           	opt stack 12
 19175                           
 19176                           ;incstack = 0
 19177                           ;terminal_textAttributes@foreground_color stored from wreg
 19178  015466  0102               	movlb	2	; () banked
 19179  015468  6F8A               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 19180                           
 19181                           ;ring_buffer_interface.c: 119: char output_buff[15];
 19182                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 19183  01546A  0E8B               	movlw	low terminal_textAttributes@output_buff
 19184  01546C  0101               	movlb	1	; () banked
 19185  01546E  6F17               	movwf	strncpy@to& (0+255),b
 19186  015470  0E02               	movlw	high terminal_textAttributes@output_buff
 19187  015472  6F18               	movwf	(strncpy@to+1)& (0+255),b
 19188  015474  0EF5               	movlw	low STR_15
 19189  015476  6F19               	movwf	strncpy@from& (0+255),b
 19190  015478  0EFF               	movlw	high STR_15
 19191  01547A  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 19192  01547C  0E00               	movlw	0
 19193  01547E  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 19194  015480  0E0F               	movlw	15
 19195  015482  6F1B               	movwf	strncpy@size& (0+255),b
 19196  015484  ECB7  F0CF         	call	_strncpy	;wreg free
 19197                           
 19198                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 19199  015488  D054               	goto	l1449
 19200  01548A                     
 19201                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 19202  01548A  0E8B               	movlw	low terminal_textAttributes@output_buff
 19203  01548C  0101               	movlb	1	; () banked
 19204  01548E  6F17               	movwf	strcat@to& (0+255),b
 19205  015490  0E02               	movlw	high terminal_textAttributes@output_buff
 19206  015492  6F18               	movwf	(strcat@to+1)& (0+255),b
 19207  015494  0ECC               	movlw	low (STR_24+1)
 19208  015496  6F19               	movwf	strcat@from& (0+255),b
 19209  015498  0EFF               	movlw	high (STR_24+1)
 19210  01549A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19211  01549C  ECB5  F0D2         	call	_strcat	;wreg free
 19212                           
 19213                           ;ring_buffer_interface.c: 127: break;
 19214  0154A0  D05D               	goto	l1451
 19215  0154A2                     
 19216                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 19217  0154A2  0E8B               	movlw	low terminal_textAttributes@output_buff
 19218  0154A4  0101               	movlb	1	; () banked
 19219  0154A6  6F17               	movwf	strcat@to& (0+255),b
 19220  0154A8  0E02               	movlw	high terminal_textAttributes@output_buff
 19221  0154AA  6F18               	movwf	(strcat@to+1)& (0+255),b
 19222  0154AC  0E48               	movlw	low (STR_71+20)
 19223  0154AE  6F19               	movwf	strcat@from& (0+255),b
 19224  0154B0  0EFC               	movlw	high (STR_71+20)
 19225  0154B2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19226  0154B4  ECB5  F0D2         	call	_strcat	;wreg free
 19227                           
 19228                           ;ring_buffer_interface.c: 130: break;
 19229  0154B8  D051               	goto	l1451
 19230  0154BA                     
 19231                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 19232  0154BA  0E8B               	movlw	low terminal_textAttributes@output_buff
 19233  0154BC  0101               	movlb	1	; () banked
 19234  0154BE  6F17               	movwf	strcat@to& (0+255),b
 19235  0154C0  0E02               	movlw	high terminal_textAttributes@output_buff
 19236  0154C2  6F18               	movwf	(strcat@to+1)& (0+255),b
 19237  0154C4  0EE1               	movlw	low (STR_28+1)
 19238  0154C6  6F19               	movwf	strcat@from& (0+255),b
 19239  0154C8  0EFF               	movlw	high (STR_28+1)
 19240  0154CA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19241  0154CC  ECB5  F0D2         	call	_strcat	;wreg free
 19242                           
 19243                           ;ring_buffer_interface.c: 133: break;
 19244  0154D0  D045               	goto	l1451
 19245  0154D2                     
 19246                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 19247  0154D2  0E8B               	movlw	low terminal_textAttributes@output_buff
 19248  0154D4  0101               	movlb	1	; () banked
 19249  0154D6  6F17               	movwf	strcat@to& (0+255),b
 19250  0154D8  0E02               	movlw	high terminal_textAttributes@output_buff
 19251  0154DA  6F18               	movwf	(strcat@to+1)& (0+255),b
 19252  0154DC  0E7D               	movlw	low (STR_3+8)
 19253  0154DE  6F19               	movwf	strcat@from& (0+255),b
 19254  0154E0  0EFF               	movlw	high (STR_3+8)
 19255  0154E2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19256  0154E4  ECB5  F0D2         	call	_strcat	;wreg free
 19257                           
 19258                           ;ring_buffer_interface.c: 136: break;
 19259  0154E8  D039               	goto	l1451
 19260  0154EA                     
 19261                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 19262  0154EA  0E8B               	movlw	low terminal_textAttributes@output_buff
 19263  0154EC  0101               	movlb	1	; () banked
 19264  0154EE  6F17               	movwf	strcat@to& (0+255),b
 19265  0154F0  0E02               	movlw	high terminal_textAttributes@output_buff
 19266  0154F2  6F18               	movwf	(strcat@to+1)& (0+255),b
 19267  0154F4  0EF0               	movlw	low (STR_31+1)
 19268  0154F6  6F19               	movwf	strcat@from& (0+255),b
 19269  0154F8  0EFF               	movlw	high (STR_31+1)
 19270  0154FA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19271  0154FC  ECB5  F0D2         	call	_strcat	;wreg free
 19272                           
 19273                           ;ring_buffer_interface.c: 139: break;
 19274  015500  D02D               	goto	l1451
 19275  015502                     
 19276                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 19277  015502  0E8B               	movlw	low terminal_textAttributes@output_buff
 19278  015504  0101               	movlb	1	; () banked
 19279  015506  6F17               	movwf	strcat@to& (0+255),b
 19280  015508  0E02               	movlw	high terminal_textAttributes@output_buff
 19281  01550A  6F18               	movwf	(strcat@to+1)& (0+255),b
 19282  01550C  0EF8               	movlw	low STR_21
 19283  01550E  6F19               	movwf	strcat@from& (0+255),b
 19284  015510  0EFF               	movlw	high STR_21
 19285  015512  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19286  015514  ECB5  F0D2         	call	_strcat	;wreg free
 19287                           
 19288                           ;ring_buffer_interface.c: 142: break;
 19289  015518  D021               	goto	l1451
 19290  01551A                     
 19291                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 19292  01551A  0E8B               	movlw	low terminal_textAttributes@output_buff
 19293  01551C  0101               	movlb	1	; () banked
 19294  01551E  6F17               	movwf	strcat@to& (0+255),b
 19295  015520  0E02               	movlw	high terminal_textAttributes@output_buff
 19296  015522  6F18               	movwf	(strcat@to+1)& (0+255),b
 19297  015524  0ECC               	movlw	low (STR_24+1)
 19298  015526  6F19               	movwf	strcat@from& (0+255),b
 19299  015528  0EFF               	movlw	high (STR_24+1)
 19300  01552A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19301  01552C  ECB5  F0D2         	call	_strcat	;wreg free
 19302                           
 19303                           ;ring_buffer_interface.c: 147: }
 19304                           
 19305                           ;ring_buffer_interface.c: 146: break;
 19306  015530  D015               	goto	l1451
 19307  015532                     l1449:
 19308  015532  0101               	movlb	1	; () banked
 19309  015534  51BE               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 19310                           
 19311                           ; Switch size 1, requested type "space"
 19312                           ; Number of cases is 6, Range of values is 0 to 5
 19313                           ; switch strategies available:
 19314                           ; Name         Instructions Cycles
 19315                           ; simple_byte           19    10 (average)
 19316                           ;	Chosen strategy is simple_byte
 19317  015536  0A00               	xorlw	0	; case 0
 19318  015538  B4D8               	btfsc	status,2,c
 19319  01553A  D7A7               	goto	l1450
 19320  01553C  0A01               	xorlw	1	; case 1
 19321  01553E  B4D8               	btfsc	status,2,c
 19322  015540  D7B0               	goto	l1452
 19323  015542  0A03               	xorlw	3	; case 2
 19324  015544  B4D8               	btfsc	status,2,c
 19325  015546  D7B9               	goto	l1453
 19326  015548  0A01               	xorlw	1	; case 3
 19327  01554A  B4D8               	btfsc	status,2,c
 19328  01554C  D7C2               	goto	l1454
 19329  01554E  0A07               	xorlw	7	; case 4
 19330  015550  B4D8               	btfsc	status,2,c
 19331  015552  D7CB               	goto	l1455
 19332  015554  0A01               	xorlw	1	; case 5
 19333  015556  B4D8               	btfsc	status,2,c
 19334  015558  D7D4               	goto	l1456
 19335  01555A  D7DF               	goto	l1457
 19336  01555C                     l1451:
 19337                           
 19338                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 19339                           
 19340                           ; BSR set to: 1
 19341  01555C  0E8B               	movlw	low terminal_textAttributes@output_buff
 19342  01555E  0101               	movlb	1	; () banked
 19343  015560  6F17               	movwf	strcat@to& (0+255),b
 19344  015562  0E02               	movlw	high terminal_textAttributes@output_buff
 19345  015564  6F18               	movwf	(strcat@to+1)& (0+255),b
 19346  015566  0EFA               	movlw	low STR_23
 19347  015568  6F19               	movwf	strcat@from& (0+255),b
 19348  01556A  0EFF               	movlw	high STR_23
 19349  01556C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19350  01556E  ECB5  F0D2         	call	_strcat	;wreg free
 19351                           
 19352                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 19353  015572  D06C               	goto	l1458
 19354  015574                     
 19355                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 19356  015574  0E8B               	movlw	low terminal_textAttributes@output_buff
 19357  015576  0101               	movlb	1	; () banked
 19358  015578  6F17               	movwf	strcat@to& (0+255),b
 19359  01557A  0E02               	movlw	high terminal_textAttributes@output_buff
 19360  01557C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19361  01557E  0ECB               	movlw	low STR_24
 19362  015580  6F19               	movwf	strcat@from& (0+255),b
 19363  015582  0EFF               	movlw	high STR_24
 19364  015584  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19365  015586  ECB5  F0D2         	call	_strcat	;wreg free
 19366                           
 19367                           ;ring_buffer_interface.c: 155: break;
 19368  01558A  D07B               	goto	l1460
 19369  01558C                     
 19370                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 19371  01558C  0E8B               	movlw	low terminal_textAttributes@output_buff
 19372  01558E  0101               	movlb	1	; () banked
 19373  015590  6F17               	movwf	strcat@to& (0+255),b
 19374  015592  0E02               	movlw	high terminal_textAttributes@output_buff
 19375  015594  6F18               	movwf	(strcat@to+1)& (0+255),b
 19376  015596  0ECE               	movlw	low STR_25
 19377  015598  6F19               	movwf	strcat@from& (0+255),b
 19378  01559A  0EFF               	movlw	high STR_25
 19379  01559C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19380  01559E  ECB5  F0D2         	call	_strcat	;wreg free
 19381                           
 19382                           ;ring_buffer_interface.c: 158: break;
 19383  0155A2  D06F               	goto	l1460
 19384  0155A4                     
 19385                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 19386  0155A4  0E8B               	movlw	low terminal_textAttributes@output_buff
 19387  0155A6  0101               	movlb	1	; () banked
 19388  0155A8  6F17               	movwf	strcat@to& (0+255),b
 19389  0155AA  0E02               	movlw	high terminal_textAttributes@output_buff
 19390  0155AC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19391  0155AE  0ED4               	movlw	low STR_26
 19392  0155B0  6F19               	movwf	strcat@from& (0+255),b
 19393  0155B2  0EFF               	movlw	high STR_26
 19394  0155B4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19395  0155B6  ECB5  F0D2         	call	_strcat	;wreg free
 19396                           
 19397                           ;ring_buffer_interface.c: 161: break;
 19398  0155BA  D063               	goto	l1460
 19399  0155BC                     
 19400                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 19401  0155BC  0E8B               	movlw	low terminal_textAttributes@output_buff
 19402  0155BE  0101               	movlb	1	; () banked
 19403  0155C0  6F17               	movwf	strcat@to& (0+255),b
 19404  0155C2  0E02               	movlw	high terminal_textAttributes@output_buff
 19405  0155C4  6F18               	movwf	(strcat@to+1)& (0+255),b
 19406  0155C6  0EDA               	movlw	low STR_27
 19407  0155C8  6F19               	movwf	strcat@from& (0+255),b
 19408  0155CA  0EFF               	movlw	high STR_27
 19409  0155CC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19410  0155CE  ECB5  F0D2         	call	_strcat	;wreg free
 19411                           
 19412                           ;ring_buffer_interface.c: 164: break;
 19413  0155D2  D057               	goto	l1460
 19414  0155D4                     
 19415                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 19416  0155D4  0E8B               	movlw	low terminal_textAttributes@output_buff
 19417  0155D6  0101               	movlb	1	; () banked
 19418  0155D8  6F17               	movwf	strcat@to& (0+255),b
 19419  0155DA  0E02               	movlw	high terminal_textAttributes@output_buff
 19420  0155DC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19421  0155DE  0EE0               	movlw	low STR_28
 19422  0155E0  6F19               	movwf	strcat@from& (0+255),b
 19423  0155E2  0EFF               	movlw	high STR_28
 19424  0155E4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19425  0155E6  ECB5  F0D2         	call	_strcat	;wreg free
 19426                           
 19427                           ;ring_buffer_interface.c: 167: break;
 19428  0155EA  D04B               	goto	l1460
 19429  0155EC                     
 19430                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 19431  0155EC  0E8B               	movlw	low terminal_textAttributes@output_buff
 19432  0155EE  0101               	movlb	1	; () banked
 19433  0155F0  6F17               	movwf	strcat@to& (0+255),b
 19434  0155F2  0E02               	movlw	high terminal_textAttributes@output_buff
 19435  0155F4  6F18               	movwf	(strcat@to+1)& (0+255),b
 19436  0155F6  0E7C               	movlw	low (STR_3+7)
 19437  0155F8  6F19               	movwf	strcat@from& (0+255),b
 19438  0155FA  0EFF               	movlw	high (STR_3+7)
 19439  0155FC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19440  0155FE  ECB5  F0D2         	call	_strcat	;wreg free
 19441                           
 19442                           ;ring_buffer_interface.c: 170: break;
 19443  015602  D03F               	goto	l1460
 19444  015604                     
 19445                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 19446  015604  0E8B               	movlw	low terminal_textAttributes@output_buff
 19447  015606  0101               	movlb	1	; () banked
 19448  015608  6F17               	movwf	strcat@to& (0+255),b
 19449  01560A  0E02               	movlw	high terminal_textAttributes@output_buff
 19450  01560C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19451  01560E  0EE9               	movlw	low STR_30
 19452  015610  6F19               	movwf	strcat@from& (0+255),b
 19453  015612  0EFF               	movlw	high STR_30
 19454  015614  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19455  015616  ECB5  F0D2         	call	_strcat	;wreg free
 19456                           
 19457                           ;ring_buffer_interface.c: 173: break;
 19458  01561A  D033               	goto	l1460
 19459  01561C                     
 19460                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 19461  01561C  0E8B               	movlw	low terminal_textAttributes@output_buff
 19462  01561E  0101               	movlb	1	; () banked
 19463  015620  6F17               	movwf	strcat@to& (0+255),b
 19464  015622  0E02               	movlw	high terminal_textAttributes@output_buff
 19465  015624  6F18               	movwf	(strcat@to+1)& (0+255),b
 19466  015626  0EEF               	movlw	low STR_31
 19467  015628  6F19               	movwf	strcat@from& (0+255),b
 19468  01562A  0EFF               	movlw	high STR_31
 19469  01562C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19470  01562E  ECB5  F0D2         	call	_strcat	;wreg free
 19471                           
 19472                           ;ring_buffer_interface.c: 176: break;
 19473  015632  D027               	goto	l1460
 19474  015634                     
 19475                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 19476  015634  0E8B               	movlw	low terminal_textAttributes@output_buff
 19477  015636  0101               	movlb	1	; () banked
 19478  015638  6F17               	movwf	strcat@to& (0+255),b
 19479  01563A  0E02               	movlw	high terminal_textAttributes@output_buff
 19480  01563C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19481  01563E  0EEF               	movlw	low STR_31
 19482  015640  6F19               	movwf	strcat@from& (0+255),b
 19483  015642  0EFF               	movlw	high STR_31
 19484  015644  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19485  015646  ECB5  F0D2         	call	_strcat	;wreg free
 19486                           
 19487                           ;ring_buffer_interface.c: 181: }
 19488                           
 19489                           ;ring_buffer_interface.c: 180: break;
 19490  01564A  D01B               	goto	l1460
 19491  01564C                     l1458:
 19492  01564C  0102               	movlb	2	; () banked
 19493  01564E  518A               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 19494                           
 19495                           ; Switch size 1, requested type "space"
 19496                           ; Number of cases is 8, Range of values is 0 to 7
 19497                           ; switch strategies available:
 19498                           ; Name         Instructions Cycles
 19499                           ; simple_byte           25    13 (average)
 19500                           ;	Chosen strategy is simple_byte
 19501  015650  0A00               	xorlw	0	; case 0
 19502  015652  B4D8               	btfsc	status,2,c
 19503  015654  D78F               	goto	l1459
 19504  015656  0A01               	xorlw	1	; case 1
 19505  015658  B4D8               	btfsc	status,2,c
 19506  01565A  D798               	goto	l1461
 19507  01565C  0A03               	xorlw	3	; case 2
 19508  01565E  B4D8               	btfsc	status,2,c
 19509  015660  D7A1               	goto	l1462
 19510  015662  0A01               	xorlw	1	; case 3
 19511  015664  B4D8               	btfsc	status,2,c
 19512  015666  D7AA               	goto	l1463
 19513  015668  0A07               	xorlw	7	; case 4
 19514  01566A  B4D8               	btfsc	status,2,c
 19515  01566C  D7B3               	goto	l1464
 19516  01566E  0A01               	xorlw	1	; case 5
 19517  015670  B4D8               	btfsc	status,2,c
 19518  015672  D7BC               	goto	l1465
 19519  015674  0A03               	xorlw	3	; case 6
 19520  015676  B4D8               	btfsc	status,2,c
 19521  015678  D7C5               	goto	l1466
 19522  01567A  0A01               	xorlw	1	; case 7
 19523  01567C  B4D8               	btfsc	status,2,c
 19524  01567E  D7CE               	goto	l1467
 19525  015680  D7D9               	goto	l1468
 19526  015682                     l1460:
 19527                           
 19528                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 19529                           
 19530                           ; BSR set to: 2
 19531  015682  0E8B               	movlw	low terminal_textAttributes@output_buff
 19532  015684  0101               	movlb	1	; () banked
 19533  015686  6F17               	movwf	strcat@to& (0+255),b
 19534  015688  0E02               	movlw	high terminal_textAttributes@output_buff
 19535  01568A  6F18               	movwf	(strcat@to+1)& (0+255),b
 19536  01568C  0EFA               	movlw	low STR_23
 19537  01568E  6F19               	movwf	strcat@from& (0+255),b
 19538  015690  0EFF               	movlw	high STR_23
 19539  015692  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19540  015694  ECB5  F0D2         	call	_strcat	;wreg free
 19541                           
 19542                           ;ring_buffer_interface.c: 185: switch (background_color) {
 19543  015698  D06C               	goto	l1469
 19544  01569A                     
 19545                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 19546  01569A  0E8B               	movlw	low terminal_textAttributes@output_buff
 19547  01569C  0101               	movlb	1	; () banked
 19548  01569E  6F17               	movwf	strcat@to& (0+255),b
 19549  0156A0  0E02               	movlw	high terminal_textAttributes@output_buff
 19550  0156A2  6F18               	movwf	(strcat@to+1)& (0+255),b
 19551  0156A4  0E03               	movlw	low (STR_173+9)
 19552  0156A6  6F19               	movwf	strcat@from& (0+255),b
 19553  0156A8  0EFF               	movlw	high (STR_173+9)
 19554  0156AA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19555  0156AC  ECB5  F0D2         	call	_strcat	;wreg free
 19556                           
 19557                           ;ring_buffer_interface.c: 189: break;
 19558  0156B0  D07B               	goto	l1471
 19559  0156B2                     
 19560                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 19561  0156B2  0E8B               	movlw	low terminal_textAttributes@output_buff
 19562  0156B4  0101               	movlb	1	; () banked
 19563  0156B6  6F17               	movwf	strcat@to& (0+255),b
 19564  0156B8  0E02               	movlw	high terminal_textAttributes@output_buff
 19565  0156BA  6F18               	movwf	(strcat@to+1)& (0+255),b
 19566  0156BC  0ED1               	movlw	low STR_35
 19567  0156BE  6F19               	movwf	strcat@from& (0+255),b
 19568  0156C0  0EFF               	movlw	high STR_35
 19569  0156C2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19570  0156C4  ECB5  F0D2         	call	_strcat	;wreg free
 19571                           
 19572                           ;ring_buffer_interface.c: 192: break;
 19573  0156C8  D06F               	goto	l1471
 19574  0156CA                     
 19575                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 19576  0156CA  0E8B               	movlw	low terminal_textAttributes@output_buff
 19577  0156CC  0101               	movlb	1	; () banked
 19578  0156CE  6F17               	movwf	strcat@to& (0+255),b
 19579  0156D0  0E02               	movlw	high terminal_textAttributes@output_buff
 19580  0156D2  6F18               	movwf	(strcat@to+1)& (0+255),b
 19581  0156D4  0ED7               	movlw	low STR_36
 19582  0156D6  6F19               	movwf	strcat@from& (0+255),b
 19583  0156D8  0EFF               	movlw	high STR_36
 19584  0156DA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19585  0156DC  ECB5  F0D2         	call	_strcat	;wreg free
 19586                           
 19587                           ;ring_buffer_interface.c: 195: break;
 19588  0156E0  D063               	goto	l1471
 19589  0156E2                     
 19590                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 19591  0156E2  0E8B               	movlw	low terminal_textAttributes@output_buff
 19592  0156E4  0101               	movlb	1	; () banked
 19593  0156E6  6F17               	movwf	strcat@to& (0+255),b
 19594  0156E8  0E02               	movlw	high terminal_textAttributes@output_buff
 19595  0156EA  6F18               	movwf	(strcat@to+1)& (0+255),b
 19596  0156EC  0EDD               	movlw	low STR_37
 19597  0156EE  6F19               	movwf	strcat@from& (0+255),b
 19598  0156F0  0EFF               	movlw	high STR_37
 19599  0156F2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19600  0156F4  ECB5  F0D2         	call	_strcat	;wreg free
 19601                           
 19602                           ;ring_buffer_interface.c: 198: break;
 19603  0156F8  D057               	goto	l1471
 19604  0156FA                     
 19605                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 19606  0156FA  0E8B               	movlw	low terminal_textAttributes@output_buff
 19607  0156FC  0101               	movlb	1	; () banked
 19608  0156FE  6F17               	movwf	strcat@to& (0+255),b
 19609  015700  0E02               	movlw	high terminal_textAttributes@output_buff
 19610  015702  6F18               	movwf	(strcat@to+1)& (0+255),b
 19611  015704  0EE3               	movlw	low STR_38
 19612  015706  6F19               	movwf	strcat@from& (0+255),b
 19613  015708  0EFF               	movlw	high STR_38
 19614  01570A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19615  01570C  ECB5  F0D2         	call	_strcat	;wreg free
 19616                           
 19617                           ;ring_buffer_interface.c: 201: break;
 19618  015710  D04B               	goto	l1471
 19619  015712                     
 19620                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 19621  015712  0E8B               	movlw	low terminal_textAttributes@output_buff
 19622  015714  0101               	movlb	1	; () banked
 19623  015716  6F17               	movwf	strcat@to& (0+255),b
 19624  015718  0E02               	movlw	high terminal_textAttributes@output_buff
 19625  01571A  6F18               	movwf	(strcat@to+1)& (0+255),b
 19626  01571C  0EE6               	movlw	low STR_39
 19627  01571E  6F19               	movwf	strcat@from& (0+255),b
 19628  015720  0EFF               	movlw	high STR_39
 19629  015722  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19630  015724  ECB5  F0D2         	call	_strcat	;wreg free
 19631                           
 19632                           ;ring_buffer_interface.c: 204: break;
 19633  015728  D03F               	goto	l1471
 19634  01572A                     
 19635                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 19636  01572A  0E8B               	movlw	low terminal_textAttributes@output_buff
 19637  01572C  0101               	movlb	1	; () banked
 19638  01572E  6F17               	movwf	strcat@to& (0+255),b
 19639  015730  0E02               	movlw	high terminal_textAttributes@output_buff
 19640  015732  6F18               	movwf	(strcat@to+1)& (0+255),b
 19641  015734  0EEC               	movlw	low STR_40
 19642  015736  6F19               	movwf	strcat@from& (0+255),b
 19643  015738  0EFF               	movlw	high STR_40
 19644  01573A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19645  01573C  ECB5  F0D2         	call	_strcat	;wreg free
 19646                           
 19647                           ;ring_buffer_interface.c: 207: break;
 19648  015740  D033               	goto	l1471
 19649  015742                     
 19650                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 19651  015742  0E8B               	movlw	low terminal_textAttributes@output_buff
 19652  015744  0101               	movlb	1	; () banked
 19653  015746  6F17               	movwf	strcat@to& (0+255),b
 19654  015748  0E02               	movlw	high terminal_textAttributes@output_buff
 19655  01574A  6F18               	movwf	(strcat@to+1)& (0+255),b
 19656  01574C  0EF2               	movlw	low STR_41
 19657  01574E  6F19               	movwf	strcat@from& (0+255),b
 19658  015750  0EFF               	movlw	high STR_41
 19659  015752  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19660  015754  ECB5  F0D2         	call	_strcat	;wreg free
 19661                           
 19662                           ;ring_buffer_interface.c: 210: break;
 19663  015758  D027               	goto	l1471
 19664  01575A                     
 19665                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 19666  01575A  0E8B               	movlw	low terminal_textAttributes@output_buff
 19667  01575C  0101               	movlb	1	; () banked
 19668  01575E  6F17               	movwf	strcat@to& (0+255),b
 19669  015760  0E02               	movlw	high terminal_textAttributes@output_buff
 19670  015762  6F18               	movwf	(strcat@to+1)& (0+255),b
 19671  015764  0EF2               	movlw	low STR_41
 19672  015766  6F19               	movwf	strcat@from& (0+255),b
 19673  015768  0EFF               	movlw	high STR_41
 19674  01576A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19675  01576C  ECB5  F0D2         	call	_strcat	;wreg free
 19676                           
 19677                           ;ring_buffer_interface.c: 215: }
 19678                           
 19679                           ;ring_buffer_interface.c: 214: break;
 19680  015770  D01B               	goto	l1471
 19681  015772                     l1469:
 19682  015772  0101               	movlb	1	; () banked
 19683  015774  51BD               	movf	terminal_textAttributes@background_color& (0+255),w,b
 19684                           
 19685                           ; Switch size 1, requested type "space"
 19686                           ; Number of cases is 8, Range of values is 0 to 7
 19687                           ; switch strategies available:
 19688                           ; Name         Instructions Cycles
 19689                           ; simple_byte           25    13 (average)
 19690                           ;	Chosen strategy is simple_byte
 19691  015776  0A00               	xorlw	0	; case 0
 19692  015778  B4D8               	btfsc	status,2,c
 19693  01577A  D78F               	goto	l1470
 19694  01577C  0A01               	xorlw	1	; case 1
 19695  01577E  B4D8               	btfsc	status,2,c
 19696  015780  D798               	goto	l1472
 19697  015782  0A03               	xorlw	3	; case 2
 19698  015784  B4D8               	btfsc	status,2,c
 19699  015786  D7A1               	goto	l1473
 19700  015788  0A01               	xorlw	1	; case 3
 19701  01578A  B4D8               	btfsc	status,2,c
 19702  01578C  D7AA               	goto	l1474
 19703  01578E  0A07               	xorlw	7	; case 4
 19704  015790  B4D8               	btfsc	status,2,c
 19705  015792  D7B3               	goto	l1475
 19706  015794  0A01               	xorlw	1	; case 5
 19707  015796  B4D8               	btfsc	status,2,c
 19708  015798  D7BC               	goto	l1476
 19709  01579A  0A03               	xorlw	3	; case 6
 19710  01579C  B4D8               	btfsc	status,2,c
 19711  01579E  D7C5               	goto	l1477
 19712  0157A0  0A01               	xorlw	1	; case 7
 19713  0157A2  B4D8               	btfsc	status,2,c
 19714  0157A4  D7CE               	goto	l1478
 19715  0157A6  D7D9               	goto	l1479
 19716  0157A8                     l1471:
 19717                           
 19718                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 19719                           
 19720                           ; BSR set to: 1
 19721  0157A8  0E8B               	movlw	low terminal_textAttributes@output_buff
 19722  0157AA  0101               	movlb	1	; () banked
 19723  0157AC  6F17               	movwf	strcat@to& (0+255),b
 19724  0157AE  0E02               	movlw	high terminal_textAttributes@output_buff
 19725  0157B0  6F18               	movwf	(strcat@to+1)& (0+255),b
 19726  0157B2  0EFC               	movlw	low STR_43
 19727  0157B4  6F19               	movwf	strcat@from& (0+255),b
 19728  0157B6  0EFF               	movlw	high STR_43
 19729  0157B8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19730  0157BA  ECB5  F0D2         	call	_strcat	;wreg free
 19731                           
 19732                           ;ring_buffer_interface.c: 219: printf(output_buff);
 19733  0157BE  0E8B               	movlw	low terminal_textAttributes@output_buff
 19734  0157C0  0101               	movlb	1	; () banked
 19735  0157C2  6FAC               	movwf	printf@f& (0+255),b
 19736  0157C4  0E02               	movlw	high terminal_textAttributes@output_buff
 19737  0157C6  6FAD               	movwf	(printf@f+1)& (0+255),b
 19738  0157C8  ECB9  F0D4         	call	_printf	;wreg free
 19739  0157CC  0012               	return		;funcret
 19740  0157CE                     __end_of_terminal_textAttributes:
 19741                           	opt stack 0
 19742                           tblptru	equ	0xFF8
 19743                           tblptrh	equ	0xFF7
 19744                           tblptrl	equ	0xFF6
 19745                           tablat	equ	0xFF5
 19746                           intcon	equ	0xFF2
 19747                           postinc0	equ	0xFEE
 19748                           wreg	equ	0xFE8
 19749                           indf1	equ	0xFE7
 19750                           postdec1	equ	0xFE5
 19751                           fsr1h	equ	0xFE2
 19752                           fsr1l	equ	0xFE1
 19753                           indf2	equ	0xFDF
 19754                           postinc2	equ	0xFDE
 19755                           fsr2h	equ	0xFDA
 19756                           fsr2l	equ	0xFD9
 19757                           status	equ	0xFD8
 19758                           
 19759 ;; *************** function _strncpy *****************
 19760 ;; Defined at:
 19761 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 19762 ;; Parameters:    Size  Location     Type
 19763 ;;  to              2   23[BANK1 ] PTR unsigned char 
 19764 ;;		 -> terminal_textAttributes@output_buff(15), 
 19765 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 19766 ;;		 -> STR_15(3), 
 19767 ;;  size            2   27[BANK1 ] unsigned int 
 19768 ;; Auto vars:     Size  Location     Type
 19769 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 19770 ;;		 -> terminal_textAttributes@output_buff(15), 
 19771 ;; Return value:  Size  Location     Type
 19772 ;;                  2   23[BANK1 ] PTR unsigned char 
 19773 ;; Registers used:
 19774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19775 ;; Tracked objects:
 19776 ;;		On entry : 0/0
 19777 ;;		On exit  : 0/0
 19778 ;;		Unchanged: 0/0
 19779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19780 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19781 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19783 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19784 ;;Total ram usage:        8 bytes
 19785 ;; Hardware stack levels used:    1
 19786 ;; Hardware stack levels required when called:   13
 19787 ;; This function calls:
 19788 ;;		Nothing
 19789 ;; This function is called by:
 19790 ;;		_terminal_textAttributes
 19791 ;; This function uses a non-reentrant model
 19792 ;;
 19793                           
 19794                           	psect	text6
 19795  019F6E                     __ptext6:
 19796                           	opt stack 0
 19797  019F6E                     _strncpy:
 19798                           	opt stack 15
 19799                           
 19800                           ;incstack = 0
 19801  019F6E  C117  F11D         	movff	strncpy@to,strncpy@cp
 19802  019F72  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 19803  019F76  D018               	goto	l2856
 19804  019F78  0101               	movlb	1	; () banked
 19805  019F7A  071B               	decf	strncpy@size& (0+255),f,b
 19806  019F7C  A0D8               	btfss	status,0,c
 19807  019F7E  071C               	decf	(strncpy@size+1)& (0+255),f,b
 19808                           
 19809                           ; BSR set to: 1
 19810  019F80  C119  FFF6         	movff	strncpy@from,tblptrl
 19811  019F84  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 19812  019F88  4B19               	infsnz	strncpy@from& (0+255),f,b
 19813  019F8A  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 19814  019F8C                     	if	0	;tblptru may be non-zero
 19815  019F8C                     	endif
 19816  019F8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19817  019F8C  0E00               	movlw	low (__mediumconst shr (0+16))
 19818  019F8E  6EF8               	movwf	tblptru,c
 19819  019F90                     	endif
 19820  019F90  C11D  FFD9         	movff	strncpy@cp,fsr2l
 19821  019F94  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 19822  019F98  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 19823  019F9A  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 19824  019F9C  0008               	tblrd		*
 19825  019F9E  CFF5 FFDF          	movff	tablat,indf2
 19826  019FA2  50DF               	movf	indf2,w,c
 19827  019FA4  B4D8               	btfsc	status,2,c
 19828  019FA6  D00E               	goto	l2858
 19829  019FA8                     l2856:
 19830                           
 19831                           ; BSR set to: 1
 19832                           
 19833                           ; BSR set to: 1
 19834  019FA8  0101               	movlb	1	; () banked
 19835  019FAA  511B               	movf	strncpy@size& (0+255),w,b
 19836  019FAC  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 19837  019FAE  B4D8               	btfsc	status,2,c
 19838  019FB0  D009               	goto	l2858
 19839  019FB2  D7E2               	goto	l2855
 19840  019FB4                     l15305:
 19841                           
 19842                           ; BSR set to: 1
 19843  019FB4  C11D  FFD9         	movff	strncpy@cp,fsr2l
 19844  019FB8  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 19845  019FBC  0E00               	movlw	0
 19846  019FBE  6EDF               	movwf	indf2,c
 19847                           
 19848                           ; BSR set to: 1
 19849  019FC0  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 19850  019FC2  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 19851  019FC4                     l2858:
 19852                           
 19853                           ; BSR set to: 1
 19854                           
 19855                           ; BSR set to: 1
 19856  019FC4  071B               	decf	strncpy@size& (0+255),f,b
 19857  019FC6  A0D8               	btfss	status,0,c
 19858  019FC8  071C               	decf	(strncpy@size+1)& (0+255),f,b
 19859  019FCA  291B               	incf	strncpy@size& (0+255),w,b
 19860  019FCC  E1F3               	bnz	l15305
 19861  019FCE  291C               	incf	(strncpy@size+1)& (0+255),w,b
 19862  019FD0  B4D8               	btfsc	status,2,c
 19863  019FD2  0012               	return	
 19864  019FD4  D7EF               	goto	l2859
 19865  019FD6                     __end_of_strncpy:
 19866                           	opt stack 0
 19867                           tblptru	equ	0xFF8
 19868                           tblptrh	equ	0xFF7
 19869                           tblptrl	equ	0xFF6
 19870                           tablat	equ	0xFF5
 19871                           intcon	equ	0xFF2
 19872                           postinc0	equ	0xFEE
 19873                           wreg	equ	0xFE8
 19874                           indf1	equ	0xFE7
 19875                           postdec1	equ	0xFE5
 19876                           fsr1h	equ	0xFE2
 19877                           fsr1l	equ	0xFE1
 19878                           indf2	equ	0xFDF
 19879                           postinc2	equ	0xFDE
 19880                           fsr2h	equ	0xFDA
 19881                           fsr2l	equ	0xFD9
 19882                           status	equ	0xFD8
 19883                           
 19884 ;; *************** function _strcat *****************
 19885 ;; Defined at:
 19886 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 19887 ;; Parameters:    Size  Location     Type
 19888 ;;  to              2   23[BANK1 ] PTR unsigned char 
 19889 ;;		 -> terminal_textAttributes@output_buff(15), 
 19890 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 19891 ;;		 -> STR_43(2), STR_42(3), STR_41(3), STR_40(3), 
 19892 ;;		 -> STR_39(3), STR_38(3), STR_37(3), STR_36(3), 
 19893 ;;		 -> STR_35(3), STR_34(3), STR_33(2), STR_32(3), 
 19894 ;;		 -> STR_31(3), STR_30(3), STR_29(3), STR_28(3), 
 19895 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 19896 ;;		 -> STR_23(2), STR_22(2), STR_21(2), STR_20(2), 
 19897 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 19898 ;; Auto vars:     Size  Location     Type
 19899 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 19900 ;;		 -> terminal_textAttributes@output_buff(15), 
 19901 ;; Return value:  Size  Location     Type
 19902 ;;                  2   23[BANK1 ] PTR unsigned char 
 19903 ;; Registers used:
 19904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19905 ;; Tracked objects:
 19906 ;;		On entry : 0/0
 19907 ;;		On exit  : 0/0
 19908 ;;		Unchanged: 0/0
 19909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19910 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19911 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19913 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19914 ;;Total ram usage:        6 bytes
 19915 ;; Hardware stack levels used:    1
 19916 ;; Hardware stack levels required when called:   13
 19917 ;; This function calls:
 19918 ;;		Nothing
 19919 ;; This function is called by:
 19920 ;;		_terminal_textAttributes
 19921 ;; This function uses a non-reentrant model
 19922 ;;
 19923                           
 19924                           	psect	text7
 19925  01A56A                     __ptext7:
 19926                           	opt stack 0
 19927  01A56A                     _strcat:
 19928                           	opt stack 15
 19929                           
 19930                           ; BSR set to: 1
 19931                           ;incstack = 0
 19932  01A56A  C117  F11B         	movff	strcat@to,strcat@cp
 19933  01A56E  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 19934  01A572  D003               	goto	l2825
 19935  01A574  0101               	movlb	1	; () banked
 19936  01A576  4B1B               	infsnz	strcat@cp& (0+255),f,b
 19937  01A578  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 19938  01A57A                     l2825:
 19939                           
 19940                           ; BSR set to: 1
 19941  01A57A  C11B  FFD9         	movff	strcat@cp,fsr2l
 19942  01A57E  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 19943  01A582  50DF               	movf	indf2,w,c
 19944  01A584  B4D8               	btfsc	status,2,c
 19945  01A586  D006               	goto	l2828
 19946  01A588  D7F5               	goto	l2826
 19947  01A58A  0101               	movlb	1	; () banked
 19948  01A58C  4B1B               	infsnz	strcat@cp& (0+255),f,b
 19949  01A58E  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 19950  01A590  4B19               	infsnz	strcat@from& (0+255),f,b
 19951  01A592  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 19952  01A594                     l2828:
 19953                           
 19954                           ; BSR set to: 1
 19955  01A594  C119  FFF6         	movff	strcat@from,tblptrl
 19956  01A598  C11A  FFF7         	movff	strcat@from+1,tblptrh
 19957  01A59C                     	if	0	;tblptru may be non-zero
 19958  01A59C                     	endif
 19959  01A59C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19960  01A59C  0E00               	movlw	low (__mediumconst shr (0+16))
 19961  01A59E  6EF8               	movwf	tblptru,c
 19962  01A5A0                     	endif
 19963  01A5A0  C11B  FFD9         	movff	strcat@cp,fsr2l
 19964  01A5A4  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 19965  01A5A8  0008               	tblrd		*
 19966  01A5AA  CFF5 FFDF          	movff	tablat,indf2
 19967  01A5AE  50DF               	movf	indf2,w,c
 19968  01A5B0  B4D8               	btfsc	status,2,c
 19969  01A5B2  0012               	return	
 19970  01A5B4  D7EA               	goto	l2829
 19971  01A5B6                     __end_of_strcat:
 19972                           	opt stack 0
 19973                           tblptru	equ	0xFF8
 19974                           tblptrh	equ	0xFF7
 19975                           tblptrl	equ	0xFF6
 19976                           tablat	equ	0xFF5
 19977                           intcon	equ	0xFF2
 19978                           postinc0	equ	0xFEE
 19979                           wreg	equ	0xFE8
 19980                           indf1	equ	0xFE7
 19981                           postdec1	equ	0xFE5
 19982                           fsr1h	equ	0xFE2
 19983                           fsr1l	equ	0xFE1
 19984                           indf2	equ	0xFDF
 19985                           postinc2	equ	0xFDE
 19986                           fsr2h	equ	0xFDA
 19987                           fsr2l	equ	0xFD9
 19988                           status	equ	0xFD8
 19989                           
 19990 ;; *************** function _terminal_printNewline *****************
 19991 ;; Defined at:
 19992 ;;		line 230 in file "ring_buffer_interface.c"
 19993 ;; Parameters:    Size  Location     Type
 19994 ;;		None
 19995 ;; Auto vars:     Size  Location     Type
 19996 ;;		None
 19997 ;; Return value:  Size  Location     Type
 19998 ;;                  1    wreg      void 
 19999 ;; Registers used:
 20000 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20001 ;; Tracked objects:
 20002 ;;		On entry : 0/0
 20003 ;;		On exit  : 0/0
 20004 ;;		Unchanged: 0/0
 20005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20010 ;;Total ram usage:        0 bytes
 20011 ;; Hardware stack levels used:    1
 20012 ;; Hardware stack levels required when called:   17
 20013 ;; This function calls:
 20014 ;;		_printf
 20015 ;; This function is called by:
 20016 ;;		_ringBufferLUT
 20017 ;; This function uses a non-reentrant model
 20018 ;;
 20019                           
 20020                           	psect	text8
 20021  01B0C4                     __ptext8:
 20022                           	opt stack 0
 20023  01B0C4                     _terminal_printNewline:
 20024                           	opt stack 11
 20025                           
 20026                           ;ring_buffer_interface.c: 232: printf("\n\r");
 20027                           
 20028                           ;incstack = 0
 20029  01B0C4  0EE8               	movlw	low (STR_153+717)
 20030  01B0C6  0101               	movlb	1	; () banked
 20031  01B0C8  6FAC               	movwf	printf@f& (0+255),b
 20032  01B0CA  0EE8               	movlw	high (STR_153+717)
 20033  01B0CC  6FAD               	movwf	(printf@f+1)& (0+255),b
 20034  01B0CE  ECB9  F0D4         	call	_printf	;wreg free
 20035  01B0D2  0012               	return		;funcret
 20036  01B0D4                     __end_of_terminal_printNewline:
 20037                           	opt stack 0
 20038                           tblptru	equ	0xFF8
 20039                           tblptrh	equ	0xFF7
 20040                           tblptrl	equ	0xFF6
 20041                           tablat	equ	0xFF5
 20042                           intcon	equ	0xFF2
 20043                           postinc0	equ	0xFEE
 20044                           wreg	equ	0xFE8
 20045                           indf1	equ	0xFE7
 20046                           postdec1	equ	0xFE5
 20047                           fsr1h	equ	0xFE2
 20048                           fsr1l	equ	0xFE1
 20049                           indf2	equ	0xFDF
 20050                           postinc2	equ	0xFDE
 20051                           fsr2h	equ	0xFDA
 20052                           fsr2l	equ	0xFD9
 20053                           status	equ	0xFD8
 20054                           
 20055 ;; *************** function _strstr *****************
 20056 ;; Defined at:
 20057 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 20058 ;; Parameters:    Size  Location     Type
 20059 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 20060 ;;		 -> line(64), NULL(0), 
 20061 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 20062 ;;		 -> STR_125(25), 
 20063 ;; Auto vars:     Size  Location     Type
 20064 ;;		None
 20065 ;; Return value:  Size  Location     Type
 20066 ;;                  2   38[BANK1 ] PTR unsigned char 
 20067 ;; Registers used:
 20068 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20069 ;; Tracked objects:
 20070 ;;		On entry : 0/0
 20071 ;;		On exit  : 0/0
 20072 ;;		Unchanged: 0/0
 20073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20074 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20077 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20078 ;;Total ram usage:        4 bytes
 20079 ;; Hardware stack levels used:    1
 20080 ;; Hardware stack levels required when called:   14
 20081 ;; This function calls:
 20082 ;;		_strchr
 20083 ;;		_strlen
 20084 ;;		_strncmp
 20085 ;; This function is called by:
 20086 ;;		_ringBufferLUT
 20087 ;; This function uses a non-reentrant model
 20088 ;;
 20089                           
 20090                           	psect	text9
 20091  019A0A                     __ptext9:
 20092                           	opt stack 0
 20093  019A0A                     _strstr:
 20094                           	opt stack 14
 20095                           
 20096                           ;incstack = 0
 20097  019A0A  D034               	goto	l2870
 20098  019A0C  C126  F11D         	movff	strstr@s1,strncmp@s1
 20099  019A10  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 20100  019A14  C128  F11F         	movff	strstr@s2,strncmp@s2
 20101  019A18  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 20102  019A1C  C128  F117         	movff	strstr@s2,strlen@s
 20103  019A20  C129  F118         	movff	strstr@s2+1,strlen@s+1
 20104  019A24  EC1A  F0D1         	call	_strlen	;wreg free
 20105  019A28  C117  F121         	movff	?_strlen,strncmp@len
 20106  019A2C  C118  F122         	movff	?_strlen+1,strncmp@len+1
 20107  019A30  ECBD  F0CC         	call	_strncmp	;wreg free
 20108  019A34  0101               	movlb	1	; () banked
 20109  019A36  511D               	movf	?_strncmp& (0+255),w,b
 20110  019A38  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 20111  019A3A  A4D8               	btfss	status,2,c
 20112  019A3C  D005               	goto	l2872
 20113                           
 20114                           ; BSR set to: 1
 20115  019A3E  C126  F126         	movff	strstr@s1,?_strstr
 20116  019A42  C127  F127         	movff	strstr@s1+1,?_strstr+1
 20117                           
 20118                           ; BSR set to: 1
 20119  019A46  0012               	return	
 20120  019A48                     l2872:
 20121                           
 20122                           ; BSR set to: 1
 20123                           
 20124                           ; BSR set to: 1
 20125  019A48  0E01               	movlw	1
 20126  019A4A  2526               	addwf	strstr@s1& (0+255),w,b
 20127  019A4C  6F17               	movwf	strchr@ptr& (0+255),b
 20128  019A4E  0E00               	movlw	0
 20129  019A50  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 20130  019A52  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 20131  019A54  C128  FFF6         	movff	strstr@s2,tblptrl
 20132  019A58  C129  FFF7         	movff	strstr@s2+1,tblptrh
 20133  019A5C                     	if	0	;tblptru may be non-zero
 20134  019A5C                     	endif
 20135  019A5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20136  019A5C  0E00               	movlw	low (__mediumconst shr (0+16))
 20137  019A5E  6EF8               	movwf	tblptru,c
 20138  019A60                     	endif
 20139  019A60  0008               	tblrd		*
 20140  019A62  50F5               	movf	tablat,w,c
 20141  019A64  6F19               	movwf	strchr@chr& (0+255),b
 20142  019A66  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 20143  019A68  EC6B  F0D5         	call	_strchr	;wreg free
 20144  019A6C  C117  F126         	movff	?_strchr,strstr@s1
 20145  019A70  C118  F127         	movff	?_strchr+1,strstr@s1+1
 20146  019A74                     l2870:
 20147  019A74  0101               	movlb	1	; () banked
 20148  019A76  5126               	movf	strstr@s1& (0+255),w,b
 20149  019A78  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 20150  019A7A  B4D8               	btfsc	status,2,c
 20151  019A7C  D007               	goto	u20440
 20152                           
 20153                           ; BSR set to: 1
 20154  019A7E  C126  FFD9         	movff	strstr@s1,fsr2l
 20155  019A82  C127  FFDA         	movff	strstr@s1+1,fsr2h
 20156  019A86  50DF               	movf	indf2,w,c
 20157  019A88  A4D8               	btfss	status,2,c
 20158  019A8A  D7C0               	goto	l2871
 20159  019A8C                     u20440:
 20160                           
 20161                           ; BSR set to: 1
 20162                           
 20163                           ; BSR set to: 1
 20164                           
 20165                           ; BSR set to: 1
 20166  019A8C  0E00               	movlw	0
 20167  019A8E  6F26               	movwf	?_strstr& (0+255),b
 20168  019A90  0E00               	movlw	0
 20169  019A92  6F27               	movwf	(?_strstr+1)& (0+255),b
 20170  019A94  0012               	return	
 20171  019A96                     __end_of_strstr:
 20172                           	opt stack 0
 20173                           tblptru	equ	0xFF8
 20174                           tblptrh	equ	0xFF7
 20175                           tblptrl	equ	0xFF6
 20176                           tablat	equ	0xFF5
 20177                           intcon	equ	0xFF2
 20178                           postinc0	equ	0xFEE
 20179                           wreg	equ	0xFE8
 20180                           indf1	equ	0xFE7
 20181                           postdec1	equ	0xFE5
 20182                           fsr1h	equ	0xFE2
 20183                           fsr1l	equ	0xFE1
 20184                           indf2	equ	0xFDF
 20185                           postinc2	equ	0xFDE
 20186                           fsr2h	equ	0xFDA
 20187                           fsr2l	equ	0xFD9
 20188                           status	equ	0xFD8
 20189                           
 20190 ;; *************** function _strncmp *****************
 20191 ;; Defined at:
 20192 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 20193 ;; Parameters:    Size  Location     Type
 20194 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 20195 ;;		 -> line(64), NULL(0), 
 20196 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 20197 ;;		 -> STR_125(25), 
 20198 ;;  len             2   33[BANK1 ] unsigned int 
 20199 ;; Auto vars:     Size  Location     Type
 20200 ;;		None
 20201 ;; Return value:  Size  Location     Type
 20202 ;;                  2   29[BANK1 ] int 
 20203 ;; Registers used:
 20204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20205 ;; Tracked objects:
 20206 ;;		On entry : 0/0
 20207 ;;		On exit  : 0/0
 20208 ;;		Unchanged: 0/0
 20209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20210 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20212 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20213 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20214 ;;Total ram usage:        9 bytes
 20215 ;; Hardware stack levels used:    1
 20216 ;; Hardware stack levels required when called:   13
 20217 ;; This function calls:
 20218 ;;		Nothing
 20219 ;; This function is called by:
 20220 ;;		_strstr
 20221 ;; This function uses a non-reentrant model
 20222 ;;
 20223                           
 20224                           	psect	text10
 20225  01997A                     __ptext10:
 20226                           	opt stack 0
 20227  01997A                     _strncmp:
 20228                           	opt stack 14
 20229                           
 20230                           ; BSR set to: 1
 20231                           ;incstack = 0
 20232  01997A  D039               	goto	l2929
 20233  01997C                     l15689:
 20234  01997C  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20235  019980  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20236  019984  50DF               	movf	indf2,w,c
 20237  019986  B4D8               	btfsc	status,2,c
 20238  019988  D012               	goto	u19950
 20239  01998A  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20240  01998E  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20241  019992  50DF               	movf	indf2,w,c
 20242  019994  0101               	movlb	1	; () banked
 20243  019996  6F23               	movwf	??_strncmp& (0+255),b
 20244  019998  C11F  FFF6         	movff	strncmp@s2,tblptrl
 20245  01999C  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 20246  0199A0                     	if	0	;tblptru may be non-zero
 20247  0199A0                     	endif
 20248  0199A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20249  0199A0  0E00               	movlw	low (__mediumconst shr (0+16))
 20250  0199A2  6EF8               	movwf	tblptru,c
 20251  0199A4                     	endif
 20252  0199A4  0008               	tblrd		*
 20253  0199A6  50F5               	movf	tablat,w,c
 20254  0199A8  1923               	xorwf	??_strncmp& (0+255),w,b
 20255  0199AA  B4D8               	btfsc	status,2,c
 20256  0199AC  D01C               	goto	l2931
 20257  0199AE                     u19950:
 20258                           
 20259                           ; BSR set to: 1
 20260  0199AE  C11F  FFF6         	movff	strncmp@s2,tblptrl
 20261  0199B2  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 20262  0199B6                     	if	0	;tblptru may be non-zero
 20263  0199B6                     	endif
 20264  0199B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20265  0199B6  0E00               	movlw	low (__mediumconst shr (0+16))
 20266  0199B8  6EF8               	movwf	tblptru,c
 20267  0199BA                     	endif
 20268  0199BA  0008               	tblrd		*
 20269  0199BC  50F5               	movf	tablat,w,c
 20270  0199BE  0101               	movlb	1	; () banked
 20271  0199C0  6F23               	movwf	??_strncmp& (0+255),b
 20272  0199C2  6B24               	clrf	(??_strncmp+1)& (0+255),b
 20273  0199C4  1F23               	comf	??_strncmp& (0+255),f,b
 20274  0199C6  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 20275  0199C8  4B23               	infsnz	??_strncmp& (0+255),f,b
 20276  0199CA  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 20277  0199CC  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20278  0199D0  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20279  0199D4  50DF               	movf	indf2,w,c
 20280  0199D6  6F25               	movwf	(??_strncmp+2)& (0+255),b
 20281  0199D8  5125               	movf	(??_strncmp+2)& (0+255),w,b
 20282  0199DA  2523               	addwf	??_strncmp& (0+255),w,b
 20283  0199DC  6F1D               	movwf	?_strncmp& (0+255),b
 20284  0199DE  0E00               	movlw	0
 20285  0199E0  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 20286  0199E2  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 20287                           
 20288                           ; BSR set to: 1
 20289  0199E4  0012               	return	
 20290  0199E6                     l2931:
 20291                           
 20292                           ; BSR set to: 1
 20293                           
 20294                           ; BSR set to: 1
 20295  0199E6  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 20296  0199E8  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 20297  0199EA  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 20298  0199EC  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 20299  0199EE                     l2929:
 20300                           
 20301                           ; BSR set to: 1
 20302  0199EE  0101               	movlb	1	; () banked
 20303  0199F0  0721               	decf	strncmp@len& (0+255),f,b
 20304  0199F2  A0D8               	btfss	status,0,c
 20305  0199F4  0722               	decf	(strncmp@len+1)& (0+255),f,b
 20306  0199F6  2921               	incf	strncmp@len& (0+255),w,b
 20307  0199F8  E1C1               	bnz	l15689
 20308  0199FA  2922               	incf	(strncmp@len+1)& (0+255),w,b
 20309  0199FC  A4D8               	btfss	status,2,c
 20310  0199FE  D7BE               	goto	l2930
 20311                           
 20312                           ; BSR set to: 1
 20313                           
 20314                           ; BSR set to: 1
 20315  019A00  0E00               	movlw	0
 20316  019A02  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 20317  019A04  0E00               	movlw	0
 20318  019A06  6F1D               	movwf	?_strncmp& (0+255),b
 20319  019A08  0012               	return	
 20320  019A0A                     __end_of_strncmp:
 20321                           	opt stack 0
 20322                           tblptru	equ	0xFF8
 20323                           tblptrh	equ	0xFF7
 20324                           tblptrl	equ	0xFF6
 20325                           tablat	equ	0xFF5
 20326                           intcon	equ	0xFF2
 20327                           postinc0	equ	0xFEE
 20328                           wreg	equ	0xFE8
 20329                           indf1	equ	0xFE7
 20330                           postdec1	equ	0xFE5
 20331                           fsr1h	equ	0xFE2
 20332                           fsr1l	equ	0xFE1
 20333                           indf2	equ	0xFDF
 20334                           postinc2	equ	0xFDE
 20335                           fsr2h	equ	0xFDA
 20336                           fsr2l	equ	0xFD9
 20337                           status	equ	0xFD8
 20338                           
 20339 ;; *************** function _strlen *****************
 20340 ;; Defined at:
 20341 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 20342 ;; Parameters:    Size  Location     Type
 20343 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 20344 ;;		 -> STR_125(25), line(64), 
 20345 ;; Auto vars:     Size  Location     Type
 20346 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 20347 ;;		 -> STR_125(25), line(64), 
 20348 ;; Return value:  Size  Location     Type
 20349 ;;                  2   23[BANK1 ] unsigned int 
 20350 ;; Registers used:
 20351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 20352 ;; Tracked objects:
 20353 ;;		On entry : 0/0
 20354 ;;		On exit  : 0/0
 20355 ;;		Unchanged: 0/0
 20356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20357 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20358 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20359 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20360 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20361 ;;Total ram usage:        6 bytes
 20362 ;; Hardware stack levels used:    1
 20363 ;; Hardware stack levels required when called:   13
 20364 ;; This function calls:
 20365 ;;		Nothing
 20366 ;; This function is called by:
 20367 ;;		_terminal_ringBufferPull
 20368 ;;		_strstr
 20369 ;; This function uses a non-reentrant model
 20370 ;;
 20371                           
 20372                           	psect	text11
 20373  01A234                     __ptext11:
 20374                           	opt stack 0
 20375  01A234                     _strlen:
 20376                           	opt stack 16
 20377                           
 20378                           ; BSR set to: 1
 20379                           ;incstack = 0
 20380  01A234  C117  F11B         	movff	strlen@s,strlen@cp
 20381  01A238  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 20382  01A23C  D003               	goto	l2848
 20383  01A23E  0101               	movlb	1	; () banked
 20384  01A240  4B1B               	infsnz	strlen@cp& (0+255),f,b
 20385  01A242  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 20386  01A244                     l2848:
 20387                           
 20388                           ; BSR set to: 1
 20389  01A244  C11B  FFF6         	movff	strlen@cp,tblptrl
 20390  01A248  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 20391  01A24C  0E00               	movlw	low (__mediumconst shr (0+16))
 20392  01A24E  6EF8               	movwf	tblptru,c
 20393  01A250  0E0D               	movlw	(high __ramtop+-1)
 20394  01A252  64F7               	cpfsgt	tblptrh,c
 20395  01A254  D003               	bra	u19927
 20396  01A256  0008               	tblrd		*
 20397  01A258  50F5               	movf	tablat,w,c
 20398  01A25A  D005               	bra	u19920
 20399  01A25C                     u19927:
 20400  01A25C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20401  01A260  CFF7 FFEA          	movff	tblptrh,fsr0h
 20402  01A264  50EF               	movf	indf0,w,c
 20403  01A266                     u19920:
 20404  01A266  0900               	iorlw	0
 20405  01A268  A4D8               	btfss	status,2,c
 20406  01A26A  D7E9               	goto	l2849
 20407  01A26C  C117  F119         	movff	strlen@s,??_strlen
 20408  01A270  C118  F11A         	movff	strlen@s+1,??_strlen+1
 20409  01A274  0101               	movlb	1	; () banked
 20410  01A276  1F19               	comf	??_strlen& (0+255),f,b
 20411  01A278  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 20412  01A27A  4B19               	infsnz	??_strlen& (0+255),f,b
 20413  01A27C  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 20414  01A27E  511B               	movf	strlen@cp& (0+255),w,b
 20415  01A280  2519               	addwf	??_strlen& (0+255),w,b
 20416  01A282  6F17               	movwf	?_strlen& (0+255),b
 20417  01A284  511C               	movf	(strlen@cp+1)& (0+255),w,b
 20418  01A286  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 20419  01A288  6F18               	movwf	(?_strlen+1)& (0+255),b
 20420  01A28A  0012               	return	
 20421  01A28C                     __end_of_strlen:
 20422                           	opt stack 0
 20423                           tblptru	equ	0xFF8
 20424                           tblptrh	equ	0xFF7
 20425                           tblptrl	equ	0xFF6
 20426                           tablat	equ	0xFF5
 20427                           intcon	equ	0xFF2
 20428                           indf0	equ	0xFEF
 20429                           postinc0	equ	0xFEE
 20430                           fsr0h	equ	0xFEA
 20431                           fsr0l	equ	0xFE9
 20432                           wreg	equ	0xFE8
 20433                           indf1	equ	0xFE7
 20434                           postdec1	equ	0xFE5
 20435                           fsr1h	equ	0xFE2
 20436                           fsr1l	equ	0xFE1
 20437                           indf2	equ	0xFDF
 20438                           postinc2	equ	0xFDE
 20439                           fsr2h	equ	0xFDA
 20440                           fsr2l	equ	0xFD9
 20441                           status	equ	0xFD8
 20442                           
 20443 ;; *************** function _strchr *****************
 20444 ;; Defined at:
 20445 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 20446 ;; Parameters:    Size  Location     Type
 20447 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 20448 ;;		 -> line(64), NULL(0), 
 20449 ;;  chr             2   25[BANK1 ] int 
 20450 ;; Auto vars:     Size  Location     Type
 20451 ;;		None
 20452 ;; Return value:  Size  Location     Type
 20453 ;;                  2   23[BANK1 ] PTR unsigned char 
 20454 ;; Registers used:
 20455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20456 ;; Tracked objects:
 20457 ;;		On entry : 0/0
 20458 ;;		On exit  : 0/0
 20459 ;;		Unchanged: 0/0
 20460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20461 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20463 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20464 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20465 ;;Total ram usage:        5 bytes
 20466 ;; Hardware stack levels used:    1
 20467 ;; Hardware stack levels required when called:   13
 20468 ;; This function calls:
 20469 ;;		Nothing
 20470 ;; This function is called by:
 20471 ;;		_strstr
 20472 ;; This function uses a non-reentrant model
 20473 ;;
 20474                           
 20475                           	psect	text12
 20476  01AAD6                     __ptext12:
 20477                           	opt stack 0
 20478  01AAD6                     _strchr:
 20479                           	opt stack 14
 20480                           
 20481                           ; BSR set to: 1
 20482                           ;incstack = 0
 20483  01AAD6  C117  FFD9         	movff	strchr@ptr,fsr2l
 20484  01AADA  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 20485  01AADE  0101               	movlb	1	; () banked
 20486  01AAE0  5119               	movf	strchr@chr& (0+255),w,b
 20487  01AAE2  18DE               	xorwf	postinc2,w,c
 20488  01AAE4  A4D8               	btfss	status,2,c
 20489  01AAE6  D005               	goto	l2924
 20490                           
 20491                           ; BSR set to: 1
 20492  01AAE8  C117  F117         	movff	strchr@ptr,?_strchr
 20493  01AAEC  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 20494                           
 20495                           ; BSR set to: 1
 20496  01AAF0  0012               	return	
 20497  01AAF2                     l2924:
 20498                           
 20499                           ; BSR set to: 1
 20500                           
 20501                           ; BSR set to: 1
 20502  01AAF2  C117  FFD9         	movff	strchr@ptr,fsr2l
 20503  01AAF6  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 20504  01AAFA  4B17               	infsnz	strchr@ptr& (0+255),f,b
 20505  01AAFC  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 20506  01AAFE  50DF               	movf	indf2,w,c
 20507  01AB00  A4D8               	btfss	status,2,c
 20508  01AB02  D7E9               	goto	_strchr
 20509                           
 20510                           ; BSR set to: 1
 20511                           
 20512                           ; BSR set to: 1
 20513  01AB04  0E00               	movlw	0
 20514  01AB06  6F17               	movwf	?_strchr& (0+255),b
 20515  01AB08  0E00               	movlw	0
 20516  01AB0A  6F18               	movwf	(?_strchr+1)& (0+255),b
 20517  01AB0C  0012               	return	
 20518  01AB0E                     __end_of_strchr:
 20519                           	opt stack 0
 20520                           tblptru	equ	0xFF8
 20521                           tblptrh	equ	0xFF7
 20522                           tblptrl	equ	0xFF6
 20523                           tablat	equ	0xFF5
 20524                           intcon	equ	0xFF2
 20525                           indf0	equ	0xFEF
 20526                           postinc0	equ	0xFEE
 20527                           fsr0h	equ	0xFEA
 20528                           fsr0l	equ	0xFE9
 20529                           wreg	equ	0xFE8
 20530                           indf1	equ	0xFE7
 20531                           postdec1	equ	0xFE5
 20532                           fsr1h	equ	0xFE2
 20533                           fsr1l	equ	0xFE1
 20534                           indf2	equ	0xFDF
 20535                           postinc2	equ	0xFDE
 20536                           fsr2h	equ	0xFDA
 20537                           fsr2l	equ	0xFD9
 20538                           status	equ	0xFD8
 20539                           
 20540 ;; *************** function _strcpy *****************
 20541 ;; Defined at:
 20542 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 20543 ;; Parameters:    Size  Location     Type
 20544 ;;  to              2   23[BANK1 ] PTR unsigned char 
 20545 ;;		 -> ringBufferLUT@channel_name(22), 
 20546 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 20547 ;;		 -> STR_72(10), STR_71(22), STR_70(14), STR_69(14), 
 20548 ;;		 -> STR_68(14), STR_67(7), STR_66(6), STR_65(5), 
 20549 ;; Auto vars:     Size  Location     Type
 20550 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 20551 ;;		 -> ringBufferLUT@channel_name(22), 
 20552 ;; Return value:  Size  Location     Type
 20553 ;;                  2   23[BANK1 ] PTR unsigned char 
 20554 ;; Registers used:
 20555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20556 ;; Tracked objects:
 20557 ;;		On entry : 0/0
 20558 ;;		On exit  : 0/0
 20559 ;;		Unchanged: 0/0
 20560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20561 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20562 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20564 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20565 ;;Total ram usage:        6 bytes
 20566 ;; Hardware stack levels used:    1
 20567 ;; Hardware stack levels required when called:   13
 20568 ;; This function calls:
 20569 ;;		Nothing
 20570 ;; This function is called by:
 20571 ;;		_ringBufferLUT
 20572 ;; This function uses a non-reentrant model
 20573 ;;
 20574                           
 20575                           	psect	text13
 20576  01AB46                     __ptext13:
 20577                           	opt stack 0
 20578  01AB46                     _strcpy:
 20579                           	opt stack 15
 20580                           
 20581                           ; BSR set to: 1
 20582                           ;incstack = 0
 20583  01AB46  C117  F11B         	movff	strcpy@to,strcpy@cp
 20584  01AB4A  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 20585  01AB4E  D005               	goto	l2842
 20586  01AB50  0101               	movlb	1	; () banked
 20587  01AB52  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 20588  01AB54  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 20589  01AB56  4B19               	infsnz	strcpy@from& (0+255),f,b
 20590  01AB58  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 20591  01AB5A                     l2842:
 20592                           
 20593                           ; BSR set to: 1
 20594  01AB5A  C119  FFF6         	movff	strcpy@from,tblptrl
 20595  01AB5E  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 20596  01AB62                     	if	0	;tblptru may be non-zero
 20597  01AB62                     	endif
 20598  01AB62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20599  01AB62  0E00               	movlw	low (__mediumconst shr (0+16))
 20600  01AB64  6EF8               	movwf	tblptru,c
 20601  01AB66                     	endif
 20602  01AB66  C11B  FFD9         	movff	strcpy@cp,fsr2l
 20603  01AB6A  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 20604  01AB6E  0008               	tblrd		*
 20605  01AB70  CFF5 FFDF          	movff	tablat,indf2
 20606  01AB74  50DF               	movf	indf2,w,c
 20607  01AB76  B4D8               	btfsc	status,2,c
 20608  01AB78  0012               	return	
 20609  01AB7A  D7EA               	goto	l2843
 20610  01AB7C                     __end_of_strcpy:
 20611                           	opt stack 0
 20612                           tblptru	equ	0xFF8
 20613                           tblptrh	equ	0xFF7
 20614                           tblptrl	equ	0xFF6
 20615                           tablat	equ	0xFF5
 20616                           intcon	equ	0xFF2
 20617                           indf0	equ	0xFEF
 20618                           postinc0	equ	0xFEE
 20619                           fsr0h	equ	0xFEA
 20620                           fsr0l	equ	0xFE9
 20621                           wreg	equ	0xFE8
 20622                           indf1	equ	0xFE7
 20623                           postdec1	equ	0xFE5
 20624                           fsr1h	equ	0xFE2
 20625                           fsr1l	equ	0xFE1
 20626                           indf2	equ	0xFDF
 20627                           postinc2	equ	0xFDE
 20628                           fsr2h	equ	0xFDA
 20629                           fsr2l	equ	0xFD9
 20630                           status	equ	0xFD8
 20631                           
 20632 ;; *************** function _strcmp *****************
 20633 ;; Defined at:
 20634 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 20635 ;; Parameters:    Size  Location     Type
 20636 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 20637 ;;		 -> line(64), 
 20638 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 20639 ;;		 -> STR_167(11), STR_160(5), STR_158(9), STR_156(29), 
 20640 ;;		 -> STR_154(34), STR_152(33), STR_150(29), STR_148(17), 
 20641 ;;		 -> STR_146(17), STR_144(14), STR_142(19), STR_140(20), 
 20642 ;;		 -> STR_138(11), STR_136(17), STR_134(14), STR_132(16), 
 20643 ;;		 -> STR_123(13), STR_119(17), STR_116(14), STR_114(12), 
 20644 ;;		 -> STR_112(16), STR_110(17), STR_105(15), STR_103(13), 
 20645 ;;		 -> STR_101(16), STR_99(15), STR_97(21), STR_95(21), 
 20646 ;;		 -> STR_93(26), STR_91(14), STR_89(13), STR_87(18), 
 20647 ;;		 -> STR_85(15), STR_83(16), STR_81(17), STR_77(12), 
 20648 ;;		 -> STR_75(16), STR_64(11), STR_61(10), STR_59(13), 
 20649 ;;		 -> STR_57(11), STR_54(4), STR_53(6), STR_51(16), 
 20650 ;;		 -> STR_48(6), STR_45(6), 
 20651 ;; Auto vars:     Size  Location     Type
 20652 ;;  r               1   28[BANK1 ] char 
 20653 ;; Return value:  Size  Location     Type
 20654 ;;                  2   23[BANK1 ] int 
 20655 ;; Registers used:
 20656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20657 ;; Tracked objects:
 20658 ;;		On entry : 0/0
 20659 ;;		On exit  : 0/0
 20660 ;;		Unchanged: 0/0
 20661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20662 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20663 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20664 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20665 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20666 ;;Total ram usage:        6 bytes
 20667 ;; Hardware stack levels used:    1
 20668 ;; Hardware stack levels required when called:   13
 20669 ;; This function calls:
 20670 ;;		Nothing
 20671 ;; This function is called by:
 20672 ;;		_ringBufferLUT
 20673 ;; This function uses a non-reentrant model
 20674 ;;
 20675                           
 20676                           	psect	text14
 20677  01A3DC                     __ptext14:
 20678                           	opt stack 0
 20679  01A3DC                     _strcmp:
 20680                           	opt stack 15
 20681                           
 20682                           ;incstack = 0
 20683  01A3DC  D005               	goto	l2834
 20684  01A3DE  0101               	movlb	1	; () banked
 20685  01A3E0  4B17               	infsnz	strcmp@s1& (0+255),f,b
 20686  01A3E2  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 20687  01A3E4  4B19               	infsnz	strcmp@s2& (0+255),f,b
 20688  01A3E6  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 20689  01A3E8                     l2834:
 20690                           
 20691                           ; BSR set to: 1
 20692  01A3E8  C117  FFD9         	movff	strcmp@s1,fsr2l
 20693  01A3EC  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 20694  01A3F0  50DF               	movf	indf2,w,c
 20695  01A3F2  0101               	movlb	1	; () banked
 20696  01A3F4  6F1B               	movwf	??_strcmp& (0+255),b
 20697  01A3F6  C119  FFF6         	movff	strcmp@s2,tblptrl
 20698  01A3FA  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 20699  01A3FE                     	if	0	;tblptru may be non-zero
 20700  01A3FE                     	endif
 20701  01A3FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20702  01A3FE  0E00               	movlw	low (__mediumconst shr (0+16))
 20703  01A400  6EF8               	movwf	tblptru,c
 20704  01A402                     	endif
 20705  01A402  0008               	tblrd		*
 20706  01A404  50F5               	movf	tablat,w,c
 20707  01A406  0800               	sublw	0
 20708  01A408  251B               	addwf	??_strcmp& (0+255),w,b
 20709  01A40A  6F1C               	movwf	strcmp@r& (0+255),b
 20710  01A40C  511C               	movf	strcmp@r& (0+255),w,b
 20711  01A40E  A4D8               	btfss	status,2,c
 20712  01A410  D007               	goto	u20370
 20713                           
 20714                           ; BSR set to: 1
 20715  01A412  C117  FFD9         	movff	strcmp@s1,fsr2l
 20716  01A416  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 20717  01A41A  50DF               	movf	indf2,w,c
 20718  01A41C  A4D8               	btfss	status,2,c
 20719  01A41E  D7DF               	goto	l2835
 20720  01A420                     u20370:
 20721                           
 20722                           ; BSR set to: 1
 20723                           
 20724                           ; BSR set to: 1
 20725                           
 20726                           ; BSR set to: 1
 20727  01A420  511C               	movf	strcmp@r& (0+255),w,b
 20728  01A422  6F17               	movwf	?_strcmp& (0+255),b
 20729  01A424  6B18               	clrf	(?_strcmp+1)& (0+255),b
 20730  01A426  BF17               	btfsc	?_strcmp& (0+255),7,b
 20731  01A428  0718               	decf	(?_strcmp+1)& (0+255),f,b
 20732  01A42A  0012               	return	
 20733  01A42C                     __end_of_strcmp:
 20734                           	opt stack 0
 20735                           tblptru	equ	0xFF8
 20736                           tblptrh	equ	0xFF7
 20737                           tblptrl	equ	0xFF6
 20738                           tablat	equ	0xFF5
 20739                           intcon	equ	0xFF2
 20740                           indf0	equ	0xFEF
 20741                           postinc0	equ	0xFEE
 20742                           fsr0h	equ	0xFEA
 20743                           fsr0l	equ	0xFE9
 20744                           wreg	equ	0xFE8
 20745                           indf1	equ	0xFE7
 20746                           postdec1	equ	0xFE5
 20747                           fsr1h	equ	0xFE2
 20748                           fsr1l	equ	0xFE1
 20749                           indf2	equ	0xFDF
 20750                           postinc2	equ	0xFDE
 20751                           fsr2h	equ	0xFDA
 20752                           fsr2l	equ	0xFD9
 20753                           status	equ	0xFD8
 20754                           
 20755 ;; *************** function _getUserID *****************
 20756 ;; Defined at:
 20757 ;;		line 65 in file "device_IDs.c"
 20758 ;; Parameters:    Size  Location     Type
 20759 ;;  inputUserID     1    wreg     unsigned char 
 20760 ;; Auto vars:     Size  Location     Type
 20761 ;;  inputUserID     1   40[BANK1 ] unsigned char 
 20762 ;;  initialOffse    4   36[BANK1 ] unsigned long 
 20763 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 20764 ;; Return value:  Size  Location     Type
 20765 ;;                  2   34[BANK1 ] unsigned int 
 20766 ;; Registers used:
 20767 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20768 ;; Tracked objects:
 20769 ;;		On entry : 0/0
 20770 ;;		On exit  : 0/0
 20771 ;;		Unchanged: 0/0
 20772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20773 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20774 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20776 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20777 ;;Total ram usage:        8 bytes
 20778 ;; Hardware stack levels used:    1
 20779 ;; Hardware stack levels required when called:   15
 20780 ;; This function calls:
 20781 ;;		_FLASH_ReadWord
 20782 ;; This function is called by:
 20783 ;;		_ringBufferLUT
 20784 ;; This function uses a non-reentrant model
 20785 ;;
 20786                           
 20787                           	psect	text15
 20788  01A7B2                     __ptext15:
 20789                           	opt stack 0
 20790  01A7B2                     _getUserID:
 20791                           	opt stack 13
 20792                           
 20793                           ; BSR set to: 1
 20794                           ;incstack = 0
 20795                           ;getUserID@inputUserID stored from wreg
 20796  01A7B2  0101               	movlb	1	; () banked
 20797  01A7B4  6F28               	movwf	getUserID@inputUserID& (0+255),b
 20798                           
 20799                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 20800  01A7B6  0E00               	movlw	0
 20801  01A7B8  0101               	movlb	1	; () banked
 20802  01A7BA  6F24               	movwf	getUserID@initialOffset& (0+255),b
 20803  01A7BC  0E00               	movlw	0
 20804  01A7BE  6F25               	movwf	(getUserID@initialOffset+1)& (0+255),b
 20805  01A7C0  0E20               	movlw	32
 20806  01A7C2  6F26               	movwf	(getUserID@initialOffset+2)& (0+255),b
 20807  01A7C4  0E00               	movlw	0
 20808  01A7C6  6F27               	movwf	(getUserID@initialOffset+3)& (0+255),b
 20809                           
 20810                           ; BSR set to: 1
 20811                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 20812  01A7C8  5128               	movf	getUserID@inputUserID& (0+255),w,b
 20813  01A7CA  0D02               	mullw	2
 20814  01A7CC  CFF3 F129          	movff	prodl,getUserID@IDOffset
 20815                           
 20816                           ; BSR set to: 1
 20817                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 20818  01A7D0  5129               	movf	getUserID@IDOffset& (0+255),w,b
 20819  01A7D2  2524               	addwf	getUserID@initialOffset& (0+255),w,b
 20820  01A7D4  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 20821  01A7D6  0E00               	movlw	0
 20822  01A7D8  2125               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 20823  01A7DA  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 20824  01A7DC  0E00               	movlw	0
 20825  01A7DE  2126               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 20826  01A7E0  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 20827  01A7E2  0E00               	movlw	0
 20828  01A7E4  2127               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 20829  01A7E6  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 20830  01A7E8  ECFB  F0D3         	call	_FLASH_ReadWord	;wreg free
 20831  01A7EC  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 20832  01A7F0  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 20833  01A7F4  0012               	return	
 20834  01A7F6                     __end_of_getUserID:
 20835                           	opt stack 0
 20836                           tblptru	equ	0xFF8
 20837                           tblptrh	equ	0xFF7
 20838                           tblptrl	equ	0xFF6
 20839                           tablat	equ	0xFF5
 20840                           prodl	equ	0xFF3
 20841                           intcon	equ	0xFF2
 20842                           indf0	equ	0xFEF
 20843                           postinc0	equ	0xFEE
 20844                           fsr0h	equ	0xFEA
 20845                           fsr0l	equ	0xFE9
 20846                           wreg	equ	0xFE8
 20847                           indf1	equ	0xFE7
 20848                           postdec1	equ	0xFE5
 20849                           fsr1h	equ	0xFE2
 20850                           fsr1l	equ	0xFE1
 20851                           indf2	equ	0xFDF
 20852                           postinc2	equ	0xFDE
 20853                           fsr2h	equ	0xFDA
 20854                           fsr2l	equ	0xFD9
 20855                           status	equ	0xFD8
 20856                           
 20857 ;; *************** function _getMinorRevisionID *****************
 20858 ;; Defined at:
 20859 ;;		line 23 in file "device_IDs.c"
 20860 ;; Parameters:    Size  Location     Type
 20861 ;;		None
 20862 ;; Auto vars:     Size  Location     Type
 20863 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 20864 ;; Return value:  Size  Location     Type
 20865 ;;                  1    wreg      unsigned char 
 20866 ;; Registers used:
 20867 ;;		wreg, status,2, status,0, cstack
 20868 ;; Tracked objects:
 20869 ;;		On entry : 0/0
 20870 ;;		On exit  : 0/0
 20871 ;;		Unchanged: 0/0
 20872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20874 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20876 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20877 ;;Total ram usage:        2 bytes
 20878 ;; Hardware stack levels used:    1
 20879 ;; Hardware stack levels required when called:   15
 20880 ;; This function calls:
 20881 ;;		_FLASH_ReadWord
 20882 ;; This function is called by:
 20883 ;;		_ringBufferLUT
 20884 ;; This function uses a non-reentrant model
 20885 ;;
 20886                           
 20887                           	psect	text16
 20888  01ADE2                     __ptext16:
 20889                           	opt stack 0
 20890  01ADE2                     _getMinorRevisionID:
 20891                           	opt stack 13
 20892                           
 20893                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 20894                           
 20895                           ;incstack = 0
 20896  01ADE2  0EFC               	movlw	252
 20897  01ADE4  0101               	movlb	1	; () banked
 20898  01ADE6  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 20899  01ADE8  0EFF               	movlw	255
 20900  01ADEA  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 20901  01ADEC  0E3F               	movlw	63
 20902  01ADEE  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 20903  01ADF0  0E00               	movlw	0
 20904  01ADF2  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 20905  01ADF4  ECFB  F0D3         	call	_FLASH_ReadWord	;wreg free
 20906  01ADF8  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 20907  01ADFC  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 20908                           
 20909                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 20910  01AE00  0101               	movlb	1	; () banked
 20911  01AE02  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 20912  01AE04  0B1F               	andlw	31
 20913  01AE06  0012               	return	
 20914  01AE08                     __end_of_getMinorRevisionID:
 20915                           	opt stack 0
 20916                           tblptru	equ	0xFF8
 20917                           tblptrh	equ	0xFF7
 20918                           tblptrl	equ	0xFF6
 20919                           tablat	equ	0xFF5
 20920                           prodl	equ	0xFF3
 20921                           intcon	equ	0xFF2
 20922                           indf0	equ	0xFEF
 20923                           postinc0	equ	0xFEE
 20924                           fsr0h	equ	0xFEA
 20925                           fsr0l	equ	0xFE9
 20926                           wreg	equ	0xFE8
 20927                           indf1	equ	0xFE7
 20928                           postdec1	equ	0xFE5
 20929                           fsr1h	equ	0xFE2
 20930                           fsr1l	equ	0xFE1
 20931                           indf2	equ	0xFDF
 20932                           postinc2	equ	0xFDE
 20933                           fsr2h	equ	0xFDA
 20934                           fsr2l	equ	0xFD9
 20935                           status	equ	0xFD8
 20936                           
 20937 ;; *************** function _getMajorRevisionID *****************
 20938 ;; Defined at:
 20939 ;;		line 12 in file "device_IDs.c"
 20940 ;; Parameters:    Size  Location     Type
 20941 ;;		None
 20942 ;; Auto vars:     Size  Location     Type
 20943 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 20944 ;; Return value:  Size  Location     Type
 20945 ;;                  1    wreg      unsigned char 
 20946 ;; Registers used:
 20947 ;;		wreg, status,2, status,0, cstack
 20948 ;; Tracked objects:
 20949 ;;		On entry : 0/0
 20950 ;;		On exit  : 0/0
 20951 ;;		Unchanged: 0/0
 20952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20954 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20955 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20956 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20957 ;;Total ram usage:        5 bytes
 20958 ;; Hardware stack levels used:    1
 20959 ;; Hardware stack levels required when called:   15
 20960 ;; This function calls:
 20961 ;;		_FLASH_ReadWord
 20962 ;; This function is called by:
 20963 ;;		_ringBufferLUT
 20964 ;; This function uses a non-reentrant model
 20965 ;;
 20966                           
 20967                           	psect	text17
 20968  01A936                     __ptext17:
 20969                           	opt stack 0
 20970  01A936                     _getMajorRevisionID:
 20971                           	opt stack 13
 20972                           
 20973                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 20974                           
 20975                           ; BSR set to: 1
 20976                           ;incstack = 0
 20977  01A936  0EFC               	movlw	252
 20978  01A938  0101               	movlb	1	; () banked
 20979  01A93A  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 20980  01A93C  0EFF               	movlw	255
 20981  01A93E  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 20982  01A940  0E3F               	movlw	63
 20983  01A942  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 20984  01A944  0E00               	movlw	0
 20985  01A946  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 20986  01A948  ECFB  F0D3         	call	_FLASH_ReadWord	;wreg free
 20987  01A94C  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 20988  01A950  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 20989                           
 20990                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 20991  01A954  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 20992  01A958  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 20993  01A95C  0E06               	movlw	6
 20994  01A95E  0101               	movlb	1	; () banked
 20995  01A960  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 20996  01A962                     u20405:
 20997  01A962  90D8               	bcf	status,0,c
 20998  01A964  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 20999  01A966  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 21000  01A968  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 21001  01A96A  D7FB               	goto	u20405
 21002  01A96C  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 21003  01A96E  0B1F               	andlw	31
 21004  01A970  0012               	return	
 21005  01A972                     __end_of_getMajorRevisionID:
 21006                           	opt stack 0
 21007                           tblptru	equ	0xFF8
 21008                           tblptrh	equ	0xFF7
 21009                           tblptrl	equ	0xFF6
 21010                           tablat	equ	0xFF5
 21011                           prodl	equ	0xFF3
 21012                           intcon	equ	0xFF2
 21013                           indf0	equ	0xFEF
 21014                           postinc0	equ	0xFEE
 21015                           fsr0h	equ	0xFEA
 21016                           fsr0l	equ	0xFE9
 21017                           wreg	equ	0xFE8
 21018                           indf1	equ	0xFE7
 21019                           postdec1	equ	0xFE5
 21020                           fsr1h	equ	0xFE2
 21021                           fsr1l	equ	0xFE1
 21022                           indf2	equ	0xFDF
 21023                           postinc2	equ	0xFDE
 21024                           fsr2h	equ	0xFDA
 21025                           fsr2l	equ	0xFD9
 21026                           status	equ	0xFD8
 21027                           
 21028 ;; *************** function _getDeviceIDString *****************
 21029 ;; Defined at:
 21030 ;;		line 34 in file "device_IDs.c"
 21031 ;; Parameters:    Size  Location     Type
 21032 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 21033 ;; Auto vars:     Size  Location     Type
 21034 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 21035 ;;		 -> STR_175(10), STR_174(13), STR_173(12), 
 21036 ;; Return value:  Size  Location     Type
 21037 ;;                  2   36[BANK1 ] PTR inline unsigned char
 21038 ;; Registers used:
 21039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21040 ;; Tracked objects:
 21041 ;;		On entry : 0/0
 21042 ;;		On exit  : 0/0
 21043 ;;		Unchanged: 0/0
 21044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21045 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21046 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21047 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21048 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21049 ;;Total ram usage:       10 bytes
 21050 ;; Hardware stack levels used:    1
 21051 ;; Hardware stack levels required when called:   13
 21052 ;; This function calls:
 21053 ;;		Nothing
 21054 ;; This function is called by:
 21055 ;;		_ringBufferLUT
 21056 ;; This function uses a non-reentrant model
 21057 ;;
 21058                           
 21059                           	psect	text18
 21060  01A174                     __ptext18:
 21061                           	opt stack 0
 21062  01A174                     _getDeviceIDString:
 21063                           	opt stack 15
 21064                           
 21065                           ;device_IDs.c: 37: const char *strings[] = {
 21066                           ;device_IDs.c: 39: "PIC18F67K40",
 21067                           ;device_IDs.c: 40: "PIC18LF67K40",
 21068                           ;device_IDs.c: 41: "Undefined"
 21069                           ;device_IDs.c: 43: };
 21070                           
 21071                           ; BSR set to: 1
 21072                           ;incstack = 0
 21073  01A174  EE22  F0E9         	lfsr	2,getDeviceIDString@F17550
 21074  01A178  EE11  F028         	lfsr	1,getDeviceIDString@strings
 21075  01A17C  0E05               	movlw	5
 21076  01A17E                     u20391:
 21077  01A17E  CFDB FFE3          	movff	plusw2,plusw1
 21078  01A182  06E8               	decf	wreg,f,c
 21079  01A184  E2FC               	bc	u20391
 21080                           
 21081                           ;device_IDs.c: 47: switch (inputDevID) {
 21082  01A186  D00F               	goto	l1740
 21083  01A188                     
 21084                           ;device_IDs.c: 50: return strings[0];
 21085  01A188  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 21086  01A18C  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 21087                           
 21088                           ;device_IDs.c: 51: break;
 21089  01A190  0012               	return	
 21090  01A192                     
 21091                           ;device_IDs.c: 54: return strings[1];
 21092  01A192  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 21093  01A196  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 21094                           
 21095                           ;device_IDs.c: 55: break;
 21096  01A19A  0012               	return	
 21097  01A19C                     
 21098                           ;device_IDs.c: 58: return strings[2];
 21099  01A19C  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 21100  01A1A0  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 21101                           
 21102                           ;device_IDs.c: 61: }
 21103                           
 21104                           ;device_IDs.c: 59: break;
 21105  01A1A4  0012               	return	
 21106  01A1A6                     l1740:
 21107  01A1A6  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 21108  01A1AA  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 21109                           
 21110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 21111                           ; Switch size 1, requested type "space"
 21112                           ; Number of cases is 2, Range of values is 106 to 107
 21113                           ; switch strategies available:
 21114                           ; Name         Instructions Cycles
 21115                           ; simple_byte            7     4 (average)
 21116                           ;	Chosen strategy is simple_byte
 21117  01A1AE  0101               	movlb	1	; () banked
 21118  01A1B0  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 21119  01A1B2  0A6A               	xorlw	106	; case 106
 21120  01A1B4  B4D8               	btfsc	status,2,c
 21121  01A1B6  D004               	goto	l23335
 21122  01A1B8  0A01               	xorlw	1	; case 107
 21123  01A1BA  B4D8               	btfsc	status,2,c
 21124  01A1BC  D006               	goto	l23337
 21125  01A1BE  D7EE               	goto	l1745
 21126  01A1C0                     l23335:
 21127                           
 21128                           ; BSR set to: 1
 21129                           ; Switch size 1, requested type "space"
 21130                           ; Number of cases is 1, Range of values is 192 to 192
 21131                           ; switch strategies available:
 21132                           ; Name         Instructions Cycles
 21133                           ; simple_byte            4     3 (average)
 21134                           ;	Chosen strategy is simple_byte
 21135  01A1C0  5126               	movf	??_getDeviceIDString& (0+255),w,b
 21136  01A1C2  0AC0               	xorlw	192	; case 192
 21137  01A1C4  B4D8               	btfsc	status,2,c
 21138  01A1C6  D7E0               	goto	l1741
 21139  01A1C8  D7E9               	goto	l1745
 21140  01A1CA                     l23337:
 21141                           
 21142                           ; BSR set to: 1
 21143                           ; Switch size 1, requested type "space"
 21144                           ; Number of cases is 1, Range of values is 32 to 32
 21145                           ; switch strategies available:
 21146                           ; Name         Instructions Cycles
 21147                           ; simple_byte            4     3 (average)
 21148                           ;	Chosen strategy is simple_byte
 21149  01A1CA  5126               	movf	??_getDeviceIDString& (0+255),w,b
 21150  01A1CC  0A20               	xorlw	32	; case 32
 21151  01A1CE  B4D8               	btfsc	status,2,c
 21152  01A1D0  D7E0               	goto	l1744
 21153  01A1D2  D7E4               	goto	l1745
 21154  01A1D4                     __end_of_getDeviceIDString:
 21155                           	opt stack 0
 21156                           tblptru	equ	0xFF8
 21157                           tblptrh	equ	0xFF7
 21158                           tblptrl	equ	0xFF6
 21159                           tablat	equ	0xFF5
 21160                           prodl	equ	0xFF3
 21161                           intcon	equ	0xFF2
 21162                           indf0	equ	0xFEF
 21163                           postinc0	equ	0xFEE
 21164                           fsr0h	equ	0xFEA
 21165                           fsr0l	equ	0xFE9
 21166                           wreg	equ	0xFE8
 21167                           indf1	equ	0xFE7
 21168                           postdec1	equ	0xFE5
 21169                           plusw1	equ	0xFE3
 21170                           fsr1h	equ	0xFE2
 21171                           fsr1l	equ	0xFE1
 21172                           indf2	equ	0xFDF
 21173                           postinc2	equ	0xFDE
 21174                           plusw2	equ	0xFDB
 21175                           fsr2h	equ	0xFDA
 21176                           fsr2l	equ	0xFD9
 21177                           status	equ	0xFD8
 21178                           
 21179 ;; *************** function _getDeviceID *****************
 21180 ;; Defined at:
 21181 ;;		line 4 in file "device_IDs.c"
 21182 ;; Parameters:    Size  Location     Type
 21183 ;;		None
 21184 ;; Auto vars:     Size  Location     Type
 21185 ;;		None
 21186 ;; Return value:  Size  Location     Type
 21187 ;;                  2   34[BANK1 ] unsigned int 
 21188 ;; Registers used:
 21189 ;;		wreg, status,2, status,0, cstack
 21190 ;; Tracked objects:
 21191 ;;		On entry : 0/0
 21192 ;;		On exit  : 0/0
 21193 ;;		Unchanged: 0/0
 21194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21195 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21198 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21199 ;;Total ram usage:        2 bytes
 21200 ;; Hardware stack levels used:    1
 21201 ;; Hardware stack levels required when called:   15
 21202 ;; This function calls:
 21203 ;;		_FLASH_ReadWord
 21204 ;; This function is called by:
 21205 ;;		_ringBufferLUT
 21206 ;; This function uses a non-reentrant model
 21207 ;;
 21208                           
 21209                           	psect	text19
 21210  01AF0A                     __ptext19:
 21211                           	opt stack 0
 21212  01AF0A                     _getDeviceID:
 21213                           	opt stack 13
 21214                           
 21215                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 21216                           
 21217                           ;incstack = 0
 21218  01AF0A  0EFE               	movlw	254
 21219  01AF0C  0101               	movlb	1	; () banked
 21220  01AF0E  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21221  01AF10  0EFF               	movlw	255
 21222  01AF12  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21223  01AF14  0E3F               	movlw	63
 21224  01AF16  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21225  01AF18  0E00               	movlw	0
 21226  01AF1A  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21227  01AF1C  ECFB  F0D3         	call	_FLASH_ReadWord	;wreg free
 21228  01AF20  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 21229  01AF24  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 21230  01AF28  0012               	return	
 21231  01AF2A                     __end_of_getDeviceID:
 21232                           	opt stack 0
 21233                           tblptru	equ	0xFF8
 21234                           tblptrh	equ	0xFF7
 21235                           tblptrl	equ	0xFF6
 21236                           tablat	equ	0xFF5
 21237                           prodl	equ	0xFF3
 21238                           intcon	equ	0xFF2
 21239                           indf0	equ	0xFEF
 21240                           postinc0	equ	0xFEE
 21241                           fsr0h	equ	0xFEA
 21242                           fsr0l	equ	0xFE9
 21243                           wreg	equ	0xFE8
 21244                           indf1	equ	0xFE7
 21245                           postdec1	equ	0xFE5
 21246                           plusw1	equ	0xFE3
 21247                           fsr1h	equ	0xFE2
 21248                           fsr1l	equ	0xFE1
 21249                           indf2	equ	0xFDF
 21250                           postinc2	equ	0xFDE
 21251                           plusw2	equ	0xFDB
 21252                           fsr2h	equ	0xFDA
 21253                           fsr2l	equ	0xFD9
 21254                           status	equ	0xFD8
 21255                           
 21256 ;; *************** function _FLASH_ReadWord *****************
 21257 ;; Defined at:
 21258 ;;		line 71 in file "mcc_generated_files/memory.c"
 21259 ;; Parameters:    Size  Location     Type
 21260 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 21261 ;; Auto vars:     Size  Location     Type
 21262 ;;		None
 21263 ;; Return value:  Size  Location     Type
 21264 ;;                  2   27[BANK1 ] unsigned int 
 21265 ;; Registers used:
 21266 ;;		wreg, status,2, status,0, cstack
 21267 ;; Tracked objects:
 21268 ;;		On entry : 0/0
 21269 ;;		On exit  : 0/0
 21270 ;;		Unchanged: 0/0
 21271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21272 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21274 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21275 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21276 ;;Total ram usage:        7 bytes
 21277 ;; Hardware stack levels used:    1
 21278 ;; Hardware stack levels required when called:   14
 21279 ;; This function calls:
 21280 ;;		_FLASH_ReadByte
 21281 ;; This function is called by:
 21282 ;;		_getDeviceID
 21283 ;;		_getMajorRevisionID
 21284 ;;		_getMinorRevisionID
 21285 ;;		_getUserID
 21286 ;; This function uses a non-reentrant model
 21287 ;;
 21288                           
 21289                           	psect	text20
 21290  01A7F6                     __ptext20:
 21291                           	opt stack 0
 21292  01A7F6                     _FLASH_ReadWord:
 21293                           	opt stack 13
 21294                           
 21295                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 21296                           
 21297                           ;incstack = 0
 21298  01A7F6  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 21299  01A7FA  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 21300  01A7FE  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 21301  01A802  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 21302  01A806  ECEB  F0D7         	call	_FLASH_ReadByte	;wreg free
 21303  01A80A  0101               	movlb	1	; () banked
 21304  01A80C  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 21305  01A80E  0E01               	movlw	1
 21306  01A810  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 21307  01A812  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 21308  01A814  0E00               	movlw	0
 21309  01A816  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 21310  01A818  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 21311  01A81A  0E00               	movlw	0
 21312  01A81C  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 21313  01A81E  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 21314  01A820  0E00               	movlw	0
 21315  01A822  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 21316  01A824  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 21317  01A826  ECEB  F0D7         	call	_FLASH_ReadByte	;wreg free
 21318  01A82A  0101               	movlb	1	; () banked
 21319  01A82C  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 21320  01A82E  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 21321  01A830  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 21322  01A832  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 21323  01A836  0012               	return	
 21324  01A838                     __end_of_FLASH_ReadWord:
 21325                           	opt stack 0
 21326                           tblptru	equ	0xFF8
 21327                           tblptrh	equ	0xFF7
 21328                           tblptrl	equ	0xFF6
 21329                           tablat	equ	0xFF5
 21330                           prodl	equ	0xFF3
 21331                           intcon	equ	0xFF2
 21332                           indf0	equ	0xFEF
 21333                           postinc0	equ	0xFEE
 21334                           fsr0h	equ	0xFEA
 21335                           fsr0l	equ	0xFE9
 21336                           wreg	equ	0xFE8
 21337                           indf1	equ	0xFE7
 21338                           postdec1	equ	0xFE5
 21339                           plusw1	equ	0xFE3
 21340                           fsr1h	equ	0xFE2
 21341                           fsr1l	equ	0xFE1
 21342                           indf2	equ	0xFDF
 21343                           postinc2	equ	0xFDE
 21344                           plusw2	equ	0xFDB
 21345                           fsr2h	equ	0xFDA
 21346                           fsr2l	equ	0xFD9
 21347                           status	equ	0xFD8
 21348                           
 21349 ;; *************** function _FLASH_ReadByte *****************
 21350 ;; Defined at:
 21351 ;;		line 59 in file "mcc_generated_files/memory.c"
 21352 ;; Parameters:    Size  Location     Type
 21353 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 21354 ;; Auto vars:     Size  Location     Type
 21355 ;;		None
 21356 ;; Return value:  Size  Location     Type
 21357 ;;                  1    wreg      unsigned char 
 21358 ;; Registers used:
 21359 ;;		wreg, status,2
 21360 ;; Tracked objects:
 21361 ;;		On entry : 0/0
 21362 ;;		On exit  : 0/0
 21363 ;;		Unchanged: 0/0
 21364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21365 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21368 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21369 ;;Total ram usage:        4 bytes
 21370 ;; Hardware stack levels used:    1
 21371 ;; Hardware stack levels required when called:   13
 21372 ;; This function calls:
 21373 ;;		Nothing
 21374 ;; This function is called by:
 21375 ;;		_FLASH_ReadWord
 21376 ;;		_FLASH_WriteByte
 21377 ;; This function uses a non-reentrant model
 21378 ;;
 21379                           
 21380                           	psect	text21
 21381  01AFD6                     __ptext21:
 21382                           	opt stack 0
 21383  01AFD6                     _FLASH_ReadByte:
 21384                           	opt stack 13
 21385                           
 21386                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 21387                           
 21388                           ; BSR set to: 1
 21389                           ;incstack = 0
 21390  01AFD6  5077               	movf	3959,w,c	;volsfr
 21391  01AFD8  0B3F               	andlw	-193
 21392  01AFDA  0980               	iorlw	128
 21393  01AFDC  6E77               	movwf	3959,c	;volsfr
 21394                           
 21395                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 21396  01AFDE  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 21397                           
 21398                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 21399  01AFE2  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 21400                           
 21401                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 21402  01AFE6  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 21403  01AFEA  0008               	tblrd		*	;# 
 21404                           
 21405                           ;memory.c: 68: return (TABLAT);
 21406  01AFEC  50F5               	movf	tablat,w,c	;volatile
 21407  01AFEE  0012               	return	
 21408  01AFF0                     __end_of_FLASH_ReadByte:
 21409                           	opt stack 0
 21410                           tblptru	equ	0xFF8
 21411                           tblptrh	equ	0xFF7
 21412                           tblptrl	equ	0xFF6
 21413                           tablat	equ	0xFF5
 21414                           prodl	equ	0xFF3
 21415                           intcon	equ	0xFF2
 21416                           indf0	equ	0xFEF
 21417                           postinc0	equ	0xFEE
 21418                           fsr0h	equ	0xFEA
 21419                           fsr0l	equ	0xFE9
 21420                           wreg	equ	0xFE8
 21421                           indf1	equ	0xFE7
 21422                           postdec1	equ	0xFE5
 21423                           plusw1	equ	0xFE3
 21424                           fsr1h	equ	0xFE2
 21425                           fsr1l	equ	0xFE1
 21426                           indf2	equ	0xFDF
 21427                           postinc2	equ	0xFDE
 21428                           plusw2	equ	0xFDB
 21429                           fsr2h	equ	0xFDA
 21430                           fsr2l	equ	0xFD9
 21431                           status	equ	0xFD8
 21432                           
 21433 ;; *************** function _getCauseOfResetString *****************
 21434 ;; Defined at:
 21435 ;;		line 81 in file "cause_of_reset.c"
 21436 ;; Parameters:    Size  Location     Type
 21437 ;;  r               1    wreg     enum E17455
 21438 ;; Auto vars:     Size  Location     Type
 21439 ;;  r               1   25[BANK1 ] enum E17455
 21440 ;; Return value:  Size  Location     Type
 21441 ;;                  2   23[BANK1 ] PTR inline unsigned char
 21442 ;; Registers used:
 21443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21444 ;; Tracked objects:
 21445 ;;		On entry : 0/0
 21446 ;;		On exit  : 0/0
 21447 ;;		Unchanged: 0/0
 21448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21449 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21450 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21452 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21453 ;;Total ram usage:        3 bytes
 21454 ;; Hardware stack levels used:    1
 21455 ;; Hardware stack levels required when called:   13
 21456 ;; This function calls:
 21457 ;;		Nothing
 21458 ;; This function is called by:
 21459 ;;		_ringBufferLUT
 21460 ;; This function uses a non-reentrant model
 21461 ;;
 21462                           
 21463                           	psect	text22
 21464  01AC82                     __ptext22:
 21465                           	opt stack 0
 21466  01AC82                     _getCauseOfResetString:
 21467                           	opt stack 15
 21468                           
 21469                           ;incstack = 0
 21470                           ;getCauseOfResetString@r stored from wreg
 21471  01AC82  0101               	movlb	1	; () banked
 21472  01AC84  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 21473                           
 21474                           ;cause_of_reset.c: 84: static char *strings[] = {
 21475                           ;cause_of_reset.c: 85: "Undefined Reset",
 21476                           ;cause_of_reset.c: 86: "Power On Reset",
 21477                           ;cause_of_reset.c: 87: "Brown Out Reset",
 21478                           ;cause_of_reset.c: 88: "Master Clear Reset",
 21479                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 21480                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 21481                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 21482                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 21483                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 21484                           ;cause_of_reset.c: 94: };
 21485  01AC86  0E09               	movlw	9
 21486  01AC88  0101               	movlb	1	; () banked
 21487  01AC8A  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 21488  01AC8C  D00D               	goto	l1772
 21489                           
 21490                           ; BSR set to: 1
 21491                           ;cause_of_reset.c: 99: return strings[r];
 21492  01AC8E  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 21493  01AC90  0D02               	mullw	2
 21494  01AC92  0ED7               	movlw	low getCauseOfResetString@strings
 21495  01AC94  24F3               	addwf	prodl,w,c
 21496  01AC96  6ED9               	movwf	fsr2l,c
 21497  01AC98  0E02               	movlw	high getCauseOfResetString@strings
 21498  01AC9A  20F4               	addwfc	prodh,w,c
 21499  01AC9C  6EDA               	movwf	fsr2h,c
 21500  01AC9E  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 21501  01ACA2  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 21502                           
 21503                           ; BSR set to: 1
 21504                           ;cause_of_reset.c: 101: }
 21505                           
 21506                           ; BSR set to: 1
 21507  01ACA6  0012               	return	
 21508  01ACA8                     l1772:
 21509                           
 21510                           ; BSR set to: 1
 21511                           ;cause_of_reset.c: 103: else {
 21512                           ;cause_of_reset.c: 105: return "Undefined Reset";
 21513                           
 21514                           ; BSR set to: 1
 21515  01ACA8  0E72               	movlw	low STR_176
 21516  01ACAA  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 21517  01ACAC  0EFD               	movlw	high STR_176
 21518  01ACAE  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 21519                           
 21520                           ; BSR set to: 1
 21521  01ACB0  0012               	return	
 21522  01ACB2                     __end_of_getCauseOfResetString:
 21523                           	opt stack 0
 21524                           tblptru	equ	0xFF8
 21525                           tblptrh	equ	0xFF7
 21526                           tblptrl	equ	0xFF6
 21527                           tablat	equ	0xFF5
 21528                           prodh	equ	0xFF4
 21529                           prodl	equ	0xFF3
 21530                           intcon	equ	0xFF2
 21531                           indf0	equ	0xFEF
 21532                           postinc0	equ	0xFEE
 21533                           fsr0h	equ	0xFEA
 21534                           fsr0l	equ	0xFE9
 21535                           wreg	equ	0xFE8
 21536                           indf1	equ	0xFE7
 21537                           postdec1	equ	0xFE5
 21538                           plusw1	equ	0xFE3
 21539                           fsr1h	equ	0xFE2
 21540                           fsr1l	equ	0xFE1
 21541                           indf2	equ	0xFDF
 21542                           postinc2	equ	0xFDE
 21543                           postdec2	equ	0xFDD
 21544                           plusw2	equ	0xFDB
 21545                           fsr2h	equ	0xFDA
 21546                           fsr2l	equ	0xFD9
 21547                           status	equ	0xFD8
 21548                           
 21549 ;; *************** function _atoi *****************
 21550 ;; Defined at:
 21551 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 21552 ;; Parameters:    Size  Location     Type
 21553 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 21554 ;;		 -> ringBufferLUT@arg_buff(3), 
 21555 ;; Auto vars:     Size  Location     Type
 21556 ;;  a               2   34[BANK1 ] int 
 21557 ;;  sign            1   33[BANK1 ] unsigned char 
 21558 ;; Return value:  Size  Location     Type
 21559 ;;                  2   29[BANK1 ] int 
 21560 ;; Registers used:
 21561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21562 ;; Tracked objects:
 21563 ;;		On entry : 0/0
 21564 ;;		On exit  : 0/0
 21565 ;;		Unchanged: 0/0
 21566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21567 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21568 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21569 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21570 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21571 ;;Total ram usage:        7 bytes
 21572 ;; Hardware stack levels used:    1
 21573 ;; Hardware stack levels required when called:   14
 21574 ;; This function calls:
 21575 ;;		___wmul
 21576 ;;		_isdigit
 21577 ;; This function is called by:
 21578 ;;		_ringBufferLUT
 21579 ;; This function uses a non-reentrant model
 21580 ;;
 21581                           
 21582                           	psect	text23
 21583  0193DA                     __ptext23:
 21584                           	opt stack 0
 21585  0193DA                     _atoi:
 21586                           	opt stack 14
 21587                           
 21588                           ; BSR set to: 1
 21589                           ;incstack = 0
 21590  0193DA  D003               	goto	l2288
 21591  0193DC  0101               	movlb	1	; () banked
 21592  0193DE  4B1D               	infsnz	atoi@s& (0+255),f,b
 21593  0193E0  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 21594  0193E2                     l2288:
 21595                           
 21596                           ; BSR set to: 1
 21597  0193E2  C11D  FFD9         	movff	atoi@s,fsr2l
 21598  0193E6  C11E  FFDA         	movff	atoi@s+1,fsr2h
 21599  0193EA  0E20               	movlw	32
 21600  0193EC  18DE               	xorwf	postinc2,w,c
 21601  0193EE  B4D8               	btfsc	status,2,c
 21602  0193F0  D7F5               	goto	l2289
 21603  0193F2  C11D  FFD9         	movff	atoi@s,fsr2l
 21604  0193F6  C11E  FFDA         	movff	atoi@s+1,fsr2h
 21605  0193FA  0E09               	movlw	9
 21606  0193FC  18DE               	xorwf	postinc2,w,c
 21607  0193FE  B4D8               	btfsc	status,2,c
 21608  019400  D7ED               	goto	l2289
 21609  019402  0E00               	movlw	0
 21610  019404  0101               	movlb	1	; () banked
 21611  019406  6F23               	movwf	(atoi@a+1)& (0+255),b
 21612  019408  0E00               	movlw	0
 21613  01940A  6F22               	movwf	atoi@a& (0+255),b
 21614  01940C  0E00               	movlw	0
 21615  01940E  6F21               	movwf	atoi@sign& (0+255),b
 21616                           
 21617                           ; BSR set to: 1
 21618  019410  C11D  FFD9         	movff	atoi@s,fsr2l
 21619  019414  C11E  FFDA         	movff	atoi@s+1,fsr2h
 21620  019418  0E2D               	movlw	45
 21621  01941A  18DE               	xorwf	postinc2,w,c
 21622  01941C  A4D8               	btfss	status,2,c
 21623  01941E  D002               	goto	l2291
 21624                           
 21625                           ; BSR set to: 1
 21626  019420  2B21               	incf	atoi@sign& (0+255),f,b
 21627  019422  D026               	goto	l16173
 21628  019424                     l2291:
 21629                           
 21630                           ; BSR set to: 1
 21631                           
 21632                           ; BSR set to: 1
 21633  019424  C11D  FFD9         	movff	atoi@s,fsr2l
 21634  019428  C11E  FFDA         	movff	atoi@s+1,fsr2h
 21635  01942C  0E2B               	movlw	43
 21636  01942E  18DE               	xorwf	postinc2,w,c
 21637  019430  A4D8               	btfss	status,2,c
 21638  019432  D020               	goto	l2294
 21639  019434  D01D               	goto	l16173
 21640  019436                     
 21641                           ; BSR set to: 1
 21642  019436  C122  F117         	movff	atoi@a,___wmul@multiplier
 21643  01943A  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 21644  01943E  0E00               	movlw	0
 21645  019440  0101               	movlb	1	; () banked
 21646  019442  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21647  019444  0E0A               	movlw	10
 21648  019446  6F19               	movwf	___wmul@multiplicand& (0+255),b
 21649  019448  ECB5  F0D6         	call	___wmul	;wreg free
 21650  01944C  C11D  FFD9         	movff	atoi@s,fsr2l
 21651  019450  C11E  FFDA         	movff	atoi@s+1,fsr2h
 21652  019454  50DF               	movf	indf2,w,c
 21653  019456  0101               	movlb	1	; () banked
 21654  019458  6F1F               	movwf	??_atoi& (0+255),b
 21655  01945A  6B20               	clrf	(??_atoi+1)& (0+255),b
 21656  01945C  5117               	movf	?___wmul& (0+255),w,b
 21657  01945E  271F               	addwf	??_atoi& (0+255),f,b
 21658  019460  5118               	movf	(?___wmul+1)& (0+255),w,b
 21659  019462  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 21660  019464  0ED0               	movlw	208
 21661  019466  251F               	addwf	??_atoi& (0+255),w,b
 21662  019468  6F22               	movwf	atoi@a& (0+255),b
 21663  01946A  0EFF               	movlw	255
 21664  01946C  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 21665  01946E  6F23               	movwf	(atoi@a+1)& (0+255),b
 21666  019470                     l16173:
 21667                           
 21668                           ; BSR set to: 1
 21669  019470  4B1D               	infsnz	atoi@s& (0+255),f,b
 21670  019472  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 21671  019474                     l2294:
 21672                           
 21673                           ; BSR set to: 1
 21674                           
 21675                           ; BSR set to: 1
 21676  019474  C11D  FFD9         	movff	atoi@s,fsr2l
 21677  019478  C11E  FFDA         	movff	atoi@s+1,fsr2h
 21678  01947C  50DF               	movf	indf2,w,c
 21679  01947E  EC74  F0D7         	call	_isdigit
 21680  019482  B0D8               	btfsc	status,0,c
 21681  019484  D7D8               	goto	l2295
 21682  019486  0101               	movlb	1	; () banked
 21683  019488  5121               	movf	atoi@sign& (0+255),w,b
 21684  01948A  B4D8               	btfsc	status,2,c
 21685  01948C  D00D               	goto	l2297
 21686                           
 21687                           ; BSR set to: 1
 21688  01948E  C122  F11F         	movff	atoi@a,??_atoi
 21689  019492  C123  F120         	movff	atoi@a+1,??_atoi+1
 21690  019496  1F1F               	comf	??_atoi& (0+255),f,b
 21691  019498  1F20               	comf	(??_atoi+1)& (0+255),f,b
 21692  01949A  4B1F               	infsnz	??_atoi& (0+255),f,b
 21693  01949C  2B20               	incf	(??_atoi+1)& (0+255),f,b
 21694  01949E  C11F  F11D         	movff	??_atoi,?_atoi
 21695  0194A2  C120  F11E         	movff	??_atoi+1,?_atoi+1
 21696  0194A6  0012               	return	
 21697  0194A8                     l2297:
 21698                           
 21699                           ; BSR set to: 1
 21700  0194A8  C122  F11D         	movff	atoi@a,?_atoi
 21701  0194AC  C123  F11E         	movff	atoi@a+1,?_atoi+1
 21702                           
 21703                           ; BSR set to: 1
 21704  0194B0  0012               	return		;funcret
 21705  0194B2                     __end_of_atoi:
 21706                           	opt stack 0
 21707                           tblptru	equ	0xFF8
 21708                           tblptrh	equ	0xFF7
 21709                           tblptrl	equ	0xFF6
 21710                           tablat	equ	0xFF5
 21711                           prodh	equ	0xFF4
 21712                           prodl	equ	0xFF3
 21713                           intcon	equ	0xFF2
 21714                           indf0	equ	0xFEF
 21715                           postinc0	equ	0xFEE
 21716                           fsr0h	equ	0xFEA
 21717                           fsr0l	equ	0xFE9
 21718                           wreg	equ	0xFE8
 21719                           indf1	equ	0xFE7
 21720                           postdec1	equ	0xFE5
 21721                           plusw1	equ	0xFE3
 21722                           fsr1h	equ	0xFE2
 21723                           fsr1l	equ	0xFE1
 21724                           indf2	equ	0xFDF
 21725                           postinc2	equ	0xFDE
 21726                           postdec2	equ	0xFDD
 21727                           plusw2	equ	0xFDB
 21728                           fsr2h	equ	0xFDA
 21729                           fsr2l	equ	0xFD9
 21730                           status	equ	0xFD8
 21731                           
 21732 ;; *************** function ___fldiv *****************
 21733 ;; Defined at:
 21734 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 21735 ;; Parameters:    Size  Location     Type
 21736 ;;  b               4   61[BANK1 ] int 
 21737 ;;  a               4   65[BANK1 ] int 
 21738 ;; Auto vars:     Size  Location     Type
 21739 ;;  grs             4   80[BANK1 ] unsigned long 
 21740 ;;  rem             4   74[BANK1 ] unsigned long 
 21741 ;;  new_exp         2   78[BANK1 ] int 
 21742 ;;  aexp            1   85[BANK1 ] unsigned char 
 21743 ;;  bexp            1   84[BANK1 ] unsigned char 
 21744 ;;  sign            1   73[BANK1 ] unsigned char 
 21745 ;; Return value:  Size  Location     Type
 21746 ;;                  4   61[BANK1 ] unsigned char 
 21747 ;; Registers used:
 21748 ;;		wreg, status,2, status,0
 21749 ;; Tracked objects:
 21750 ;;		On entry : 0/0
 21751 ;;		On exit  : 0/0
 21752 ;;		Unchanged: 0/0
 21753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21754 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21755 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21756 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21757 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21758 ;;Total ram usage:       25 bytes
 21759 ;; Hardware stack levels used:    1
 21760 ;; Hardware stack levels required when called:   13
 21761 ;; This function calls:
 21762 ;;		Nothing
 21763 ;; This function is called by:
 21764 ;;		_ringBufferLUT
 21765 ;; This function uses a non-reentrant model
 21766 ;;
 21767                           
 21768                           	psect	text24
 21769  017078                     __ptext24:
 21770                           	opt stack 0
 21771  017078                     ___fldiv:
 21772                           	opt stack 15
 21773                           
 21774                           ; BSR set to: 1
 21775                           ;incstack = 0
 21776  017078  0101               	movlb	1	; () banked
 21777  01707A  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 21778  01707C  0B80               	andlw	128
 21779  01707E  6F49               	movwf	___fldiv@sign& (0+255),b
 21780  017080  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 21781  017082  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 21782  017084  6F54               	movwf	___fldiv@bexp& (0+255),b
 21783                           
 21784                           ; BSR set to: 1
 21785  017086  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 21786                           
 21787                           ; BSR set to: 1
 21788  017088  8154               	bsf	___fldiv@bexp& (0+255),0,b
 21789                           
 21790                           ; BSR set to: 1
 21791                           
 21792                           ; BSR set to: 1
 21793  01708A  5154               	movf	___fldiv@bexp& (0+255),w,b
 21794  01708C  B4D8               	btfsc	status,2,c
 21795  01708E  D00D               	goto	l2736
 21796                           
 21797                           ; BSR set to: 1
 21798  017090  2954               	incf	___fldiv@bexp& (0+255),w,b
 21799  017092  A4D8               	btfss	status,2,c
 21800  017094  D008               	goto	l2737
 21801                           
 21802                           ; BSR set to: 1
 21803  017096  0E00               	movlw	0
 21804  017098  6F3D               	movwf	___fldiv@b& (0+255),b
 21805  01709A  0E00               	movlw	0
 21806  01709C  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 21807  01709E  0E00               	movlw	0
 21808  0170A0  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 21809  0170A2  0E00               	movlw	0
 21810  0170A4  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 21811  0170A6                     l2737:
 21812                           
 21813                           ; BSR set to: 1
 21814                           
 21815                           ; BSR set to: 1
 21816  0170A6  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 21817  0170A8  D006               	goto	L1
 21818  0170AA                     l2736:
 21819                           
 21820                           ; BSR set to: 1
 21821                           
 21822                           ; BSR set to: 1
 21823  0170AA  0E00               	movlw	0
 21824  0170AC  6F3D               	movwf	___fldiv@b& (0+255),b
 21825  0170AE  0E00               	movlw	0
 21826  0170B0  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 21827  0170B2  0E00               	movlw	0
 21828  0170B4  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 21829  0170B6                     L1:
 21830  0170B6  0E00               	movlw	0
 21831  0170B8  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 21832                           
 21833                           ; BSR set to: 1
 21834                           
 21835                           ; BSR set to: 1
 21836  0170BA  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 21837  0170BC  0B80               	andlw	128
 21838  0170BE  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 21839                           
 21840                           ; BSR set to: 1
 21841  0170C0  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 21842  0170C2  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 21843  0170C4  6F55               	movwf	___fldiv@aexp& (0+255),b
 21844                           
 21845                           ; BSR set to: 1
 21846  0170C6  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 21847                           
 21848                           ; BSR set to: 1
 21849  0170C8  8155               	bsf	___fldiv@aexp& (0+255),0,b
 21850                           
 21851                           ; BSR set to: 1
 21852                           
 21853                           ; BSR set to: 1
 21854  0170CA  5155               	movf	___fldiv@aexp& (0+255),w,b
 21855  0170CC  B4D8               	btfsc	status,2,c
 21856  0170CE  D00D               	goto	l2740
 21857                           
 21858                           ; BSR set to: 1
 21859  0170D0  2955               	incf	___fldiv@aexp& (0+255),w,b
 21860  0170D2  A4D8               	btfss	status,2,c
 21861  0170D4  D008               	goto	l2741
 21862                           
 21863                           ; BSR set to: 1
 21864  0170D6  0E00               	movlw	0
 21865  0170D8  6F41               	movwf	___fldiv@a& (0+255),b
 21866  0170DA  0E00               	movlw	0
 21867  0170DC  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 21868  0170DE  0E00               	movlw	0
 21869  0170E0  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 21870  0170E2  0E00               	movlw	0
 21871  0170E4  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 21872  0170E6                     l2741:
 21873                           
 21874                           ; BSR set to: 1
 21875                           
 21876                           ; BSR set to: 1
 21877  0170E6  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 21878  0170E8  D006               	goto	L2
 21879  0170EA                     l2740:
 21880                           
 21881                           ; BSR set to: 1
 21882                           
 21883                           ; BSR set to: 1
 21884  0170EA  0E00               	movlw	0
 21885  0170EC  6F41               	movwf	___fldiv@a& (0+255),b
 21886  0170EE  0E00               	movlw	0
 21887  0170F0  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 21888  0170F2  0E00               	movlw	0
 21889  0170F4  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 21890  0170F6                     L2:
 21891  0170F6  0E00               	movlw	0
 21892  0170F8  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 21893                           
 21894                           ; BSR set to: 1
 21895                           
 21896                           ; BSR set to: 1
 21897  0170FA  5141               	movf	___fldiv@a& (0+255),w,b
 21898  0170FC  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 21899  0170FE  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 21900  017100  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 21901  017102  A4D8               	btfss	status,2,c
 21902  017104  D015               	goto	l2743
 21903                           
 21904                           ; BSR set to: 1
 21905  017106  0E00               	movlw	0
 21906  017108  6F3D               	movwf	___fldiv@b& (0+255),b
 21907  01710A  0E00               	movlw	0
 21908  01710C  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 21909  01710E  0E00               	movlw	0
 21910  017110  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 21911  017112  0E00               	movlw	0
 21912  017114  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 21913                           
 21914                           ; BSR set to: 1
 21915  017116  0E80               	movlw	128
 21916  017118  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 21917  01711A  0E7F               	movlw	127
 21918  01711C  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 21919                           
 21920                           ; BSR set to: 1
 21921  01711E  C13D  F13D         	movff	___fldiv@b,?___fldiv
 21922  017122  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 21923  017126  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 21924  01712A  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 21925                           
 21926                           ; BSR set to: 1
 21927  01712E  0012               	return	
 21928  017130                     l2743:
 21929                           
 21930                           ; BSR set to: 1
 21931                           
 21932                           ; BSR set to: 1
 21933  017130  5154               	movf	___fldiv@bexp& (0+255),w,b
 21934  017132  A4D8               	btfss	status,2,c
 21935  017134  D011               	goto	l2745
 21936                           
 21937                           ; BSR set to: 1
 21938  017136  0E00               	movlw	0
 21939  017138  6F3D               	movwf	___fldiv@b& (0+255),b
 21940  01713A  0E00               	movlw	0
 21941  01713C  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 21942  01713E  0E00               	movlw	0
 21943  017140  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 21944  017142  0E00               	movlw	0
 21945  017144  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 21946                           
 21947                           ; BSR set to: 1
 21948  017146  C13D  F13D         	movff	___fldiv@b,?___fldiv
 21949  01714A  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 21950  01714E  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 21951  017152  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 21952                           
 21953                           ; BSR set to: 1
 21954  017156  0012               	return	
 21955  017158                     l2745:
 21956                           
 21957                           ; BSR set to: 1
 21958                           
 21959                           ; BSR set to: 1
 21960  017158  5155               	movf	___fldiv@aexp& (0+255),w,b
 21961  01715A  6F45               	movwf	??___fldiv& (0+255),b
 21962  01715C  6B46               	clrf	(??___fldiv+1)& (0+255),b
 21963  01715E  1F45               	comf	??___fldiv& (0+255),f,b
 21964  017160  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 21965  017162  4B45               	infsnz	??___fldiv& (0+255),f,b
 21966  017164  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 21967  017166  5154               	movf	___fldiv@bexp& (0+255),w,b
 21968  017168  6F47               	movwf	(??___fldiv+2)& (0+255),b
 21969  01716A  6B48               	clrf	(??___fldiv+3)& (0+255),b
 21970  01716C  5145               	movf	??___fldiv& (0+255),w,b
 21971  01716E  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 21972  017170  5146               	movf	(??___fldiv+1)& (0+255),w,b
 21973  017172  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 21974  017174  0E7F               	movlw	127
 21975  017176  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 21976  017178  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 21977  01717A  0E00               	movlw	0
 21978  01717C  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 21979  01717E  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 21980                           
 21981                           ; BSR set to: 1
 21982  017180  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 21983  017184  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 21984  017188  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 21985  01718C  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 21986                           
 21987                           ; BSR set to: 1
 21988  017190  0E00               	movlw	0
 21989  017192  6F3D               	movwf	___fldiv@b& (0+255),b
 21990  017194  0E00               	movlw	0
 21991  017196  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 21992  017198  0E00               	movlw	0
 21993  01719A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 21994  01719C  0E00               	movlw	0
 21995  01719E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 21996                           
 21997                           ; BSR set to: 1
 21998  0171A0  0E00               	movlw	0
 21999  0171A2  6F50               	movwf	___fldiv@grs& (0+255),b
 22000  0171A4  0E00               	movlw	0
 22001  0171A6  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 22002  0171A8  0E00               	movlw	0
 22003  0171AA  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 22004  0171AC  0E00               	movlw	0
 22005  0171AE  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 22006                           
 22007                           ; BSR set to: 1
 22008  0171B0  0E00               	movlw	0
 22009  0171B2  6F55               	movwf	___fldiv@aexp& (0+255),b
 22010  0171B4  D028               	goto	l2746
 22011  0171B6                     
 22012                           ; BSR set to: 1
 22013                           
 22014                           ; BSR set to: 1
 22015  0171B6  5155               	movf	___fldiv@aexp& (0+255),w,b
 22016  0171B8  B4D8               	btfsc	status,2,c
 22017  0171BA  D011               	goto	l2748
 22018                           
 22019                           ; BSR set to: 1
 22020  0171BC  90D8               	bcf	status,0,c
 22021  0171BE  374A               	rlcf	___fldiv@rem& (0+255),f,b
 22022  0171C0  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 22023  0171C2  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 22024  0171C4  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 22025  0171C6  90D8               	bcf	status,0,c
 22026  0171C8  373D               	rlcf	___fldiv@b& (0+255),f,b
 22027  0171CA  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22028  0171CC  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22029  0171CE  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22030                           
 22031                           ; BSR set to: 1
 22032  0171D0  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22033                           
 22034                           ; BSR set to: 1
 22035  0171D2  813D               	bsf	___fldiv@b& (0+255),0,b
 22036                           
 22037                           ; BSR set to: 1
 22038  0171D4  90D8               	bcf	status,0,c
 22039  0171D6  3750               	rlcf	___fldiv@grs& (0+255),f,b
 22040  0171D8  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22041  0171DA  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22042  0171DC  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22043  0171DE                     l2748:
 22044                           
 22045                           ; BSR set to: 1
 22046                           
 22047                           ; BSR set to: 1
 22048  0171DE  5141               	movf	___fldiv@a& (0+255),w,b
 22049  0171E0  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 22050  0171E2  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 22051  0171E4  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 22052  0171E6  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 22053  0171E8  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 22054  0171EA  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22055  0171EC  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 22056  0171EE  A0D8               	btfss	status,0,c
 22057  0171F0  D009               	goto	l2750
 22058                           
 22059                           ; BSR set to: 1
 22060  0171F2  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 22061                           
 22062                           ; BSR set to: 1
 22063  0171F4  5141               	movf	___fldiv@a& (0+255),w,b
 22064  0171F6  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 22065  0171F8  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 22066  0171FA  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 22067  0171FC  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 22068  0171FE  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 22069  017200  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22070  017202  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 22071  017204                     l2750:
 22072                           
 22073                           ; BSR set to: 1
 22074                           
 22075                           ; BSR set to: 1
 22076  017204  2B55               	incf	___fldiv@aexp& (0+255),f,b
 22077  017206                     l2746:
 22078                           
 22079                           ; BSR set to: 1
 22080  017206  0E19               	movlw	25
 22081  017208  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 22082  01720A  D7D5               	goto	l2747
 22083                           
 22084                           ; BSR set to: 1
 22085                           
 22086                           ; BSR set to: 1
 22087  01720C  514A               	movf	___fldiv@rem& (0+255),w,b
 22088  01720E  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 22089  017210  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 22090  017212  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 22091  017214  B4D8               	btfsc	status,2,c
 22092  017216  D011               	goto	l2753
 22093                           
 22094                           ; BSR set to: 1
 22095  017218  8150               	bsf	___fldiv@grs& (0+255),0,b
 22096                           
 22097                           ; BSR set to: 1
 22098  01721A  D00F               	goto	l2753
 22099  01721C                     
 22100                           ; BSR set to: 1
 22101                           
 22102                           ; BSR set to: 1
 22103  01721C  90D8               	bcf	status,0,c
 22104  01721E  373D               	rlcf	___fldiv@b& (0+255),f,b
 22105  017220  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22106  017222  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22107  017224  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22108                           
 22109                           ; BSR set to: 1
 22110  017226  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22111                           
 22112                           ; BSR set to: 1
 22113  017228  813D               	bsf	___fldiv@b& (0+255),0,b
 22114                           
 22115                           ; BSR set to: 1
 22116  01722A  90D8               	bcf	status,0,c
 22117  01722C  3750               	rlcf	___fldiv@grs& (0+255),f,b
 22118  01722E  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22119  017230  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22120  017232  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22121  017234  074E               	decf	___fldiv@new_exp& (0+255),f,b
 22122  017236  A0D8               	btfss	status,0,c
 22123  017238  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 22124  01723A                     l2753:
 22125                           
 22126                           ; BSR set to: 1
 22127                           
 22128                           ; BSR set to: 1
 22129  01723A  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 22130  01723C  D7EF               	goto	l2754
 22131                           
 22132                           ; BSR set to: 1
 22133                           
 22134                           ; BSR set to: 1
 22135  01723E  0E00               	movlw	0
 22136  017240  6F55               	movwf	___fldiv@aexp& (0+255),b
 22137                           
 22138                           ; BSR set to: 1
 22139  017242  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 22140  017244  D016               	goto	l2760
 22141                           
 22142                           ; BSR set to: 1
 22143  017246  0EFF               	movlw	255
 22144  017248  1550               	andwf	___fldiv@grs& (0+255),w,b
 22145  01724A  6F45               	movwf	??___fldiv& (0+255),b
 22146  01724C  0EFF               	movlw	255
 22147  01724E  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 22148  017250  6F46               	movwf	(??___fldiv+1)& (0+255),b
 22149  017252  0EFF               	movlw	255
 22150  017254  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 22151  017256  6F47               	movwf	(??___fldiv+2)& (0+255),b
 22152  017258  0E7F               	movlw	127
 22153  01725A  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 22154  01725C  6F48               	movwf	(??___fldiv+3)& (0+255),b
 22155  01725E  5145               	movf	??___fldiv& (0+255),w,b
 22156  017260  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 22157  017262  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 22158  017264  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 22159  017266  A4D8               	btfss	status,2,c
 22160  017268  D002               	goto	u20730
 22161                           
 22162                           ; BSR set to: 1
 22163                           
 22164                           ; BSR set to: 1
 22165  01726A  A13D               	btfss	___fldiv@b& (0+255),0,b
 22166  01726C  D002               	goto	l2760
 22167  01726E                     u20730:
 22168                           
 22169                           ; BSR set to: 1
 22170  01726E  0E01               	movlw	1
 22171  017270  6F55               	movwf	___fldiv@aexp& (0+255),b
 22172  017272                     l2760:
 22173                           
 22174                           ; BSR set to: 1
 22175                           
 22176                           ; BSR set to: 1
 22177                           
 22178                           ; BSR set to: 1
 22179  017272  5155               	movf	___fldiv@aexp& (0+255),w,b
 22180  017274  B4D8               	btfsc	status,2,c
 22181  017276  D01F               	goto	l2762
 22182                           
 22183                           ; BSR set to: 1
 22184  017278  0E01               	movlw	1
 22185  01727A  273D               	addwf	___fldiv@b& (0+255),f,b
 22186  01727C  0E00               	movlw	0
 22187  01727E  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 22188  017280  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 22189  017282  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 22190                           
 22191                           ; BSR set to: 1
 22192  017284  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 22193  017286  D017               	goto	l2762
 22194                           
 22195                           ; BSR set to: 1
 22196  017288  C13D  F145         	movff	___fldiv@b,??___fldiv
 22197  01728C  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 22198  017290  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 22199  017294  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 22200  017298  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 22201  01729A  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 22202  01729C  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 22203  01729E  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 22204  0172A0  3345               	rrcf	??___fldiv& (0+255),f,b
 22205  0172A2  C145  F13D         	movff	??___fldiv,___fldiv@b
 22206  0172A6  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 22207  0172AA  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 22208  0172AE  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 22209                           
 22210                           ; BSR set to: 1
 22211  0172B2  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 22212  0172B4  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 22213  0172B6                     l2762:
 22214                           
 22215                           ; BSR set to: 1
 22216                           
 22217                           ; BSR set to: 1
 22218                           
 22219                           ; BSR set to: 1
 22220  0172B6  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 22221  0172B8  D010               	goto	l2763
 22222  0172BA  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 22223  0172BC  E103               	bnz	u20760
 22224  0172BE  294E               	incf	___fldiv@new_exp& (0+255),w,b
 22225  0172C0  A0D8               	btfss	status,0,c
 22226  0172C2  D00B               	goto	l2763
 22227  0172C4                     u20760:
 22228                           
 22229                           ; BSR set to: 1
 22230  0172C4  0E00               	movlw	0
 22231  0172C6  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22232  0172C8  694E               	setf	___fldiv@new_exp& (0+255),b
 22233  0172CA  0E00               	movlw	0
 22234  0172CC  6F3D               	movwf	___fldiv@b& (0+255),b
 22235  0172CE  0E00               	movlw	0
 22236  0172D0  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22237  0172D2  0E00               	movlw	0
 22238  0172D4  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22239  0172D6  0E00               	movlw	0
 22240  0172D8  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22241  0172DA                     l2763:
 22242                           
 22243                           ; BSR set to: 1
 22244                           
 22245                           ; BSR set to: 1
 22246  0172DA  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 22247  0172DC  D005               	goto	u20770
 22248  0172DE  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 22249  0172E0  E111               	bnz	l16321
 22250  0172E2  054E               	decf	___fldiv@new_exp& (0+255),w,b
 22251  0172E4  B0D8               	btfsc	status,0,c
 22252  0172E6  D00E               	goto	l2764
 22253  0172E8                     u20770:
 22254                           
 22255                           ; BSR set to: 1
 22256  0172E8  0E00               	movlw	0
 22257  0172EA  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22258  0172EC  0E00               	movlw	0
 22259  0172EE  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 22260  0172F0  0E00               	movlw	0
 22261  0172F2  6F3D               	movwf	___fldiv@b& (0+255),b
 22262  0172F4  0E00               	movlw	0
 22263  0172F6  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22264  0172F8  0E00               	movlw	0
 22265  0172FA  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22266  0172FC  0E00               	movlw	0
 22267  0172FE  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22268  017300  0E00               	movlw	0
 22269  017302  6F49               	movwf	___fldiv@sign& (0+255),b
 22270  017304                     l2764:
 22271  017304                     l16321:
 22272                           
 22273                           ; BSR set to: 1
 22274  017304  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 22275                           
 22276                           ; BSR set to: 1
 22277  017308  A154               	btfss	___fldiv@bexp& (0+255),0,b
 22278  01730A  D002               	goto	l2765
 22279                           
 22280                           ; BSR set to: 1
 22281  01730C  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 22282  01730E  D001               	goto	l2766
 22283  017310                     l2765:
 22284                           
 22285                           ; BSR set to: 1
 22286                           
 22287                           ; BSR set to: 1
 22288  017310  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 22289  017312                     l2766:
 22290                           
 22291                           ; BSR set to: 1
 22292                           
 22293                           ; BSR set to: 1
 22294  017312  90D8               	bcf	status,0,c
 22295  017314  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 22296  017316  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22297                           
 22298                           ; BSR set to: 1
 22299  017318  5149               	movf	___fldiv@sign& (0+255),w,b
 22300  01731A  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22301                           
 22302                           ; BSR set to: 1
 22303  01731C  C13D  F13D         	movff	___fldiv@b,?___fldiv
 22304  017320  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 22305  017324  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 22306  017328  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 22307  01732C  0012               	return	
 22308  01732E                     __end_of___fldiv:
 22309                           	opt stack 0
 22310                           tblptru	equ	0xFF8
 22311                           tblptrh	equ	0xFF7
 22312                           tblptrl	equ	0xFF6
 22313                           tablat	equ	0xFF5
 22314                           prodh	equ	0xFF4
 22315                           prodl	equ	0xFF3
 22316                           intcon	equ	0xFF2
 22317                           indf0	equ	0xFEF
 22318                           postinc0	equ	0xFEE
 22319                           fsr0h	equ	0xFEA
 22320                           fsr0l	equ	0xFE9
 22321                           wreg	equ	0xFE8
 22322                           indf1	equ	0xFE7
 22323                           postdec1	equ	0xFE5
 22324                           plusw1	equ	0xFE3
 22325                           fsr1h	equ	0xFE2
 22326                           fsr1l	equ	0xFE1
 22327                           indf2	equ	0xFDF
 22328                           postinc2	equ	0xFDE
 22329                           postdec2	equ	0xFDD
 22330                           plusw2	equ	0xFDB
 22331                           fsr2h	equ	0xFDA
 22332                           fsr2l	equ	0xFD9
 22333                           status	equ	0xFD8
 22334                           
 22335 ;; *************** function _TMR7_StopTimer *****************
 22336 ;; Defined at:
 22337 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 22338 ;; Parameters:    Size  Location     Type
 22339 ;;		None
 22340 ;; Auto vars:     Size  Location     Type
 22341 ;;		None
 22342 ;; Return value:  Size  Location     Type
 22343 ;;                  1    wreg      void 
 22344 ;; Registers used:
 22345 ;;		None
 22346 ;; Tracked objects:
 22347 ;;		On entry : 0/0
 22348 ;;		On exit  : 0/0
 22349 ;;		Unchanged: 0/0
 22350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22355 ;;Total ram usage:        0 bytes
 22356 ;; Hardware stack levels used:    1
 22357 ;; Hardware stack levels required when called:   13
 22358 ;; This function calls:
 22359 ;;		Nothing
 22360 ;; This function is called by:
 22361 ;;		_ringBufferLUT
 22362 ;; This function uses a non-reentrant model
 22363 ;;
 22364                           
 22365                           	psect	text25
 22366  01B1B8                     __ptext25:
 22367                           	opt stack 0
 22368  01B1B8                     _TMR7_StopTimer:
 22369                           	opt stack 15
 22370                           
 22371                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 22372                           
 22373                           ; BSR set to: 1
 22374                           ;incstack = 0
 22375  01B1B8  010F               	movlb	15	; () banked
 22376  01B1BA  9130               	bcf	48,0,b	;volatile
 22377                           
 22378                           ; BSR set to: 15
 22379  01B1BC  0012               	return		;funcret
 22380  01B1BE                     __end_of_TMR7_StopTimer:
 22381                           	opt stack 0
 22382                           tblptru	equ	0xFF8
 22383                           tblptrh	equ	0xFF7
 22384                           tblptrl	equ	0xFF6
 22385                           tablat	equ	0xFF5
 22386                           prodh	equ	0xFF4
 22387                           prodl	equ	0xFF3
 22388                           intcon	equ	0xFF2
 22389                           indf0	equ	0xFEF
 22390                           postinc0	equ	0xFEE
 22391                           fsr0h	equ	0xFEA
 22392                           fsr0l	equ	0xFE9
 22393                           wreg	equ	0xFE8
 22394                           indf1	equ	0xFE7
 22395                           postdec1	equ	0xFE5
 22396                           plusw1	equ	0xFE3
 22397                           fsr1h	equ	0xFE2
 22398                           fsr1l	equ	0xFE1
 22399                           indf2	equ	0xFDF
 22400                           postinc2	equ	0xFDE
 22401                           postdec2	equ	0xFDD
 22402                           plusw2	equ	0xFDB
 22403                           fsr2h	equ	0xFDA
 22404                           fsr2l	equ	0xFD9
 22405                           status	equ	0xFD8
 22406                           
 22407 ;; *************** function _TMR5_StopTimer *****************
 22408 ;; Defined at:
 22409 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 22410 ;; Parameters:    Size  Location     Type
 22411 ;;		None
 22412 ;; Auto vars:     Size  Location     Type
 22413 ;;		None
 22414 ;; Return value:  Size  Location     Type
 22415 ;;                  1    wreg      void 
 22416 ;; Registers used:
 22417 ;;		None
 22418 ;; Tracked objects:
 22419 ;;		On entry : 0/0
 22420 ;;		On exit  : 0/0
 22421 ;;		Unchanged: 0/0
 22422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22427 ;;Total ram usage:        0 bytes
 22428 ;; Hardware stack levels used:    1
 22429 ;; Hardware stack levels required when called:   13
 22430 ;; This function calls:
 22431 ;;		Nothing
 22432 ;; This function is called by:
 22433 ;;		_main
 22434 ;;		_ringBufferLUT
 22435 ;; This function uses a non-reentrant model
 22436 ;;
 22437                           
 22438                           	psect	text26
 22439  01B1D4                     __ptext26:
 22440                           	opt stack 0
 22441  01B1D4                     _TMR5_StopTimer:
 22442                           	opt stack 15
 22443                           
 22444                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 22445                           
 22446                           ; BSR set to: 15
 22447                           ;incstack = 0
 22448  01B1D4  90C3               	bcf	4035,0,c	;volatile
 22449  01B1D6  0012               	return		;funcret
 22450  01B1D8                     __end_of_TMR5_StopTimer:
 22451                           	opt stack 0
 22452                           tblptru	equ	0xFF8
 22453                           tblptrh	equ	0xFF7
 22454                           tblptrl	equ	0xFF6
 22455                           tablat	equ	0xFF5
 22456                           prodh	equ	0xFF4
 22457                           prodl	equ	0xFF3
 22458                           intcon	equ	0xFF2
 22459                           indf0	equ	0xFEF
 22460                           postinc0	equ	0xFEE
 22461                           fsr0h	equ	0xFEA
 22462                           fsr0l	equ	0xFE9
 22463                           wreg	equ	0xFE8
 22464                           indf1	equ	0xFE7
 22465                           postdec1	equ	0xFE5
 22466                           plusw1	equ	0xFE3
 22467                           fsr1h	equ	0xFE2
 22468                           fsr1l	equ	0xFE1
 22469                           indf2	equ	0xFDF
 22470                           postinc2	equ	0xFDE
 22471                           postdec2	equ	0xFDD
 22472                           plusw2	equ	0xFDB
 22473                           fsr2h	equ	0xFDA
 22474                           fsr2l	equ	0xFD9
 22475                           status	equ	0xFD8
 22476                           
 22477 ;; *************** function _EUSART2_Read *****************
 22478 ;; Defined at:
 22479 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 22480 ;; Parameters:    Size  Location     Type
 22481 ;;		None
 22482 ;; Auto vars:     Size  Location     Type
 22483 ;;  readValue       1   23[BANK1 ] unsigned char 
 22484 ;; Return value:  Size  Location     Type
 22485 ;;                  1    wreg      unsigned char 
 22486 ;; Registers used:
 22487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22488 ;; Tracked objects:
 22489 ;;		On entry : 0/0
 22490 ;;		On exit  : 0/0
 22491 ;;		Unchanged: 0/0
 22492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22494 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22496 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22497 ;;Total ram usage:        1 bytes
 22498 ;; Hardware stack levels used:    1
 22499 ;; Hardware stack levels required when called:   13
 22500 ;; This function calls:
 22501 ;;		Nothing
 22502 ;; This function is called by:
 22503 ;;		_terminal_ringBufferPull
 22504 ;;		_getch
 22505 ;; This function uses a non-reentrant model
 22506 ;;
 22507                           
 22508                           	psect	text27
 22509  01A64C                     __ptext27:
 22510                           	opt stack 0
 22511  01A64C                     _EUSART2_Read:
 22512                           	opt stack 16
 22513                           
 22514                           ;eusart2.c: 136: uint8_t readValue = 0;
 22515                           
 22516                           ;incstack = 0
 22517  01A64C  0E00               	movlw	0
 22518  01A64E  0101               	movlb	1	; () banked
 22519  01A650  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 22520                           
 22521                           ;eusart2.c: 138: while(0 == eusart2RxCount)
 22522  01A652  D002               	goto	l419
 22523  01A654                     l420:
 22524                           
 22525                           ; BSR set to: 2
 22526  01A654  0004               	clrwdt		;# 
 22527                           
 22528                           ;eusart2.c: 141: LATFbits.LATF1 = 1;
 22529  01A656  827E               	bsf	3966,1,c	;volatile
 22530  01A658                     l419:
 22531  01A658  0102               	movlb	2	; () banked
 22532  01A65A  5169               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 22533  01A65C  B4D8               	btfsc	status,2,c
 22534  01A65E  D7FA               	goto	l420
 22535                           
 22536                           ; BSR set to: 2
 22537                           ;eusart2.c: 142: }
 22538                           ;eusart2.c: 144: readValue = eusart2RxBuffer[eusart2RxTail++];
 22539                           
 22540                           ; BSR set to: 2
 22541  01A660  0101               	movlb	1	; () banked
 22542  01A662  51DE               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 22543  01A664  0D01               	mullw	1
 22544  01A666  0E80               	movlw	low _eusart2RxBuffer
 22545  01A668  24F3               	addwf	prodl,w,c
 22546  01A66A  6ED9               	movwf	fsr2l,c
 22547  01A66C  0E03               	movlw	high _eusart2RxBuffer
 22548  01A66E  20F4               	addwfc	prodh,w,c
 22549  01A670  6EDA               	movwf	fsr2h,c
 22550  01A672  50DF               	movf	indf2,w,c
 22551  01A674  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 22552                           
 22553                           ; BSR set to: 1
 22554  01A676  2BDE               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 22555                           
 22556                           ; BSR set to: 1
 22557                           ;eusart2.c: 145: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 22558  01A678  0E3F               	movlw	63
 22559  01A67A  65DE               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 22560  01A67C  D002               	goto	l422
 22561                           
 22562                           ; BSR set to: 1
 22563                           ;eusart2.c: 146: {
 22564                           ;eusart2.c: 147: eusart2RxTail = 0;
 22565  01A67E  0E00               	movlw	0
 22566  01A680  6FDE               	movwf	_eusart2RxTail& (0+255),b	;volatile
 22567  01A682                     l422:
 22568                           
 22569                           ; BSR set to: 1
 22570                           ;eusart2.c: 148: }
 22571                           ;eusart2.c: 149: PIE3bits.RC2IE = 0;
 22572                           
 22573                           ; BSR set to: 1
 22574  01A682  010E               	movlb	14	; () banked
 22575  01A684  9F2C               	bcf	44,7,b	;volatile
 22576                           
 22577                           ; BSR set to: 14
 22578                           ;eusart2.c: 150: eusart2RxCount--;
 22579  01A686  0102               	movlb	2	; () banked
 22580  01A688  0769               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 22581                           
 22582                           ; BSR set to: 2
 22583                           ;eusart2.c: 151: PIE3bits.RC2IE = 1;
 22584  01A68A  010E               	movlb	14	; () banked
 22585  01A68C  8F2C               	bsf	44,7,b	;volatile
 22586                           
 22587                           ; BSR set to: 14
 22588                           ;eusart2.c: 152: return readValue;
 22589  01A68E  0101               	movlb	1	; () banked
 22590  01A690  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 22591  01A692  0012               	return	
 22592  01A694                     __end_of_EUSART2_Read:
 22593                           	opt stack 0
 22594                           tblptru	equ	0xFF8
 22595                           tblptrh	equ	0xFF7
 22596                           tblptrl	equ	0xFF6
 22597                           tablat	equ	0xFF5
 22598                           prodh	equ	0xFF4
 22599                           prodl	equ	0xFF3
 22600                           intcon	equ	0xFF2
 22601                           indf0	equ	0xFEF
 22602                           postinc0	equ	0xFEE
 22603                           fsr0h	equ	0xFEA
 22604                           fsr0l	equ	0xFE9
 22605                           wreg	equ	0xFE8
 22606                           indf1	equ	0xFE7
 22607                           postdec1	equ	0xFE5
 22608                           plusw1	equ	0xFE3
 22609                           fsr1h	equ	0xFE2
 22610                           fsr1l	equ	0xFE1
 22611                           indf2	equ	0xFDF
 22612                           postinc2	equ	0xFDE
 22613                           postdec2	equ	0xFDD
 22614                           plusw2	equ	0xFDB
 22615                           fsr2h	equ	0xFDA
 22616                           fsr2l	equ	0xFD9
 22617                           status	equ	0xFD8
 22618                           
 22619 ;; *************** function _terminal_clearTerminal *****************
 22620 ;; Defined at:
 22621 ;;		line 80 in file "ring_buffer_interface.c"
 22622 ;; Parameters:    Size  Location     Type
 22623 ;;		None
 22624 ;; Auto vars:     Size  Location     Type
 22625 ;;		None
 22626 ;; Return value:  Size  Location     Type
 22627 ;;                  1    wreg      void 
 22628 ;; Registers used:
 22629 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22630 ;; Tracked objects:
 22631 ;;		On entry : 0/0
 22632 ;;		On exit  : 0/0
 22633 ;;		Unchanged: 0/0
 22634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22639 ;;Total ram usage:        0 bytes
 22640 ;; Hardware stack levels used:    1
 22641 ;; Hardware stack levels required when called:   17
 22642 ;; This function calls:
 22643 ;;		_printf
 22644 ;; This function is called by:
 22645 ;;		_main
 22646 ;; This function uses a non-reentrant model
 22647 ;;
 22648                           
 22649                           	psect	text28
 22650  01B0D4                     __ptext28:
 22651                           	opt stack 0
 22652  01B0D4                     _terminal_clearTerminal:
 22653                           	opt stack 13
 22654                           
 22655                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 22656                           
 22657                           ; BSR set to: 1
 22658                           ;incstack = 0
 22659  01B0D4  0EB2               	movlw	low STR_6
 22660  01B0D6  0101               	movlb	1	; () banked
 22661  01B0D8  6FAC               	movwf	printf@f& (0+255),b
 22662  01B0DA  0EFF               	movlw	high STR_6
 22663  01B0DC  6FAD               	movwf	(printf@f+1)& (0+255),b
 22664  01B0DE  ECB9  F0D4         	call	_printf	;wreg free
 22665  01B0E2  0012               	return		;funcret
 22666  01B0E4                     __end_of_terminal_clearTerminal:
 22667                           	opt stack 0
 22668                           tblptru	equ	0xFF8
 22669                           tblptrh	equ	0xFF7
 22670                           tblptrl	equ	0xFF6
 22671                           tablat	equ	0xFF5
 22672                           prodh	equ	0xFF4
 22673                           prodl	equ	0xFF3
 22674                           intcon	equ	0xFF2
 22675                           indf0	equ	0xFEF
 22676                           postinc0	equ	0xFEE
 22677                           fsr0h	equ	0xFEA
 22678                           fsr0l	equ	0xFE9
 22679                           wreg	equ	0xFE8
 22680                           indf1	equ	0xFE7
 22681                           postdec1	equ	0xFE5
 22682                           plusw1	equ	0xFE3
 22683                           fsr1h	equ	0xFE2
 22684                           fsr1l	equ	0xFE1
 22685                           indf2	equ	0xFDF
 22686                           postinc2	equ	0xFDE
 22687                           postdec2	equ	0xFDD
 22688                           plusw2	equ	0xFDB
 22689                           fsr2h	equ	0xFDA
 22690                           fsr2l	equ	0xFD9
 22691                           status	equ	0xFD8
 22692                           
 22693 ;; *************** function _printf *****************
 22694 ;; Defined at:
 22695 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 22696 ;; Parameters:    Size  Location     Type
 22697 ;;  f               2  172[BANK1 ] PTR const unsigned char 
 22698 ;;		 -> STR_172(13), STR_171(31), STR_170(26), STR_169(28), 
 22699 ;;		 -> STR_168(426), STR_166(30), STR_165(46), STR_164(39), 
 22700 ;;		 -> STR_163(62), STR_162(55), STR_161(470), STR_159(3082), 
 22701 ;;		 -> STR_157(492), STR_155(748), STR_153(720), STR_151(970), 
 22702 ;;		 -> STR_149(54), STR_147(54), STR_145(45), STR_143(51), 
 22703 ;;		 -> STR_141(52), STR_139(46), STR_137(51), STR_135(53), 
 22704 ;;		 -> STR_133(58), STR_131(71), STR_130(63), STR_129(37), 
 22705 ;;		 -> STR_128(46), STR_127(102), STR_126(86), STR_124(25), 
 22706 ;;		 -> STR_122(42), STR_121(53), STR_120(31), STR_118(29), 
 22707 ;;		 -> STR_117(28), STR_115(42), STR_113(41), STR_111(34), 
 22708 ;;		 -> STR_109(53), STR_108(52), STR_107(105), STR_106(105), 
 22709 ;;		 -> STR_104(59), STR_102(73), STR_100(56), STR_98(34), 
 22710 ;;		 -> STR_96(34), STR_94(32), STR_92(37), STR_90(58), 
 22711 ;;		 -> STR_88(36), STR_86(36), STR_84(37), STR_82(31), 
 22712 ;;		 -> STR_80(35), STR_79(87), STR_78(33), STR_76(21), 
 22713 ;;		 -> STR_74(24), STR_73(48), STR_63(54), STR_62(64), 
 22714 ;;		 -> STR_60(59), STR_58(85), STR_56(47), STR_55(17), 
 22715 ;;		 -> STR_52(52), STR_50(4), STR_49(5), STR_47(4), 
 22716 ;;		 -> STR_46(5), STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), 
 22717 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(5), 
 22718 ;;		 -> STR_9(3), STR_8(372), STR_7(4), STR_6(5), 
 22719 ;;		 -> STR_1(4), 
 22720 ;; Auto vars:     Size  Location     Type
 22721 ;;  pb              5  184[BANK1 ] struct __prbuf
 22722 ;;  ap              2  182[BANK1 ] PTR void [1]
 22723 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 22724 ;; Return value:  Size  Location     Type
 22725 ;;                  2  172[BANK1 ] int 
 22726 ;; Registers used:
 22727 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22728 ;; Tracked objects:
 22729 ;;		On entry : 0/0
 22730 ;;		On exit  : 0/0
 22731 ;;		Unchanged: 0/0
 22732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22733 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22734 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22736 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22737 ;;Total ram usage:       17 bytes
 22738 ;; Hardware stack levels used:    1
 22739 ;; Hardware stack levels required when called:   16
 22740 ;; This function calls:
 22741 ;;		__doprnt
 22742 ;; This function is called by:
 22743 ;;		_terminal_clearTerminal
 22744 ;;		_terminal_setCursorHome
 22745 ;;		_terminal_textAttributes
 22746 ;;		_terminal_printNewline
 22747 ;;		_ringBufferLUT
 22748 ;;		_terminal_printResetMessage
 22749 ;;		_terminal_clearLine
 22750 ;;		_terminal_saveCursor
 22751 ;;		_terminal_returnCursor
 22752 ;; This function uses a non-reentrant model
 22753 ;;
 22754                           
 22755                           	psect	text29
 22756  01A972                     __ptext29:
 22757                           	opt stack 0
 22758  01A972                     _printf:
 22759                           	opt stack 12
 22760                           
 22761                           ;incstack = 0
 22762  01A972  0E00               	movlw	0
 22763  01A974  0101               	movlb	1	; () banked
 22764  01A976  6FB8               	movwf	printf@pb& (0+255),b
 22765  01A978  0E00               	movlw	0
 22766  01A97A  6FB9               	movwf	(printf@pb+1)& (0+255),b
 22767  01A97C  0E54               	movlw	low _putch
 22768  01A97E  6FBA               	movwf	(printf@pb+2)& (0+255),b
 22769  01A980  0EB0               	movlw	high _putch
 22770  01A982  6FBB               	movwf	(printf@pb+3)& (0+255),b
 22771  01A984  0E01               	movlw	low (_putch shr (0+16))
 22772  01A986  6FBC               	movwf	(printf@pb+4)& (0+255),b
 22773  01A988  0EAE               	movlw	low (?_printf+2)
 22774  01A98A  6FB6               	movwf	printf@ap& (0+255),b
 22775  01A98C  0E01               	movlw	high (?_printf+2)
 22776  01A98E  6FB7               	movwf	(printf@ap+1)& (0+255),b
 22777                           
 22778                           ; BSR set to: 1
 22779                           ;	Return value of _printf is never used
 22780  01A990  0EB8               	movlw	low printf@pb
 22781  01A992  6F82               	movwf	__doprnt@pb& (0+255),b
 22782  01A994  0E01               	movlw	high printf@pb
 22783  01A996  6F83               	movwf	(__doprnt@pb+1)& (0+255),b
 22784  01A998  C1AC  F184         	movff	printf@f,__doprnt@f
 22785  01A99C  C1AD  F185         	movff	printf@f+1,__doprnt@f+1
 22786  01A9A0  0EB6               	movlw	low printf@ap
 22787  01A9A2  6F86               	movwf	__doprnt@ap& (0+255),b
 22788  01A9A4  0E01               	movlw	high printf@ap
 22789  01A9A6  6F87               	movwf	(__doprnt@ap+1)& (0+255),b
 22790  01A9A8  EC2B  F08B         	call	__doprnt	;wreg free
 22791  01A9AC  0012               	return	
 22792  01A9AE                     __end_of_printf:
 22793                           	opt stack 0
 22794                           tblptru	equ	0xFF8
 22795                           tblptrh	equ	0xFF7
 22796                           tblptrl	equ	0xFF6
 22797                           tablat	equ	0xFF5
 22798                           prodh	equ	0xFF4
 22799                           prodl	equ	0xFF3
 22800                           intcon	equ	0xFF2
 22801                           indf0	equ	0xFEF
 22802                           postinc0	equ	0xFEE
 22803                           fsr0h	equ	0xFEA
 22804                           fsr0l	equ	0xFE9
 22805                           wreg	equ	0xFE8
 22806                           indf1	equ	0xFE7
 22807                           postdec1	equ	0xFE5
 22808                           plusw1	equ	0xFE3
 22809                           fsr1h	equ	0xFE2
 22810                           fsr1l	equ	0xFE1
 22811                           indf2	equ	0xFDF
 22812                           postinc2	equ	0xFDE
 22813                           postdec2	equ	0xFDD
 22814                           plusw2	equ	0xFDB
 22815                           fsr2h	equ	0xFDA
 22816                           fsr2l	equ	0xFD9
 22817                           status	equ	0xFD8
 22818                           
 22819 ;; *************** function __doprnt *****************
 22820 ;; Defined at:
 22821 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 22822 ;; Parameters:    Size  Location     Type
 22823 ;;  pb              2  130[BANK1 ] PTR struct __prbuf
 22824 ;;		 -> sprintf@pb(5), printf@pb(5), 
 22825 ;;  f               2  132[BANK1 ] PTR const unsigned char 
 22826 ;;		 -> STR_190(11), STR_172(13), STR_171(31), STR_170(26), 
 22827 ;;		 -> STR_169(28), STR_168(426), STR_166(30), STR_165(46), 
 22828 ;;		 -> STR_164(39), STR_163(62), STR_162(55), STR_161(470), 
 22829 ;;		 -> STR_159(3082), STR_157(492), STR_155(748), STR_153(720), 
 22830 ;;		 -> STR_151(970), STR_149(54), STR_147(54), STR_145(45), 
 22831 ;;		 -> STR_143(51), STR_141(52), STR_139(46), STR_137(51), 
 22832 ;;		 -> STR_135(53), STR_133(58), STR_131(71), STR_130(63), 
 22833 ;;		 -> STR_129(37), STR_128(46), STR_127(102), STR_126(86), 
 22834 ;;		 -> STR_124(25), STR_122(42), STR_121(53), STR_120(31), 
 22835 ;;		 -> STR_118(29), STR_117(28), STR_115(42), STR_113(41), 
 22836 ;;		 -> STR_111(34), STR_109(53), STR_108(52), STR_107(105), 
 22837 ;;		 -> STR_106(105), STR_104(59), STR_102(73), STR_100(56), 
 22838 ;;		 -> STR_98(34), STR_96(34), STR_94(32), STR_92(37), 
 22839 ;;		 -> STR_90(58), STR_88(36), STR_86(36), STR_84(37), 
 22840 ;;		 -> STR_82(31), STR_80(35), STR_79(87), STR_78(33), 
 22841 ;;		 -> STR_76(21), STR_74(24), STR_73(48), STR_63(54), 
 22842 ;;		 -> STR_62(64), STR_60(59), STR_58(85), STR_56(47), 
 22843 ;;		 -> STR_55(17), STR_52(52), STR_50(4), STR_49(5), 
 22844 ;;		 -> STR_47(4), STR_46(5), STR_44(3), terminal_textAttributes@output_buff(15), 
 22845 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
 22846 ;;		 -> STR_10(5), STR_9(3), STR_8(372), STR_7(4), 
 22847 ;;		 -> STR_6(5), STR_1(4), 
 22848 ;;  ap              2  134[BANK1 ] PTR PTR void 
 22849 ;;		 -> sprintf@ap(2), printf@ap(2), 
 22850 ;; Auto vars:     Size  Location     Type
 22851 ;;  idx             1  146[BANK1 ] unsigned char 
 22852 ;;  val             4  161[BANK1 ] unsigned long 
 22853 ;;  fval            4  157[BANK1 ] unsigned long 
 22854 ;;  tmpval          4  153[BANK1 ] struct .
 22855 ;;  prec            2  169[BANK1 ] int 
 22856 ;;  flag            2  167[BANK1 ] unsigned short 
 22857 ;;  width           2  165[BANK1 ] int 
 22858 ;;  exp             2  151[BANK1 ] int 
 22859 ;;  len             2  149[BANK1 ] unsigned int 
 22860 ;;  cp              2  147[BANK1 ] PTR const unsigned char 
 22861 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_188(7), 
 22862 ;;		 -> _doprnt@c(1), STR_185(16), STR_184(22), STR_183(21), 
 22863 ;;		 -> STR_182(27), STR_181(41), STR_180(32), STR_179(19), 
 22864 ;;		 -> STR_178(16), STR_177(15), STR_176(16), STR_175(10), 
 22865 ;;		 -> STR_174(13), STR_173(12), ringBufferLUT@channel_name(22), TRIAC_Firing_Angle(4), 
 22866 ;;		 -> NULL(0), 
 22867 ;;  c               1  171[BANK1 ] char 
 22868 ;;  d               1    0        unsigned char 
 22869 ;; Return value:  Size  Location     Type
 22870 ;;                  2  130[BANK1 ] int 
 22871 ;; Registers used:
 22872 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22873 ;; Tracked objects:
 22874 ;;		On entry : 0/0
 22875 ;;		On exit  : 0/0
 22876 ;;		Unchanged: 0/0
 22877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22878 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22879 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22880 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22881 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22882 ;;Total ram usage:       42 bytes
 22883 ;; Hardware stack levels used:    1
 22884 ;; Hardware stack levels required when called:   15
 22885 ;; This function calls:
 22886 ;;		Absolute function
 22887 ;;		___awdiv
 22888 ;;		___fladd
 22889 ;;		___flge
 22890 ;;		___flmul
 22891 ;;		___flneg
 22892 ;;		___flsub
 22893 ;;		___fltol
 22894 ;;		___lldiv
 22895 ;;		___llmod
 22896 ;;		___wmul
 22897 ;;		___xxtofl
 22898 ;;		__div_to_l_
 22899 ;;		__tdiv_to_l_
 22900 ;;		_fround
 22901 ;;		_isdigit
 22902 ;;		_putch
 22903 ;;		_scale
 22904 ;; This function is called by:
 22905 ;;		_printf
 22906 ;; This function uses a non-reentrant model
 22907 ;;
 22908                           
 22909                           	psect	text30
 22910  011656                     __ptext30:
 22911                           	opt stack 0
 22912  011656                     __doprnt:
 22913                           	opt stack 12
 22914                           
 22915                           ;doprnt.c: 499: signed char c;
 22916                           ;doprnt.c: 501: int width;
 22917                           ;doprnt.c: 504: int prec;
 22918                           ;doprnt.c: 508: unsigned short flag;
 22919                           ;doprnt.c: 515: char d;
 22920                           ;doprnt.c: 516: double fval;
 22921                           ;doprnt.c: 517: int exp;
 22922                           ;doprnt.c: 523: union {
 22923                           ;doprnt.c: 524: unsigned long vd;
 22924                           ;doprnt.c: 525: double integ;
 22925                           ;doprnt.c: 526: } tmpval;
 22926                           ;doprnt.c: 528: unsigned long val;
 22927                           ;doprnt.c: 529: unsigned len;
 22928                           ;doprnt.c: 530: const char * cp;
 22929                           ;doprnt.c: 536: while(c = *f++) {
 22930                           
 22931                           ;incstack = 0
 22932  011656  EF8F  F095         	goto	u31500
 22933  01165A                     
 22934                           ;doprnt.c: 538: if(c != '%')
 22935  01165A  0E25               	movlw	37
 22936  01165C  0101               	movlb	1	; () banked
 22937  01165E  19AB               	xorwf	__doprnt@c& (0+255),w,b
 22938  011660  B4D8               	btfsc	status,2,c
 22939  011662  D036               	goto	l1909
 22940                           
 22941                           ; BSR set to: 1
 22942                           ;doprnt.c: 540: {
 22943                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 22944  011664  EE20 F002          	lfsr	2,2
 22945  011668  5182               	movf	__doprnt@pb& (0+255),w,b
 22946  01166A  26D9               	addwf	fsr2l,f,c
 22947  01166C  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 22948  01166E  22DA               	addwfc	fsr2h,f,c
 22949  011670  50DE               	movf	postinc2,w,c
 22950  011672  10DE               	iorwf	postinc2,w,c
 22951  011674  10DE               	iorwf	postinc2,w,c
 22952  011676  B4D8               	btfsc	status,2,c
 22953  011678  D014               	goto	l1910
 22954                           
 22955                           ; BSR set to: 1
 22956  01167A  EE20 F002          	lfsr	2,2
 22957  01167E  5182               	movf	__doprnt@pb& (0+255),w,b
 22958  011680  26D9               	addwf	fsr2l,f,c
 22959  011682  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 22960  011684  22DA               	addwfc	fsr2h,f,c
 22961  011686  D802               	call	u30408
 22962  011688  EF8F  F095         	goto	u31500
 22963  01168C                     u30408:
 22964  01168C  0005               	push	
 22965  01168E  6EFA               	movwf	pclath,c
 22966  011690  50DE               	movf	postinc2,w,c
 22967  011692  6EFD               	movwf	tosl,c
 22968  011694  50DE               	movf	postinc2,w,c
 22969  011696  6EFE               	movwf	tosh,c
 22970  011698  50DE               	movf	postinc2,w,c
 22971  01169A  6EFF               	movwf	tosu,c
 22972  01169C  50FA               	movf	pclath,w,c
 22973  01169E  51AB               	movf	__doprnt@c& (0+255),w,b
 22974  0116A0  0012               	return		;indir
 22975  0116A2                     l1910:
 22976  0116A2  C182  FFD9         	movff	__doprnt@pb,fsr2l
 22977  0116A6  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 22978  0116AA  CFDE F188          	movff	postinc2,??__doprnt
 22979  0116AE  CFDD F189          	movff	postdec2,??__doprnt+1
 22980  0116B2  C188  FFD9         	movff	??__doprnt,fsr2l
 22981  0116B6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 22982  0116BA  C1AB  FFDF         	movff	__doprnt@c,indf2
 22983  0116BE  C182  FFD9         	movff	__doprnt@pb,fsr2l
 22984  0116C2  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 22985  0116C6  2ADE               	incf	postinc2,f,c
 22986  0116C8  0E00               	movlw	0
 22987  0116CA  22DD               	addwfc	postdec2,f,c
 22988                           
 22989                           ;doprnt.c: 542: continue;
 22990  0116CC  EF8F  F095         	goto	u31500
 22991  0116D0                     l1909:
 22992                           
 22993                           ;doprnt.c: 543: }
 22994                           ;doprnt.c: 546: width = 0;
 22995  0116D0  0E00               	movlw	0
 22996  0116D2  0101               	movlb	1	; () banked
 22997  0116D4  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 22998  0116D6  0E00               	movlw	0
 22999  0116D8  6FA5               	movwf	__doprnt@width& (0+255),b
 23000                           
 23001                           ;doprnt.c: 548: flag = 0;
 23002  0116DA  0E00               	movlw	0
 23003  0116DC  6FA8               	movwf	(__doprnt@flag+1)& (0+255),b
 23004  0116DE  0E00               	movlw	0
 23005  0116E0  6FA7               	movwf	__doprnt@flag& (0+255),b
 23006                           
 23007                           ; BSR set to: 1
 23008                           ;doprnt.c: 551: switch(*f) {
 23009                           
 23010                           ;doprnt.c: 550: for(;;) {
 23011  0116E2  D004               	goto	l1913
 23012  0116E4                     
 23013                           ;doprnt.c: 580: flag |= 0x04;
 23014                           
 23015                           ; BSR set to: 1
 23016  0116E4  0101               	movlb	1	; () banked
 23017  0116E6  85A7               	bsf	__doprnt@flag& (0+255),2,b
 23018                           
 23019                           ;doprnt.c: 581: f++;
 23020  0116E8  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23021  0116EA  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23022  0116EC                     l1913:
 23023                           
 23024                           ; BSR set to: 1
 23025  0116EC  C184  FFF6         	movff	__doprnt@f,tblptrl
 23026  0116F0  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23027  0116F4  0E00               	movlw	low (__mediumconst shr (0+16))
 23028  0116F6  6EF8               	movwf	tblptru,c
 23029  0116F8  0E0D               	movlw	(high __ramtop+-1)
 23030  0116FA  64F7               	cpfsgt	tblptrh,c
 23031  0116FC  D003               	bra	u30417
 23032  0116FE  0008               	tblrd		*
 23033  011700  50F5               	movf	tablat,w,c
 23034  011702  D005               	bra	u30410
 23035  011704                     u30417:
 23036  011704  CFF6 FFE9          	movff	tblptrl,fsr0l
 23037  011708  CFF7 FFEA          	movff	tblptrh,fsr0h
 23038  01170C  50EF               	movf	indf0,w,c
 23039  01170E                     u30410:
 23040                           
 23041                           ; Switch size 1, requested type "space"
 23042                           ; Number of cases is 1, Range of values is 48 to 48
 23043                           ; switch strategies available:
 23044                           ; Name         Instructions Cycles
 23045                           ; simple_byte            4     3 (average)
 23046                           ;	Chosen strategy is simple_byte
 23047  01170E  0A30               	xorlw	48	; case 48
 23048  011710  B4D8               	btfsc	status,2,c
 23049  011712  D7E8               	goto	l1914
 23050                           
 23051                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 23052                           
 23053                           ;doprnt.c: 586: }
 23054                           
 23055                           ;doprnt.c: 585: break;
 23056  011714  C184  FFF6         	movff	__doprnt@f,tblptrl
 23057  011718  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23058  01171C  0E00               	movlw	low (__mediumconst shr (0+16))
 23059  01171E  6EF8               	movwf	tblptru,c
 23060  011720  0E0D               	movlw	(high __ramtop+-1)
 23061  011722  64F7               	cpfsgt	tblptrh,c
 23062  011724  D003               	bra	u30427
 23063  011726  0008               	tblrd		*
 23064  011728  50F5               	movf	tablat,w,c
 23065  01172A  D005               	bra	u30420
 23066  01172C                     u30427:
 23067  01172C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23068  011730  CFF7 FFEA          	movff	tblptrh,fsr0h
 23069  011734  50EF               	movf	indf0,w,c
 23070  011736                     u30420:
 23071  011736  EC74  F0D7         	call	_isdigit
 23072  01173A  A0D8               	btfss	status,0,c
 23073  01173C  D04C               	goto	u30460
 23074                           
 23075                           ;doprnt.c: 598: width = 0;
 23076  01173E  0E00               	movlw	0
 23077  011740  0101               	movlb	1	; () banked
 23078  011742  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 23079  011744  0E00               	movlw	0
 23080  011746  6FA5               	movwf	__doprnt@width& (0+255),b
 23081  011748                     
 23082                           ;doprnt.c: 600: width *= 10;
 23083                           
 23084                           ; BSR set to: 1
 23085  011748  C1A5  F117         	movff	__doprnt@width,___wmul@multiplier
 23086  01174C  C1A6  F118         	movff	__doprnt@width+1,___wmul@multiplier+1
 23087  011750  0E00               	movlw	0
 23088  011752  0101               	movlb	1	; () banked
 23089  011754  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23090  011756  0E0A               	movlw	10
 23091  011758  6F19               	movwf	___wmul@multiplicand& (0+255),b
 23092  01175A  ECB5  F0D6         	call	___wmul	;wreg free
 23093  01175E  C117  F1A5         	movff	?___wmul,__doprnt@width
 23094  011762  C118  F1A6         	movff	?___wmul+1,__doprnt@width+1
 23095                           
 23096                           ;doprnt.c: 601: width += *f++ - '0';
 23097  011766  0ED0               	movlw	208
 23098  011768  0101               	movlb	1	; () banked
 23099  01176A  6F88               	movwf	??__doprnt& (0+255),b
 23100  01176C  0EFF               	movlw	255
 23101  01176E  6F89               	movwf	(??__doprnt+1)& (0+255),b
 23102  011770  C184  FFF6         	movff	__doprnt@f,tblptrl
 23103  011774  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23104  011778  0E00               	movlw	low (__mediumconst shr (0+16))
 23105  01177A  6EF8               	movwf	tblptru,c
 23106  01177C  0E0D               	movlw	(high __ramtop+-1)
 23107  01177E  64F7               	cpfsgt	tblptrh,c
 23108  011780  D003               	bra	u30447
 23109  011782  0008               	tblrd		*
 23110  011784  50F5               	movf	tablat,w,c
 23111  011786  D005               	bra	u30440
 23112  011788                     u30447:
 23113  011788  CFF6 FFE9          	movff	tblptrl,fsr0l
 23114  01178C  CFF7 FFEA          	movff	tblptrh,fsr0h
 23115  011790  50EF               	movf	indf0,w,c
 23116  011792                     u30440:
 23117  011792  0101               	movlb	1	; () banked
 23118  011794  6F8A               	movwf	(??__doprnt+2)& (0+255),b
 23119  011796  6B8B               	clrf	(??__doprnt+3)& (0+255),b
 23120  011798  5188               	movf	??__doprnt& (0+255),w,b
 23121  01179A  278A               	addwf	(??__doprnt+2)& (0+255),f,b
 23122  01179C  5189               	movf	(??__doprnt+1)& (0+255),w,b
 23123  01179E  238B               	addwfc	(??__doprnt+3)& (0+255),f,b
 23124  0117A0  518A               	movf	(??__doprnt+2)& (0+255),w,b
 23125  0117A2  27A5               	addwf	__doprnt@width& (0+255),f,b
 23126  0117A4  518B               	movf	(??__doprnt+3)& (0+255),w,b
 23127  0117A6  23A6               	addwfc	(__doprnt@width+1)& (0+255),f,b
 23128                           
 23129                           ; BSR set to: 1
 23130  0117A8  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23131  0117AA  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23132                           
 23133                           ; BSR set to: 1
 23134                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 23135  0117AC  C184  FFF6         	movff	__doprnt@f,tblptrl
 23136  0117B0  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23137  0117B4  0E00               	movlw	low (__mediumconst shr (0+16))
 23138  0117B6  6EF8               	movwf	tblptru,c
 23139  0117B8  0E0D               	movlw	(high __ramtop+-1)
 23140  0117BA  64F7               	cpfsgt	tblptrh,c
 23141  0117BC  D003               	bra	u30457
 23142  0117BE  0008               	tblrd		*
 23143  0117C0  50F5               	movf	tablat,w,c
 23144  0117C2  D005               	bra	u30450
 23145  0117C4                     u30457:
 23146  0117C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 23147  0117C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 23148  0117CC  50EF               	movf	indf0,w,c
 23149  0117CE                     u30450:
 23150  0117CE  EC74  F0D7         	call	_isdigit
 23151  0117D2  B0D8               	btfsc	status,0,c
 23152  0117D4  D7B9               	goto	l1919
 23153  0117D6                     u30460:
 23154                           
 23155                           ;doprnt.c: 608: }
 23156                           ;doprnt.c: 611: if(*f == '.') {
 23157  0117D6  C184  FFF6         	movff	__doprnt@f,tblptrl
 23158  0117DA  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23159  0117DE  0E00               	movlw	low (__mediumconst shr (0+16))
 23160  0117E0  6EF8               	movwf	tblptru,c
 23161  0117E2  0E0D               	movlw	(high __ramtop+-1)
 23162  0117E4  64F7               	cpfsgt	tblptrh,c
 23163  0117E6  D003               	bra	u30477
 23164  0117E8  0008               	tblrd		*
 23165  0117EA  50F5               	movf	tablat,w,c
 23166  0117EC  D005               	bra	u30470
 23167  0117EE                     u30477:
 23168  0117EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 23169  0117F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 23170  0117F6  50EF               	movf	indf0,w,c
 23171  0117F8                     u30470:
 23172  0117F8  0A2E               	xorlw	46
 23173  0117FA  A4D8               	btfss	status,2,c
 23174  0117FC  D049               	goto	l1921
 23175                           
 23176                           ;doprnt.c: 612: flag |= 0x4000;
 23177  0117FE  0101               	movlb	1	; () banked
 23178  011800  8DA8               	bsf	(__doprnt@flag+1)& (0+255),6,b
 23179                           
 23180                           ;doprnt.c: 613: f++;
 23181  011802  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23182  011804  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23183                           
 23184                           ; BSR set to: 1
 23185                           ;doprnt.c: 620: {
 23186                           ;doprnt.c: 621: prec = 0;
 23187  011806  0E00               	movlw	0
 23188  011808  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23189  01180A  0E00               	movlw	0
 23190  01180C  6FA9               	movwf	__doprnt@prec& (0+255),b
 23191                           
 23192                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 23193  01180E  D02A               	goto	l1922
 23194  011810                     
 23195                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 23196                           
 23197                           ; BSR set to: 1
 23198  011810  C1A9  F117         	movff	__doprnt@prec,___wmul@multiplier
 23199  011814  C1AA  F118         	movff	__doprnt@prec+1,___wmul@multiplier+1
 23200  011818  0E00               	movlw	0
 23201  01181A  0101               	movlb	1	; () banked
 23202  01181C  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23203  01181E  0E0A               	movlw	10
 23204  011820  6F19               	movwf	___wmul@multiplicand& (0+255),b
 23205  011822  ECB5  F0D6         	call	___wmul	;wreg free
 23206  011826  C184  FFF6         	movff	__doprnt@f,tblptrl
 23207  01182A  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23208  01182E  0E00               	movlw	low (__mediumconst shr (0+16))
 23209  011830  6EF8               	movwf	tblptru,c
 23210  011832  0E0D               	movlw	(high __ramtop+-1)
 23211  011834  64F7               	cpfsgt	tblptrh,c
 23212  011836  D003               	bra	u30497
 23213  011838  0008               	tblrd		*
 23214  01183A  50F5               	movf	tablat,w,c
 23215  01183C  D005               	bra	u30490
 23216  01183E                     u30497:
 23217  01183E  CFF6 FFE9          	movff	tblptrl,fsr0l
 23218  011842  CFF7 FFEA          	movff	tblptrh,fsr0h
 23219  011846  50EF               	movf	indf0,w,c
 23220  011848                     u30490:
 23221  011848  0101               	movlb	1	; () banked
 23222  01184A  6F88               	movwf	??__doprnt& (0+255),b
 23223  01184C  5188               	movf	??__doprnt& (0+255),w,b
 23224  01184E  2717               	addwf	?___wmul& (0+255),f,b
 23225  011850  0E00               	movlw	0
 23226  011852  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 23227  011854  0ED0               	movlw	208
 23228  011856  2517               	addwf	?___wmul& (0+255),w,b
 23229  011858  6FA9               	movwf	__doprnt@prec& (0+255),b
 23230  01185A  0EFF               	movlw	255
 23231  01185C  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 23232  01185E  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23233                           
 23234                           ; BSR set to: 1
 23235  011860  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23236  011862  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23237  011864                     l1922:
 23238                           
 23239                           ; BSR set to: 1
 23240                           
 23241                           ; BSR set to: 1
 23242  011864  C184  FFF6         	movff	__doprnt@f,tblptrl
 23243  011868  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23244  01186C  0E00               	movlw	low (__mediumconst shr (0+16))
 23245  01186E  6EF8               	movwf	tblptru,c
 23246  011870  0E0D               	movlw	(high __ramtop+-1)
 23247  011872  64F7               	cpfsgt	tblptrh,c
 23248  011874  D003               	bra	u30507
 23249  011876  0008               	tblrd		*
 23250  011878  50F5               	movf	tablat,w,c
 23251  01187A  D005               	bra	u30500
 23252  01187C                     u30507:
 23253  01187C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23254  011880  CFF7 FFEA          	movff	tblptrh,fsr0h
 23255  011884  50EF               	movf	indf0,w,c
 23256  011886                     u30500:
 23257  011886  EC74  F0D7         	call	_isdigit
 23258  01188A  A0D8               	btfss	status,0,c
 23259  01188C  D12A               	goto	l1927
 23260  01188E  D7C0               	goto	l1923
 23261  011890                     l1921:
 23262                           
 23263                           ;doprnt.c: 626: prec = 0;
 23264  011890  0E00               	movlw	0
 23265  011892  0101               	movlb	1	; () banked
 23266  011894  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23267  011896  0E00               	movlw	0
 23268  011898  6FA9               	movwf	__doprnt@prec& (0+255),b
 23269                           
 23270                           ; BSR set to: 1
 23271                           ;doprnt.c: 628: flag |= 0x1000;
 23272  01189A  89A8               	bsf	(__doprnt@flag+1)& (0+255),4,b
 23273                           
 23274                           ; BSR set to: 1
 23275                           ;doprnt.c: 635: switch(c = *f++) {
 23276                           
 23277                           ;doprnt.c: 630: }
 23278                           ;doprnt.c: 633: loop:
 23279                           
 23280                           ; BSR set to: 1
 23281  01189C  D122               	goto	l1927
 23282  01189E                     
 23283                           ; BSR set to: 1
 23284                           ;doprnt.c: 643: flag |= 0x10;
 23285                           
 23286                           ; BSR set to: 1
 23287  01189E  89A7               	bsf	__doprnt@flag& (0+255),4,b
 23288                           
 23289                           ;doprnt.c: 644: goto loop;
 23290  0118A0  D120               	goto	l1927
 23291  0118A2                     
 23292                           ; BSR set to: 1
 23293                           ;doprnt.c: 663: flag |= 0x400;
 23294                           
 23295                           ; BSR set to: 1
 23296  0118A2  85A8               	bsf	(__doprnt@flag+1)& (0+255),2,b
 23297                           
 23298                           ; BSR set to: 1
 23299                           ;doprnt.c: 698: case 'i':
 23300                           ;doprnt.c: 699: break;
 23301                           
 23302                           ; BSR set to: 1
 23303                           
 23304                           ;doprnt.c: 697: case 'd':
 23305                           
 23306                           ;doprnt.c: 664: break;
 23307  0118A4  D159               	goto	l1932
 23308  0118A6                     
 23309                           ; BSR set to: 1
 23310                           ;doprnt.c: 718: case 'x':
 23311                           ;doprnt.c: 721: flag |= 0x80;
 23312                           
 23313                           ; BSR set to: 1
 23314                           
 23315                           ; BSR set to: 1
 23316  0118A6  8FA7               	bsf	__doprnt@flag& (0+255),7,b
 23317                           
 23318                           ;doprnt.c: 723: break;
 23319  0118A8  D157               	goto	l1932
 23320  0118AA                     
 23321                           ; BSR set to: 1
 23322                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 23323                           
 23324                           ; BSR set to: 1
 23325  0118AA  C186  FFD9         	movff	__doprnt@ap,fsr2l
 23326  0118AE  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 23327  0118B2  CFDF F188          	movff	indf2,??__doprnt
 23328  0118B6  0E02               	movlw	2
 23329  0118B8  26DE               	addwf	postinc2,f,c
 23330  0118BA  CFDF F189          	movff	indf2,??__doprnt+1
 23331  0118BE  0E00               	movlw	0
 23332  0118C0  22DD               	addwfc	postdec2,f,c
 23333  0118C2  C188  FFD9         	movff	??__doprnt,fsr2l
 23334  0118C6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23335  0118CA  CFDE F193          	movff	postinc2,__doprnt@cp
 23336  0118CE  CFDD F194          	movff	postdec2,__doprnt@cp+1
 23337                           
 23338                           ; BSR set to: 1
 23339                           ;doprnt.c: 740: if(!cp)
 23340  0118D2  5193               	movf	__doprnt@cp& (0+255),w,b
 23341  0118D4  1194               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 23342  0118D6  A4D8               	btfss	status,2,c
 23343  0118D8  D004               	goto	l1938
 23344                           
 23345                           ; BSR set to: 1
 23346                           ;doprnt.c: 741: cp = "(null)";
 23347  0118DA  0E88               	movlw	low STR_188
 23348  0118DC  6F93               	movwf	__doprnt@cp& (0+255),b
 23349  0118DE  0EFF               	movlw	high STR_188
 23350  0118E0  6F94               	movwf	(__doprnt@cp+1)& (0+255),b
 23351  0118E2                     l1938:
 23352                           
 23353                           ; BSR set to: 1
 23354                           ;doprnt.c: 745: len = 0;
 23355                           
 23356                           ; BSR set to: 1
 23357  0118E2  0E00               	movlw	0
 23358  0118E4  6F96               	movwf	(__doprnt@len+1)& (0+255),b
 23359  0118E6  0E00               	movlw	0
 23360  0118E8  6F95               	movwf	__doprnt@len& (0+255),b
 23361                           
 23362                           ;doprnt.c: 746: while(cp[len])
 23363  0118EA  D003               	goto	l1939
 23364  0118EC                     
 23365                           ;doprnt.c: 747: len++;
 23366                           
 23367                           ; BSR set to: 1
 23368  0118EC  0101               	movlb	1	; () banked
 23369  0118EE  4B95               	infsnz	__doprnt@len& (0+255),f,b
 23370  0118F0  2B96               	incf	(__doprnt@len+1)& (0+255),f,b
 23371  0118F2                     l1939:
 23372                           
 23373                           ; BSR set to: 1
 23374                           
 23375                           ; BSR set to: 1
 23376  0118F2  5195               	movf	__doprnt@len& (0+255),w,b
 23377  0118F4  2593               	addwf	__doprnt@cp& (0+255),w,b
 23378  0118F6  6F88               	movwf	??__doprnt& (0+255),b
 23379  0118F8  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 23380  0118FA  2194               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 23381  0118FC  6F89               	movwf	(??__doprnt+1)& (0+255),b
 23382  0118FE  C188  FFF6         	movff	??__doprnt,tblptrl
 23383  011902  C189  FFF7         	movff	??__doprnt+1,tblptrh
 23384  011906  0E00               	movlw	low (__mediumconst shr (0+16))
 23385  011908  6EF8               	movwf	tblptru,c
 23386  01190A  0E0D               	movlw	(high __ramtop+-1)
 23387  01190C  64F7               	cpfsgt	tblptrh,c
 23388  01190E  D003               	bra	u30537
 23389  011910  0008               	tblrd		*
 23390  011912  50F5               	movf	tablat,w,c
 23391  011914  D005               	bra	u30530
 23392  011916                     u30537:
 23393  011916  CFF6 FFE9          	movff	tblptrl,fsr0l
 23394  01191A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23395  01191E  50EF               	movf	indf0,w,c
 23396  011920                     u30530:
 23397  011920  0900               	iorlw	0
 23398  011922  A4D8               	btfss	status,2,c
 23399  011924  D7E3               	goto	l1940
 23400  011926                     u30540:
 23401                           
 23402                           ;doprnt.c: 753: if(prec && prec < len)
 23403                           
 23404                           ;doprnt.c: 750: dostring:
 23405  011926  0101               	movlb	1	; () banked
 23406  011928  51A9               	movf	__doprnt@prec& (0+255),w,b
 23407  01192A  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 23408  01192C  B4D8               	btfsc	status,2,c
 23409  01192E  D00A               	goto	l1943
 23410                           
 23411                           ; BSR set to: 1
 23412  011930  5195               	movf	__doprnt@len& (0+255),w,b
 23413  011932  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 23414  011934  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 23415  011936  59AA               	subwfb	(__doprnt@prec+1)& (0+255),w,b
 23416  011938  B0D8               	btfsc	status,0,c
 23417  01193A  D004               	goto	l1943
 23418                           
 23419                           ; BSR set to: 1
 23420                           ;doprnt.c: 754: len = prec;
 23421  01193C  C1A9  F195         	movff	__doprnt@prec,__doprnt@len
 23422  011940  C1AA  F196         	movff	__doprnt@prec+1,__doprnt@len+1
 23423  011944                     l1943:
 23424                           
 23425                           ; BSR set to: 1
 23426                           ;doprnt.c: 757: if(width > len)
 23427                           
 23428                           ; BSR set to: 1
 23429  011944  51A5               	movf	__doprnt@width& (0+255),w,b
 23430  011946  5D95               	subwf	__doprnt@len& (0+255),w,b
 23431  011948  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 23432  01194A  5996               	subwfb	(__doprnt@len+1)& (0+255),w,b
 23433  01194C  B0D8               	btfsc	status,0,c
 23434  01194E  D005               	goto	l1944
 23435                           
 23436                           ; BSR set to: 1
 23437                           ;doprnt.c: 758: width -= len;
 23438  011950  5195               	movf	__doprnt@len& (0+255),w,b
 23439  011952  5FA5               	subwf	__doprnt@width& (0+255),f,b
 23440  011954  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 23441  011956  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 23442  011958  D038               	goto	l1949
 23443  01195A                     l1944:
 23444                           
 23445                           ; BSR set to: 1
 23446                           ;doprnt.c: 759: else
 23447                           ;doprnt.c: 760: width = 0;
 23448                           
 23449                           ; BSR set to: 1
 23450  01195A  0E00               	movlw	0
 23451  01195C  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 23452  01195E  0E00               	movlw	0
 23453  011960  6FA5               	movwf	__doprnt@width& (0+255),b
 23454                           
 23455                           ; BSR set to: 1
 23456                           ;doprnt.c: 764: while(width--)
 23457  011962  D033               	goto	l1949
 23458  011964                     l21657:
 23459                           
 23460                           ; BSR set to: 1
 23461                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 23462  011964  EE20 F002          	lfsr	2,2
 23463  011968  5182               	movf	__doprnt@pb& (0+255),w,b
 23464  01196A  26D9               	addwf	fsr2l,f,c
 23465  01196C  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23466  01196E  22DA               	addwfc	fsr2h,f,c
 23467  011970  50DE               	movf	postinc2,w,c
 23468  011972  10DE               	iorwf	postinc2,w,c
 23469  011974  10DE               	iorwf	postinc2,w,c
 23470  011976  B4D8               	btfsc	status,2,c
 23471  011978  D013               	goto	l1948
 23472                           
 23473                           ; BSR set to: 1
 23474  01197A  EE20 F002          	lfsr	2,2
 23475  01197E  5182               	movf	__doprnt@pb& (0+255),w,b
 23476  011980  26D9               	addwf	fsr2l,f,c
 23477  011982  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23478  011984  22DA               	addwfc	fsr2h,f,c
 23479  011986  D801               	call	u30598
 23480  011988  D020               	goto	l1949
 23481  01198A                     u30598:
 23482  01198A  0005               	push	
 23483  01198C  6EFA               	movwf	pclath,c
 23484  01198E  50DE               	movf	postinc2,w,c
 23485  011990  6EFD               	movwf	tosl,c
 23486  011992  50DE               	movf	postinc2,w,c
 23487  011994  6EFE               	movwf	tosh,c
 23488  011996  50DE               	movf	postinc2,w,c
 23489  011998  6EFF               	movwf	tosu,c
 23490  01199A  50FA               	movf	pclath,w,c
 23491  01199C  0E20               	movlw	32
 23492  01199E  0012               	return		;indir
 23493  0119A0                     l1948:
 23494  0119A0  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23495  0119A4  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23496  0119A8  CFDE F188          	movff	postinc2,??__doprnt
 23497  0119AC  CFDD F189          	movff	postdec2,??__doprnt+1
 23498  0119B0  C188  FFD9         	movff	??__doprnt,fsr2l
 23499  0119B4  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23500  0119B8  0E20               	movlw	32
 23501  0119BA  6EDF               	movwf	indf2,c
 23502  0119BC  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23503  0119C0  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23504  0119C4  2ADE               	incf	postinc2,f,c
 23505  0119C6  0E00               	movlw	0
 23506  0119C8  22DD               	addwfc	postdec2,f,c
 23507  0119CA                     l1949:
 23508  0119CA  0101               	movlb	1	; () banked
 23509  0119CC  07A5               	decf	__doprnt@width& (0+255),f,b
 23510  0119CE  A0D8               	btfss	status,0,c
 23511  0119D0  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 23512  0119D2  29A5               	incf	__doprnt@width& (0+255),w,b
 23513  0119D4  E1C7               	bnz	l21657
 23514  0119D6  29A6               	incf	(__doprnt@width+1)& (0+255),w,b
 23515  0119D8  B4D8               	btfsc	status,2,c
 23516  0119DA  D05B               	goto	l1954
 23517  0119DC  D7C3               	goto	l1947
 23518  0119DE                     l21667:
 23519                           
 23520                           ; BSR set to: 1
 23521                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 23522  0119DE  EE20 F002          	lfsr	2,2
 23523  0119E2  5182               	movf	__doprnt@pb& (0+255),w,b
 23524  0119E4  26D9               	addwf	fsr2l,f,c
 23525  0119E6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23526  0119E8  22DA               	addwfc	fsr2h,f,c
 23527  0119EA  50DE               	movf	postinc2,w,c
 23528  0119EC  10DE               	iorwf	postinc2,w,c
 23529  0119EE  10DE               	iorwf	postinc2,w,c
 23530  0119F0  B4D8               	btfsc	status,2,c
 23531  0119F2  D027               	goto	l1953
 23532                           
 23533                           ; BSR set to: 1
 23534  0119F4  EE20 F002          	lfsr	2,2
 23535  0119F8  5182               	movf	__doprnt@pb& (0+255),w,b
 23536  0119FA  26D9               	addwf	fsr2l,f,c
 23537  0119FC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23538  0119FE  22DA               	addwfc	fsr2h,f,c
 23539  011A00  D801               	call	u30628
 23540  011A02  D01B               	goto	u30629
 23541  011A04                     u30628:
 23542  011A04  0005               	push	
 23543  011A06  6EFA               	movwf	pclath,c
 23544  011A08  50DE               	movf	postinc2,w,c
 23545  011A0A  6EFD               	movwf	tosl,c
 23546  011A0C  50DE               	movf	postinc2,w,c
 23547  011A0E  6EFE               	movwf	tosh,c
 23548  011A10  50DE               	movf	postinc2,w,c
 23549  011A12  6EFF               	movwf	tosu,c
 23550  011A14  50FA               	movf	pclath,w,c
 23551  011A16  C193  FFF6         	movff	__doprnt@cp,tblptrl
 23552  011A1A  C194  FFF7         	movff	__doprnt@cp+1,tblptrh
 23553  011A1E  0E00               	movlw	low (__mediumconst shr (0+16))
 23554  011A20  6EF8               	movwf	tblptru,c
 23555  011A22  0E0D               	movlw	(high __ramtop+-1)
 23556  011A24  64F7               	cpfsgt	tblptrh,c
 23557  011A26  D003               	bra	u30637
 23558  011A28  0008               	tblrd		*
 23559  011A2A  50F5               	movf	tablat,w,c
 23560  011A2C  D005               	bra	u30630
 23561  011A2E                     u30637:
 23562  011A2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 23563  011A32  CFF7 FFEA          	movff	tblptrh,fsr0h
 23564  011A36  50EF               	movf	indf0,w,c
 23565  011A38                     u30630:
 23566  011A38  0012               	return		;indir
 23567  011A3A                     u30629:
 23568  011A3A  0101               	movlb	1	; () banked
 23569  011A3C  4B93               	infsnz	__doprnt@cp& (0+255),f,b
 23570  011A3E  2B94               	incf	(__doprnt@cp+1)& (0+255),f,b
 23571  011A40  D028               	goto	l1954
 23572  011A42                     l1953:
 23573                           
 23574                           ; BSR set to: 1
 23575                           
 23576                           ; BSR set to: 1
 23577  011A42  C193  FFF6         	movff	__doprnt@cp,tblptrl
 23578  011A46  C194  FFF7         	movff	__doprnt@cp+1,tblptrh
 23579  011A4A  0E00               	movlw	low (__mediumconst shr (0+16))
 23580  011A4C  6EF8               	movwf	tblptru,c
 23581  011A4E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23582  011A52  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23583  011A56  CFDE F188          	movff	postinc2,??__doprnt
 23584  011A5A  CFDD F189          	movff	postdec2,??__doprnt+1
 23585  011A5E  C188  FFD9         	movff	??__doprnt,fsr2l
 23586  011A62  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23587  011A66  0E0D               	movlw	(high __ramtop+-1)
 23588  011A68  64F7               	cpfsgt	tblptrh,c
 23589  011A6A  D003               	bra	u30647
 23590  011A6C  0008               	tblrd		*
 23591  011A6E  50F5               	movf	tablat,w,c
 23592  011A70  D005               	bra	u30640
 23593  011A72                     u30647:
 23594  011A72  CFF6 FFE9          	movff	tblptrl,fsr0l
 23595  011A76  CFF7 FFEA          	movff	tblptrh,fsr0h
 23596  011A7A  50EF               	movf	indf0,w,c
 23597  011A7C                     u30640:
 23598  011A7C  6EDF               	movwf	indf2,c
 23599  011A7E  0101               	movlb	1	; () banked
 23600  011A80  4B93               	infsnz	__doprnt@cp& (0+255),f,b
 23601  011A82  2B94               	incf	(__doprnt@cp+1)& (0+255),f,b
 23602                           
 23603                           ; BSR set to: 1
 23604  011A84  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23605  011A88  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23606  011A8C  2ADE               	incf	postinc2,f,c
 23607  011A8E  0E00               	movlw	0
 23608  011A90  22DD               	addwfc	postdec2,f,c
 23609  011A92                     l1954:
 23610                           
 23611                           ; BSR set to: 1
 23612                           
 23613                           ; BSR set to: 1
 23614                           
 23615                           ; BSR set to: 1
 23616  011A92  0795               	decf	__doprnt@len& (0+255),f,b
 23617  011A94  A0D8               	btfss	status,0,c
 23618  011A96  0796               	decf	(__doprnt@len+1)& (0+255),f,b
 23619  011A98  2995               	incf	__doprnt@len& (0+255),w,b
 23620  011A9A  E1A1               	bnz	l21667
 23621  011A9C  2996               	incf	(__doprnt@len+1)& (0+255),w,b
 23622  011A9E  B4D8               	btfsc	status,2,c
 23623  011AA0  EF8F  F095         	goto	u31500
 23624  011AA4  D79C               	goto	l1952
 23625  011AA6                     
 23626                           ; BSR set to: 1
 23627                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 23628                           
 23629                           ; BSR set to: 1
 23630  011AA6  C186  FFD9         	movff	__doprnt@ap,fsr2l
 23631  011AAA  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 23632  011AAE  CFDF F188          	movff	indf2,??__doprnt
 23633  011AB2  0E02               	movlw	2
 23634  011AB4  26DE               	addwf	postinc2,f,c
 23635  011AB6  CFDF F189          	movff	indf2,??__doprnt+1
 23636  011ABA  0E00               	movlw	0
 23637  011ABC  22DD               	addwfc	postdec2,f,c
 23638  011ABE  C188  FFD9         	movff	??__doprnt,fsr2l
 23639  011AC2  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23640  011AC6  50DF               	movf	indf2,w,c
 23641  011AC8  6FAB               	movwf	__doprnt@c& (0+255),b
 23642  011ACA                     
 23643                           ; BSR set to: 1
 23644                           ;doprnt.c: 805: cp = (char *)&c;
 23645                           
 23646                           ; BSR set to: 1
 23647  011ACA  0EAB               	movlw	low __doprnt@c
 23648  011ACC  6F93               	movwf	__doprnt@cp& (0+255),b
 23649  011ACE  0E01               	movlw	high __doprnt@c
 23650  011AD0  6F94               	movwf	(__doprnt@cp+1)& (0+255),b
 23651                           
 23652                           ; BSR set to: 1
 23653                           ;doprnt.c: 806: len = 1;
 23654  011AD2  0E00               	movlw	0
 23655  011AD4  6F96               	movwf	(__doprnt@len+1)& (0+255),b
 23656  011AD6  0E01               	movlw	1
 23657  011AD8  6F95               	movwf	__doprnt@len& (0+255),b
 23658                           
 23659                           ;doprnt.c: 807: goto dostring;
 23660  011ADA  D725               	goto	u30540
 23661  011ADC                     
 23662                           ; BSR set to: 1
 23663                           ;doprnt.c: 818: flag |= 0xC0;
 23664                           
 23665                           ; BSR set to: 1
 23666  011ADC  0EC0               	movlw	192
 23667  011ADE  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 23668                           
 23669                           ; BSR set to: 1
 23670                           ;doprnt.c: 822: }
 23671                           
 23672                           ;doprnt.c: 819: break;
 23673  011AE0  D03B               	goto	l1932
 23674  011AE2                     l1927:
 23675                           
 23676                           ; BSR set to: 1
 23677  011AE2  0101               	movlb	1	; () banked
 23678  011AE4  5184               	movf	__doprnt@f& (0+255),w,b
 23679  011AE6  6F88               	movwf	??__doprnt& (0+255),b
 23680  011AE8  5185               	movf	(__doprnt@f+1)& (0+255),w,b
 23681  011AEA  6F89               	movwf	(??__doprnt+1)& (0+255),b
 23682  011AEC  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23683  011AEE  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23684  011AF0  C188  FFF6         	movff	??__doprnt,tblptrl
 23685  011AF4  C189  FFF7         	movff	??__doprnt+1,tblptrh
 23686  011AF8  0E00               	movlw	low (__mediumconst shr (0+16))
 23687  011AFA  6EF8               	movwf	tblptru,c
 23688  011AFC  0E0D               	movlw	(high __ramtop+-1)
 23689  011AFE  64F7               	cpfsgt	tblptrh,c
 23690  011B00  D003               	bra	u30667
 23691  011B02  0008               	tblrd		*
 23692  011B04  50F5               	movf	tablat,w,c
 23693  011B06  D005               	bra	u30660
 23694  011B08                     u30667:
 23695  011B08  CFF6 FFE9          	movff	tblptrl,fsr0l
 23696  011B0C  CFF7 FFEA          	movff	tblptrh,fsr0h
 23697  011B10  50EF               	movf	indf0,w,c
 23698  011B12                     u30660:
 23699  011B12  0101               	movlb	1	; () banked
 23700  011B14  6FAB               	movwf	__doprnt@c& (0+255),b
 23701  011B16  51AB               	movf	__doprnt@c& (0+255),w,b
 23702                           
 23703                           ; Switch size 1, requested type "space"
 23704                           ; Number of cases is 10, Range of values is 0 to 120
 23705                           ; switch strategies available:
 23706                           ; Name         Instructions Cycles
 23707                           ; simple_byte           31    16 (average)
 23708                           ;	Chosen strategy is simple_byte
 23709  011B18  0A00               	xorlw	0	; case 0
 23710  011B1A  B4D8               	btfsc	status,2,c
 23711  011B1C  EFAD  F095         	goto	u31520
 23712  011B20  0A58               	xorlw	88	; case 88
 23713  011B22  B4D8               	btfsc	status,2,c
 23714  011B24  D6C0               	goto	l1935
 23715  011B26  0A3B               	xorlw	59	; case 99
 23716  011B28  B4D8               	btfsc	status,2,c
 23717  011B2A  D7BD               	goto	l1956
 23718  011B2C  0A07               	xorlw	7	; case 100
 23719  011B2E  B4D8               	btfsc	status,2,c
 23720  011B30  D013               	goto	l1932
 23721  011B32  0A02               	xorlw	2	; case 102
 23722  011B34  B4D8               	btfsc	status,2,c
 23723  011B36  D6B5               	goto	l1931
 23724  011B38  0A0F               	xorlw	15	; case 105
 23725  011B3A  B4D8               	btfsc	status,2,c
 23726  011B3C  D00D               	goto	l1932
 23727  011B3E  0A05               	xorlw	5	; case 108
 23728  011B40  B4D8               	btfsc	status,2,c
 23729  011B42  D6AD               	goto	l1930
 23730  011B44  0A1F               	xorlw	31	; case 115
 23731  011B46  B4D8               	btfsc	status,2,c
 23732  011B48  D6B0               	goto	l1937
 23733  011B4A  0A06               	xorlw	6	; case 117
 23734  011B4C  B4D8               	btfsc	status,2,c
 23735  011B4E  D7C6               	goto	l1958
 23736  011B50  0A0D               	xorlw	13	; case 120
 23737  011B52  B4D8               	btfsc	status,2,c
 23738  011B54  D6A8               	goto	l1935
 23739  011B56  D7B9               	goto	l1957
 23740  011B58                     l1932:
 23741                           
 23742                           ; BSR set to: 1
 23743                           ;doprnt.c: 825: if(flag & (0x700)) {
 23744                           
 23745                           ; BSR set to: 1
 23746  011B58  0E07               	movlw	7
 23747  011B5A  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 23748  011B5C  B4D8               	btfsc	status,2,c
 23749  011B5E  EFA3  F092         	goto	l1959
 23750                           
 23751                           ; BSR set to: 1
 23752                           ;doprnt.c: 827: if(flag & 0x1000)
 23753  011B62  A9A8               	btfss	(__doprnt@flag+1)& (0+255),4,b
 23754  011B64  D004               	goto	l1960
 23755                           
 23756                           ; BSR set to: 1
 23757                           ;doprnt.c: 829: prec = 6;
 23758  011B66  0E00               	movlw	0
 23759  011B68  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23760  011B6A  0E06               	movlw	6
 23761  011B6C  6FA9               	movwf	__doprnt@prec& (0+255),b
 23762  011B6E                     l1960:
 23763                           
 23764                           ; BSR set to: 1
 23765                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 23766                           
 23767                           ; BSR set to: 1
 23768  011B6E  C186  FFD9         	movff	__doprnt@ap,fsr2l
 23769  011B72  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 23770  011B76  CFDF F188          	movff	indf2,??__doprnt
 23771  011B7A  0E04               	movlw	4
 23772  011B7C  26DE               	addwf	postinc2,f,c
 23773  011B7E  CFDF F189          	movff	indf2,??__doprnt+1
 23774  011B82  0E00               	movlw	0
 23775  011B84  22DD               	addwfc	postdec2,f,c
 23776  011B86  C188  FFD9         	movff	??__doprnt,fsr2l
 23777  011B8A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23778  011B8E  CFDE F19D          	movff	postinc2,__doprnt@fval
 23779  011B92  CFDE F19E          	movff	postinc2,__doprnt@fval+1
 23780  011B96  CFDE F19F          	movff	postinc2,__doprnt@fval+2
 23781  011B9A  CFDE F1A0          	movff	postinc2,__doprnt@fval+3
 23782                           
 23783                           ; BSR set to: 1
 23784                           ;doprnt.c: 831: if(fval < 0.0) {
 23785  011B9E  AFA0               	btfss	(__doprnt@fval+3)& (0+255),7,b
 23786  011BA0  D015               	goto	l1961
 23787                           
 23788                           ; BSR set to: 1
 23789                           ;doprnt.c: 832: fval = -fval;
 23790  011BA2  C19D  F125         	movff	__doprnt@fval,___flneg@f1
 23791  011BA6  C19E  F126         	movff	__doprnt@fval+1,___flneg@f1+1
 23792  011BAA  C19F  F127         	movff	__doprnt@fval+2,___flneg@f1+2
 23793  011BAE  C1A0  F128         	movff	__doprnt@fval+3,___flneg@f1+3
 23794  011BB2  EC59  F0D6         	call	___flneg
 23795  011BB6  C125  F19D         	movff	?___flneg,__doprnt@fval
 23796  011BBA  C126  F19E         	movff	?___flneg+1,__doprnt@fval+1
 23797  011BBE  C127  F19F         	movff	?___flneg+2,__doprnt@fval+2
 23798  011BC2  C128  F1A0         	movff	?___flneg+3,__doprnt@fval+3
 23799                           
 23800                           ;doprnt.c: 833: flag |= 0x03;
 23801  011BC6  0E03               	movlw	3
 23802  011BC8  0101               	movlb	1	; () banked
 23803  011BCA  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 23804  011BCC                     l1961:
 23805                           
 23806                           ; BSR set to: 1
 23807                           ;doprnt.c: 834: }
 23808                           ;doprnt.c: 835: exp = 0;
 23809                           
 23810                           ; BSR set to: 1
 23811  011BCC  0E00               	movlw	0
 23812  011BCE  6F98               	movwf	(__doprnt@exp+1)& (0+255),b
 23813  011BD0  0E00               	movlw	0
 23814  011BD2  6F97               	movwf	__doprnt@exp& (0+255),b
 23815                           
 23816                           ; BSR set to: 1
 23817                           ;doprnt.c: 836: if( fval!=0) {
 23818  011BD4  519D               	movf	__doprnt@fval& (0+255),w,b
 23819  011BD6  119E               	iorwf	(__doprnt@fval+1)& (0+255),w,b
 23820  011BD8  119F               	iorwf	(__doprnt@fval+2)& (0+255),w,b
 23821  011BDA  11A0               	iorwf	(__doprnt@fval+3)& (0+255),w,b
 23822  011BDC  B4D8               	btfsc	status,2,c
 23823  011BDE  D084               	goto	l1966
 23824                           
 23825                           ; BSR set to: 1
 23826                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 23827  011BE0  359F               	rlcf	(__doprnt@fval+2)& (0+255),w,b
 23828  011BE2  35A0               	rlcf	(__doprnt@fval+3)& (0+255),w,b
 23829  011BE4  0F82               	addlw	130
 23830  011BE6  6F97               	movwf	__doprnt@exp& (0+255),b
 23831  011BE8  6B98               	clrf	(__doprnt@exp+1)& (0+255),b
 23832  011BEA  0EFF               	movlw	255
 23833  011BEC  2398               	addwfc	(__doprnt@exp+1)& (0+255),f,b
 23834                           
 23835                           ; BSR set to: 1
 23836                           ;doprnt.c: 838: exp--;
 23837  011BEE  0797               	decf	__doprnt@exp& (0+255),f,b
 23838  011BF0  A0D8               	btfss	status,0,c
 23839  011BF2  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 23840                           
 23841                           ; BSR set to: 1
 23842                           ;doprnt.c: 839: exp *= 3;
 23843  011BF4  C197  F117         	movff	__doprnt@exp,___wmul@multiplier
 23844  011BF8  C198  F118         	movff	__doprnt@exp+1,___wmul@multiplier+1
 23845  011BFC  0E00               	movlw	0
 23846  011BFE  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23847  011C00  0E03               	movlw	3
 23848  011C02  6F19               	movwf	___wmul@multiplicand& (0+255),b
 23849  011C04  ECB5  F0D6         	call	___wmul	;wreg free
 23850  011C08  C117  F197         	movff	?___wmul,__doprnt@exp
 23851  011C0C  C118  F198         	movff	?___wmul+1,__doprnt@exp+1
 23852                           
 23853                           ;doprnt.c: 840: exp /= 10;
 23854  011C10  C197  F11D         	movff	__doprnt@exp,___awdiv@dividend
 23855  011C14  C198  F11E         	movff	__doprnt@exp+1,___awdiv@dividend+1
 23856  011C18  0E00               	movlw	0
 23857  011C1A  0101               	movlb	1	; () banked
 23858  011C1C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23859  011C1E  0E0A               	movlw	10
 23860  011C20  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23861  011C22  EC4B  F0CD         	call	___awdiv	;wreg free
 23862  011C26  C11D  F197         	movff	?___awdiv,__doprnt@exp
 23863  011C2A  C11E  F198         	movff	?___awdiv+1,__doprnt@exp+1
 23864                           
 23865                           ;doprnt.c: 841: if(exp < 0)
 23866  011C2E  0101               	movlb	1	; () banked
 23867  011C30  AF98               	btfss	(__doprnt@exp+1)& (0+255),7,b
 23868  011C32  D003               	goto	l1963
 23869                           
 23870                           ; BSR set to: 1
 23871                           ;doprnt.c: 842: exp--;
 23872  011C34  0797               	decf	__doprnt@exp& (0+255),f,b
 23873  011C36  A0D8               	btfss	status,0,c
 23874  011C38  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 23875  011C3A                     l1963:
 23876                           
 23877                           ; BSR set to: 1
 23878                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 23879                           
 23880                           ; BSR set to: 1
 23881  011C3A  5197               	movf	__doprnt@exp& (0+255),w,b
 23882  011C3C  0800               	sublw	0
 23883  011C3E  ECA1  F0A5         	call	_scale
 23884  011C42  C16F  F199         	movff	?_scale,__doprnt@tmpval
 23885  011C46  C170  F19A         	movff	?_scale+1,__doprnt@tmpval+1
 23886  011C4A  C171  F19B         	movff	?_scale+2,__doprnt@tmpval+2
 23887  011C4E  C172  F19C         	movff	?_scale+3,__doprnt@tmpval+3
 23888                           
 23889                           ;doprnt.c: 847: tmpval.integ *= fval;
 23890  011C52  C199  F156         	movff	__doprnt@tmpval,___flmul@b
 23891  011C56  C19A  F157         	movff	__doprnt@tmpval+1,___flmul@b+1
 23892  011C5A  C19B  F158         	movff	__doprnt@tmpval+2,___flmul@b+2
 23893  011C5E  C19C  F159         	movff	__doprnt@tmpval+3,___flmul@b+3
 23894  011C62  C19D  F15A         	movff	__doprnt@fval,___flmul@a
 23895  011C66  C19E  F15B         	movff	__doprnt@fval+1,___flmul@a+1
 23896  011C6A  C19F  F15C         	movff	__doprnt@fval+2,___flmul@a+2
 23897  011C6E  C1A0  F15D         	movff	__doprnt@fval+3,___flmul@a+3
 23898  011C72  ECE7  F0AB         	call	___flmul	;wreg free
 23899  011C76  C156  F199         	movff	?___flmul,__doprnt@tmpval
 23900  011C7A  C157  F19A         	movff	?___flmul+1,__doprnt@tmpval+1
 23901  011C7E  C158  F19B         	movff	?___flmul+2,__doprnt@tmpval+2
 23902  011C82  C159  F19C         	movff	?___flmul+3,__doprnt@tmpval+3
 23903                           
 23904                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 23905  011C86  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 23906  011C8A  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23907  011C8E  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23908  011C92  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23909  011C96  0E00               	movlw	0
 23910  011C98  0101               	movlb	1	; () banked
 23911  011C9A  6F1B               	movwf	___flge@ff2& (0+255),b
 23912  011C9C  0E00               	movlw	0
 23913  011C9E  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 23914  011CA0  0E80               	movlw	128
 23915  011CA2  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 23916  011CA4  0E3F               	movlw	63
 23917  011CA6  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 23918  011CA8  EC61  F0C6         	call	___flge	;wreg free
 23919  011CAC  0101               	movlb	1	; () banked
 23920  011CAE  B0D8               	btfsc	status,0,c
 23921  011CB0  D004               	goto	l1964
 23922                           
 23923                           ; BSR set to: 1
 23924                           ;doprnt.c: 849: exp--;
 23925  011CB2  0797               	decf	__doprnt@exp& (0+255),f,b
 23926  011CB4  A0D8               	btfss	status,0,c
 23927  011CB6  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 23928  011CB8  D017               	goto	l1966
 23929  011CBA                     l1964:
 23930                           
 23931                           ; BSR set to: 1
 23932                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 23933                           
 23934                           ; BSR set to: 1
 23935  011CBA  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 23936  011CBE  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23937  011CC2  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23938  011CC6  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23939  011CCA  0E00               	movlw	0
 23940  011CCC  6F1B               	movwf	___flge@ff2& (0+255),b
 23941  011CCE  0E00               	movlw	0
 23942  011CD0  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 23943  011CD2  0E20               	movlw	32
 23944  011CD4  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 23945  011CD6  0E41               	movlw	65
 23946  011CD8  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 23947  011CDA  EC61  F0C6         	call	___flge	;wreg free
 23948  011CDE  0101               	movlb	1	; () banked
 23949  011CE0  A0D8               	btfss	status,0,c
 23950  011CE2  D002               	goto	l1966
 23951                           
 23952                           ; BSR set to: 1
 23953                           ;doprnt.c: 851: exp++;
 23954  011CE4  4B97               	infsnz	__doprnt@exp& (0+255),f,b
 23955  011CE6  2B98               	incf	(__doprnt@exp+1)& (0+255),f,b
 23956  011CE8                     l1966:
 23957                           
 23958                           ; BSR set to: 1
 23959                           ;doprnt.c: 852: }
 23960                           ;doprnt.c: 1112: if(prec <= 12)
 23961                           
 23962                           ; BSR set to: 1
 23963                           
 23964                           ; BSR set to: 1
 23965                           
 23966                           ; BSR set to: 1
 23967  011CE8  BFAA               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 23968  011CEA  D006               	goto	u30740
 23969  011CEC  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 23970  011CEE  E121               	bnz	l21739
 23971  011CF0  0E0D               	movlw	13
 23972  011CF2  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 23973  011CF4  B0D8               	btfsc	status,0,c
 23974  011CF6  D01D               	goto	l1967
 23975  011CF8                     u30740:
 23976                           
 23977                           ; BSR set to: 1
 23978                           ;doprnt.c: 1113: fval += fround(prec);
 23979  011CF8  C19D  F129         	movff	__doprnt@fval,___fladd@b
 23980  011CFC  C19E  F12A         	movff	__doprnt@fval+1,___fladd@b+1
 23981  011D00  C19F  F12B         	movff	__doprnt@fval+2,___fladd@b+2
 23982  011D04  C1A0  F12C         	movff	__doprnt@fval+3,___fladd@b+3
 23983  011D08  51A9               	movf	__doprnt@prec& (0+255),w,b
 23984  011D0A  ECD9  F0B6         	call	_fround
 23985  011D0E  C16F  F12D         	movff	?_fround,___fladd@a
 23986  011D12  C170  F12E         	movff	?_fround+1,___fladd@a+1
 23987  011D16  C171  F12F         	movff	?_fround+2,___fladd@a+2
 23988  011D1A  C172  F130         	movff	?_fround+3,___fladd@a+3
 23989  011D1E  EC38  F0AF         	call	___fladd	;wreg free
 23990  011D22  C129  F19D         	movff	?___fladd,__doprnt@fval
 23991  011D26  C12A  F19E         	movff	?___fladd+1,__doprnt@fval+1
 23992  011D2A  C12B  F19F         	movff	?___fladd+2,__doprnt@fval+2
 23993  011D2E  C12C  F1A0         	movff	?___fladd+3,__doprnt@fval+3
 23994  011D32                     l1967:
 23995  011D32                     l21739:
 23996                           
 23997                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 23998  011D32  0101               	movlb	1	; () banked
 23999  011D34  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 24000  011D36  D006               	goto	u30750
 24001  011D38  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24002  011D3A  E122               	bnz	l21747
 24003  011D3C  0E0A               	movlw	10
 24004  011D3E  5D97               	subwf	__doprnt@exp& (0+255),w,b
 24005  011D40  B0D8               	btfsc	status,0,c
 24006  011D42  D01E               	goto	u30780
 24007  011D44                     u30750:
 24008                           
 24009                           ; BSR set to: 1
 24010  011D44  519D               	movf	__doprnt@fval& (0+255),w,b
 24011  011D46  119E               	iorwf	(__doprnt@fval+1)& (0+255),w,b
 24012  011D48  119F               	iorwf	(__doprnt@fval+2)& (0+255),w,b
 24013  011D4A  11A0               	iorwf	(__doprnt@fval+3)& (0+255),w,b
 24014  011D4C  B4D8               	btfsc	status,2,c
 24015  011D4E  D062               	goto	l1968
 24016                           
 24017                           ; BSR set to: 1
 24018  011D50  C19D  F178         	movff	__doprnt@fval,___fltol@f1
 24019  011D54  C19E  F179         	movff	__doprnt@fval+1,___fltol@f1+1
 24020  011D58  C19F  F17A         	movff	__doprnt@fval+2,___fltol@f1+2
 24021  011D5C  C1A0  F17B         	movff	__doprnt@fval+3,___fltol@f1+3
 24022  011D60  EC0F  F0C9         	call	___fltol	;wreg free
 24023  011D64  0101               	movlb	1	; () banked
 24024  011D66  5178               	movf	?___fltol& (0+255),w,b
 24025  011D68  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 24026  011D6A  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 24027  011D6C  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 24028  011D6E  B4D8               	btfsc	status,2,c
 24029                           
 24030                           ; BSR set to: 1
 24031  011D70  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 24032  011D72  D050               	goto	l1968
 24033  011D74  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24034  011D76  E104               	bnz	l21747
 24035  011D78  0E02               	movlw	2
 24036  011D7A  5D97               	subwf	__doprnt@exp& (0+255),w,b
 24037  011D7C  A0D8               	btfss	status,0,c
 24038  011D7E  D04A               	goto	l1968
 24039  011D80                     u30780:
 24040  011D80                     l21747:
 24041                           
 24042                           ; BSR set to: 1
 24043                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 24044  011D80  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 24045  011D84  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 24046  011D88  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 24047  011D8C  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 24048  011D90  0E5F               	movlw	95
 24049  011D92  6F1B               	movwf	___flge@ff2& (0+255),b
 24050  011D94  0E70               	movlw	112
 24051  011D96  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24052  011D98  0E89               	movlw	137
 24053  011D9A  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24054  011D9C  0E40               	movlw	64
 24055  011D9E  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24056  011DA0  EC61  F0C6         	call	___flge	;wreg free
 24057  011DA4  0101               	movlb	1	; () banked
 24058  011DA6  B0D8               	btfsc	status,0,c
 24059  011DA8  D002               	goto	l1971
 24060                           
 24061                           ; BSR set to: 1
 24062                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 24063  011DAA  0EF7               	movlw	247
 24064  011DAC  D001               	goto	L3
 24065  011DAE                     l1971:
 24066                           
 24067                           ; BSR set to: 1
 24068                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 24069                           
 24070                           ; BSR set to: 1
 24071  011DAE  0EF8               	movlw	248
 24072  011DB0                     L3:
 24073  011DB0  2797               	addwf	__doprnt@exp& (0+255),f,b
 24074  011DB2  0EFF               	movlw	255
 24075  011DB4  2398               	addwfc	(__doprnt@exp+1)& (0+255),f,b
 24076                           
 24077                           ; BSR set to: 1
 24078                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 24079                           
 24080                           ; BSR set to: 1
 24081  011DB6  5197               	movf	__doprnt@exp& (0+255),w,b
 24082  011DB8  ECA1  F0A5         	call	_scale
 24083  011DBC  C16F  F199         	movff	?_scale,__doprnt@tmpval
 24084  011DC0  C170  F19A         	movff	?_scale+1,__doprnt@tmpval+1
 24085  011DC4  C171  F19B         	movff	?_scale+2,__doprnt@tmpval+2
 24086  011DC8  C172  F19C         	movff	?_scale+3,__doprnt@tmpval+3
 24087  011DCC  C19D  F117         	movff	__doprnt@fval,__div_to_l_@f1
 24088  011DD0  C19E  F118         	movff	__doprnt@fval+1,__div_to_l_@f1+1
 24089  011DD4  C19F  F119         	movff	__doprnt@fval+2,__div_to_l_@f1+2
 24090  011DD8  C1A0  F11A         	movff	__doprnt@fval+3,__div_to_l_@f1+3
 24091  011DDC  C199  F11B         	movff	__doprnt@tmpval,__div_to_l_@f2
 24092  011DE0  C19A  F11C         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
 24093  011DE4  C19B  F11D         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
 24094  011DE8  C19C  F11E         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
 24095  011DEC  ECA6  F0C4         	call	__div_to_l_	;wreg free
 24096  011DF0  C117  F1A1         	movff	?__div_to_l_,__doprnt@val
 24097  011DF4  C118  F1A2         	movff	?__div_to_l_+1,__doprnt@val+1
 24098  011DF8  C119  F1A3         	movff	?__div_to_l_+2,__doprnt@val+2
 24099  011DFC  C11A  F1A4         	movff	?__div_to_l_+3,__doprnt@val+3
 24100                           
 24101                           ;doprnt.c: 1129: fval = 0.0;
 24102  011E00  0E00               	movlw	0
 24103  011E02  0101               	movlb	1	; () banked
 24104  011E04  6F9D               	movwf	__doprnt@fval& (0+255),b
 24105  011E06  0E00               	movlw	0
 24106  011E08  6F9E               	movwf	(__doprnt@fval+1)& (0+255),b
 24107  011E0A  0E00               	movlw	0
 24108  011E0C  6F9F               	movwf	(__doprnt@fval+2)& (0+255),b
 24109  011E0E  0E00               	movlw	0
 24110  011E10  6FA0               	movwf	(__doprnt@fval+3)& (0+255),b
 24111                           
 24112                           ;doprnt.c: 1130: } else {
 24113  011E12  D03C               	goto	l1977
 24114  011E14                     l1968:
 24115                           
 24116                           ; BSR set to: 1
 24117                           ;doprnt.c: 1131: val = (unsigned long)fval;
 24118                           
 24119                           ; BSR set to: 1
 24120  011E14  C19D  F178         	movff	__doprnt@fval,___fltol@f1
 24121  011E18  C19E  F179         	movff	__doprnt@fval+1,___fltol@f1+1
 24122  011E1C  C19F  F17A         	movff	__doprnt@fval+2,___fltol@f1+2
 24123  011E20  C1A0  F17B         	movff	__doprnt@fval+3,___fltol@f1+3
 24124  011E24  EC0F  F0C9         	call	___fltol	;wreg free
 24125  011E28  C178  F1A1         	movff	?___fltol,__doprnt@val
 24126  011E2C  C179  F1A2         	movff	?___fltol+1,__doprnt@val+1
 24127  011E30  C17A  F1A3         	movff	?___fltol+2,__doprnt@val+2
 24128  011E34  C17B  F1A4         	movff	?___fltol+3,__doprnt@val+3
 24129                           
 24130                           ;doprnt.c: 1132: fval -= (double)val;
 24131  011E38  C19D  F13D         	movff	__doprnt@fval,___flsub@b
 24132  011E3C  C19E  F13E         	movff	__doprnt@fval+1,___flsub@b+1
 24133  011E40  C19F  F13F         	movff	__doprnt@fval+2,___flsub@b+2
 24134  011E44  C1A0  F140         	movff	__doprnt@fval+3,___flsub@b+3
 24135  011E48  C1A1  F117         	movff	__doprnt@val,___xxtofl@val
 24136  011E4C  C1A2  F118         	movff	__doprnt@val+1,___xxtofl@val+1
 24137  011E50  C1A3  F119         	movff	__doprnt@val+2,___xxtofl@val+2
 24138  011E54  C1A4  F11A         	movff	__doprnt@val+3,___xxtofl@val+3
 24139  011E58  0E00               	movlw	0
 24140  011E5A  ECE7  F0C0         	call	___xxtofl
 24141  011E5E  C117  F141         	movff	?___xxtofl,___flsub@a
 24142  011E62  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 24143  011E66  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 24144  011E6A  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 24145  011E6E  EC4A  F0D3         	call	___flsub	;wreg free
 24146  011E72  C13D  F19D         	movff	?___flsub,__doprnt@fval
 24147  011E76  C13E  F19E         	movff	?___flsub+1,__doprnt@fval+1
 24148  011E7A  C13F  F19F         	movff	?___flsub+2,__doprnt@fval+2
 24149  011E7E  C140  F1A0         	movff	?___flsub+3,__doprnt@fval+3
 24150                           
 24151                           ;doprnt.c: 1133: exp = 0;
 24152  011E82  0E00               	movlw	0
 24153  011E84  0101               	movlb	1	; () banked
 24154  011E86  6F98               	movwf	(__doprnt@exp+1)& (0+255),b
 24155  011E88  0E00               	movlw	0
 24156  011E8A  6F97               	movwf	__doprnt@exp& (0+255),b
 24157  011E8C                     l1977:
 24158                           
 24159                           ; BSR set to: 1
 24160                           ;doprnt.c: 1134: }
 24161                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 24162                           
 24163                           ; BSR set to: 1
 24164  011E8C  0E01               	movlw	1
 24165  011E8E  6FAB               	movwf	__doprnt@c& (0+255),b
 24166  011E90                     l21767:
 24167                           
 24168                           ; BSR set to: 1
 24169  011E90  0E0A               	movlw	10
 24170  011E92  19AB               	xorwf	__doprnt@c& (0+255),w,b
 24171  011E94  B4D8               	btfsc	status,2,c
 24172  011E96  D01B               	goto	u30820
 24173                           
 24174                           ; BSR set to: 1
 24175                           ;doprnt.c: 1137: if(val < dpowers[c])
 24176                           
 24177                           ; BSR set to: 1
 24178                           
 24179                           ; BSR set to: 1
 24180  011E98  51AB               	movf	__doprnt@c& (0+255),w,b
 24181  011E9A  0D04               	mullw	4
 24182  011E9C  0EB5               	movlw	low _dpowers
 24183  011E9E  24F3               	addwf	prodl,w,c
 24184  011EA0  6EF6               	movwf	tblptrl,c
 24185  011EA2  0ECF               	movlw	high _dpowers
 24186  011EA4  20F4               	addwfc	prodh,w,c
 24187  011EA6  6EF7               	movwf	tblptrh,c
 24188  011EA8                     	if	1	;There are 3 active tblptr bytes
 24189  011EA8  6AF8               	clrf	tblptru,c
 24190  011EAA  0E00               	movlw	low (__mediumconst shr (0+16))
 24191  011EAC  22F8               	addwfc	tblptru,f,c
 24192  011EAE                     	endif
 24193  011EAE  0009               	tblrd		*+
 24194  011EB0  50F5               	movf	tablat,w,c
 24195  011EB2  5DA1               	subwf	__doprnt@val& (0+255),w,b
 24196  011EB4  0009               	tblrd		*+
 24197  011EB6  50F5               	movf	tablat,w,c
 24198  011EB8  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 24199  011EBA  0009               	tblrd		*+
 24200  011EBC  50F5               	movf	tablat,w,c
 24201  011EBE  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 24202  011EC0  0009               	tblrd		*+
 24203  011EC2  50F5               	movf	tablat,w,c
 24204  011EC4  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 24205  011EC6  A0D8               	btfss	status,0,c
 24206  011EC8  D002               	goto	u30820
 24207                           
 24208                           ; BSR set to: 1
 24209                           
 24210                           ; BSR set to: 1
 24211                           
 24212                           ; BSR set to: 1
 24213                           ;doprnt.c: 1138: break;
 24214  011ECA  2BAB               	incf	__doprnt@c& (0+255),f,b
 24215  011ECC  D7E1               	goto	l21767
 24216  011ECE                     u30820:
 24217                           
 24218                           ; BSR set to: 1
 24219                           ;doprnt.c: 1142: width -= prec + c + exp;
 24220                           
 24221                           ; BSR set to: 1
 24222  011ECE  C1AB  F188         	movff	__doprnt@c,??__doprnt
 24223  011ED2  6B89               	clrf	(??__doprnt+1)& (0+255),b
 24224  011ED4  BF88               	btfsc	??__doprnt& (0+255),7,b
 24225  011ED6  0789               	decf	(??__doprnt+1)& (0+255),f,b
 24226  011ED8  51A9               	movf	__doprnt@prec& (0+255),w,b
 24227  011EDA  2788               	addwf	??__doprnt& (0+255),f,b
 24228  011EDC  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 24229  011EDE  2389               	addwfc	(??__doprnt+1)& (0+255),f,b
 24230  011EE0  5197               	movf	__doprnt@exp& (0+255),w,b
 24231  011EE2  2788               	addwf	??__doprnt& (0+255),f,b
 24232  011EE4  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24233  011EE6  2389               	addwfc	(??__doprnt+1)& (0+255),f,b
 24234  011EE8  5188               	movf	??__doprnt& (0+255),w,b
 24235  011EEA  5FA5               	subwf	__doprnt@width& (0+255),f,b
 24236  011EEC  5189               	movf	(??__doprnt+1)& (0+255),w,b
 24237  011EEE  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 24238                           
 24239                           ;doprnt.c: 1143: if(
 24240                           ;doprnt.c: 1147: prec)
 24241  011EF0  51A9               	movf	__doprnt@prec& (0+255),w,b
 24242  011EF2  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24243  011EF4  B4D8               	btfsc	status,2,c
 24244  011EF6  D003               	goto	l1981
 24245                           
 24246                           ; BSR set to: 1
 24247                           ;doprnt.c: 1148: width--;
 24248  011EF8  07A5               	decf	__doprnt@width& (0+255),f,b
 24249  011EFA  A0D8               	btfss	status,0,c
 24250  011EFC  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24251  011EFE                     l1981:
 24252                           
 24253                           ; BSR set to: 1
 24254                           ;doprnt.c: 1149: if(flag & 0x03)
 24255                           
 24256                           ; BSR set to: 1
 24257  011EFE  0E03               	movlw	3
 24258  011F00  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24259  011F02  6F88               	movwf	??__doprnt& (0+255),b
 24260  011F04  0E00               	movlw	0
 24261  011F06  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24262  011F08  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24263  011F0A  5188               	movf	??__doprnt& (0+255),w,b
 24264  011F0C  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24265  011F0E  B4D8               	btfsc	status,2,c
 24266  011F10  D003               	goto	l1982
 24267                           
 24268                           ; BSR set to: 1
 24269                           ;doprnt.c: 1150: width--;
 24270  011F12  07A5               	decf	__doprnt@width& (0+255),f,b
 24271  011F14  A0D8               	btfss	status,0,c
 24272  011F16  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24273  011F18                     l1982:
 24274                           
 24275                           ; BSR set to: 1
 24276                           ;doprnt.c: 1153: if(flag & 0x04) {
 24277                           
 24278                           ; BSR set to: 1
 24279  011F18  A5A7               	btfss	__doprnt@flag& (0+255),2,b
 24280  011F1A  D0B6               	goto	l1993
 24281                           
 24282                           ; BSR set to: 1
 24283                           ;doprnt.c: 1157: if(flag & 0x03)
 24284  011F1C  0E03               	movlw	3
 24285  011F1E  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24286  011F20  6F88               	movwf	??__doprnt& (0+255),b
 24287  011F22  0E00               	movlw	0
 24288  011F24  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24289  011F26  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24290  011F28  5188               	movf	??__doprnt& (0+255),w,b
 24291  011F2A  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24292  011F2C  B4D8               	btfsc	status,2,c
 24293  011F2E  D06C               	goto	l1987
 24294                           
 24295                           ; BSR set to: 1
 24296                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 24297  011F30  EE20 F002          	lfsr	2,2
 24298  011F34  5182               	movf	__doprnt@pb& (0+255),w,b
 24299  011F36  26D9               	addwf	fsr2l,f,c
 24300  011F38  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24301  011F3A  22DA               	addwfc	fsr2h,f,c
 24302  011F3C  50DE               	movf	postinc2,w,c
 24303  011F3E  10DE               	iorwf	postinc2,w,c
 24304  011F40  10DE               	iorwf	postinc2,w,c
 24305  011F42  B4D8               	btfsc	status,2,c
 24306  011F44  D013               	goto	l1985
 24307                           
 24308                           ; BSR set to: 1
 24309  011F46  EE20 F002          	lfsr	2,2
 24310  011F4A  5182               	movf	__doprnt@pb& (0+255),w,b
 24311  011F4C  26D9               	addwf	fsr2l,f,c
 24312  011F4E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24313  011F50  22DA               	addwfc	fsr2h,f,c
 24314  011F52  D801               	call	u30888
 24315  011F54  D059               	goto	l1987
 24316  011F56                     u30888:
 24317  011F56  0005               	push	
 24318  011F58  6EFA               	movwf	pclath,c
 24319  011F5A  50DE               	movf	postinc2,w,c
 24320  011F5C  6EFD               	movwf	tosl,c
 24321  011F5E  50DE               	movf	postinc2,w,c
 24322  011F60  6EFE               	movwf	tosh,c
 24323  011F62  50DE               	movf	postinc2,w,c
 24324  011F64  6EFF               	movwf	tosu,c
 24325  011F66  50FA               	movf	pclath,w,c
 24326  011F68  0E2D               	movlw	45
 24327  011F6A  0012               	return		;indir
 24328  011F6C                     l1985:
 24329  011F6C  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24330  011F70  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24331  011F74  CFDE F188          	movff	postinc2,??__doprnt
 24332  011F78  CFDD F189          	movff	postdec2,??__doprnt+1
 24333  011F7C  C188  FFD9         	movff	??__doprnt,fsr2l
 24334  011F80  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24335  011F84  0E2D               	movlw	45
 24336  011F86  6EDF               	movwf	indf2,c
 24337  011F88  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24338  011F8C  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24339  011F90  2ADE               	incf	postinc2,f,c
 24340  011F92  0E00               	movlw	0
 24341  011F94  22DD               	addwfc	postdec2,f,c
 24342                           
 24343                           ;doprnt.c: 1168: while(width > 0) {
 24344  011F96  D038               	goto	l1987
 24345  011F98                     l21799:
 24346                           
 24347                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 24348  011F98  0101               	movlb	1	; () banked
 24349  011F9A  EE20 F002          	lfsr	2,2
 24350  011F9E  5182               	movf	__doprnt@pb& (0+255),w,b
 24351  011FA0  26D9               	addwf	fsr2l,f,c
 24352  011FA2  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24353  011FA4  22DA               	addwfc	fsr2h,f,c
 24354  011FA6  50DE               	movf	postinc2,w,c
 24355  011FA8  10DE               	iorwf	postinc2,w,c
 24356  011FAA  10DE               	iorwf	postinc2,w,c
 24357  011FAC  B4D8               	btfsc	status,2,c
 24358  011FAE  D013               	goto	l1989
 24359                           
 24360                           ; BSR set to: 1
 24361  011FB0  EE20 F002          	lfsr	2,2
 24362  011FB4  5182               	movf	__doprnt@pb& (0+255),w,b
 24363  011FB6  26D9               	addwf	fsr2l,f,c
 24364  011FB8  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24365  011FBA  22DA               	addwfc	fsr2h,f,c
 24366  011FBC  D801               	call	u30908
 24367  011FBE  D020               	goto	l1990
 24368  011FC0                     u30908:
 24369  011FC0  0005               	push	
 24370  011FC2  6EFA               	movwf	pclath,c
 24371  011FC4  50DE               	movf	postinc2,w,c
 24372  011FC6  6EFD               	movwf	tosl,c
 24373  011FC8  50DE               	movf	postinc2,w,c
 24374  011FCA  6EFE               	movwf	tosh,c
 24375  011FCC  50DE               	movf	postinc2,w,c
 24376  011FCE  6EFF               	movwf	tosu,c
 24377  011FD0  50FA               	movf	pclath,w,c
 24378  011FD2  0E30               	movlw	48
 24379  011FD4  0012               	return		;indir
 24380  011FD6                     l1989:
 24381  011FD6  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24382  011FDA  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24383  011FDE  CFDE F188          	movff	postinc2,??__doprnt
 24384  011FE2  CFDD F189          	movff	postdec2,??__doprnt+1
 24385  011FE6  C188  FFD9         	movff	??__doprnt,fsr2l
 24386  011FEA  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24387  011FEE  0E30               	movlw	48
 24388  011FF0  6EDF               	movwf	indf2,c
 24389  011FF2  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24390  011FF6  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24391  011FFA  2ADE               	incf	postinc2,f,c
 24392  011FFC  0E00               	movlw	0
 24393  011FFE  22DD               	addwfc	postdec2,f,c
 24394  012000                     l1990:
 24395                           
 24396                           ;doprnt.c: 1170: width--;
 24397  012000  0101               	movlb	1	; () banked
 24398  012002  07A5               	decf	__doprnt@width& (0+255),f,b
 24399  012004  A0D8               	btfss	status,0,c
 24400  012006  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24401  012008                     l1987:
 24402                           
 24403                           ; BSR set to: 1
 24404  012008  0101               	movlb	1	; () banked
 24405  01200A  BFA6               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24406  01200C  D0F6               	goto	l2004
 24407  01200E  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 24408  012010  E1C3               	bnz	l21799
 24409  012012  05A5               	decf	__doprnt@width& (0+255),w,b
 24410  012014  A0D8               	btfss	status,0,c
 24411  012016  D0F1               	goto	l2004
 24412  012018  D7BF               	goto	l1988
 24413  01201A                     l21811:
 24414                           
 24415                           ; BSR set to: 1
 24416                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 24417  01201A  EE20 F002          	lfsr	2,2
 24418  01201E  5182               	movf	__doprnt@pb& (0+255),w,b
 24419  012020  26D9               	addwf	fsr2l,f,c
 24420  012022  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24421  012024  22DA               	addwfc	fsr2h,f,c
 24422  012026  50DE               	movf	postinc2,w,c
 24423  012028  10DE               	iorwf	postinc2,w,c
 24424  01202A  10DE               	iorwf	postinc2,w,c
 24425  01202C  B4D8               	btfsc	status,2,c
 24426  01202E  D013               	goto	l1995
 24427                           
 24428                           ; BSR set to: 1
 24429  012030  EE20 F002          	lfsr	2,2
 24430  012034  5182               	movf	__doprnt@pb& (0+255),w,b
 24431  012036  26D9               	addwf	fsr2l,f,c
 24432  012038  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24433  01203A  22DA               	addwfc	fsr2h,f,c
 24434  01203C  D801               	call	u30938
 24435  01203E  D020               	goto	l1996
 24436  012040                     u30938:
 24437  012040  0005               	push	
 24438  012042  6EFA               	movwf	pclath,c
 24439  012044  50DE               	movf	postinc2,w,c
 24440  012046  6EFD               	movwf	tosl,c
 24441  012048  50DE               	movf	postinc2,w,c
 24442  01204A  6EFE               	movwf	tosh,c
 24443  01204C  50DE               	movf	postinc2,w,c
 24444  01204E  6EFF               	movwf	tosu,c
 24445  012050  50FA               	movf	pclath,w,c
 24446  012052  0E20               	movlw	32
 24447  012054  0012               	return		;indir
 24448  012056                     l1995:
 24449  012056  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24450  01205A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24451  01205E  CFDE F188          	movff	postinc2,??__doprnt
 24452  012062  CFDD F189          	movff	postdec2,??__doprnt+1
 24453  012066  C188  FFD9         	movff	??__doprnt,fsr2l
 24454  01206A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24455  01206E  0E20               	movlw	32
 24456  012070  6EDF               	movwf	indf2,c
 24457  012072  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24458  012076  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24459  01207A  2ADE               	incf	postinc2,f,c
 24460  01207C  0E00               	movlw	0
 24461  01207E  22DD               	addwfc	postdec2,f,c
 24462  012080                     l1996:
 24463                           
 24464                           ;doprnt.c: 1182: width--;
 24465  012080  0101               	movlb	1	; () banked
 24466  012082  07A5               	decf	__doprnt@width& (0+255),f,b
 24467  012084  A0D8               	btfss	status,0,c
 24468  012086  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24469  012088                     l1993:
 24470                           
 24471                           ; BSR set to: 1
 24472                           
 24473                           ; BSR set to: 1
 24474  012088  BFA6               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24475  01208A  D005               	goto	u30940
 24476  01208C  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 24477  01208E  E1C5               	bnz	l21811
 24478  012090  05A5               	decf	__doprnt@width& (0+255),w,b
 24479  012092  B0D8               	btfsc	status,0,c
 24480  012094  D7C2               	goto	l1994
 24481  012096                     u30940:
 24482                           
 24483                           ; BSR set to: 1
 24484                           ;doprnt.c: 1183: }
 24485                           ;doprnt.c: 1188: if(flag & 0x03)
 24486                           
 24487                           ; BSR set to: 1
 24488  012096  0E03               	movlw	3
 24489  012098  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24490  01209A  6F88               	movwf	??__doprnt& (0+255),b
 24491  01209C  0E00               	movlw	0
 24492  01209E  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24493  0120A0  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24494  0120A2  5188               	movf	??__doprnt& (0+255),w,b
 24495  0120A4  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24496  0120A6  B4D8               	btfsc	status,2,c
 24497  0120A8  D0A8               	goto	l2004
 24498                           
 24499                           ; BSR set to: 1
 24500                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 24501  0120AA  EE20 F002          	lfsr	2,2
 24502  0120AE  5182               	movf	__doprnt@pb& (0+255),w,b
 24503  0120B0  26D9               	addwf	fsr2l,f,c
 24504  0120B2  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24505  0120B4  22DA               	addwfc	fsr2h,f,c
 24506  0120B6  50DE               	movf	postinc2,w,c
 24507  0120B8  10DE               	iorwf	postinc2,w,c
 24508  0120BA  10DE               	iorwf	postinc2,w,c
 24509  0120BC  B4D8               	btfsc	status,2,c
 24510  0120BE  D013               	goto	l1999
 24511                           
 24512                           ; BSR set to: 1
 24513  0120C0  EE20 F002          	lfsr	2,2
 24514  0120C4  5182               	movf	__doprnt@pb& (0+255),w,b
 24515  0120C6  26D9               	addwf	fsr2l,f,c
 24516  0120C8  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24517  0120CA  22DA               	addwfc	fsr2h,f,c
 24518  0120CC  D801               	call	u30978
 24519  0120CE  D095               	goto	l2004
 24520  0120D0                     u30978:
 24521  0120D0  0005               	push	
 24522  0120D2  6EFA               	movwf	pclath,c
 24523  0120D4  50DE               	movf	postinc2,w,c
 24524  0120D6  6EFD               	movwf	tosl,c
 24525  0120D8  50DE               	movf	postinc2,w,c
 24526  0120DA  6EFE               	movwf	tosh,c
 24527  0120DC  50DE               	movf	postinc2,w,c
 24528  0120DE  6EFF               	movwf	tosu,c
 24529  0120E0  50FA               	movf	pclath,w,c
 24530  0120E2  0E2D               	movlw	45
 24531  0120E4  0012               	return		;indir
 24532  0120E6                     l1999:
 24533  0120E6  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24534  0120EA  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24535  0120EE  CFDE F188          	movff	postinc2,??__doprnt
 24536  0120F2  CFDD F189          	movff	postdec2,??__doprnt+1
 24537  0120F6  C188  FFD9         	movff	??__doprnt,fsr2l
 24538  0120FA  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24539  0120FE  0E2D               	movlw	45
 24540  012100  D074               	goto	L4
 24541  012102                     
 24542                           ;doprnt.c: 1200: {
 24543                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 24544  012102  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 24545  012106  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 24546  01210A  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 24547  01210E  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 24548  012112  0101               	movlb	1	; () banked
 24549  012114  51AB               	movf	__doprnt@c& (0+255),w,b
 24550  012116  0D04               	mullw	4
 24551  012118  0EB5               	movlw	low _dpowers
 24552  01211A  24F3               	addwf	prodl,w,c
 24553  01211C  6EF6               	movwf	tblptrl,c
 24554  01211E  0ECF               	movlw	high _dpowers
 24555  012120  20F4               	addwfc	prodh,w,c
 24556  012122  6EF7               	movwf	tblptrh,c
 24557  012124                     	if	1	;There are 3 active tblptr bytes
 24558  012124  6AF8               	clrf	tblptru,c
 24559  012126  0E00               	movlw	low (__mediumconst shr (0+16))
 24560  012128  22F8               	addwfc	tblptru,f,c
 24561  01212A                     	endif
 24562  01212A  0009               	tblrd		*+
 24563  01212C  CFF5 F11B          	movff	tablat,___lldiv@divisor
 24564  012130  0009               	tblrd		*+
 24565  012132  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 24566  012136  0009               	tblrd		*+
 24567  012138  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 24568  01213C  000A               	tblrd		*-
 24569  01213E  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 24570  012142  EC8E  F0CD         	call	___lldiv
 24571  012146  C117  F199         	movff	?___lldiv,__doprnt@tmpval
 24572  01214A  C118  F19A         	movff	?___lldiv+1,__doprnt@tmpval+1
 24573  01214E  C119  F19B         	movff	?___lldiv+2,__doprnt@tmpval+2
 24574  012152  C11A  F19C         	movff	?___lldiv+3,__doprnt@tmpval+3
 24575                           
 24576                           ;doprnt.c: 1202: tmpval.vd %= 10;
 24577  012156  C199  F124         	movff	__doprnt@tmpval,___llmod@dividend
 24578  01215A  C19A  F125         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 24579  01215E  C19B  F126         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 24580  012162  C19C  F127         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 24581  012166  0E0A               	movlw	10
 24582  012168  0101               	movlb	1	; () banked
 24583  01216A  6F28               	movwf	___llmod@divisor& (0+255),b
 24584  01216C  0E00               	movlw	0
 24585  01216E  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 24586  012170  0E00               	movlw	0
 24587  012172  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 24588  012174  0E00               	movlw	0
 24589  012176  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 24590  012178  ECEB  F0CF         	call	___llmod	;wreg free
 24591  01217C  C124  F199         	movff	?___llmod,__doprnt@tmpval
 24592  012180  C125  F19A         	movff	?___llmod+1,__doprnt@tmpval+1
 24593  012184  C126  F19B         	movff	?___llmod+2,__doprnt@tmpval+2
 24594  012188  C127  F19C         	movff	?___llmod+3,__doprnt@tmpval+3
 24595                           
 24596                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 24597  01218C  0101               	movlb	1	; () banked
 24598  01218E  EE20 F002          	lfsr	2,2
 24599  012192  5182               	movf	__doprnt@pb& (0+255),w,b
 24600  012194  26D9               	addwf	fsr2l,f,c
 24601  012196  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24602  012198  22DA               	addwfc	fsr2h,f,c
 24603  01219A  50DE               	movf	postinc2,w,c
 24604  01219C  10DE               	iorwf	postinc2,w,c
 24605  01219E  10DE               	iorwf	postinc2,w,c
 24606  0121A0  B4D8               	btfsc	status,2,c
 24607  0121A2  D014               	goto	l2003
 24608                           
 24609                           ; BSR set to: 1
 24610  0121A4  EE20 F002          	lfsr	2,2
 24611  0121A8  5182               	movf	__doprnt@pb& (0+255),w,b
 24612  0121AA  26D9               	addwf	fsr2l,f,c
 24613  0121AC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24614  0121AE  22DA               	addwfc	fsr2h,f,c
 24615  0121B0  D801               	call	u30998
 24616  0121B2  D023               	goto	l2004
 24617  0121B4                     u30998:
 24618  0121B4  0005               	push	
 24619  0121B6  6EFA               	movwf	pclath,c
 24620  0121B8  50DE               	movf	postinc2,w,c
 24621  0121BA  6EFD               	movwf	tosl,c
 24622  0121BC  50DE               	movf	postinc2,w,c
 24623  0121BE  6EFE               	movwf	tosh,c
 24624  0121C0  50DE               	movf	postinc2,w,c
 24625  0121C2  6EFF               	movwf	tosu,c
 24626  0121C4  50FA               	movf	pclath,w,c
 24627  0121C6  5199               	movf	__doprnt@tmpval& (0+255),w,b
 24628  0121C8  0F30               	addlw	48
 24629  0121CA  0012               	return		;indir
 24630  0121CC                     l2003:
 24631  0121CC  0101               	movlb	1	; () banked
 24632  0121CE  5199               	movf	__doprnt@tmpval& (0+255),w,b
 24633  0121D0  0F30               	addlw	48
 24634  0121D2  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24635  0121D6  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24636  0121DA  CFDE F188          	movff	postinc2,??__doprnt
 24637  0121DE  CFDD F189          	movff	postdec2,??__doprnt+1
 24638  0121E2  C188  FFD9         	movff	??__doprnt,fsr2l
 24639  0121E6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24640  0121EA                     L4:
 24641  0121EA  6EDF               	movwf	indf2,c
 24642  0121EC  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24643  0121F0  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24644  0121F4  2ADE               	incf	postinc2,f,c
 24645  0121F6  0E00               	movlw	0
 24646  0121F8  22DD               	addwfc	postdec2,f,c
 24647  0121FA                     l2004:
 24648                           
 24649                           ; BSR set to: 1
 24650                           
 24651                           ; BSR set to: 1
 24652  0121FA  0101               	movlb	1	; () banked
 24653  0121FC  07AB               	decf	__doprnt@c& (0+255),f,b
 24654  0121FE  29AB               	incf	__doprnt@c& (0+255),w,b
 24655  012200  B4D8               	btfsc	status,2,c
 24656  012202  D038               	goto	l2006
 24657  012204  D77E               	goto	l2002
 24658  012206                     l21845:
 24659                           
 24660                           ; BSR set to: 1
 24661                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 24662  012206  EE20 F002          	lfsr	2,2
 24663  01220A  5182               	movf	__doprnt@pb& (0+255),w,b
 24664  01220C  26D9               	addwf	fsr2l,f,c
 24665  01220E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24666  012210  22DA               	addwfc	fsr2h,f,c
 24667  012212  50DE               	movf	postinc2,w,c
 24668  012214  10DE               	iorwf	postinc2,w,c
 24669  012216  10DE               	iorwf	postinc2,w,c
 24670  012218  B4D8               	btfsc	status,2,c
 24671  01221A  D013               	goto	l2008
 24672                           
 24673                           ; BSR set to: 1
 24674  01221C  EE20 F002          	lfsr	2,2
 24675  012220  5182               	movf	__doprnt@pb& (0+255),w,b
 24676  012222  26D9               	addwf	fsr2l,f,c
 24677  012224  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24678  012226  22DA               	addwfc	fsr2h,f,c
 24679  012228  D801               	call	u31028
 24680  01222A  D020               	goto	l2009
 24681  01222C                     u31028:
 24682  01222C  0005               	push	
 24683  01222E  6EFA               	movwf	pclath,c
 24684  012230  50DE               	movf	postinc2,w,c
 24685  012232  6EFD               	movwf	tosl,c
 24686  012234  50DE               	movf	postinc2,w,c
 24687  012236  6EFE               	movwf	tosh,c
 24688  012238  50DE               	movf	postinc2,w,c
 24689  01223A  6EFF               	movwf	tosu,c
 24690  01223C  50FA               	movf	pclath,w,c
 24691  01223E  0E30               	movlw	48
 24692  012240  0012               	return		;indir
 24693  012242                     l2008:
 24694  012242  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24695  012246  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24696  01224A  CFDE F188          	movff	postinc2,??__doprnt
 24697  01224E  CFDD F189          	movff	postdec2,??__doprnt+1
 24698  012252  C188  FFD9         	movff	??__doprnt,fsr2l
 24699  012256  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24700  01225A  0E30               	movlw	48
 24701  01225C  6EDF               	movwf	indf2,c
 24702  01225E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24703  012262  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24704  012266  2ADE               	incf	postinc2,f,c
 24705  012268  0E00               	movlw	0
 24706  01226A  22DD               	addwfc	postdec2,f,c
 24707  01226C                     l2009:
 24708                           
 24709                           ;doprnt.c: 1209: exp--;
 24710  01226C  0101               	movlb	1	; () banked
 24711  01226E  0797               	decf	__doprnt@exp& (0+255),f,b
 24712  012270  A0D8               	btfss	status,0,c
 24713  012272  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 24714  012274                     l2006:
 24715                           
 24716                           ; BSR set to: 1
 24717                           
 24718                           ; BSR set to: 1
 24719  012274  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 24720  012276  D005               	goto	u31030
 24721  012278  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24722  01227A  E1C5               	bnz	l21845
 24723  01227C  0597               	decf	__doprnt@exp& (0+255),w,b
 24724  01227E  B0D8               	btfsc	status,0,c
 24725  012280  D7C2               	goto	l2007
 24726  012282                     u31030:
 24727                           
 24728                           ; BSR set to: 1
 24729                           ;doprnt.c: 1210: }
 24730                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 24731                           
 24732                           ; BSR set to: 1
 24733  012282  BFAA               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 24734  012284  D009               	goto	l2011
 24735  012286  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 24736  012288  E104               	bnz	u31040
 24737  01228A  0E09               	movlw	9
 24738  01228C  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 24739  01228E  A0D8               	btfss	status,0,c
 24740  012290  D003               	goto	l2011
 24741  012292                     u31040:
 24742                           
 24743                           ; BSR set to: 1
 24744                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 24745  012292  0E08               	movlw	8
 24746  012294  6FAB               	movwf	__doprnt@c& (0+255),b
 24747  012296  D002               	goto	l2012
 24748  012298                     l2011:
 24749                           
 24750                           ; BSR set to: 1
 24751                           ;doprnt.c: 1213: else
 24752                           ;doprnt.c: 1214: c = prec;
 24753  012298  C1A9  F1AB         	movff	__doprnt@prec,__doprnt@c
 24754  01229C                     l2012:
 24755                           
 24756                           ; BSR set to: 1
 24757                           ;doprnt.c: 1215: prec -= c;
 24758                           
 24759                           ; BSR set to: 1
 24760  01229C  51AB               	movf	__doprnt@c& (0+255),w,b
 24761  01229E  5FA9               	subwf	__doprnt@prec& (0+255),f,b
 24762  0122A0  0E00               	movlw	0
 24763  0122A2  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 24764  0122A4  0EFF               	movlw	255
 24765  0122A6  5BAA               	subwfb	(__doprnt@prec+1)& (0+255),f,b
 24766                           
 24767                           ; BSR set to: 1
 24768                           ;doprnt.c: 1219: if(c)
 24769  0122A8  51AB               	movf	__doprnt@c& (0+255),w,b
 24770  0122AA  B4D8               	btfsc	status,2,c
 24771  0122AC  D033               	goto	l2015
 24772                           
 24773                           ; BSR set to: 1
 24774                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 24775  0122AE  EE20 F002          	lfsr	2,2
 24776  0122B2  5182               	movf	__doprnt@pb& (0+255),w,b
 24777  0122B4  26D9               	addwf	fsr2l,f,c
 24778  0122B6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24779  0122B8  22DA               	addwfc	fsr2h,f,c
 24780  0122BA  50DE               	movf	postinc2,w,c
 24781  0122BC  10DE               	iorwf	postinc2,w,c
 24782  0122BE  10DE               	iorwf	postinc2,w,c
 24783  0122C0  B4D8               	btfsc	status,2,c
 24784  0122C2  D013               	goto	l2014
 24785                           
 24786                           ; BSR set to: 1
 24787  0122C4  EE20 F002          	lfsr	2,2
 24788  0122C8  5182               	movf	__doprnt@pb& (0+255),w,b
 24789  0122CA  26D9               	addwf	fsr2l,f,c
 24790  0122CC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24791  0122CE  22DA               	addwfc	fsr2h,f,c
 24792  0122D0  D801               	call	u31078
 24793  0122D2  D020               	goto	l2015
 24794  0122D4                     u31078:
 24795  0122D4  0005               	push	
 24796  0122D6  6EFA               	movwf	pclath,c
 24797  0122D8  50DE               	movf	postinc2,w,c
 24798  0122DA  6EFD               	movwf	tosl,c
 24799  0122DC  50DE               	movf	postinc2,w,c
 24800  0122DE  6EFE               	movwf	tosh,c
 24801  0122E0  50DE               	movf	postinc2,w,c
 24802  0122E2  6EFF               	movwf	tosu,c
 24803  0122E4  50FA               	movf	pclath,w,c
 24804  0122E6  0E2E               	movlw	46
 24805  0122E8  0012               	return		;indir
 24806  0122EA                     l2014:
 24807  0122EA  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24808  0122EE  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24809  0122F2  CFDE F188          	movff	postinc2,??__doprnt
 24810  0122F6  CFDD F189          	movff	postdec2,??__doprnt+1
 24811  0122FA  C188  FFD9         	movff	??__doprnt,fsr2l
 24812  0122FE  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24813  012302  0E2E               	movlw	46
 24814  012304  6EDF               	movwf	indf2,c
 24815  012306  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24816  01230A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24817  01230E  2ADE               	incf	postinc2,f,c
 24818  012310  0E00               	movlw	0
 24819  012312  22DD               	addwfc	postdec2,f,c
 24820  012314                     l2015:
 24821                           
 24822                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 24823  012314  0101               	movlb	1	; () banked
 24824  012316  51AB               	movf	__doprnt@c& (0+255),w,b
 24825  012318  ECA1  F0A5         	call	_scale
 24826  01231C  C16F  F18E         	movff	?_scale,__doprnt$5109
 24827  012320  C170  F18F         	movff	?_scale+1,__doprnt$5109+1
 24828  012324  C171  F190         	movff	?_scale+2,__doprnt$5109+2
 24829  012328  C172  F191         	movff	?_scale+3,__doprnt$5109+3
 24830                           
 24831                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 24832  01232C  C19D  F15A         	movff	__doprnt@fval,___flmul@a
 24833  012330  C19E  F15B         	movff	__doprnt@fval+1,___flmul@a+1
 24834  012334  C19F  F15C         	movff	__doprnt@fval+2,___flmul@a+2
 24835  012338  C1A0  F15D         	movff	__doprnt@fval+3,___flmul@a+3
 24836  01233C  C18E  F156         	movff	__doprnt$5109,___flmul@b
 24837  012340  C18F  F157         	movff	__doprnt$5109+1,___flmul@b+1
 24838  012344  C190  F158         	movff	__doprnt$5109+2,___flmul@b+2
 24839  012348  C191  F159         	movff	__doprnt$5109+3,___flmul@b+3
 24840  01234C  ECE7  F0AB         	call	___flmul	;wreg free
 24841  012350  C156  F178         	movff	?___flmul,___fltol@f1
 24842  012354  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 24843  012358  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 24844  01235C  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 24845  012360  EC0F  F0C9         	call	___fltol	;wreg free
 24846  012364  C178  F1A1         	movff	?___fltol,__doprnt@val
 24847  012368  C179  F1A2         	movff	?___fltol+1,__doprnt@val+1
 24848  01236C  C17A  F1A3         	movff	?___fltol+2,__doprnt@val+2
 24849  012370  C17B  F1A4         	movff	?___fltol+3,__doprnt@val+3
 24850                           
 24851                           ;doprnt.c: 1228: while(c--) {
 24852  012374  D0A6               	goto	l2016
 24853  012376                     
 24854                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 24855  012376  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 24856  01237A  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 24857  01237E  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 24858  012382  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 24859  012386  0101               	movlb	1	; () banked
 24860  012388  51AB               	movf	__doprnt@c& (0+255),w,b
 24861  01238A  0D04               	mullw	4
 24862  01238C  0EB5               	movlw	low _dpowers
 24863  01238E  24F3               	addwf	prodl,w,c
 24864  012390  6EF6               	movwf	tblptrl,c
 24865  012392  0ECF               	movlw	high _dpowers
 24866  012394  20F4               	addwfc	prodh,w,c
 24867  012396  6EF7               	movwf	tblptrh,c
 24868  012398                     	if	1	;There are 3 active tblptr bytes
 24869  012398  6AF8               	clrf	tblptru,c
 24870  01239A  0E00               	movlw	low (__mediumconst shr (0+16))
 24871  01239C  22F8               	addwfc	tblptru,f,c
 24872  01239E                     	endif
 24873  01239E  0009               	tblrd		*+
 24874  0123A0  CFF5 F11B          	movff	tablat,___lldiv@divisor
 24875  0123A4  0009               	tblrd		*+
 24876  0123A6  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 24877  0123AA  0009               	tblrd		*+
 24878  0123AC  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 24879  0123B0  000A               	tblrd		*-
 24880  0123B2  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 24881  0123B6  EC8E  F0CD         	call	___lldiv	;wreg free
 24882  0123BA  C117  F199         	movff	?___lldiv,__doprnt@tmpval
 24883  0123BE  C118  F19A         	movff	?___lldiv+1,__doprnt@tmpval+1
 24884  0123C2  C119  F19B         	movff	?___lldiv+2,__doprnt@tmpval+2
 24885  0123C6  C11A  F19C         	movff	?___lldiv+3,__doprnt@tmpval+3
 24886                           
 24887                           ;doprnt.c: 1230: tmpval.vd %= 10;
 24888  0123CA  C199  F124         	movff	__doprnt@tmpval,___llmod@dividend
 24889  0123CE  C19A  F125         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 24890  0123D2  C19B  F126         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 24891  0123D6  C19C  F127         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 24892  0123DA  0E0A               	movlw	10
 24893  0123DC  0101               	movlb	1	; () banked
 24894  0123DE  6F28               	movwf	___llmod@divisor& (0+255),b
 24895  0123E0  0E00               	movlw	0
 24896  0123E2  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 24897  0123E4  0E00               	movlw	0
 24898  0123E6  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 24899  0123E8  0E00               	movlw	0
 24900  0123EA  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 24901  0123EC  ECEB  F0CF         	call	___llmod	;wreg free
 24902  0123F0  C124  F199         	movff	?___llmod,__doprnt@tmpval
 24903  0123F4  C125  F19A         	movff	?___llmod+1,__doprnt@tmpval+1
 24904  0123F8  C126  F19B         	movff	?___llmod+2,__doprnt@tmpval+2
 24905  0123FC  C127  F19C         	movff	?___llmod+3,__doprnt@tmpval+3
 24906                           
 24907                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 24908  012400  0101               	movlb	1	; () banked
 24909  012402  EE20 F002          	lfsr	2,2
 24910  012406  5182               	movf	__doprnt@pb& (0+255),w,b
 24911  012408  26D9               	addwf	fsr2l,f,c
 24912  01240A  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24913  01240C  22DA               	addwfc	fsr2h,f,c
 24914  01240E  50DE               	movf	postinc2,w,c
 24915  012410  10DE               	iorwf	postinc2,w,c
 24916  012412  10DE               	iorwf	postinc2,w,c
 24917  012414  B4D8               	btfsc	status,2,c
 24918  012416  D014               	goto	l2018
 24919                           
 24920                           ; BSR set to: 1
 24921  012418  EE20 F002          	lfsr	2,2
 24922  01241C  5182               	movf	__doprnt@pb& (0+255),w,b
 24923  01241E  26D9               	addwf	fsr2l,f,c
 24924  012420  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24925  012422  22DA               	addwfc	fsr2h,f,c
 24926  012424  D801               	call	u31098
 24927  012426  D023               	goto	l2019
 24928  012428                     u31098:
 24929  012428  0005               	push	
 24930  01242A  6EFA               	movwf	pclath,c
 24931  01242C  50DE               	movf	postinc2,w,c
 24932  01242E  6EFD               	movwf	tosl,c
 24933  012430  50DE               	movf	postinc2,w,c
 24934  012432  6EFE               	movwf	tosh,c
 24935  012434  50DE               	movf	postinc2,w,c
 24936  012436  6EFF               	movwf	tosu,c
 24937  012438  50FA               	movf	pclath,w,c
 24938  01243A  5199               	movf	__doprnt@tmpval& (0+255),w,b
 24939  01243C  0F30               	addlw	48
 24940  01243E  0012               	return		;indir
 24941  012440                     l2018:
 24942  012440  0101               	movlb	1	; () banked
 24943  012442  5199               	movf	__doprnt@tmpval& (0+255),w,b
 24944  012444  0F30               	addlw	48
 24945  012446  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24946  01244A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24947  01244E  CFDE F188          	movff	postinc2,??__doprnt
 24948  012452  CFDD F189          	movff	postdec2,??__doprnt+1
 24949  012456  C188  FFD9         	movff	??__doprnt,fsr2l
 24950  01245A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24951  01245E  6EDF               	movwf	indf2,c
 24952  012460  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24953  012464  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24954  012468  2ADE               	incf	postinc2,f,c
 24955  01246A  0E00               	movlw	0
 24956  01246C  22DD               	addwfc	postdec2,f,c
 24957  01246E                     l2019:
 24958                           
 24959                           ;doprnt.c: 1232: val %= dpowers[c];
 24960                           
 24961                           ; BSR set to: 1
 24962  01246E  C1A1  F124         	movff	__doprnt@val,___llmod@dividend
 24963  012472  C1A2  F125         	movff	__doprnt@val+1,___llmod@dividend+1
 24964  012476  C1A3  F126         	movff	__doprnt@val+2,___llmod@dividend+2
 24965  01247A  C1A4  F127         	movff	__doprnt@val+3,___llmod@dividend+3
 24966  01247E  0101               	movlb	1	; () banked
 24967  012480  51AB               	movf	__doprnt@c& (0+255),w,b
 24968  012482  0D04               	mullw	4
 24969  012484  0EB5               	movlw	low _dpowers
 24970  012486  24F3               	addwf	prodl,w,c
 24971  012488  6EF6               	movwf	tblptrl,c
 24972  01248A  0ECF               	movlw	high _dpowers
 24973  01248C  20F4               	addwfc	prodh,w,c
 24974  01248E  6EF7               	movwf	tblptrh,c
 24975  012490                     	if	1	;There are 3 active tblptr bytes
 24976  012490  6AF8               	clrf	tblptru,c
 24977  012492  0E00               	movlw	low (__mediumconst shr (0+16))
 24978  012494  22F8               	addwfc	tblptru,f,c
 24979  012496                     	endif
 24980  012496  0009               	tblrd		*+
 24981  012498  CFF5 F128          	movff	tablat,___llmod@divisor
 24982  01249C  0009               	tblrd		*+
 24983  01249E  CFF5 F129          	movff	tablat,___llmod@divisor+1
 24984  0124A2  0009               	tblrd		*+
 24985  0124A4  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 24986  0124A8  000A               	tblrd		*-
 24987  0124AA  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 24988  0124AE  ECEB  F0CF         	call	___llmod
 24989  0124B2  C124  F1A1         	movff	?___llmod,__doprnt@val
 24990  0124B6  C125  F1A2         	movff	?___llmod+1,__doprnt@val+1
 24991  0124BA  C126  F1A3         	movff	?___llmod+2,__doprnt@val+2
 24992  0124BE  C127  F1A4         	movff	?___llmod+3,__doprnt@val+3
 24993  0124C2                     l2016:
 24994  0124C2  0101               	movlb	1	; () banked
 24995  0124C4  07AB               	decf	__doprnt@c& (0+255),f,b
 24996  0124C6  29AB               	incf	__doprnt@c& (0+255),w,b
 24997  0124C8  B4D8               	btfsc	status,2,c
 24998  0124CA  D038               	goto	l2021
 24999  0124CC  D754               	goto	l2017
 25000  0124CE                     
 25001                           ; BSR set to: 1
 25002                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 25003                           
 25004                           ; BSR set to: 1
 25005  0124CE  EE20 F002          	lfsr	2,2
 25006  0124D2  5182               	movf	__doprnt@pb& (0+255),w,b
 25007  0124D4  26D9               	addwf	fsr2l,f,c
 25008  0124D6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25009  0124D8  22DA               	addwfc	fsr2h,f,c
 25010  0124DA  50DE               	movf	postinc2,w,c
 25011  0124DC  10DE               	iorwf	postinc2,w,c
 25012  0124DE  10DE               	iorwf	postinc2,w,c
 25013  0124E0  B4D8               	btfsc	status,2,c
 25014  0124E2  D013               	goto	l2023
 25015                           
 25016                           ; BSR set to: 1
 25017  0124E4  EE20 F002          	lfsr	2,2
 25018  0124E8  5182               	movf	__doprnt@pb& (0+255),w,b
 25019  0124EA  26D9               	addwf	fsr2l,f,c
 25020  0124EC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25021  0124EE  22DA               	addwfc	fsr2h,f,c
 25022  0124F0  D801               	call	u31128
 25023  0124F2  D020               	goto	l2024
 25024  0124F4                     u31128:
 25025  0124F4  0005               	push	
 25026  0124F6  6EFA               	movwf	pclath,c
 25027  0124F8  50DE               	movf	postinc2,w,c
 25028  0124FA  6EFD               	movwf	tosl,c
 25029  0124FC  50DE               	movf	postinc2,w,c
 25030  0124FE  6EFE               	movwf	tosh,c
 25031  012500  50DE               	movf	postinc2,w,c
 25032  012502  6EFF               	movwf	tosu,c
 25033  012504  50FA               	movf	pclath,w,c
 25034  012506  0E30               	movlw	48
 25035  012508  0012               	return		;indir
 25036  01250A                     l2023:
 25037  01250A  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25038  01250E  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25039  012512  CFDE F188          	movff	postinc2,??__doprnt
 25040  012516  CFDD F189          	movff	postdec2,??__doprnt+1
 25041  01251A  C188  FFD9         	movff	??__doprnt,fsr2l
 25042  01251E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25043  012522  0E30               	movlw	48
 25044  012524  6EDF               	movwf	indf2,c
 25045  012526  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25046  01252A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25047  01252E  2ADE               	incf	postinc2,f,c
 25048  012530  0E00               	movlw	0
 25049  012532  22DD               	addwfc	postdec2,f,c
 25050  012534                     l2024:
 25051                           
 25052                           ;doprnt.c: 1237: prec--;
 25053  012534  0101               	movlb	1	; () banked
 25054  012536  07A9               	decf	__doprnt@prec& (0+255),f,b
 25055  012538  A0D8               	btfss	status,0,c
 25056  01253A  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 25057  01253C                     l2021:
 25058                           
 25059                           ; BSR set to: 1
 25060                           
 25061                           ; BSR set to: 1
 25062  01253C  51A9               	movf	__doprnt@prec& (0+255),w,b
 25063  01253E  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25064  012540  B4D8               	btfsc	status,2,c
 25065  012542  D2ED               	goto	u31500
 25066  012544  D7C4               	goto	l2022
 25067  012546                     l1959:
 25068                           
 25069                           ; BSR set to: 1
 25070                           ;doprnt.c: 1246: }
 25071                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 25072                           
 25073                           ; BSR set to: 1
 25074  012546  0EC0               	movlw	192
 25075  012548  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25076  01254A  6F88               	movwf	??__doprnt& (0+255),b
 25077  01254C  0E00               	movlw	0
 25078  01254E  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25079  012550  6F89               	movwf	(??__doprnt+1)& (0+255),b
 25080  012552  5188               	movf	??__doprnt& (0+255),w,b
 25081  012554  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 25082  012556  A4D8               	btfss	status,2,c
 25083  012558  D041               	goto	l2026
 25084                           
 25085                           ; BSR set to: 1
 25086                           ;doprnt.c: 1253: {
 25087                           ;doprnt.c: 1255: if(flag & 0x10)
 25088  01255A  A9A7               	btfss	__doprnt@flag& (0+255),4,b
 25089  01255C  D019               	goto	l2027
 25090                           
 25091                           ; BSR set to: 1
 25092                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 25093  01255E  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25094  012562  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25095  012566  CFDF F188          	movff	indf2,??__doprnt
 25096  01256A  0E04               	movlw	4
 25097  01256C  26DE               	addwf	postinc2,f,c
 25098  01256E  CFDF F189          	movff	indf2,??__doprnt+1
 25099  012572  0E00               	movlw	0
 25100  012574  22DD               	addwfc	postdec2,f,c
 25101  012576  C188  FFD9         	movff	??__doprnt,fsr2l
 25102  01257A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25103  01257E  CFDE F1A1          	movff	postinc2,__doprnt@val
 25104  012582  CFDE F1A2          	movff	postinc2,__doprnt@val+1
 25105  012586  CFDE F1A3          	movff	postinc2,__doprnt@val+2
 25106  01258A  CFDE F1A4          	movff	postinc2,__doprnt@val+3
 25107  01258E  D019               	goto	l2028
 25108  012590                     l2027:
 25109                           
 25110                           ; BSR set to: 1
 25111                           ;doprnt.c: 1257: else
 25112                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 25113                           
 25114                           ; BSR set to: 1
 25115  012590  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25116  012594  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25117  012598  CFDF F188          	movff	indf2,??__doprnt
 25118  01259C  0E02               	movlw	2
 25119  01259E  26DE               	addwf	postinc2,f,c
 25120  0125A0  CFDF F189          	movff	indf2,??__doprnt+1
 25121  0125A4  0E00               	movlw	0
 25122  0125A6  22DD               	addwfc	postdec2,f,c
 25123  0125A8  C188  FFD9         	movff	??__doprnt,fsr2l
 25124  0125AC  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25125  0125B0  CFDE F1A1          	movff	postinc2,__doprnt@val
 25126  0125B4  CFDD F1A2          	movff	postdec2,__doprnt@val+1
 25127  0125B8  0E00               	movlw	0
 25128  0125BA  BFA2               	btfsc	(__doprnt@val+1)& (0+255),7,b
 25129  0125BC  0EFF               	movlw	-1
 25130  0125BE  6FA3               	movwf	(__doprnt@val+2)& (0+255),b
 25131  0125C0  6FA4               	movwf	(__doprnt@val+3)& (0+255),b
 25132  0125C2                     l2028:
 25133                           
 25134                           ; BSR set to: 1
 25135                           ;doprnt.c: 1261: if((long)val < 0) {
 25136                           
 25137                           ; BSR set to: 1
 25138  0125C2  AFA4               	btfss	(__doprnt@val+3)& (0+255),7,b
 25139  0125C4  D040               	goto	l2032
 25140                           
 25141                           ; BSR set to: 1
 25142                           ;doprnt.c: 1262: flag |= 0x03;
 25143  0125C6  0E03               	movlw	3
 25144  0125C8  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 25145                           
 25146                           ; BSR set to: 1
 25147                           ;doprnt.c: 1263: val = -val;
 25148  0125CA  1FA4               	comf	(__doprnt@val+3)& (0+255),f,b
 25149  0125CC  1FA3               	comf	(__doprnt@val+2)& (0+255),f,b
 25150  0125CE  1FA2               	comf	(__doprnt@val+1)& (0+255),f,b
 25151  0125D0  6DA1               	negf	__doprnt@val& (0+255),b
 25152  0125D2  0E00               	movlw	0
 25153  0125D4  23A2               	addwfc	(__doprnt@val+1)& (0+255),f,b
 25154  0125D6  23A3               	addwfc	(__doprnt@val+2)& (0+255),f,b
 25155  0125D8  23A4               	addwfc	(__doprnt@val+3)& (0+255),f,b
 25156                           
 25157                           ; BSR set to: 1
 25158                           ;doprnt.c: 1264: }
 25159                           ;doprnt.c: 1266: }
 25160  0125DA  D035               	goto	l2032
 25161  0125DC                     l2026:
 25162                           
 25163                           ; BSR set to: 1
 25164                           ;doprnt.c: 1268: else
 25165                           ;doprnt.c: 1273: {
 25166                           ;doprnt.c: 1281: if(flag & 0x10)
 25167  0125DC  A9A7               	btfss	__doprnt@flag& (0+255),4,b
 25168  0125DE  D019               	goto	l2031
 25169                           
 25170                           ; BSR set to: 1
 25171                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 25172  0125E0  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25173  0125E4  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25174  0125E8  CFDF F188          	movff	indf2,??__doprnt
 25175  0125EC  0E04               	movlw	4
 25176  0125EE  26DE               	addwf	postinc2,f,c
 25177  0125F0  CFDF F189          	movff	indf2,??__doprnt+1
 25178  0125F4  0E00               	movlw	0
 25179  0125F6  22DD               	addwfc	postdec2,f,c
 25180  0125F8  C188  FFD9         	movff	??__doprnt,fsr2l
 25181  0125FC  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25182  012600  CFDE F1A1          	movff	postinc2,__doprnt@val
 25183  012604  CFDE F1A2          	movff	postinc2,__doprnt@val+1
 25184  012608  CFDE F1A3          	movff	postinc2,__doprnt@val+2
 25185  01260C  CFDE F1A4          	movff	postinc2,__doprnt@val+3
 25186  012610  D01A               	goto	l2032
 25187  012612                     l2031:
 25188                           
 25189                           ; BSR set to: 1
 25190                           ;doprnt.c: 1283: else
 25191                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 25192                           
 25193                           ; BSR set to: 1
 25194  012612  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25195  012616  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25196  01261A  CFDF F188          	movff	indf2,??__doprnt
 25197  01261E  0E02               	movlw	2
 25198  012620  26DE               	addwf	postinc2,f,c
 25199  012622  CFDF F189          	movff	indf2,??__doprnt+1
 25200  012626  0E00               	movlw	0
 25201  012628  22DD               	addwfc	postdec2,f,c
 25202  01262A  C188  FFD9         	movff	??__doprnt,fsr2l
 25203  01262E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25204  012632  CFDE F18A          	movff	postinc2,??__doprnt+2
 25205  012636  CFDD F18B          	movff	postdec2,??__doprnt+3
 25206  01263A  C18A  F1A1         	movff	??__doprnt+2,__doprnt@val
 25207  01263E  C18B  F1A2         	movff	??__doprnt+3,__doprnt@val+1
 25208  012642  6BA3               	clrf	(__doprnt@val+2)& (0+255),b
 25209  012644  6BA4               	clrf	(__doprnt@val+3)& (0+255),b
 25210  012646                     l2032:
 25211                           
 25212                           ; BSR set to: 1
 25213                           ;doprnt.c: 1287: }
 25214                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 25215                           
 25216                           ; BSR set to: 1
 25217                           
 25218                           ; BSR set to: 1
 25219  012646  51A9               	movf	__doprnt@prec& (0+255),w,b
 25220  012648  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25221  01264A  A4D8               	btfss	status,2,c
 25222  01264C  D04B               	goto	l2034
 25223                           
 25224                           ; BSR set to: 1
 25225  01264E  51A1               	movf	__doprnt@val& (0+255),w,b
 25226  012650  11A2               	iorwf	(__doprnt@val+1)& (0+255),w,b
 25227  012652  11A3               	iorwf	(__doprnt@val+2)& (0+255),w,b
 25228  012654  11A4               	iorwf	(__doprnt@val+3)& (0+255),w,b
 25229  012656  A4D8               	btfss	status,2,c
 25230  012658  D045               	goto	l2034
 25231                           
 25232                           ; BSR set to: 1
 25233                           ;doprnt.c: 1291: prec++;
 25234  01265A  4BA9               	infsnz	__doprnt@prec& (0+255),f,b
 25235  01265C  2BAA               	incf	(__doprnt@prec+1)& (0+255),f,b
 25236                           
 25237                           ; BSR set to: 1
 25238                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 25239  01265E  D042               	goto	l2034
 25240  012660                     
 25241                           ; BSR set to: 1
 25242                           ;doprnt.c: 1302: case 0xC0:
 25243                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 25244                           
 25245                           ; BSR set to: 1
 25246                           
 25247                           ; BSR set to: 1
 25248  012660  0E01               	movlw	1
 25249  012662  6FAB               	movwf	__doprnt@c& (0+255),b
 25250  012664                     l21929:
 25251                           
 25252                           ; BSR set to: 1
 25253  012664  0E0A               	movlw	10
 25254  012666  19AB               	xorwf	__doprnt@c& (0+255),w,b
 25255  012668  B4D8               	btfsc	status,2,c
 25256  01266A  D047               	goto	l2040
 25257                           
 25258                           ; BSR set to: 1
 25259                           ;doprnt.c: 1306: if(val < dpowers[c])
 25260                           
 25261                           ; BSR set to: 1
 25262                           
 25263                           ; BSR set to: 1
 25264  01266C  51AB               	movf	__doprnt@c& (0+255),w,b
 25265  01266E  0D04               	mullw	4
 25266  012670  0EB5               	movlw	low _dpowers
 25267  012672  24F3               	addwf	prodl,w,c
 25268  012674  6EF6               	movwf	tblptrl,c
 25269  012676  0ECF               	movlw	high _dpowers
 25270  012678  20F4               	addwfc	prodh,w,c
 25271  01267A  6EF7               	movwf	tblptrh,c
 25272  01267C                     	if	1	;There are 3 active tblptr bytes
 25273  01267C  6AF8               	clrf	tblptru,c
 25274  01267E  0E00               	movlw	low (__mediumconst shr (0+16))
 25275  012680  22F8               	addwfc	tblptru,f,c
 25276  012682                     	endif
 25277  012682  0009               	tblrd		*+
 25278  012684  50F5               	movf	tablat,w,c
 25279  012686  5DA1               	subwf	__doprnt@val& (0+255),w,b
 25280  012688  0009               	tblrd		*+
 25281  01268A  50F5               	movf	tablat,w,c
 25282  01268C  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25283  01268E  0009               	tblrd		*+
 25284  012690  50F5               	movf	tablat,w,c
 25285  012692  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25286  012694  0009               	tblrd		*+
 25287  012696  50F5               	movf	tablat,w,c
 25288  012698  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25289  01269A  A0D8               	btfss	status,0,c
 25290  01269C  D02E               	goto	l2040
 25291                           
 25292                           ; BSR set to: 1
 25293                           
 25294                           ; BSR set to: 1
 25295                           
 25296                           ; BSR set to: 1
 25297                           ;doprnt.c: 1307: break;
 25298  01269E  2BAB               	incf	__doprnt@c& (0+255),f,b
 25299  0126A0  D7E1               	goto	l21929
 25300  0126A2                     
 25301                           ; BSR set to: 1
 25302                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 25303                           
 25304                           ; BSR set to: 1
 25305  0126A2  0E01               	movlw	1
 25306  0126A4  6FAB               	movwf	__doprnt@c& (0+255),b
 25307  0126A6                     l21943:
 25308                           
 25309                           ; BSR set to: 1
 25310  0126A6  0E08               	movlw	8
 25311  0126A8  19AB               	xorwf	__doprnt@c& (0+255),w,b
 25312  0126AA  B4D8               	btfsc	status,2,c
 25313  0126AC  D026               	goto	l2040
 25314                           
 25315                           ; BSR set to: 1
 25316                           ;doprnt.c: 1317: if(val < hexpowers[c])
 25317                           
 25318                           ; BSR set to: 1
 25319                           
 25320                           ; BSR set to: 1
 25321  0126AE  51AB               	movf	__doprnt@c& (0+255),w,b
 25322  0126B0  0D04               	mullw	4
 25323  0126B2  0EDD               	movlw	low _hexpowers
 25324  0126B4  24F3               	addwf	prodl,w,c
 25325  0126B6  6EF6               	movwf	tblptrl,c
 25326  0126B8  0ECF               	movlw	high _hexpowers
 25327  0126BA  20F4               	addwfc	prodh,w,c
 25328  0126BC  6EF7               	movwf	tblptrh,c
 25329  0126BE                     	if	1	;There are 3 active tblptr bytes
 25330  0126BE  6AF8               	clrf	tblptru,c
 25331  0126C0  0E00               	movlw	low (__mediumconst shr (0+16))
 25332  0126C2  22F8               	addwfc	tblptru,f,c
 25333  0126C4                     	endif
 25334  0126C4  0009               	tblrd		*+
 25335  0126C6  50F5               	movf	tablat,w,c
 25336  0126C8  5DA1               	subwf	__doprnt@val& (0+255),w,b
 25337  0126CA  0009               	tblrd		*+
 25338  0126CC  50F5               	movf	tablat,w,c
 25339  0126CE  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25340  0126D0  0009               	tblrd		*+
 25341  0126D2  50F5               	movf	tablat,w,c
 25342  0126D4  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25343  0126D6  0009               	tblrd		*+
 25344  0126D8  50F5               	movf	tablat,w,c
 25345  0126DA  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25346  0126DC  A0D8               	btfss	status,0,c
 25347  0126DE  D00D               	goto	l2040
 25348                           
 25349                           ; BSR set to: 1
 25350                           
 25351                           ; BSR set to: 1
 25352                           
 25353                           ; BSR set to: 1
 25354                           ;doprnt.c: 1318: break;
 25355  0126E0  2BAB               	incf	__doprnt@c& (0+255),f,b
 25356  0126E2  D7E1               	goto	l21943
 25357  0126E4                     l2034:
 25358                           
 25359                           ; BSR set to: 1
 25360                           
 25361                           ; BSR set to: 1
 25362  0126E4  51A7               	movf	__doprnt@flag& (0+255),w,b
 25363  0126E6  0BC0               	andlw	192
 25364                           
 25365                           ; Switch size 1, requested type "space"
 25366                           ; Number of cases is 3, Range of values is 0 to 192
 25367                           ; switch strategies available:
 25368                           ; Name         Instructions Cycles
 25369                           ; simple_byte           10     6 (average)
 25370                           ;	Chosen strategy is simple_byte
 25371  0126E8  0A00               	xorlw	0	; case 0
 25372  0126EA  B4D8               	btfsc	status,2,c
 25373  0126EC  D7B9               	goto	l2035
 25374  0126EE  0A80               	xorlw	128	; case 128
 25375  0126F0  B4D8               	btfsc	status,2,c
 25376  0126F2  D7D7               	goto	l2041
 25377  0126F4  0A40               	xorlw	64	; case 192
 25378  0126F6  B4D8               	btfsc	status,2,c
 25379  0126F8  D7B3               	goto	l2035
 25380  0126FA                     l2040:
 25381                           
 25382                           ; BSR set to: 1
 25383                           ;doprnt.c: 1339: if(c < prec)
 25384                           
 25385                           ; BSR set to: 1
 25386  0126FA  0E80               	movlw	128
 25387  0126FC  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25388  0126FE  0E7F               	movlw	127
 25389  012700  6F88               	movwf	??__doprnt& (0+255),b
 25390  012702  51A9               	movf	__doprnt@prec& (0+255),w,b
 25391  012704  5DAB               	subwf	__doprnt@c& (0+255),w,b
 25392  012706  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25393  012708  0A80               	xorlw	128
 25394  01270A  5988               	subwfb	??__doprnt& (0+255),w,b
 25395  01270C  B0D8               	btfsc	status,0,c
 25396  01270E  D003               	goto	l2045
 25397                           
 25398                           ; BSR set to: 1
 25399                           ;doprnt.c: 1340: c = prec;
 25400  012710  C1A9  F1AB         	movff	__doprnt@prec,__doprnt@c
 25401  012714  D010               	goto	l2047
 25402  012716                     l2045:
 25403                           
 25404                           ; BSR set to: 1
 25405                           ;doprnt.c: 1341: else if(prec < c)
 25406                           
 25407                           ; BSR set to: 1
 25408  012716  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25409  012718  0A80               	xorlw	128
 25410  01271A  6F88               	movwf	??__doprnt& (0+255),b
 25411  01271C  51AB               	movf	__doprnt@c& (0+255),w,b
 25412  01271E  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 25413  012720  0E80               	movlw	128
 25414  012722  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25415  012724  0E7F               	movlw	127
 25416  012726  5988               	subwfb	??__doprnt& (0+255),w,b
 25417  012728  B0D8               	btfsc	status,0,c
 25418  01272A  D005               	goto	l2047
 25419                           
 25420                           ; BSR set to: 1
 25421                           ;doprnt.c: 1342: prec = c;
 25422  01272C  51AB               	movf	__doprnt@c& (0+255),w,b
 25423  01272E  6FA9               	movwf	__doprnt@prec& (0+255),b
 25424  012730  6BAA               	clrf	(__doprnt@prec+1)& (0+255),b
 25425  012732  BFA9               	btfsc	__doprnt@prec& (0+255),7,b
 25426  012734  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 25427  012736                     l2047:
 25428                           
 25429                           ; BSR set to: 1
 25430                           ;doprnt.c: 1345: if(width && flag & 0x03)
 25431                           
 25432                           ; BSR set to: 1
 25433                           
 25434                           ; BSR set to: 1
 25435  012736  51A5               	movf	__doprnt@width& (0+255),w,b
 25436  012738  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25437  01273A  B4D8               	btfsc	status,2,c
 25438  01273C  D00D               	goto	l2048
 25439                           
 25440                           ; BSR set to: 1
 25441  01273E  0E03               	movlw	3
 25442  012740  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25443  012742  6F88               	movwf	??__doprnt& (0+255),b
 25444  012744  0E00               	movlw	0
 25445  012746  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25446  012748  6F89               	movwf	(??__doprnt+1)& (0+255),b
 25447  01274A  5188               	movf	??__doprnt& (0+255),w,b
 25448  01274C  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 25449  01274E  B4D8               	btfsc	status,2,c
 25450  012750  D003               	goto	l2048
 25451                           
 25452                           ; BSR set to: 1
 25453                           ;doprnt.c: 1346: width--;
 25454  012752  07A5               	decf	__doprnt@width& (0+255),f,b
 25455  012754  A0D8               	btfss	status,0,c
 25456  012756  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 25457  012758                     l2048:
 25458                           
 25459                           ; BSR set to: 1
 25460                           ;doprnt.c: 1348: if(flag & 0x4000) {
 25461                           
 25462                           ; BSR set to: 1
 25463  012758  ADA8               	btfss	(__doprnt@flag+1)& (0+255),6,b
 25464  01275A  D013               	goto	l2051
 25465                           
 25466                           ; BSR set to: 1
 25467                           ;doprnt.c: 1349: if(width > prec)
 25468  01275C  51A5               	movf	__doprnt@width& (0+255),w,b
 25469  01275E  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 25470  012760  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25471  012762  0A80               	xorlw	128
 25472  012764  6F88               	movwf	??__doprnt& (0+255),b
 25473  012766  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 25474  012768  0A80               	xorlw	128
 25475  01276A  5988               	subwfb	??__doprnt& (0+255),w,b
 25476  01276C  B0D8               	btfsc	status,0,c
 25477  01276E  D005               	goto	l2050
 25478                           
 25479                           ; BSR set to: 1
 25480                           ;doprnt.c: 1350: width -= prec;
 25481  012770  51A9               	movf	__doprnt@prec& (0+255),w,b
 25482  012772  5FA5               	subwf	__doprnt@width& (0+255),f,b
 25483  012774  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25484  012776  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25485  012778  D004               	goto	l2051
 25486  01277A                     l2050:
 25487                           
 25488                           ; BSR set to: 1
 25489                           ;doprnt.c: 1351: else
 25490                           ;doprnt.c: 1352: width = 0;
 25491                           
 25492                           ; BSR set to: 1
 25493  01277A  0E00               	movlw	0
 25494  01277C  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 25495  01277E  0E00               	movlw	0
 25496  012780  6FA5               	movwf	__doprnt@width& (0+255),b
 25497  012782                     l2051:
 25498                           
 25499                           ; BSR set to: 1
 25500                           ;doprnt.c: 1353: }
 25501                           ;doprnt.c: 1381: if(width > c)
 25502                           
 25503                           ; BSR set to: 1
 25504                           
 25505                           ; BSR set to: 1
 25506  012782  0E80               	movlw	128
 25507  012784  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25508  012786  0E7F               	movlw	127
 25509  012788  6F88               	movwf	??__doprnt& (0+255),b
 25510  01278A  51A5               	movf	__doprnt@width& (0+255),w,b
 25511  01278C  5DAB               	subwf	__doprnt@c& (0+255),w,b
 25512  01278E  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 25513  012790  0A80               	xorlw	128
 25514  012792  5988               	subwfb	??__doprnt& (0+255),w,b
 25515  012794  B0D8               	btfsc	status,0,c
 25516  012796  D007               	goto	l2052
 25517                           
 25518                           ; BSR set to: 1
 25519                           ;doprnt.c: 1382: width -= c;
 25520  012798  51AB               	movf	__doprnt@c& (0+255),w,b
 25521  01279A  5FA5               	subwf	__doprnt@width& (0+255),f,b
 25522  01279C  0E00               	movlw	0
 25523  01279E  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25524  0127A0  0EFF               	movlw	255
 25525  0127A2  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25526  0127A4  D004               	goto	l2053
 25527  0127A6                     l2052:
 25528                           
 25529                           ; BSR set to: 1
 25530                           ;doprnt.c: 1383: else
 25531                           ;doprnt.c: 1384: width = 0;
 25532                           
 25533                           ; BSR set to: 1
 25534  0127A6  0E00               	movlw	0
 25535  0127A8  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 25536  0127AA  0E00               	movlw	0
 25537  0127AC  6FA5               	movwf	__doprnt@width& (0+255),b
 25538  0127AE                     l2053:
 25539                           
 25540                           ; BSR set to: 1
 25541                           ;doprnt.c: 1387: if(flag & 0x04) {
 25542                           
 25543                           ; BSR set to: 1
 25544  0127AE  A5A7               	btfss	__doprnt@flag& (0+255),2,b
 25545  0127B0  D07A               	goto	l2054
 25546                           
 25547                           ; BSR set to: 1
 25548                           ;doprnt.c: 1392: if(flag & 0x03)
 25549  0127B2  0E03               	movlw	3
 25550  0127B4  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25551  0127B6  6F88               	movwf	??__doprnt& (0+255),b
 25552  0127B8  0E00               	movlw	0
 25553  0127BA  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25554  0127BC  6F89               	movwf	(??__doprnt+1)& (0+255),b
 25555  0127BE  5188               	movf	??__doprnt& (0+255),w,b
 25556  0127C0  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 25557  0127C2  B4D8               	btfsc	status,2,c
 25558  0127C4  D033               	goto	l2057
 25559                           
 25560                           ; BSR set to: 1
 25561                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 25562  0127C6  EE20 F002          	lfsr	2,2
 25563  0127CA  5182               	movf	__doprnt@pb& (0+255),w,b
 25564  0127CC  26D9               	addwf	fsr2l,f,c
 25565  0127CE  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25566  0127D0  22DA               	addwfc	fsr2h,f,c
 25567  0127D2  50DE               	movf	postinc2,w,c
 25568  0127D4  10DE               	iorwf	postinc2,w,c
 25569  0127D6  10DE               	iorwf	postinc2,w,c
 25570  0127D8  B4D8               	btfsc	status,2,c
 25571  0127DA  D013               	goto	l2056
 25572                           
 25573                           ; BSR set to: 1
 25574  0127DC  EE20 F002          	lfsr	2,2
 25575  0127E0  5182               	movf	__doprnt@pb& (0+255),w,b
 25576  0127E2  26D9               	addwf	fsr2l,f,c
 25577  0127E4  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25578  0127E6  22DA               	addwfc	fsr2h,f,c
 25579  0127E8  D801               	call	u31368
 25580  0127EA  D020               	goto	l2057
 25581  0127EC                     u31368:
 25582  0127EC  0005               	push	
 25583  0127EE  6EFA               	movwf	pclath,c
 25584  0127F0  50DE               	movf	postinc2,w,c
 25585  0127F2  6EFD               	movwf	tosl,c
 25586  0127F4  50DE               	movf	postinc2,w,c
 25587  0127F6  6EFE               	movwf	tosh,c
 25588  0127F8  50DE               	movf	postinc2,w,c
 25589  0127FA  6EFF               	movwf	tosu,c
 25590  0127FC  50FA               	movf	pclath,w,c
 25591  0127FE  0E2D               	movlw	45
 25592  012800  0012               	return		;indir
 25593  012802                     l2056:
 25594  012802  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25595  012806  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25596  01280A  CFDE F188          	movff	postinc2,??__doprnt
 25597  01280E  CFDD F189          	movff	postdec2,??__doprnt+1
 25598  012812  C188  FFD9         	movff	??__doprnt,fsr2l
 25599  012816  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25600  01281A  0E2D               	movlw	45
 25601  01281C  6EDF               	movwf	indf2,c
 25602  01281E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25603  012822  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25604  012826  2ADE               	incf	postinc2,f,c
 25605  012828  0E00               	movlw	0
 25606  01282A  22DD               	addwfc	postdec2,f,c
 25607  01282C                     l2057:
 25608                           
 25609                           ;doprnt.c: 1415: if(width)
 25610  01282C  0101               	movlb	1	; () banked
 25611  01282E  51A5               	movf	__doprnt@width& (0+255),w,b
 25612  012830  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25613  012832  B4D8               	btfsc	status,2,c
 25614  012834  D16B               	goto	l2080
 25615                           
 25616                           ; BSR set to: 1
 25617                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 25618                           
 25619                           ; BSR set to: 1
 25620                           
 25621                           ;doprnt.c: 1416: do
 25622  012836  EE20 F002          	lfsr	2,2
 25623  01283A  5182               	movf	__doprnt@pb& (0+255),w,b
 25624  01283C  26D9               	addwf	fsr2l,f,c
 25625  01283E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25626  012840  22DA               	addwfc	fsr2h,f,c
 25627  012842  50DE               	movf	postinc2,w,c
 25628  012844  10DE               	iorwf	postinc2,w,c
 25629  012846  10DE               	iorwf	postinc2,w,c
 25630  012848  B4D8               	btfsc	status,2,c
 25631  01284A  D013               	goto	l2060
 25632                           
 25633                           ; BSR set to: 1
 25634  01284C  EE20 F002          	lfsr	2,2
 25635  012850  5182               	movf	__doprnt@pb& (0+255),w,b
 25636  012852  26D9               	addwf	fsr2l,f,c
 25637  012854  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25638  012856  22DA               	addwfc	fsr2h,f,c
 25639  012858  D801               	call	u31398
 25640  01285A  D020               	goto	l2061
 25641  01285C                     u31398:
 25642  01285C  0005               	push	
 25643  01285E  6EFA               	movwf	pclath,c
 25644  012860  50DE               	movf	postinc2,w,c
 25645  012862  6EFD               	movwf	tosl,c
 25646  012864  50DE               	movf	postinc2,w,c
 25647  012866  6EFE               	movwf	tosh,c
 25648  012868  50DE               	movf	postinc2,w,c
 25649  01286A  6EFF               	movwf	tosu,c
 25650  01286C  50FA               	movf	pclath,w,c
 25651  01286E  0E30               	movlw	48
 25652  012870  0012               	return		;indir
 25653  012872                     l2060:
 25654  012872  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25655  012876  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25656  01287A  CFDE F188          	movff	postinc2,??__doprnt
 25657  01287E  CFDD F189          	movff	postdec2,??__doprnt+1
 25658  012882  C188  FFD9         	movff	??__doprnt,fsr2l
 25659  012886  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25660  01288A  0E30               	movlw	48
 25661  01288C  6EDF               	movwf	indf2,c
 25662  01288E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25663  012892  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25664  012896  2ADE               	incf	postinc2,f,c
 25665  012898  0E00               	movlw	0
 25666  01289A  22DD               	addwfc	postdec2,f,c
 25667  01289C                     l2061:
 25668                           
 25669                           ;doprnt.c: 1418: while(--width);
 25670  01289C  0101               	movlb	1	; () banked
 25671  01289E  07A5               	decf	__doprnt@width& (0+255),f,b
 25672  0128A0  A0D8               	btfss	status,0,c
 25673  0128A2  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 25674  0128A4  D7C4               	goto	L28
 25675  0128A6                     l2054:
 25676                           
 25677                           ; BSR set to: 1
 25678                           ;doprnt.c: 1422: {
 25679                           ;doprnt.c: 1424: if(width
 25680                           ;doprnt.c: 1428: )
 25681                           
 25682                           ; BSR set to: 1
 25683  0128A6  51A5               	movf	__doprnt@width& (0+255),w,b
 25684  0128A8  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25685  0128AA  B4D8               	btfsc	status,2,c
 25686  0128AC  D03B               	goto	u31440
 25687  0128AE                     u31410:
 25688                           
 25689                           ; BSR set to: 1
 25690                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 25691                           
 25692                           ; BSR set to: 1
 25693                           
 25694                           ;doprnt.c: 1429: do
 25695  0128AE  EE20 F002          	lfsr	2,2
 25696  0128B2  5182               	movf	__doprnt@pb& (0+255),w,b
 25697  0128B4  26D9               	addwf	fsr2l,f,c
 25698  0128B6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25699  0128B8  22DA               	addwfc	fsr2h,f,c
 25700  0128BA  50DE               	movf	postinc2,w,c
 25701  0128BC  10DE               	iorwf	postinc2,w,c
 25702  0128BE  10DE               	iorwf	postinc2,w,c
 25703  0128C0  B4D8               	btfsc	status,2,c
 25704  0128C2  D013               	goto	l2066
 25705                           
 25706                           ; BSR set to: 1
 25707  0128C4  EE20 F002          	lfsr	2,2
 25708  0128C8  5182               	movf	__doprnt@pb& (0+255),w,b
 25709  0128CA  26D9               	addwf	fsr2l,f,c
 25710  0128CC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25711  0128CE  22DA               	addwfc	fsr2h,f,c
 25712  0128D0  D801               	call	u31438
 25713  0128D2  D020               	goto	l2067
 25714  0128D4                     u31438:
 25715  0128D4  0005               	push	
 25716  0128D6  6EFA               	movwf	pclath,c
 25717  0128D8  50DE               	movf	postinc2,w,c
 25718  0128DA  6EFD               	movwf	tosl,c
 25719  0128DC  50DE               	movf	postinc2,w,c
 25720  0128DE  6EFE               	movwf	tosh,c
 25721  0128E0  50DE               	movf	postinc2,w,c
 25722  0128E2  6EFF               	movwf	tosu,c
 25723  0128E4  50FA               	movf	pclath,w,c
 25724  0128E6  0E20               	movlw	32
 25725  0128E8  0012               	return		;indir
 25726  0128EA                     l2066:
 25727  0128EA  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25728  0128EE  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25729  0128F2  CFDE F188          	movff	postinc2,??__doprnt
 25730  0128F6  CFDD F189          	movff	postdec2,??__doprnt+1
 25731  0128FA  C188  FFD9         	movff	??__doprnt,fsr2l
 25732  0128FE  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25733  012902  0E20               	movlw	32
 25734  012904  6EDF               	movwf	indf2,c
 25735  012906  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25736  01290A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25737  01290E  2ADE               	incf	postinc2,f,c
 25738  012910  0E00               	movlw	0
 25739  012912  22DD               	addwfc	postdec2,f,c
 25740  012914                     l2067:
 25741                           
 25742                           ;doprnt.c: 1431: while(--width);
 25743  012914  0101               	movlb	1	; () banked
 25744  012916  07A5               	decf	__doprnt@width& (0+255),f,b
 25745  012918  A0D8               	btfss	status,0,c
 25746  01291A  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 25747  01291C  51A5               	movf	__doprnt@width& (0+255),w,b
 25748  01291E  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25749  012920  A4D8               	btfss	status,2,c
 25750  012922  D7C5               	goto	u31410
 25751  012924                     u31440:
 25752                           
 25753                           ; BSR set to: 1
 25754                           ;doprnt.c: 1438: if(flag & 0x03)
 25755                           
 25756                           ; BSR set to: 1
 25757                           
 25758                           ; BSR set to: 1
 25759  012924  0E03               	movlw	3
 25760  012926  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25761  012928  6F88               	movwf	??__doprnt& (0+255),b
 25762  01292A  0E00               	movlw	0
 25763  01292C  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25764  01292E  6F89               	movwf	(??__doprnt+1)& (0+255),b
 25765  012930  5188               	movf	??__doprnt& (0+255),w,b
 25766  012932  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 25767  012934  B4D8               	btfsc	status,2,c
 25768  012936  D0EA               	goto	l2080
 25769                           
 25770                           ; BSR set to: 1
 25771                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 25772  012938  EE20 F002          	lfsr	2,2
 25773  01293C  5182               	movf	__doprnt@pb& (0+255),w,b
 25774  01293E  26D9               	addwf	fsr2l,f,c
 25775  012940  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25776  012942  22DA               	addwfc	fsr2h,f,c
 25777  012944  50DE               	movf	postinc2,w,c
 25778  012946  10DE               	iorwf	postinc2,w,c
 25779  012948  10DE               	iorwf	postinc2,w,c
 25780  01294A  B4D8               	btfsc	status,2,c
 25781  01294C  D013               	goto	l2070
 25782                           
 25783                           ; BSR set to: 1
 25784  01294E  EE20 F002          	lfsr	2,2
 25785  012952  5182               	movf	__doprnt@pb& (0+255),w,b
 25786  012954  26D9               	addwf	fsr2l,f,c
 25787  012956  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25788  012958  22DA               	addwfc	fsr2h,f,c
 25789  01295A  D801               	call	u31478
 25790  01295C  D0D7               	goto	l2080
 25791  01295E                     u31478:
 25792  01295E  0005               	push	
 25793  012960  6EFA               	movwf	pclath,c
 25794  012962  50DE               	movf	postinc2,w,c
 25795  012964  6EFD               	movwf	tosl,c
 25796  012966  50DE               	movf	postinc2,w,c
 25797  012968  6EFE               	movwf	tosh,c
 25798  01296A  50DE               	movf	postinc2,w,c
 25799  01296C  6EFF               	movwf	tosu,c
 25800  01296E  50FA               	movf	pclath,w,c
 25801  012970  0E2D               	movlw	45
 25802  012972  0012               	return		;indir
 25803  012974                     l2070:
 25804  012974  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25805  012978  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25806  01297C  CFDE F188          	movff	postinc2,??__doprnt
 25807  012980  CFDD F189          	movff	postdec2,??__doprnt+1
 25808  012984  C188  FFD9         	movff	??__doprnt,fsr2l
 25809  012988  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25810  01298C  0E2D               	movlw	45
 25811  01298E  6EDF               	movwf	indf2,c
 25812  012990  D0B6               	goto	l22049
 25813  012992                     
 25814                           ;doprnt.c: 1486: case 0xC0:
 25815                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 25816  012992  C1A9  F188         	movff	__doprnt@prec,??__doprnt
 25817  012996  C1AA  F189         	movff	__doprnt@prec+1,??__doprnt+1
 25818  01299A  0101               	movlb	1	; () banked
 25819  01299C  90D8               	bcf	status,0,c
 25820  01299E  3788               	rlcf	??__doprnt& (0+255),f,b
 25821  0129A0  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 25822  0129A2  90D8               	bcf	status,0,c
 25823  0129A4  3788               	rlcf	??__doprnt& (0+255),f,b
 25824  0129A6  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 25825  0129A8  0EB5               	movlw	low _dpowers
 25826  0129AA  2588               	addwf	??__doprnt& (0+255),w,b
 25827  0129AC  6EF6               	movwf	tblptrl,c
 25828  0129AE  0ECF               	movlw	high _dpowers
 25829  0129B0  2189               	addwfc	(??__doprnt+1)& (0+255),w,b
 25830  0129B2  6EF7               	movwf	tblptrh,c
 25831  0129B4                     	if	1	;There are 3 active tblptr bytes
 25832  0129B4  6AF8               	clrf	tblptru,c
 25833  0129B6  0E00               	movlw	low (__mediumconst shr (0+16))
 25834  0129B8  22F8               	addwfc	tblptru,f,c
 25835  0129BA                     	endif
 25836  0129BA  0009               	tblrd		*+
 25837  0129BC  CFF5 F11B          	movff	tablat,___lldiv@divisor
 25838  0129C0  0009               	tblrd		*+
 25839  0129C2  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 25840  0129C6  0009               	tblrd		*+
 25841  0129C8  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 25842  0129CC  000A               	tblrd		*-
 25843  0129CE  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 25844  0129D2  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 25845  0129D6  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 25846  0129DA  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 25847  0129DE  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 25848  0129E2  EC8E  F0CD         	call	___lldiv
 25849  0129E6  C117  F124         	movff	?___lldiv,___llmod@dividend
 25850  0129EA  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 25851  0129EE  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 25852  0129F2  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 25853  0129F6  0E0A               	movlw	10
 25854  0129F8  0101               	movlb	1	; () banked
 25855  0129FA  6F28               	movwf	___llmod@divisor& (0+255),b
 25856  0129FC  0E00               	movlw	0
 25857  0129FE  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 25858  012A00  0E00               	movlw	0
 25859  012A02  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 25860  012A04  0E00               	movlw	0
 25861  012A06  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 25862  012A08  ECEB  F0CF         	call	___llmod	;wreg free
 25863  012A0C  0101               	movlb	1	; () banked
 25864  012A0E  5124               	movf	?___llmod& (0+255),w,b
 25865  012A10  0F30               	addlw	48
 25866  012A12  6FAB               	movwf	__doprnt@c& (0+255),b
 25867                           
 25868                           ;doprnt.c: 1491: break;
 25869  012A14  D048               	goto	l2077
 25870  012A16                     
 25871                           ; BSR set to: 1
 25872                           ;doprnt.c: 1499: {
 25873                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 25874                           
 25875                           ; BSR set to: 1
 25876  012A16  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 25877  012A1A  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 25878  012A1E  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 25879  012A22  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 25880  012A26  C1A9  F188         	movff	__doprnt@prec,??__doprnt
 25881  012A2A  C1AA  F189         	movff	__doprnt@prec+1,??__doprnt+1
 25882  012A2E  90D8               	bcf	status,0,c
 25883  012A30  3788               	rlcf	??__doprnt& (0+255),f,b
 25884  012A32  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 25885  012A34  90D8               	bcf	status,0,c
 25886  012A36  3788               	rlcf	??__doprnt& (0+255),f,b
 25887  012A38  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 25888  012A3A  0EDD               	movlw	low _hexpowers
 25889  012A3C  2588               	addwf	??__doprnt& (0+255),w,b
 25890  012A3E  6EF6               	movwf	tblptrl,c
 25891  012A40  0ECF               	movlw	high _hexpowers
 25892  012A42  2189               	addwfc	(??__doprnt+1)& (0+255),w,b
 25893  012A44  6EF7               	movwf	tblptrh,c
 25894  012A46                     	if	1	;There are 3 active tblptr bytes
 25895  012A46  6AF8               	clrf	tblptru,c
 25896  012A48  0E00               	movlw	low (__mediumconst shr (0+16))
 25897  012A4A  22F8               	addwfc	tblptru,f,c
 25898  012A4C                     	endif
 25899  012A4C  0009               	tblrd		*+
 25900  012A4E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 25901  012A52  0009               	tblrd		*+
 25902  012A54  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 25903  012A58  0009               	tblrd		*+
 25904  012A5A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 25905  012A5E  000A               	tblrd		*-
 25906  012A60  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 25907  012A64  EC8E  F0CD         	call	___lldiv	;wreg free
 25908  012A68  0101               	movlb	1	; () banked
 25909  012A6A  5117               	movf	?___lldiv& (0+255),w,b
 25910  012A6C  0B0F               	andlw	15
 25911  012A6E  6F92               	movwf	__doprnt@idx& (0+255),b
 25912                           
 25913                           ; BSR set to: 1
 25914                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 25915  012A70  5192               	movf	__doprnt@idx& (0+255),w,b
 25916  012A72  0D01               	mullw	1
 25917  012A74  0EEA               	movlw	low STR_189
 25918  012A76  24F3               	addwf	prodl,w,c
 25919  012A78  6EF6               	movwf	tblptrl,c
 25920  012A7A  0EFC               	movlw	high STR_189
 25921  012A7C  20F4               	addwfc	prodh,w,c
 25922  012A7E  6EF7               	movwf	tblptrh,c
 25923  012A80                     	if	1	;There are 3 active tblptr bytes
 25924  012A80  6AF8               	clrf	tblptru,c
 25925  012A82  0E00               	movlw	low (__mediumconst shr (0+16))
 25926  012A84  22F8               	addwfc	tblptru,f,c
 25927  012A86                     	endif
 25928  012A86  0008               	tblrd		*
 25929  012A88  CFF5 F1AB          	movff	tablat,__doprnt@c
 25930                           
 25931                           ; BSR set to: 1
 25932                           ;doprnt.c: 1523: }
 25933                           
 25934                           ;doprnt.c: 1508: }
 25935                           ;doprnt.c: 1510: break;
 25936  012A8C  D00C               	goto	l2077
 25937  012A8E                     l22041:
 25938  012A8E  0101               	movlb	1	; () banked
 25939  012A90  51A7               	movf	__doprnt@flag& (0+255),w,b
 25940  012A92  0BC0               	andlw	192
 25941                           
 25942                           ; Switch size 1, requested type "space"
 25943                           ; Number of cases is 3, Range of values is 0 to 192
 25944                           ; switch strategies available:
 25945                           ; Name         Instructions Cycles
 25946                           ; simple_byte           10     6 (average)
 25947                           ;	Chosen strategy is simple_byte
 25948  012A94  0A00               	xorlw	0	; case 0
 25949  012A96  B4D8               	btfsc	status,2,c
 25950  012A98  D77C               	goto	l2075
 25951  012A9A  0A80               	xorlw	128	; case 128
 25952  012A9C  B4D8               	btfsc	status,2,c
 25953  012A9E  D7BB               	goto	l2078
 25954  012AA0  0A40               	xorlw	64	; case 192
 25955  012AA2  B4D8               	btfsc	status,2,c
 25956  012AA4  D776               	goto	l2075
 25957  012AA6                     l2077:
 25958                           
 25959                           ; BSR set to: 1
 25960                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 25961                           
 25962                           ; BSR set to: 1
 25963  012AA6  EE20 F002          	lfsr	2,2
 25964  012AAA  5182               	movf	__doprnt@pb& (0+255),w,b
 25965  012AAC  26D9               	addwf	fsr2l,f,c
 25966  012AAE  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25967  012AB0  22DA               	addwfc	fsr2h,f,c
 25968  012AB2  50DE               	movf	postinc2,w,c
 25969  012AB4  10DE               	iorwf	postinc2,w,c
 25970  012AB6  10DE               	iorwf	postinc2,w,c
 25971  012AB8  B4D8               	btfsc	status,2,c
 25972  012ABA  D013               	goto	l2079
 25973                           
 25974                           ; BSR set to: 1
 25975  012ABC  EE20 F002          	lfsr	2,2
 25976  012AC0  5182               	movf	__doprnt@pb& (0+255),w,b
 25977  012AC2  26D9               	addwf	fsr2l,f,c
 25978  012AC4  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25979  012AC6  22DA               	addwfc	fsr2h,f,c
 25980  012AC8  D801               	call	u31498
 25981  012ACA  D020               	goto	l2080
 25982  012ACC                     u31498:
 25983  012ACC  0005               	push	
 25984  012ACE  6EFA               	movwf	pclath,c
 25985  012AD0  50DE               	movf	postinc2,w,c
 25986  012AD2  6EFD               	movwf	tosl,c
 25987  012AD4  50DE               	movf	postinc2,w,c
 25988  012AD6  6EFE               	movwf	tosh,c
 25989  012AD8  50DE               	movf	postinc2,w,c
 25990  012ADA  6EFF               	movwf	tosu,c
 25991  012ADC  50FA               	movf	pclath,w,c
 25992  012ADE  51AB               	movf	__doprnt@c& (0+255),w,b
 25993  012AE0  0012               	return		;indir
 25994  012AE2                     l2079:
 25995  012AE2  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25996  012AE6  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25997  012AEA  CFDE F188          	movff	postinc2,??__doprnt
 25998  012AEE  CFDD F189          	movff	postdec2,??__doprnt+1
 25999  012AF2  C188  FFD9         	movff	??__doprnt,fsr2l
 26000  012AF6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26001  012AFA  C1AB  FFDF         	movff	__doprnt@c,indf2
 26002  012AFE                     l22049:
 26003  012AFE  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26004  012B02  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26005  012B06  2ADE               	incf	postinc2,f,c
 26006  012B08  0E00               	movlw	0
 26007  012B0A  22DD               	addwfc	postdec2,f,c
 26008  012B0C                     l2080:
 26009  012B0C  0101               	movlb	1	; () banked
 26010  012B0E  07A9               	decf	__doprnt@prec& (0+255),f,b
 26011  012B10  A0D8               	btfss	status,0,c
 26012  012B12  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 26013  012B14  29A9               	incf	__doprnt@prec& (0+255),w,b
 26014  012B16  E1BB               	bnz	l22041
 26015  012B18  29AA               	incf	(__doprnt@prec+1)& (0+255),w,b
 26016  012B1A  A4D8               	btfss	status,2,c
 26017  012B1C  D7B8               	goto	l2074
 26018  012B1E                     u31500:
 26019                           
 26020                           ; BSR set to: 1
 26021                           
 26022                           ; BSR set to: 1
 26023  012B1E  0101               	movlb	1	; () banked
 26024  012B20  5184               	movf	__doprnt@f& (0+255),w,b
 26025  012B22  6F88               	movwf	??__doprnt& (0+255),b
 26026  012B24  5185               	movf	(__doprnt@f+1)& (0+255),w,b
 26027  012B26  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26028  012B28  4B84               	infsnz	__doprnt@f& (0+255),f,b
 26029  012B2A  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 26030  012B2C  C188  FFF6         	movff	??__doprnt,tblptrl
 26031  012B30  C189  FFF7         	movff	??__doprnt+1,tblptrh
 26032  012B34  0E00               	movlw	low (__mediumconst shr (0+16))
 26033  012B36  6EF8               	movwf	tblptru,c
 26034  012B38  0E0D               	movlw	(high __ramtop+-1)
 26035  012B3A  64F7               	cpfsgt	tblptrh,c
 26036  012B3C  D003               	bra	u31517
 26037  012B3E  0008               	tblrd		*
 26038  012B40  50F5               	movf	tablat,w,c
 26039  012B42  D005               	bra	u31510
 26040  012B44                     u31517:
 26041  012B44  CFF6 FFE9          	movff	tblptrl,fsr0l
 26042  012B48  CFF7 FFEA          	movff	tblptrh,fsr0h
 26043  012B4C  50EF               	movf	indf0,w,c
 26044  012B4E                     u31510:
 26045  012B4E  0101               	movlb	1	; () banked
 26046  012B50  6FAB               	movwf	__doprnt@c& (0+255),b
 26047  012B52  51AB               	movf	__doprnt@c& (0+255),w,b
 26048  012B54  A4D8               	btfss	status,2,c
 26049  012B56  EF2D  F08B         	goto	l1908
 26050  012B5A                     u31520:
 26051                           
 26052                           ; BSR set to: 1
 26053                           ;doprnt.c: 1540: return 0;
 26054                           
 26055                           ; BSR set to: 1
 26056                           
 26057                           ;doprnt.c: 1525: }
 26058                           ;doprnt.c: 1533: }
 26059                           ;doprnt.c: 1535: alldone:
 26060                           
 26061                           ; BSR set to: 1
 26062  012B5A  0E00               	movlw	0
 26063  012B5C  6F83               	movwf	(?__doprnt+1)& (0+255),b
 26064  012B5E  0E00               	movlw	0
 26065  012B60  6F82               	movwf	?__doprnt& (0+255),b
 26066  012B62  0012               	return	
 26067  012B64                     __end_of__doprnt:
 26068                           	opt stack 0
 26069                           tosu	equ	0xFFF
 26070                           tosh	equ	0xFFE
 26071                           tosl	equ	0xFFD
 26072                           pclath	equ	0xFFA
 26073                           tblptru	equ	0xFF8
 26074                           tblptrh	equ	0xFF7
 26075                           tblptrl	equ	0xFF6
 26076                           tablat	equ	0xFF5
 26077                           prodh	equ	0xFF4
 26078                           prodl	equ	0xFF3
 26079                           intcon	equ	0xFF2
 26080                           indf0	equ	0xFEF
 26081                           postinc0	equ	0xFEE
 26082                           fsr0h	equ	0xFEA
 26083                           fsr0l	equ	0xFE9
 26084                           wreg	equ	0xFE8
 26085                           indf1	equ	0xFE7
 26086                           postdec1	equ	0xFE5
 26087                           plusw1	equ	0xFE3
 26088                           fsr1h	equ	0xFE2
 26089                           fsr1l	equ	0xFE1
 26090                           indf2	equ	0xFDF
 26091                           postinc2	equ	0xFDE
 26092                           postdec2	equ	0xFDD
 26093                           plusw2	equ	0xFDB
 26094                           fsr2h	equ	0xFDA
 26095                           fsr2l	equ	0xFD9
 26096                           status	equ	0xFD8
 26097                           
 26098 ;; *************** function _scale *****************
 26099 ;; Defined at:
 26100 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26101 ;; Parameters:    Size  Location     Type
 26102 ;;  scl             1    wreg     char 
 26103 ;; Auto vars:     Size  Location     Type
 26104 ;;  scl             1  119[BANK1 ] char 
 26105 ;; Return value:  Size  Location     Type
 26106 ;;                  4  111[BANK1 ] char 
 26107 ;; Registers used:
 26108 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26109 ;; Tracked objects:
 26110 ;;		On entry : 0/0
 26111 ;;		On exit  : 0/0
 26112 ;;		Unchanged: 0/0
 26113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26114 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26115 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26117 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26118 ;;Total ram usage:        9 bytes
 26119 ;; Hardware stack levels used:    1
 26120 ;; Hardware stack levels required when called:   14
 26121 ;; This function calls:
 26122 ;;		___awdiv
 26123 ;;		___awmod
 26124 ;;		___flmul
 26125 ;; This function is called by:
 26126 ;;		__doprnt
 26127 ;; This function uses a non-reentrant model
 26128 ;;
 26129                           
 26130                           	psect	text31
 26131  014B42                     __ptext31:
 26132                           	opt stack 0
 26133  014B42                     _scale:
 26134                           	opt stack 12
 26135                           
 26136                           ; BSR set to: 1
 26137                           ;incstack = 0
 26138                           ;scale@scl stored from wreg
 26139  014B42  0101               	movlb	1	; () banked
 26140  014B44  6F77               	movwf	scale@scl& (0+255),b
 26141                           
 26142                           ;doprnt.c: 428: if(scl < 0) {
 26143  014B46  0101               	movlb	1	; () banked
 26144  014B48  AF77               	btfss	scale@scl& (0+255),7,b
 26145  014B4A  D127               	goto	l1897
 26146                           
 26147                           ; BSR set to: 1
 26148                           ;doprnt.c: 429: scl = -scl;
 26149  014B4C  6D77               	negf	scale@scl& (0+255),b
 26150                           
 26151                           ;doprnt.c: 430: if(scl>=110)
 26152  014B4E  5177               	movf	scale@scl& (0+255),w,b
 26153  014B50  0A80               	xorlw	128
 26154  014B52  0F12               	addlw	-238
 26155  014B54  A0D8               	btfss	status,0,c
 26156  014B56  D0A5               	goto	l1898
 26157                           
 26158                           ; BSR set to: 1
 26159                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26160  014B58  0E00               	movlw	0
 26161  014B5A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26162  014B5C  0E0A               	movlw	10
 26163  014B5E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26164  014B60  0E00               	movlw	0
 26165  014B62  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26166  014B64  0E64               	movlw	100
 26167  014B66  6F19               	movwf	___awmod@divisor& (0+255),b
 26168  014B68  5177               	movf	scale@scl& (0+255),w,b
 26169  014B6A  6F17               	movwf	___awmod@dividend& (0+255),b
 26170  014B6C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26171  014B6E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26172  014B70  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26173  014B72  EC0F  F0CF         	call	___awmod
 26174  014B76  C117  F11D         	movff	?___awmod,___awdiv@dividend
 26175  014B7A  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 26176  014B7E  EC4B  F0CD         	call	___awdiv	;wreg free
 26177  014B82  0101               	movlb	1	; () banked
 26178  014B84  90D8               	bcf	status,0,c
 26179  014B86  371D               	rlcf	?___awdiv& (0+255),f,b
 26180  014B88  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26181  014B8A  90D8               	bcf	status,0,c
 26182  014B8C  371D               	rlcf	?___awdiv& (0+255),f,b
 26183  014B8E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26184  014B90  0E24               	movlw	36
 26185  014B92  271D               	addwf	?___awdiv& (0+255),f,b
 26186  014B94  0E00               	movlw	0
 26187  014B96  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26188  014B98  0E81               	movlw	low __npowers_
 26189  014B9A  251D               	addwf	?___awdiv& (0+255),w,b
 26190  014B9C  6EF6               	movwf	tblptrl,c
 26191  014B9E  0ECF               	movlw	high __npowers_
 26192  014BA0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26193  014BA2  6EF7               	movwf	tblptrh,c
 26194  014BA4                     	if	1	;There are 3 active tblptr bytes
 26195  014BA4  6AF8               	clrf	tblptru,c
 26196  014BA6  0E00               	movlw	low (__mediumconst shr (0+16))
 26197  014BA8  22F8               	addwfc	tblptru,f,c
 26198  014BAA                     	endif
 26199  014BAA  0009               	tblrd		*+
 26200  014BAC  CFF5 F15A          	movff	tablat,___flmul@a
 26201  014BB0  0009               	tblrd		*+
 26202  014BB2  CFF5 F15B          	movff	tablat,___flmul@a+1
 26203  014BB6  0009               	tblrd		*+
 26204  014BB8  CFF5 F15C          	movff	tablat,___flmul@a+2
 26205  014BBC  000A               	tblrd		*-
 26206  014BBE  CFF5 F15D          	movff	tablat,___flmul@a+3
 26207  014BC2  0E00               	movlw	0
 26208  014BC4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26209  014BC6  0E64               	movlw	100
 26210  014BC8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26211  014BCA  5177               	movf	scale@scl& (0+255),w,b
 26212  014BCC  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26213  014BCE  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26214  014BD0  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26215  014BD2  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26216  014BD4  EC4B  F0CD         	call	___awdiv	;wreg free
 26217  014BD8  0101               	movlb	1	; () banked
 26218  014BDA  90D8               	bcf	status,0,c
 26219  014BDC  371D               	rlcf	?___awdiv& (0+255),f,b
 26220  014BDE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26221  014BE0  90D8               	bcf	status,0,c
 26222  014BE2  371D               	rlcf	?___awdiv& (0+255),f,b
 26223  014BE4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26224  014BE6  0E48               	movlw	72
 26225  014BE8  271D               	addwf	?___awdiv& (0+255),f,b
 26226  014BEA  0E00               	movlw	0
 26227  014BEC  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26228  014BEE  0E81               	movlw	low __npowers_
 26229  014BF0  251D               	addwf	?___awdiv& (0+255),w,b
 26230  014BF2  6EF6               	movwf	tblptrl,c
 26231  014BF4  0ECF               	movlw	high __npowers_
 26232  014BF6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26233  014BF8  6EF7               	movwf	tblptrh,c
 26234  014BFA                     	if	1	;There are 3 active tblptr bytes
 26235  014BFA  6AF8               	clrf	tblptru,c
 26236  014BFC  0E00               	movlw	low (__mediumconst shr (0+16))
 26237  014BFE  22F8               	addwfc	tblptru,f,c
 26238  014C00                     	endif
 26239  014C00  0009               	tblrd		*+
 26240  014C02  CFF5 F156          	movff	tablat,___flmul@b
 26241  014C06  0009               	tblrd		*+
 26242  014C08  CFF5 F157          	movff	tablat,___flmul@b+1
 26243  014C0C  0009               	tblrd		*+
 26244  014C0E  CFF5 F158          	movff	tablat,___flmul@b+2
 26245  014C12  000A               	tblrd		*-
 26246  014C14  CFF5 F159          	movff	tablat,___flmul@b+3
 26247  014C18  ECE7  F0AB         	call	___flmul	;wreg free
 26248  014C1C  C156  F173         	movff	?___flmul,_scale$5108
 26249  014C20  C157  F174         	movff	?___flmul+1,_scale$5108+1
 26250  014C24  C158  F175         	movff	?___flmul+2,_scale$5108+2
 26251  014C28  C159  F176         	movff	?___flmul+3,_scale$5108+3
 26252                           
 26253                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26254  014C2C  C173  F156         	movff	_scale$5108,___flmul@b
 26255  014C30  C174  F157         	movff	_scale$5108+1,___flmul@b+1
 26256  014C34  C175  F158         	movff	_scale$5108+2,___flmul@b+2
 26257  014C38  C176  F159         	movff	_scale$5108+3,___flmul@b+3
 26258  014C3C  0E00               	movlw	0
 26259  014C3E  0101               	movlb	1	; () banked
 26260  014C40  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26261  014C42  0E0A               	movlw	10
 26262  014C44  6F19               	movwf	___awmod@divisor& (0+255),b
 26263  014C46  5177               	movf	scale@scl& (0+255),w,b
 26264  014C48  6F17               	movwf	___awmod@dividend& (0+255),b
 26265  014C4A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26266  014C4C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26267  014C4E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26268  014C50  EC0F  F0CF         	call	___awmod	;wreg free
 26269  014C54  0101               	movlb	1	; () banked
 26270  014C56  90D8               	bcf	status,0,c
 26271  014C58  3717               	rlcf	?___awmod& (0+255),f,b
 26272  014C5A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26273  014C5C  90D8               	bcf	status,0,c
 26274  014C5E  3717               	rlcf	?___awmod& (0+255),f,b
 26275  014C60  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26276  014C62  0E81               	movlw	low __npowers_
 26277  014C64  2517               	addwf	?___awmod& (0+255),w,b
 26278  014C66  6EF6               	movwf	tblptrl,c
 26279  014C68  0ECF               	movlw	high __npowers_
 26280  014C6A  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 26281  014C6C  6EF7               	movwf	tblptrh,c
 26282  014C6E                     	if	1	;There are 3 active tblptr bytes
 26283  014C6E  6AF8               	clrf	tblptru,c
 26284  014C70  0E00               	movlw	low (__mediumconst shr (0+16))
 26285  014C72  22F8               	addwfc	tblptru,f,c
 26286  014C74                     	endif
 26287  014C74  0009               	tblrd		*+
 26288  014C76  CFF5 F15A          	movff	tablat,___flmul@a
 26289  014C7A  0009               	tblrd		*+
 26290  014C7C  CFF5 F15B          	movff	tablat,___flmul@a+1
 26291  014C80  0009               	tblrd		*+
 26292  014C82  CFF5 F15C          	movff	tablat,___flmul@a+2
 26293  014C86  000A               	tblrd		*-
 26294  014C88  CFF5 F15D          	movff	tablat,___flmul@a+3
 26295  014C8C  ECE7  F0AB         	call	___flmul	;wreg free
 26296  014C90  C156  F16F         	movff	?___flmul,?_scale
 26297  014C94  C157  F170         	movff	?___flmul+1,?_scale+1
 26298  014C98  C158  F171         	movff	?___flmul+2,?_scale+2
 26299  014C9C  C159  F172         	movff	?___flmul+3,?_scale+3
 26300  014CA0  0012               	return	
 26301  014CA2                     l1898:
 26302                           
 26303                           ;doprnt.c: 432: else if(scl > 10)
 26304  014CA2  0101               	movlb	1	; () banked
 26305  014CA4  5177               	movf	scale@scl& (0+255),w,b
 26306  014CA6  0A80               	xorlw	128
 26307  014CA8  0F75               	addlw	-139
 26308  014CAA  A0D8               	btfss	status,0,c
 26309  014CAC  D05D               	goto	l1901
 26310                           
 26311                           ; BSR set to: 1
 26312                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 26313  014CAE  0E00               	movlw	0
 26314  014CB0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26315  014CB2  0E0A               	movlw	10
 26316  014CB4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26317  014CB6  5177               	movf	scale@scl& (0+255),w,b
 26318  014CB8  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26319  014CBA  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26320  014CBC  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26321  014CBE  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26322  014CC0  EC4B  F0CD         	call	___awdiv	;wreg free
 26323  014CC4  0101               	movlb	1	; () banked
 26324  014CC6  90D8               	bcf	status,0,c
 26325  014CC8  371D               	rlcf	?___awdiv& (0+255),f,b
 26326  014CCA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26327  014CCC  90D8               	bcf	status,0,c
 26328  014CCE  371D               	rlcf	?___awdiv& (0+255),f,b
 26329  014CD0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26330  014CD2  0E24               	movlw	36
 26331  014CD4  271D               	addwf	?___awdiv& (0+255),f,b
 26332  014CD6  0E00               	movlw	0
 26333  014CD8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26334  014CDA  0E81               	movlw	low __npowers_
 26335  014CDC  251D               	addwf	?___awdiv& (0+255),w,b
 26336  014CDE  6EF6               	movwf	tblptrl,c
 26337  014CE0  0ECF               	movlw	high __npowers_
 26338  014CE2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26339  014CE4  6EF7               	movwf	tblptrh,c
 26340  014CE6                     	if	1	;There are 3 active tblptr bytes
 26341  014CE6  6AF8               	clrf	tblptru,c
 26342  014CE8  0E00               	movlw	low (__mediumconst shr (0+16))
 26343  014CEA  22F8               	addwfc	tblptru,f,c
 26344  014CEC                     	endif
 26345  014CEC  0009               	tblrd		*+
 26346  014CEE  CFF5 F156          	movff	tablat,___flmul@b
 26347  014CF2  0009               	tblrd		*+
 26348  014CF4  CFF5 F157          	movff	tablat,___flmul@b+1
 26349  014CF8  0009               	tblrd		*+
 26350  014CFA  CFF5 F158          	movff	tablat,___flmul@b+2
 26351  014CFE  000A               	tblrd		*-
 26352  014D00  CFF5 F159          	movff	tablat,___flmul@b+3
 26353  014D04  0E00               	movlw	0
 26354  014D06  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26355  014D08  0E0A               	movlw	10
 26356  014D0A  6F19               	movwf	___awmod@divisor& (0+255),b
 26357  014D0C  5177               	movf	scale@scl& (0+255),w,b
 26358  014D0E  6F17               	movwf	___awmod@dividend& (0+255),b
 26359  014D10  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26360  014D12  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26361  014D14  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26362  014D16  EC0F  F0CF         	call	___awmod	;wreg free
 26363  014D1A  0101               	movlb	1	; () banked
 26364  014D1C  90D8               	bcf	status,0,c
 26365  014D1E  3717               	rlcf	?___awmod& (0+255),f,b
 26366  014D20  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26367  014D22  90D8               	bcf	status,0,c
 26368  014D24  3717               	rlcf	?___awmod& (0+255),f,b
 26369  014D26  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26370  014D28  0E81               	movlw	low __npowers_
 26371  014D2A  2517               	addwf	?___awmod& (0+255),w,b
 26372  014D2C  6EF6               	movwf	tblptrl,c
 26373  014D2E  0ECF               	movlw	high __npowers_
 26374  014D30  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 26375  014D32  6EF7               	movwf	tblptrh,c
 26376  014D34                     	if	1	;There are 3 active tblptr bytes
 26377  014D34  6AF8               	clrf	tblptru,c
 26378  014D36  0E00               	movlw	low (__mediumconst shr (0+16))
 26379  014D38  22F8               	addwfc	tblptru,f,c
 26380  014D3A                     	endif
 26381  014D3A  0009               	tblrd		*+
 26382  014D3C  CFF5 F15A          	movff	tablat,___flmul@a
 26383  014D40  0009               	tblrd		*+
 26384  014D42  CFF5 F15B          	movff	tablat,___flmul@a+1
 26385  014D46  0009               	tblrd		*+
 26386  014D48  CFF5 F15C          	movff	tablat,___flmul@a+2
 26387  014D4C  000A               	tblrd		*-
 26388  014D4E  CFF5 F15D          	movff	tablat,___flmul@a+3
 26389  014D52  ECE7  F0AB         	call	___flmul	;wreg free
 26390  014D56  C156  F16F         	movff	?___flmul,?_scale
 26391  014D5A  C157  F170         	movff	?___flmul+1,?_scale+1
 26392  014D5E  C158  F171         	movff	?___flmul+2,?_scale+2
 26393  014D62  C159  F172         	movff	?___flmul+3,?_scale+3
 26394  014D66  0012               	return	
 26395  014D68                     l1901:
 26396                           
 26397                           ;doprnt.c: 434: return _npowers_[scl];
 26398  014D68  0101               	movlb	1	; () banked
 26399  014D6A  5177               	movf	scale@scl& (0+255),w,b
 26400  014D6C  0D04               	mullw	4
 26401  014D6E  0E81               	movlw	low __npowers_
 26402  014D70  24F3               	addwf	prodl,w,c
 26403  014D72  6EF6               	movwf	tblptrl,c
 26404  014D74  0ECF               	movlw	high __npowers_
 26405  014D76  20F4               	addwfc	prodh,w,c
 26406  014D78  6EF7               	movwf	tblptrh,c
 26407  014D7A                     	if	1	;There are 3 active tblptr bytes
 26408  014D7A  6AF8               	clrf	tblptru,c
 26409  014D7C  0E00               	movlw	low (__mediumconst shr (0+16))
 26410  014D7E  22F8               	addwfc	tblptru,f,c
 26411  014D80                     	endif
 26412  014D80  0009               	tblrd		*+
 26413  014D82  CFF5 F16F          	movff	tablat,?_scale
 26414  014D86  0009               	tblrd		*+
 26415  014D88  CFF5 F170          	movff	tablat,?_scale+1
 26416  014D8C  0009               	tblrd		*+
 26417  014D8E  CFF5 F171          	movff	tablat,?_scale+2
 26418  014D92  000A               	tblrd		*-
 26419  014D94  CFF5 F172          	movff	tablat,?_scale+3
 26420                           
 26421                           ; BSR set to: 1
 26422  014D98  0012               	return	
 26423  014D9A                     l1897:
 26424                           
 26425                           ; BSR set to: 1
 26426                           ;doprnt.c: 435: }
 26427                           ;doprnt.c: 436: if(scl>=110)
 26428                           
 26429                           ; BSR set to: 1
 26430  014D9A  5177               	movf	scale@scl& (0+255),w,b
 26431  014D9C  0A80               	xorlw	128
 26432  014D9E  0F12               	addlw	-238
 26433  014DA0  A0D8               	btfss	status,0,c
 26434  014DA2  D0A5               	goto	l1902
 26435                           
 26436                           ; BSR set to: 1
 26437                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26438  014DA4  0E00               	movlw	0
 26439  014DA6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26440  014DA8  0E0A               	movlw	10
 26441  014DAA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26442  014DAC  0E00               	movlw	0
 26443  014DAE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26444  014DB0  0E64               	movlw	100
 26445  014DB2  6F19               	movwf	___awmod@divisor& (0+255),b
 26446  014DB4  5177               	movf	scale@scl& (0+255),w,b
 26447  014DB6  6F17               	movwf	___awmod@dividend& (0+255),b
 26448  014DB8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26449  014DBA  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26450  014DBC  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26451  014DBE  EC0F  F0CF         	call	___awmod	;wreg free
 26452  014DC2  C117  F11D         	movff	?___awmod,___awdiv@dividend
 26453  014DC6  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 26454  014DCA  EC4B  F0CD         	call	___awdiv	;wreg free
 26455  014DCE  0101               	movlb	1	; () banked
 26456  014DD0  90D8               	bcf	status,0,c
 26457  014DD2  371D               	rlcf	?___awdiv& (0+255),f,b
 26458  014DD4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26459  014DD6  90D8               	bcf	status,0,c
 26460  014DD8  371D               	rlcf	?___awdiv& (0+255),f,b
 26461  014DDA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26462  014DDC  0E24               	movlw	36
 26463  014DDE  271D               	addwf	?___awdiv& (0+255),f,b
 26464  014DE0  0E00               	movlw	0
 26465  014DE2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26466  014DE4  0E4D               	movlw	low __powers_
 26467  014DE6  251D               	addwf	?___awdiv& (0+255),w,b
 26468  014DE8  6EF6               	movwf	tblptrl,c
 26469  014DEA  0ECF               	movlw	high __powers_
 26470  014DEC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26471  014DEE  6EF7               	movwf	tblptrh,c
 26472  014DF0                     	if	1	;There are 3 active tblptr bytes
 26473  014DF0  6AF8               	clrf	tblptru,c
 26474  014DF2  0E00               	movlw	low (__mediumconst shr (0+16))
 26475  014DF4  22F8               	addwfc	tblptru,f,c
 26476  014DF6                     	endif
 26477  014DF6  0009               	tblrd		*+
 26478  014DF8  CFF5 F15A          	movff	tablat,___flmul@a
 26479  014DFC  0009               	tblrd		*+
 26480  014DFE  CFF5 F15B          	movff	tablat,___flmul@a+1
 26481  014E02  0009               	tblrd		*+
 26482  014E04  CFF5 F15C          	movff	tablat,___flmul@a+2
 26483  014E08  000A               	tblrd		*-
 26484  014E0A  CFF5 F15D          	movff	tablat,___flmul@a+3
 26485  014E0E  0E00               	movlw	0
 26486  014E10  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26487  014E12  0E64               	movlw	100
 26488  014E14  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26489  014E16  5177               	movf	scale@scl& (0+255),w,b
 26490  014E18  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26491  014E1A  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26492  014E1C  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26493  014E1E  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26494  014E20  EC4B  F0CD         	call	___awdiv	;wreg free
 26495  014E24  0101               	movlb	1	; () banked
 26496  014E26  90D8               	bcf	status,0,c
 26497  014E28  371D               	rlcf	?___awdiv& (0+255),f,b
 26498  014E2A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26499  014E2C  90D8               	bcf	status,0,c
 26500  014E2E  371D               	rlcf	?___awdiv& (0+255),f,b
 26501  014E30  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26502  014E32  0E48               	movlw	72
 26503  014E34  271D               	addwf	?___awdiv& (0+255),f,b
 26504  014E36  0E00               	movlw	0
 26505  014E38  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26506  014E3A  0E4D               	movlw	low __powers_
 26507  014E3C  251D               	addwf	?___awdiv& (0+255),w,b
 26508  014E3E  6EF6               	movwf	tblptrl,c
 26509  014E40  0ECF               	movlw	high __powers_
 26510  014E42  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26511  014E44  6EF7               	movwf	tblptrh,c
 26512  014E46                     	if	1	;There are 3 active tblptr bytes
 26513  014E46  6AF8               	clrf	tblptru,c
 26514  014E48  0E00               	movlw	low (__mediumconst shr (0+16))
 26515  014E4A  22F8               	addwfc	tblptru,f,c
 26516  014E4C                     	endif
 26517  014E4C  0009               	tblrd		*+
 26518  014E4E  CFF5 F156          	movff	tablat,___flmul@b
 26519  014E52  0009               	tblrd		*+
 26520  014E54  CFF5 F157          	movff	tablat,___flmul@b+1
 26521  014E58  0009               	tblrd		*+
 26522  014E5A  CFF5 F158          	movff	tablat,___flmul@b+2
 26523  014E5E  000A               	tblrd		*-
 26524  014E60  CFF5 F159          	movff	tablat,___flmul@b+3
 26525  014E64  ECE7  F0AB         	call	___flmul	;wreg free
 26526  014E68  C156  F173         	movff	?___flmul,_scale$5108
 26527  014E6C  C157  F174         	movff	?___flmul+1,_scale$5108+1
 26528  014E70  C158  F175         	movff	?___flmul+2,_scale$5108+2
 26529  014E74  C159  F176         	movff	?___flmul+3,_scale$5108+3
 26530                           
 26531                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26532  014E78  C173  F156         	movff	_scale$5108,___flmul@b
 26533  014E7C  C174  F157         	movff	_scale$5108+1,___flmul@b+1
 26534  014E80  C175  F158         	movff	_scale$5108+2,___flmul@b+2
 26535  014E84  C176  F159         	movff	_scale$5108+3,___flmul@b+3
 26536  014E88  0E00               	movlw	0
 26537  014E8A  0101               	movlb	1	; () banked
 26538  014E8C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26539  014E8E  0E0A               	movlw	10
 26540  014E90  6F19               	movwf	___awmod@divisor& (0+255),b
 26541  014E92  5177               	movf	scale@scl& (0+255),w,b
 26542  014E94  6F17               	movwf	___awmod@dividend& (0+255),b
 26543  014E96  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26544  014E98  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26545  014E9A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26546  014E9C  EC0F  F0CF         	call	___awmod	;wreg free
 26547  014EA0  0101               	movlb	1	; () banked
 26548  014EA2  90D8               	bcf	status,0,c
 26549  014EA4  3717               	rlcf	?___awmod& (0+255),f,b
 26550  014EA6  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26551  014EA8  90D8               	bcf	status,0,c
 26552  014EAA  3717               	rlcf	?___awmod& (0+255),f,b
 26553  014EAC  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26554  014EAE  0E4D               	movlw	low __powers_
 26555  014EB0  2517               	addwf	?___awmod& (0+255),w,b
 26556  014EB2  6EF6               	movwf	tblptrl,c
 26557  014EB4  0ECF               	movlw	high __powers_
 26558  014EB6  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 26559  014EB8  6EF7               	movwf	tblptrh,c
 26560  014EBA                     	if	1	;There are 3 active tblptr bytes
 26561  014EBA  6AF8               	clrf	tblptru,c
 26562  014EBC  0E00               	movlw	low (__mediumconst shr (0+16))
 26563  014EBE  22F8               	addwfc	tblptru,f,c
 26564  014EC0                     	endif
 26565  014EC0  0009               	tblrd		*+
 26566  014EC2  CFF5 F15A          	movff	tablat,___flmul@a
 26567  014EC6  0009               	tblrd		*+
 26568  014EC8  CFF5 F15B          	movff	tablat,___flmul@a+1
 26569  014ECC  0009               	tblrd		*+
 26570  014ECE  CFF5 F15C          	movff	tablat,___flmul@a+2
 26571  014ED2  000A               	tblrd		*-
 26572  014ED4  CFF5 F15D          	movff	tablat,___flmul@a+3
 26573  014ED8  ECE7  F0AB         	call	___flmul	;wreg free
 26574  014EDC  C156  F16F         	movff	?___flmul,?_scale
 26575  014EE0  C157  F170         	movff	?___flmul+1,?_scale+1
 26576  014EE4  C158  F171         	movff	?___flmul+2,?_scale+2
 26577  014EE8  C159  F172         	movff	?___flmul+3,?_scale+3
 26578  014EEC  0012               	return	
 26579  014EEE                     l1902:
 26580                           
 26581                           ;doprnt.c: 438: else if(scl > 10)
 26582  014EEE  0101               	movlb	1	; () banked
 26583  014EF0  5177               	movf	scale@scl& (0+255),w,b
 26584  014EF2  0A80               	xorlw	128
 26585  014EF4  0F75               	addlw	-139
 26586  014EF6  A0D8               	btfss	status,0,c
 26587  014EF8  D05D               	goto	l1904
 26588                           
 26589                           ; BSR set to: 1
 26590                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 26591  014EFA  0E00               	movlw	0
 26592  014EFC  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26593  014EFE  0E0A               	movlw	10
 26594  014F00  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26595  014F02  5177               	movf	scale@scl& (0+255),w,b
 26596  014F04  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26597  014F06  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26598  014F08  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26599  014F0A  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26600  014F0C  EC4B  F0CD         	call	___awdiv	;wreg free
 26601  014F10  0101               	movlb	1	; () banked
 26602  014F12  90D8               	bcf	status,0,c
 26603  014F14  371D               	rlcf	?___awdiv& (0+255),f,b
 26604  014F16  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26605  014F18  90D8               	bcf	status,0,c
 26606  014F1A  371D               	rlcf	?___awdiv& (0+255),f,b
 26607  014F1C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26608  014F1E  0E24               	movlw	36
 26609  014F20  271D               	addwf	?___awdiv& (0+255),f,b
 26610  014F22  0E00               	movlw	0
 26611  014F24  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26612  014F26  0E4D               	movlw	low __powers_
 26613  014F28  251D               	addwf	?___awdiv& (0+255),w,b
 26614  014F2A  6EF6               	movwf	tblptrl,c
 26615  014F2C  0ECF               	movlw	high __powers_
 26616  014F2E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26617  014F30  6EF7               	movwf	tblptrh,c
 26618  014F32                     	if	1	;There are 3 active tblptr bytes
 26619  014F32  6AF8               	clrf	tblptru,c
 26620  014F34  0E00               	movlw	low (__mediumconst shr (0+16))
 26621  014F36  22F8               	addwfc	tblptru,f,c
 26622  014F38                     	endif
 26623  014F38  0009               	tblrd		*+
 26624  014F3A  CFF5 F156          	movff	tablat,___flmul@b
 26625  014F3E  0009               	tblrd		*+
 26626  014F40  CFF5 F157          	movff	tablat,___flmul@b+1
 26627  014F44  0009               	tblrd		*+
 26628  014F46  CFF5 F158          	movff	tablat,___flmul@b+2
 26629  014F4A  000A               	tblrd		*-
 26630  014F4C  CFF5 F159          	movff	tablat,___flmul@b+3
 26631  014F50  0E00               	movlw	0
 26632  014F52  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26633  014F54  0E0A               	movlw	10
 26634  014F56  6F19               	movwf	___awmod@divisor& (0+255),b
 26635  014F58  5177               	movf	scale@scl& (0+255),w,b
 26636  014F5A  6F17               	movwf	___awmod@dividend& (0+255),b
 26637  014F5C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26638  014F5E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26639  014F60  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26640  014F62  EC0F  F0CF         	call	___awmod	;wreg free
 26641  014F66  0101               	movlb	1	; () banked
 26642  014F68  90D8               	bcf	status,0,c
 26643  014F6A  3717               	rlcf	?___awmod& (0+255),f,b
 26644  014F6C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26645  014F6E  90D8               	bcf	status,0,c
 26646  014F70  3717               	rlcf	?___awmod& (0+255),f,b
 26647  014F72  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26648  014F74  0E4D               	movlw	low __powers_
 26649  014F76  2517               	addwf	?___awmod& (0+255),w,b
 26650  014F78  6EF6               	movwf	tblptrl,c
 26651  014F7A  0ECF               	movlw	high __powers_
 26652  014F7C  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 26653  014F7E  6EF7               	movwf	tblptrh,c
 26654  014F80                     	if	1	;There are 3 active tblptr bytes
 26655  014F80  6AF8               	clrf	tblptru,c
 26656  014F82  0E00               	movlw	low (__mediumconst shr (0+16))
 26657  014F84  22F8               	addwfc	tblptru,f,c
 26658  014F86                     	endif
 26659  014F86  0009               	tblrd		*+
 26660  014F88  CFF5 F15A          	movff	tablat,___flmul@a
 26661  014F8C  0009               	tblrd		*+
 26662  014F8E  CFF5 F15B          	movff	tablat,___flmul@a+1
 26663  014F92  0009               	tblrd		*+
 26664  014F94  CFF5 F15C          	movff	tablat,___flmul@a+2
 26665  014F98  000A               	tblrd		*-
 26666  014F9A  CFF5 F15D          	movff	tablat,___flmul@a+3
 26667  014F9E  ECE7  F0AB         	call	___flmul	;wreg free
 26668  014FA2  C156  F16F         	movff	?___flmul,?_scale
 26669  014FA6  C157  F170         	movff	?___flmul+1,?_scale+1
 26670  014FAA  C158  F171         	movff	?___flmul+2,?_scale+2
 26671  014FAE  C159  F172         	movff	?___flmul+3,?_scale+3
 26672  014FB2  0012               	return	
 26673  014FB4                     l1904:
 26674                           
 26675                           ;doprnt.c: 440: return _powers_[scl];
 26676  014FB4  0101               	movlb	1	; () banked
 26677  014FB6  5177               	movf	scale@scl& (0+255),w,b
 26678  014FB8  0D04               	mullw	4
 26679  014FBA  0E4D               	movlw	low __powers_
 26680  014FBC  24F3               	addwf	prodl,w,c
 26681  014FBE  6EF6               	movwf	tblptrl,c
 26682  014FC0  0ECF               	movlw	high __powers_
 26683  014FC2  20F4               	addwfc	prodh,w,c
 26684  014FC4  6EF7               	movwf	tblptrh,c
 26685  014FC6                     	if	1	;There are 3 active tblptr bytes
 26686  014FC6  6AF8               	clrf	tblptru,c
 26687  014FC8  0E00               	movlw	low (__mediumconst shr (0+16))
 26688  014FCA  22F8               	addwfc	tblptru,f,c
 26689  014FCC                     	endif
 26690  014FCC  0009               	tblrd		*+
 26691  014FCE  CFF5 F16F          	movff	tablat,?_scale
 26692  014FD2  0009               	tblrd		*+
 26693  014FD4  CFF5 F170          	movff	tablat,?_scale+1
 26694  014FD8  0009               	tblrd		*+
 26695  014FDA  CFF5 F171          	movff	tablat,?_scale+2
 26696  014FDE  000A               	tblrd		*-
 26697  014FE0  CFF5 F172          	movff	tablat,?_scale+3
 26698  014FE4  0012               	return	
 26699  014FE6                     __end_of_scale:
 26700                           	opt stack 0
 26701                           tosu	equ	0xFFF
 26702                           tosh	equ	0xFFE
 26703                           tosl	equ	0xFFD
 26704                           pclath	equ	0xFFA
 26705                           tblptru	equ	0xFF8
 26706                           tblptrh	equ	0xFF7
 26707                           tblptrl	equ	0xFF6
 26708                           tablat	equ	0xFF5
 26709                           prodh	equ	0xFF4
 26710                           prodl	equ	0xFF3
 26711                           intcon	equ	0xFF2
 26712                           indf0	equ	0xFEF
 26713                           postinc0	equ	0xFEE
 26714                           fsr0h	equ	0xFEA
 26715                           fsr0l	equ	0xFE9
 26716                           wreg	equ	0xFE8
 26717                           indf1	equ	0xFE7
 26718                           postdec1	equ	0xFE5
 26719                           plusw1	equ	0xFE3
 26720                           fsr1h	equ	0xFE2
 26721                           fsr1l	equ	0xFE1
 26722                           indf2	equ	0xFDF
 26723                           postinc2	equ	0xFDE
 26724                           postdec2	equ	0xFDD
 26725                           plusw2	equ	0xFDB
 26726                           fsr2h	equ	0xFDA
 26727                           fsr2l	equ	0xFD9
 26728                           status	equ	0xFD8
 26729                           
 26730 ;; *************** function _putch *****************
 26731 ;; Defined at:
 26732 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 26733 ;; Parameters:    Size  Location     Type
 26734 ;;  txData          1    wreg     unsigned char 
 26735 ;; Auto vars:     Size  Location     Type
 26736 ;;  txData          1   24[BANK1 ] unsigned char 
 26737 ;; Return value:  Size  Location     Type
 26738 ;;                  1    wreg      void 
 26739 ;; Registers used:
 26740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26741 ;; Tracked objects:
 26742 ;;		On entry : 0/0
 26743 ;;		On exit  : 0/0
 26744 ;;		Unchanged: 0/0
 26745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26747 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26749 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26750 ;;Total ram usage:        1 bytes
 26751 ;; Hardware stack levels used:    1
 26752 ;; Hardware stack levels required when called:   14
 26753 ;; This function calls:
 26754 ;;		_EUSART2_Write
 26755 ;; This function is called by:
 26756 ;;		_printf
 26757 ;;		__doprnt
 26758 ;;		i2__doprnt
 26759 ;; This function uses a non-reentrant model
 26760 ;;
 26761                           
 26762                           	psect	text32
 26763  01B054                     __ptext32:
 26764                           	opt stack 0
 26765  01B054                     _putch:
 26766                           	opt stack 0
 26767                           
 26768                           ;Skip over the trampoline to the duplicate function for level 2
 26769  01B054  B25F               	btfsc	btemp,1,c
 26770  01B056  EFCF  F0D8         	goto	i2_putch
 26771  01B05A                     _putch$intlevel0:
 26772                           	opt stack 12
 26773                           
 26774                           ;incstack = 0
 26775                           ;putch@txData stored from wreg
 26776  01B05A  0101               	movlb	1	; () banked
 26777  01B05C  6F18               	movwf	putch@txData& (0+255),b
 26778                           
 26779                           ;eusart2.c: 187: EUSART2_Write(txData);
 26780  01B05E  0101               	movlb	1	; () banked
 26781  01B060  5118               	movf	putch@txData& (0+255),w,b
 26782  01B062  EC01  F0D3         	call	_EUSART2_Write
 26783  01B066  0012               	return		;funcret
 26784  01B068                     __end_of_putch:
 26785                           	opt stack 0
 26786                           tosu	equ	0xFFF
 26787                           tosh	equ	0xFFE
 26788                           tosl	equ	0xFFD
 26789                           pclath	equ	0xFFA
 26790                           tblptru	equ	0xFF8
 26791                           tblptrh	equ	0xFF7
 26792                           tblptrl	equ	0xFF6
 26793                           tablat	equ	0xFF5
 26794                           prodh	equ	0xFF4
 26795                           prodl	equ	0xFF3
 26796                           intcon	equ	0xFF2
 26797                           indf0	equ	0xFEF
 26798                           postinc0	equ	0xFEE
 26799                           fsr0h	equ	0xFEA
 26800                           fsr0l	equ	0xFE9
 26801                           wreg	equ	0xFE8
 26802                           indf1	equ	0xFE7
 26803                           postdec1	equ	0xFE5
 26804                           plusw1	equ	0xFE3
 26805                           fsr1h	equ	0xFE2
 26806                           fsr1l	equ	0xFE1
 26807                           indf2	equ	0xFDF
 26808                           postinc2	equ	0xFDE
 26809                           postdec2	equ	0xFDD
 26810                           plusw2	equ	0xFDB
 26811                           fsr2h	equ	0xFDA
 26812                           fsr2l	equ	0xFD9
 26813                           status	equ	0xFD8
 26814                           
 26815 ;; *************** function _EUSART2_Write *****************
 26816 ;; Defined at:
 26817 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 26818 ;; Parameters:    Size  Location     Type
 26819 ;;  txData          1    wreg     unsigned char 
 26820 ;; Auto vars:     Size  Location     Type
 26821 ;;  txData          1   23[BANK1 ] unsigned char 
 26822 ;; Return value:  Size  Location     Type
 26823 ;;                  1    wreg      void 
 26824 ;; Registers used:
 26825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26826 ;; Tracked objects:
 26827 ;;		On entry : 0/0
 26828 ;;		On exit  : 0/0
 26829 ;;		Unchanged: 0/0
 26830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26832 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26834 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26835 ;;Total ram usage:        1 bytes
 26836 ;; Hardware stack levels used:    1
 26837 ;; Hardware stack levels required when called:   13
 26838 ;; This function calls:
 26839 ;;		Nothing
 26840 ;; This function is called by:
 26841 ;;		_putch
 26842 ;; This function uses a non-reentrant model
 26843 ;;
 26844                           
 26845                           	psect	text33
 26846  01A602                     __ptext33:
 26847                           	opt stack 0
 26848  01A602                     _EUSART2_Write:
 26849                           	opt stack 12
 26850                           
 26851                           ;incstack = 0
 26852                           ;EUSART2_Write@txData stored from wreg
 26853  01A602  0101               	movlb	1	; () banked
 26854  01A604  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 26855                           
 26856                           ;eusart2.c: 157: while(0 == eusart2TxBufferRemaining)
 26857  01A606  D002               	goto	l426
 26858  01A608                     l427:
 26859                           
 26860                           ; BSR set to: 1
 26861  01A608  0004               	clrwdt		;# 
 26862                           
 26863                           ;eusart2.c: 160: LATFbits.LATF1 = 1;
 26864  01A60A  827E               	bsf	3966,1,c	;volatile
 26865  01A60C                     l426:
 26866  01A60C  0101               	movlb	1	; () banked
 26867  01A60E  51DF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 26868  01A610  B4D8               	btfsc	status,2,c
 26869  01A612  D7FA               	goto	l427
 26870                           
 26871                           ; BSR set to: 1
 26872                           ;eusart2.c: 161: }
 26873                           ;eusart2.c: 163: if(0 == PIE3bits.TX2IE)
 26874  01A614  010E               	movlb	14	; () banked
 26875  01A616  BD2C               	btfsc	44,6,b	;volatile
 26876  01A618  D003               	goto	l429
 26877                           
 26878                           ; BSR set to: 14
 26879                           ;eusart2.c: 164: {
 26880                           ;eusart2.c: 165: TX2REG = txData;
 26881  01A61A  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 26882                           
 26883                           ;eusart2.c: 166: }
 26884  01A61E  D013               	goto	l430
 26885  01A620                     l429:
 26886                           
 26887                           ; BSR set to: 14
 26888                           ;eusart2.c: 167: else
 26889                           ;eusart2.c: 168: {
 26890                           ;eusart2.c: 169: PIE3bits.TX2IE = 0;
 26891  01A620  9D2C               	bcf	44,6,b	;volatile
 26892                           
 26893                           ; BSR set to: 14
 26894                           ;eusart2.c: 170: eusart2TxBuffer[eusart2TxHead++] = txData;
 26895  01A622  0101               	movlb	1	; () banked
 26896  01A624  51E1               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 26897  01A626  0D01               	mullw	1
 26898  01A628  0E00               	movlw	low _eusart2TxBuffer
 26899  01A62A  24F3               	addwf	prodl,w,c
 26900  01A62C  6ED9               	movwf	fsr2l,c
 26901  01A62E  0E03               	movlw	high _eusart2TxBuffer
 26902  01A630  20F4               	addwfc	prodh,w,c
 26903  01A632  6EDA               	movwf	fsr2h,c
 26904  01A634  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 26905                           
 26906                           ; BSR set to: 1
 26907  01A638  2BE1               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 26908                           
 26909                           ; BSR set to: 1
 26910                           ;eusart2.c: 171: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 26911  01A63A  0E7F               	movlw	127
 26912  01A63C  65E1               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 26913  01A63E  D002               	goto	l431
 26914                           
 26915                           ; BSR set to: 1
 26916                           ;eusart2.c: 172: {
 26917                           ;eusart2.c: 173: eusart2TxHead = 0;
 26918  01A640  0E00               	movlw	0
 26919  01A642  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 26920  01A644                     l431:
 26921                           
 26922                           ; BSR set to: 1
 26923                           ;eusart2.c: 174: }
 26924                           ;eusart2.c: 175: eusart2TxBufferRemaining--;
 26925                           
 26926                           ; BSR set to: 1
 26927  01A644  07DF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 26928  01A646                     l430:
 26929                           
 26930                           ;eusart2.c: 176: }
 26931                           ;eusart2.c: 177: PIE3bits.TX2IE = 1;
 26932                           
 26933                           ; BSR set to: 1
 26934  01A646  010E               	movlb	14	; () banked
 26935  01A648  8D2C               	bsf	44,6,b	;volatile
 26936                           
 26937                           ; BSR set to: 14
 26938  01A64A  0012               	return		;funcret
 26939  01A64C                     __end_of_EUSART2_Write:
 26940                           	opt stack 0
 26941                           tosu	equ	0xFFF
 26942                           tosh	equ	0xFFE
 26943                           tosl	equ	0xFFD
 26944                           pclath	equ	0xFFA
 26945                           tblptru	equ	0xFF8
 26946                           tblptrh	equ	0xFF7
 26947                           tblptrl	equ	0xFF6
 26948                           tablat	equ	0xFF5
 26949                           prodh	equ	0xFF4
 26950                           prodl	equ	0xFF3
 26951                           intcon	equ	0xFF2
 26952                           indf0	equ	0xFEF
 26953                           postinc0	equ	0xFEE
 26954                           fsr0h	equ	0xFEA
 26955                           fsr0l	equ	0xFE9
 26956                           wreg	equ	0xFE8
 26957                           indf1	equ	0xFE7
 26958                           postdec1	equ	0xFE5
 26959                           plusw1	equ	0xFE3
 26960                           fsr1h	equ	0xFE2
 26961                           fsr1l	equ	0xFE1
 26962                           indf2	equ	0xFDF
 26963                           postinc2	equ	0xFDE
 26964                           postdec2	equ	0xFDD
 26965                           plusw2	equ	0xFDB
 26966                           fsr2h	equ	0xFDA
 26967                           fsr2l	equ	0xFD9
 26968                           status	equ	0xFD8
 26969                           
 26970 ;; *************** function _isdigit *****************
 26971 ;; Defined at:
 26972 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 26973 ;; Parameters:    Size  Location     Type
 26974 ;;  c               1    wreg     unsigned char 
 26975 ;; Auto vars:     Size  Location     Type
 26976 ;;  c               1   25[BANK1 ] unsigned char 
 26977 ;; Return value:  Size  Location     Type
 26978 ;;		None               void
 26979 ;; Registers used:
 26980 ;;		wreg, status,2, status,0
 26981 ;; Tracked objects:
 26982 ;;		On entry : 0/0
 26983 ;;		On exit  : 0/0
 26984 ;;		Unchanged: 0/0
 26985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26987 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26988 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26989 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26990 ;;Total ram usage:        3 bytes
 26991 ;; Hardware stack levels used:    1
 26992 ;; Hardware stack levels required when called:   13
 26993 ;; This function calls:
 26994 ;;		Nothing
 26995 ;; This function is called by:
 26996 ;;		__doprnt
 26997 ;;		_atoi
 26998 ;; This function uses a non-reentrant model
 26999 ;;
 27000                           
 27001                           	psect	text34
 27002  01AEE8                     __ptext34:
 27003                           	opt stack 0
 27004  01AEE8                     _isdigit:
 27005                           	opt stack 13
 27006                           
 27007                           ; BSR set to: 14
 27008                           ;incstack = 0
 27009                           ;isdigit@c stored from wreg
 27010  01AEE8  0101               	movlb	1	; () banked
 27011  01AEEA  6F19               	movwf	isdigit@c& (0+255),b
 27012  01AEEC  0E00               	movlw	0
 27013  01AEEE  0101               	movlb	1	; () banked
 27014  01AEF0  6F18               	movwf	_isdigit$4252& (0+255),b
 27015                           
 27016                           ; BSR set to: 1
 27017  01AEF2  0E3A               	movlw	58
 27018  01AEF4  6119               	cpfslt	isdigit@c& (0+255),b
 27019  01AEF6  D005               	goto	l2523
 27020                           
 27021                           ; BSR set to: 1
 27022  01AEF8  0E2F               	movlw	47
 27023  01AEFA  6519               	cpfsgt	isdigit@c& (0+255),b
 27024  01AEFC  D002               	goto	l2523
 27025                           
 27026                           ; BSR set to: 1
 27027  01AEFE  0E01               	movlw	1
 27028  01AF00  6F18               	movwf	_isdigit$4252& (0+255),b
 27029  01AF02                     l2523:
 27030                           
 27031                           ; BSR set to: 1
 27032                           
 27033                           ; BSR set to: 1
 27034  01AF02  C118  F117         	movff	_isdigit$4252,??_isdigit
 27035  01AF06  3117               	rrcf	??_isdigit& (0+255),w,b
 27036  01AF08  0012               	return	
 27037  01AF0A                     __end_of_isdigit:
 27038                           	opt stack 0
 27039                           tosu	equ	0xFFF
 27040                           tosh	equ	0xFFE
 27041                           tosl	equ	0xFFD
 27042                           pclath	equ	0xFFA
 27043                           tblptru	equ	0xFF8
 27044                           tblptrh	equ	0xFF7
 27045                           tblptrl	equ	0xFF6
 27046                           tablat	equ	0xFF5
 27047                           prodh	equ	0xFF4
 27048                           prodl	equ	0xFF3
 27049                           intcon	equ	0xFF2
 27050                           indf0	equ	0xFEF
 27051                           postinc0	equ	0xFEE
 27052                           fsr0h	equ	0xFEA
 27053                           fsr0l	equ	0xFE9
 27054                           wreg	equ	0xFE8
 27055                           indf1	equ	0xFE7
 27056                           postdec1	equ	0xFE5
 27057                           plusw1	equ	0xFE3
 27058                           fsr1h	equ	0xFE2
 27059                           fsr1l	equ	0xFE1
 27060                           indf2	equ	0xFDF
 27061                           postinc2	equ	0xFDE
 27062                           postdec2	equ	0xFDD
 27063                           plusw2	equ	0xFDB
 27064                           fsr2h	equ	0xFDA
 27065                           fsr2l	equ	0xFD9
 27066                           status	equ	0xFD8
 27067                           
 27068 ;; *************** function _fround *****************
 27069 ;; Defined at:
 27070 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 27071 ;; Parameters:    Size  Location     Type
 27072 ;;  prec            1    wreg     unsigned char 
 27073 ;; Auto vars:     Size  Location     Type
 27074 ;;  prec            1  123[BANK1 ] unsigned char 
 27075 ;; Return value:  Size  Location     Type
 27076 ;;                  4  111[BANK1 ] unsigned char 
 27077 ;; Registers used:
 27078 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27079 ;; Tracked objects:
 27080 ;;		On entry : 0/0
 27081 ;;		On exit  : 0/0
 27082 ;;		Unchanged: 0/0
 27083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27084 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27085 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27087 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27088 ;;Total ram usage:       13 bytes
 27089 ;; Hardware stack levels used:    1
 27090 ;; Hardware stack levels required when called:   14
 27091 ;; This function calls:
 27092 ;;		___awdiv
 27093 ;;		___awmod
 27094 ;;		___flmul
 27095 ;; This function is called by:
 27096 ;;		__doprnt
 27097 ;; This function uses a non-reentrant model
 27098 ;;
 27099                           
 27100                           	psect	text35
 27101  016DB2                     __ptext35:
 27102                           	opt stack 0
 27103  016DB2                     _fround:
 27104                           	opt stack 12
 27105                           
 27106                           ; BSR set to: 1
 27107                           ;incstack = 0
 27108                           ;fround@prec stored from wreg
 27109  016DB2  0101               	movlb	1	; () banked
 27110  016DB4  6F7B               	movwf	fround@prec& (0+255),b
 27111                           
 27112                           ;doprnt.c: 413: if(prec>=110)
 27113  016DB6  0E6D               	movlw	109
 27114  016DB8  0101               	movlb	1	; () banked
 27115  016DBA  657B               	cpfsgt	fround@prec& (0+255),b
 27116  016DBC  D0BA               	goto	l1891
 27117                           
 27118                           ; BSR set to: 1
 27119                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27120  016DBE  0E00               	movlw	0
 27121  016DC0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27122  016DC2  0E0A               	movlw	10
 27123  016DC4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27124  016DC6  0E00               	movlw	0
 27125  016DC8  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27126  016DCA  0E64               	movlw	100
 27127  016DCC  6F19               	movwf	___awmod@divisor& (0+255),b
 27128  016DCE  C17B  F117         	movff	fround@prec,___awmod@dividend
 27129  016DD2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27130  016DD4  EC0F  F0CF         	call	___awmod	;wreg free
 27131  016DD8  C117  F11D         	movff	?___awmod,___awdiv@dividend
 27132  016DDC  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 27133  016DE0  EC4B  F0CD         	call	___awdiv	;wreg free
 27134  016DE4  0101               	movlb	1	; () banked
 27135  016DE6  90D8               	bcf	status,0,c
 27136  016DE8  371D               	rlcf	?___awdiv& (0+255),f,b
 27137  016DEA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27138  016DEC  90D8               	bcf	status,0,c
 27139  016DEE  371D               	rlcf	?___awdiv& (0+255),f,b
 27140  016DF0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27141  016DF2  0E24               	movlw	36
 27142  016DF4  271D               	addwf	?___awdiv& (0+255),f,b
 27143  016DF6  0E00               	movlw	0
 27144  016DF8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27145  016DFA  0E81               	movlw	low __npowers_
 27146  016DFC  251D               	addwf	?___awdiv& (0+255),w,b
 27147  016DFE  6EF6               	movwf	tblptrl,c
 27148  016E00  0ECF               	movlw	high __npowers_
 27149  016E02  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27150  016E04  6EF7               	movwf	tblptrh,c
 27151  016E06                     	if	1	;There are 3 active tblptr bytes
 27152  016E06  6AF8               	clrf	tblptru,c
 27153  016E08  0E00               	movlw	low (__mediumconst shr (0+16))
 27154  016E0A  22F8               	addwfc	tblptru,f,c
 27155  016E0C                     	endif
 27156  016E0C  0009               	tblrd		*+
 27157  016E0E  CFF5 F15A          	movff	tablat,___flmul@a
 27158  016E12  0009               	tblrd		*+
 27159  016E14  CFF5 F15B          	movff	tablat,___flmul@a+1
 27160  016E18  0009               	tblrd		*+
 27161  016E1A  CFF5 F15C          	movff	tablat,___flmul@a+2
 27162  016E1E  000A               	tblrd		*-
 27163  016E20  CFF5 F15D          	movff	tablat,___flmul@a+3
 27164  016E24  0E00               	movlw	0
 27165  016E26  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27166  016E28  0E64               	movlw	100
 27167  016E2A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27168  016E2C  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 27169  016E30  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27170  016E32  EC4B  F0CD         	call	___awdiv	;wreg free
 27171  016E36  0101               	movlb	1	; () banked
 27172  016E38  90D8               	bcf	status,0,c
 27173  016E3A  371D               	rlcf	?___awdiv& (0+255),f,b
 27174  016E3C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27175  016E3E  90D8               	bcf	status,0,c
 27176  016E40  371D               	rlcf	?___awdiv& (0+255),f,b
 27177  016E42  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27178  016E44  0E48               	movlw	72
 27179  016E46  271D               	addwf	?___awdiv& (0+255),f,b
 27180  016E48  0E00               	movlw	0
 27181  016E4A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27182  016E4C  0E81               	movlw	low __npowers_
 27183  016E4E  251D               	addwf	?___awdiv& (0+255),w,b
 27184  016E50  6EF6               	movwf	tblptrl,c
 27185  016E52  0ECF               	movlw	high __npowers_
 27186  016E54  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27187  016E56  6EF7               	movwf	tblptrh,c
 27188  016E58                     	if	1	;There are 3 active tblptr bytes
 27189  016E58  6AF8               	clrf	tblptru,c
 27190  016E5A  0E00               	movlw	low (__mediumconst shr (0+16))
 27191  016E5C  22F8               	addwfc	tblptru,f,c
 27192  016E5E                     	endif
 27193  016E5E  0009               	tblrd		*+
 27194  016E60  CFF5 F156          	movff	tablat,___flmul@b
 27195  016E64  0009               	tblrd		*+
 27196  016E66  CFF5 F157          	movff	tablat,___flmul@b+1
 27197  016E6A  0009               	tblrd		*+
 27198  016E6C  CFF5 F158          	movff	tablat,___flmul@b+2
 27199  016E70  000A               	tblrd		*-
 27200  016E72  CFF5 F159          	movff	tablat,___flmul@b+3
 27201  016E76  ECE7  F0AB         	call	___flmul	;wreg free
 27202  016E7A  C156  F177         	movff	?___flmul,_fround$5106
 27203  016E7E  C157  F178         	movff	?___flmul+1,_fround$5106+1
 27204  016E82  C158  F179         	movff	?___flmul+2,_fround$5106+2
 27205  016E86  C159  F17A         	movff	?___flmul+3,_fround$5106+3
 27206                           
 27207                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27208  016E8A  0E00               	movlw	0
 27209  016E8C  0101               	movlb	1	; () banked
 27210  016E8E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27211  016E90  0E0A               	movlw	10
 27212  016E92  6F19               	movwf	___awmod@divisor& (0+255),b
 27213  016E94  C17B  F117         	movff	fround@prec,___awmod@dividend
 27214  016E98  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27215  016E9A  EC0F  F0CF         	call	___awmod	;wreg free
 27216  016E9E  0101               	movlb	1	; () banked
 27217  016EA0  90D8               	bcf	status,0,c
 27218  016EA2  3717               	rlcf	?___awmod& (0+255),f,b
 27219  016EA4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27220  016EA6  90D8               	bcf	status,0,c
 27221  016EA8  3717               	rlcf	?___awmod& (0+255),f,b
 27222  016EAA  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27223  016EAC  0E81               	movlw	low __npowers_
 27224  016EAE  2517               	addwf	?___awmod& (0+255),w,b
 27225  016EB0  6EF6               	movwf	tblptrl,c
 27226  016EB2  0ECF               	movlw	high __npowers_
 27227  016EB4  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27228  016EB6  6EF7               	movwf	tblptrh,c
 27229  016EB8                     	if	1	;There are 3 active tblptr bytes
 27230  016EB8  6AF8               	clrf	tblptru,c
 27231  016EBA  0E00               	movlw	low (__mediumconst shr (0+16))
 27232  016EBC  22F8               	addwfc	tblptru,f,c
 27233  016EBE                     	endif
 27234  016EBE  0009               	tblrd		*+
 27235  016EC0  CFF5 F15A          	movff	tablat,___flmul@a
 27236  016EC4  0009               	tblrd		*+
 27237  016EC6  CFF5 F15B          	movff	tablat,___flmul@a+1
 27238  016ECA  0009               	tblrd		*+
 27239  016ECC  CFF5 F15C          	movff	tablat,___flmul@a+2
 27240  016ED0  000A               	tblrd		*-
 27241  016ED2  CFF5 F15D          	movff	tablat,___flmul@a+3
 27242  016ED6  C177  F156         	movff	_fround$5106,___flmul@b
 27243  016EDA  C178  F157         	movff	_fround$5106+1,___flmul@b+1
 27244  016EDE  C179  F158         	movff	_fround$5106+2,___flmul@b+2
 27245  016EE2  C17A  F159         	movff	_fround$5106+3,___flmul@b+3
 27246  016EE6  ECE7  F0AB         	call	___flmul	;wreg free
 27247  016EEA  C156  F173         	movff	?___flmul,_fround$5107
 27248  016EEE  C157  F174         	movff	?___flmul+1,_fround$5107+1
 27249  016EF2  C158  F175         	movff	?___flmul+2,_fround$5107+2
 27250  016EF6  C159  F176         	movff	?___flmul+3,_fround$5107+3
 27251                           
 27252                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27253  016EFA  C173  F156         	movff	_fround$5107,___flmul@b
 27254  016EFE  C174  F157         	movff	_fround$5107+1,___flmul@b+1
 27255  016F02  C175  F158         	movff	_fround$5107+2,___flmul@b+2
 27256  016F06  C176  F159         	movff	_fround$5107+3,___flmul@b+3
 27257  016F0A  0E00               	movlw	0
 27258  016F0C  0101               	movlb	1	; () banked
 27259  016F0E  6F5A               	movwf	___flmul@a& (0+255),b
 27260  016F10  0E00               	movlw	0
 27261  016F12  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27262  016F14  0E00               	movlw	0
 27263  016F16  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27264  016F18  0E3F               	movlw	63
 27265  016F1A  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27266  016F1C  ECE7  F0AB         	call	___flmul	;wreg free
 27267  016F20  C156  F16F         	movff	?___flmul,?_fround
 27268  016F24  C157  F170         	movff	?___flmul+1,?_fround+1
 27269  016F28  C158  F171         	movff	?___flmul+2,?_fround+2
 27270  016F2C  C159  F172         	movff	?___flmul+3,?_fround+3
 27271  016F30  0012               	return	
 27272  016F32                     l1891:
 27273                           
 27274                           ;doprnt.c: 415: else if(prec > 10)
 27275  016F32  0E0A               	movlw	10
 27276  016F34  0101               	movlb	1	; () banked
 27277  016F36  657B               	cpfsgt	fround@prec& (0+255),b
 27278  016F38  D074               	goto	l1894
 27279                           
 27280                           ; BSR set to: 1
 27281                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27282  016F3A  0E00               	movlw	0
 27283  016F3C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27284  016F3E  0E0A               	movlw	10
 27285  016F40  6F19               	movwf	___awmod@divisor& (0+255),b
 27286  016F42  C17B  F117         	movff	fround@prec,___awmod@dividend
 27287  016F46  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27288  016F48  EC0F  F0CF         	call	___awmod	;wreg free
 27289  016F4C  0101               	movlb	1	; () banked
 27290  016F4E  90D8               	bcf	status,0,c
 27291  016F50  3717               	rlcf	?___awmod& (0+255),f,b
 27292  016F52  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27293  016F54  90D8               	bcf	status,0,c
 27294  016F56  3717               	rlcf	?___awmod& (0+255),f,b
 27295  016F58  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27296  016F5A  0E81               	movlw	low __npowers_
 27297  016F5C  2517               	addwf	?___awmod& (0+255),w,b
 27298  016F5E  6EF6               	movwf	tblptrl,c
 27299  016F60  0ECF               	movlw	high __npowers_
 27300  016F62  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27301  016F64  6EF7               	movwf	tblptrh,c
 27302  016F66                     	if	1	;There are 3 active tblptr bytes
 27303  016F66  6AF8               	clrf	tblptru,c
 27304  016F68  0E00               	movlw	low (__mediumconst shr (0+16))
 27305  016F6A  22F8               	addwfc	tblptru,f,c
 27306  016F6C                     	endif
 27307  016F6C  0009               	tblrd		*+
 27308  016F6E  CFF5 F15A          	movff	tablat,___flmul@a
 27309  016F72  0009               	tblrd		*+
 27310  016F74  CFF5 F15B          	movff	tablat,___flmul@a+1
 27311  016F78  0009               	tblrd		*+
 27312  016F7A  CFF5 F15C          	movff	tablat,___flmul@a+2
 27313  016F7E  000A               	tblrd		*-
 27314  016F80  CFF5 F15D          	movff	tablat,___flmul@a+3
 27315  016F84  0E00               	movlw	0
 27316  016F86  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27317  016F88  0E0A               	movlw	10
 27318  016F8A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27319  016F8C  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 27320  016F90  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27321  016F92  EC4B  F0CD         	call	___awdiv	;wreg free
 27322  016F96  0101               	movlb	1	; () banked
 27323  016F98  90D8               	bcf	status,0,c
 27324  016F9A  371D               	rlcf	?___awdiv& (0+255),f,b
 27325  016F9C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27326  016F9E  90D8               	bcf	status,0,c
 27327  016FA0  371D               	rlcf	?___awdiv& (0+255),f,b
 27328  016FA2  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27329  016FA4  0E24               	movlw	36
 27330  016FA6  271D               	addwf	?___awdiv& (0+255),f,b
 27331  016FA8  0E00               	movlw	0
 27332  016FAA  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27333  016FAC  0E81               	movlw	low __npowers_
 27334  016FAE  251D               	addwf	?___awdiv& (0+255),w,b
 27335  016FB0  6EF6               	movwf	tblptrl,c
 27336  016FB2  0ECF               	movlw	high __npowers_
 27337  016FB4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27338  016FB6  6EF7               	movwf	tblptrh,c
 27339  016FB8                     	if	1	;There are 3 active tblptr bytes
 27340  016FB8  6AF8               	clrf	tblptru,c
 27341  016FBA  0E00               	movlw	low (__mediumconst shr (0+16))
 27342  016FBC  22F8               	addwfc	tblptru,f,c
 27343  016FBE                     	endif
 27344  016FBE  0009               	tblrd		*+
 27345  016FC0  CFF5 F156          	movff	tablat,___flmul@b
 27346  016FC4  0009               	tblrd		*+
 27347  016FC6  CFF5 F157          	movff	tablat,___flmul@b+1
 27348  016FCA  0009               	tblrd		*+
 27349  016FCC  CFF5 F158          	movff	tablat,___flmul@b+2
 27350  016FD0  000A               	tblrd		*-
 27351  016FD2  CFF5 F159          	movff	tablat,___flmul@b+3
 27352  016FD6  ECE7  F0AB         	call	___flmul	;wreg free
 27353  016FDA  C156  F177         	movff	?___flmul,_fround$5106
 27354  016FDE  C157  F178         	movff	?___flmul+1,_fround$5106+1
 27355  016FE2  C158  F179         	movff	?___flmul+2,_fround$5106+2
 27356  016FE6  C159  F17A         	movff	?___flmul+3,_fround$5106+3
 27357                           
 27358                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27359  016FEA  C177  F156         	movff	_fround$5106,___flmul@b
 27360  016FEE  C178  F157         	movff	_fround$5106+1,___flmul@b+1
 27361  016FF2  C179  F158         	movff	_fround$5106+2,___flmul@b+2
 27362  016FF6  C17A  F159         	movff	_fround$5106+3,___flmul@b+3
 27363  016FFA  0E00               	movlw	0
 27364  016FFC  0101               	movlb	1	; () banked
 27365  016FFE  6F5A               	movwf	___flmul@a& (0+255),b
 27366  017000  0E00               	movlw	0
 27367  017002  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27368  017004  0E00               	movlw	0
 27369  017006  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27370  017008  0E3F               	movlw	63
 27371  01700A  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27372  01700C  ECE7  F0AB         	call	___flmul	;wreg free
 27373  017010  C156  F16F         	movff	?___flmul,?_fround
 27374  017014  C157  F170         	movff	?___flmul+1,?_fround+1
 27375  017018  C158  F171         	movff	?___flmul+2,?_fround+2
 27376  01701C  C159  F172         	movff	?___flmul+3,?_fround+3
 27377  017020  0012               	return	
 27378  017022                     l1894:
 27379                           
 27380                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 27381  017022  0101               	movlb	1	; () banked
 27382  017024  517B               	movf	fround@prec& (0+255),w,b
 27383  017026  0D04               	mullw	4
 27384  017028  0E81               	movlw	low __npowers_
 27385  01702A  24F3               	addwf	prodl,w,c
 27386  01702C  6EF6               	movwf	tblptrl,c
 27387  01702E  0ECF               	movlw	high __npowers_
 27388  017030  20F4               	addwfc	prodh,w,c
 27389  017032  6EF7               	movwf	tblptrh,c
 27390  017034                     	if	1	;There are 3 active tblptr bytes
 27391  017034  6AF8               	clrf	tblptru,c
 27392  017036  0E00               	movlw	low (__mediumconst shr (0+16))
 27393  017038  22F8               	addwfc	tblptru,f,c
 27394  01703A                     	endif
 27395  01703A  0009               	tblrd		*+
 27396  01703C  CFF5 F156          	movff	tablat,___flmul@b
 27397  017040  0009               	tblrd		*+
 27398  017042  CFF5 F157          	movff	tablat,___flmul@b+1
 27399  017046  0009               	tblrd		*+
 27400  017048  CFF5 F158          	movff	tablat,___flmul@b+2
 27401  01704C  000A               	tblrd		*-
 27402  01704E  CFF5 F159          	movff	tablat,___flmul@b+3
 27403  017052  0E00               	movlw	0
 27404  017054  6F5A               	movwf	___flmul@a& (0+255),b
 27405  017056  0E00               	movlw	0
 27406  017058  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27407  01705A  0E00               	movlw	0
 27408  01705C  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27409  01705E  0E3F               	movlw	63
 27410  017060  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27411  017062  ECE7  F0AB         	call	___flmul	;wreg free
 27412  017066  C156  F16F         	movff	?___flmul,?_fround
 27413  01706A  C157  F170         	movff	?___flmul+1,?_fround+1
 27414  01706E  C158  F171         	movff	?___flmul+2,?_fround+2
 27415  017072  C159  F172         	movff	?___flmul+3,?_fround+3
 27416  017076  0012               	return	
 27417  017078                     __end_of_fround:
 27418                           	opt stack 0
 27419                           tosu	equ	0xFFF
 27420                           tosh	equ	0xFFE
 27421                           tosl	equ	0xFFD
 27422                           pclath	equ	0xFFA
 27423                           tblptru	equ	0xFF8
 27424                           tblptrh	equ	0xFF7
 27425                           tblptrl	equ	0xFF6
 27426                           tablat	equ	0xFF5
 27427                           prodh	equ	0xFF4
 27428                           prodl	equ	0xFF3
 27429                           intcon	equ	0xFF2
 27430                           indf0	equ	0xFEF
 27431                           postinc0	equ	0xFEE
 27432                           fsr0h	equ	0xFEA
 27433                           fsr0l	equ	0xFE9
 27434                           wreg	equ	0xFE8
 27435                           indf1	equ	0xFE7
 27436                           postdec1	equ	0xFE5
 27437                           plusw1	equ	0xFE3
 27438                           fsr1h	equ	0xFE2
 27439                           fsr1l	equ	0xFE1
 27440                           indf2	equ	0xFDF
 27441                           postinc2	equ	0xFDE
 27442                           postdec2	equ	0xFDD
 27443                           plusw2	equ	0xFDB
 27444                           fsr2h	equ	0xFDA
 27445                           fsr2l	equ	0xFD9
 27446                           status	equ	0xFD8
 27447                           
 27448 ;; *************** function ___flmul *****************
 27449 ;; Defined at:
 27450 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 27451 ;; Parameters:    Size  Location     Type
 27452 ;;  b               4   86[BANK1 ] unsigned char 
 27453 ;;  a               4   90[BANK1 ] unsigned char 
 27454 ;; Auto vars:     Size  Location     Type
 27455 ;;  prod            4  105[BANK1 ] struct .
 27456 ;;  grs             4  100[BANK1 ] unsigned long 
 27457 ;;  temp            2  109[BANK1 ] struct .
 27458 ;;  bexp            1  104[BANK1 ] unsigned char 
 27459 ;;  aexp            1   99[BANK1 ] unsigned char 
 27460 ;;  sign            1   98[BANK1 ] unsigned char 
 27461 ;; Return value:  Size  Location     Type
 27462 ;;                  4   86[BANK1 ] unsigned char 
 27463 ;; Registers used:
 27464 ;;		wreg, status,2, status,0, prodl, prodh
 27465 ;; Tracked objects:
 27466 ;;		On entry : 0/0
 27467 ;;		On exit  : 0/0
 27468 ;;		Unchanged: 0/0
 27469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27470 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27471 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27472 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27473 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27474 ;;Total ram usage:       25 bytes
 27475 ;; Hardware stack levels used:    1
 27476 ;; Hardware stack levels required when called:   13
 27477 ;; This function calls:
 27478 ;;		Nothing
 27479 ;; This function is called by:
 27480 ;;		_ringBufferLUT
 27481 ;;		_fround
 27482 ;;		_scale
 27483 ;;		__doprnt
 27484 ;;		_ftoa
 27485 ;; This function uses a non-reentrant model
 27486 ;;
 27487                           
 27488                           	psect	text36
 27489  0157CE                     __ptext36:
 27490                           	opt stack 0
 27491  0157CE                     ___flmul:
 27492                           	opt stack 12
 27493                           
 27494                           ;incstack = 0
 27495  0157CE  0101               	movlb	1	; () banked
 27496  0157D0  5159               	movf	(___flmul@b+3)& (0+255),w,b
 27497  0157D2  0B80               	andlw	128
 27498  0157D4  6F62               	movwf	___flmul@sign& (0+255),b
 27499  0157D6  5159               	movf	(___flmul@b+3)& (0+255),w,b
 27500  0157D8  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 27501  0157DA  6F68               	movwf	___flmul@bexp& (0+255),b
 27502                           
 27503                           ; BSR set to: 1
 27504  0157DC  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 27505                           
 27506                           ; BSR set to: 1
 27507  0157DE  8168               	bsf	___flmul@bexp& (0+255),0,b
 27508                           
 27509                           ; BSR set to: 1
 27510                           
 27511                           ; BSR set to: 1
 27512  0157E0  5168               	movf	___flmul@bexp& (0+255),w,b
 27513  0157E2  B4D8               	btfsc	status,2,c
 27514  0157E4  D00D               	goto	l2770
 27515                           
 27516                           ; BSR set to: 1
 27517  0157E6  2968               	incf	___flmul@bexp& (0+255),w,b
 27518  0157E8  A4D8               	btfss	status,2,c
 27519  0157EA  D008               	goto	l2771
 27520                           
 27521                           ; BSR set to: 1
 27522  0157EC  0E00               	movlw	0
 27523  0157EE  6F56               	movwf	___flmul@b& (0+255),b
 27524  0157F0  0E00               	movlw	0
 27525  0157F2  6F57               	movwf	(___flmul@b+1)& (0+255),b
 27526  0157F4  0E00               	movlw	0
 27527  0157F6  6F58               	movwf	(___flmul@b+2)& (0+255),b
 27528  0157F8  0E00               	movlw	0
 27529  0157FA  6F59               	movwf	(___flmul@b+3)& (0+255),b
 27530  0157FC                     l2771:
 27531                           
 27532                           ; BSR set to: 1
 27533                           
 27534                           ; BSR set to: 1
 27535  0157FC  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 27536  0157FE  D008               	goto	l2772
 27537  015800                     l2770:
 27538                           
 27539                           ; BSR set to: 1
 27540                           
 27541                           ; BSR set to: 1
 27542  015800  0E00               	movlw	0
 27543  015802  6F56               	movwf	___flmul@b& (0+255),b
 27544  015804  0E00               	movlw	0
 27545  015806  6F57               	movwf	(___flmul@b+1)& (0+255),b
 27546  015808  0E00               	movlw	0
 27547  01580A  6F58               	movwf	(___flmul@b+2)& (0+255),b
 27548  01580C  0E00               	movlw	0
 27549  01580E  6F59               	movwf	(___flmul@b+3)& (0+255),b
 27550  015810                     l2772:
 27551                           
 27552                           ; BSR set to: 1
 27553                           
 27554                           ; BSR set to: 1
 27555  015810  515D               	movf	(___flmul@a+3)& (0+255),w,b
 27556  015812  0B80               	andlw	128
 27557  015814  1B62               	xorwf	___flmul@sign& (0+255),f,b
 27558                           
 27559                           ; BSR set to: 1
 27560  015816  515D               	movf	(___flmul@a+3)& (0+255),w,b
 27561  015818  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 27562  01581A  6F63               	movwf	___flmul@aexp& (0+255),b
 27563                           
 27564                           ; BSR set to: 1
 27565  01581C  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 27566                           
 27567                           ; BSR set to: 1
 27568  01581E  8163               	bsf	___flmul@aexp& (0+255),0,b
 27569                           
 27570                           ; BSR set to: 1
 27571                           
 27572                           ; BSR set to: 1
 27573  015820  5163               	movf	___flmul@aexp& (0+255),w,b
 27574  015822  B4D8               	btfsc	status,2,c
 27575  015824  D00D               	goto	l2774
 27576                           
 27577                           ; BSR set to: 1
 27578  015826  2963               	incf	___flmul@aexp& (0+255),w,b
 27579  015828  A4D8               	btfss	status,2,c
 27580  01582A  D008               	goto	l2775
 27581                           
 27582                           ; BSR set to: 1
 27583  01582C  0E00               	movlw	0
 27584  01582E  6F5A               	movwf	___flmul@a& (0+255),b
 27585  015830  0E00               	movlw	0
 27586  015832  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27587  015834  0E00               	movlw	0
 27588  015836  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27589  015838  0E00               	movlw	0
 27590  01583A  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27591  01583C                     l2775:
 27592                           
 27593                           ; BSR set to: 1
 27594                           
 27595                           ; BSR set to: 1
 27596  01583C  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 27597  01583E  D008               	goto	l2776
 27598  015840                     l2774:
 27599                           
 27600                           ; BSR set to: 1
 27601                           
 27602                           ; BSR set to: 1
 27603  015840  0E00               	movlw	0
 27604  015842  6F5A               	movwf	___flmul@a& (0+255),b
 27605  015844  0E00               	movlw	0
 27606  015846  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27607  015848  0E00               	movlw	0
 27608  01584A  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27609  01584C  0E00               	movlw	0
 27610  01584E  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27611  015850                     l2776:
 27612                           
 27613                           ; BSR set to: 1
 27614  015850  5163               	movf	___flmul@aexp& (0+255),w,b
 27615  015852  B4D8               	btfsc	status,2,c
 27616  015854  D003               	goto	u16700
 27617                           
 27618                           ; BSR set to: 1
 27619  015856  5168               	movf	___flmul@bexp& (0+255),w,b
 27620  015858  A4D8               	btfss	status,2,c
 27621  01585A  D009               	goto	l2777
 27622  01585C                     u16700:
 27623                           
 27624                           ; BSR set to: 1
 27625                           
 27626                           ; BSR set to: 1
 27627  01585C  0E00               	movlw	0
 27628  01585E  6F56               	movwf	?___flmul& (0+255),b
 27629  015860  0E00               	movlw	0
 27630  015862  6F57               	movwf	(?___flmul+1)& (0+255),b
 27631  015864  0E00               	movlw	0
 27632  015866  6F58               	movwf	(?___flmul+2)& (0+255),b
 27633  015868  0E00               	movlw	0
 27634  01586A  6F59               	movwf	(?___flmul+3)& (0+255),b
 27635                           
 27636                           ; BSR set to: 1
 27637  01586C  0012               	return	
 27638  01586E                     l2777:
 27639                           
 27640                           ; BSR set to: 1
 27641                           
 27642                           ; BSR set to: 1
 27643  01586E  515C               	movf	(___flmul@a+2)& (0+255),w,b
 27644  015870  0356               	mulwf	___flmul@b& (0+255),b
 27645  015872  CFF3 F16D          	movff	prodl,___flmul@temp
 27646  015876  CFF4 F16E          	movff	prodh,___flmul@temp+1
 27647                           
 27648                           ; BSR set to: 1
 27649  01587A  516D               	movf	___flmul@temp& (0+255),w,b
 27650  01587C  6F64               	movwf	___flmul@grs& (0+255),b
 27651  01587E  6B65               	clrf	(___flmul@grs+1)& (0+255),b
 27652  015880  6B66               	clrf	(___flmul@grs+2)& (0+255),b
 27653  015882  6B67               	clrf	(___flmul@grs+3)& (0+255),b
 27654                           
 27655                           ; BSR set to: 1
 27656  015884  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 27657  015886  6F69               	movwf	___flmul@prod& (0+255),b
 27658  015888  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 27659  01588A  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 27660  01588C  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 27661  01588E  515B               	movf	(___flmul@a+1)& (0+255),w,b
 27662  015890  0357               	mulwf	(___flmul@b+1)& (0+255),b
 27663  015892  CFF3 F16D          	movff	prodl,___flmul@temp
 27664  015896  CFF4 F16E          	movff	prodh,___flmul@temp+1
 27665                           
 27666                           ; BSR set to: 1
 27667  01589A  516D               	movf	___flmul@temp& (0+255),w,b
 27668  01589C  2764               	addwf	___flmul@grs& (0+255),f,b
 27669  01589E  0E00               	movlw	0
 27670  0158A0  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27671  0158A2  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27672  0158A4  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27673                           
 27674                           ; BSR set to: 1
 27675  0158A6  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 27676  0158A8  2769               	addwf	___flmul@prod& (0+255),f,b
 27677  0158AA  0E00               	movlw	0
 27678  0158AC  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27679  0158AE  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27680  0158B0  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27681  0158B2  515A               	movf	___flmul@a& (0+255),w,b
 27682  0158B4  0358               	mulwf	(___flmul@b+2)& (0+255),b
 27683  0158B6  CFF3 F16D          	movff	prodl,___flmul@temp
 27684  0158BA  CFF4 F16E          	movff	prodh,___flmul@temp+1
 27685                           
 27686                           ; BSR set to: 1
 27687  0158BE  516D               	movf	___flmul@temp& (0+255),w,b
 27688  0158C0  2764               	addwf	___flmul@grs& (0+255),f,b
 27689  0158C2  0E00               	movlw	0
 27690  0158C4  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27691  0158C6  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27692  0158C8  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27693                           
 27694                           ; BSR set to: 1
 27695  0158CA  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 27696  0158CC  2769               	addwf	___flmul@prod& (0+255),f,b
 27697  0158CE  0E00               	movlw	0
 27698  0158D0  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27699  0158D2  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27700  0158D4  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27701                           
 27702                           ; BSR set to: 1
 27703  0158D6  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 27704  0158DA  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 27705  0158DE  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 27706  0158E2  6B64               	clrf	___flmul@grs& (0+255),b
 27707                           
 27708                           ; BSR set to: 1
 27709  0158E4  515A               	movf	___flmul@a& (0+255),w,b
 27710  0158E6  0357               	mulwf	(___flmul@b+1)& (0+255),b
 27711  0158E8  CFF3 F16D          	movff	prodl,___flmul@temp
 27712  0158EC  CFF4 F16E          	movff	prodh,___flmul@temp+1
 27713                           
 27714                           ; BSR set to: 1
 27715  0158F0  516D               	movf	___flmul@temp& (0+255),w,b
 27716  0158F2  2764               	addwf	___flmul@grs& (0+255),f,b
 27717  0158F4  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 27718  0158F6  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27719  0158F8  0E00               	movlw	0
 27720  0158FA  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27721  0158FC  0E00               	movlw	0
 27722  0158FE  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27723                           
 27724                           ; BSR set to: 1
 27725  015900  515B               	movf	(___flmul@a+1)& (0+255),w,b
 27726  015902  0356               	mulwf	___flmul@b& (0+255),b
 27727  015904  CFF3 F16D          	movff	prodl,___flmul@temp
 27728  015908  CFF4 F16E          	movff	prodh,___flmul@temp+1
 27729                           
 27730                           ; BSR set to: 1
 27731  01590C  516D               	movf	___flmul@temp& (0+255),w,b
 27732  01590E  2764               	addwf	___flmul@grs& (0+255),f,b
 27733  015910  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 27734  015912  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27735  015914  0E00               	movlw	0
 27736  015916  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27737  015918  0E00               	movlw	0
 27738  01591A  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27739                           
 27740                           ; BSR set to: 1
 27741  01591C  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 27742  015920  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 27743  015924  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 27744  015928  6B64               	clrf	___flmul@grs& (0+255),b
 27745  01592A  515A               	movf	___flmul@a& (0+255),w,b
 27746  01592C  0356               	mulwf	___flmul@b& (0+255),b
 27747  01592E  CFF3 F16D          	movff	prodl,___flmul@temp
 27748  015932  CFF4 F16E          	movff	prodh,___flmul@temp+1
 27749                           
 27750                           ; BSR set to: 1
 27751  015936  516D               	movf	___flmul@temp& (0+255),w,b
 27752  015938  2764               	addwf	___flmul@grs& (0+255),f,b
 27753  01593A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 27754  01593C  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27755  01593E  0E00               	movlw	0
 27756  015940  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27757  015942  0E00               	movlw	0
 27758  015944  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27759                           
 27760                           ; BSR set to: 1
 27761  015946  515C               	movf	(___flmul@a+2)& (0+255),w,b
 27762  015948  0357               	mulwf	(___flmul@b+1)& (0+255),b
 27763  01594A  CFF3 F16D          	movff	prodl,___flmul@temp
 27764  01594E  CFF4 F16E          	movff	prodh,___flmul@temp+1
 27765  015952  516D               	movf	___flmul@temp& (0+255),w,b
 27766  015954  2769               	addwf	___flmul@prod& (0+255),f,b
 27767  015956  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 27768  015958  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27769  01595A  0E00               	movlw	0
 27770  01595C  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27771  01595E  0E00               	movlw	0
 27772  015960  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27773                           
 27774                           ; BSR set to: 1
 27775  015962  515B               	movf	(___flmul@a+1)& (0+255),w,b
 27776  015964  0358               	mulwf	(___flmul@b+2)& (0+255),b
 27777  015966  CFF3 F16D          	movff	prodl,___flmul@temp
 27778  01596A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 27779                           
 27780                           ; BSR set to: 1
 27781  01596E  516D               	movf	___flmul@temp& (0+255),w,b
 27782  015970  2769               	addwf	___flmul@prod& (0+255),f,b
 27783  015972  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 27784  015974  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27785  015976  0E00               	movlw	0
 27786  015978  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27787  01597A  0E00               	movlw	0
 27788  01597C  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27789  01597E  515C               	movf	(___flmul@a+2)& (0+255),w,b
 27790  015980  0358               	mulwf	(___flmul@b+2)& (0+255),b
 27791  015982  CFF3 F16D          	movff	prodl,___flmul@temp
 27792  015986  CFF4 F16E          	movff	prodh,___flmul@temp+1
 27793                           
 27794                           ; BSR set to: 1
 27795  01598A  516D               	movf	___flmul@temp& (0+255),w,b
 27796  01598C  6F5E               	movwf	??___flmul& (0+255),b
 27797  01598E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 27798  015990  6F5F               	movwf	(??___flmul+1)& (0+255),b
 27799  015992  6B60               	clrf	(??___flmul+2)& (0+255),b
 27800  015994  6B61               	clrf	(??___flmul+3)& (0+255),b
 27801  015996  C160  F161         	movff	??___flmul+2,??___flmul+3
 27802  01599A  C15F  F160         	movff	??___flmul+1,??___flmul+2
 27803  01599E  C15E  F15F         	movff	??___flmul,??___flmul+1
 27804  0159A2  6B5E               	clrf	??___flmul& (0+255),b
 27805  0159A4  515E               	movf	??___flmul& (0+255),w,b
 27806  0159A6  2769               	addwf	___flmul@prod& (0+255),f,b
 27807  0159A8  515F               	movf	(??___flmul+1)& (0+255),w,b
 27808  0159AA  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27809  0159AC  5160               	movf	(??___flmul+2)& (0+255),w,b
 27810  0159AE  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27811  0159B0  5161               	movf	(??___flmul+3)& (0+255),w,b
 27812  0159B2  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27813                           
 27814                           ; BSR set to: 1
 27815  0159B4  C164  F15E         	movff	___flmul@grs,??___flmul
 27816  0159B8  C165  F15F         	movff	___flmul@grs+1,??___flmul+1
 27817  0159BC  C166  F160         	movff	___flmul@grs+2,??___flmul+2
 27818  0159C0  C167  F161         	movff	___flmul@grs+3,??___flmul+3
 27819  0159C4  0E19               	movlw	25
 27820  0159C6  D005               	goto	u16710
 27821  0159C8                     u16715:
 27822  0159C8  90D8               	bcf	status,0,c
 27823  0159CA  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 27824  0159CC  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 27825  0159CE  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 27826  0159D0  335E               	rrcf	??___flmul& (0+255),f,b
 27827  0159D2                     u16710:
 27828  0159D2  2EE8               	decfsz	wreg,f,c
 27829  0159D4  D7F9               	goto	u16715
 27830  0159D6  515E               	movf	??___flmul& (0+255),w,b
 27831  0159D8  2769               	addwf	___flmul@prod& (0+255),f,b
 27832  0159DA  515F               	movf	(??___flmul+1)& (0+255),w,b
 27833  0159DC  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27834  0159DE  5160               	movf	(??___flmul+2)& (0+255),w,b
 27835  0159E0  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27836  0159E2  5161               	movf	(??___flmul+3)& (0+255),w,b
 27837  0159E4  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27838                           
 27839                           ; BSR set to: 1
 27840  0159E6  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 27841  0159EA  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 27842  0159EE  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 27843  0159F2  6B64               	clrf	___flmul@grs& (0+255),b
 27844                           
 27845                           ; BSR set to: 1
 27846  0159F4  5163               	movf	___flmul@aexp& (0+255),w,b
 27847  0159F6  C168  F15E         	movff	___flmul@bexp,??___flmul
 27848  0159FA  6B5F               	clrf	(??___flmul+1)& (0+255),b
 27849  0159FC  275E               	addwf	??___flmul& (0+255),f,b
 27850  0159FE  0E00               	movlw	0
 27851  015A00  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 27852  015A02  0E82               	movlw	130
 27853  015A04  255E               	addwf	??___flmul& (0+255),w,b
 27854  015A06  6F6D               	movwf	___flmul@temp& (0+255),b
 27855  015A08  0EFF               	movlw	255
 27856  015A0A  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 27857  015A0C  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 27858  015A0E  D00F               	goto	l2781
 27859  015A10                     
 27860                           ; BSR set to: 1
 27861                           
 27862                           ; BSR set to: 1
 27863  015A10  90D8               	bcf	status,0,c
 27864  015A12  3769               	rlcf	___flmul@prod& (0+255),f,b
 27865  015A14  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 27866  015A16  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 27867  015A18  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 27868                           
 27869                           ; BSR set to: 1
 27870  015A1A  BF67               	btfsc	(___flmul@grs+3)& (0+255),7,b
 27871                           
 27872                           ; BSR set to: 1
 27873  015A1C  8169               	bsf	___flmul@prod& (0+255),0,b
 27874                           
 27875                           ; BSR set to: 1
 27876  015A1E  90D8               	bcf	status,0,c
 27877  015A20  3764               	rlcf	___flmul@grs& (0+255),f,b
 27878  015A22  3765               	rlcf	(___flmul@grs+1)& (0+255),f,b
 27879  015A24  3766               	rlcf	(___flmul@grs+2)& (0+255),f,b
 27880  015A26  3767               	rlcf	(___flmul@grs+3)& (0+255),f,b
 27881  015A28  076D               	decf	___flmul@temp& (0+255),f,b
 27882  015A2A  A0D8               	btfss	status,0,c
 27883  015A2C  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 27884  015A2E                     l2781:
 27885                           
 27886                           ; BSR set to: 1
 27887                           
 27888                           ; BSR set to: 1
 27889  015A2E  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 27890  015A30  D7EF               	goto	l2782
 27891                           
 27892                           ; BSR set to: 1
 27893                           
 27894                           ; BSR set to: 1
 27895  015A32  0E00               	movlw	0
 27896  015A34  6F63               	movwf	___flmul@aexp& (0+255),b
 27897                           
 27898                           ; BSR set to: 1
 27899  015A36  AF67               	btfss	(___flmul@grs+3)& (0+255),7,b
 27900  015A38  D016               	goto	l2788
 27901                           
 27902                           ; BSR set to: 1
 27903  015A3A  0EFF               	movlw	255
 27904  015A3C  1564               	andwf	___flmul@grs& (0+255),w,b
 27905  015A3E  6F5E               	movwf	??___flmul& (0+255),b
 27906  015A40  0EFF               	movlw	255
 27907  015A42  1565               	andwf	(___flmul@grs+1)& (0+255),w,b
 27908  015A44  6F5F               	movwf	(??___flmul+1)& (0+255),b
 27909  015A46  0EFF               	movlw	255
 27910  015A48  1566               	andwf	(___flmul@grs+2)& (0+255),w,b
 27911  015A4A  6F60               	movwf	(??___flmul+2)& (0+255),b
 27912  015A4C  0E7F               	movlw	127
 27913  015A4E  1567               	andwf	(___flmul@grs+3)& (0+255),w,b
 27914  015A50  6F61               	movwf	(??___flmul+3)& (0+255),b
 27915  015A52  515E               	movf	??___flmul& (0+255),w,b
 27916  015A54  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 27917  015A56  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 27918  015A58  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 27919  015A5A  A4D8               	btfss	status,2,c
 27920  015A5C  D002               	goto	u16760
 27921                           
 27922                           ; BSR set to: 1
 27923                           
 27924                           ; BSR set to: 1
 27925  015A5E  A169               	btfss	___flmul@prod& (0+255),0,b
 27926  015A60  D002               	goto	l2788
 27927  015A62                     u16760:
 27928                           
 27929                           ; BSR set to: 1
 27930  015A62  0E01               	movlw	1
 27931  015A64  6F63               	movwf	___flmul@aexp& (0+255),b
 27932  015A66                     l2788:
 27933                           
 27934                           ; BSR set to: 1
 27935                           
 27936                           ; BSR set to: 1
 27937                           
 27938                           ; BSR set to: 1
 27939  015A66  5163               	movf	___flmul@aexp& (0+255),w,b
 27940  015A68  B4D8               	btfsc	status,2,c
 27941  015A6A  D01F               	goto	l2790
 27942                           
 27943                           ; BSR set to: 1
 27944  015A6C  0E01               	movlw	1
 27945  015A6E  2769               	addwf	___flmul@prod& (0+255),f,b
 27946  015A70  0E00               	movlw	0
 27947  015A72  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27948  015A74  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27949  015A76  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27950                           
 27951                           ; BSR set to: 1
 27952  015A78  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 27953  015A7A  D017               	goto	l2790
 27954                           
 27955                           ; BSR set to: 1
 27956  015A7C  C169  F15E         	movff	___flmul@prod,??___flmul
 27957  015A80  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 27958  015A84  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 27959  015A88  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 27960  015A8C  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 27961  015A8E  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 27962  015A90  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 27963  015A92  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 27964  015A94  335E               	rrcf	??___flmul& (0+255),f,b
 27965  015A96  C15E  F169         	movff	??___flmul,___flmul@prod
 27966  015A9A  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 27967  015A9E  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 27968  015AA2  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 27969                           
 27970                           ; BSR set to: 1
 27971  015AA6  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 27972  015AA8  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 27973  015AAA                     l2790:
 27974                           
 27975                           ; BSR set to: 1
 27976                           
 27977                           ; BSR set to: 1
 27978                           
 27979                           ; BSR set to: 1
 27980  015AAA  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 27981  015AAC  D00D               	goto	l2791
 27982  015AAE  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 27983  015AB0  E103               	bnz	u16790
 27984  015AB2  296D               	incf	___flmul@temp& (0+255),w,b
 27985  015AB4  A0D8               	btfss	status,0,c
 27986  015AB6  D008               	goto	l2791
 27987  015AB8                     u16790:
 27988                           
 27989                           ; BSR set to: 1
 27990  015AB8  0E00               	movlw	0
 27991  015ABA  6F69               	movwf	___flmul@prod& (0+255),b
 27992  015ABC  0E00               	movlw	0
 27993  015ABE  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 27994  015AC0  0E80               	movlw	128
 27995  015AC2  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 27996  015AC4  0E7F               	movlw	127
 27997  015AC6  D020               	goto	L5
 27998  015AC8                     l2791:
 27999                           
 28000                           ; BSR set to: 1
 28001                           
 28002                           ; BSR set to: 1
 28003  015AC8  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 28004  015ACA  D005               	goto	u16800
 28005  015ACC  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28006  015ACE  E10E               	bnz	l2793
 28007  015AD0  056D               	decf	___flmul@temp& (0+255),w,b
 28008  015AD2  B0D8               	btfsc	status,0,c
 28009  015AD4  D00B               	goto	l2793
 28010  015AD6                     u16800:
 28011                           
 28012                           ; BSR set to: 1
 28013  015AD6  0E00               	movlw	0
 28014  015AD8  6F69               	movwf	___flmul@prod& (0+255),b
 28015  015ADA  0E00               	movlw	0
 28016  015ADC  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 28017  015ADE  0E00               	movlw	0
 28018  015AE0  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 28019  015AE2  0E00               	movlw	0
 28020  015AE4  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 28021  015AE6  0E00               	movlw	0
 28022  015AE8  6F62               	movwf	___flmul@sign& (0+255),b
 28023  015AEA  D00F               	goto	l2794
 28024  015AEC                     l2793:
 28025                           
 28026                           ; BSR set to: 1
 28027  015AEC  C16D  F168         	movff	___flmul@temp,___flmul@bexp
 28028                           
 28029                           ; BSR set to: 1
 28030  015AF0  0EFF               	movlw	255
 28031  015AF2  1769               	andwf	___flmul@prod& (0+255),f,b
 28032  015AF4  0EFF               	movlw	255
 28033  015AF6  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 28034  015AF8  0E7F               	movlw	127
 28035  015AFA  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 28036  015AFC  0E00               	movlw	0
 28037  015AFE  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 28038                           
 28039                           ; BSR set to: 1
 28040  015B00  B168               	btfsc	___flmul@bexp& (0+255),0,b
 28041                           
 28042                           ; BSR set to: 1
 28043  015B02  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 28044                           
 28045                           ; BSR set to: 1
 28046                           
 28047                           ; BSR set to: 1
 28048  015B04  90D8               	bcf	status,0,c
 28049  015B06  3168               	rrcf	___flmul@bexp& (0+255),w,b
 28050  015B08                     L5:
 28051  015B08  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 28052  015B0A                     l2794:
 28053                           
 28054                           ; BSR set to: 1
 28055                           
 28056                           ; BSR set to: 1
 28057                           
 28058                           ; BSR set to: 1
 28059  015B0A  5162               	movf	___flmul@sign& (0+255),w,b
 28060  015B0C  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 28061                           
 28062                           ; BSR set to: 1
 28063  015B0E  C169  F156         	movff	___flmul@prod,?___flmul
 28064  015B12  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 28065  015B16  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 28066  015B1A  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 28067  015B1E  0012               	return	
 28068  015B20                     __end_of___flmul:
 28069                           	opt stack 0
 28070                           tosu	equ	0xFFF
 28071                           tosh	equ	0xFFE
 28072                           tosl	equ	0xFFD
 28073                           pclath	equ	0xFFA
 28074                           tblptru	equ	0xFF8
 28075                           tblptrh	equ	0xFF7
 28076                           tblptrl	equ	0xFF6
 28077                           tablat	equ	0xFF5
 28078                           prodh	equ	0xFF4
 28079                           prodl	equ	0xFF3
 28080                           intcon	equ	0xFF2
 28081                           indf0	equ	0xFEF
 28082                           postinc0	equ	0xFEE
 28083                           fsr0h	equ	0xFEA
 28084                           fsr0l	equ	0xFE9
 28085                           wreg	equ	0xFE8
 28086                           indf1	equ	0xFE7
 28087                           postdec1	equ	0xFE5
 28088                           plusw1	equ	0xFE3
 28089                           fsr1h	equ	0xFE2
 28090                           fsr1l	equ	0xFE1
 28091                           indf2	equ	0xFDF
 28092                           postinc2	equ	0xFDE
 28093                           postdec2	equ	0xFDD
 28094                           plusw2	equ	0xFDB
 28095                           fsr2h	equ	0xFDA
 28096                           fsr2l	equ	0xFD9
 28097                           status	equ	0xFD8
 28098                           
 28099 ;; *************** function ___awmod *****************
 28100 ;; Defined at:
 28101 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 28102 ;; Parameters:    Size  Location     Type
 28103 ;;  dividend        2   23[BANK1 ] int 
 28104 ;;  divisor         2   25[BANK1 ] int 
 28105 ;; Auto vars:     Size  Location     Type
 28106 ;;  sign            1   28[BANK1 ] unsigned char 
 28107 ;;  counter         1   27[BANK1 ] unsigned char 
 28108 ;; Return value:  Size  Location     Type
 28109 ;;                  2   23[BANK1 ] int 
 28110 ;; Registers used:
 28111 ;;		wreg, status,2, status,0
 28112 ;; Tracked objects:
 28113 ;;		On entry : 0/0
 28114 ;;		On exit  : 0/0
 28115 ;;		Unchanged: 0/0
 28116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28117 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28118 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28120 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28121 ;;Total ram usage:        6 bytes
 28122 ;; Hardware stack levels used:    1
 28123 ;; Hardware stack levels required when called:   13
 28124 ;; This function calls:
 28125 ;;		Nothing
 28126 ;; This function is called by:
 28127 ;;		_fround
 28128 ;;		_scale
 28129 ;; This function uses a non-reentrant model
 28130 ;;
 28131                           
 28132                           	psect	text37
 28133  019E1E                     __ptext37:
 28134                           	opt stack 0
 28135  019E1E                     ___awmod:
 28136                           	opt stack 12
 28137                           
 28138                           ; BSR set to: 1
 28139                           ;incstack = 0
 28140  019E1E  0E00               	movlw	0
 28141  019E20  0101               	movlb	1	; () banked
 28142  019E22  6F1C               	movwf	___awmod@sign& (0+255),b
 28143                           
 28144                           ; BSR set to: 1
 28145  019E24  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 28146  019E26  D006               	goto	l2320
 28147                           
 28148                           ; BSR set to: 1
 28149  019E28  6D17               	negf	___awmod@dividend& (0+255),b
 28150  019E2A  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 28151  019E2C  B0D8               	btfsc	status,0,c
 28152  019E2E  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 28153                           
 28154                           ; BSR set to: 1
 28155  019E30  0E01               	movlw	1
 28156  019E32  6F1C               	movwf	___awmod@sign& (0+255),b
 28157  019E34                     l2320:
 28158                           
 28159                           ; BSR set to: 1
 28160                           
 28161                           ; BSR set to: 1
 28162  019E34  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28163  019E36  D004               	goto	l2321
 28164                           
 28165                           ; BSR set to: 1
 28166  019E38  6D19               	negf	___awmod@divisor& (0+255),b
 28167  019E3A  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 28168  019E3C  B0D8               	btfsc	status,0,c
 28169  019E3E  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 28170  019E40                     l2321:
 28171                           
 28172                           ; BSR set to: 1
 28173                           
 28174                           ; BSR set to: 1
 28175  019E40  5119               	movf	___awmod@divisor& (0+255),w,b
 28176  019E42  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 28177  019E44  B4D8               	btfsc	status,2,c
 28178  019E46  D018               	goto	l2328
 28179                           
 28180                           ; BSR set to: 1
 28181  019E48  0E01               	movlw	1
 28182  019E4A  6F1B               	movwf	___awmod@counter& (0+255),b
 28183  019E4C  D004               	goto	l2323
 28184  019E4E                     
 28185                           ; BSR set to: 1
 28186                           
 28187                           ; BSR set to: 1
 28188  019E4E  90D8               	bcf	status,0,c
 28189  019E50  3719               	rlcf	___awmod@divisor& (0+255),f,b
 28190  019E52  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 28191  019E54  2B1B               	incf	___awmod@counter& (0+255),f,b
 28192  019E56                     l2323:
 28193                           
 28194                           ; BSR set to: 1
 28195                           
 28196                           ; BSR set to: 1
 28197  019E56  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28198  019E58  D7FA               	goto	l2324
 28199  019E5A                     u16910:
 28200                           
 28201                           ; BSR set to: 1
 28202                           
 28203                           ; BSR set to: 1
 28204                           
 28205                           ; BSR set to: 1
 28206  019E5A  5119               	movf	___awmod@divisor& (0+255),w,b
 28207  019E5C  5D17               	subwf	___awmod@dividend& (0+255),w,b
 28208  019E5E  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 28209  019E60  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 28210  019E62  A0D8               	btfss	status,0,c
 28211  019E64  D004               	goto	l2327
 28212                           
 28213                           ; BSR set to: 1
 28214  019E66  5119               	movf	___awmod@divisor& (0+255),w,b
 28215  019E68  5F17               	subwf	___awmod@dividend& (0+255),f,b
 28216  019E6A  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 28217  019E6C  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 28218  019E6E                     l2327:
 28219                           
 28220                           ; BSR set to: 1
 28221                           
 28222                           ; BSR set to: 1
 28223  019E6E  90D8               	bcf	status,0,c
 28224  019E70  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 28225  019E72  3319               	rrcf	___awmod@divisor& (0+255),f,b
 28226                           
 28227                           ; BSR set to: 1
 28228  019E74  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 28229  019E76  D7F1               	goto	u16910
 28230  019E78                     l2328:
 28231                           
 28232                           ; BSR set to: 1
 28233                           
 28234                           ; BSR set to: 1
 28235                           
 28236                           ; BSR set to: 1
 28237  019E78  511C               	movf	___awmod@sign& (0+255),w,b
 28238  019E7A  B4D8               	btfsc	status,2,c
 28239  019E7C  D004               	goto	l2329
 28240                           
 28241                           ; BSR set to: 1
 28242  019E7E  6D17               	negf	___awmod@dividend& (0+255),b
 28243  019E80  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 28244  019E82  B0D8               	btfsc	status,0,c
 28245  019E84  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 28246  019E86                     l2329:
 28247                           
 28248                           ; BSR set to: 1
 28249                           
 28250                           ; BSR set to: 1
 28251  019E86  C117  F117         	movff	___awmod@dividend,?___awmod
 28252  019E8A  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 28253  019E8E  0012               	return	
 28254  019E90                     __end_of___awmod:
 28255                           	opt stack 0
 28256                           tosu	equ	0xFFF
 28257                           tosh	equ	0xFFE
 28258                           tosl	equ	0xFFD
 28259                           pclath	equ	0xFFA
 28260                           tblptru	equ	0xFF8
 28261                           tblptrh	equ	0xFF7
 28262                           tblptrl	equ	0xFF6
 28263                           tablat	equ	0xFF5
 28264                           prodh	equ	0xFF4
 28265                           prodl	equ	0xFF3
 28266                           intcon	equ	0xFF2
 28267                           indf0	equ	0xFEF
 28268                           postinc0	equ	0xFEE
 28269                           fsr0h	equ	0xFEA
 28270                           fsr0l	equ	0xFE9
 28271                           wreg	equ	0xFE8
 28272                           indf1	equ	0xFE7
 28273                           postdec1	equ	0xFE5
 28274                           plusw1	equ	0xFE3
 28275                           fsr1h	equ	0xFE2
 28276                           fsr1l	equ	0xFE1
 28277                           indf2	equ	0xFDF
 28278                           postinc2	equ	0xFDE
 28279                           postdec2	equ	0xFDD
 28280                           plusw2	equ	0xFDB
 28281                           fsr2h	equ	0xFDA
 28282                           fsr2l	equ	0xFD9
 28283                           status	equ	0xFD8
 28284                           
 28285 ;; *************** function ___awdiv *****************
 28286 ;; Defined at:
 28287 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 28288 ;; Parameters:    Size  Location     Type
 28289 ;;  dividend        2   29[BANK1 ] int 
 28290 ;;  divisor         2   31[BANK1 ] int 
 28291 ;; Auto vars:     Size  Location     Type
 28292 ;;  quotient        2   35[BANK1 ] int 
 28293 ;;  sign            1   34[BANK1 ] unsigned char 
 28294 ;;  counter         1   33[BANK1 ] unsigned char 
 28295 ;; Return value:  Size  Location     Type
 28296 ;;                  2   29[BANK1 ] int 
 28297 ;; Registers used:
 28298 ;;		wreg, status,2, status,0
 28299 ;; Tracked objects:
 28300 ;;		On entry : 0/0
 28301 ;;		On exit  : 0/0
 28302 ;;		Unchanged: 0/0
 28303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28304 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28305 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28307 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28308 ;;Total ram usage:        8 bytes
 28309 ;; Hardware stack levels used:    1
 28310 ;; Hardware stack levels required when called:   13
 28311 ;; This function calls:
 28312 ;;		Nothing
 28313 ;; This function is called by:
 28314 ;;		_fround
 28315 ;;		_scale
 28316 ;;		__doprnt
 28317 ;; This function uses a non-reentrant model
 28318 ;;
 28319                           
 28320                           	psect	text38
 28321  019A96                     __ptext38:
 28322                           	opt stack 0
 28323  019A96                     ___awdiv:
 28324                           	opt stack 12
 28325                           
 28326                           ; BSR set to: 1
 28327                           ;incstack = 0
 28328  019A96  0E00               	movlw	0
 28329  019A98  0101               	movlb	1	; () banked
 28330  019A9A  6F22               	movwf	___awdiv@sign& (0+255),b
 28331                           
 28332                           ; BSR set to: 1
 28333  019A9C  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28334  019A9E  D006               	goto	l2307
 28335                           
 28336                           ; BSR set to: 1
 28337  019AA0  6D1F               	negf	___awdiv@divisor& (0+255),b
 28338  019AA2  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 28339  019AA4  B0D8               	btfsc	status,0,c
 28340  019AA6  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 28341                           
 28342                           ; BSR set to: 1
 28343  019AA8  0E01               	movlw	1
 28344  019AAA  6F22               	movwf	___awdiv@sign& (0+255),b
 28345  019AAC                     l2307:
 28346                           
 28347                           ; BSR set to: 1
 28348                           
 28349                           ; BSR set to: 1
 28350  019AAC  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 28351  019AAE  D006               	goto	l2308
 28352                           
 28353                           ; BSR set to: 1
 28354  019AB0  6D1D               	negf	___awdiv@dividend& (0+255),b
 28355  019AB2  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 28356  019AB4  B0D8               	btfsc	status,0,c
 28357  019AB6  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 28358                           
 28359                           ; BSR set to: 1
 28360  019AB8  0E01               	movlw	1
 28361  019ABA  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 28362  019ABC                     l2308:
 28363                           
 28364                           ; BSR set to: 1
 28365                           
 28366                           ; BSR set to: 1
 28367  019ABC  0E00               	movlw	0
 28368  019ABE  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 28369  019AC0  0E00               	movlw	0
 28370  019AC2  6F23               	movwf	___awdiv@quotient& (0+255),b
 28371                           
 28372                           ; BSR set to: 1
 28373  019AC4  511F               	movf	___awdiv@divisor& (0+255),w,b
 28374  019AC6  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 28375  019AC8  B4D8               	btfsc	status,2,c
 28376  019ACA  D01C               	goto	l2315
 28377                           
 28378                           ; BSR set to: 1
 28379  019ACC  0E01               	movlw	1
 28380  019ACE  6F21               	movwf	___awdiv@counter& (0+255),b
 28381  019AD0  D004               	goto	l2310
 28382  019AD2                     
 28383                           ; BSR set to: 1
 28384                           
 28385                           ; BSR set to: 1
 28386  019AD2  90D8               	bcf	status,0,c
 28387  019AD4  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 28388  019AD6  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 28389  019AD8  2B21               	incf	___awdiv@counter& (0+255),f,b
 28390  019ADA                     l2310:
 28391                           
 28392                           ; BSR set to: 1
 28393                           
 28394                           ; BSR set to: 1
 28395  019ADA  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28396  019ADC  D7FA               	goto	l2311
 28397  019ADE                     u16850:
 28398                           
 28399                           ; BSR set to: 1
 28400                           
 28401                           ; BSR set to: 1
 28402                           
 28403                           ; BSR set to: 1
 28404  019ADE  90D8               	bcf	status,0,c
 28405  019AE0  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 28406  019AE2  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 28407                           
 28408                           ; BSR set to: 1
 28409  019AE4  511F               	movf	___awdiv@divisor& (0+255),w,b
 28410  019AE6  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 28411  019AE8  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28412  019AEA  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 28413  019AEC  A0D8               	btfss	status,0,c
 28414  019AEE  D005               	goto	l2314
 28415                           
 28416                           ; BSR set to: 1
 28417  019AF0  511F               	movf	___awdiv@divisor& (0+255),w,b
 28418  019AF2  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 28419  019AF4  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28420  019AF6  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 28421                           
 28422                           ; BSR set to: 1
 28423  019AF8  8123               	bsf	___awdiv@quotient& (0+255),0,b
 28424  019AFA                     l2314:
 28425                           
 28426                           ; BSR set to: 1
 28427                           
 28428                           ; BSR set to: 1
 28429  019AFA  90D8               	bcf	status,0,c
 28430  019AFC  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 28431  019AFE  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 28432                           
 28433                           ; BSR set to: 1
 28434  019B00  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 28435  019B02  D7ED               	goto	u16850
 28436  019B04                     l2315:
 28437                           
 28438                           ; BSR set to: 1
 28439                           
 28440                           ; BSR set to: 1
 28441                           
 28442                           ; BSR set to: 1
 28443  019B04  5122               	movf	___awdiv@sign& (0+255),w,b
 28444  019B06  B4D8               	btfsc	status,2,c
 28445  019B08  D004               	goto	l2316
 28446                           
 28447                           ; BSR set to: 1
 28448  019B0A  6D23               	negf	___awdiv@quotient& (0+255),b
 28449  019B0C  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 28450  019B0E  B0D8               	btfsc	status,0,c
 28451  019B10  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 28452  019B12                     l2316:
 28453                           
 28454                           ; BSR set to: 1
 28455                           
 28456                           ; BSR set to: 1
 28457  019B12  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 28458  019B16  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 28459  019B1A  0012               	return	
 28460  019B1C                     __end_of___awdiv:
 28461                           	opt stack 0
 28462                           tosu	equ	0xFFF
 28463                           tosh	equ	0xFFE
 28464                           tosl	equ	0xFFD
 28465                           pclath	equ	0xFFA
 28466                           tblptru	equ	0xFF8
 28467                           tblptrh	equ	0xFF7
 28468                           tblptrl	equ	0xFF6
 28469                           tablat	equ	0xFF5
 28470                           prodh	equ	0xFF4
 28471                           prodl	equ	0xFF3
 28472                           intcon	equ	0xFF2
 28473                           indf0	equ	0xFEF
 28474                           postinc0	equ	0xFEE
 28475                           fsr0h	equ	0xFEA
 28476                           fsr0l	equ	0xFE9
 28477                           wreg	equ	0xFE8
 28478                           indf1	equ	0xFE7
 28479                           postdec1	equ	0xFE5
 28480                           plusw1	equ	0xFE3
 28481                           fsr1h	equ	0xFE2
 28482                           fsr1l	equ	0xFE1
 28483                           indf2	equ	0xFDF
 28484                           postinc2	equ	0xFDE
 28485                           postdec2	equ	0xFDD
 28486                           plusw2	equ	0xFDB
 28487                           fsr2h	equ	0xFDA
 28488                           fsr2l	equ	0xFD9
 28489                           status	equ	0xFD8
 28490                           
 28491 ;; *************** function __tdiv_to_l_ *****************
 28492 ;; Defined at:
 28493 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 28494 ;; Parameters:    Size  Location     Type
 28495 ;;  f1              3   23[BANK1 ] float 
 28496 ;;  f2              3   26[BANK1 ] float 
 28497 ;; Auto vars:     Size  Location     Type
 28498 ;;  quot            4   32[BANK1 ] unsigned long 
 28499 ;;  exp1            1   37[BANK1 ] unsigned char 
 28500 ;;  cntr            1   36[BANK1 ] unsigned char 
 28501 ;; Return value:  Size  Location     Type
 28502 ;;                  4   23[BANK1 ] unsigned long 
 28503 ;; Registers used:
 28504 ;;		wreg, status,2, status,0
 28505 ;; Tracked objects:
 28506 ;;		On entry : 0/0
 28507 ;;		On exit  : 0/0
 28508 ;;		Unchanged: 0/0
 28509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28510 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28511 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28512 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28513 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28514 ;;Total ram usage:       15 bytes
 28515 ;; Hardware stack levels used:    1
 28516 ;; Hardware stack levels required when called:   13
 28517 ;; This function calls:
 28518 ;;		Nothing
 28519 ;; This function is called by:
 28520 ;;		__doprnt
 28521 ;; This function uses a non-reentrant model
 28522 ;;
 28523                           
 28524                           	psect	text39
 28525  0186E6                     __ptext39:
 28526                           	opt stack 0
 28527  0186E6                     __tdiv_to_l_:
 28528                           	opt stack 13
 28529                           
 28530                           ; BSR set to: 1
 28531                           ;incstack = 0
 28532  0186E6  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 28533  0186EA  0101               	movlb	1	; () banked
 28534  0186EC  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 28535  0186EE  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 28536  0186F0  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 28537  0186F2  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 28538  0186F4  E301               	bnc	u17621
 28539  0186F6  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 28540  0186F8                     u17621:
 28541  0186F8  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 28542  0186FA  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 28543  0186FC  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 28544  0186FE  A4D8               	btfss	status,2,c
 28545  018700  D009               	goto	l2455
 28546                           
 28547                           ; BSR set to: 1
 28548  018702  0E00               	movlw	0
 28549  018704  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 28550  018706  0E00               	movlw	0
 28551  018708  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 28552  01870A  0E00               	movlw	0
 28553  01870C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 28554  01870E  0E00               	movlw	0
 28555  018710  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 28556                           
 28557                           ; BSR set to: 1
 28558  018712  0012               	return	
 28559  018714                     l2455:
 28560                           
 28561                           ; BSR set to: 1
 28562                           
 28563                           ; BSR set to: 1
 28564  018714  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 28565  018718  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 28566  01871A  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 28567  01871C  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 28568  01871E  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 28569  018720  E301               	bnc	u17641
 28570  018722  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 28571  018724                     u17641:
 28572  018724  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 28573  018726  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 28574  018728  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 28575  01872A  A4D8               	btfss	status,2,c
 28576  01872C  D009               	goto	l2457
 28577                           
 28578                           ; BSR set to: 1
 28579  01872E  0E00               	movlw	0
 28580  018730  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 28581  018732  0E00               	movlw	0
 28582  018734  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 28583  018736  0E00               	movlw	0
 28584  018738  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 28585  01873A  0E00               	movlw	0
 28586  01873C  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 28587                           
 28588                           ; BSR set to: 1
 28589  01873E  0012               	return	
 28590  018740                     l2457:
 28591                           
 28592                           ; BSR set to: 1
 28593                           
 28594                           ; BSR set to: 1
 28595  018740  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 28596                           
 28597                           ; BSR set to: 1
 28598  018742  0EFF               	movlw	255
 28599  018744  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 28600  018746  0EFF               	movlw	255
 28601  018748  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 28602  01874A  0E00               	movlw	0
 28603  01874C  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 28604  01874E  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 28605                           
 28606                           ; BSR set to: 1
 28607  018750  0EFF               	movlw	255
 28608  018752  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 28609  018754  0EFF               	movlw	255
 28610  018756  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 28611  018758  0E00               	movlw	0
 28612  01875A  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 28613                           
 28614                           ; BSR set to: 1
 28615  01875C  0E00               	movlw	0
 28616  01875E  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 28617  018760  0E00               	movlw	0
 28618  018762  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 28619  018764  0E00               	movlw	0
 28620  018766  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 28621  018768  0E00               	movlw	0
 28622  01876A  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 28623                           
 28624                           ; BSR set to: 1
 28625  01876C  0E7F               	movlw	127
 28626  01876E  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 28627                           
 28628                           ; BSR set to: 1
 28629  018770  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 28630  018772  0F98               	addlw	152
 28631  018774  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 28632                           
 28633                           ; BSR set to: 1
 28634  018776  0E18               	movlw	24
 28635  018778  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 28636  01877A                     l2458:
 28637                           
 28638                           ; BSR set to: 1
 28639  01877A  90D8               	bcf	status,0,c
 28640  01877C  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 28641  01877E  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 28642  018780  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 28643  018782  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 28644                           
 28645                           ; BSR set to: 1
 28646  018784  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 28647  018786  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 28648  018788  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 28649  01878A  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 28650  01878C  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 28651  01878E  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 28652  018790  A0D8               	btfss	status,0,c
 28653  018792  D007               	goto	l2459
 28654                           
 28655                           ; BSR set to: 1
 28656  018794  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 28657  018796  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 28658  018798  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 28659  01879A  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 28660  01879C  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 28661  01879E  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 28662                           
 28663                           ; BSR set to: 1
 28664  0187A0  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 28665  0187A2                     l2459:
 28666                           
 28667                           ; BSR set to: 1
 28668  0187A2  90D8               	bcf	status,0,c
 28669  0187A4  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 28670  0187A6  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 28671  0187A8  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 28672                           
 28673                           ; BSR set to: 1
 28674  0187AA  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 28675  0187AC  D7E6               	goto	l2458
 28676                           
 28677                           ; BSR set to: 1
 28678                           
 28679                           ; BSR set to: 1
 28680  0187AE  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 28681  0187B0  D016               	goto	l2461
 28682                           
 28683                           ; BSR set to: 1
 28684  0187B2  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 28685  0187B4  0A80               	xorlw	128
 28686  0187B6  0F97               	addlw	151
 28687  0187B8  B0D8               	btfsc	status,0,c
 28688  0187BA  D009               	goto	l2462
 28689                           
 28690                           ; BSR set to: 1
 28691  0187BC  0E00               	movlw	0
 28692  0187BE  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 28693  0187C0  0E00               	movlw	0
 28694  0187C2  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 28695  0187C4  0E00               	movlw	0
 28696  0187C6  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 28697  0187C8  0E00               	movlw	0
 28698  0187CA  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 28699                           
 28700                           ; BSR set to: 1
 28701  0187CC  0012               	return	
 28702  0187CE                     l2462:
 28703                           
 28704                           ; BSR set to: 1
 28705                           
 28706                           ; BSR set to: 1
 28707                           
 28708                           ; BSR set to: 1
 28709  0187CE  90D8               	bcf	status,0,c
 28710  0187D0  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 28711  0187D2  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 28712  0187D4  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 28713  0187D6  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 28714                           
 28715                           ; BSR set to: 1
 28716  0187D8  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 28717  0187DA  D7F9               	goto	l2462
 28718                           
 28719                           ; BSR set to: 1
 28720  0187DC  D015               	goto	u17700
 28721  0187DE                     l2461:
 28722                           
 28723                           ; BSR set to: 1
 28724                           
 28725                           ; BSR set to: 1
 28726  0187DE  0E17               	movlw	23
 28727  0187E0  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 28728  0187E2  D00F               	goto	l2467
 28729                           
 28730                           ; BSR set to: 1
 28731  0187E4  0E00               	movlw	0
 28732  0187E6  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 28733  0187E8  0E00               	movlw	0
 28734  0187EA  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 28735  0187EC  0E00               	movlw	0
 28736  0187EE  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 28737  0187F0  0E00               	movlw	0
 28738  0187F2  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 28739                           
 28740                           ; BSR set to: 1
 28741  0187F4  0012               	return	
 28742  0187F6                     
 28743                           ; BSR set to: 1
 28744                           
 28745                           ; BSR set to: 1
 28746  0187F6  90D8               	bcf	status,0,c
 28747  0187F8  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 28748  0187FA  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 28749  0187FC  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 28750  0187FE  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 28751  018800  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 28752  018802                     l2467:
 28753                           
 28754                           ; BSR set to: 1
 28755                           
 28756                           ; BSR set to: 1
 28757  018802  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 28758  018804  A4D8               	btfss	status,2,c
 28759  018806  D7F7               	goto	l2468
 28760  018808                     u17700:
 28761                           
 28762                           ; BSR set to: 1
 28763                           
 28764                           ; BSR set to: 1
 28765  018808  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 28766  01880C  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 28767  018810  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 28768  018814  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 28769                           
 28770                           ; BSR set to: 1
 28771  018818  0012               	return		;funcret
 28772  01881A                     __end_of__tdiv_to_l_:
 28773                           	opt stack 0
 28774                           tosu	equ	0xFFF
 28775                           tosh	equ	0xFFE
 28776                           tosl	equ	0xFFD
 28777                           pclath	equ	0xFFA
 28778                           tblptru	equ	0xFF8
 28779                           tblptrh	equ	0xFF7
 28780                           tblptrl	equ	0xFF6
 28781                           tablat	equ	0xFF5
 28782                           prodh	equ	0xFF4
 28783                           prodl	equ	0xFF3
 28784                           intcon	equ	0xFF2
 28785                           indf0	equ	0xFEF
 28786                           postinc0	equ	0xFEE
 28787                           fsr0h	equ	0xFEA
 28788                           fsr0l	equ	0xFE9
 28789                           wreg	equ	0xFE8
 28790                           indf1	equ	0xFE7
 28791                           postdec1	equ	0xFE5
 28792                           plusw1	equ	0xFE3
 28793                           fsr1h	equ	0xFE2
 28794                           fsr1l	equ	0xFE1
 28795                           indf2	equ	0xFDF
 28796                           postinc2	equ	0xFDE
 28797                           postdec2	equ	0xFDD
 28798                           plusw2	equ	0xFDB
 28799                           fsr2h	equ	0xFDA
 28800                           fsr2l	equ	0xFD9
 28801                           status	equ	0xFD8
 28802                           
 28803 ;; *************** function __div_to_l_ *****************
 28804 ;; Defined at:
 28805 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 28806 ;; Parameters:    Size  Location     Type
 28807 ;;  f1              4   23[BANK1 ] unsigned long 
 28808 ;;  f2              4   27[BANK1 ] unsigned long 
 28809 ;; Auto vars:     Size  Location     Type
 28810 ;;  quot            4   31[BANK1 ] unsigned long 
 28811 ;;  exp1            1   36[BANK1 ] unsigned char 
 28812 ;;  cntr            1   35[BANK1 ] unsigned char 
 28813 ;; Return value:  Size  Location     Type
 28814 ;;                  4   23[BANK1 ] unsigned long 
 28815 ;; Registers used:
 28816 ;;		wreg, status,2, status,0
 28817 ;; Tracked objects:
 28818 ;;		On entry : 0/0
 28819 ;;		On exit  : 0/0
 28820 ;;		Unchanged: 0/0
 28821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28822 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28823 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28825 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28826 ;;Total ram usage:       14 bytes
 28827 ;; Hardware stack levels used:    1
 28828 ;; Hardware stack levels required when called:   13
 28829 ;; This function calls:
 28830 ;;		Nothing
 28831 ;; This function is called by:
 28832 ;;		__doprnt
 28833 ;; This function uses a non-reentrant model
 28834 ;;
 28835                           
 28836                           	psect	text40
 28837  01894C                     __ptext40:
 28838                           	opt stack 0
 28839  01894C                     __div_to_l_:
 28840                           	opt stack 13
 28841                           
 28842                           ; BSR set to: 1
 28843                           ;incstack = 0
 28844  01894C  0101               	movlb	1	; () banked
 28845  01894E  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 28846  018950  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 28847  018952  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 28848  018954  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 28849  018956  A4D8               	btfss	status,2,c
 28850  018958  D009               	goto	l2351
 28851                           
 28852                           ; BSR set to: 1
 28853  01895A  0E00               	movlw	0
 28854  01895C  6F17               	movwf	?__div_to_l_& (0+255),b
 28855  01895E  0E00               	movlw	0
 28856  018960  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 28857  018962  0E00               	movlw	0
 28858  018964  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 28859  018966  0E00               	movlw	0
 28860  018968  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 28861                           
 28862                           ; BSR set to: 1
 28863  01896A  0012               	return	
 28864  01896C                     l2351:
 28865                           
 28866                           ; BSR set to: 1
 28867                           
 28868                           ; BSR set to: 1
 28869  01896C  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 28870  01896E  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 28871  018970  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 28872  018972  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 28873  018974  A4D8               	btfss	status,2,c
 28874  018976  D009               	goto	l2353
 28875                           
 28876                           ; BSR set to: 1
 28877  018978  0E00               	movlw	0
 28878  01897A  6F17               	movwf	?__div_to_l_& (0+255),b
 28879  01897C  0E00               	movlw	0
 28880  01897E  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 28881  018980  0E00               	movlw	0
 28882  018982  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 28883  018984  0E00               	movlw	0
 28884  018986  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 28885                           
 28886                           ; BSR set to: 1
 28887  018988  0012               	return	
 28888  01898A                     l2353:
 28889                           
 28890                           ; BSR set to: 1
 28891                           
 28892                           ; BSR set to: 1
 28893  01898A  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 28894                           
 28895                           ; BSR set to: 1
 28896  01898C  0EFF               	movlw	255
 28897  01898E  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 28898  018990  0EFF               	movlw	255
 28899  018992  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 28900  018994  0EFF               	movlw	255
 28901  018996  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 28902  018998  0E00               	movlw	0
 28903  01899A  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 28904                           
 28905                           ; BSR set to: 1
 28906  01899C  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 28907  01899E  0EFF               	movlw	255
 28908  0189A0  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 28909  0189A2  0EFF               	movlw	255
 28910  0189A4  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 28911  0189A6  0EFF               	movlw	255
 28912  0189A8  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 28913  0189AA  0E00               	movlw	0
 28914  0189AC  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 28915                           
 28916                           ; BSR set to: 1
 28917  0189AE  0E00               	movlw	0
 28918  0189B0  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 28919  0189B2  0E00               	movlw	0
 28920  0189B4  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 28921  0189B6  0E00               	movlw	0
 28922  0189B8  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 28923  0189BA  0E00               	movlw	0
 28924  0189BC  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 28925                           
 28926                           ; BSR set to: 1
 28927  0189BE  0E7F               	movlw	127
 28928  0189C0  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 28929                           
 28930                           ; BSR set to: 1
 28931  0189C2  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 28932  0189C4  0FA0               	addlw	160
 28933  0189C6  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 28934                           
 28935                           ; BSR set to: 1
 28936  0189C8  0E20               	movlw	32
 28937  0189CA  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 28938  0189CC                     
 28939                           ; BSR set to: 1
 28940                           
 28941                           ; BSR set to: 1
 28942  0189CC  90D8               	bcf	status,0,c
 28943  0189CE  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 28944  0189D0  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 28945  0189D2  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 28946  0189D4  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 28947                           
 28948                           ; BSR set to: 1
 28949  0189D6  511B               	movf	__div_to_l_@f2& (0+255),w,b
 28950  0189D8  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 28951  0189DA  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 28952  0189DC  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 28953  0189DE  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 28954  0189E0  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 28955  0189E2  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 28956  0189E4  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 28957  0189E6  A0D8               	btfss	status,0,c
 28958  0189E8  D009               	goto	l2355
 28959                           
 28960                           ; BSR set to: 1
 28961  0189EA  511B               	movf	__div_to_l_@f2& (0+255),w,b
 28962  0189EC  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 28963  0189EE  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 28964  0189F0  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 28965  0189F2  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 28966  0189F4  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 28967  0189F6  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 28968  0189F8  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 28969                           
 28970                           ; BSR set to: 1
 28971  0189FA  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 28972  0189FC                     l2355:
 28973                           
 28974                           ; BSR set to: 1
 28975                           
 28976                           ; BSR set to: 1
 28977  0189FC  90D8               	bcf	status,0,c
 28978  0189FE  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 28979  018A00  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 28980  018A02  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 28981  018A04  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 28982                           
 28983                           ; BSR set to: 1
 28984  018A06  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 28985  018A08  D7E1               	goto	l2354
 28986                           
 28987                           ; BSR set to: 1
 28988                           
 28989                           ; BSR set to: 1
 28990  018A0A  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 28991  018A0C  D016               	goto	l2357
 28992                           
 28993                           ; BSR set to: 1
 28994  018A0E  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 28995  018A10  0A80               	xorlw	128
 28996  018A12  0F9F               	addlw	159
 28997  018A14  B0D8               	btfsc	status,0,c
 28998  018A16  D009               	goto	l2358
 28999                           
 29000                           ; BSR set to: 1
 29001  018A18  0E00               	movlw	0
 29002  018A1A  6F17               	movwf	?__div_to_l_& (0+255),b
 29003  018A1C  0E00               	movlw	0
 29004  018A1E  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29005  018A20  0E00               	movlw	0
 29006  018A22  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29007  018A24  0E00               	movlw	0
 29008  018A26  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29009                           
 29010                           ; BSR set to: 1
 29011  018A28  0012               	return	
 29012  018A2A                     l2358:
 29013                           
 29014                           ; BSR set to: 1
 29015                           
 29016                           ; BSR set to: 1
 29017                           
 29018                           ; BSR set to: 1
 29019  018A2A  90D8               	bcf	status,0,c
 29020  018A2C  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 29021  018A2E  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 29022  018A30  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 29023  018A32  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 29024                           
 29025                           ; BSR set to: 1
 29026  018A34  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 29027  018A36  D7F9               	goto	l2358
 29028                           
 29029                           ; BSR set to: 1
 29030  018A38  D015               	goto	u17770
 29031  018A3A                     l2357:
 29032                           
 29033                           ; BSR set to: 1
 29034                           
 29035                           ; BSR set to: 1
 29036  018A3A  0E1F               	movlw	31
 29037  018A3C  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 29038  018A3E  D00F               	goto	l2363
 29039                           
 29040                           ; BSR set to: 1
 29041  018A40  0E00               	movlw	0
 29042  018A42  6F17               	movwf	?__div_to_l_& (0+255),b
 29043  018A44  0E00               	movlw	0
 29044  018A46  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29045  018A48  0E00               	movlw	0
 29046  018A4A  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29047  018A4C  0E00               	movlw	0
 29048  018A4E  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29049                           
 29050                           ; BSR set to: 1
 29051  018A50  0012               	return	
 29052  018A52                     
 29053                           ; BSR set to: 1
 29054                           
 29055                           ; BSR set to: 1
 29056  018A52  90D8               	bcf	status,0,c
 29057  018A54  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29058  018A56  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29059  018A58  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29060  018A5A  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29061  018A5C  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 29062  018A5E                     l2363:
 29063                           
 29064                           ; BSR set to: 1
 29065                           
 29066                           ; BSR set to: 1
 29067  018A5E  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 29068  018A60  A4D8               	btfss	status,2,c
 29069  018A62  D7F7               	goto	l2364
 29070  018A64                     u17770:
 29071                           
 29072                           ; BSR set to: 1
 29073                           
 29074                           ; BSR set to: 1
 29075  018A64  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 29076  018A68  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 29077  018A6C  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 29078  018A70  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 29079                           
 29080                           ; BSR set to: 1
 29081  018A74  0012               	return		;funcret
 29082  018A76                     __end_of__div_to_l_:
 29083                           	opt stack 0
 29084                           tosu	equ	0xFFF
 29085                           tosh	equ	0xFFE
 29086                           tosl	equ	0xFFD
 29087                           pclath	equ	0xFFA
 29088                           tblptru	equ	0xFF8
 29089                           tblptrh	equ	0xFF7
 29090                           tblptrl	equ	0xFF6
 29091                           tablat	equ	0xFF5
 29092                           prodh	equ	0xFF4
 29093                           prodl	equ	0xFF3
 29094                           intcon	equ	0xFF2
 29095                           indf0	equ	0xFEF
 29096                           postinc0	equ	0xFEE
 29097                           fsr0h	equ	0xFEA
 29098                           fsr0l	equ	0xFE9
 29099                           wreg	equ	0xFE8
 29100                           indf1	equ	0xFE7
 29101                           postdec1	equ	0xFE5
 29102                           plusw1	equ	0xFE3
 29103                           fsr1h	equ	0xFE2
 29104                           fsr1l	equ	0xFE1
 29105                           indf2	equ	0xFDF
 29106                           postinc2	equ	0xFDE
 29107                           postdec2	equ	0xFDD
 29108                           plusw2	equ	0xFDB
 29109                           fsr2h	equ	0xFDA
 29110                           fsr2l	equ	0xFD9
 29111                           status	equ	0xFD8
 29112                           
 29113 ;; *************** function ___xxtofl *****************
 29114 ;; Defined at:
 29115 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 29116 ;; Parameters:    Size  Location     Type
 29117 ;;  sign            1    wreg     unsigned char 
 29118 ;;  val             4   23[BANK1 ] long 
 29119 ;; Auto vars:     Size  Location     Type
 29120 ;;  sign            1   31[BANK1 ] unsigned char 
 29121 ;;  arg             4   33[BANK1 ] unsigned long 
 29122 ;;  exp             1   32[BANK1 ] unsigned char 
 29123 ;; Return value:  Size  Location     Type
 29124 ;;                  4   23[BANK1 ] unsigned char 
 29125 ;; Registers used:
 29126 ;;		wreg, status,2, status,0
 29127 ;; Tracked objects:
 29128 ;;		On entry : 0/0
 29129 ;;		On exit  : 0/0
 29130 ;;		Unchanged: 0/0
 29131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29132 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29133 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29134 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29135 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29136 ;;Total ram usage:       14 bytes
 29137 ;; Hardware stack levels used:    1
 29138 ;; Hardware stack levels required when called:   13
 29139 ;; This function calls:
 29140 ;;		Nothing
 29141 ;; This function is called by:
 29142 ;;		_ringBufferLUT
 29143 ;;		__doprnt
 29144 ;; This function uses a non-reentrant model
 29145 ;;
 29146                           
 29147                           	psect	text41
 29148  0181CE                     __ptext41:
 29149                           	opt stack 0
 29150  0181CE                     ___xxtofl:
 29151                           	opt stack 13
 29152                           
 29153                           ; BSR set to: 1
 29154                           ;incstack = 0
 29155                           ;___xxtofl@sign stored from wreg
 29156  0181CE  0101               	movlb	1	; () banked
 29157  0181D0  6F1F               	movwf	___xxtofl@sign& (0+255),b
 29158  0181D2  0101               	movlb	1	; () banked
 29159  0181D4  511F               	movf	___xxtofl@sign& (0+255),w,b
 29160  0181D6  A4D8               	btfss	status,2,c
 29161                           
 29162                           ; BSR set to: 1
 29163  0181D8  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 29164  0181DA  D01A               	goto	l2879
 29165                           
 29166                           ; BSR set to: 1
 29167  0181DC  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 29168  0181E0  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 29169  0181E4  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 29170  0181E8  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 29171  0181EC  1F1B               	comf	??___xxtofl& (0+255),f,b
 29172  0181EE  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 29173  0181F0  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 29174  0181F2  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 29175  0181F4  2B1B               	incf	??___xxtofl& (0+255),f,b
 29176  0181F6  0E00               	movlw	0
 29177  0181F8  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 29178  0181FA  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 29179  0181FC  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 29180  0181FE  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 29181  018202  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 29182  018206  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 29183  01820A  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 29184  01820E  D008               	goto	l2880
 29185  018210                     l2879:
 29186                           
 29187                           ; BSR set to: 1
 29188  018210  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 29189  018214  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 29190  018218  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 29191  01821C  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 29192  018220                     l2880:
 29193                           
 29194                           ; BSR set to: 1
 29195                           
 29196                           ; BSR set to: 1
 29197  018220  5117               	movf	___xxtofl@val& (0+255),w,b
 29198  018222  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 29199  018224  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 29200  018226  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 29201  018228  A4D8               	btfss	status,2,c
 29202  01822A  D009               	goto	l2881
 29203                           
 29204                           ; BSR set to: 1
 29205  01822C  0E00               	movlw	0
 29206  01822E  6F17               	movwf	?___xxtofl& (0+255),b
 29207  018230  0E00               	movlw	0
 29208  018232  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 29209  018234  0E00               	movlw	0
 29210  018236  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 29211  018238  0E00               	movlw	0
 29212  01823A  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 29213                           
 29214                           ; BSR set to: 1
 29215  01823C  0012               	return	
 29216  01823E                     l2881:
 29217                           
 29218                           ; BSR set to: 1
 29219                           
 29220                           ; BSR set to: 1
 29221  01823E  0E96               	movlw	150
 29222  018240  6F20               	movwf	___xxtofl@exp& (0+255),b
 29223  018242  D006               	goto	l2883
 29224  018244                     
 29225                           ; BSR set to: 1
 29226                           
 29227                           ; BSR set to: 1
 29228  018244  2B20               	incf	___xxtofl@exp& (0+255),f,b
 29229  018246  90D8               	bcf	status,0,c
 29230  018248  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 29231  01824A  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 29232  01824C  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 29233  01824E  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 29234  018250                     l2883:
 29235                           
 29236                           ; BSR set to: 1
 29237                           
 29238                           ; BSR set to: 1
 29239  018250  0E00               	movlw	0
 29240  018252  1521               	andwf	___xxtofl@arg& (0+255),w,b
 29241  018254  6F1B               	movwf	??___xxtofl& (0+255),b
 29242  018256  0E00               	movlw	0
 29243  018258  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 29244  01825A  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 29245  01825C  0E00               	movlw	0
 29246  01825E  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 29247  018260  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 29248  018262  0EFE               	movlw	254
 29249  018264  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 29250  018266  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 29251  018268  511B               	movf	??___xxtofl& (0+255),w,b
 29252  01826A  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 29253  01826C  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 29254  01826E  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 29255  018270  B4D8               	btfsc	status,2,c
 29256  018272  D00D               	goto	l2886
 29257  018274  D7E7               	goto	l2884
 29258  018276                     
 29259                           ; BSR set to: 1
 29260                           
 29261                           ; BSR set to: 1
 29262  018276  2B20               	incf	___xxtofl@exp& (0+255),f,b
 29263                           
 29264                           ; BSR set to: 1
 29265  018278  0E01               	movlw	1
 29266  01827A  2721               	addwf	___xxtofl@arg& (0+255),f,b
 29267  01827C  0E00               	movlw	0
 29268  01827E  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 29269  018280  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 29270  018282  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 29271                           
 29272                           ; BSR set to: 1
 29273  018284  90D8               	bcf	status,0,c
 29274  018286  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 29275  018288  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 29276  01828A  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 29277  01828C  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 29278  01828E                     l2886:
 29279                           
 29280                           ; BSR set to: 1
 29281  01828E  0E00               	movlw	0
 29282  018290  1521               	andwf	___xxtofl@arg& (0+255),w,b
 29283  018292  6F1B               	movwf	??___xxtofl& (0+255),b
 29284  018294  0E00               	movlw	0
 29285  018296  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 29286  018298  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 29287  01829A  0E00               	movlw	0
 29288  01829C  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 29289  01829E  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 29290  0182A0  0EFF               	movlw	255
 29291  0182A2  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 29292  0182A4  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 29293  0182A6  511B               	movf	??___xxtofl& (0+255),w,b
 29294  0182A8  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 29295  0182AA  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 29296  0182AC  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 29297  0182AE  B4D8               	btfsc	status,2,c
 29298  0182B0  D007               	goto	l2889
 29299  0182B2  D7E1               	goto	l2887
 29300  0182B4                     
 29301                           ; BSR set to: 1
 29302                           
 29303                           ; BSR set to: 1
 29304  0182B4  0720               	decf	___xxtofl@exp& (0+255),f,b
 29305  0182B6  90D8               	bcf	status,0,c
 29306  0182B8  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 29307  0182BA  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 29308  0182BC  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 29309  0182BE  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 29310  0182C0                     l2889:
 29311                           
 29312                           ; BSR set to: 1
 29313                           
 29314                           ; BSR set to: 1
 29315  0182C0  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 29316  0182C2  D003               	goto	u18050
 29317                           
 29318                           ; BSR set to: 1
 29319  0182C4  0E02               	movlw	2
 29320  0182C6  6120               	cpfslt	___xxtofl@exp& (0+255),b
 29321  0182C8  D7F5               	goto	l2890
 29322  0182CA                     u18050:
 29323                           
 29324                           ; BSR set to: 1
 29325                           
 29326                           ; BSR set to: 1
 29327  0182CA  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 29328  0182CC  D008               	goto	l2894
 29329                           
 29330                           ; BSR set to: 1
 29331  0182CE  0EFF               	movlw	255
 29332  0182D0  1721               	andwf	___xxtofl@arg& (0+255),f,b
 29333  0182D2  0EFF               	movlw	255
 29334  0182D4  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 29335  0182D6  0E7F               	movlw	127
 29336  0182D8  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 29337  0182DA  0EFF               	movlw	255
 29338  0182DC  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 29339  0182DE                     l2894:
 29340                           
 29341                           ; BSR set to: 1
 29342  0182DE  90D8               	bcf	status,0,c
 29343  0182E0  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 29344  0182E2  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 29345  0182E6  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 29346  0182E8  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 29347  0182EA  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 29348  0182EC  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 29349  0182F0  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 29350  0182F2  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 29351  0182F4  6B1B               	clrf	??___xxtofl& (0+255),b
 29352  0182F6  511B               	movf	??___xxtofl& (0+255),w,b
 29353  0182F8  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 29354  0182FA  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 29355  0182FC  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 29356  0182FE  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 29357  018300  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 29358  018302  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 29359  018304  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 29360                           
 29361                           ; BSR set to: 1
 29362  018306  511F               	movf	___xxtofl@sign& (0+255),w,b
 29363  018308  A4D8               	btfss	status,2,c
 29364                           
 29365                           ; BSR set to: 1
 29366  01830A  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 29367  01830C  D001               	goto	l2895
 29368                           
 29369                           ; BSR set to: 1
 29370  01830E  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 29371  018310                     l2895:
 29372                           
 29373                           ; BSR set to: 1
 29374                           
 29375                           ; BSR set to: 1
 29376  018310  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 29377  018314  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 29378  018318  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 29379  01831C  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 29380  018320  0012               	return	
 29381  018322                     __end_of___xxtofl:
 29382                           	opt stack 0
 29383                           tosu	equ	0xFFF
 29384                           tosh	equ	0xFFE
 29385                           tosl	equ	0xFFD
 29386                           pclath	equ	0xFFA
 29387                           tblptru	equ	0xFF8
 29388                           tblptrh	equ	0xFF7
 29389                           tblptrl	equ	0xFF6
 29390                           tablat	equ	0xFF5
 29391                           prodh	equ	0xFF4
 29392                           prodl	equ	0xFF3
 29393                           intcon	equ	0xFF2
 29394                           indf0	equ	0xFEF
 29395                           postinc0	equ	0xFEE
 29396                           fsr0h	equ	0xFEA
 29397                           fsr0l	equ	0xFE9
 29398                           wreg	equ	0xFE8
 29399                           indf1	equ	0xFE7
 29400                           postdec1	equ	0xFE5
 29401                           plusw1	equ	0xFE3
 29402                           fsr1h	equ	0xFE2
 29403                           fsr1l	equ	0xFE1
 29404                           indf2	equ	0xFDF
 29405                           postinc2	equ	0xFDE
 29406                           postdec2	equ	0xFDD
 29407                           plusw2	equ	0xFDB
 29408                           fsr2h	equ	0xFDA
 29409                           fsr2l	equ	0xFD9
 29410                           status	equ	0xFD8
 29411                           
 29412 ;; *************** function ___wmul *****************
 29413 ;; Defined at:
 29414 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 29415 ;; Parameters:    Size  Location     Type
 29416 ;;  multiplier      2   23[BANK1 ] unsigned int 
 29417 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 29418 ;; Auto vars:     Size  Location     Type
 29419 ;;  product         2   27[BANK1 ] unsigned int 
 29420 ;; Return value:  Size  Location     Type
 29421 ;;                  2   23[BANK1 ] unsigned int 
 29422 ;; Registers used:
 29423 ;;		wreg, status,2, status,0, prodl, prodh
 29424 ;; Tracked objects:
 29425 ;;		On entry : 0/0
 29426 ;;		On exit  : 0/0
 29427 ;;		Unchanged: 0/0
 29428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29429 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29430 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29432 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29433 ;;Total ram usage:        6 bytes
 29434 ;; Hardware stack levels used:    1
 29435 ;; Hardware stack levels required when called:   13
 29436 ;; This function calls:
 29437 ;;		Nothing
 29438 ;; This function is called by:
 29439 ;;		_ringBufferLUT
 29440 ;;		__doprnt
 29441 ;;		_atoi
 29442 ;; This function uses a non-reentrant model
 29443 ;;
 29444                           
 29445                           	psect	text42
 29446  01AD6A                     __ptext42:
 29447                           	opt stack 0
 29448  01AD6A                     ___wmul:
 29449                           	opt stack 13
 29450                           
 29451                           ; BSR set to: 1
 29452                           ;incstack = 0
 29453  01AD6A  0101               	movlb	1	; () banked
 29454  01AD6C  5117               	movf	___wmul@multiplier& (0+255),w,b
 29455  01AD6E  0319               	mulwf	___wmul@multiplicand& (0+255),b
 29456  01AD70  CFF3 F11B          	movff	prodl,___wmul@product
 29457  01AD74  CFF4 F11C          	movff	prodh,___wmul@product+1
 29458  01AD78  5117               	movf	___wmul@multiplier& (0+255),w,b
 29459  01AD7A  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 29460  01AD7C  50F3               	movf	prodl,w,c
 29461  01AD7E  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 29462  01AD80  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 29463  01AD82  0319               	mulwf	___wmul@multiplicand& (0+255),b
 29464  01AD84  50F3               	movf	prodl,w,c
 29465  01AD86  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 29466                           
 29467                           ; BSR set to: 1
 29468  01AD88  C11B  F117         	movff	___wmul@product,?___wmul
 29469  01AD8C  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 29470  01AD90  0012               	return	
 29471  01AD92                     __end_of___wmul:
 29472                           	opt stack 0
 29473                           tosu	equ	0xFFF
 29474                           tosh	equ	0xFFE
 29475                           tosl	equ	0xFFD
 29476                           pclath	equ	0xFFA
 29477                           tblptru	equ	0xFF8
 29478                           tblptrh	equ	0xFF7
 29479                           tblptrl	equ	0xFF6
 29480                           tablat	equ	0xFF5
 29481                           prodh	equ	0xFF4
 29482                           prodl	equ	0xFF3
 29483                           intcon	equ	0xFF2
 29484                           indf0	equ	0xFEF
 29485                           postinc0	equ	0xFEE
 29486                           fsr0h	equ	0xFEA
 29487                           fsr0l	equ	0xFE9
 29488                           wreg	equ	0xFE8
 29489                           indf1	equ	0xFE7
 29490                           postdec1	equ	0xFE5
 29491                           plusw1	equ	0xFE3
 29492                           fsr1h	equ	0xFE2
 29493                           fsr1l	equ	0xFE1
 29494                           indf2	equ	0xFDF
 29495                           postinc2	equ	0xFDE
 29496                           postdec2	equ	0xFDD
 29497                           plusw2	equ	0xFDB
 29498                           fsr2h	equ	0xFDA
 29499                           fsr2l	equ	0xFD9
 29500                           status	equ	0xFD8
 29501                           
 29502 ;; *************** function ___llmod *****************
 29503 ;; Defined at:
 29504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 29505 ;; Parameters:    Size  Location     Type
 29506 ;;  dividend        4   36[BANK1 ] unsigned long 
 29507 ;;  divisor         4   40[BANK1 ] unsigned long 
 29508 ;; Auto vars:     Size  Location     Type
 29509 ;;  counter         1   44[BANK1 ] unsigned char 
 29510 ;; Return value:  Size  Location     Type
 29511 ;;                  4   36[BANK1 ] unsigned long 
 29512 ;; Registers used:
 29513 ;;		wreg, status,2, status,0
 29514 ;; Tracked objects:
 29515 ;;		On entry : 0/0
 29516 ;;		On exit  : 0/0
 29517 ;;		Unchanged: 0/0
 29518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29519 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29520 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29522 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29523 ;;Total ram usage:        9 bytes
 29524 ;; Hardware stack levels used:    1
 29525 ;; Hardware stack levels required when called:   13
 29526 ;; This function calls:
 29527 ;;		Nothing
 29528 ;; This function is called by:
 29529 ;;		__doprnt
 29530 ;; This function uses a non-reentrant model
 29531 ;;
 29532                           
 29533                           	psect	text43
 29534  019FD6                     __ptext43:
 29535                           	opt stack 0
 29536  019FD6                     ___llmod:
 29537                           	opt stack 13
 29538                           
 29539                           ; BSR set to: 1
 29540                           ;incstack = 0
 29541  019FD6  0101               	movlb	1	; () banked
 29542  019FD8  5128               	movf	___llmod@divisor& (0+255),w,b
 29543  019FDA  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 29544  019FDC  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 29545  019FDE  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 29546  019FE0  B4D8               	btfsc	status,2,c
 29547  019FE2  D024               	goto	l2578
 29548                           
 29549                           ; BSR set to: 1
 29550  019FE4  0E01               	movlw	1
 29551  019FE6  6F2C               	movwf	___llmod@counter& (0+255),b
 29552  019FE8  D006               	goto	l2573
 29553  019FEA                     
 29554                           ; BSR set to: 1
 29555                           
 29556                           ; BSR set to: 1
 29557  019FEA  90D8               	bcf	status,0,c
 29558  019FEC  3728               	rlcf	___llmod@divisor& (0+255),f,b
 29559  019FEE  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 29560  019FF0  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 29561  019FF2  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 29562  019FF4  2B2C               	incf	___llmod@counter& (0+255),f,b
 29563  019FF6                     l2573:
 29564                           
 29565                           ; BSR set to: 1
 29566                           
 29567                           ; BSR set to: 1
 29568  019FF6  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 29569  019FF8  D7F8               	goto	l2574
 29570  019FFA                     u17970:
 29571                           
 29572                           ; BSR set to: 1
 29573                           
 29574                           ; BSR set to: 1
 29575                           
 29576                           ; BSR set to: 1
 29577  019FFA  5128               	movf	___llmod@divisor& (0+255),w,b
 29578  019FFC  5D24               	subwf	___llmod@dividend& (0+255),w,b
 29579  019FFE  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 29580  01A000  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 29581  01A002  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 29582  01A004  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 29583  01A006  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 29584  01A008  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 29585  01A00A  A0D8               	btfss	status,0,c
 29586  01A00C  D008               	goto	l2577
 29587                           
 29588                           ; BSR set to: 1
 29589  01A00E  5128               	movf	___llmod@divisor& (0+255),w,b
 29590  01A010  5F24               	subwf	___llmod@dividend& (0+255),f,b
 29591  01A012  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 29592  01A014  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 29593  01A016  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 29594  01A018  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 29595  01A01A  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 29596  01A01C  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 29597  01A01E                     l2577:
 29598                           
 29599                           ; BSR set to: 1
 29600                           
 29601                           ; BSR set to: 1
 29602  01A01E  90D8               	bcf	status,0,c
 29603  01A020  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 29604  01A022  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 29605  01A024  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 29606  01A026  3328               	rrcf	___llmod@divisor& (0+255),f,b
 29607                           
 29608                           ; BSR set to: 1
 29609  01A028  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 29610  01A02A  D7E7               	goto	u17970
 29611  01A02C                     l2578:
 29612                           
 29613                           ; BSR set to: 1
 29614                           
 29615                           ; BSR set to: 1
 29616  01A02C  C124  F124         	movff	___llmod@dividend,?___llmod
 29617  01A030  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 29618  01A034  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 29619  01A038  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 29620                           
 29621                           ; BSR set to: 1
 29622  01A03C  0012               	return		;funcret
 29623  01A03E                     __end_of___llmod:
 29624                           	opt stack 0
 29625                           tosu	equ	0xFFF
 29626                           tosh	equ	0xFFE
 29627                           tosl	equ	0xFFD
 29628                           pclath	equ	0xFFA
 29629                           tblptru	equ	0xFF8
 29630                           tblptrh	equ	0xFF7
 29631                           tblptrl	equ	0xFF6
 29632                           tablat	equ	0xFF5
 29633                           prodh	equ	0xFF4
 29634                           prodl	equ	0xFF3
 29635                           intcon	equ	0xFF2
 29636                           indf0	equ	0xFEF
 29637                           postinc0	equ	0xFEE
 29638                           fsr0h	equ	0xFEA
 29639                           fsr0l	equ	0xFE9
 29640                           wreg	equ	0xFE8
 29641                           indf1	equ	0xFE7
 29642                           postdec1	equ	0xFE5
 29643                           plusw1	equ	0xFE3
 29644                           fsr1h	equ	0xFE2
 29645                           fsr1l	equ	0xFE1
 29646                           indf2	equ	0xFDF
 29647                           postinc2	equ	0xFDE
 29648                           postdec2	equ	0xFDD
 29649                           plusw2	equ	0xFDB
 29650                           fsr2h	equ	0xFDA
 29651                           fsr2l	equ	0xFD9
 29652                           status	equ	0xFD8
 29653                           
 29654 ;; *************** function ___lldiv *****************
 29655 ;; Defined at:
 29656 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 29657 ;; Parameters:    Size  Location     Type
 29658 ;;  dividend        4   23[BANK1 ] unsigned long 
 29659 ;;  divisor         4   27[BANK1 ] unsigned long 
 29660 ;; Auto vars:     Size  Location     Type
 29661 ;;  quotient        4   31[BANK1 ] unsigned long 
 29662 ;;  counter         1   35[BANK1 ] unsigned char 
 29663 ;; Return value:  Size  Location     Type
 29664 ;;                  4   23[BANK1 ] unsigned long 
 29665 ;; Registers used:
 29666 ;;		wreg, status,2, status,0
 29667 ;; Tracked objects:
 29668 ;;		On entry : 0/0
 29669 ;;		On exit  : 0/0
 29670 ;;		Unchanged: 0/0
 29671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29672 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29673 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29675 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29676 ;;Total ram usage:       13 bytes
 29677 ;; Hardware stack levels used:    1
 29678 ;; Hardware stack levels required when called:   13
 29679 ;; This function calls:
 29680 ;;		Nothing
 29681 ;; This function is called by:
 29682 ;;		__doprnt
 29683 ;; This function uses a non-reentrant model
 29684 ;;
 29685                           
 29686                           	psect	text44
 29687  019B1C                     __ptext44:
 29688                           	opt stack 0
 29689  019B1C                     ___lldiv:
 29690                           	opt stack 13
 29691                           
 29692                           ; BSR set to: 1
 29693                           ;incstack = 0
 29694  019B1C  0E00               	movlw	0
 29695  019B1E  0101               	movlb	1	; () banked
 29696  019B20  6F1F               	movwf	___lldiv@quotient& (0+255),b
 29697  019B22  0E00               	movlw	0
 29698  019B24  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 29699  019B26  0E00               	movlw	0
 29700  019B28  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 29701  019B2A  0E00               	movlw	0
 29702  019B2C  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 29703                           
 29704                           ; BSR set to: 1
 29705  019B2E  511B               	movf	___lldiv@divisor& (0+255),w,b
 29706  019B30  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 29707  019B32  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 29708  019B34  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 29709  019B36  B4D8               	btfsc	status,2,c
 29710  019B38  D02A               	goto	l2568
 29711                           
 29712                           ; BSR set to: 1
 29713  019B3A  0E01               	movlw	1
 29714  019B3C  6F23               	movwf	___lldiv@counter& (0+255),b
 29715  019B3E  D006               	goto	l2563
 29716  019B40                     
 29717                           ; BSR set to: 1
 29718                           
 29719                           ; BSR set to: 1
 29720  019B40  90D8               	bcf	status,0,c
 29721  019B42  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 29722  019B44  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 29723  019B46  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 29724  019B48  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 29725  019B4A  2B23               	incf	___lldiv@counter& (0+255),f,b
 29726  019B4C                     l2563:
 29727                           
 29728                           ; BSR set to: 1
 29729                           
 29730                           ; BSR set to: 1
 29731  019B4C  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 29732  019B4E  D7F8               	goto	l2564
 29733  019B50                     u17940:
 29734                           
 29735                           ; BSR set to: 1
 29736                           
 29737                           ; BSR set to: 1
 29738                           
 29739                           ; BSR set to: 1
 29740  019B50  90D8               	bcf	status,0,c
 29741  019B52  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 29742  019B54  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 29743  019B56  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 29744  019B58  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 29745                           
 29746                           ; BSR set to: 1
 29747  019B5A  511B               	movf	___lldiv@divisor& (0+255),w,b
 29748  019B5C  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 29749  019B5E  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29750  019B60  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 29751  019B62  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29752  019B64  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 29753  019B66  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29754  019B68  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 29755  019B6A  A0D8               	btfss	status,0,c
 29756  019B6C  D009               	goto	l2567
 29757                           
 29758                           ; BSR set to: 1
 29759  019B6E  511B               	movf	___lldiv@divisor& (0+255),w,b
 29760  019B70  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 29761  019B72  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29762  019B74  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 29763  019B76  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29764  019B78  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 29765  019B7A  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29766  019B7C  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 29767                           
 29768                           ; BSR set to: 1
 29769  019B7E  811F               	bsf	___lldiv@quotient& (0+255),0,b
 29770  019B80                     l2567:
 29771                           
 29772                           ; BSR set to: 1
 29773                           
 29774                           ; BSR set to: 1
 29775  019B80  90D8               	bcf	status,0,c
 29776  019B82  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 29777  019B84  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 29778  019B86  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 29779  019B88  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 29780                           
 29781                           ; BSR set to: 1
 29782  019B8A  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 29783  019B8C  D7E1               	goto	u17940
 29784  019B8E                     l2568:
 29785                           
 29786                           ; BSR set to: 1
 29787                           
 29788                           ; BSR set to: 1
 29789  019B8E  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 29790  019B92  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 29791  019B96  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 29792  019B9A  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 29793                           
 29794                           ; BSR set to: 1
 29795  019B9E  0012               	return		;funcret
 29796  019BA0                     __end_of___lldiv:
 29797                           	opt stack 0
 29798                           tosu	equ	0xFFF
 29799                           tosh	equ	0xFFE
 29800                           tosl	equ	0xFFD
 29801                           pclath	equ	0xFFA
 29802                           tblptru	equ	0xFF8
 29803                           tblptrh	equ	0xFF7
 29804                           tblptrl	equ	0xFF6
 29805                           tablat	equ	0xFF5
 29806                           prodh	equ	0xFF4
 29807                           prodl	equ	0xFF3
 29808                           intcon	equ	0xFF2
 29809                           indf0	equ	0xFEF
 29810                           postinc0	equ	0xFEE
 29811                           fsr0h	equ	0xFEA
 29812                           fsr0l	equ	0xFE9
 29813                           wreg	equ	0xFE8
 29814                           indf1	equ	0xFE7
 29815                           postdec1	equ	0xFE5
 29816                           plusw1	equ	0xFE3
 29817                           fsr1h	equ	0xFE2
 29818                           fsr1l	equ	0xFE1
 29819                           indf2	equ	0xFDF
 29820                           postinc2	equ	0xFDE
 29821                           postdec2	equ	0xFDD
 29822                           plusw2	equ	0xFDB
 29823                           fsr2h	equ	0xFDA
 29824                           fsr2l	equ	0xFD9
 29825                           status	equ	0xFD8
 29826                           
 29827 ;; *************** function ___fltol *****************
 29828 ;; Defined at:
 29829 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 29830 ;; Parameters:    Size  Location     Type
 29831 ;;  f1              4  120[BANK1 ] unsigned long 
 29832 ;; Auto vars:     Size  Location     Type
 29833 ;;  exp1            1  129[BANK1 ] unsigned char 
 29834 ;;  sign1           1  128[BANK1 ] unsigned char 
 29835 ;; Return value:  Size  Location     Type
 29836 ;;                  4  120[BANK1 ] long 
 29837 ;; Registers used:
 29838 ;;		wreg, status,2, status,0
 29839 ;; Tracked objects:
 29840 ;;		On entry : 0/0
 29841 ;;		On exit  : 0/0
 29842 ;;		Unchanged: 0/0
 29843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29844 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29845 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29846 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29847 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29848 ;;Total ram usage:       10 bytes
 29849 ;; Hardware stack levels used:    1
 29850 ;; Hardware stack levels required when called:   13
 29851 ;; This function calls:
 29852 ;;		Nothing
 29853 ;; This function is called by:
 29854 ;;		__doprnt
 29855 ;;		_ftoa
 29856 ;; This function uses a non-reentrant model
 29857 ;;
 29858                           
 29859                           	psect	text45
 29860  01921E                     __ptext45:
 29861                           	opt stack 0
 29862  01921E                     ___fltol:
 29863                           	opt stack 13
 29864                           
 29865                           ; BSR set to: 1
 29866                           ;incstack = 0
 29867  01921E  0101               	movlb	1	; () banked
 29868  019220  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 29869  019222  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 29870  019224  6F81               	movwf	___fltol@exp1& (0+255),b
 29871  019226  5181               	movf	___fltol@exp1& (0+255),w,b
 29872  019228  A4D8               	btfss	status,2,c
 29873  01922A  D009               	goto	l2398
 29874                           
 29875                           ; BSR set to: 1
 29876  01922C  0E00               	movlw	0
 29877  01922E  6F78               	movwf	?___fltol& (0+255),b
 29878  019230  0E00               	movlw	0
 29879  019232  6F79               	movwf	(?___fltol+1)& (0+255),b
 29880  019234  0E00               	movlw	0
 29881  019236  6F7A               	movwf	(?___fltol+2)& (0+255),b
 29882  019238  0E00               	movlw	0
 29883  01923A  6F7B               	movwf	(?___fltol+3)& (0+255),b
 29884                           
 29885                           ; BSR set to: 1
 29886  01923C  0012               	return	
 29887  01923E                     l2398:
 29888                           
 29889                           ; BSR set to: 1
 29890                           
 29891                           ; BSR set to: 1
 29892  01923E  C178  F17C         	movff	___fltol@f1,??___fltol
 29893  019242  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 29894  019246  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 29895  01924A  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 29896  01924E  0E20               	movlw	32
 29897  019250  D005               	goto	u17870
 29898  019252                     u17875:
 29899  019252  90D8               	bcf	status,0,c
 29900  019254  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 29901  019256  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 29902  019258  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 29903  01925A  337C               	rrcf	??___fltol& (0+255),f,b
 29904  01925C                     u17870:
 29905  01925C  2EE8               	decfsz	wreg,f,c
 29906  01925E  D7F9               	goto	u17875
 29907  019260  517C               	movf	??___fltol& (0+255),w,b
 29908  019262  6F80               	movwf	___fltol@sign1& (0+255),b
 29909                           
 29910                           ; BSR set to: 1
 29911  019264  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 29912                           
 29913                           ; BSR set to: 1
 29914  019266  0EFF               	movlw	255
 29915  019268  1778               	andwf	___fltol@f1& (0+255),f,b
 29916  01926A  0EFF               	movlw	255
 29917  01926C  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 29918  01926E  0EFF               	movlw	255
 29919  019270  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 29920  019272  0E00               	movlw	0
 29921  019274  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 29922                           
 29923                           ; BSR set to: 1
 29924  019276  0E96               	movlw	150
 29925  019278  5F81               	subwf	___fltol@exp1& (0+255),f,b
 29926                           
 29927                           ; BSR set to: 1
 29928  01927A  AF81               	btfss	___fltol@exp1& (0+255),7,b
 29929  01927C  D016               	goto	l2400
 29930                           
 29931                           ; BSR set to: 1
 29932  01927E  5181               	movf	___fltol@exp1& (0+255),w,b
 29933  019280  0A80               	xorlw	128
 29934  019282  0F97               	addlw	151
 29935  019284  B0D8               	btfsc	status,0,c
 29936  019286  D009               	goto	l2401
 29937                           
 29938                           ; BSR set to: 1
 29939  019288  0E00               	movlw	0
 29940  01928A  6F78               	movwf	?___fltol& (0+255),b
 29941  01928C  0E00               	movlw	0
 29942  01928E  6F79               	movwf	(?___fltol+1)& (0+255),b
 29943  019290  0E00               	movlw	0
 29944  019292  6F7A               	movwf	(?___fltol+2)& (0+255),b
 29945  019294  0E00               	movlw	0
 29946  019296  6F7B               	movwf	(?___fltol+3)& (0+255),b
 29947                           
 29948                           ; BSR set to: 1
 29949  019298  0012               	return	
 29950  01929A                     l2401:
 29951                           
 29952                           ; BSR set to: 1
 29953                           
 29954                           ; BSR set to: 1
 29955                           
 29956                           ; BSR set to: 1
 29957  01929A  90D8               	bcf	status,0,c
 29958  01929C  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 29959  01929E  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 29960  0192A0  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 29961  0192A2  3378               	rrcf	___fltol@f1& (0+255),f,b
 29962                           
 29963                           ; BSR set to: 1
 29964  0192A4  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 29965  0192A6  D7F9               	goto	l2401
 29966                           
 29967                           ; BSR set to: 1
 29968  0192A8  D015               	goto	u17910
 29969  0192AA                     l2400:
 29970                           
 29971                           ; BSR set to: 1
 29972                           
 29973                           ; BSR set to: 1
 29974  0192AA  0E1F               	movlw	31
 29975  0192AC  6581               	cpfsgt	___fltol@exp1& (0+255),b
 29976  0192AE  D00F               	goto	l2406
 29977                           
 29978                           ; BSR set to: 1
 29979  0192B0  0E00               	movlw	0
 29980  0192B2  6F78               	movwf	?___fltol& (0+255),b
 29981  0192B4  0E00               	movlw	0
 29982  0192B6  6F79               	movwf	(?___fltol+1)& (0+255),b
 29983  0192B8  0E00               	movlw	0
 29984  0192BA  6F7A               	movwf	(?___fltol+2)& (0+255),b
 29985  0192BC  0E00               	movlw	0
 29986  0192BE  6F7B               	movwf	(?___fltol+3)& (0+255),b
 29987                           
 29988                           ; BSR set to: 1
 29989  0192C0  0012               	return	
 29990  0192C2                     
 29991                           ; BSR set to: 1
 29992                           
 29993                           ; BSR set to: 1
 29994  0192C2  90D8               	bcf	status,0,c
 29995  0192C4  3778               	rlcf	___fltol@f1& (0+255),f,b
 29996  0192C6  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 29997  0192C8  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 29998  0192CA  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 29999  0192CC  0781               	decf	___fltol@exp1& (0+255),f,b
 30000  0192CE                     l2406:
 30001                           
 30002                           ; BSR set to: 1
 30003                           
 30004                           ; BSR set to: 1
 30005  0192CE  5181               	movf	___fltol@exp1& (0+255),w,b
 30006  0192D0  A4D8               	btfss	status,2,c
 30007  0192D2  D7F7               	goto	l2407
 30008  0192D4                     u17910:
 30009                           
 30010                           ; BSR set to: 1
 30011                           
 30012                           ; BSR set to: 1
 30013                           
 30014                           ; BSR set to: 1
 30015  0192D4  5180               	movf	___fltol@sign1& (0+255),w,b
 30016  0192D6  B4D8               	btfsc	status,2,c
 30017  0192D8  D008               	goto	l2409
 30018                           
 30019                           ; BSR set to: 1
 30020  0192DA  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 30021  0192DC  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 30022  0192DE  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 30023  0192E0  6D78               	negf	___fltol@f1& (0+255),b
 30024  0192E2  0E00               	movlw	0
 30025  0192E4  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 30026  0192E6  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 30027  0192E8  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 30028  0192EA                     l2409:
 30029                           
 30030                           ; BSR set to: 1
 30031                           
 30032                           ; BSR set to: 1
 30033  0192EA  C178  F178         	movff	___fltol@f1,?___fltol
 30034  0192EE  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 30035  0192F2  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 30036  0192F6  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 30037  0192FA  0012               	return	
 30038  0192FC                     __end_of___fltol:
 30039                           	opt stack 0
 30040                           tosu	equ	0xFFF
 30041                           tosh	equ	0xFFE
 30042                           tosl	equ	0xFFD
 30043                           pclath	equ	0xFFA
 30044                           tblptru	equ	0xFF8
 30045                           tblptrh	equ	0xFF7
 30046                           tblptrl	equ	0xFF6
 30047                           tablat	equ	0xFF5
 30048                           prodh	equ	0xFF4
 30049                           prodl	equ	0xFF3
 30050                           intcon	equ	0xFF2
 30051                           indf0	equ	0xFEF
 30052                           postinc0	equ	0xFEE
 30053                           fsr0h	equ	0xFEA
 30054                           fsr0l	equ	0xFE9
 30055                           wreg	equ	0xFE8
 30056                           indf1	equ	0xFE7
 30057                           postdec1	equ	0xFE5
 30058                           plusw1	equ	0xFE3
 30059                           fsr1h	equ	0xFE2
 30060                           fsr1l	equ	0xFE1
 30061                           indf2	equ	0xFDF
 30062                           postinc2	equ	0xFDE
 30063                           postdec2	equ	0xFDD
 30064                           plusw2	equ	0xFDB
 30065                           fsr2h	equ	0xFDA
 30066                           fsr2l	equ	0xFD9
 30067                           status	equ	0xFD8
 30068                           
 30069 ;; *************** function ___flsub *****************
 30070 ;; Defined at:
 30071 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 30072 ;; Parameters:    Size  Location     Type
 30073 ;;  b               4   61[BANK1 ] long 
 30074 ;;  a               4   65[BANK1 ] long 
 30075 ;; Auto vars:     Size  Location     Type
 30076 ;;		None
 30077 ;; Return value:  Size  Location     Type
 30078 ;;                  4   61[BANK1 ] long 
 30079 ;; Registers used:
 30080 ;;		wreg, status,2, status,0, cstack
 30081 ;; Tracked objects:
 30082 ;;		On entry : 0/0
 30083 ;;		On exit  : 0/0
 30084 ;;		Unchanged: 0/0
 30085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30086 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30089 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30090 ;;Total ram usage:        8 bytes
 30091 ;; Hardware stack levels used:    1
 30092 ;; Hardware stack levels required when called:   14
 30093 ;; This function calls:
 30094 ;;		___fladd
 30095 ;; This function is called by:
 30096 ;;		__doprnt
 30097 ;; This function uses a non-reentrant model
 30098 ;;
 30099                           
 30100                           	psect	text46
 30101  01A694                     __ptext46:
 30102                           	opt stack 0
 30103  01A694                     ___flsub:
 30104                           	opt stack 12
 30105                           
 30106                           ; BSR set to: 1
 30107                           ;incstack = 0
 30108  01A694  0E00               	movlw	0
 30109  01A696  0101               	movlb	1	; () banked
 30110  01A698  1B41               	xorwf	___flsub@a& (0+255),f,b
 30111  01A69A  0E00               	movlw	0
 30112  01A69C  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 30113  01A69E  0E00               	movlw	0
 30114  01A6A0  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 30115  01A6A2  0E80               	movlw	128
 30116  01A6A4  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 30117                           
 30118                           ; BSR set to: 1
 30119  01A6A6  C13D  F129         	movff	___flsub@b,___fladd@b
 30120  01A6AA  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 30121  01A6AE  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 30122  01A6B2  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 30123  01A6B6  C141  F12D         	movff	___flsub@a,___fladd@a
 30124  01A6BA  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 30125  01A6BE  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 30126  01A6C2  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 30127  01A6C6  EC38  F0AF         	call	___fladd	;wreg free
 30128  01A6CA  C129  F13D         	movff	?___fladd,?___flsub
 30129  01A6CE  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 30130  01A6D2  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 30131  01A6D6  C12C  F140         	movff	?___fladd+3,?___flsub+3
 30132  01A6DA  0012               	return	
 30133  01A6DC                     __end_of___flsub:
 30134                           	opt stack 0
 30135                           tosu	equ	0xFFF
 30136                           tosh	equ	0xFFE
 30137                           tosl	equ	0xFFD
 30138                           pclath	equ	0xFFA
 30139                           tblptru	equ	0xFF8
 30140                           tblptrh	equ	0xFF7
 30141                           tblptrl	equ	0xFF6
 30142                           tablat	equ	0xFF5
 30143                           prodh	equ	0xFF4
 30144                           prodl	equ	0xFF3
 30145                           intcon	equ	0xFF2
 30146                           indf0	equ	0xFEF
 30147                           postinc0	equ	0xFEE
 30148                           fsr0h	equ	0xFEA
 30149                           fsr0l	equ	0xFE9
 30150                           wreg	equ	0xFE8
 30151                           indf1	equ	0xFE7
 30152                           postdec1	equ	0xFE5
 30153                           plusw1	equ	0xFE3
 30154                           fsr1h	equ	0xFE2
 30155                           fsr1l	equ	0xFE1
 30156                           indf2	equ	0xFDF
 30157                           postinc2	equ	0xFDE
 30158                           postdec2	equ	0xFDD
 30159                           plusw2	equ	0xFDB
 30160                           fsr2h	equ	0xFDA
 30161                           fsr2l	equ	0xFD9
 30162                           status	equ	0xFD8
 30163                           
 30164 ;; *************** function ___fladd *****************
 30165 ;; Defined at:
 30166 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 30167 ;; Parameters:    Size  Location     Type
 30168 ;;  b               4   41[BANK1 ] long 
 30169 ;;  a               4   45[BANK1 ] long 
 30170 ;; Auto vars:     Size  Location     Type
 30171 ;;  grs             1   60[BANK1 ] unsigned char 
 30172 ;;  bexp            1   59[BANK1 ] unsigned char 
 30173 ;;  aexp            1   58[BANK1 ] unsigned char 
 30174 ;;  signs           1   57[BANK1 ] unsigned char 
 30175 ;; Return value:  Size  Location     Type
 30176 ;;                  4   41[BANK1 ] unsigned char 
 30177 ;; Registers used:
 30178 ;;		wreg, status,2, status,0
 30179 ;; Tracked objects:
 30180 ;;		On entry : 0/0
 30181 ;;		On exit  : 0/0
 30182 ;;		Unchanged: 0/0
 30183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30184 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30185 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30186 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30187 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30188 ;;Total ram usage:       20 bytes
 30189 ;; Hardware stack levels used:    1
 30190 ;; Hardware stack levels required when called:   13
 30191 ;; This function calls:
 30192 ;;		Nothing
 30193 ;; This function is called by:
 30194 ;;		_ringBufferLUT
 30195 ;;		__doprnt
 30196 ;;		___flsub
 30197 ;; This function uses a non-reentrant model
 30198 ;;
 30199                           
 30200                           	psect	text47
 30201  015E70                     __ptext47:
 30202                           	opt stack 0
 30203  015E70                     ___fladd:
 30204                           	opt stack 12
 30205                           
 30206                           ;incstack = 0
 30207  015E70  0101               	movlb	1	; () banked
 30208  015E72  512C               	movf	(___fladd@b+3)& (0+255),w,b
 30209  015E74  0B80               	andlw	128
 30210  015E76  6F39               	movwf	___fladd@signs& (0+255),b
 30211  015E78  512C               	movf	(___fladd@b+3)& (0+255),w,b
 30212  015E7A  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 30213  015E7C  6F3B               	movwf	___fladd@bexp& (0+255),b
 30214                           
 30215                           ; BSR set to: 1
 30216  015E7E  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 30217                           
 30218                           ; BSR set to: 1
 30219  015E80  813B               	bsf	___fladd@bexp& (0+255),0,b
 30220                           
 30221                           ; BSR set to: 1
 30222                           
 30223                           ; BSR set to: 1
 30224  015E82  513B               	movf	___fladd@bexp& (0+255),w,b
 30225  015E84  B4D8               	btfsc	status,2,c
 30226  015E86  D00D               	goto	l2679
 30227                           
 30228                           ; BSR set to: 1
 30229  015E88  293B               	incf	___fladd@bexp& (0+255),w,b
 30230  015E8A  A4D8               	btfss	status,2,c
 30231  015E8C  D008               	goto	l2680
 30232                           
 30233                           ; BSR set to: 1
 30234  015E8E  0E00               	movlw	0
 30235  015E90  6F29               	movwf	___fladd@b& (0+255),b
 30236  015E92  0E00               	movlw	0
 30237  015E94  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30238  015E96  0E00               	movlw	0
 30239  015E98  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30240  015E9A  0E00               	movlw	0
 30241  015E9C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30242  015E9E                     l2680:
 30243                           
 30244                           ; BSR set to: 1
 30245                           
 30246                           ; BSR set to: 1
 30247  015E9E  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 30248  015EA0  D006               	goto	L6
 30249  015EA2                     l2679:
 30250                           
 30251                           ; BSR set to: 1
 30252                           
 30253                           ; BSR set to: 1
 30254  015EA2  0E00               	movlw	0
 30255  015EA4  6F29               	movwf	___fladd@b& (0+255),b
 30256  015EA6  0E00               	movlw	0
 30257  015EA8  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30258  015EAA  0E00               	movlw	0
 30259  015EAC  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30260  015EAE                     L6:
 30261  015EAE  0E00               	movlw	0
 30262  015EB0  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30263                           
 30264                           ; BSR set to: 1
 30265                           
 30266                           ; BSR set to: 1
 30267  015EB2  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30268  015EB4  0B80               	andlw	128
 30269  015EB6  6F3A               	movwf	___fladd@aexp& (0+255),b
 30270                           
 30271                           ; BSR set to: 1
 30272  015EB8  5139               	movf	___fladd@signs& (0+255),w,b
 30273  015EBA  193A               	xorwf	___fladd@aexp& (0+255),w,b
 30274  015EBC  A4D8               	btfss	status,2,c
 30275                           
 30276                           ; BSR set to: 1
 30277  015EBE  8D39               	bsf	___fladd@signs& (0+255),6,b
 30278                           
 30279                           ; BSR set to: 1
 30280                           
 30281                           ; BSR set to: 1
 30282  015EC0  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30283  015EC2  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 30284  015EC4  6F3A               	movwf	___fladd@aexp& (0+255),b
 30285                           
 30286                           ; BSR set to: 1
 30287  015EC6  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 30288                           
 30289                           ; BSR set to: 1
 30290  015EC8  813A               	bsf	___fladd@aexp& (0+255),0,b
 30291                           
 30292                           ; BSR set to: 1
 30293                           
 30294                           ; BSR set to: 1
 30295  015ECA  513A               	movf	___fladd@aexp& (0+255),w,b
 30296  015ECC  B4D8               	btfsc	status,2,c
 30297  015ECE  D00D               	goto	l2684
 30298                           
 30299                           ; BSR set to: 1
 30300  015ED0  293A               	incf	___fladd@aexp& (0+255),w,b
 30301  015ED2  A4D8               	btfss	status,2,c
 30302  015ED4  D008               	goto	l2685
 30303                           
 30304                           ; BSR set to: 1
 30305  015ED6  0E00               	movlw	0
 30306  015ED8  6F2D               	movwf	___fladd@a& (0+255),b
 30307  015EDA  0E00               	movlw	0
 30308  015EDC  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 30309  015EDE  0E00               	movlw	0
 30310  015EE0  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 30311  015EE2  0E00               	movlw	0
 30312  015EE4  6F30               	movwf	(___fladd@a+3)& (0+255),b
 30313  015EE6                     l2685:
 30314                           
 30315                           ; BSR set to: 1
 30316                           
 30317                           ; BSR set to: 1
 30318  015EE6  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 30319  015EE8  D006               	goto	L7
 30320  015EEA                     l2684:
 30321                           
 30322                           ; BSR set to: 1
 30323                           
 30324                           ; BSR set to: 1
 30325  015EEA  0E00               	movlw	0
 30326  015EEC  6F2D               	movwf	___fladd@a& (0+255),b
 30327  015EEE  0E00               	movlw	0
 30328  015EF0  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 30329  015EF2  0E00               	movlw	0
 30330  015EF4  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 30331  015EF6                     L7:
 30332  015EF6  0E00               	movlw	0
 30333  015EF8  6F30               	movwf	(___fladd@a+3)& (0+255),b
 30334                           
 30335                           ; BSR set to: 1
 30336                           
 30337                           ; BSR set to: 1
 30338  015EFA  513B               	movf	___fladd@bexp& (0+255),w,b
 30339  015EFC  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 30340  015EFE  B0D8               	btfsc	status,0,c
 30341  015F00  D022               	goto	l2687
 30342                           
 30343                           ; BSR set to: 1
 30344  015F02  AD39               	btfss	___fladd@signs& (0+255),6,b
 30345  015F04  D002               	goto	l2688
 30346                           
 30347                           ; BSR set to: 1
 30348  015F06  0E80               	movlw	128
 30349  015F08  1B39               	xorwf	___fladd@signs& (0+255),f,b
 30350  015F0A                     l2688:
 30351                           
 30352                           ; BSR set to: 1
 30353                           
 30354                           ; BSR set to: 1
 30355  015F0A  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 30356                           
 30357                           ; BSR set to: 1
 30358  015F0E  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 30359                           
 30360                           ; BSR set to: 1
 30361  015F12  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 30362                           
 30363                           ; BSR set to: 1
 30364  015F16  C129  F13C         	movff	___fladd@b,___fladd@grs
 30365                           
 30366                           ; BSR set to: 1
 30367  015F1A  C12D  F129         	movff	___fladd@a,___fladd@b
 30368                           
 30369                           ; BSR set to: 1
 30370  015F1E  C13C  F12D         	movff	___fladd@grs,___fladd@a
 30371                           
 30372                           ; BSR set to: 1
 30373  015F22  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 30374                           
 30375                           ; BSR set to: 1
 30376  015F26  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 30377                           
 30378                           ; BSR set to: 1
 30379  015F2A  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 30380                           
 30381                           ; BSR set to: 1
 30382  015F2E  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 30383                           
 30384                           ; BSR set to: 1
 30385  015F32  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 30386                           
 30387                           ; BSR set to: 1
 30388  015F36  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 30389                           
 30390                           ; BSR set to: 1
 30391  015F3A  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 30392                           
 30393                           ; BSR set to: 1
 30394  015F3E  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 30395                           
 30396                           ; BSR set to: 1
 30397  015F42  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 30398  015F46                     l2687:
 30399                           
 30400                           ; BSR set to: 1
 30401                           
 30402                           ; BSR set to: 1
 30403  015F46  0E00               	movlw	0
 30404  015F48  6F3C               	movwf	___fladd@grs& (0+255),b
 30405                           
 30406                           ; BSR set to: 1
 30407  015F4A  513B               	movf	___fladd@bexp& (0+255),w,b
 30408  015F4C  6F31               	movwf	??___fladd& (0+255),b
 30409  015F4E  6B32               	clrf	(??___fladd+1)& (0+255),b
 30410  015F50  1F31               	comf	??___fladd& (0+255),f,b
 30411  015F52  1F32               	comf	(??___fladd+1)& (0+255),f,b
 30412  015F54  4B31               	infsnz	??___fladd& (0+255),f,b
 30413  015F56  2B32               	incf	(??___fladd+1)& (0+255),f,b
 30414  015F58  513A               	movf	___fladd@aexp& (0+255),w,b
 30415  015F5A  6F33               	movwf	(??___fladd+2)& (0+255),b
 30416  015F5C  6B34               	clrf	(??___fladd+3)& (0+255),b
 30417  015F5E  5131               	movf	??___fladd& (0+255),w,b
 30418  015F60  2733               	addwf	(??___fladd+2)& (0+255),f,b
 30419  015F62  5132               	movf	(??___fladd+1)& (0+255),w,b
 30420  015F64  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 30421  015F66  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 30422  015F68  D02C               	goto	l2691
 30423  015F6A  5134               	movf	(??___fladd+3)& (0+255),w,b
 30424  015F6C  E104               	bnz	u16330
 30425  015F6E  0E1A               	movlw	26
 30426  015F70  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 30427  015F72  A0D8               	btfss	status,0,c
 30428  015F74  D026               	goto	l2691
 30429  015F76                     u16330:
 30430                           
 30431                           ; BSR set to: 1
 30432  015F76  5129               	movf	___fladd@b& (0+255),w,b
 30433  015F78  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 30434  015F7A  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 30435  015F7C  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 30436  015F7E  B4D8               	btfsc	status,2,c
 30437  015F80  D002               	goto	u16340
 30438  015F82  0E01               	movlw	1
 30439  015F84  D001               	goto	u16350
 30440  015F86                     u16340:
 30441  015F86  0E00               	movlw	0
 30442  015F88                     u16350:
 30443  015F88  6F3C               	movwf	___fladd@grs& (0+255),b
 30444                           
 30445                           ; BSR set to: 1
 30446  015F8A  0E00               	movlw	0
 30447  015F8C  6F29               	movwf	___fladd@b& (0+255),b
 30448  015F8E  0E00               	movlw	0
 30449  015F90  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30450  015F92  0E00               	movlw	0
 30451  015F94  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30452  015F96  0E00               	movlw	0
 30453  015F98  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30454                           
 30455                           ; BSR set to: 1
 30456  015F9A  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 30457  015F9E  D015               	goto	u16380
 30458  015FA0                     l2692:
 30459                           
 30460                           ; BSR set to: 1
 30461  015FA0  A13C               	btfss	___fladd@grs& (0+255),0,b
 30462  015FA2  D005               	goto	l2693
 30463                           
 30464                           ; BSR set to: 1
 30465  015FA4  90D8               	bcf	status,0,c
 30466  015FA6  313C               	rrcf	___fladd@grs& (0+255),w,b
 30467  015FA8  0901               	iorlw	1
 30468  015FAA  6F3C               	movwf	___fladd@grs& (0+255),b
 30469  015FAC  D002               	goto	l2694
 30470  015FAE                     l2693:
 30471                           
 30472                           ; BSR set to: 1
 30473                           
 30474                           ; BSR set to: 1
 30475  015FAE  90D8               	bcf	status,0,c
 30476  015FB0  333C               	rrcf	___fladd@grs& (0+255),f,b
 30477  015FB2                     l2694:
 30478                           
 30479                           ; BSR set to: 1
 30480                           
 30481                           ; BSR set to: 1
 30482  015FB2  B129               	btfsc	___fladd@b& (0+255),0,b
 30483                           
 30484                           ; BSR set to: 1
 30485  015FB4  8F3C               	bsf	___fladd@grs& (0+255),7,b
 30486                           
 30487                           ; BSR set to: 1
 30488                           
 30489                           ; BSR set to: 1
 30490  015FB6  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 30491  015FB8  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 30492  015FBA  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 30493  015FBC  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 30494  015FBE  3329               	rrcf	___fladd@b& (0+255),f,b
 30495                           
 30496                           ; BSR set to: 1
 30497  015FC0  2B3B               	incf	___fladd@bexp& (0+255),f,b
 30498  015FC2                     l2691:
 30499                           
 30500                           ; BSR set to: 1
 30501  015FC2  513A               	movf	___fladd@aexp& (0+255),w,b
 30502  015FC4  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 30503  015FC6  A0D8               	btfss	status,0,c
 30504  015FC8  D7EB               	goto	l2692
 30505  015FCA                     u16380:
 30506                           
 30507                           ; BSR set to: 1
 30508                           
 30509                           ; BSR set to: 1
 30510  015FCA  BD39               	btfsc	___fladd@signs& (0+255),6,b
 30511  015FCC  D029               	goto	l2697
 30512                           
 30513                           ; BSR set to: 1
 30514  015FCE  513B               	movf	___fladd@bexp& (0+255),w,b
 30515  015FD0  A4D8               	btfss	status,2,c
 30516  015FD2  D009               	goto	l2698
 30517                           
 30518                           ; BSR set to: 1
 30519  015FD4  0E00               	movlw	0
 30520  015FD6  6F29               	movwf	?___fladd& (0+255),b
 30521  015FD8  0E00               	movlw	0
 30522  015FDA  6F2A               	movwf	(?___fladd+1)& (0+255),b
 30523  015FDC  0E00               	movlw	0
 30524  015FDE  6F2B               	movwf	(?___fladd+2)& (0+255),b
 30525  015FE0  0E00               	movlw	0
 30526  015FE2  6F2C               	movwf	(?___fladd+3)& (0+255),b
 30527                           
 30528                           ; BSR set to: 1
 30529  015FE4  0012               	return	
 30530  015FE6                     l2698:
 30531                           
 30532                           ; BSR set to: 1
 30533                           
 30534                           ; BSR set to: 1
 30535  015FE6  512D               	movf	___fladd@a& (0+255),w,b
 30536  015FE8  2729               	addwf	___fladd@b& (0+255),f,b
 30537  015FEA  512E               	movf	(___fladd@a+1)& (0+255),w,b
 30538  015FEC  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 30539  015FEE  512F               	movf	(___fladd@a+2)& (0+255),w,b
 30540  015FF0  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 30541  015FF2  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30542  015FF4  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 30543                           
 30544                           ; BSR set to: 1
 30545  015FF6  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 30546  015FF8  D083               	goto	u16510
 30547                           
 30548                           ; BSR set to: 1
 30549  015FFA  A13C               	btfss	___fladd@grs& (0+255),0,b
 30550  015FFC  D006               	goto	l2701
 30551                           
 30552                           ; BSR set to: 1
 30553  015FFE  90D8               	bcf	status,0,c
 30554  016000  333C               	rrcf	___fladd@grs& (0+255),f,b
 30555  016002  513C               	movf	___fladd@grs& (0+255),w,b
 30556  016004  0901               	iorlw	1
 30557  016006  6F3C               	movwf	___fladd@grs& (0+255),b
 30558  016008  D002               	goto	l2702
 30559  01600A                     l2701:
 30560                           
 30561                           ; BSR set to: 1
 30562                           
 30563                           ; BSR set to: 1
 30564  01600A  90D8               	bcf	status,0,c
 30565  01600C  333C               	rrcf	___fladd@grs& (0+255),f,b
 30566  01600E                     l2702:
 30567                           
 30568                           ; BSR set to: 1
 30569                           
 30570                           ; BSR set to: 1
 30571  01600E  B129               	btfsc	___fladd@b& (0+255),0,b
 30572                           
 30573                           ; BSR set to: 1
 30574  016010  8F3C               	bsf	___fladd@grs& (0+255),7,b
 30575                           
 30576                           ; BSR set to: 1
 30577                           
 30578                           ; BSR set to: 1
 30579  016012  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 30580  016014  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 30581  016016  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 30582  016018  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 30583  01601A  3329               	rrcf	___fladd@b& (0+255),f,b
 30584                           
 30585                           ; BSR set to: 1
 30586  01601C  2B3B               	incf	___fladd@bexp& (0+255),f,b
 30587                           
 30588                           ; BSR set to: 1
 30589  01601E  D070               	goto	u16510
 30590  016020                     l2697:
 30591                           
 30592                           ; BSR set to: 1
 30593                           
 30594                           ; BSR set to: 1
 30595  016020  512D               	movf	___fladd@a& (0+255),w,b
 30596  016022  5D29               	subwf	___fladd@b& (0+255),w,b
 30597  016024  512E               	movf	(___fladd@a+1)& (0+255),w,b
 30598  016026  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 30599  016028  512F               	movf	(___fladd@a+2)& (0+255),w,b
 30600  01602A  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 30601  01602C  512C               	movf	(___fladd@b+3)& (0+255),w,b
 30602  01602E  0A80               	xorlw	128
 30603  016030  6F31               	movwf	??___fladd& (0+255),b
 30604  016032  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30605  016034  0A80               	xorlw	128
 30606  016036  5931               	subwfb	??___fladd& (0+255),w,b
 30607  016038  B0D8               	btfsc	status,0,c
 30608  01603A  D036               	goto	l2705
 30609                           
 30610                           ; BSR set to: 1
 30611  01603C  C129  F131         	movff	___fladd@b,??___fladd
 30612  016040  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 30613  016044  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 30614  016048  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 30615  01604C  1F31               	comf	??___fladd& (0+255),f,b
 30616  01604E  1F32               	comf	(??___fladd+1)& (0+255),f,b
 30617  016050  1F33               	comf	(??___fladd+2)& (0+255),f,b
 30618  016052  1F34               	comf	(??___fladd+3)& (0+255),f,b
 30619  016054  2B31               	incf	??___fladd& (0+255),f,b
 30620  016056  0E00               	movlw	0
 30621  016058  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 30622  01605A  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 30623  01605C  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 30624  01605E  512D               	movf	___fladd@a& (0+255),w,b
 30625  016060  2531               	addwf	??___fladd& (0+255),w,b
 30626  016062  6F35               	movwf	(??___fladd+4)& (0+255),b
 30627  016064  512E               	movf	(___fladd@a+1)& (0+255),w,b
 30628  016066  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 30629  016068  6F36               	movwf	(??___fladd+5)& (0+255),b
 30630  01606A  512F               	movf	(___fladd@a+2)& (0+255),w,b
 30631  01606C  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 30632  01606E  6F37               	movwf	(??___fladd+6)& (0+255),b
 30633  016070  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30634  016072  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 30635  016074  6F38               	movwf	(??___fladd+7)& (0+255),b
 30636  016076  0EFF               	movlw	255
 30637  016078  2535               	addwf	(??___fladd+4)& (0+255),w,b
 30638  01607A  6F29               	movwf	___fladd@b& (0+255),b
 30639  01607C  0EFF               	movlw	255
 30640  01607E  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 30641  016080  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30642  016082  0EFF               	movlw	255
 30643  016084  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 30644  016086  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30645  016088  0EFF               	movlw	255
 30646  01608A  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 30647  01608C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30648  01608E  0E80               	movlw	128
 30649  016090  1B39               	xorwf	___fladd@signs& (0+255),f,b
 30650                           
 30651                           ; BSR set to: 1
 30652  016092  6D3C               	negf	___fladd@grs& (0+255),b
 30653                           
 30654                           ; BSR set to: 1
 30655  016094  513C               	movf	___fladd@grs& (0+255),w,b
 30656  016096  A4D8               	btfss	status,2,c
 30657  016098  D00F               	goto	l2707
 30658                           
 30659                           ; BSR set to: 1
 30660  01609A  0E01               	movlw	1
 30661  01609C  2729               	addwf	___fladd@b& (0+255),f,b
 30662  01609E  0E00               	movlw	0
 30663  0160A0  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 30664  0160A2  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 30665  0160A4  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 30666                           
 30667                           ; BSR set to: 1
 30668  0160A6  D008               	goto	l2707
 30669  0160A8                     l2705:
 30670                           
 30671                           ; BSR set to: 1
 30672                           
 30673                           ; BSR set to: 1
 30674  0160A8  512D               	movf	___fladd@a& (0+255),w,b
 30675  0160AA  5F29               	subwf	___fladd@b& (0+255),f,b
 30676  0160AC  512E               	movf	(___fladd@a+1)& (0+255),w,b
 30677  0160AE  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 30678  0160B0  512F               	movf	(___fladd@a+2)& (0+255),w,b
 30679  0160B2  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 30680  0160B4  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30681  0160B6  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 30682  0160B8                     l2707:
 30683                           
 30684                           ; BSR set to: 1
 30685  0160B8  5129               	movf	___fladd@b& (0+255),w,b
 30686  0160BA  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 30687  0160BC  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 30688  0160BE  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 30689  0160C0  A4D8               	btfss	status,2,c
 30690  0160C2  D01C               	goto	l2714
 30691                           
 30692                           ; BSR set to: 1
 30693  0160C4  513C               	movf	___fladd@grs& (0+255),w,b
 30694  0160C6  A4D8               	btfss	status,2,c
 30695  0160C8  D019               	goto	l2714
 30696                           
 30697                           ; BSR set to: 1
 30698  0160CA  0E00               	movlw	0
 30699  0160CC  6F29               	movwf	?___fladd& (0+255),b
 30700  0160CE  0E00               	movlw	0
 30701  0160D0  6F2A               	movwf	(?___fladd+1)& (0+255),b
 30702  0160D2  0E00               	movlw	0
 30703  0160D4  6F2B               	movwf	(?___fladd+2)& (0+255),b
 30704  0160D6  0E00               	movlw	0
 30705  0160D8  6F2C               	movwf	(?___fladd+3)& (0+255),b
 30706                           
 30707                           ; BSR set to: 1
 30708  0160DA  0012               	return	
 30709  0160DC                     
 30710                           ; BSR set to: 1
 30711                           
 30712                           ; BSR set to: 1
 30713  0160DC  90D8               	bcf	status,0,c
 30714  0160DE  3729               	rlcf	___fladd@b& (0+255),f,b
 30715  0160E0  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 30716  0160E2  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 30717  0160E4  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 30718                           
 30719                           ; BSR set to: 1
 30720  0160E6  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 30721                           
 30722                           ; BSR set to: 1
 30723  0160E8  8129               	bsf	___fladd@b& (0+255),0,b
 30724                           
 30725                           ; BSR set to: 1
 30726                           
 30727                           ; BSR set to: 1
 30728  0160EA  A13C               	btfss	___fladd@grs& (0+255),0,b
 30729  0160EC  D002               	goto	l2712
 30730                           
 30731                           ; BSR set to: 1
 30732  0160EE  80D8               	bsf	status,0,c
 30733  0160F0  D001               	goto	L8
 30734  0160F2                     l2712:
 30735                           
 30736                           ; BSR set to: 1
 30737                           
 30738                           ; BSR set to: 1
 30739  0160F2  90D8               	bcf	status,0,c
 30740  0160F4                     L8:
 30741  0160F4  373C               	rlcf	___fladd@grs& (0+255),f,b
 30742                           
 30743                           ; BSR set to: 1
 30744                           
 30745                           ; BSR set to: 1
 30746  0160F6  513B               	movf	___fladd@bexp& (0+255),w,b
 30747  0160F8  A4D8               	btfss	status,2,c
 30748                           
 30749                           ; BSR set to: 1
 30750  0160FA  073B               	decf	___fladd@bexp& (0+255),f,b
 30751  0160FC                     l2714:
 30752                           
 30753                           ; BSR set to: 1
 30754                           
 30755                           ; BSR set to: 1
 30756                           
 30757                           ; BSR set to: 1
 30758  0160FC  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 30759  0160FE  D7EE               	goto	l2710
 30760  016100                     u16510:
 30761                           
 30762                           ; BSR set to: 1
 30763                           
 30764                           ; BSR set to: 1
 30765                           
 30766                           ; BSR set to: 1
 30767  016100  0E00               	movlw	0
 30768  016102  6F3A               	movwf	___fladd@aexp& (0+255),b
 30769                           
 30770                           ; BSR set to: 1
 30771  016104  AF3C               	btfss	___fladd@grs& (0+255),7,b
 30772  016106  D00A               	goto	l2719
 30773                           
 30774                           ; BSR set to: 1
 30775  016108  C13C  F131         	movff	___fladd@grs,??___fladd
 30776  01610C  0E7F               	movlw	127
 30777  01610E  1731               	andwf	??___fladd& (0+255),f,b
 30778  016110  A4D8               	btfss	status,2,c
 30779  016112  D002               	goto	u16540
 30780                           
 30781                           ; BSR set to: 1
 30782                           
 30783                           ; BSR set to: 1
 30784  016114  A129               	btfss	___fladd@b& (0+255),0,b
 30785  016116  D002               	goto	l2719
 30786  016118                     u16540:
 30787                           
 30788                           ; BSR set to: 1
 30789  016118  0E01               	movlw	1
 30790  01611A  6F3A               	movwf	___fladd@aexp& (0+255),b
 30791  01611C                     l2719:
 30792                           
 30793                           ; BSR set to: 1
 30794                           
 30795                           ; BSR set to: 1
 30796                           
 30797                           ; BSR set to: 1
 30798  01611C  513A               	movf	___fladd@aexp& (0+255),w,b
 30799  01611E  B4D8               	btfsc	status,2,c
 30800  016120  D020               	goto	l2722
 30801                           
 30802                           ; BSR set to: 1
 30803  016122  0E01               	movlw	1
 30804  016124  2729               	addwf	___fladd@b& (0+255),f,b
 30805  016126  0E00               	movlw	0
 30806  016128  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 30807  01612A  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 30808  01612C  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 30809                           
 30810                           ; BSR set to: 1
 30811  01612E  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 30812  016130  D018               	goto	l2722
 30813                           
 30814                           ; BSR set to: 1
 30815  016132  C129  F131         	movff	___fladd@b,??___fladd
 30816  016136  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 30817  01613A  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 30818  01613E  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 30819  016142  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 30820  016144  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 30821  016146  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 30822  016148  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 30823  01614A  3331               	rrcf	??___fladd& (0+255),f,b
 30824  01614C  C131  F129         	movff	??___fladd,___fladd@b
 30825  016150  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 30826  016154  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 30827  016158  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 30828  01615C  293B               	incf	___fladd@bexp& (0+255),w,b
 30829  01615E  A4D8               	btfss	status,2,c
 30830                           
 30831                           ; BSR set to: 1
 30832  016160  2B3B               	incf	___fladd@bexp& (0+255),f,b
 30833  016162                     l2722:
 30834                           
 30835                           ; BSR set to: 1
 30836                           
 30837                           ; BSR set to: 1
 30838                           
 30839                           ; BSR set to: 1
 30840                           
 30841                           ; BSR set to: 1
 30842  016162  293B               	incf	___fladd@bexp& (0+255),w,b
 30843  016164  B4D8               	btfsc	status,2,c
 30844  016166  D003               	goto	u16590
 30845                           
 30846                           ; BSR set to: 1
 30847  016168  513B               	movf	___fladd@bexp& (0+255),w,b
 30848  01616A  A4D8               	btfss	status,2,c
 30849  01616C  D00D               	goto	l2726
 30850  01616E                     u16590:
 30851                           
 30852                           ; BSR set to: 1
 30853                           
 30854                           ; BSR set to: 1
 30855  01616E  0E00               	movlw	0
 30856  016170  6F29               	movwf	___fladd@b& (0+255),b
 30857  016172  0E00               	movlw	0
 30858  016174  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30859  016176  0E00               	movlw	0
 30860  016178  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30861  01617A  0E00               	movlw	0
 30862  01617C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30863  01617E  513B               	movf	___fladd@bexp& (0+255),w,b
 30864  016180  A4D8               	btfss	status,2,c
 30865  016182  D002               	goto	l2726
 30866                           
 30867                           ; BSR set to: 1
 30868  016184  0E00               	movlw	0
 30869  016186  6F39               	movwf	___fladd@signs& (0+255),b
 30870  016188                     l2726:
 30871                           
 30872                           ; BSR set to: 1
 30873                           
 30874                           ; BSR set to: 1
 30875                           
 30876                           ; BSR set to: 1
 30877  016188  A13B               	btfss	___fladd@bexp& (0+255),0,b
 30878  01618A  D002               	goto	l2727
 30879                           
 30880                           ; BSR set to: 1
 30881  01618C  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 30882  01618E  D001               	goto	l2728
 30883  016190                     l2727:
 30884                           
 30885                           ; BSR set to: 1
 30886                           
 30887                           ; BSR set to: 1
 30888  016190  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 30889  016192                     l2728:
 30890                           
 30891                           ; BSR set to: 1
 30892                           
 30893                           ; BSR set to: 1
 30894  016192  90D8               	bcf	status,0,c
 30895  016194  313B               	rrcf	___fladd@bexp& (0+255),w,b
 30896  016196  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30897                           
 30898                           ; BSR set to: 1
 30899  016198  BF39               	btfsc	___fladd@signs& (0+255),7,b
 30900                           
 30901                           ; BSR set to: 1
 30902  01619A  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 30903                           
 30904                           ; BSR set to: 1
 30905                           
 30906                           ; BSR set to: 1
 30907  01619C  C129  F129         	movff	___fladd@b,?___fladd
 30908  0161A0  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 30909  0161A4  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 30910  0161A8  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 30911  0161AC  0012               	return	
 30912  0161AE                     __end_of___fladd:
 30913                           	opt stack 0
 30914                           tosu	equ	0xFFF
 30915                           tosh	equ	0xFFE
 30916                           tosl	equ	0xFFD
 30917                           pclath	equ	0xFFA
 30918                           tblptru	equ	0xFF8
 30919                           tblptrh	equ	0xFF7
 30920                           tblptrl	equ	0xFF6
 30921                           tablat	equ	0xFF5
 30922                           prodh	equ	0xFF4
 30923                           prodl	equ	0xFF3
 30924                           intcon	equ	0xFF2
 30925                           indf0	equ	0xFEF
 30926                           postinc0	equ	0xFEE
 30927                           fsr0h	equ	0xFEA
 30928                           fsr0l	equ	0xFE9
 30929                           wreg	equ	0xFE8
 30930                           indf1	equ	0xFE7
 30931                           postdec1	equ	0xFE5
 30932                           plusw1	equ	0xFE3
 30933                           fsr1h	equ	0xFE2
 30934                           fsr1l	equ	0xFE1
 30935                           indf2	equ	0xFDF
 30936                           postinc2	equ	0xFDE
 30937                           postdec2	equ	0xFDD
 30938                           plusw2	equ	0xFDB
 30939                           fsr2h	equ	0xFDA
 30940                           fsr2l	equ	0xFD9
 30941                           status	equ	0xFD8
 30942                           
 30943 ;; *************** function ___flneg *****************
 30944 ;; Defined at:
 30945 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 30946 ;; Parameters:    Size  Location     Type
 30947 ;;  f1              4   37[BANK1 ] unsigned char 
 30948 ;; Auto vars:     Size  Location     Type
 30949 ;;		None
 30950 ;; Return value:  Size  Location     Type
 30951 ;;                  4   37[BANK1 ] unsigned char 
 30952 ;; Registers used:
 30953 ;;		wreg, status,2, status,0
 30954 ;; Tracked objects:
 30955 ;;		On entry : 0/0
 30956 ;;		On exit  : 0/0
 30957 ;;		Unchanged: 0/0
 30958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30959 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30962 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30963 ;;Total ram usage:        4 bytes
 30964 ;; Hardware stack levels used:    1
 30965 ;; Hardware stack levels required when called:   13
 30966 ;; This function calls:
 30967 ;;		Nothing
 30968 ;; This function is called by:
 30969 ;;		_ringBufferLUT
 30970 ;;		__doprnt
 30971 ;; This function uses a non-reentrant model
 30972 ;;
 30973                           
 30974                           	psect	text48
 30975  01ACB2                     __ptext48:
 30976                           	opt stack 0
 30977  01ACB2                     ___flneg:
 30978                           	opt stack 13
 30979                           
 30980                           ; BSR set to: 1
 30981                           ;incstack = 0
 30982  01ACB2  0101               	movlb	1	; () banked
 30983  01ACB4  5125               	movf	___flneg@f1& (0+255),w,b
 30984  01ACB6  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 30985  01ACB8  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 30986  01ACBA  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 30987  01ACBC  B4D8               	btfsc	status,2,c
 30988  01ACBE  D008               	goto	l2375
 30989                           
 30990                           ; BSR set to: 1
 30991  01ACC0  0E00               	movlw	0
 30992  01ACC2  1B25               	xorwf	___flneg@f1& (0+255),f,b
 30993  01ACC4  0E00               	movlw	0
 30994  01ACC6  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 30995  01ACC8  0E00               	movlw	0
 30996  01ACCA  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 30997  01ACCC  0E80               	movlw	128
 30998  01ACCE  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 30999  01ACD0                     l2375:
 31000                           
 31001                           ; BSR set to: 1
 31002                           
 31003                           ; BSR set to: 1
 31004  01ACD0  C125  F125         	movff	___flneg@f1,?___flneg
 31005  01ACD4  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 31006  01ACD8  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 31007  01ACDC  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 31008  01ACE0  0012               	return	
 31009  01ACE2                     __end_of___flneg:
 31010                           	opt stack 0
 31011                           tosu	equ	0xFFF
 31012                           tosh	equ	0xFFE
 31013                           tosl	equ	0xFFD
 31014                           pclath	equ	0xFFA
 31015                           tblptru	equ	0xFF8
 31016                           tblptrh	equ	0xFF7
 31017                           tblptrl	equ	0xFF6
 31018                           tablat	equ	0xFF5
 31019                           prodh	equ	0xFF4
 31020                           prodl	equ	0xFF3
 31021                           intcon	equ	0xFF2
 31022                           indf0	equ	0xFEF
 31023                           postinc0	equ	0xFEE
 31024                           fsr0h	equ	0xFEA
 31025                           fsr0l	equ	0xFE9
 31026                           wreg	equ	0xFE8
 31027                           indf1	equ	0xFE7
 31028                           postdec1	equ	0xFE5
 31029                           plusw1	equ	0xFE3
 31030                           fsr1h	equ	0xFE2
 31031                           fsr1l	equ	0xFE1
 31032                           indf2	equ	0xFDF
 31033                           postinc2	equ	0xFDE
 31034                           postdec2	equ	0xFDD
 31035                           plusw2	equ	0xFDB
 31036                           fsr2h	equ	0xFDA
 31037                           fsr2l	equ	0xFD9
 31038                           status	equ	0xFD8
 31039                           
 31040 ;; *************** function _saveSRAMMaxToEEPROM *****************
 31041 ;; Defined at:
 31042 ;;		line 155 in file "main.c"
 31043 ;; Parameters:    Size  Location     Type
 31044 ;;		None
 31045 ;; Auto vars:     Size  Location     Type
 31046 ;;		None
 31047 ;; Return value:  Size  Location     Type
 31048 ;;                  1    wreg      void 
 31049 ;; Registers used:
 31050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31051 ;; Tracked objects:
 31052 ;;		On entry : 0/0
 31053 ;;		On exit  : 0/0
 31054 ;;		Unchanged: 0/0
 31055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31060 ;;Total ram usage:        0 bytes
 31061 ;; Hardware stack levels used:    1
 31062 ;; Hardware stack levels required when called:   15
 31063 ;; This function calls:
 31064 ;;		___flge
 31065 ;;		_writeDoubleToEEPROM
 31066 ;; This function is called by:
 31067 ;;		_main
 31068 ;; This function uses a non-reentrant model
 31069 ;;
 31070                           
 31071                           	psect	text49
 31072  017890                     __ptext49:
 31073                           	opt stack 0
 31074  017890                     _saveSRAMMaxToEEPROM:
 31075                           	opt stack 15
 31076                           
 31077                           ;main.c: 159: if (Irms > max_Irms) {
 31078                           
 31079                           ; BSR set to: 1
 31080                           ;incstack = 0
 31081  017890  C21B  F117         	movff	_max_Irms,___flge@ff1	;volatile
 31082  017894  C21C  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
 31083  017898  C21D  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
 31084  01789C  C21E  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
 31085  0178A0  C1CA  F11B         	movff	_Irms,___flge@ff2	;volatile
 31086  0178A4  C1CB  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
 31087  0178A8  C1CC  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
 31088  0178AC  C1CD  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
 31089  0178B0  EC61  F0C6         	call	___flge	;wreg free
 31090  0178B4  0101               	movlb	1	; () banked
 31091  0178B6  B0D8               	btfsc	status,0,c
 31092  0178B8  D01E               	goto	l1314
 31093                           
 31094                           ; BSR set to: 1
 31095                           ;main.c: 160: writeDoubleToEEPROM(Irms, max_Irms_address);
 31096  0178BA  C1CA  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
 31097  0178BE  C1CB  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
 31098  0178C2  C1CC  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
 31099  0178C6  C1CD  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
 31100  0178CA  0E07               	movlw	low _max_Irms_address
 31101  0178CC  6EF6               	movwf	tblptrl,c
 31102  0178CE                     	if	1	;There is more than 1 active tblptr byte
 31103  0178CE  0ED0               	movlw	high _max_Irms_address
 31104  0178D0  6EF7               	movwf	tblptrh,c
 31105  0178D2                     	endif
 31106  0178D2                     	if	1	;There are 3 active tblptr bytes
 31107  0178D2  0E00               	movlw	low (_max_Irms_address shr (0+16))
 31108  0178D4  6EF8               	movwf	tblptru,c
 31109  0178D6                     	endif
 31110  0178D6  0009               	tblrd		*+
 31111  0178D8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31112  0178DC  000A               	tblrd		*-
 31113  0178DE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31114  0178E2  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 31115                           
 31116                           ;main.c: 161: max_Irms = Irms;
 31117  0178E6  C1CA  F21B         	movff	_Irms,_max_Irms	;volatile
 31118  0178EA  C1CB  F21C         	movff	_Irms+1,_max_Irms+1	;volatile
 31119  0178EE  C1CC  F21D         	movff	_Irms+2,_max_Irms+2	;volatile
 31120  0178F2  C1CD  F21E         	movff	_Irms+3,_max_Irms+3	;volatile
 31121  0178F6                     l1314:
 31122                           
 31123                           ;main.c: 162: }
 31124                           ;main.c: 164: if (Avg_Power > max_Power) {
 31125  0178F6  C217  F117         	movff	_max_Power,___flge@ff1	;volatile
 31126  0178FA  C218  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
 31127  0178FE  C219  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
 31128  017902  C21A  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
 31129  017906  C1C6  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
 31130  01790A  C1C7  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
 31131  01790E  C1C8  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
 31132  017912  C1C9  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
 31133  017916  EC61  F0C6         	call	___flge	;wreg free
 31134  01791A  0101               	movlb	1	; () banked
 31135  01791C  B0D8               	btfsc	status,0,c
 31136  01791E  D01E               	goto	l1315
 31137                           
 31138                           ; BSR set to: 1
 31139                           ;main.c: 165: writeDoubleToEEPROM(Avg_Power, max_Power_address);
 31140  017920  C1C6  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
 31141  017924  C1C7  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
 31142  017928  C1C8  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
 31143  01792C  C1C9  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
 31144  017930  0E05               	movlw	low _max_Power_address
 31145  017932  6EF6               	movwf	tblptrl,c
 31146  017934                     	if	1	;There is more than 1 active tblptr byte
 31147  017934  0ED0               	movlw	high _max_Power_address
 31148  017936  6EF7               	movwf	tblptrh,c
 31149  017938                     	endif
 31150  017938                     	if	1	;There are 3 active tblptr bytes
 31151  017938  0E00               	movlw	low (_max_Power_address shr (0+16))
 31152  01793A  6EF8               	movwf	tblptru,c
 31153  01793C                     	endif
 31154  01793C  0009               	tblrd		*+
 31155  01793E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31156  017942  000A               	tblrd		*-
 31157  017944  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31158  017948  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 31159                           
 31160                           ;main.c: 166: max_Power = Avg_Power;
 31161  01794C  C1C6  F217         	movff	_Avg_Power,_max_Power	;volatile
 31162  017950  C1C7  F218         	movff	_Avg_Power+1,_max_Power+1	;volatile
 31163  017954  C1C8  F219         	movff	_Avg_Power+2,_max_Power+2	;volatile
 31164  017958  C1C9  F21A         	movff	_Avg_Power+3,_max_Power+3	;volatile
 31165  01795C                     l1315:
 31166                           
 31167                           ;main.c: 167: }
 31168                           ;main.c: 169: if (POS3P3_ADC_Result > max_POS3P3_ADC_Result) {
 31169  01795C  C213  F117         	movff	_max_POS3P3_ADC_Result,___flge@ff1	;volatile
 31170  017960  C214  F118         	movff	_max_POS3P3_ADC_Result+1,___flge@ff1+1	;volatile
 31171  017964  C215  F119         	movff	_max_POS3P3_ADC_Result+2,___flge@ff1+2	;volatile
 31172  017968  C216  F11A         	movff	_max_POS3P3_ADC_Result+3,___flge@ff1+3	;volatile
 31173  01796C  C1DA  F11B         	movff	_POS3P3_ADC_Result,___flge@ff2	;volatile
 31174  017970  C1DB  F11C         	movff	_POS3P3_ADC_Result+1,___flge@ff2+1	;volatile
 31175  017974  C1DC  F11D         	movff	_POS3P3_ADC_Result+2,___flge@ff2+2	;volatile
 31176  017978  C1DD  F11E         	movff	_POS3P3_ADC_Result+3,___flge@ff2+3	;volatile
 31177  01797C  EC61  F0C6         	call	___flge	;wreg free
 31178  017980  0101               	movlb	1	; () banked
 31179  017982  B0D8               	btfsc	status,0,c
 31180  017984  D01E               	goto	l1316
 31181                           
 31182                           ; BSR set to: 1
 31183                           ;main.c: 170: writeDoubleToEEPROM(POS3P3_ADC_Result, max_POS3P3_ADC_Result_address);
 31184  017986  C1DA  F11B         	movff	_POS3P3_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31185  01798A  C1DB  F11C         	movff	_POS3P3_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31186  01798E  C1DC  F11D         	movff	_POS3P3_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31187  017992  C1DD  F11E         	movff	_POS3P3_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31188  017996  0E03               	movlw	low _max_POS3P3_ADC_Result_address
 31189  017998  6EF6               	movwf	tblptrl,c
 31190  01799A                     	if	1	;There is more than 1 active tblptr byte
 31191  01799A  0ED0               	movlw	high _max_POS3P3_ADC_Result_address
 31192  01799C  6EF7               	movwf	tblptrh,c
 31193  01799E                     	endif
 31194  01799E                     	if	1	;There are 3 active tblptr bytes
 31195  01799E  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 31196  0179A0  6EF8               	movwf	tblptru,c
 31197  0179A2                     	endif
 31198  0179A2  0009               	tblrd		*+
 31199  0179A4  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31200  0179A8  000A               	tblrd		*-
 31201  0179AA  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31202  0179AE  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 31203                           
 31204                           ;main.c: 171: max_POS3P3_ADC_Result = POS3P3_ADC_Result;
 31205  0179B2  C1DA  F213         	movff	_POS3P3_ADC_Result,_max_POS3P3_ADC_Result	;volatile
 31206  0179B6  C1DB  F214         	movff	_POS3P3_ADC_Result+1,_max_POS3P3_ADC_Result+1	;volatile
 31207  0179BA  C1DC  F215         	movff	_POS3P3_ADC_Result+2,_max_POS3P3_ADC_Result+2	;volatile
 31208  0179BE  C1DD  F216         	movff	_POS3P3_ADC_Result+3,_max_POS3P3_ADC_Result+3	;volatile
 31209  0179C2                     l1316:
 31210                           
 31211                           ;main.c: 172: }
 31212                           ;main.c: 174: if (POS12_ADC_Result > max_POS12_ADC_Result) {
 31213  0179C2  C20F  F117         	movff	_max_POS12_ADC_Result,___flge@ff1	;volatile
 31214  0179C6  C210  F118         	movff	_max_POS12_ADC_Result+1,___flge@ff1+1	;volatile
 31215  0179CA  C211  F119         	movff	_max_POS12_ADC_Result+2,___flge@ff1+2	;volatile
 31216  0179CE  C212  F11A         	movff	_max_POS12_ADC_Result+3,___flge@ff1+3	;volatile
 31217  0179D2  C1D6  F11B         	movff	_POS12_ADC_Result,___flge@ff2	;volatile
 31218  0179D6  C1D7  F11C         	movff	_POS12_ADC_Result+1,___flge@ff2+1	;volatile
 31219  0179DA  C1D8  F11D         	movff	_POS12_ADC_Result+2,___flge@ff2+2	;volatile
 31220  0179DE  C1D9  F11E         	movff	_POS12_ADC_Result+3,___flge@ff2+3	;volatile
 31221  0179E2  EC61  F0C6         	call	___flge	;wreg free
 31222  0179E6  0101               	movlb	1	; () banked
 31223  0179E8  B0D8               	btfsc	status,0,c
 31224  0179EA  D01E               	goto	l1317
 31225                           
 31226                           ; BSR set to: 1
 31227                           ;main.c: 175: writeDoubleToEEPROM(POS12_ADC_Result, max_POS12_ADC_Result_address);
 31228  0179EC  C1D6  F11B         	movff	_POS12_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31229  0179F0  C1D7  F11C         	movff	_POS12_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31230  0179F4  C1D8  F11D         	movff	_POS12_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31231  0179F8  C1D9  F11E         	movff	_POS12_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31232  0179FC  0E01               	movlw	low _max_POS12_ADC_Result_address
 31233  0179FE  6EF6               	movwf	tblptrl,c
 31234  017A00                     	if	1	;There is more than 1 active tblptr byte
 31235  017A00  0ED0               	movlw	high _max_POS12_ADC_Result_address
 31236  017A02  6EF7               	movwf	tblptrh,c
 31237  017A04                     	endif
 31238  017A04                     	if	1	;There are 3 active tblptr bytes
 31239  017A04  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 31240  017A06  6EF8               	movwf	tblptru,c
 31241  017A08                     	endif
 31242  017A08  0009               	tblrd		*+
 31243  017A0A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31244  017A0E  000A               	tblrd		*-
 31245  017A10  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31246  017A14  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 31247                           
 31248                           ;main.c: 176: max_POS12_ADC_Result = POS12_ADC_Result;
 31249  017A18  C1D6  F20F         	movff	_POS12_ADC_Result,_max_POS12_ADC_Result	;volatile
 31250  017A1C  C1D7  F210         	movff	_POS12_ADC_Result+1,_max_POS12_ADC_Result+1	;volatile
 31251  017A20  C1D8  F211         	movff	_POS12_ADC_Result+2,_max_POS12_ADC_Result+2	;volatile
 31252  017A24  C1D9  F212         	movff	_POS12_ADC_Result+3,_max_POS12_ADC_Result+3	;volatile
 31253  017A28                     l1317:
 31254                           
 31255                           ;main.c: 177: }
 31256                           ;main.c: 179: if (Temp_ADC_Result > max_Temp_ADC_Result) {
 31257  017A28  C20B  F117         	movff	_max_Temp_ADC_Result,___flge@ff1	;volatile
 31258  017A2C  C20C  F118         	movff	_max_Temp_ADC_Result+1,___flge@ff1+1	;volatile
 31259  017A30  C20D  F119         	movff	_max_Temp_ADC_Result+2,___flge@ff1+2	;volatile
 31260  017A34  C20E  F11A         	movff	_max_Temp_ADC_Result+3,___flge@ff1+3	;volatile
 31261  017A38  C1D2  F11B         	movff	_Temp_ADC_Result,___flge@ff2	;volatile
 31262  017A3C  C1D3  F11C         	movff	_Temp_ADC_Result+1,___flge@ff2+1	;volatile
 31263  017A40  C1D4  F11D         	movff	_Temp_ADC_Result+2,___flge@ff2+2	;volatile
 31264  017A44  C1D5  F11E         	movff	_Temp_ADC_Result+3,___flge@ff2+3	;volatile
 31265  017A48  EC61  F0C6         	call	___flge	;wreg free
 31266  017A4C  0101               	movlb	1	; () banked
 31267  017A4E  B0D8               	btfsc	status,0,c
 31268  017A50  D01E               	goto	l1318
 31269                           
 31270                           ; BSR set to: 1
 31271                           ;main.c: 180: writeDoubleToEEPROM(Temp_ADC_Result, max_Temp_ADC_Result_address);
 31272  017A52  C1D2  F11B         	movff	_Temp_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31273  017A56  C1D3  F11C         	movff	_Temp_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31274  017A5A  C1D4  F11D         	movff	_Temp_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31275  017A5E  C1D5  F11E         	movff	_Temp_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31276  017A62  0EFF               	movlw	low _max_Temp_ADC_Result_address
 31277  017A64  6EF6               	movwf	tblptrl,c
 31278  017A66                     	if	1	;There is more than 1 active tblptr byte
 31279  017A66  0ECF               	movlw	high _max_Temp_ADC_Result_address
 31280  017A68  6EF7               	movwf	tblptrh,c
 31281  017A6A                     	endif
 31282  017A6A                     	if	1	;There are 3 active tblptr bytes
 31283  017A6A  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 31284  017A6C  6EF8               	movwf	tblptru,c
 31285  017A6E                     	endif
 31286  017A6E  0009               	tblrd		*+
 31287  017A70  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31288  017A74  000A               	tblrd		*-
 31289  017A76  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31290  017A7A  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 31291                           
 31292                           ;main.c: 181: max_Temp_ADC_Result = Temp_ADC_Result;
 31293  017A7E  C1D2  F20B         	movff	_Temp_ADC_Result,_max_Temp_ADC_Result	;volatile
 31294  017A82  C1D3  F20C         	movff	_Temp_ADC_Result+1,_max_Temp_ADC_Result+1	;volatile
 31295  017A86  C1D4  F20D         	movff	_Temp_ADC_Result+2,_max_Temp_ADC_Result+2	;volatile
 31296  017A8A  C1D5  F20E         	movff	_Temp_ADC_Result+3,_max_Temp_ADC_Result+3	;volatile
 31297  017A8E                     l1318:
 31298                           
 31299                           ;main.c: 182: }
 31300                           ;main.c: 184: if (FVR_ADC_Result > max_FVR_ADC_Result) {
 31301  017A8E  C207  F117         	movff	_max_FVR_ADC_Result,___flge@ff1	;volatile
 31302  017A92  C208  F118         	movff	_max_FVR_ADC_Result+1,___flge@ff1+1	;volatile
 31303  017A96  C209  F119         	movff	_max_FVR_ADC_Result+2,___flge@ff1+2	;volatile
 31304  017A9A  C20A  F11A         	movff	_max_FVR_ADC_Result+3,___flge@ff1+3	;volatile
 31305  017A9E  C1E2  F11B         	movff	_FVR_ADC_Result,___flge@ff2	;volatile
 31306  017AA2  C1E3  F11C         	movff	_FVR_ADC_Result+1,___flge@ff2+1	;volatile
 31307  017AA6  C1E4  F11D         	movff	_FVR_ADC_Result+2,___flge@ff2+2	;volatile
 31308  017AAA  C1E5  F11E         	movff	_FVR_ADC_Result+3,___flge@ff2+3	;volatile
 31309  017AAE  EC61  F0C6         	call	___flge	;wreg free
 31310  017AB2  0101               	movlb	1	; () banked
 31311  017AB4  B0D8               	btfsc	status,0,c
 31312  017AB6  0012               	return	
 31313                           
 31314                           ; BSR set to: 1
 31315                           ;main.c: 185: writeDoubleToEEPROM(FVR_ADC_Result, max_FVR_ADC_Result_address);
 31316  017AB8  C1E2  F11B         	movff	_FVR_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31317  017ABC  C1E3  F11C         	movff	_FVR_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31318  017AC0  C1E4  F11D         	movff	_FVR_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31319  017AC4  C1E5  F11E         	movff	_FVR_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31320  017AC8  0EFD               	movlw	low _max_FVR_ADC_Result_address
 31321  017ACA  6EF6               	movwf	tblptrl,c
 31322  017ACC                     	if	1	;There is more than 1 active tblptr byte
 31323  017ACC  0ECF               	movlw	high _max_FVR_ADC_Result_address
 31324  017ACE  6EF7               	movwf	tblptrh,c
 31325  017AD0                     	endif
 31326  017AD0                     	if	1	;There are 3 active tblptr bytes
 31327  017AD0  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 31328  017AD2  6EF8               	movwf	tblptru,c
 31329  017AD4                     	endif
 31330  017AD4  0009               	tblrd		*+
 31331  017AD6  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31332  017ADA  000A               	tblrd		*-
 31333  017ADC  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31334  017AE0  EC16  F0D2         	call	_writeDoubleToEEPROM	;wreg free
 31335                           
 31336                           ;main.c: 186: max_FVR_ADC_Result = FVR_ADC_Result;
 31337  017AE4  C1E2  F207         	movff	_FVR_ADC_Result,_max_FVR_ADC_Result	;volatile
 31338  017AE8  C1E3  F208         	movff	_FVR_ADC_Result+1,_max_FVR_ADC_Result+1	;volatile
 31339  017AEC  C1E4  F209         	movff	_FVR_ADC_Result+2,_max_FVR_ADC_Result+2	;volatile
 31340  017AF0  C1E5  F20A         	movff	_FVR_ADC_Result+3,_max_FVR_ADC_Result+3	;volatile
 31341  017AF4  0012               	return	
 31342  017AF6                     __end_of_saveSRAMMaxToEEPROM:
 31343                           	opt stack 0
 31344                           tosu	equ	0xFFF
 31345                           tosh	equ	0xFFE
 31346                           tosl	equ	0xFFD
 31347                           pclath	equ	0xFFA
 31348                           tblptru	equ	0xFF8
 31349                           tblptrh	equ	0xFF7
 31350                           tblptrl	equ	0xFF6
 31351                           tablat	equ	0xFF5
 31352                           prodh	equ	0xFF4
 31353                           prodl	equ	0xFF3
 31354                           intcon	equ	0xFF2
 31355                           indf0	equ	0xFEF
 31356                           postinc0	equ	0xFEE
 31357                           fsr0h	equ	0xFEA
 31358                           fsr0l	equ	0xFE9
 31359                           wreg	equ	0xFE8
 31360                           indf1	equ	0xFE7
 31361                           postdec1	equ	0xFE5
 31362                           plusw1	equ	0xFE3
 31363                           fsr1h	equ	0xFE2
 31364                           fsr1l	equ	0xFE1
 31365                           indf2	equ	0xFDF
 31366                           postinc2	equ	0xFDE
 31367                           postdec2	equ	0xFDD
 31368                           plusw2	equ	0xFDB
 31369                           fsr2h	equ	0xFDA
 31370                           fsr2l	equ	0xFD9
 31371                           status	equ	0xFD8
 31372                           
 31373 ;; *************** function _writeDoubleToEEPROM *****************
 31374 ;; Defined at:
 31375 ;;		line 6 in file "double_to_EEPROM.c"
 31376 ;; Parameters:    Size  Location     Type
 31377 ;;  input_double    4   27[BANK1 ] void 
 31378 ;;  starting_add    2   31[BANK1 ] unsigned int 
 31379 ;; Auto vars:     Size  Location     Type
 31380 ;;  byte_index      2   37[BANK1 ] int 
 31381 ;;  input_data      4   33[BANK1 ] struct .
 31382 ;; Return value:  Size  Location     Type
 31383 ;;                  1    wreg      void 
 31384 ;; Registers used:
 31385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31386 ;; Tracked objects:
 31387 ;;		On entry : 0/0
 31388 ;;		On exit  : 0/0
 31389 ;;		Unchanged: 0/0
 31390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31391 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31392 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31394 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31395 ;;Total ram usage:       12 bytes
 31396 ;; Hardware stack levels used:    1
 31397 ;; Hardware stack levels required when called:   14
 31398 ;; This function calls:
 31399 ;;		_DATAEE_WriteByte
 31400 ;; This function is called by:
 31401 ;;		_saveSRAMMaxToEEPROM
 31402 ;;		_ringBufferLUT
 31403 ;; This function uses a non-reentrant model
 31404 ;;
 31405                           
 31406                           	psect	text50
 31407  01A42C                     __ptext50:
 31408                           	opt stack 0
 31409  01A42C                     _writeDoubleToEEPROM:
 31410                           	opt stack 14
 31411                           
 31412                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 31413                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 31414                           
 31415                           ;incstack = 0
 31416  01A42C  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 31417  01A430  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 31418  01A434  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 31419  01A438  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 31420                           
 31421                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 31422  01A43C  0E00               	movlw	0
 31423  01A43E  0101               	movlb	1	; () banked
 31424  01A440  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 31425  01A442  0E00               	movlw	0
 31426  01A444  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 31427  01A446                     l15975:
 31428                           
 31429                           ; BSR set to: 1
 31430  01A446  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 31431  01A448  E118               	bnz	l1783
 31432  01A44A  0E04               	movlw	4
 31433  01A44C  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 31434  01A44E  B0D8               	btfsc	status,0,c
 31435  01A450  0012               	return	
 31436                           
 31437                           ; BSR set to: 1
 31438                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 31439                           
 31440                           ; BSR set to: 1
 31441                           
 31442                           ; BSR set to: 1
 31443  01A452  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 31444  01A454  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 31445  01A456  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 31446  01A458  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 31447  01A45A  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 31448  01A45C  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 31449  01A45E  0E21               	movlw	low writeDoubleToEEPROM@input_data
 31450  01A460  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 31451  01A462  6ED9               	movwf	fsr2l,c
 31452  01A464  0E01               	movlw	high writeDoubleToEEPROM@input_data
 31453  01A466  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 31454  01A468  6EDA               	movwf	fsr2h,c
 31455  01A46A  50DF               	movf	indf2,w,c
 31456  01A46C  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
 31457  01A46E  EC7C  F0D4         	call	_DATAEE_WriteByte	;wreg free
 31458  01A472  0101               	movlb	1	; () banked
 31459  01A474  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 31460  01A476  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 31461  01A478  D7E6               	goto	l15975
 31462  01A47A                     l1783:
 31463                           
 31464                           ; BSR set to: 1
 31465  01A47A  0012               	return		;funcret
 31466  01A47C                     __end_of_writeDoubleToEEPROM:
 31467                           	opt stack 0
 31468                           tosu	equ	0xFFF
 31469                           tosh	equ	0xFFE
 31470                           tosl	equ	0xFFD
 31471                           pclath	equ	0xFFA
 31472                           tblptru	equ	0xFF8
 31473                           tblptrh	equ	0xFF7
 31474                           tblptrl	equ	0xFF6
 31475                           tablat	equ	0xFF5
 31476                           prodh	equ	0xFF4
 31477                           prodl	equ	0xFF3
 31478                           intcon	equ	0xFF2
 31479                           indf0	equ	0xFEF
 31480                           postinc0	equ	0xFEE
 31481                           fsr0h	equ	0xFEA
 31482                           fsr0l	equ	0xFE9
 31483                           wreg	equ	0xFE8
 31484                           indf1	equ	0xFE7
 31485                           postdec1	equ	0xFE5
 31486                           plusw1	equ	0xFE3
 31487                           fsr1h	equ	0xFE2
 31488                           fsr1l	equ	0xFE1
 31489                           indf2	equ	0xFDF
 31490                           postinc2	equ	0xFDE
 31491                           postdec2	equ	0xFDD
 31492                           plusw2	equ	0xFDB
 31493                           fsr2h	equ	0xFDA
 31494                           fsr2l	equ	0xFD9
 31495                           status	equ	0xFD8
 31496                           
 31497 ;; *************** function _DATAEE_WriteByte *****************
 31498 ;; Defined at:
 31499 ;;		line 168 in file "mcc_generated_files/memory.c"
 31500 ;; Parameters:    Size  Location     Type
 31501 ;;  bAdd            2   23[BANK1 ] unsigned int 
 31502 ;;  bData           1   25[BANK1 ] unsigned char 
 31503 ;; Auto vars:     Size  Location     Type
 31504 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
 31505 ;; Return value:  Size  Location     Type
 31506 ;;                  1    wreg      void 
 31507 ;; Registers used:
 31508 ;;		wreg, status,2, status,0
 31509 ;; Tracked objects:
 31510 ;;		On entry : 0/0
 31511 ;;		On exit  : 0/0
 31512 ;;		Unchanged: 0/0
 31513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31514 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31515 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31517 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31518 ;;Total ram usage:        4 bytes
 31519 ;; Hardware stack levels used:    1
 31520 ;; Hardware stack levels required when called:   13
 31521 ;; This function calls:
 31522 ;;		Nothing
 31523 ;; This function is called by:
 31524 ;;		_writeDoubleToEEPROM
 31525 ;; This function uses a non-reentrant model
 31526 ;;
 31527                           
 31528                           	psect	text51
 31529  01A8F8                     __ptext51:
 31530                           	opt stack 0
 31531  01A8F8                     _DATAEE_WriteByte:
 31532                           	opt stack 14
 31533                           
 31534                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 31535                           
 31536                           ; BSR set to: 1
 31537                           ;incstack = 0
 31538  01A8F8  0E00               	movlw	0
 31539  01A8FA  BEF2               	btfsc	intcon,7,c	;volatile
 31540  01A8FC  0E01               	movlw	1
 31541  01A8FE  0101               	movlb	1	; () banked
 31542  01A900  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 31543                           
 31544                           ; BSR set to: 1
 31545                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 31546  01A902  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 31547  01A904  0B03               	andlw	3
 31548  01A906  6E75               	movwf	3957,c	;volatile
 31549                           
 31550                           ; BSR set to: 1
 31551                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 31552  01A908  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 31553                           
 31554                           ; BSR set to: 1
 31555                           ;memory.c: 174: NVMDAT = bData;
 31556  01A90C  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 31557                           
 31558                           ; BSR set to: 1
 31559                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 31560  01A910  0E3F               	movlw	-193
 31561  01A912  1677               	andwf	3959,f,c	;volsfr
 31562                           
 31563                           ; BSR set to: 1
 31564                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 31565  01A914  8477               	bsf	3959,2,c	;volsfr
 31566                           
 31567                           ; BSR set to: 1
 31568                           ;memory.c: 177: INTCONbits.GIE = 0;
 31569  01A916  9EF2               	bcf	intcon,7,c	;volatile
 31570                           
 31571                           ; BSR set to: 1
 31572                           ;memory.c: 178: NVMCON2 = 0x55;
 31573  01A918  0E55               	movlw	85
 31574  01A91A  6E78               	movwf	3960,c	;volsfr
 31575                           
 31576                           ; BSR set to: 1
 31577                           ;memory.c: 179: NVMCON2 = 0xAA;
 31578  01A91C  0EAA               	movlw	170
 31579  01A91E  6E78               	movwf	3960,c	;volsfr
 31580                           
 31581                           ; BSR set to: 1
 31582                           ;memory.c: 180: NVMCON1bits.WR = 1;
 31583  01A920  8277               	bsf	3959,1,c	;volsfr
 31584  01A922                     
 31585                           ; BSR set to: 1
 31586                           ;memory.c: 183: {
 31587  01A922  B277               	btfsc	3959,1,c	;volsfr
 31588  01A924  D7FE               	goto	l827
 31589                           
 31590                           ;memory.c: 184: }
 31591                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 31592  01A926  9477               	bcf	3959,2,c	;volsfr
 31593                           
 31594                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 31595  01A928  0101               	movlb	1	; () banked
 31596  01A92A  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 31597  01A92C  D002               	bra	u19815
 31598  01A92E  9EF2               	bcf	intcon,7,c	;volatile
 31599  01A930  D001               	bra	u19816
 31600  01A932                     u19815:
 31601  01A932  8EF2               	bsf	intcon,7,c	;volatile
 31602  01A934                     u19816:
 31603  01A934  0012               	return		;funcret
 31604  01A936                     __end_of_DATAEE_WriteByte:
 31605                           	opt stack 0
 31606                           tosu	equ	0xFFF
 31607                           tosh	equ	0xFFE
 31608                           tosl	equ	0xFFD
 31609                           pclath	equ	0xFFA
 31610                           tblptru	equ	0xFF8
 31611                           tblptrh	equ	0xFF7
 31612                           tblptrl	equ	0xFF6
 31613                           tablat	equ	0xFF5
 31614                           prodh	equ	0xFF4
 31615                           prodl	equ	0xFF3
 31616                           intcon	equ	0xFF2
 31617                           indf0	equ	0xFEF
 31618                           postinc0	equ	0xFEE
 31619                           fsr0h	equ	0xFEA
 31620                           fsr0l	equ	0xFE9
 31621                           wreg	equ	0xFE8
 31622                           indf1	equ	0xFE7
 31623                           postdec1	equ	0xFE5
 31624                           plusw1	equ	0xFE3
 31625                           fsr1h	equ	0xFE2
 31626                           fsr1l	equ	0xFE1
 31627                           indf2	equ	0xFDF
 31628                           postinc2	equ	0xFDE
 31629                           postdec2	equ	0xFDD
 31630                           plusw2	equ	0xFDB
 31631                           fsr2h	equ	0xFDA
 31632                           fsr2l	equ	0xFD9
 31633                           status	equ	0xFD8
 31634                           
 31635 ;; *************** function ___flge *****************
 31636 ;; Defined at:
 31637 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 31638 ;; Parameters:    Size  Location     Type
 31639 ;;  ff1             4   23[BANK1 ] void 
 31640 ;;  ff2             4   27[BANK1 ] void 
 31641 ;; Auto vars:     Size  Location     Type
 31642 ;;		None
 31643 ;; Return value:  Size  Location     Type
 31644 ;;		None               void
 31645 ;; Registers used:
 31646 ;;		wreg, status,2, status,0
 31647 ;; Tracked objects:
 31648 ;;		On entry : 0/0
 31649 ;;		On exit  : 0/0
 31650 ;;		Unchanged: 0/0
 31651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31652 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31654 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31655 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31656 ;;Total ram usage:       12 bytes
 31657 ;; Hardware stack levels used:    1
 31658 ;; Hardware stack levels required when called:   13
 31659 ;; This function calls:
 31660 ;;		Nothing
 31661 ;; This function is called by:
 31662 ;;		_saveSRAMMaxToEEPROM
 31663 ;;		__doprnt
 31664 ;; This function uses a non-reentrant model
 31665 ;;
 31666                           
 31667                           	psect	text52
 31668  018CC2                     __ptext52:
 31669                           	opt stack 0
 31670  018CC2                     ___flge:
 31671                           	opt stack 13
 31672                           
 31673                           ;incstack = 0
 31674  018CC2  0E00               	movlw	0
 31675  018CC4  0101               	movlb	1	; () banked
 31676  018CC6  1517               	andwf	___flge@ff1& (0+255),w,b
 31677  018CC8  6F1F               	movwf	??___flge& (0+255),b
 31678  018CCA  0E00               	movlw	0
 31679  018CCC  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 31680  018CCE  6F20               	movwf	(??___flge+1)& (0+255),b
 31681  018CD0  0E80               	movlw	128
 31682  018CD2  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 31683  018CD4  6F21               	movwf	(??___flge+2)& (0+255),b
 31684  018CD6  0E7F               	movlw	127
 31685  018CD8  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 31686  018CDA  6F22               	movwf	(??___flge+3)& (0+255),b
 31687  018CDC  511F               	movf	??___flge& (0+255),w,b
 31688  018CDE  1120               	iorwf	(??___flge+1)& (0+255),w,b
 31689  018CE0  1121               	iorwf	(??___flge+2)& (0+255),w,b
 31690  018CE2  1122               	iorwf	(??___flge+3)& (0+255),w,b
 31691  018CE4  A4D8               	btfss	status,2,c
 31692  018CE6  D008               	goto	l2368
 31693                           
 31694                           ; BSR set to: 1
 31695  018CE8  0E00               	movlw	0
 31696  018CEA  6F17               	movwf	___flge@ff1& (0+255),b
 31697  018CEC  0E00               	movlw	0
 31698  018CEE  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 31699  018CF0  0E00               	movlw	0
 31700  018CF2  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 31701  018CF4  0E00               	movlw	0
 31702  018CF6  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 31703  018CF8                     l2368:
 31704                           
 31705                           ; BSR set to: 1
 31706                           
 31707                           ; BSR set to: 1
 31708  018CF8  0E00               	movlw	0
 31709  018CFA  151B               	andwf	___flge@ff2& (0+255),w,b
 31710  018CFC  6F1F               	movwf	??___flge& (0+255),b
 31711  018CFE  0E00               	movlw	0
 31712  018D00  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 31713  018D02  6F20               	movwf	(??___flge+1)& (0+255),b
 31714  018D04  0E80               	movlw	128
 31715  018D06  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 31716  018D08  6F21               	movwf	(??___flge+2)& (0+255),b
 31717  018D0A  0E7F               	movlw	127
 31718  018D0C  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 31719  018D0E  6F22               	movwf	(??___flge+3)& (0+255),b
 31720  018D10  511F               	movf	??___flge& (0+255),w,b
 31721  018D12  1120               	iorwf	(??___flge+1)& (0+255),w,b
 31722  018D14  1121               	iorwf	(??___flge+2)& (0+255),w,b
 31723  018D16  1122               	iorwf	(??___flge+3)& (0+255),w,b
 31724  018D18  A4D8               	btfss	status,2,c
 31725  018D1A  D008               	goto	l2369
 31726                           
 31727                           ; BSR set to: 1
 31728  018D1C  0E00               	movlw	0
 31729  018D1E  6F1B               	movwf	___flge@ff2& (0+255),b
 31730  018D20  0E00               	movlw	0
 31731  018D22  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 31732  018D24  0E00               	movlw	0
 31733  018D26  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 31734  018D28  0E00               	movlw	0
 31735  018D2A  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 31736  018D2C                     l2369:
 31737                           
 31738                           ; BSR set to: 1
 31739                           
 31740                           ; BSR set to: 1
 31741  018D2C  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 31742  018D2E  D01D               	goto	l2370
 31743                           
 31744                           ; BSR set to: 1
 31745  018D30  C117  F11F         	movff	___flge@ff1,??___flge
 31746  018D34  C118  F120         	movff	___flge@ff1+1,??___flge+1
 31747  018D38  C119  F121         	movff	___flge@ff1+2,??___flge+2
 31748  018D3C  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 31749  018D40  1F1F               	comf	??___flge& (0+255),f,b
 31750  018D42  1F20               	comf	(??___flge+1)& (0+255),f,b
 31751  018D44  1F21               	comf	(??___flge+2)& (0+255),f,b
 31752  018D46  1F22               	comf	(??___flge+3)& (0+255),f,b
 31753  018D48  2B1F               	incf	??___flge& (0+255),f,b
 31754  018D4A  0E00               	movlw	0
 31755  018D4C  2320               	addwfc	(??___flge+1)& (0+255),f,b
 31756  018D4E  2321               	addwfc	(??___flge+2)& (0+255),f,b
 31757  018D50  2322               	addwfc	(??___flge+3)& (0+255),f,b
 31758  018D52  0E00               	movlw	0
 31759  018D54  251F               	addwf	??___flge& (0+255),w,b
 31760  018D56  6F17               	movwf	___flge@ff1& (0+255),b
 31761  018D58  0E00               	movlw	0
 31762  018D5A  2120               	addwfc	(??___flge+1)& (0+255),w,b
 31763  018D5C  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 31764  018D5E  0E00               	movlw	0
 31765  018D60  2121               	addwfc	(??___flge+2)& (0+255),w,b
 31766  018D62  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 31767  018D64  0E80               	movlw	128
 31768  018D66  2122               	addwfc	(??___flge+3)& (0+255),w,b
 31769  018D68  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 31770  018D6A                     l2370:
 31771                           
 31772                           ; BSR set to: 1
 31773                           
 31774                           ; BSR set to: 1
 31775  018D6A  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 31776  018D6C  D01D               	goto	l2371
 31777                           
 31778                           ; BSR set to: 1
 31779  018D6E  C11B  F11F         	movff	___flge@ff2,??___flge
 31780  018D72  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 31781  018D76  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 31782  018D7A  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 31783  018D7E  1F1F               	comf	??___flge& (0+255),f,b
 31784  018D80  1F20               	comf	(??___flge+1)& (0+255),f,b
 31785  018D82  1F21               	comf	(??___flge+2)& (0+255),f,b
 31786  018D84  1F22               	comf	(??___flge+3)& (0+255),f,b
 31787  018D86  2B1F               	incf	??___flge& (0+255),f,b
 31788  018D88  0E00               	movlw	0
 31789  018D8A  2320               	addwfc	(??___flge+1)& (0+255),f,b
 31790  018D8C  2321               	addwfc	(??___flge+2)& (0+255),f,b
 31791  018D8E  2322               	addwfc	(??___flge+3)& (0+255),f,b
 31792  018D90  0E00               	movlw	0
 31793  018D92  251F               	addwf	??___flge& (0+255),w,b
 31794  018D94  6F1B               	movwf	___flge@ff2& (0+255),b
 31795  018D96  0E00               	movlw	0
 31796  018D98  2120               	addwfc	(??___flge+1)& (0+255),w,b
 31797  018D9A  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 31798  018D9C  0E00               	movlw	0
 31799  018D9E  2121               	addwfc	(??___flge+2)& (0+255),w,b
 31800  018DA0  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 31801  018DA2  0E80               	movlw	128
 31802  018DA4  2122               	addwfc	(??___flge+3)& (0+255),w,b
 31803  018DA6  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 31804  018DA8                     l2371:
 31805                           
 31806                           ; BSR set to: 1
 31807  018DA8  0E00               	movlw	0
 31808  018DAA  1B17               	xorwf	___flge@ff1& (0+255),f,b
 31809  018DAC  0E00               	movlw	0
 31810  018DAE  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 31811  018DB0  0E00               	movlw	0
 31812  018DB2  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 31813  018DB4  0E80               	movlw	128
 31814  018DB6  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 31815  018DB8  0E00               	movlw	0
 31816  018DBA  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 31817  018DBC  0E00               	movlw	0
 31818  018DBE  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 31819  018DC0  0E00               	movlw	0
 31820  018DC2  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 31821  018DC4  0E80               	movlw	128
 31822  018DC6  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 31823  018DC8  511B               	movf	___flge@ff2& (0+255),w,b
 31824  018DCA  5D17               	subwf	___flge@ff1& (0+255),w,b
 31825  018DCC  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 31826  018DCE  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 31827  018DD0  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 31828  018DD2  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 31829  018DD4  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 31830  018DD6  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 31831  018DD8  B0D8               	btfsc	status,0,c
 31832  018DDA  D002               	goto	l13511
 31833                           
 31834                           ; BSR set to: 1
 31835  018DDC  90D8               	bcf	status,0,c
 31836  018DDE  0012               	return	
 31837  018DE0                     l13511:
 31838                           
 31839                           ; BSR set to: 1
 31840                           
 31841                           ; BSR set to: 1
 31842  018DE0  80D8               	bsf	status,0,c
 31843                           
 31844                           ; BSR set to: 1
 31845  018DE2  0012               	return	
 31846  018DE4                     __end_of___flge:
 31847                           	opt stack 0
 31848                           tosu	equ	0xFFF
 31849                           tosh	equ	0xFFE
 31850                           tosl	equ	0xFFD
 31851                           pclath	equ	0xFFA
 31852                           tblptru	equ	0xFF8
 31853                           tblptrh	equ	0xFF7
 31854                           tblptrl	equ	0xFF6
 31855                           tablat	equ	0xFF5
 31856                           prodh	equ	0xFF4
 31857                           prodl	equ	0xFF3
 31858                           intcon	equ	0xFF2
 31859                           indf0	equ	0xFEF
 31860                           postinc0	equ	0xFEE
 31861                           fsr0h	equ	0xFEA
 31862                           fsr0l	equ	0xFE9
 31863                           wreg	equ	0xFE8
 31864                           indf1	equ	0xFE7
 31865                           postdec1	equ	0xFE5
 31866                           plusw1	equ	0xFE3
 31867                           fsr1h	equ	0xFE2
 31868                           fsr1l	equ	0xFE1
 31869                           indf2	equ	0xFDF
 31870                           postinc2	equ	0xFDE
 31871                           postdec2	equ	0xFDD
 31872                           plusw2	equ	0xFDB
 31873                           fsr2h	equ	0xFDA
 31874                           fsr2l	equ	0xFD9
 31875                           status	equ	0xFD8
 31876                           
 31877 ;; *************** function _recoverSRAMMaxFromEEPROM *****************
 31878 ;; Defined at:
 31879 ;;		line 192 in file "main.c"
 31880 ;; Parameters:    Size  Location     Type
 31881 ;;		None
 31882 ;; Auto vars:     Size  Location     Type
 31883 ;;		None
 31884 ;; Return value:  Size  Location     Type
 31885 ;;                  1    wreg      void 
 31886 ;; Registers used:
 31887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31888 ;; Tracked objects:
 31889 ;;		On entry : 0/0
 31890 ;;		On exit  : 0/0
 31891 ;;		Unchanged: 0/0
 31892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31897 ;;Total ram usage:        0 bytes
 31898 ;; Hardware stack levels used:    1
 31899 ;; Hardware stack levels required when called:   15
 31900 ;; This function calls:
 31901 ;;		_readDoubleFromEEPROM
 31902 ;; This function is called by:
 31903 ;;		_main
 31904 ;; This function uses a non-reentrant model
 31905 ;;
 31906                           
 31907                           	psect	text53
 31908  0185B0                     __ptext53:
 31909                           	opt stack 0
 31910  0185B0                     _recoverSRAMMaxFromEEPROM:
 31911                           	opt stack 15
 31912                           
 31913                           ;main.c: 194: max_Irms = readDoubleFromEEPROM(max_Irms_address);
 31914                           
 31915                           ; BSR set to: 1
 31916                           ;incstack = 0
 31917  0185B0  0E07               	movlw	low _max_Irms_address
 31918  0185B2  6EF6               	movwf	tblptrl,c
 31919  0185B4                     	if	1	;There is more than 1 active tblptr byte
 31920  0185B4  0ED0               	movlw	high _max_Irms_address
 31921  0185B6  6EF7               	movwf	tblptrh,c
 31922  0185B8                     	endif
 31923  0185B8                     	if	1	;There are 3 active tblptr bytes
 31924  0185B8  0E00               	movlw	low (_max_Irms_address shr (0+16))
 31925  0185BA  6EF8               	movwf	tblptru,c
 31926  0185BC                     	endif
 31927  0185BC  0009               	tblrd		*+
 31928  0185BE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 31929  0185C2  000A               	tblrd		*-
 31930  0185C4  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 31931  0185C8  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 31932  0185CC  C119  F21B         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
 31933  0185D0  C11A  F21C         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
 31934  0185D4  C11B  F21D         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
 31935  0185D8  C11C  F21E         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
 31936                           
 31937                           ;main.c: 195: max_Power = readDoubleFromEEPROM(max_Power_address);
 31938  0185DC  0E05               	movlw	low _max_Power_address
 31939  0185DE  6EF6               	movwf	tblptrl,c
 31940  0185E0                     	if	1	;There is more than 1 active tblptr byte
 31941  0185E0  0ED0               	movlw	high _max_Power_address
 31942  0185E2  6EF7               	movwf	tblptrh,c
 31943  0185E4                     	endif
 31944  0185E4                     	if	1	;There are 3 active tblptr bytes
 31945  0185E4  0E00               	movlw	low (_max_Power_address shr (0+16))
 31946  0185E6  6EF8               	movwf	tblptru,c
 31947  0185E8                     	endif
 31948  0185E8  0009               	tblrd		*+
 31949  0185EA  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 31950  0185EE  000A               	tblrd		*-
 31951  0185F0  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 31952  0185F4  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 31953  0185F8  C119  F217         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
 31954  0185FC  C11A  F218         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
 31955  018600  C11B  F219         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
 31956  018604  C11C  F21A         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
 31957                           
 31958                           ;main.c: 196: max_POS3P3_ADC_Result = readDoubleFromEEPROM(max_POS3P3_ADC_Result_address
      +                          );
 31959  018608  0E03               	movlw	low _max_POS3P3_ADC_Result_address
 31960  01860A  6EF6               	movwf	tblptrl,c
 31961  01860C                     	if	1	;There is more than 1 active tblptr byte
 31962  01860C  0ED0               	movlw	high _max_POS3P3_ADC_Result_address
 31963  01860E  6EF7               	movwf	tblptrh,c
 31964  018610                     	endif
 31965  018610                     	if	1	;There are 3 active tblptr bytes
 31966  018610  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 31967  018612  6EF8               	movwf	tblptru,c
 31968  018614                     	endif
 31969  018614  0009               	tblrd		*+
 31970  018616  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 31971  01861A  000A               	tblrd		*-
 31972  01861C  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 31973  018620  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 31974  018624  C119  F213         	movff	?_readDoubleFromEEPROM,_max_POS3P3_ADC_Result	;volatile
 31975  018628  C11A  F214         	movff	?_readDoubleFromEEPROM+1,_max_POS3P3_ADC_Result+1	;volatile
 31976  01862C  C11B  F215         	movff	?_readDoubleFromEEPROM+2,_max_POS3P3_ADC_Result+2	;volatile
 31977  018630  C11C  F216         	movff	?_readDoubleFromEEPROM+3,_max_POS3P3_ADC_Result+3	;volatile
 31978                           
 31979                           ;main.c: 197: max_POS12_ADC_Result = readDoubleFromEEPROM(max_POS12_ADC_Result_address);
 31980  018634  0E01               	movlw	low _max_POS12_ADC_Result_address
 31981  018636  6EF6               	movwf	tblptrl,c
 31982  018638                     	if	1	;There is more than 1 active tblptr byte
 31983  018638  0ED0               	movlw	high _max_POS12_ADC_Result_address
 31984  01863A  6EF7               	movwf	tblptrh,c
 31985  01863C                     	endif
 31986  01863C                     	if	1	;There are 3 active tblptr bytes
 31987  01863C  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 31988  01863E  6EF8               	movwf	tblptru,c
 31989  018640                     	endif
 31990  018640  0009               	tblrd		*+
 31991  018642  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 31992  018646  000A               	tblrd		*-
 31993  018648  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 31994  01864C  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 31995  018650  C119  F20F         	movff	?_readDoubleFromEEPROM,_max_POS12_ADC_Result	;volatile
 31996  018654  C11A  F210         	movff	?_readDoubleFromEEPROM+1,_max_POS12_ADC_Result+1	;volatile
 31997  018658  C11B  F211         	movff	?_readDoubleFromEEPROM+2,_max_POS12_ADC_Result+2	;volatile
 31998  01865C  C11C  F212         	movff	?_readDoubleFromEEPROM+3,_max_POS12_ADC_Result+3	;volatile
 31999                           
 32000                           ;main.c: 198: max_Temp_ADC_Result = readDoubleFromEEPROM(max_Temp_ADC_Result_address);
 32001  018660  0EFF               	movlw	low _max_Temp_ADC_Result_address
 32002  018662  6EF6               	movwf	tblptrl,c
 32003  018664                     	if	1	;There is more than 1 active tblptr byte
 32004  018664  0ECF               	movlw	high _max_Temp_ADC_Result_address
 32005  018666  6EF7               	movwf	tblptrh,c
 32006  018668                     	endif
 32007  018668                     	if	1	;There are 3 active tblptr bytes
 32008  018668  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 32009  01866A  6EF8               	movwf	tblptru,c
 32010  01866C                     	endif
 32011  01866C  0009               	tblrd		*+
 32012  01866E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32013  018672  000A               	tblrd		*-
 32014  018674  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32015  018678  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32016  01867C  C119  F20B         	movff	?_readDoubleFromEEPROM,_max_Temp_ADC_Result	;volatile
 32017  018680  C11A  F20C         	movff	?_readDoubleFromEEPROM+1,_max_Temp_ADC_Result+1	;volatile
 32018  018684  C11B  F20D         	movff	?_readDoubleFromEEPROM+2,_max_Temp_ADC_Result+2	;volatile
 32019  018688  C11C  F20E         	movff	?_readDoubleFromEEPROM+3,_max_Temp_ADC_Result+3	;volatile
 32020                           
 32021                           ;main.c: 199: max_FVR_ADC_Result = readDoubleFromEEPROM(max_FVR_ADC_Result_address);
 32022  01868C  0EFD               	movlw	low _max_FVR_ADC_Result_address
 32023  01868E  6EF6               	movwf	tblptrl,c
 32024  018690                     	if	1	;There is more than 1 active tblptr byte
 32025  018690  0ECF               	movlw	high _max_FVR_ADC_Result_address
 32026  018692  6EF7               	movwf	tblptrh,c
 32027  018694                     	endif
 32028  018694                     	if	1	;There are 3 active tblptr bytes
 32029  018694  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 32030  018696  6EF8               	movwf	tblptru,c
 32031  018698                     	endif
 32032  018698  0009               	tblrd		*+
 32033  01869A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32034  01869E  000A               	tblrd		*-
 32035  0186A0  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32036  0186A4  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32037  0186A8  C119  F207         	movff	?_readDoubleFromEEPROM,_max_FVR_ADC_Result	;volatile
 32038  0186AC  C11A  F208         	movff	?_readDoubleFromEEPROM+1,_max_FVR_ADC_Result+1	;volatile
 32039  0186B0  C11B  F209         	movff	?_readDoubleFromEEPROM+2,_max_FVR_ADC_Result+2	;volatile
 32040  0186B4  C11C  F20A         	movff	?_readDoubleFromEEPROM+3,_max_FVR_ADC_Result+3	;volatile
 32041                           
 32042                           ;main.c: 200: Total_Energy = readDoubleFromEEPROM(Total_Energy_address);
 32043  0186B8  0E09               	movlw	low _Total_Energy_address
 32044  0186BA  6EF6               	movwf	tblptrl,c
 32045  0186BC                     	if	1	;There is more than 1 active tblptr byte
 32046  0186BC  0ED0               	movlw	high _Total_Energy_address
 32047  0186BE  6EF7               	movwf	tblptrh,c
 32048  0186C0                     	endif
 32049  0186C0                     	if	1	;There are 3 active tblptr bytes
 32050  0186C0  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 32051  0186C2  6EF8               	movwf	tblptru,c
 32052  0186C4                     	endif
 32053  0186C4  0009               	tblrd		*+
 32054  0186C6  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32055  0186CA  000A               	tblrd		*-
 32056  0186CC  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32057  0186D0  EC9C  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32058  0186D4  C119  F0F0         	movff	?_readDoubleFromEEPROM,_Total_Energy	;volatile
 32059  0186D8  C11A  F0F1         	movff	?_readDoubleFromEEPROM+1,_Total_Energy+1	;volatile
 32060  0186DC  C11B  F0F2         	movff	?_readDoubleFromEEPROM+2,_Total_Energy+2	;volatile
 32061  0186E0  C11C  F0F3         	movff	?_readDoubleFromEEPROM+3,_Total_Energy+3	;volatile
 32062  0186E4  0012               	return		;funcret
 32063  0186E6                     __end_of_recoverSRAMMaxFromEEPROM:
 32064                           	opt stack 0
 32065                           tosu	equ	0xFFF
 32066                           tosh	equ	0xFFE
 32067                           tosl	equ	0xFFD
 32068                           pclath	equ	0xFFA
 32069                           tblptru	equ	0xFF8
 32070                           tblptrh	equ	0xFF7
 32071                           tblptrl	equ	0xFF6
 32072                           tablat	equ	0xFF5
 32073                           prodh	equ	0xFF4
 32074                           prodl	equ	0xFF3
 32075                           intcon	equ	0xFF2
 32076                           indf0	equ	0xFEF
 32077                           postinc0	equ	0xFEE
 32078                           fsr0h	equ	0xFEA
 32079                           fsr0l	equ	0xFE9
 32080                           wreg	equ	0xFE8
 32081                           indf1	equ	0xFE7
 32082                           postdec1	equ	0xFE5
 32083                           plusw1	equ	0xFE3
 32084                           fsr1h	equ	0xFE2
 32085                           fsr1l	equ	0xFE1
 32086                           indf2	equ	0xFDF
 32087                           postinc2	equ	0xFDE
 32088                           postdec2	equ	0xFDD
 32089                           plusw2	equ	0xFDB
 32090                           fsr2h	equ	0xFDA
 32091                           fsr2l	equ	0xFD9
 32092                           status	equ	0xFD8
 32093                           
 32094 ;; *************** function _readDoubleFromEEPROM *****************
 32095 ;; Defined at:
 32096 ;;		line 22 in file "double_to_EEPROM.c"
 32097 ;; Parameters:    Size  Location     Type
 32098 ;;  starting_add    2   25[BANK1 ] unsigned int 
 32099 ;; Auto vars:     Size  Location     Type
 32100 ;;  byte_index      2   33[BANK1 ] int 
 32101 ;;  output_data     4   29[BANK1 ] struct .
 32102 ;; Return value:  Size  Location     Type
 32103 ;;                  4   25[BANK1 ] struct .
 32104 ;; Registers used:
 32105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32106 ;; Tracked objects:
 32107 ;;		On entry : 0/0
 32108 ;;		On exit  : 0/0
 32109 ;;		Unchanged: 0/0
 32110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32111 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32112 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32114 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32115 ;;Total ram usage:       10 bytes
 32116 ;; Hardware stack levels used:    1
 32117 ;; Hardware stack levels required when called:   14
 32118 ;; This function calls:
 32119 ;;		_DATAEE_ReadByte
 32120 ;; This function is called by:
 32121 ;;		_recoverSRAMMaxFromEEPROM
 32122 ;;		_ringBufferLUT
 32123 ;; This function uses a non-reentrant model
 32124 ;;
 32125                           
 32126                           	psect	text54
 32127  01A338                     __ptext54:
 32128                           	opt stack 0
 32129  01A338                     _readDoubleFromEEPROM:
 32130                           	opt stack 14
 32131                           
 32132                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 32133                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 32134                           
 32135                           ;incstack = 0
 32136  01A338  0E00               	movlw	0
 32137  01A33A  0101               	movlb	1	; () banked
 32138  01A33C  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 32139  01A33E  0E00               	movlw	0
 32140  01A340  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 32141                           
 32142                           ; BSR set to: 1
 32143  01A342  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32144  01A344  E119               	bnz	l1787
 32145  01A346  D014               	goto	L9
 32146  01A348                     
 32147                           ; BSR set to: 1
 32148                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 32149                           
 32150                           ; BSR set to: 1
 32151  01A348  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 32152  01A34A  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32153  01A34C  6ED9               	movwf	fsr2l,c
 32154  01A34E  0E01               	movlw	high readDoubleFromEEPROM@output_data
 32155  01A350  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32156  01A352  6EDA               	movwf	fsr2h,c
 32157  01A354  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 32158  01A356  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32159  01A358  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 32160  01A35A  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 32161  01A35C  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32162  01A35E  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 32163  01A360  ECF8  F0D7         	call	_DATAEE_ReadByte	;wreg free
 32164  01A364  6EDF               	movwf	indf2,c
 32165  01A366  0101               	movlb	1	; () banked
 32166  01A368  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 32167  01A36A  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 32168                           
 32169                           ; BSR set to: 1
 32170  01A36C  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32171  01A36E  E104               	bnz	u20340
 32172  01A370                     L9:
 32173  01A370  0E04               	movlw	4
 32174  01A372  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32175  01A374  A0D8               	btfss	status,0,c
 32176  01A376  D7E8               	goto	l1786
 32177  01A378                     u20340:
 32178  01A378                     l1787:
 32179                           
 32180                           ; BSR set to: 1
 32181                           ;double_to_EEPROM.c: 32: }
 32182                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 32183  01A378  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 32184  01A37C  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 32185  01A380  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 32186  01A384  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 32187                           
 32188                           ; BSR set to: 1
 32189  01A388  0012               	return		;funcret
 32190  01A38A                     __end_of_readDoubleFromEEPROM:
 32191                           	opt stack 0
 32192                           tosu	equ	0xFFF
 32193                           tosh	equ	0xFFE
 32194                           tosl	equ	0xFFD
 32195                           pclath	equ	0xFFA
 32196                           tblptru	equ	0xFF8
 32197                           tblptrh	equ	0xFF7
 32198                           tblptrl	equ	0xFF6
 32199                           tablat	equ	0xFF5
 32200                           prodh	equ	0xFF4
 32201                           prodl	equ	0xFF3
 32202                           intcon	equ	0xFF2
 32203                           indf0	equ	0xFEF
 32204                           postinc0	equ	0xFEE
 32205                           fsr0h	equ	0xFEA
 32206                           fsr0l	equ	0xFE9
 32207                           wreg	equ	0xFE8
 32208                           indf1	equ	0xFE7
 32209                           postdec1	equ	0xFE5
 32210                           plusw1	equ	0xFE3
 32211                           fsr1h	equ	0xFE2
 32212                           fsr1l	equ	0xFE1
 32213                           indf2	equ	0xFDF
 32214                           postinc2	equ	0xFDE
 32215                           postdec2	equ	0xFDD
 32216                           plusw2	equ	0xFDB
 32217                           fsr2h	equ	0xFDA
 32218                           fsr2l	equ	0xFD9
 32219                           status	equ	0xFD8
 32220                           
 32221 ;; *************** function _DATAEE_ReadByte *****************
 32222 ;; Defined at:
 32223 ;;		line 190 in file "mcc_generated_files/memory.c"
 32224 ;; Parameters:    Size  Location     Type
 32225 ;;  bAdd            2   23[BANK1 ] unsigned int 
 32226 ;; Auto vars:     Size  Location     Type
 32227 ;;		None
 32228 ;; Return value:  Size  Location     Type
 32229 ;;                  1    wreg      unsigned char 
 32230 ;; Registers used:
 32231 ;;		wreg, status,2, status,0
 32232 ;; Tracked objects:
 32233 ;;		On entry : 0/0
 32234 ;;		On exit  : 0/0
 32235 ;;		Unchanged: 0/0
 32236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32237 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32240 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32241 ;;Total ram usage:        2 bytes
 32242 ;; Hardware stack levels used:    1
 32243 ;; Hardware stack levels required when called:   13
 32244 ;; This function calls:
 32245 ;;		Nothing
 32246 ;; This function is called by:
 32247 ;;		_readDoubleFromEEPROM
 32248 ;; This function uses a non-reentrant model
 32249 ;;
 32250                           
 32251                           	psect	text55
 32252  01AFF0                     __ptext55:
 32253                           	opt stack 0
 32254  01AFF0                     _DATAEE_ReadByte:
 32255                           	opt stack 14
 32256                           
 32257                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 32258                           
 32259                           ; BSR set to: 1
 32260                           ;incstack = 0
 32261  01AFF0  0101               	movlb	1	; () banked
 32262  01AFF2  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 32263  01AFF4  0B03               	andlw	3
 32264  01AFF6  6E75               	movwf	3957,c	;volatile
 32265                           
 32266                           ; BSR set to: 1
 32267                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 32268  01AFF8  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 32269                           
 32270                           ; BSR set to: 1
 32271                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 32272  01AFFC  0E3F               	movlw	-193
 32273  01AFFE  1677               	andwf	3959,f,c	;volsfr
 32274                           
 32275                           ; BSR set to: 1
 32276                           ;memory.c: 195: NVMCON1bits.RD = 1;
 32277  01B000  8077               	bsf	3959,0,c	;volsfr
 32278                           
 32279                           ; BSR set to: 1
 32280                           ;memory.c: 196: __nop();
 32281  01B002  F000               	nop	
 32282                           
 32283                           ;memory.c: 197: __nop();
 32284  01B004  F000               	nop	
 32285                           
 32286                           ;memory.c: 199: return (NVMDAT);
 32287  01B006  5076               	movf	3958,w,c	;volatile
 32288  01B008  0012               	return	
 32289  01B00A                     __end_of_DATAEE_ReadByte:
 32290                           	opt stack 0
 32291                           tosu	equ	0xFFF
 32292                           tosh	equ	0xFFE
 32293                           tosl	equ	0xFFD
 32294                           pclath	equ	0xFFA
 32295                           tblptru	equ	0xFF8
 32296                           tblptrh	equ	0xFF7
 32297                           tblptrl	equ	0xFF6
 32298                           tablat	equ	0xFF5
 32299                           prodh	equ	0xFF4
 32300                           prodl	equ	0xFF3
 32301                           intcon	equ	0xFF2
 32302                           indf0	equ	0xFEF
 32303                           postinc0	equ	0xFEE
 32304                           fsr0h	equ	0xFEA
 32305                           fsr0l	equ	0xFE9
 32306                           wreg	equ	0xFE8
 32307                           indf1	equ	0xFE7
 32308                           postdec1	equ	0xFE5
 32309                           plusw1	equ	0xFE3
 32310                           fsr1h	equ	0xFE2
 32311                           fsr1l	equ	0xFE1
 32312                           indf2	equ	0xFDF
 32313                           postinc2	equ	0xFDE
 32314                           postdec2	equ	0xFDD
 32315                           plusw2	equ	0xFDB
 32316                           fsr2h	equ	0xFDA
 32317                           fsr2l	equ	0xFD9
 32318                           status	equ	0xFD8
 32319                           
 32320 ;; *************** function _getCauseOfReset *****************
 32321 ;; Defined at:
 32322 ;;		line 11 in file "cause_of_reset.c"
 32323 ;; Parameters:    Size  Location     Type
 32324 ;;		None
 32325 ;; Auto vars:     Size  Location     Type
 32326 ;;  return_reset    1   23[BANK1 ] enum E17455
 32327 ;; Return value:  Size  Location     Type
 32328 ;;                  1    wreg      enum E18103
 32329 ;; Registers used:
 32330 ;;		wreg, status,2
 32331 ;; Tracked objects:
 32332 ;;		On entry : 0/0
 32333 ;;		On exit  : 0/0
 32334 ;;		Unchanged: 0/0
 32335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32337 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32339 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32340 ;;Total ram usage:        1 bytes
 32341 ;; Hardware stack levels used:    1
 32342 ;; Hardware stack levels required when called:   13
 32343 ;; This function calls:
 32344 ;;		Nothing
 32345 ;; This function is called by:
 32346 ;;		_main
 32347 ;; This function uses a non-reentrant model
 32348 ;;
 32349                           
 32350                           	psect	text56
 32351  01A38A                     __ptext56:
 32352                           	opt stack 0
 32353  01A38A                     _getCauseOfReset:
 32354                           	opt stack 17
 32355                           
 32356                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 32357                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 32358                           
 32359                           ;incstack = 0
 32360  01A38A  AED7               	btfss	4055,7,c	;volatile
 32361  01A38C  D002               	goto	l1753
 32362                           
 32363                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 32364  01A38E  0E07               	movlw	7
 32365  01A390  D019               	goto	L16
 32366  01A392                     l1753:
 32367                           
 32368                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 32369  01A392  ACD7               	btfss	4055,6,c	;volatile
 32370  01A394  D002               	goto	l1755
 32371                           
 32372                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 32373  01A396  0E08               	movlw	8
 32374  01A398  D015               	goto	L16
 32375  01A39A                     l1755:
 32376                           
 32377                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 32378  01A39A  BAD7               	btfsc	4055,5,c	;volatile
 32379  01A39C  D002               	goto	l1757
 32380                           
 32381                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 32382  01A39E  0E05               	movlw	5
 32383  01A3A0  D011               	goto	L16
 32384  01A3A2                     l1757:
 32385                           
 32386                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 32387  01A3A2  B6D7               	btfsc	4055,3,c	;volatile
 32388  01A3A4  D002               	goto	l1759
 32389                           
 32390                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 32391  01A3A6  0E03               	movlw	3
 32392  01A3A8  D00D               	goto	L16
 32393  01A3AA                     l1759:
 32394                           
 32395                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 32396  01A3AA  B4D7               	btfsc	4055,2,c	;volatile
 32397  01A3AC  D002               	goto	l1761
 32398                           
 32399                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 32400  01A3AE  0E06               	movlw	6
 32401  01A3B0  D009               	goto	L16
 32402  01A3B2                     l1761:
 32403                           
 32404                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 32405  01A3B2  B2D7               	btfsc	4055,1,c	;volatile
 32406  01A3B4  D002               	goto	l1763
 32407                           
 32408                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 32409  01A3B6  0E01               	movlw	1
 32410  01A3B8  D005               	goto	L16
 32411  01A3BA                     l1763:
 32412                           
 32413                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 32414  01A3BA  B0D7               	btfsc	4055,0,c	;volatile
 32415  01A3BC  D002               	goto	l1765
 32416                           
 32417                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 32418  01A3BE  0E02               	movlw	2
 32419  01A3C0  D001               	goto	L16
 32420  01A3C2                     l1765:
 32421                           
 32422                           ;cause_of_reset.c: 60: else {
 32423                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 32424                           
 32425                           ; BSR set to: 1
 32426  01A3C2  0E00               	movlw	0
 32427  01A3C4                     L16:
 32428  01A3C4  0101               	movlb	1	; () banked
 32429  01A3C6  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 32430                           
 32431                           ; BSR set to: 1
 32432                           ;cause_of_reset.c: 64: }
 32433                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 32434                           
 32435                           ; BSR set to: 1
 32436                           
 32437                           ; BSR set to: 1
 32438                           
 32439                           ; BSR set to: 1
 32440                           
 32441                           ; BSR set to: 1
 32442                           
 32443                           ; BSR set to: 1
 32444                           
 32445                           ; BSR set to: 1
 32446                           
 32447                           ; BSR set to: 1
 32448  01A3C8  9ED7               	bcf	4055,7,c	;volatile
 32449                           
 32450                           ; BSR set to: 1
 32451                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 32452  01A3CA  9CD7               	bcf	4055,6,c	;volatile
 32453                           
 32454                           ; BSR set to: 1
 32455                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 32456  01A3CC  8AD7               	bsf	4055,5,c	;volatile
 32457                           
 32458                           ; BSR set to: 1
 32459                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 32460  01A3CE  88D7               	bsf	4055,4,c	;volatile
 32461                           
 32462                           ; BSR set to: 1
 32463                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 32464  01A3D0  86D7               	bsf	4055,3,c	;volatile
 32465                           
 32466                           ; BSR set to: 1
 32467                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 32468  01A3D2  84D7               	bsf	4055,2,c	;volatile
 32469                           
 32470                           ; BSR set to: 1
 32471                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 32472  01A3D4  82D7               	bsf	4055,1,c	;volatile
 32473                           
 32474                           ; BSR set to: 1
 32475                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 32476  01A3D6  80D7               	bsf	4055,0,c	;volatile
 32477                           
 32478                           ;cause_of_reset.c: 76: return return_reset_cause;
 32479  01A3D8  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 32480  01A3DA  0012               	return	
 32481  01A3DC                     __end_of_getCauseOfReset:
 32482                           	opt stack 0
 32483                           tosu	equ	0xFFF
 32484                           tosh	equ	0xFFE
 32485                           tosl	equ	0xFFD
 32486                           pclath	equ	0xFFA
 32487                           tblptru	equ	0xFF8
 32488                           tblptrh	equ	0xFF7
 32489                           tblptrl	equ	0xFF6
 32490                           tablat	equ	0xFF5
 32491                           prodh	equ	0xFF4
 32492                           prodl	equ	0xFF3
 32493                           intcon	equ	0xFF2
 32494                           indf0	equ	0xFEF
 32495                           postinc0	equ	0xFEE
 32496                           fsr0h	equ	0xFEA
 32497                           fsr0l	equ	0xFE9
 32498                           wreg	equ	0xFE8
 32499                           indf1	equ	0xFE7
 32500                           postdec1	equ	0xFE5
 32501                           plusw1	equ	0xFE3
 32502                           fsr1h	equ	0xFE2
 32503                           fsr1l	equ	0xFE1
 32504                           indf2	equ	0xFDF
 32505                           postinc2	equ	0xFDE
 32506                           postdec2	equ	0xFDD
 32507                           plusw2	equ	0xFDB
 32508                           fsr2h	equ	0xFDA
 32509                           fsr2l	equ	0xFD9
 32510                           status	equ	0xFD8
 32511                           
 32512 ;; *************** function _SYSTEM_Initialize *****************
 32513 ;; Defined at:
 32514 ;;		line 50 in file "mcc_generated_files/mcc.c"
 32515 ;; Parameters:    Size  Location     Type
 32516 ;;		None
 32517 ;; Auto vars:     Size  Location     Type
 32518 ;;		None
 32519 ;; Return value:  Size  Location     Type
 32520 ;;                  1    wreg      void 
 32521 ;; Registers used:
 32522 ;;		wreg, status,2, status,0, cstack
 32523 ;; Tracked objects:
 32524 ;;		On entry : 0/0
 32525 ;;		On exit  : 0/0
 32526 ;;		Unchanged: 0/0
 32527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32532 ;;Total ram usage:        0 bytes
 32533 ;; Hardware stack levels used:    1
 32534 ;; Hardware stack levels required when called:   15
 32535 ;; This function calls:
 32536 ;;		_ADCC_Initialize
 32537 ;;		_EUSART2_Initialize
 32538 ;;		_EXT_INT_Initialize
 32539 ;;		_FVR_Initialize
 32540 ;;		_HLVD_Initialize
 32541 ;;		_I2C1_Initialize
 32542 ;;		_INTERRUPT_Initialize
 32543 ;;		_OSCILLATOR_Initialize
 32544 ;;		_PIN_MANAGER_Initialize
 32545 ;;		_PMD_Initialize
 32546 ;;		_TMR4_Initialize
 32547 ;;		_TMR5_Initialize
 32548 ;;		_TMR6_Initialize
 32549 ;;		_TMR7_Initialize
 32550 ;; This function is called by:
 32551 ;;		_main
 32552 ;; This function uses a non-reentrant model
 32553 ;;
 32554                           
 32555                           	psect	text57
 32556  01AA62                     __ptext57:
 32557                           	opt stack 0
 32558  01AA62                     _SYSTEM_Initialize:
 32559                           	opt stack 15
 32560                           
 32561                           ;mcc.c: 52: INTERRUPT_Initialize();
 32562                           
 32563                           ; BSR set to: 1
 32564                           ;incstack = 0
 32565  01AA62  ECCF  F0D7         	call	_INTERRUPT_Initialize	;wreg free
 32566                           
 32567                           ;mcc.c: 53: PMD_Initialize();
 32568  01AA66  ECB3  F0D7         	call	_PMD_Initialize	;wreg free
 32569                           
 32570                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 32571  01AA6A  EC59  F0CA         	call	_PIN_MANAGER_Initialize	;wreg free
 32572                           
 32573                           ;mcc.c: 55: OSCILLATOR_Initialize();
 32574  01AA6E  ECC1  F0D7         	call	_OSCILLATOR_Initialize	;wreg free
 32575                           
 32576                           ;mcc.c: 56: I2C1_Initialize();
 32577  01AA72  ECBE  F0D5         	call	_I2C1_Initialize	;wreg free
 32578                           
 32579                           ;mcc.c: 57: HLVD_Initialize();
 32580  01AA76  EC72  F0D8         	call	_HLVD_Initialize	;wreg free
 32581                           
 32582                           ;mcc.c: 58: FVR_Initialize();
 32583  01AA7A  ECD4  F0D8         	call	_FVR_Initialize	;wreg free
 32584                           
 32585                           ;mcc.c: 59: TMR7_Initialize();
 32586  01AA7E  EC72  F0D1         	call	_TMR7_Initialize	;wreg free
 32587                           
 32588                           ;mcc.c: 60: ADCC_Initialize();
 32589  01AA82  ECEA  F0D0         	call	_ADCC_Initialize	;wreg free
 32590                           
 32591                           ;mcc.c: 61: TMR4_Initialize();
 32592  01AA86  EC71  F0D6         	call	_TMR4_Initialize	;wreg free
 32593                           
 32594                           ;mcc.c: 62: EXT_INT_Initialize();
 32595  01AA8A  EC95  F0D7         	call	_EXT_INT_Initialize	;wreg free
 32596                           
 32597                           ;mcc.c: 63: TMR6_Initialize();
 32598  01AA8E  EC28  F0D6         	call	_TMR6_Initialize	;wreg free
 32599                           
 32600                           ;mcc.c: 64: TMR5_Initialize();
 32601  01AA92  EC3E  F0D2         	call	_TMR5_Initialize	;wreg free
 32602                           
 32603                           ;mcc.c: 65: EUSART2_Initialize();
 32604  01AA96  EC1F  F0D0         	call	_EUSART2_Initialize	;wreg free
 32605  01AA9A  0012               	return		;funcret
 32606  01AA9C                     __end_of_SYSTEM_Initialize:
 32607                           	opt stack 0
 32608                           tosu	equ	0xFFF
 32609                           tosh	equ	0xFFE
 32610                           tosl	equ	0xFFD
 32611                           pclath	equ	0xFFA
 32612                           tblptru	equ	0xFF8
 32613                           tblptrh	equ	0xFF7
 32614                           tblptrl	equ	0xFF6
 32615                           tablat	equ	0xFF5
 32616                           prodh	equ	0xFF4
 32617                           prodl	equ	0xFF3
 32618                           intcon	equ	0xFF2
 32619                           indf0	equ	0xFEF
 32620                           postinc0	equ	0xFEE
 32621                           fsr0h	equ	0xFEA
 32622                           fsr0l	equ	0xFE9
 32623                           wreg	equ	0xFE8
 32624                           indf1	equ	0xFE7
 32625                           postdec1	equ	0xFE5
 32626                           plusw1	equ	0xFE3
 32627                           fsr1h	equ	0xFE2
 32628                           fsr1l	equ	0xFE1
 32629                           indf2	equ	0xFDF
 32630                           postinc2	equ	0xFDE
 32631                           postdec2	equ	0xFDD
 32632                           plusw2	equ	0xFDB
 32633                           fsr2h	equ	0xFDA
 32634                           fsr2l	equ	0xFD9
 32635                           status	equ	0xFD8
 32636                           
 32637 ;; *************** function _TMR7_Initialize *****************
 32638 ;; Defined at:
 32639 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 32640 ;; Parameters:    Size  Location     Type
 32641 ;;		None
 32642 ;; Auto vars:     Size  Location     Type
 32643 ;;		None
 32644 ;; Return value:  Size  Location     Type
 32645 ;;                  1    wreg      void 
 32646 ;; Registers used:
 32647 ;;		wreg, status,2, status,0, cstack
 32648 ;; Tracked objects:
 32649 ;;		On entry : 0/0
 32650 ;;		On exit  : 0/0
 32651 ;;		Unchanged: 0/0
 32652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32655 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32656 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32657 ;;Total ram usage:        2 bytes
 32658 ;; Hardware stack levels used:    1
 32659 ;; Hardware stack levels required when called:   14
 32660 ;; This function calls:
 32661 ;;		_TMR7_SetInterruptHandler
 32662 ;; This function is called by:
 32663 ;;		_SYSTEM_Initialize
 32664 ;; This function uses a non-reentrant model
 32665 ;;
 32666                           
 32667                           	psect	text58
 32668  01A2E4                     __ptext58:
 32669                           	opt stack 0
 32670  01A2E4                     _TMR7_Initialize:
 32671                           	opt stack 15
 32672                           
 32673                           ;tmr7.c: 69: T7GCON = 0x00;
 32674                           
 32675                           ;incstack = 0
 32676  01A2E4  0E00               	movlw	0
 32677  01A2E6  010F               	movlb	15	; () banked
 32678  01A2E8  6F31               	movwf	49,b	;volatile
 32679                           
 32680                           ;tmr7.c: 72: T7GATE = 0x00;
 32681  01A2EA  0E00               	movlw	0
 32682  01A2EC  6F32               	movwf	50,b	;volatile
 32683                           
 32684                           ;tmr7.c: 75: T7CLK = 0x03;
 32685  01A2EE  0E03               	movlw	3
 32686  01A2F0  6F33               	movwf	51,b	;volatile
 32687                           
 32688                           ;tmr7.c: 78: TMR7H = 0xEC;
 32689  01A2F2  0EEC               	movlw	236
 32690  01A2F4  6F2F               	movwf	47,b	;volatile
 32691                           
 32692                           ;tmr7.c: 81: TMR7L = 0x78;
 32693  01A2F6  0E78               	movlw	120
 32694  01A2F8  6F2E               	movwf	46,b	;volatile
 32695                           
 32696                           ; BSR set to: 15
 32697                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 32698  01A2FA  512E               	movf	46,w,b	;volatile
 32699  01A2FC  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 32700  01A300  0101               	movlb	1	; () banked
 32701  01A302  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 32702  01A304  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 32703  01A308  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 32704  01A30A  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 32705  01A30C  0102               	movlb	2	; () banked
 32706  01A30E  6F5F               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 32707  01A310  0101               	movlb	1	; () banked
 32708  01A312  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 32709  01A314  0102               	movlb	2	; () banked
 32710  01A316  6F60               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 32711                           
 32712                           ; BSR set to: 2
 32713                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 32714  01A318  010E               	movlb	14	; () banked
 32715  01A31A  9D38               	bcf	56,6,b	;volatile
 32716                           
 32717                           ; BSR set to: 14
 32718                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 32719  01A31C  8D2E               	bsf	46,6,b	;volatile
 32720                           
 32721                           ; BSR set to: 14
 32722                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 32723  01A31E  0EE6               	movlw	low _TMR7_DefaultInterruptHandler
 32724  01A320  0101               	movlb	1	; () banked
 32725  01A322  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 32726  01A324  0EB1               	movlw	high _TMR7_DefaultInterruptHandler
 32727  01A326  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 32728  01A328  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 32729  01A32A  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 32730  01A32C  EC7A  F0D8         	call	_TMR7_SetInterruptHandler	;wreg free
 32731                           
 32732                           ;tmr7.c: 96: T7CON = 0x31;
 32733  01A330  0E31               	movlw	49
 32734  01A332  010F               	movlb	15	; () banked
 32735  01A334  6F30               	movwf	48,b	;volatile
 32736                           
 32737                           ; BSR set to: 15
 32738  01A336  0012               	return		;funcret
 32739  01A338                     __end_of_TMR7_Initialize:
 32740                           	opt stack 0
 32741                           tosu	equ	0xFFF
 32742                           tosh	equ	0xFFE
 32743                           tosl	equ	0xFFD
 32744                           pclath	equ	0xFFA
 32745                           tblptru	equ	0xFF8
 32746                           tblptrh	equ	0xFF7
 32747                           tblptrl	equ	0xFF6
 32748                           tablat	equ	0xFF5
 32749                           prodh	equ	0xFF4
 32750                           prodl	equ	0xFF3
 32751                           intcon	equ	0xFF2
 32752                           indf0	equ	0xFEF
 32753                           postinc0	equ	0xFEE
 32754                           fsr0h	equ	0xFEA
 32755                           fsr0l	equ	0xFE9
 32756                           wreg	equ	0xFE8
 32757                           indf1	equ	0xFE7
 32758                           postdec1	equ	0xFE5
 32759                           plusw1	equ	0xFE3
 32760                           fsr1h	equ	0xFE2
 32761                           fsr1l	equ	0xFE1
 32762                           indf2	equ	0xFDF
 32763                           postinc2	equ	0xFDE
 32764                           postdec2	equ	0xFDD
 32765                           plusw2	equ	0xFDB
 32766                           fsr2h	equ	0xFDA
 32767                           fsr2l	equ	0xFD9
 32768                           status	equ	0xFD8
 32769                           
 32770 ;; *************** function _TMR7_SetInterruptHandler *****************
 32771 ;; Defined at:
 32772 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 32773 ;; Parameters:    Size  Location     Type
 32774 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 32775 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 32776 ;; Auto vars:     Size  Location     Type
 32777 ;;		None
 32778 ;; Return value:  Size  Location     Type
 32779 ;;                  1    wreg      void 
 32780 ;; Registers used:
 32781 ;;		wreg, status,2, status,0
 32782 ;; Tracked objects:
 32783 ;;		On entry : 0/0
 32784 ;;		On exit  : 0/0
 32785 ;;		Unchanged: 0/0
 32786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32787 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32790 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32791 ;;Total ram usage:        3 bytes
 32792 ;; Hardware stack levels used:    1
 32793 ;; Hardware stack levels required when called:   13
 32794 ;; This function calls:
 32795 ;;		Nothing
 32796 ;; This function is called by:
 32797 ;;		_TMR7_Initialize
 32798 ;;		_main
 32799 ;; This function uses a non-reentrant model
 32800 ;;
 32801                           
 32802                           	psect	text59
 32803  01B0F4                     __ptext59:
 32804                           	opt stack 0
 32805  01B0F4                     _TMR7_SetInterruptHandler:
 32806                           	opt stack 17
 32807                           
 32808                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 32809                           
 32810                           ; BSR set to: 15
 32811                           ;incstack = 0
 32812  01B0F4  C117  F244         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 32813  01B0F8  C118  F245         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 32814  01B0FC  C119  F246         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 32815  01B100  0012               	return		;funcret
 32816  01B102                     __end_of_TMR7_SetInterruptHandler:
 32817                           	opt stack 0
 32818                           tosu	equ	0xFFF
 32819                           tosh	equ	0xFFE
 32820                           tosl	equ	0xFFD
 32821                           pclath	equ	0xFFA
 32822                           tblptru	equ	0xFF8
 32823                           tblptrh	equ	0xFF7
 32824                           tblptrl	equ	0xFF6
 32825                           tablat	equ	0xFF5
 32826                           prodh	equ	0xFF4
 32827                           prodl	equ	0xFF3
 32828                           intcon	equ	0xFF2
 32829                           indf0	equ	0xFEF
 32830                           postinc0	equ	0xFEE
 32831                           fsr0h	equ	0xFEA
 32832                           fsr0l	equ	0xFE9
 32833                           wreg	equ	0xFE8
 32834                           indf1	equ	0xFE7
 32835                           postdec1	equ	0xFE5
 32836                           plusw1	equ	0xFE3
 32837                           fsr1h	equ	0xFE2
 32838                           fsr1l	equ	0xFE1
 32839                           indf2	equ	0xFDF
 32840                           postinc2	equ	0xFDE
 32841                           postdec2	equ	0xFDD
 32842                           plusw2	equ	0xFDB
 32843                           fsr2h	equ	0xFDA
 32844                           fsr2l	equ	0xFD9
 32845                           status	equ	0xFD8
 32846                           
 32847 ;; *************** function _TMR6_Initialize *****************
 32848 ;; Defined at:
 32849 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 32850 ;; Parameters:    Size  Location     Type
 32851 ;;		None
 32852 ;; Auto vars:     Size  Location     Type
 32853 ;;		None
 32854 ;; Return value:  Size  Location     Type
 32855 ;;                  1    wreg      void 
 32856 ;; Registers used:
 32857 ;;		wreg, status,2, status,0, cstack
 32858 ;; Tracked objects:
 32859 ;;		On entry : 0/0
 32860 ;;		On exit  : 0/0
 32861 ;;		Unchanged: 0/0
 32862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32867 ;;Total ram usage:        0 bytes
 32868 ;; Hardware stack levels used:    1
 32869 ;; Hardware stack levels required when called:   14
 32870 ;; This function calls:
 32871 ;;		_TMR6_SetInterruptHandler
 32872 ;; This function is called by:
 32873 ;;		_SYSTEM_Initialize
 32874 ;; This function uses a non-reentrant model
 32875 ;;
 32876                           
 32877                           	psect	text60
 32878  01AC50                     __ptext60:
 32879                           	opt stack 0
 32880  01AC50                     _TMR6_Initialize:
 32881                           	opt stack 15
 32882                           
 32883                           ;tmr6.c: 69: T6CLKCON = 0x04;
 32884                           
 32885                           ;incstack = 0
 32886  01AC50  0E04               	movlw	4
 32887  01AC52  6EB3               	movwf	4019,c	;volatile
 32888                           
 32889                           ;tmr6.c: 72: T6HLT = 0x20;
 32890  01AC54  0E20               	movlw	32
 32891  01AC56  6EB2               	movwf	4018,c	;volatile
 32892                           
 32893                           ;tmr6.c: 75: T6RST = 0x00;
 32894  01AC58  0E00               	movlw	0
 32895  01AC5A  6EB4               	movwf	4020,c	;volatile
 32896                           
 32897                           ;tmr6.c: 78: T6PR = 0xF1;
 32898  01AC5C  0EF1               	movlw	241
 32899  01AC5E  6EB0               	movwf	4016,c	;volatile
 32900                           
 32901                           ;tmr6.c: 81: T6TMR = 0x00;
 32902  01AC60  0E00               	movlw	0
 32903  01AC62  6EAF               	movwf	4015,c	;volatile
 32904                           
 32905                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 32906  01AC64  010E               	movlb	14	; () banked
 32907  01AC66  9B38               	bcf	56,5,b	;volatile
 32908                           
 32909                           ; BSR set to: 14
 32910                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 32911  01AC68  8B2E               	bsf	46,5,b	;volatile
 32912                           
 32913                           ; BSR set to: 14
 32914                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 32915  01AC6A  0EE8               	movlw	low _TMR6_DefaultInterruptHandler
 32916  01AC6C  0101               	movlb	1	; () banked
 32917  01AC6E  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 32918  01AC70  0EB1               	movlw	high _TMR6_DefaultInterruptHandler
 32919  01AC72  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 32920  01AC74  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 32921  01AC76  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 32922  01AC78  EC81  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 32923                           
 32924                           ;tmr6.c: 93: T6CON = 0xBF;
 32925  01AC7C  0EBF               	movlw	191
 32926  01AC7E  6EB1               	movwf	4017,c	;volatile
 32927  01AC80  0012               	return		;funcret
 32928  01AC82                     __end_of_TMR6_Initialize:
 32929                           	opt stack 0
 32930                           tosu	equ	0xFFF
 32931                           tosh	equ	0xFFE
 32932                           tosl	equ	0xFFD
 32933                           pclath	equ	0xFFA
 32934                           tblptru	equ	0xFF8
 32935                           tblptrh	equ	0xFF7
 32936                           tblptrl	equ	0xFF6
 32937                           tablat	equ	0xFF5
 32938                           prodh	equ	0xFF4
 32939                           prodl	equ	0xFF3
 32940                           intcon	equ	0xFF2
 32941                           indf0	equ	0xFEF
 32942                           postinc0	equ	0xFEE
 32943                           fsr0h	equ	0xFEA
 32944                           fsr0l	equ	0xFE9
 32945                           wreg	equ	0xFE8
 32946                           indf1	equ	0xFE7
 32947                           postdec1	equ	0xFE5
 32948                           plusw1	equ	0xFE3
 32949                           fsr1h	equ	0xFE2
 32950                           fsr1l	equ	0xFE1
 32951                           indf2	equ	0xFDF
 32952                           postinc2	equ	0xFDE
 32953                           postdec2	equ	0xFDD
 32954                           plusw2	equ	0xFDB
 32955                           fsr2h	equ	0xFDA
 32956                           fsr2l	equ	0xFD9
 32957                           status	equ	0xFD8
 32958                           
 32959 ;; *************** function _TMR6_SetInterruptHandler *****************
 32960 ;; Defined at:
 32961 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 32962 ;; Parameters:    Size  Location     Type
 32963 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 32964 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 32965 ;; Auto vars:     Size  Location     Type
 32966 ;;		None
 32967 ;; Return value:  Size  Location     Type
 32968 ;;                  1    wreg      void 
 32969 ;; Registers used:
 32970 ;;		wreg, status,2, status,0
 32971 ;; Tracked objects:
 32972 ;;		On entry : 0/0
 32973 ;;		On exit  : 0/0
 32974 ;;		Unchanged: 0/0
 32975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32976 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32979 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32980 ;;Total ram usage:        3 bytes
 32981 ;; Hardware stack levels used:    1
 32982 ;; Hardware stack levels required when called:   13
 32983 ;; This function calls:
 32984 ;;		Nothing
 32985 ;; This function is called by:
 32986 ;;		_TMR6_Initialize
 32987 ;;		_main
 32988 ;; This function uses a non-reentrant model
 32989 ;;
 32990                           
 32991                           	psect	text61
 32992  01B102                     __ptext61:
 32993                           	opt stack 0
 32994  01B102                     _TMR6_SetInterruptHandler:
 32995                           	opt stack 17
 32996                           
 32997                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 32998                           
 32999                           ;incstack = 0
 33000  01B102  C117  F24A         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 33001  01B106  C118  F24B         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 33002  01B10A  C119  F24C         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 33003  01B10E  0012               	return		;funcret
 33004  01B110                     __end_of_TMR6_SetInterruptHandler:
 33005                           	opt stack 0
 33006                           tosu	equ	0xFFF
 33007                           tosh	equ	0xFFE
 33008                           tosl	equ	0xFFD
 33009                           pclath	equ	0xFFA
 33010                           tblptru	equ	0xFF8
 33011                           tblptrh	equ	0xFF7
 33012                           tblptrl	equ	0xFF6
 33013                           tablat	equ	0xFF5
 33014                           prodh	equ	0xFF4
 33015                           prodl	equ	0xFF3
 33016                           intcon	equ	0xFF2
 33017                           indf0	equ	0xFEF
 33018                           postinc0	equ	0xFEE
 33019                           fsr0h	equ	0xFEA
 33020                           fsr0l	equ	0xFE9
 33021                           wreg	equ	0xFE8
 33022                           indf1	equ	0xFE7
 33023                           postdec1	equ	0xFE5
 33024                           plusw1	equ	0xFE3
 33025                           fsr1h	equ	0xFE2
 33026                           fsr1l	equ	0xFE1
 33027                           indf2	equ	0xFDF
 33028                           postinc2	equ	0xFDE
 33029                           postdec2	equ	0xFDD
 33030                           plusw2	equ	0xFDB
 33031                           fsr2h	equ	0xFDA
 33032                           fsr2l	equ	0xFD9
 33033                           status	equ	0xFD8
 33034                           
 33035 ;; *************** function _TMR5_Initialize *****************
 33036 ;; Defined at:
 33037 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 33038 ;; Parameters:    Size  Location     Type
 33039 ;;		None
 33040 ;; Auto vars:     Size  Location     Type
 33041 ;;		None
 33042 ;; Return value:  Size  Location     Type
 33043 ;;                  1    wreg      void 
 33044 ;; Registers used:
 33045 ;;		wreg, status,2, status,0, cstack
 33046 ;; Tracked objects:
 33047 ;;		On entry : 0/0
 33048 ;;		On exit  : 0/0
 33049 ;;		Unchanged: 0/0
 33050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33053 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33054 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33055 ;;Total ram usage:        2 bytes
 33056 ;; Hardware stack levels used:    1
 33057 ;; Hardware stack levels required when called:   14
 33058 ;; This function calls:
 33059 ;;		_TMR5_SetInterruptHandler
 33060 ;; This function is called by:
 33061 ;;		_SYSTEM_Initialize
 33062 ;; This function uses a non-reentrant model
 33063 ;;
 33064                           
 33065                           	psect	text62
 33066  01A47C                     __ptext62:
 33067                           	opt stack 0
 33068  01A47C                     _TMR5_Initialize:
 33069                           	opt stack 15
 33070                           
 33071                           ;tmr5.c: 69: T5GCON = 0x00;
 33072                           
 33073                           ;incstack = 0
 33074  01A47C  0E00               	movlw	0
 33075  01A47E  6EC4               	movwf	4036,c	;volatile
 33076                           
 33077                           ;tmr5.c: 72: T5GATE = 0x00;
 33078  01A480  0E00               	movlw	0
 33079  01A482  6EC5               	movwf	4037,c	;volatile
 33080                           
 33081                           ;tmr5.c: 75: T5CLK = 0x01;
 33082  01A484  0E01               	movlw	1
 33083  01A486  6EC6               	movwf	4038,c	;volatile
 33084                           
 33085                           ;tmr5.c: 78: TMR5H = 0x00;
 33086  01A488  0E00               	movlw	0
 33087  01A48A  6EC2               	movwf	4034,c	;volatile
 33088                           
 33089                           ;tmr5.c: 81: TMR5L = 0x00;
 33090  01A48C  0E00               	movlw	0
 33091  01A48E  6EC1               	movwf	4033,c	;volatile
 33092                           
 33093                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 33094  01A490  50C1               	movf	4033,w,c	;volatile
 33095  01A492  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 33096  01A496  0101               	movlb	1	; () banked
 33097  01A498  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 33098  01A49A  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 33099  01A49E  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 33100  01A4A0  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 33101  01A4A2  0102               	movlb	2	; () banked
 33102  01A4A4  6F5D               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 33103  01A4A6  0101               	movlb	1	; () banked
 33104  01A4A8  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 33105  01A4AA  0102               	movlb	2	; () banked
 33106  01A4AC  6F5E               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 33107                           
 33108                           ; BSR set to: 2
 33109                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 33110  01A4AE  010E               	movlb	14	; () banked
 33111  01A4B0  9938               	bcf	56,4,b	;volatile
 33112                           
 33113                           ; BSR set to: 14
 33114                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 33115  01A4B2  892E               	bsf	46,4,b	;volatile
 33116                           
 33117                           ; BSR set to: 14
 33118                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 33119  01A4B4  0EEA               	movlw	low _TMR5_DefaultInterruptHandler
 33120  01A4B6  0101               	movlb	1	; () banked
 33121  01A4B8  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 33122  01A4BA  0EB1               	movlw	high _TMR5_DefaultInterruptHandler
 33123  01A4BC  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33124  01A4BE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 33125  01A4C0  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33126  01A4C2  EC88  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 33127                           
 33128                           ;tmr5.c: 96: T5CON = 0x13;
 33129  01A4C6  0E13               	movlw	19
 33130  01A4C8  6EC3               	movwf	4035,c	;volatile
 33131  01A4CA  0012               	return		;funcret
 33132  01A4CC                     __end_of_TMR5_Initialize:
 33133                           	opt stack 0
 33134                           tosu	equ	0xFFF
 33135                           tosh	equ	0xFFE
 33136                           tosl	equ	0xFFD
 33137                           pclath	equ	0xFFA
 33138                           tblptru	equ	0xFF8
 33139                           tblptrh	equ	0xFF7
 33140                           tblptrl	equ	0xFF6
 33141                           tablat	equ	0xFF5
 33142                           prodh	equ	0xFF4
 33143                           prodl	equ	0xFF3
 33144                           intcon	equ	0xFF2
 33145                           indf0	equ	0xFEF
 33146                           postinc0	equ	0xFEE
 33147                           fsr0h	equ	0xFEA
 33148                           fsr0l	equ	0xFE9
 33149                           wreg	equ	0xFE8
 33150                           indf1	equ	0xFE7
 33151                           postdec1	equ	0xFE5
 33152                           plusw1	equ	0xFE3
 33153                           fsr1h	equ	0xFE2
 33154                           fsr1l	equ	0xFE1
 33155                           indf2	equ	0xFDF
 33156                           postinc2	equ	0xFDE
 33157                           postdec2	equ	0xFDD
 33158                           plusw2	equ	0xFDB
 33159                           fsr2h	equ	0xFDA
 33160                           fsr2l	equ	0xFD9
 33161                           status	equ	0xFD8
 33162                           
 33163 ;; *************** function _TMR5_SetInterruptHandler *****************
 33164 ;; Defined at:
 33165 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 33166 ;; Parameters:    Size  Location     Type
 33167 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33168 ;;		 -> dimmingOnTimeCallback(1), TMR5_DefaultInterruptHandler(1), 
 33169 ;; Auto vars:     Size  Location     Type
 33170 ;;		None
 33171 ;; Return value:  Size  Location     Type
 33172 ;;                  1    wreg      void 
 33173 ;; Registers used:
 33174 ;;		wreg, status,2, status,0
 33175 ;; Tracked objects:
 33176 ;;		On entry : 0/0
 33177 ;;		On exit  : 0/0
 33178 ;;		Unchanged: 0/0
 33179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33180 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33183 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33184 ;;Total ram usage:        3 bytes
 33185 ;; Hardware stack levels used:    1
 33186 ;; Hardware stack levels required when called:   13
 33187 ;; This function calls:
 33188 ;;		Nothing
 33189 ;; This function is called by:
 33190 ;;		_TMR5_Initialize
 33191 ;;		_main
 33192 ;; This function uses a non-reentrant model
 33193 ;;
 33194                           
 33195                           	psect	text63
 33196  01B110                     __ptext63:
 33197                           	opt stack 0
 33198  01B110                     _TMR5_SetInterruptHandler:
 33199                           	opt stack 17
 33200                           
 33201                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 33202                           
 33203                           ;incstack = 0
 33204  01B110  C117  F241         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 33205  01B114  C118  F242         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 33206  01B118  C119  F243         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 33207  01B11C  0012               	return		;funcret
 33208  01B11E                     __end_of_TMR5_SetInterruptHandler:
 33209                           	opt stack 0
 33210                           tosu	equ	0xFFF
 33211                           tosh	equ	0xFFE
 33212                           tosl	equ	0xFFD
 33213                           pclath	equ	0xFFA
 33214                           tblptru	equ	0xFF8
 33215                           tblptrh	equ	0xFF7
 33216                           tblptrl	equ	0xFF6
 33217                           tablat	equ	0xFF5
 33218                           prodh	equ	0xFF4
 33219                           prodl	equ	0xFF3
 33220                           intcon	equ	0xFF2
 33221                           indf0	equ	0xFEF
 33222                           postinc0	equ	0xFEE
 33223                           fsr0h	equ	0xFEA
 33224                           fsr0l	equ	0xFE9
 33225                           wreg	equ	0xFE8
 33226                           indf1	equ	0xFE7
 33227                           postdec1	equ	0xFE5
 33228                           plusw1	equ	0xFE3
 33229                           fsr1h	equ	0xFE2
 33230                           fsr1l	equ	0xFE1
 33231                           indf2	equ	0xFDF
 33232                           postinc2	equ	0xFDE
 33233                           postdec2	equ	0xFDD
 33234                           plusw2	equ	0xFDB
 33235                           fsr2h	equ	0xFDA
 33236                           fsr2l	equ	0xFD9
 33237                           status	equ	0xFD8
 33238                           
 33239 ;; *************** function _TMR4_Initialize *****************
 33240 ;; Defined at:
 33241 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 33242 ;; Parameters:    Size  Location     Type
 33243 ;;		None
 33244 ;; Auto vars:     Size  Location     Type
 33245 ;;		None
 33246 ;; Return value:  Size  Location     Type
 33247 ;;                  1    wreg      void 
 33248 ;; Registers used:
 33249 ;;		wreg, status,2, status,0, cstack
 33250 ;; Tracked objects:
 33251 ;;		On entry : 0/0
 33252 ;;		On exit  : 0/0
 33253 ;;		Unchanged: 0/0
 33254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33259 ;;Total ram usage:        0 bytes
 33260 ;; Hardware stack levels used:    1
 33261 ;; Hardware stack levels required when called:   14
 33262 ;; This function calls:
 33263 ;;		_TMR4_SetInterruptHandler
 33264 ;; This function is called by:
 33265 ;;		_SYSTEM_Initialize
 33266 ;; This function uses a non-reentrant model
 33267 ;;
 33268                           
 33269                           	psect	text64
 33270  01ACE2                     __ptext64:
 33271                           	opt stack 0
 33272  01ACE2                     _TMR4_Initialize:
 33273                           	opt stack 15
 33274                           
 33275                           ;tmr4.c: 69: T4CLKCON = 0x04;
 33276                           
 33277                           ;incstack = 0
 33278  01ACE2  0E04               	movlw	4
 33279  01ACE4  6EB9               	movwf	4025,c	;volatile
 33280                           
 33281                           ;tmr4.c: 72: T4HLT = 0xA0;
 33282  01ACE6  0EA0               	movlw	160
 33283  01ACE8  6EB8               	movwf	4024,c	;volatile
 33284                           
 33285                           ;tmr4.c: 75: T4RST = 0x00;
 33286  01ACEA  0E00               	movlw	0
 33287  01ACEC  6EBA               	movwf	4026,c	;volatile
 33288                           
 33289                           ;tmr4.c: 78: T4PR = 0xE2;
 33290  01ACEE  0EE2               	movlw	226
 33291  01ACF0  6EB6               	movwf	4022,c	;volatile
 33292                           
 33293                           ;tmr4.c: 81: T4TMR = 0x00;
 33294  01ACF2  0E00               	movlw	0
 33295  01ACF4  6EB5               	movwf	4021,c	;volatile
 33296                           
 33297                           ;tmr4.c: 84: PIR5bits.TMR4IF = 0;
 33298  01ACF6  010E               	movlb	14	; () banked
 33299  01ACF8  9738               	bcf	56,3,b	;volatile
 33300                           
 33301                           ; BSR set to: 14
 33302                           ;tmr4.c: 87: PIE5bits.TMR4IE = 1;
 33303  01ACFA  872E               	bsf	46,3,b	;volatile
 33304                           
 33305                           ; BSR set to: 14
 33306                           ;tmr4.c: 90: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
 33307  01ACFC  0EEC               	movlw	low _TMR4_DefaultInterruptHandler
 33308  01ACFE  0101               	movlb	1	; () banked
 33309  01AD00  6F17               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 33310  01AD02  0EB1               	movlw	high _TMR4_DefaultInterruptHandler
 33311  01AD04  6F18               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33312  01AD06  0E01               	movlw	low (_TMR4_DefaultInterruptHandler shr (0+16))
 33313  01AD08  6F19               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33314  01AD0A  EC8F  F0D8         	call	_TMR4_SetInterruptHandler	;wreg free
 33315                           
 33316                           ;tmr4.c: 93: T4CON = 0xFF;
 33317  01AD0E  68B7               	setf	4023,c	;volatile
 33318  01AD10  0012               	return		;funcret
 33319  01AD12                     __end_of_TMR4_Initialize:
 33320                           	opt stack 0
 33321                           tosu	equ	0xFFF
 33322                           tosh	equ	0xFFE
 33323                           tosl	equ	0xFFD
 33324                           pclath	equ	0xFFA
 33325                           tblptru	equ	0xFF8
 33326                           tblptrh	equ	0xFF7
 33327                           tblptrl	equ	0xFF6
 33328                           tablat	equ	0xFF5
 33329                           prodh	equ	0xFF4
 33330                           prodl	equ	0xFF3
 33331                           intcon	equ	0xFF2
 33332                           indf0	equ	0xFEF
 33333                           postinc0	equ	0xFEE
 33334                           fsr0h	equ	0xFEA
 33335                           fsr0l	equ	0xFE9
 33336                           wreg	equ	0xFE8
 33337                           indf1	equ	0xFE7
 33338                           postdec1	equ	0xFE5
 33339                           plusw1	equ	0xFE3
 33340                           fsr1h	equ	0xFE2
 33341                           fsr1l	equ	0xFE1
 33342                           indf2	equ	0xFDF
 33343                           postinc2	equ	0xFDE
 33344                           postdec2	equ	0xFDD
 33345                           plusw2	equ	0xFDB
 33346                           fsr2h	equ	0xFDA
 33347                           fsr2l	equ	0xFD9
 33348                           status	equ	0xFD8
 33349                           
 33350 ;; *************** function _TMR4_SetInterruptHandler *****************
 33351 ;; Defined at:
 33352 ;;		line 193 in file "mcc_generated_files/tmr4.c"
 33353 ;; Parameters:    Size  Location     Type
 33354 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33355 ;;		 -> writeEnergyToEEPROMCallback(1), TMR4_DefaultInterruptHandler(1), 
 33356 ;; Auto vars:     Size  Location     Type
 33357 ;;		None
 33358 ;; Return value:  Size  Location     Type
 33359 ;;                  1    wreg      void 
 33360 ;; Registers used:
 33361 ;;		wreg, status,2, status,0
 33362 ;; Tracked objects:
 33363 ;;		On entry : 0/0
 33364 ;;		On exit  : 0/0
 33365 ;;		Unchanged: 0/0
 33366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33367 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33370 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33371 ;;Total ram usage:        3 bytes
 33372 ;; Hardware stack levels used:    1
 33373 ;; Hardware stack levels required when called:   13
 33374 ;; This function calls:
 33375 ;;		Nothing
 33376 ;; This function is called by:
 33377 ;;		_TMR4_Initialize
 33378 ;;		_main
 33379 ;; This function uses a non-reentrant model
 33380 ;;
 33381                           
 33382                           	psect	text65
 33383  01B11E                     __ptext65:
 33384                           	opt stack 0
 33385  01B11E                     _TMR4_SetInterruptHandler:
 33386                           	opt stack 17
 33387                           
 33388                           ;tmr4.c: 194: TMR4_InterruptHandler = InterruptHandler;
 33389                           
 33390                           ;incstack = 0
 33391  01B11E  C117  F23B         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 33392  01B122  C118  F23C         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 33393  01B126  C119  F23D         	movff	TMR4_SetInterruptHandler@InterruptHandler+2,_TMR4_InterruptHandler+2
 33394  01B12A  0012               	return		;funcret
 33395  01B12C                     __end_of_TMR4_SetInterruptHandler:
 33396                           	opt stack 0
 33397                           tosu	equ	0xFFF
 33398                           tosh	equ	0xFFE
 33399                           tosl	equ	0xFFD
 33400                           pclath	equ	0xFFA
 33401                           tblptru	equ	0xFF8
 33402                           tblptrh	equ	0xFF7
 33403                           tblptrl	equ	0xFF6
 33404                           tablat	equ	0xFF5
 33405                           prodh	equ	0xFF4
 33406                           prodl	equ	0xFF3
 33407                           intcon	equ	0xFF2
 33408                           indf0	equ	0xFEF
 33409                           postinc0	equ	0xFEE
 33410                           fsr0h	equ	0xFEA
 33411                           fsr0l	equ	0xFE9
 33412                           wreg	equ	0xFE8
 33413                           indf1	equ	0xFE7
 33414                           postdec1	equ	0xFE5
 33415                           plusw1	equ	0xFE3
 33416                           fsr1h	equ	0xFE2
 33417                           fsr1l	equ	0xFE1
 33418                           indf2	equ	0xFDF
 33419                           postinc2	equ	0xFDE
 33420                           postdec2	equ	0xFDD
 33421                           plusw2	equ	0xFDB
 33422                           fsr2h	equ	0xFDA
 33423                           fsr2l	equ	0xFD9
 33424                           status	equ	0xFD8
 33425                           
 33426 ;; *************** function _PMD_Initialize *****************
 33427 ;; Defined at:
 33428 ;;		line 86 in file "mcc_generated_files/mcc.c"
 33429 ;; Parameters:    Size  Location     Type
 33430 ;;		None
 33431 ;; Auto vars:     Size  Location     Type
 33432 ;;		None
 33433 ;; Return value:  Size  Location     Type
 33434 ;;                  1    wreg      void 
 33435 ;; Registers used:
 33436 ;;		wreg, status,2
 33437 ;; Tracked objects:
 33438 ;;		On entry : 0/0
 33439 ;;		On exit  : 0/0
 33440 ;;		Unchanged: 0/0
 33441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33446 ;;Total ram usage:        0 bytes
 33447 ;; Hardware stack levels used:    1
 33448 ;; Hardware stack levels required when called:   13
 33449 ;; This function calls:
 33450 ;;		Nothing
 33451 ;; This function is called by:
 33452 ;;		_SYSTEM_Initialize
 33453 ;; This function uses a non-reentrant model
 33454 ;;
 33455                           
 33456                           	psect	text66
 33457  01AF66                     __ptext66:
 33458                           	opt stack 0
 33459  01AF66                     _PMD_Initialize:
 33460                           	opt stack 16
 33461                           
 33462                           ;mcc.c: 89: PMD0 = 0x1A;
 33463                           
 33464                           ;incstack = 0
 33465  01AF66  0E1A               	movlw	26
 33466  01AF68  010E               	movlb	14	; () banked
 33467  01AF6A  6F4C               	movwf	76,b	;volatile
 33468                           
 33469                           ;mcc.c: 91: PMD1 = 0x00;
 33470  01AF6C  0E00               	movlw	0
 33471  01AF6E  6F4D               	movwf	77,b	;volatile
 33472                           
 33473                           ;mcc.c: 93: PMD2 = 0x2E;
 33474  01AF70  0E2E               	movlw	46
 33475  01AF72  6F4E               	movwf	78,b	;volatile
 33476                           
 33477                           ;mcc.c: 95: PMD3 = 0x4F;
 33478  01AF74  0E4F               	movlw	79
 33479  01AF76  6F4F               	movwf	79,b	;volatile
 33480                           
 33481                           ;mcc.c: 97: PMD4 = 0x7F;
 33482  01AF78  0E7F               	movlw	127
 33483  01AF7A  6F50               	movwf	80,b	;volatile
 33484                           
 33485                           ;mcc.c: 99: PMD5 = 0x74;
 33486  01AF7C  0E74               	movlw	116
 33487  01AF7E  6F51               	movwf	81,b	;volatile
 33488                           
 33489                           ; BSR set to: 14
 33490  01AF80  0012               	return		;funcret
 33491  01AF82                     __end_of_PMD_Initialize:
 33492                           	opt stack 0
 33493                           tosu	equ	0xFFF
 33494                           tosh	equ	0xFFE
 33495                           tosl	equ	0xFFD
 33496                           pclath	equ	0xFFA
 33497                           tblptru	equ	0xFF8
 33498                           tblptrh	equ	0xFF7
 33499                           tblptrl	equ	0xFF6
 33500                           tablat	equ	0xFF5
 33501                           prodh	equ	0xFF4
 33502                           prodl	equ	0xFF3
 33503                           intcon	equ	0xFF2
 33504                           indf0	equ	0xFEF
 33505                           postinc0	equ	0xFEE
 33506                           fsr0h	equ	0xFEA
 33507                           fsr0l	equ	0xFE9
 33508                           wreg	equ	0xFE8
 33509                           indf1	equ	0xFE7
 33510                           postdec1	equ	0xFE5
 33511                           plusw1	equ	0xFE3
 33512                           fsr1h	equ	0xFE2
 33513                           fsr1l	equ	0xFE1
 33514                           indf2	equ	0xFDF
 33515                           postinc2	equ	0xFDE
 33516                           postdec2	equ	0xFDD
 33517                           plusw2	equ	0xFDB
 33518                           fsr2h	equ	0xFDA
 33519                           fsr2l	equ	0xFD9
 33520                           status	equ	0xFD8
 33521                           
 33522 ;; *************** function _PIN_MANAGER_Initialize *****************
 33523 ;; Defined at:
 33524 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 33525 ;; Parameters:    Size  Location     Type
 33526 ;;		None
 33527 ;; Auto vars:     Size  Location     Type
 33528 ;;		None
 33529 ;; Return value:  Size  Location     Type
 33530 ;;                  1    wreg      void 
 33531 ;; Registers used:
 33532 ;;		wreg, status,2
 33533 ;; Tracked objects:
 33534 ;;		On entry : 0/0
 33535 ;;		On exit  : 0/0
 33536 ;;		Unchanged: 0/0
 33537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33542 ;;Total ram usage:        0 bytes
 33543 ;; Hardware stack levels used:    1
 33544 ;; Hardware stack levels required when called:   13
 33545 ;; This function calls:
 33546 ;;		Nothing
 33547 ;; This function is called by:
 33548 ;;		_SYSTEM_Initialize
 33549 ;; This function uses a non-reentrant model
 33550 ;;
 33551                           
 33552                           	psect	text67
 33553  0194B2                     __ptext67:
 33554                           	opt stack 0
 33555  0194B2                     _PIN_MANAGER_Initialize:
 33556                           	opt stack 16
 33557                           
 33558                           ;pin_manager.c: 62: LATE = 0x00;
 33559                           
 33560                           ; BSR set to: 14
 33561                           ;incstack = 0
 33562  0194B2  0E00               	movlw	0
 33563  0194B4  6E7D               	movwf	3965,c	;volatile
 33564                           
 33565                           ;pin_manager.c: 63: LATD = 0x00;
 33566  0194B6  0E00               	movlw	0
 33567  0194B8  6E7C               	movwf	3964,c	;volatile
 33568                           
 33569                           ;pin_manager.c: 64: LATA = 0x00;
 33570  0194BA  0E00               	movlw	0
 33571  0194BC  6E79               	movwf	3961,c	;volatile
 33572                           
 33573                           ;pin_manager.c: 65: LATF = 0x00;
 33574  0194BE  0E00               	movlw	0
 33575  0194C0  6E7E               	movwf	3966,c	;volatile
 33576                           
 33577                           ;pin_manager.c: 66: LATB = 0x00;
 33578  0194C2  0E00               	movlw	0
 33579  0194C4  6E7A               	movwf	3962,c	;volatile
 33580                           
 33581                           ;pin_manager.c: 67: LATG = 0x00;
 33582  0194C6  0E00               	movlw	0
 33583  0194C8  6E7F               	movwf	3967,c	;volatile
 33584                           
 33585                           ;pin_manager.c: 68: LATC = 0x00;
 33586  0194CA  0E00               	movlw	0
 33587  0194CC  6E7B               	movwf	3963,c	;volatile
 33588                           
 33589                           ;pin_manager.c: 69: LATH = 0x00;
 33590  0194CE  0E00               	movlw	0
 33591  0194D0  6E80               	movwf	3968,c	;volatile
 33592                           
 33593                           ;pin_manager.c: 74: TRISE = 0x04;
 33594  0194D2  0E04               	movlw	4
 33595  0194D4  6E85               	movwf	3973,c	;volatile
 33596                           
 33597                           ;pin_manager.c: 75: TRISF = 0x00;
 33598  0194D6  0E00               	movlw	0
 33599  0194D8  6E86               	movwf	3974,c	;volatile
 33600                           
 33601                           ;pin_manager.c: 76: TRISA = 0xBD;
 33602  0194DA  0EBD               	movlw	189
 33603  0194DC  6E81               	movwf	3969,c	;volatile
 33604                           
 33605                           ;pin_manager.c: 77: TRISG = 0x40;
 33606  0194DE  0E40               	movlw	64
 33607  0194E0  6E87               	movwf	3975,c	;volatile
 33608                           
 33609                           ;pin_manager.c: 78: TRISB = 0x00;
 33610  0194E2  0E00               	movlw	0
 33611  0194E4  6E82               	movwf	3970,c	;volatile
 33612                           
 33613                           ;pin_manager.c: 79: TRISH = 0x00;
 33614  0194E6  0E00               	movlw	0
 33615  0194E8  6E88               	movwf	3976,c	;volatile
 33616                           
 33617                           ;pin_manager.c: 80: TRISC = 0xC0;
 33618  0194EA  0EC0               	movlw	192
 33619  0194EC  6E83               	movwf	3971,c	;volatile
 33620                           
 33621                           ;pin_manager.c: 81: TRISD = 0x00;
 33622  0194EE  0E00               	movlw	0
 33623  0194F0  6E84               	movwf	3972,c	;volatile
 33624                           
 33625                           ;pin_manager.c: 86: ANSELD = 0x00;
 33626  0194F2  0E00               	movlw	0
 33627  0194F4  010E               	movlb	14	; () banked
 33628  0194F6  6FA7               	movwf	167,b	;volatile
 33629                           
 33630                           ;pin_manager.c: 87: ANSELB = 0x00;
 33631  0194F8  0E00               	movlw	0
 33632  0194FA  6F9A               	movwf	154,b	;volatile
 33633                           
 33634                           ;pin_manager.c: 88: ANSELE = 0x04;
 33635  0194FC  0E04               	movlw	4
 33636  0194FE  6FAF               	movwf	175,b	;volatile
 33637                           
 33638                           ;pin_manager.c: 89: ANSELG = 0x20;
 33639  019500  0E20               	movlw	32
 33640  019502  6FBC               	movwf	188,b	;volatile
 33641                           
 33642                           ;pin_manager.c: 90: ANSELF = 0x00;
 33643  019504  0E00               	movlw	0
 33644  019506  6FB4               	movwf	180,b	;volatile
 33645                           
 33646                           ;pin_manager.c: 91: ANSELA = 0x9D;
 33647  019508  0E9D               	movlw	157
 33648  01950A  6F92               	movwf	146,b	;volatile
 33649                           
 33650                           ;pin_manager.c: 96: WPUD = 0x00;
 33651  01950C  0E00               	movlw	0
 33652  01950E  6FA6               	movwf	166,b	;volatile
 33653                           
 33654                           ;pin_manager.c: 97: WPUF = 0x00;
 33655  019510  0E00               	movlw	0
 33656  019512  6FB3               	movwf	179,b	;volatile
 33657                           
 33658                           ;pin_manager.c: 98: WPUE = 0x00;
 33659  019514  0E00               	movlw	0
 33660  019516  6FAE               	movwf	174,b	;volatile
 33661                           
 33662                           ;pin_manager.c: 99: WPUB = 0x00;
 33663  019518  0E00               	movlw	0
 33664  01951A  6F99               	movwf	153,b	;volatile
 33665                           
 33666                           ;pin_manager.c: 100: WPUG = 0x00;
 33667  01951C  0E00               	movlw	0
 33668  01951E  6FBB               	movwf	187,b	;volatile
 33669                           
 33670                           ;pin_manager.c: 101: WPUA = 0x00;
 33671  019520  0E00               	movlw	0
 33672  019522  6F91               	movwf	145,b	;volatile
 33673                           
 33674                           ;pin_manager.c: 102: WPUC = 0x00;
 33675  019524  0E00               	movlw	0
 33676  019526  6FA1               	movwf	161,b	;volatile
 33677                           
 33678                           ;pin_manager.c: 103: WPUH = 0x00;
 33679  019528  0E00               	movlw	0
 33680  01952A  6FC0               	movwf	192,b	;volatile
 33681                           
 33682                           ;pin_manager.c: 108: ODCONE = 0x00;
 33683  01952C  0E00               	movlw	0
 33684  01952E  6FAD               	movwf	173,b	;volatile
 33685                           
 33686                           ;pin_manager.c: 109: ODCONF = 0x01;
 33687  019530  0E01               	movlw	1
 33688  019532  6FB2               	movwf	178,b	;volatile
 33689                           
 33690                           ;pin_manager.c: 110: ODCONA = 0x00;
 33691  019534  0E00               	movlw	0
 33692  019536  6F90               	movwf	144,b	;volatile
 33693                           
 33694                           ;pin_manager.c: 111: ODCONG = 0x00;
 33695  019538  0E00               	movlw	0
 33696  01953A  6FBA               	movwf	186,b	;volatile
 33697                           
 33698                           ;pin_manager.c: 112: ODCONB = 0x00;
 33699  01953C  0E00               	movlw	0
 33700  01953E  6F98               	movwf	152,b	;volatile
 33701                           
 33702                           ;pin_manager.c: 113: ODCONH = 0x00;
 33703  019540  0E00               	movlw	0
 33704  019542  6FBF               	movwf	191,b	;volatile
 33705                           
 33706                           ;pin_manager.c: 114: ODCONC = 0x00;
 33707  019544  0E00               	movlw	0
 33708  019546  6FA0               	movwf	160,b	;volatile
 33709                           
 33710                           ;pin_manager.c: 115: ODCOND = 0x00;
 33711  019548  0E00               	movlw	0
 33712  01954A  6FA5               	movwf	165,b	;volatile
 33713                           
 33714                           ; BSR set to: 14
 33715                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 33716  01954C  698F               	setf	143,b	;volatile
 33717                           
 33718                           ; BSR set to: 14
 33719                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 33720  01954E  6997               	setf	151,b	;volatile
 33721                           
 33722                           ; BSR set to: 14
 33723                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 33724  019550  699F               	setf	159,b	;volatile
 33725                           
 33726                           ; BSR set to: 14
 33727                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 33728  019552  69A4               	setf	164,b	;volatile
 33729                           
 33730                           ; BSR set to: 14
 33731                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 33732  019554  69AC               	setf	172,b	;volatile
 33733                           
 33734                           ; BSR set to: 14
 33735                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 33736  019556  69B1               	setf	177,b	;volatile
 33737                           
 33738                           ; BSR set to: 14
 33739                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 33740  019558  69B9               	setf	185,b	;volatile
 33741                           
 33742                           ; BSR set to: 14
 33743                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 33744  01955A  69BE               	setf	190,b	;volatile
 33745                           
 33746                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 33747  01955C  0E0E               	movlw	14
 33748  01955E  6F89               	movwf	137,b	;volatile
 33749                           
 33750                           ;pin_manager.c: 137: SSP1CLKPPS = 0x17;
 33751  019560  0E17               	movlw	23
 33752  019562  6F19               	movwf	25,b	;volatile
 33753                           
 33754                           ;pin_manager.c: 138: INT0PPS = 0x05;
 33755  019564  0E05               	movlw	5
 33756  019566  010D               	movlb	13	; () banked
 33757  019568  6FF0               	movwf	240,b	;volatile
 33758                           
 33759                           ;pin_manager.c: 139: RC6PPS = 0x1A;
 33760  01956A  0E1A               	movlw	26
 33761  01956C  010E               	movlb	14	; () banked
 33762  01956E  6F68               	movwf	104,b	;volatile
 33763                           
 33764                           ;pin_manager.c: 140: RX2PPS = 0x36;
 33765  019570  0E36               	movlw	54
 33766  019572  6F11               	movwf	17,b	;volatile
 33767                           
 33768                           ;pin_manager.c: 141: RC7PPS = 0x19;
 33769  019574  0E19               	movlw	25
 33770  019576  6F69               	movwf	105,b	;volatile
 33771                           
 33772                           ;pin_manager.c: 142: SSP1DATPPS = 0x16;
 33773  019578  0E16               	movlw	22
 33774  01957A  6F1A               	movwf	26,b	;volatile
 33775                           
 33776                           ; BSR set to: 14
 33777  01957C  0012               	return		;funcret
 33778  01957E                     __end_of_PIN_MANAGER_Initialize:
 33779                           	opt stack 0
 33780                           tosu	equ	0xFFF
 33781                           tosh	equ	0xFFE
 33782                           tosl	equ	0xFFD
 33783                           pclath	equ	0xFFA
 33784                           tblptru	equ	0xFF8
 33785                           tblptrh	equ	0xFF7
 33786                           tblptrl	equ	0xFF6
 33787                           tablat	equ	0xFF5
 33788                           prodh	equ	0xFF4
 33789                           prodl	equ	0xFF3
 33790                           intcon	equ	0xFF2
 33791                           indf0	equ	0xFEF
 33792                           postinc0	equ	0xFEE
 33793                           fsr0h	equ	0xFEA
 33794                           fsr0l	equ	0xFE9
 33795                           wreg	equ	0xFE8
 33796                           indf1	equ	0xFE7
 33797                           postdec1	equ	0xFE5
 33798                           plusw1	equ	0xFE3
 33799                           fsr1h	equ	0xFE2
 33800                           fsr1l	equ	0xFE1
 33801                           indf2	equ	0xFDF
 33802                           postinc2	equ	0xFDE
 33803                           postdec2	equ	0xFDD
 33804                           plusw2	equ	0xFDB
 33805                           fsr2h	equ	0xFDA
 33806                           fsr2l	equ	0xFD9
 33807                           status	equ	0xFD8
 33808                           
 33809 ;; *************** function _OSCILLATOR_Initialize *****************
 33810 ;; Defined at:
 33811 ;;		line 68 in file "mcc_generated_files/mcc.c"
 33812 ;; Parameters:    Size  Location     Type
 33813 ;;		None
 33814 ;; Auto vars:     Size  Location     Type
 33815 ;;		None
 33816 ;; Return value:  Size  Location     Type
 33817 ;;                  1    wreg      void 
 33818 ;; Registers used:
 33819 ;;		wreg, status,2
 33820 ;; Tracked objects:
 33821 ;;		On entry : 0/0
 33822 ;;		On exit  : 0/0
 33823 ;;		Unchanged: 0/0
 33824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33829 ;;Total ram usage:        0 bytes
 33830 ;; Hardware stack levels used:    1
 33831 ;; Hardware stack levels required when called:   13
 33832 ;; This function calls:
 33833 ;;		Nothing
 33834 ;; This function is called by:
 33835 ;;		_SYSTEM_Initialize
 33836 ;; This function uses a non-reentrant model
 33837 ;;
 33838                           
 33839                           	psect	text68
 33840  01AF82                     __ptext68:
 33841                           	opt stack 0
 33842  01AF82                     _OSCILLATOR_Initialize:
 33843                           	opt stack 16
 33844                           
 33845                           ;mcc.c: 71: OSCCON1 = 0x20;
 33846                           
 33847                           ; BSR set to: 14
 33848                           ;incstack = 0
 33849  01AF82  0E20               	movlw	32
 33850  01AF84  010E               	movlb	14	; () banked
 33851  01AF86  6F43               	movwf	67,b	;volatile
 33852                           
 33853                           ;mcc.c: 73: OSCCON3 = 0x00;
 33854  01AF88  0E00               	movlw	0
 33855  01AF8A  6F45               	movwf	69,b	;volatile
 33856                           
 33857                           ;mcc.c: 75: OSCEN = 0x00;
 33858  01AF8C  0E00               	movlw	0
 33859  01AF8E  6F47               	movwf	71,b	;volatile
 33860                           
 33861                           ;mcc.c: 77: OSCFRQ = 0x02;
 33862  01AF90  0E02               	movlw	2
 33863  01AF92  6F49               	movwf	73,b	;volatile
 33864                           
 33865                           ;mcc.c: 79: OSCTUNE = 0x00;
 33866  01AF94  0E00               	movlw	0
 33867  01AF96  6F48               	movwf	72,b	;volatile
 33868  01AF98                     
 33869                           ; BSR set to: 14
 33870                           
 33871                           ; BSR set to: 14
 33872                           ;mcc.c: 82: {
 33873  01AF98  B146               	btfsc	70,0,b	;volatile
 33874  01AF9A  0012               	return	
 33875  01AF9C  D7FD               	goto	l63
 33876  01AF9E                     __end_of_OSCILLATOR_Initialize:
 33877                           	opt stack 0
 33878                           tosu	equ	0xFFF
 33879                           tosh	equ	0xFFE
 33880                           tosl	equ	0xFFD
 33881                           pclath	equ	0xFFA
 33882                           tblptru	equ	0xFF8
 33883                           tblptrh	equ	0xFF7
 33884                           tblptrl	equ	0xFF6
 33885                           tablat	equ	0xFF5
 33886                           prodh	equ	0xFF4
 33887                           prodl	equ	0xFF3
 33888                           intcon	equ	0xFF2
 33889                           indf0	equ	0xFEF
 33890                           postinc0	equ	0xFEE
 33891                           fsr0h	equ	0xFEA
 33892                           fsr0l	equ	0xFE9
 33893                           wreg	equ	0xFE8
 33894                           indf1	equ	0xFE7
 33895                           postdec1	equ	0xFE5
 33896                           plusw1	equ	0xFE3
 33897                           fsr1h	equ	0xFE2
 33898                           fsr1l	equ	0xFE1
 33899                           indf2	equ	0xFDF
 33900                           postinc2	equ	0xFDE
 33901                           postdec2	equ	0xFDD
 33902                           plusw2	equ	0xFDB
 33903                           fsr2h	equ	0xFDA
 33904                           fsr2l	equ	0xFD9
 33905                           status	equ	0xFD8
 33906                           
 33907 ;; *************** function _INTERRUPT_Initialize *****************
 33908 ;; Defined at:
 33909 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 33910 ;; Parameters:    Size  Location     Type
 33911 ;;		None
 33912 ;; Auto vars:     Size  Location     Type
 33913 ;;		None
 33914 ;; Return value:  Size  Location     Type
 33915 ;;                  1    wreg      void 
 33916 ;; Registers used:
 33917 ;;		None
 33918 ;; Tracked objects:
 33919 ;;		On entry : 0/0
 33920 ;;		On exit  : 0/0
 33921 ;;		Unchanged: 0/0
 33922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33927 ;;Total ram usage:        0 bytes
 33928 ;; Hardware stack levels used:    1
 33929 ;; Hardware stack levels required when called:   13
 33930 ;; This function calls:
 33931 ;;		Nothing
 33932 ;; This function is called by:
 33933 ;;		_SYSTEM_Initialize
 33934 ;; This function uses a non-reentrant model
 33935 ;;
 33936                           
 33937                           	psect	text69
 33938  01AF9E                     __ptext69:
 33939                           	opt stack 0
 33940  01AF9E                     _INTERRUPT_Initialize:
 33941                           	opt stack 16
 33942                           
 33943                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 33944                           
 33945                           ; BSR set to: 14
 33946                           ;incstack = 0
 33947  01AF9E  8AF2               	bsf	intcon,5,c	;volatile
 33948                           
 33949                           ;interrupt_manager.c: 60: IPR3bits.BCL1IP = 1;
 33950  01AFA0  010E               	movlb	14	; () banked
 33951  01AFA2  8322               	bsf	34,1,b	;volatile
 33952                           
 33953                           ;interrupt_manager.c: 63: IPR3bits.SSP1IP = 1;
 33954  01AFA4  8122               	bsf	34,0,b	;volatile
 33955                           
 33956                           ;interrupt_manager.c: 66: IPR5bits.TMR4IP = 1;
 33957  01AFA6  8724               	bsf	36,3,b	;volatile
 33958                           
 33959                           ;interrupt_manager.c: 69: IPR2bits.HLVDIP = 1;
 33960  01AFA8  8F21               	bsf	33,7,b	;volatile
 33961                           
 33962                           ;interrupt_manager.c: 72: IPR0bits.INT0IP = 1;
 33963  01AFAA  811F               	bsf	31,0,b	;volatile
 33964                           
 33965                           ;interrupt_manager.c: 75: IPR3bits.RC2IP = 1;
 33966  01AFAC  8F22               	bsf	34,7,b	;volatile
 33967                           
 33968                           ;interrupt_manager.c: 78: IPR5bits.TMR5IP = 1;
 33969  01AFAE  8924               	bsf	36,4,b	;volatile
 33970                           
 33971                           ;interrupt_manager.c: 81: IPR1bits.ADTIP = 1;
 33972  01AFB0  8320               	bsf	32,1,b	;volatile
 33973                           
 33974                           ;interrupt_manager.c: 85: IPR5bits.TMR6IP = 0;
 33975  01AFB2  9B24               	bcf	36,5,b	;volatile
 33976                           
 33977                           ;interrupt_manager.c: 88: IPR3bits.TX2IP = 0;
 33978  01AFB4  9D22               	bcf	34,6,b	;volatile
 33979                           
 33980                           ;interrupt_manager.c: 91: IPR5bits.TMR7IP = 0;
 33981  01AFB6  9D24               	bcf	36,6,b	;volatile
 33982                           
 33983                           ; BSR set to: 14
 33984  01AFB8  0012               	return		;funcret
 33985  01AFBA                     __end_of_INTERRUPT_Initialize:
 33986                           	opt stack 0
 33987                           tosu	equ	0xFFF
 33988                           tosh	equ	0xFFE
 33989                           tosl	equ	0xFFD
 33990                           pclath	equ	0xFFA
 33991                           tblptru	equ	0xFF8
 33992                           tblptrh	equ	0xFF7
 33993                           tblptrl	equ	0xFF6
 33994                           tablat	equ	0xFF5
 33995                           prodh	equ	0xFF4
 33996                           prodl	equ	0xFF3
 33997                           intcon	equ	0xFF2
 33998                           indf0	equ	0xFEF
 33999                           postinc0	equ	0xFEE
 34000                           fsr0h	equ	0xFEA
 34001                           fsr0l	equ	0xFE9
 34002                           wreg	equ	0xFE8
 34003                           indf1	equ	0xFE7
 34004                           postdec1	equ	0xFE5
 34005                           plusw1	equ	0xFE3
 34006                           fsr1h	equ	0xFE2
 34007                           fsr1l	equ	0xFE1
 34008                           indf2	equ	0xFDF
 34009                           postinc2	equ	0xFDE
 34010                           postdec2	equ	0xFDD
 34011                           plusw2	equ	0xFDB
 34012                           fsr2h	equ	0xFDA
 34013                           fsr2l	equ	0xFD9
 34014                           status	equ	0xFD8
 34015                           
 34016 ;; *************** function _I2C1_Initialize *****************
 34017 ;; Defined at:
 34018 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 34019 ;; Parameters:    Size  Location     Type
 34020 ;;		None
 34021 ;; Auto vars:     Size  Location     Type
 34022 ;;		None
 34023 ;; Return value:  Size  Location     Type
 34024 ;;                  1    wreg      void 
 34025 ;; Registers used:
 34026 ;;		wreg, status,2, status,0
 34027 ;; Tracked objects:
 34028 ;;		On entry : 0/0
 34029 ;;		On exit  : 0/0
 34030 ;;		Unchanged: 0/0
 34031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34036 ;;Total ram usage:        0 bytes
 34037 ;; Hardware stack levels used:    1
 34038 ;; Hardware stack levels required when called:   13
 34039 ;; This function calls:
 34040 ;;		Nothing
 34041 ;; This function is called by:
 34042 ;;		_SYSTEM_Initialize
 34043 ;; This function uses a non-reentrant model
 34044 ;;
 34045                           
 34046                           	psect	text70
 34047  01AB7C                     __ptext70:
 34048                           	opt stack 0
 34049  01AB7C                     _I2C1_Initialize:
 34050                           	opt stack 16
 34051                           
 34052                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
 34053                           
 34054                           ; BSR set to: 14
 34055                           ;incstack = 0
 34056  01AB7C  0E85               	movlw	low _i2c1_tr_queue
 34057  01AB7E  0102               	movlb	2	; () banked
 34058  01AB80  6F02               	movwf	(_i2c1_object+2)& (0+255),b
 34059  01AB82  0E02               	movlw	high _i2c1_tr_queue
 34060  01AB84  6F03               	movwf	(_i2c1_object+3)& (0+255),b
 34061                           
 34062                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
 34063  01AB86  0E85               	movlw	low _i2c1_tr_queue
 34064  01AB88  6F00               	movwf	_i2c1_object& (0+255),b
 34065  01AB8A  0E02               	movlw	high _i2c1_tr_queue
 34066  01AB8C  6F01               	movwf	(_i2c1_object+1)& (0+255),b
 34067                           
 34068                           ; BSR set to: 2
 34069                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
 34070  01AB8E  8304               	bsf	(_i2c1_object+4)& (0+255),1,b
 34071                           
 34072                           ; BSR set to: 2
 34073                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
 34074  01AB90  9104               	bcf	(_i2c1_object+4)& (0+255),0,b
 34075                           
 34076                           ; BSR set to: 2
 34077                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
 34078  01AB92  0E00               	movlw	0
 34079  01AB94  6F06               	movwf	(_i2c1_object+6)& (0+255),b
 34080                           
 34081                           ; BSR set to: 2
 34082                           ;i2c1.c: 208: SSP1STAT = 0x00;
 34083  01AB96  0E00               	movlw	0
 34084  01AB98  6E94               	movwf	3988,c	;volatile
 34085                           
 34086                           ; BSR set to: 2
 34087                           ;i2c1.c: 210: SSP1CON1 = 0x28;
 34088  01AB9A  0E28               	movlw	40
 34089  01AB9C  6E95               	movwf	3989,c	;volatile
 34090                           
 34091                           ; BSR set to: 2
 34092                           ;i2c1.c: 212: SSP1CON3 = 0x00;
 34093  01AB9E  0E00               	movlw	0
 34094  01ABA0  6E97               	movwf	3991,c	;volatile
 34095                           
 34096                           ; BSR set to: 2
 34097                           ;i2c1.c: 214: SSP1ADD = 0x3F;
 34098  01ABA2  0E3F               	movlw	63
 34099  01ABA4  6E92               	movwf	3986,c	;volatile
 34100                           
 34101                           ; BSR set to: 2
 34102                           ;i2c1.c: 217: PIR3bits.SSP1IF = 0;
 34103  01ABA6  010E               	movlb	14	; () banked
 34104  01ABA8  9136               	bcf	54,0,b	;volatile
 34105                           
 34106                           ; BSR set to: 14
 34107                           ;i2c1.c: 218: PIR3bits.BCL1IF = 0;
 34108  01ABAA  9336               	bcf	54,1,b	;volatile
 34109                           
 34110                           ; BSR set to: 14
 34111                           ;i2c1.c: 221: PIE3bits.SSP1IE = 1;
 34112  01ABAC  812C               	bsf	44,0,b	;volatile
 34113                           
 34114                           ; BSR set to: 14
 34115                           ;i2c1.c: 222: PIE3bits.BCL1IE = 1;
 34116  01ABAE  832C               	bsf	44,1,b	;volatile
 34117                           
 34118                           ; BSR set to: 14
 34119  01ABB0  0012               	return		;funcret
 34120  01ABB2                     __end_of_I2C1_Initialize:
 34121                           	opt stack 0
 34122                           tosu	equ	0xFFF
 34123                           tosh	equ	0xFFE
 34124                           tosl	equ	0xFFD
 34125                           pclath	equ	0xFFA
 34126                           tblptru	equ	0xFF8
 34127                           tblptrh	equ	0xFF7
 34128                           tblptrl	equ	0xFF6
 34129                           tablat	equ	0xFF5
 34130                           prodh	equ	0xFF4
 34131                           prodl	equ	0xFF3
 34132                           intcon	equ	0xFF2
 34133                           indf0	equ	0xFEF
 34134                           postinc0	equ	0xFEE
 34135                           fsr0h	equ	0xFEA
 34136                           fsr0l	equ	0xFE9
 34137                           wreg	equ	0xFE8
 34138                           indf1	equ	0xFE7
 34139                           postdec1	equ	0xFE5
 34140                           plusw1	equ	0xFE3
 34141                           fsr1h	equ	0xFE2
 34142                           fsr1l	equ	0xFE1
 34143                           indf2	equ	0xFDF
 34144                           postinc2	equ	0xFDE
 34145                           postdec2	equ	0xFDD
 34146                           plusw2	equ	0xFDB
 34147                           fsr2h	equ	0xFDA
 34148                           fsr2l	equ	0xFD9
 34149                           status	equ	0xFD8
 34150                           
 34151 ;; *************** function _HLVD_Initialize *****************
 34152 ;; Defined at:
 34153 ;;		line 60 in file "mcc_generated_files/hlvd.c"
 34154 ;; Parameters:    Size  Location     Type
 34155 ;;		None
 34156 ;; Auto vars:     Size  Location     Type
 34157 ;;		None
 34158 ;; Return value:  Size  Location     Type
 34159 ;;                  1    wreg      void 
 34160 ;; Registers used:
 34161 ;;		wreg, status,2
 34162 ;; Tracked objects:
 34163 ;;		On entry : 0/0
 34164 ;;		On exit  : 0/0
 34165 ;;		Unchanged: 0/0
 34166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34171 ;;Total ram usage:        0 bytes
 34172 ;; Hardware stack levels used:    1
 34173 ;; Hardware stack levels required when called:   13
 34174 ;; This function calls:
 34175 ;;		Nothing
 34176 ;; This function is called by:
 34177 ;;		_SYSTEM_Initialize
 34178 ;; This function uses a non-reentrant model
 34179 ;;
 34180                           
 34181                           	psect	text71
 34182  01B0E4                     __ptext71:
 34183                           	opt stack 0
 34184  01B0E4                     _HLVD_Initialize:
 34185                           	opt stack 16
 34186                           
 34187                           ;hlvd.c: 64: HLVDCON1 = 0x07;
 34188                           
 34189                           ; BSR set to: 14
 34190                           ;incstack = 0
 34191  01B0E4  0E07               	movlw	7
 34192  01B0E6  010E               	movlb	14	; () banked
 34193  01B0E8  6FC3               	movwf	195,b	;volatile
 34194                           
 34195                           ;hlvd.c: 66: HLVDCON0 = 0x81;
 34196  01B0EA  0E81               	movlw	129
 34197  01B0EC  6FC2               	movwf	194,b	;volatile
 34198                           
 34199                           ; BSR set to: 14
 34200                           ;hlvd.c: 68: PIR2bits.HLVDIF = 0;
 34201  01B0EE  9F35               	bcf	53,7,b	;volatile
 34202                           
 34203                           ; BSR set to: 14
 34204                           ;hlvd.c: 70: PIE2bits.HLVDIE = 1;
 34205  01B0F0  8F2B               	bsf	43,7,b	;volatile
 34206                           
 34207                           ; BSR set to: 14
 34208  01B0F2  0012               	return		;funcret
 34209  01B0F4                     __end_of_HLVD_Initialize:
 34210                           	opt stack 0
 34211                           tosu	equ	0xFFF
 34212                           tosh	equ	0xFFE
 34213                           tosl	equ	0xFFD
 34214                           pclath	equ	0xFFA
 34215                           tblptru	equ	0xFF8
 34216                           tblptrh	equ	0xFF7
 34217                           tblptrl	equ	0xFF6
 34218                           tablat	equ	0xFF5
 34219                           prodh	equ	0xFF4
 34220                           prodl	equ	0xFF3
 34221                           intcon	equ	0xFF2
 34222                           indf0	equ	0xFEF
 34223                           postinc0	equ	0xFEE
 34224                           fsr0h	equ	0xFEA
 34225                           fsr0l	equ	0xFE9
 34226                           wreg	equ	0xFE8
 34227                           indf1	equ	0xFE7
 34228                           postdec1	equ	0xFE5
 34229                           plusw1	equ	0xFE3
 34230                           fsr1h	equ	0xFE2
 34231                           fsr1l	equ	0xFE1
 34232                           indf2	equ	0xFDF
 34233                           postinc2	equ	0xFDE
 34234                           postdec2	equ	0xFDD
 34235                           plusw2	equ	0xFDB
 34236                           fsr2h	equ	0xFDA
 34237                           fsr2l	equ	0xFD9
 34238                           status	equ	0xFD8
 34239                           
 34240 ;; *************** function _FVR_Initialize *****************
 34241 ;; Defined at:
 34242 ;;		line 58 in file "mcc_generated_files/fvr.c"
 34243 ;; Parameters:    Size  Location     Type
 34244 ;;		None
 34245 ;; Auto vars:     Size  Location     Type
 34246 ;;		None
 34247 ;; Return value:  Size  Location     Type
 34248 ;;                  1    wreg      void 
 34249 ;; Registers used:
 34250 ;;		wreg, status,2
 34251 ;; Tracked objects:
 34252 ;;		On entry : 0/0
 34253 ;;		On exit  : 0/0
 34254 ;;		Unchanged: 0/0
 34255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34260 ;;Total ram usage:        0 bytes
 34261 ;; Hardware stack levels used:    1
 34262 ;; Hardware stack levels required when called:   13
 34263 ;; This function calls:
 34264 ;;		Nothing
 34265 ;; This function is called by:
 34266 ;;		_SYSTEM_Initialize
 34267 ;; This function uses a non-reentrant model
 34268 ;;
 34269                           
 34270                           	psect	text72
 34271  01B1A8                     __ptext72:
 34272                           	opt stack 0
 34273  01B1A8                     _FVR_Initialize:
 34274                           	opt stack 16
 34275                           
 34276                           ;fvr.c: 61: FVRCON = 0xA6;
 34277                           
 34278                           ; BSR set to: 14
 34279                           ;incstack = 0
 34280  01B1A8  0EA6               	movlw	166
 34281  01B1AA  010E               	movlb	14	; () banked
 34282  01B1AC  6FC4               	movwf	196,b	;volatile
 34283                           
 34284                           ; BSR set to: 14
 34285  01B1AE  0012               	return		;funcret
 34286  01B1B0                     __end_of_FVR_Initialize:
 34287                           	opt stack 0
 34288                           tosu	equ	0xFFF
 34289                           tosh	equ	0xFFE
 34290                           tosl	equ	0xFFD
 34291                           pclath	equ	0xFFA
 34292                           tblptru	equ	0xFF8
 34293                           tblptrh	equ	0xFF7
 34294                           tblptrl	equ	0xFF6
 34295                           tablat	equ	0xFF5
 34296                           prodh	equ	0xFF4
 34297                           prodl	equ	0xFF3
 34298                           intcon	equ	0xFF2
 34299                           indf0	equ	0xFEF
 34300                           postinc0	equ	0xFEE
 34301                           fsr0h	equ	0xFEA
 34302                           fsr0l	equ	0xFE9
 34303                           wreg	equ	0xFE8
 34304                           indf1	equ	0xFE7
 34305                           postdec1	equ	0xFE5
 34306                           plusw1	equ	0xFE3
 34307                           fsr1h	equ	0xFE2
 34308                           fsr1l	equ	0xFE1
 34309                           indf2	equ	0xFDF
 34310                           postinc2	equ	0xFDE
 34311                           postdec2	equ	0xFDD
 34312                           plusw2	equ	0xFDB
 34313                           fsr2h	equ	0xFDA
 34314                           fsr2l	equ	0xFD9
 34315                           status	equ	0xFD8
 34316                           
 34317 ;; *************** function _EXT_INT_Initialize *****************
 34318 ;; Defined at:
 34319 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 34320 ;; Parameters:    Size  Location     Type
 34321 ;;		None
 34322 ;; Auto vars:     Size  Location     Type
 34323 ;;		None
 34324 ;; Return value:  Size  Location     Type
 34325 ;;                  1    wreg      void 
 34326 ;; Registers used:
 34327 ;;		wreg, status,2, status,0, cstack
 34328 ;; Tracked objects:
 34329 ;;		On entry : 0/0
 34330 ;;		On exit  : 0/0
 34331 ;;		Unchanged: 0/0
 34332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34337 ;;Total ram usage:        0 bytes
 34338 ;; Hardware stack levels used:    1
 34339 ;; Hardware stack levels required when called:   14
 34340 ;; This function calls:
 34341 ;;		_INT0_SetInterruptHandler
 34342 ;; This function is called by:
 34343 ;;		_SYSTEM_Initialize
 34344 ;; This function uses a non-reentrant model
 34345 ;;
 34346                           
 34347                           	psect	text73
 34348  01AF2A                     __ptext73:
 34349                           	opt stack 0
 34350  01AF2A                     _EXT_INT_Initialize:
 34351                           	opt stack 15
 34352                           
 34353                           ;ext_int.c: 64: (PIR0bits.INT0IF = 0);
 34354                           
 34355                           ; BSR set to: 14
 34356                           ;incstack = 0
 34357  01AF2A  010E               	movlb	14	; () banked
 34358  01AF2C  9133               	bcf	51,0,b	;volatile
 34359                           
 34360                           ;ext_int.c: 65: (INTCONbits.INT0EDG = 1);
 34361  01AF2E  80F2               	bsf	intcon,0,c	;volatile
 34362                           
 34363                           ; BSR set to: 14
 34364                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 34365  01AF30  0EEE               	movlw	low _INT0_DefaultInterruptHandler
 34366  01AF32  0101               	movlb	1	; () banked
 34367  01AF34  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 34368  01AF36  0EB1               	movlw	high _INT0_DefaultInterruptHandler
 34369  01AF38  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 34370  01AF3A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 34371  01AF3C  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 34372  01AF3E  EC96  F0D8         	call	_INT0_SetInterruptHandler	;wreg free
 34373                           
 34374                           ;ext_int.c: 68: (PIE0bits.INT0IE = 1);
 34375  01AF42  010E               	movlb	14	; () banked
 34376  01AF44  8129               	bsf	41,0,b	;volatile
 34377                           
 34378                           ; BSR set to: 14
 34379  01AF46  0012               	return		;funcret
 34380  01AF48                     __end_of_EXT_INT_Initialize:
 34381                           	opt stack 0
 34382                           tosu	equ	0xFFF
 34383                           tosh	equ	0xFFE
 34384                           tosl	equ	0xFFD
 34385                           pclath	equ	0xFFA
 34386                           tblptru	equ	0xFF8
 34387                           tblptrh	equ	0xFF7
 34388                           tblptrl	equ	0xFF6
 34389                           tablat	equ	0xFF5
 34390                           prodh	equ	0xFF4
 34391                           prodl	equ	0xFF3
 34392                           intcon	equ	0xFF2
 34393                           indf0	equ	0xFEF
 34394                           postinc0	equ	0xFEE
 34395                           fsr0h	equ	0xFEA
 34396                           fsr0l	equ	0xFE9
 34397                           wreg	equ	0xFE8
 34398                           indf1	equ	0xFE7
 34399                           postdec1	equ	0xFE5
 34400                           plusw1	equ	0xFE3
 34401                           fsr1h	equ	0xFE2
 34402                           fsr1l	equ	0xFE1
 34403                           indf2	equ	0xFDF
 34404                           postinc2	equ	0xFDE
 34405                           postdec2	equ	0xFDD
 34406                           plusw2	equ	0xFDB
 34407                           fsr2h	equ	0xFDA
 34408                           fsr2l	equ	0xFD9
 34409                           status	equ	0xFD8
 34410                           
 34411 ;; *************** function _INT0_SetInterruptHandler *****************
 34412 ;; Defined at:
 34413 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 34414 ;; Parameters:    Size  Location     Type
 34415 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 34416 ;;		 -> dimmingOffTimeCallback(1), INT0_DefaultInterruptHandler(1), 
 34417 ;; Auto vars:     Size  Location     Type
 34418 ;;		None
 34419 ;; Return value:  Size  Location     Type
 34420 ;;                  1    wreg      void 
 34421 ;; Registers used:
 34422 ;;		wreg, status,2, status,0
 34423 ;; Tracked objects:
 34424 ;;		On entry : 0/0
 34425 ;;		On exit  : 0/0
 34426 ;;		Unchanged: 0/0
 34427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34428 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34431 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34432 ;;Total ram usage:        3 bytes
 34433 ;; Hardware stack levels used:    1
 34434 ;; Hardware stack levels required when called:   13
 34435 ;; This function calls:
 34436 ;;		Nothing
 34437 ;; This function is called by:
 34438 ;;		_EXT_INT_Initialize
 34439 ;;		_main
 34440 ;; This function uses a non-reentrant model
 34441 ;;
 34442                           
 34443                           	psect	text74
 34444  01B12C                     __ptext74:
 34445                           	opt stack 0
 34446  01B12C                     _INT0_SetInterruptHandler:
 34447                           	opt stack 15
 34448                           
 34449                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
 34450                           
 34451                           ; BSR set to: 14
 34452                           ;incstack = 0
 34453  01B12C  C117  F23E         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 34454  01B130  C118  F23F         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 34455  01B134  C119  F240         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 34456  01B138  0012               	return		;funcret
 34457  01B13A                     __end_of_INT0_SetInterruptHandler:
 34458                           	opt stack 0
 34459                           tosu	equ	0xFFF
 34460                           tosh	equ	0xFFE
 34461                           tosl	equ	0xFFD
 34462                           pclath	equ	0xFFA
 34463                           tblptru	equ	0xFF8
 34464                           tblptrh	equ	0xFF7
 34465                           tblptrl	equ	0xFF6
 34466                           tablat	equ	0xFF5
 34467                           prodh	equ	0xFF4
 34468                           prodl	equ	0xFF3
 34469                           intcon	equ	0xFF2
 34470                           indf0	equ	0xFEF
 34471                           postinc0	equ	0xFEE
 34472                           fsr0h	equ	0xFEA
 34473                           fsr0l	equ	0xFE9
 34474                           wreg	equ	0xFE8
 34475                           indf1	equ	0xFE7
 34476                           postdec1	equ	0xFE5
 34477                           plusw1	equ	0xFE3
 34478                           fsr1h	equ	0xFE2
 34479                           fsr1l	equ	0xFE1
 34480                           indf2	equ	0xFDF
 34481                           postinc2	equ	0xFDE
 34482                           postdec2	equ	0xFDD
 34483                           plusw2	equ	0xFDB
 34484                           fsr2h	equ	0xFDA
 34485                           fsr2l	equ	0xFD9
 34486                           status	equ	0xFD8
 34487                           
 34488 ;; *************** function _EUSART2_Initialize *****************
 34489 ;; Defined at:
 34490 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 34491 ;; Parameters:    Size  Location     Type
 34492 ;;		None
 34493 ;; Auto vars:     Size  Location     Type
 34494 ;;		None
 34495 ;; Return value:  Size  Location     Type
 34496 ;;                  1    wreg      void 
 34497 ;; Registers used:
 34498 ;;		wreg, status,2, status,0, cstack
 34499 ;; Tracked objects:
 34500 ;;		On entry : 0/0
 34501 ;;		On exit  : 0/0
 34502 ;;		Unchanged: 0/0
 34503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34508 ;;Total ram usage:        0 bytes
 34509 ;; Hardware stack levels used:    1
 34510 ;; Hardware stack levels required when called:   14
 34511 ;; This function calls:
 34512 ;;		_EUSART2_SetRxInterruptHandler
 34513 ;;		_EUSART2_SetTxInterruptHandler
 34514 ;; This function is called by:
 34515 ;;		_SYSTEM_Initialize
 34516 ;; This function uses a non-reentrant model
 34517 ;;
 34518                           
 34519                           	psect	text75
 34520  01A03E                     __ptext75:
 34521                           	opt stack 0
 34522  01A03E                     _EUSART2_Initialize:
 34523                           	opt stack 15
 34524                           
 34525                           ;eusart2.c: 83: PIE3bits.RC2IE = 0;
 34526                           
 34527                           ;incstack = 0
 34528  01A03E  010E               	movlb	14	; () banked
 34529  01A040  9F2C               	bcf	44,7,b	;volatile
 34530                           
 34531                           ; BSR set to: 14
 34532                           ;eusart2.c: 84: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 34533  01A042  0EF2               	movlw	low _EUSART2_Receive_ISR
 34534  01A044  0101               	movlb	1	; () banked
 34535  01A046  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 34536  01A048  0E96               	movlw	high _EUSART2_Receive_ISR
 34537  01A04A  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 34538  01A04C  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 34539  01A04E  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 34540  01A050  ECA4  F0D8         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 34541                           
 34542                           ;eusart2.c: 85: PIE3bits.TX2IE = 0;
 34543  01A054  010E               	movlb	14	; () banked
 34544  01A056  9D2C               	bcf	44,6,b	;volatile
 34545                           
 34546                           ;eusart2.c: 86: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 34547  01A058  0EB2               	movlw	low _EUSART2_Transmit_ISR
 34548  01A05A  0101               	movlb	1	; () banked
 34549  01A05C  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 34550  01A05E  0EAB               	movlw	high _EUSART2_Transmit_ISR
 34551  01A060  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 34552  01A062  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 34553  01A064  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 34554  01A066  EC9D  F0D8         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 34555                           
 34556                           ;eusart2.c: 90: BAUD2CON = 0x08;
 34557  01A06A  0E08               	movlw	8
 34558  01A06C  010E               	movlb	14	; () banked
 34559  01A06E  6FF7               	movwf	247,b	;volatile
 34560                           
 34561                           ; BSR set to: 14
 34562                           ;eusart2.c: 93: RC2STA = 0x90;
 34563  01A070  0E90               	movlw	144
 34564  01A072  6FF5               	movwf	245,b	;volatile
 34565                           
 34566                           ; BSR set to: 14
 34567                           ;eusart2.c: 96: TX2STA = 0x24;
 34568  01A074  0E24               	movlw	36
 34569  01A076  6FF6               	movwf	246,b	;volatile
 34570                           
 34571                           ; BSR set to: 14
 34572                           ;eusart2.c: 99: SP2BRGL = 0x8A;
 34573  01A078  0E8A               	movlw	138
 34574  01A07A  6FF3               	movwf	243,b	;volatile
 34575                           
 34576                           ; BSR set to: 14
 34577                           ;eusart2.c: 102: SP2BRGH = 0x00;
 34578  01A07C  0E00               	movlw	0
 34579  01A07E  6FF4               	movwf	244,b	;volatile
 34580                           
 34581                           ; BSR set to: 14
 34582                           ;eusart2.c: 106: eusart2TxHead = 0;
 34583  01A080  0E00               	movlw	0
 34584  01A082  0101               	movlb	1	; () banked
 34585  01A084  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 34586                           
 34587                           ; BSR set to: 1
 34588                           ;eusart2.c: 107: eusart2TxTail = 0;
 34589  01A086  0E00               	movlw	0
 34590  01A088  6FE0               	movwf	_eusart2TxTail& (0+255),b	;volatile
 34591                           
 34592                           ; BSR set to: 1
 34593                           ;eusart2.c: 108: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 34594  01A08A  0E80               	movlw	128
 34595  01A08C  6FDF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 34596                           
 34597                           ; BSR set to: 1
 34598                           ;eusart2.c: 110: eusart2RxHead = 0;
 34599  01A08E  0E00               	movlw	0
 34600  01A090  0100               	movlb	0	; () banked
 34601  01A092  6FF4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 34602                           
 34603                           ; BSR set to: 0
 34604                           ;eusart2.c: 111: eusart2RxTail = 0;
 34605  01A094  0E00               	movlw	0
 34606  01A096  0101               	movlb	1	; () banked
 34607  01A098  6FDE               	movwf	_eusart2RxTail& (0+255),b	;volatile
 34608                           
 34609                           ; BSR set to: 1
 34610                           ;eusart2.c: 112: eusart2RxCount = 0;
 34611  01A09A  0E00               	movlw	0
 34612  01A09C  0102               	movlb	2	; () banked
 34613  01A09E  6F69               	movwf	_eusart2RxCount& (0+255),b	;volatile
 34614                           
 34615                           ; BSR set to: 2
 34616                           ;eusart2.c: 115: PIE3bits.RC2IE = 1;
 34617  01A0A0  010E               	movlb	14	; () banked
 34618  01A0A2  8F2C               	bsf	44,7,b	;volatile
 34619                           
 34620                           ; BSR set to: 14
 34621  01A0A4  0012               	return		;funcret
 34622  01A0A6                     __end_of_EUSART2_Initialize:
 34623                           	opt stack 0
 34624                           tosu	equ	0xFFF
 34625                           tosh	equ	0xFFE
 34626                           tosl	equ	0xFFD
 34627                           pclath	equ	0xFFA
 34628                           tblptru	equ	0xFF8
 34629                           tblptrh	equ	0xFF7
 34630                           tblptrl	equ	0xFF6
 34631                           tablat	equ	0xFF5
 34632                           prodh	equ	0xFF4
 34633                           prodl	equ	0xFF3
 34634                           intcon	equ	0xFF2
 34635                           indf0	equ	0xFEF
 34636                           postinc0	equ	0xFEE
 34637                           fsr0h	equ	0xFEA
 34638                           fsr0l	equ	0xFE9
 34639                           wreg	equ	0xFE8
 34640                           indf1	equ	0xFE7
 34641                           postdec1	equ	0xFE5
 34642                           plusw1	equ	0xFE3
 34643                           fsr1h	equ	0xFE2
 34644                           fsr1l	equ	0xFE1
 34645                           indf2	equ	0xFDF
 34646                           postinc2	equ	0xFDE
 34647                           postdec2	equ	0xFDD
 34648                           plusw2	equ	0xFDB
 34649                           fsr2h	equ	0xFDA
 34650                           fsr2l	equ	0xFD9
 34651                           status	equ	0xFD8
 34652                           
 34653 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 34654 ;; Defined at:
 34655 ;;		line 270 in file "mcc_generated_files/eusart2.c"
 34656 ;; Parameters:    Size  Location     Type
 34657 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 34658 ;;		 -> EUSART2_Transmit_ISR(1), 
 34659 ;; Auto vars:     Size  Location     Type
 34660 ;;		None
 34661 ;; Return value:  Size  Location     Type
 34662 ;;                  1    wreg      void 
 34663 ;; Registers used:
 34664 ;;		wreg, status,2, status,0
 34665 ;; Tracked objects:
 34666 ;;		On entry : 0/0
 34667 ;;		On exit  : 0/0
 34668 ;;		Unchanged: 0/0
 34669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34670 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34673 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34674 ;;Total ram usage:        3 bytes
 34675 ;; Hardware stack levels used:    1
 34676 ;; Hardware stack levels required when called:   13
 34677 ;; This function calls:
 34678 ;;		Nothing
 34679 ;; This function is called by:
 34680 ;;		_EUSART2_Initialize
 34681 ;; This function uses a non-reentrant model
 34682 ;;
 34683                           
 34684                           	psect	text76
 34685  01B13A                     __ptext76:
 34686                           	opt stack 0
 34687  01B13A                     _EUSART2_SetTxInterruptHandler:
 34688                           	opt stack 15
 34689                           
 34690                           ;eusart2.c: 271: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 34691                           
 34692                           ; BSR set to: 14
 34693                           ;incstack = 0
 34694  01B13A  C117  F250         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 34695  01B13E  C118  F251         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 34696  01B142  C119  F252         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 34697  01B146  0012               	return		;funcret
 34698  01B148                     __end_of_EUSART2_SetTxInterruptHandler:
 34699                           	opt stack 0
 34700                           tosu	equ	0xFFF
 34701                           tosh	equ	0xFFE
 34702                           tosl	equ	0xFFD
 34703                           pclath	equ	0xFFA
 34704                           tblptru	equ	0xFF8
 34705                           tblptrh	equ	0xFF7
 34706                           tblptrl	equ	0xFF6
 34707                           tablat	equ	0xFF5
 34708                           prodh	equ	0xFF4
 34709                           prodl	equ	0xFF3
 34710                           intcon	equ	0xFF2
 34711                           indf0	equ	0xFEF
 34712                           postinc0	equ	0xFEE
 34713                           fsr0h	equ	0xFEA
 34714                           fsr0l	equ	0xFE9
 34715                           wreg	equ	0xFE8
 34716                           indf1	equ	0xFE7
 34717                           postdec1	equ	0xFE5
 34718                           plusw1	equ	0xFE3
 34719                           fsr1h	equ	0xFE2
 34720                           fsr1l	equ	0xFE1
 34721                           indf2	equ	0xFDF
 34722                           postinc2	equ	0xFDE
 34723                           postdec2	equ	0xFDD
 34724                           plusw2	equ	0xFDB
 34725                           fsr2h	equ	0xFDA
 34726                           fsr2l	equ	0xFD9
 34727                           status	equ	0xFD8
 34728                           
 34729 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 34730 ;; Defined at:
 34731 ;;		line 274 in file "mcc_generated_files/eusart2.c"
 34732 ;; Parameters:    Size  Location     Type
 34733 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 34734 ;;		 -> EUSART2_Receive_ISR(1), 
 34735 ;; Auto vars:     Size  Location     Type
 34736 ;;		None
 34737 ;; Return value:  Size  Location     Type
 34738 ;;                  1    wreg      void 
 34739 ;; Registers used:
 34740 ;;		wreg, status,2, status,0
 34741 ;; Tracked objects:
 34742 ;;		On entry : 0/0
 34743 ;;		On exit  : 0/0
 34744 ;;		Unchanged: 0/0
 34745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34746 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34749 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34750 ;;Total ram usage:        3 bytes
 34751 ;; Hardware stack levels used:    1
 34752 ;; Hardware stack levels required when called:   13
 34753 ;; This function calls:
 34754 ;;		Nothing
 34755 ;; This function is called by:
 34756 ;;		_EUSART2_Initialize
 34757 ;; This function uses a non-reentrant model
 34758 ;;
 34759                           
 34760                           	psect	text77
 34761  01B148                     __ptext77:
 34762                           	opt stack 0
 34763  01B148                     _EUSART2_SetRxInterruptHandler:
 34764                           	opt stack 15
 34765                           
 34766                           ;eusart2.c: 275: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 34767                           
 34768                           ;incstack = 0
 34769  01B148  C117  F24D         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 34770  01B14C  C118  F24E         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 34771  01B150  C119  F24F         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 34772  01B154  0012               	return		;funcret
 34773  01B156                     __end_of_EUSART2_SetRxInterruptHandler:
 34774                           	opt stack 0
 34775                           tosu	equ	0xFFF
 34776                           tosh	equ	0xFFE
 34777                           tosl	equ	0xFFD
 34778                           pclath	equ	0xFFA
 34779                           tblptru	equ	0xFF8
 34780                           tblptrh	equ	0xFF7
 34781                           tblptrl	equ	0xFF6
 34782                           tablat	equ	0xFF5
 34783                           prodh	equ	0xFF4
 34784                           prodl	equ	0xFF3
 34785                           intcon	equ	0xFF2
 34786                           indf0	equ	0xFEF
 34787                           postinc0	equ	0xFEE
 34788                           fsr0h	equ	0xFEA
 34789                           fsr0l	equ	0xFE9
 34790                           wreg	equ	0xFE8
 34791                           indf1	equ	0xFE7
 34792                           postdec1	equ	0xFE5
 34793                           plusw1	equ	0xFE3
 34794                           fsr1h	equ	0xFE2
 34795                           fsr1l	equ	0xFE1
 34796                           indf2	equ	0xFDF
 34797                           postinc2	equ	0xFDE
 34798                           postdec2	equ	0xFDD
 34799                           plusw2	equ	0xFDB
 34800                           fsr2h	equ	0xFDA
 34801                           fsr2l	equ	0xFD9
 34802                           status	equ	0xFD8
 34803                           
 34804 ;; *************** function _ADCC_Initialize *****************
 34805 ;; Defined at:
 34806 ;;		line 63 in file "mcc_generated_files/adcc.c"
 34807 ;; Parameters:    Size  Location     Type
 34808 ;;		None
 34809 ;; Auto vars:     Size  Location     Type
 34810 ;;		None
 34811 ;; Return value:  Size  Location     Type
 34812 ;;                  1    wreg      void 
 34813 ;; Registers used:
 34814 ;;		wreg, status,2, status,0, cstack
 34815 ;; Tracked objects:
 34816 ;;		On entry : 0/0
 34817 ;;		On exit  : 0/0
 34818 ;;		Unchanged: 0/0
 34819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34824 ;;Total ram usage:        0 bytes
 34825 ;; Hardware stack levels used:    1
 34826 ;; Hardware stack levels required when called:   14
 34827 ;; This function calls:
 34828 ;;		_ADCC_SetADTIInterruptHandler
 34829 ;; This function is called by:
 34830 ;;		_SYSTEM_Initialize
 34831 ;; This function uses a non-reentrant model
 34832 ;;
 34833                           
 34834                           	psect	text78
 34835  01A1D4                     __ptext78:
 34836                           	opt stack 0
 34837  01A1D4                     _ADCC_Initialize:
 34838                           	opt stack 15
 34839                           
 34840                           ;adcc.c: 67: ADLTHL = 0x00;
 34841                           
 34842                           ;incstack = 0
 34843  01A1D4  0E00               	movlw	0
 34844  01A1D6  6E6A               	movwf	3946,c	;volatile
 34845                           
 34846                           ;adcc.c: 69: ADLTHH = 0x00;
 34847  01A1D8  0E00               	movlw	0
 34848  01A1DA  6E6B               	movwf	3947,c	;volatile
 34849                           
 34850                           ;adcc.c: 71: ADUTHL = 0x00;
 34851  01A1DC  0E00               	movlw	0
 34852  01A1DE  6E6C               	movwf	3948,c	;volatile
 34853                           
 34854                           ;adcc.c: 73: ADUTHH = 0x00;
 34855  01A1E0  0E00               	movlw	0
 34856  01A1E2  6E6D               	movwf	3949,c	;volatile
 34857                           
 34858                           ;adcc.c: 75: ADSTPTL = 0x00;
 34859  01A1E4  0E00               	movlw	0
 34860  01A1E6  6E68               	movwf	3944,c	;volatile
 34861                           
 34862                           ;adcc.c: 77: ADSTPTH = 0x00;
 34863  01A1E8  0E00               	movlw	0
 34864  01A1EA  6E69               	movwf	3945,c	;volatile
 34865                           
 34866                           ;adcc.c: 79: ADRPT = 0xFF;
 34867  01A1EC  6866               	setf	3942,c	;volatile
 34868                           
 34869                           ;adcc.c: 81: ADPCH = 0x00;
 34870  01A1EE  0E00               	movlw	0
 34871  01A1F0  010F               	movlb	15	; () banked
 34872  01A1F2  6F5F               	movwf	95,b	;volatile
 34873                           
 34874                           ;adcc.c: 83: ADCAP = 0x00;
 34875  01A1F4  0E00               	movlw	0
 34876  01A1F6  6F5D               	movwf	93,b	;volatile
 34877                           
 34878                           ;adcc.c: 85: ADCON1 = 0x00;
 34879  01A1F8  0E00               	movlw	0
 34880  01A1FA  6F59               	movwf	89,b	;volatile
 34881                           
 34882                           ;adcc.c: 87: ADCON2 = 0x04;
 34883  01A1FC  0E04               	movlw	4
 34884  01A1FE  6F5A               	movwf	90,b	;volatile
 34885                           
 34886                           ;adcc.c: 89: ADCON3 = 0x5F;
 34887  01A200  0E5F               	movlw	95
 34888  01A202  6F5B               	movwf	91,b	;volatile
 34889                           
 34890                           ;adcc.c: 91: ADSTAT = 0x00;
 34891  01A204  0E00               	movlw	0
 34892  01A206  6E65               	movwf	3941,c	;volatile
 34893                           
 34894                           ;adcc.c: 93: ADREF = 0x12;
 34895  01A208  0E12               	movlw	18
 34896  01A20A  6F58               	movwf	88,b	;volatile
 34897                           
 34898                           ;adcc.c: 95: ADACT = 0x00;
 34899  01A20C  0E00               	movlw	0
 34900  01A20E  6F56               	movwf	86,b	;volatile
 34901                           
 34902                           ;adcc.c: 97: ADCLK = 0x1F;
 34903  01A210  0E1F               	movlw	31
 34904  01A212  6F57               	movwf	87,b	;volatile
 34905                           
 34906                           ;adcc.c: 99: ADCON0 = 0xC4;
 34907  01A214  0EC4               	movlw	196
 34908  01A216  6E60               	movwf	3936,c	;volatile
 34909                           
 34910                           ; BSR set to: 15
 34911                           ;adcc.c: 101: ADACQ = 0xFF;
 34912  01A218  695C               	setf	92,b	;volatile
 34913                           
 34914                           ; BSR set to: 15
 34915                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 34916  01A21A  010E               	movlb	14	; () banked
 34917  01A21C  9334               	bcf	52,1,b	;volatile
 34918                           
 34919                           ; BSR set to: 14
 34920                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 34921  01A21E  832A               	bsf	42,1,b	;volatile
 34922                           
 34923                           ; BSR set to: 14
 34924                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 34925  01A220  0EF0               	movlw	low _ADCC_DefaultInterruptHandler
 34926  01A222  0101               	movlb	1	; () banked
 34927  01A224  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 34928  01A226  0EB1               	movlw	high _ADCC_DefaultInterruptHandler
 34929  01A228  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 34930  01A22A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 34931  01A22C  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 34932  01A22E  ECAB  F0D8         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 34933  01A232  0012               	return		;funcret
 34934  01A234                     __end_of_ADCC_Initialize:
 34935                           	opt stack 0
 34936                           tosu	equ	0xFFF
 34937                           tosh	equ	0xFFE
 34938                           tosl	equ	0xFFD
 34939                           pclath	equ	0xFFA
 34940                           tblptru	equ	0xFF8
 34941                           tblptrh	equ	0xFF7
 34942                           tblptrl	equ	0xFF6
 34943                           tablat	equ	0xFF5
 34944                           prodh	equ	0xFF4
 34945                           prodl	equ	0xFF3
 34946                           intcon	equ	0xFF2
 34947                           indf0	equ	0xFEF
 34948                           postinc0	equ	0xFEE
 34949                           fsr0h	equ	0xFEA
 34950                           fsr0l	equ	0xFE9
 34951                           wreg	equ	0xFE8
 34952                           indf1	equ	0xFE7
 34953                           postdec1	equ	0xFE5
 34954                           plusw1	equ	0xFE3
 34955                           fsr1h	equ	0xFE2
 34956                           fsr1l	equ	0xFE1
 34957                           indf2	equ	0xFDF
 34958                           postinc2	equ	0xFDE
 34959                           postdec2	equ	0xFDD
 34960                           plusw2	equ	0xFDB
 34961                           fsr2h	equ	0xFDA
 34962                           fsr2l	equ	0xFD9
 34963                           status	equ	0xFD8
 34964                           
 34965 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 34966 ;; Defined at:
 34967 ;;		line 307 in file "mcc_generated_files/adcc.c"
 34968 ;; Parameters:    Size  Location     Type
 34969 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 34970 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 34971 ;; Auto vars:     Size  Location     Type
 34972 ;;		None
 34973 ;; Return value:  Size  Location     Type
 34974 ;;                  1    wreg      void 
 34975 ;; Registers used:
 34976 ;;		wreg, status,2, status,0
 34977 ;; Tracked objects:
 34978 ;;		On entry : 0/0
 34979 ;;		On exit  : 0/0
 34980 ;;		Unchanged: 0/0
 34981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34982 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34985 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34986 ;;Total ram usage:        3 bytes
 34987 ;; Hardware stack levels used:    1
 34988 ;; Hardware stack levels required when called:   13
 34989 ;; This function calls:
 34990 ;;		Nothing
 34991 ;; This function is called by:
 34992 ;;		_ADCC_Initialize
 34993 ;;		_main
 34994 ;; This function uses a non-reentrant model
 34995 ;;
 34996                           
 34997                           	psect	text79
 34998  01B156                     __ptext79:
 34999                           	opt stack 0
 35000  01B156                     _ADCC_SetADTIInterruptHandler:
 35001                           	opt stack 15
 35002                           
 35003                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 35004                           
 35005                           ;incstack = 0
 35006  01B156  C117  F247         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 35007  01B15A  C118  F248         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 35008  01B15E  C119  F249         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 35009  01B162  0012               	return		;funcret
 35010  01B164                     __end_of_ADCC_SetADTIInterruptHandler:
 35011                           	opt stack 0
 35012                           tosu	equ	0xFFF
 35013                           tosh	equ	0xFFE
 35014                           tosl	equ	0xFFD
 35015                           pclath	equ	0xFFA
 35016                           tblptru	equ	0xFF8
 35017                           tblptrh	equ	0xFF7
 35018                           tblptrl	equ	0xFF6
 35019                           tablat	equ	0xFF5
 35020                           prodh	equ	0xFF4
 35021                           prodl	equ	0xFF3
 35022                           intcon	equ	0xFF2
 35023                           indf0	equ	0xFEF
 35024                           postinc0	equ	0xFEE
 35025                           fsr0h	equ	0xFEA
 35026                           fsr0l	equ	0xFE9
 35027                           wreg	equ	0xFE8
 35028                           indf1	equ	0xFE7
 35029                           postdec1	equ	0xFE5
 35030                           plusw1	equ	0xFE3
 35031                           fsr1h	equ	0xFE2
 35032                           fsr1l	equ	0xFE1
 35033                           indf2	equ	0xFDF
 35034                           postinc2	equ	0xFDE
 35035                           postdec2	equ	0xFDD
 35036                           plusw2	equ	0xFDB
 35037                           fsr2h	equ	0xFDA
 35038                           fsr2l	equ	0xFD9
 35039                           status	equ	0xFD8
 35040                           
 35041 ;; *************** function _OLED_YX *****************
 35042 ;; Defined at:
 35043 ;;		line 240 in file "oled.c"
 35044 ;; Parameters:    Size  Location     Type
 35045 ;;  Row             1    wreg     unsigned char 
 35046 ;;  Column          1   45[BANK1 ] unsigned char 
 35047 ;; Auto vars:     Size  Location     Type
 35048 ;;  Row             1   47[BANK1 ] unsigned char 
 35049 ;; Return value:  Size  Location     Type
 35050 ;;                  1    wreg      void 
 35051 ;; Registers used:
 35052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35053 ;; Tracked objects:
 35054 ;;		On entry : 0/0
 35055 ;;		On exit  : 0/0
 35056 ;;		Unchanged: 0/0
 35057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35058 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35059 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35060 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35061 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35062 ;;Total ram usage:        3 bytes
 35063 ;; Hardware stack levels used:    1
 35064 ;; Hardware stack levels required when called:   17
 35065 ;; This function calls:
 35066 ;;		_OLED_Command
 35067 ;; This function is called by:
 35068 ;;		_main
 35069 ;; This function uses a non-reentrant model
 35070 ;;
 35071                           
 35072                           	psect	text80
 35073  01A9AE                     __ptext80:
 35074                           	opt stack 0
 35075  01A9AE                     _OLED_YX:
 35076                           	opt stack 13
 35077                           
 35078                           ;incstack = 0
 35079                           ;OLED_YX@Row stored from wreg
 35080  01A9AE  0101               	movlb	1	; () banked
 35081  01A9B0  6F2F               	movwf	OLED_YX@Row& (0+255),b
 35082                           
 35083                           ;oled.c: 242: OLED_Command(0xB0 + Row);
 35084  01A9B2  0101               	movlb	1	; () banked
 35085  01A9B4  512F               	movf	OLED_YX@Row& (0+255),w,b
 35086  01A9B6  0FB0               	addlw	176
 35087  01A9B8  EC53  F0D0         	call	_OLED_Command
 35088                           
 35089                           ;oled.c: 244: OLED_Command(0x00 + (8 * Column & 0x0F));
 35090  01A9BC  0101               	movlb	1	; () banked
 35091  01A9BE  512D               	movf	OLED_YX@Column& (0+255),w,b
 35092  01A9C0  0D08               	mullw	8
 35093  01A9C2  50F3               	movf	prodl,w,c
 35094  01A9C4  0B0F               	andlw	15
 35095  01A9C6  EC53  F0D0         	call	_OLED_Command
 35096                           
 35097                           ;oled.c: 246: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 35098  01A9CA  0101               	movlb	1	; () banked
 35099  01A9CC  512D               	movf	OLED_YX@Column& (0+255),w,b
 35100  01A9CE  0D08               	mullw	8
 35101  01A9D0  0E04               	movlw	4
 35102  01A9D2  6F2E               	movwf	??_OLED_YX& (0+255),b
 35103  01A9D4                     u23205:
 35104  01A9D4  34F4               	rlcf	prodh,w,c
 35105  01A9D6  32F4               	rrcf	prodh,f,c
 35106  01A9D8  32F3               	rrcf	prodl,f,c
 35107  01A9DA  2F2E               	decfsz	??_OLED_YX& (0+255),f,b
 35108  01A9DC  D7FB               	goto	u23205
 35109  01A9DE  50F3               	movf	prodl,w,c
 35110  01A9E0  0B0F               	andlw	15
 35111  01A9E2  0F10               	addlw	16
 35112  01A9E4  EC53  F0D0         	call	_OLED_Command
 35113  01A9E8  0012               	return		;funcret
 35114  01A9EA                     __end_of_OLED_YX:
 35115                           	opt stack 0
 35116                           tosu	equ	0xFFF
 35117                           tosh	equ	0xFFE
 35118                           tosl	equ	0xFFD
 35119                           pclath	equ	0xFFA
 35120                           tblptru	equ	0xFF8
 35121                           tblptrh	equ	0xFF7
 35122                           tblptrl	equ	0xFF6
 35123                           tablat	equ	0xFF5
 35124                           prodh	equ	0xFF4
 35125                           prodl	equ	0xFF3
 35126                           intcon	equ	0xFF2
 35127                           indf0	equ	0xFEF
 35128                           postinc0	equ	0xFEE
 35129                           fsr0h	equ	0xFEA
 35130                           fsr0l	equ	0xFE9
 35131                           wreg	equ	0xFE8
 35132                           indf1	equ	0xFE7
 35133                           postdec1	equ	0xFE5
 35134                           plusw1	equ	0xFE3
 35135                           fsr1h	equ	0xFE2
 35136                           fsr1l	equ	0xFE1
 35137                           indf2	equ	0xFDF
 35138                           postinc2	equ	0xFDE
 35139                           postdec2	equ	0xFDD
 35140                           plusw2	equ	0xFDB
 35141                           fsr2h	equ	0xFDA
 35142                           fsr2l	equ	0xFD9
 35143                           status	equ	0xFD8
 35144                           
 35145 ;; *************** function _OLED_Write_String *****************
 35146 ;; Defined at:
 35147 ;;		line 312 in file "oled.c"
 35148 ;; Parameters:    Size  Location     Type
 35149 ;;  s               2   58[BANK1 ] PTR unsigned char 
 35150 ;;		 -> ftoa@buf(17), STR_187(1), STR_186(1), OLED_Write_Integer@s(20), 
 35151 ;;		 -> STR_5(12), STR_4(13), STR_3(10), STR_2(15), 
 35152 ;; Auto vars:     Size  Location     Type
 35153 ;;		None
 35154 ;; Return value:  Size  Location     Type
 35155 ;;                  1    wreg      void 
 35156 ;; Registers used:
 35157 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35158 ;; Tracked objects:
 35159 ;;		On entry : 0/0
 35160 ;;		On exit  : 0/0
 35161 ;;		Unchanged: 0/0
 35162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35163 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35166 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35167 ;;Total ram usage:        2 bytes
 35168 ;; Hardware stack levels used:    1
 35169 ;; Hardware stack levels required when called:   17
 35170 ;; This function calls:
 35171 ;;		_OLED_PutChar
 35172 ;; This function is called by:
 35173 ;;		_main
 35174 ;;		_OLED_Write_Integer
 35175 ;;		_OLED_Write_Float
 35176 ;; This function uses a non-reentrant model
 35177 ;;
 35178                           
 35179                           	psect	text81
 35180  01A28C                     __ptext81:
 35181                           	opt stack 0
 35182  01A28C                     _OLED_Write_String:
 35183                           	opt stack 13
 35184                           
 35185                           ;oled.c: 314: while(*s) {
 35186                           
 35187                           ;incstack = 0
 35188  01A28C  D016               	goto	l1863
 35189  01A28E                     
 35190                           ;oled.c: 316: OLED_PutChar(*s++);
 35191  01A28E  C13A  FFF6         	movff	OLED_Write_String@s,tblptrl
 35192  01A292  C13B  FFF7         	movff	OLED_Write_String@s+1,tblptrh
 35193  01A296  0E00               	movlw	low (__mediumconst shr (0+16))
 35194  01A298  6EF8               	movwf	tblptru,c
 35195  01A29A  0E0D               	movlw	(high __ramtop+-1)
 35196  01A29C  64F7               	cpfsgt	tblptrh,c
 35197  01A29E  D003               	bra	u23217
 35198  01A2A0  0008               	tblrd		*
 35199  01A2A2  50F5               	movf	tablat,w,c
 35200  01A2A4  D005               	bra	u23210
 35201  01A2A6                     u23217:
 35202  01A2A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 35203  01A2AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 35204  01A2AE  50EF               	movf	indf0,w,c
 35205  01A2B0                     u23210:
 35206  01A2B0  ECBF  F0CA         	call	_OLED_PutChar
 35207  01A2B4  0101               	movlb	1	; () banked
 35208  01A2B6  4B3A               	infsnz	OLED_Write_String@s& (0+255),f,b
 35209  01A2B8  2B3B               	incf	(OLED_Write_String@s+1)& (0+255),f,b
 35210  01A2BA                     l1863:
 35211                           
 35212                           ; BSR set to: 1
 35213  01A2BA  C13A  FFF6         	movff	OLED_Write_String@s,tblptrl
 35214  01A2BE  C13B  FFF7         	movff	OLED_Write_String@s+1,tblptrh
 35215  01A2C2  0E00               	movlw	low (__mediumconst shr (0+16))
 35216  01A2C4  6EF8               	movwf	tblptru,c
 35217  01A2C6  0E0D               	movlw	(high __ramtop+-1)
 35218  01A2C8  64F7               	cpfsgt	tblptrh,c
 35219  01A2CA  D003               	bra	u23227
 35220  01A2CC  0008               	tblrd		*
 35221  01A2CE  50F5               	movf	tablat,w,c
 35222  01A2D0  D005               	bra	u23220
 35223  01A2D2                     u23227:
 35224  01A2D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 35225  01A2D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 35226  01A2DA  50EF               	movf	indf0,w,c
 35227  01A2DC                     u23220:
 35228  01A2DC  0900               	iorlw	0
 35229  01A2DE  B4D8               	btfsc	status,2,c
 35230  01A2E0  0012               	return	
 35231  01A2E2  D7D5               	goto	l1864
 35232  01A2E4                     __end_of_OLED_Write_String:
 35233                           	opt stack 0
 35234                           tosu	equ	0xFFF
 35235                           tosh	equ	0xFFE
 35236                           tosl	equ	0xFFD
 35237                           pclath	equ	0xFFA
 35238                           tblptru	equ	0xFF8
 35239                           tblptrh	equ	0xFF7
 35240                           tblptrl	equ	0xFF6
 35241                           tablat	equ	0xFF5
 35242                           prodh	equ	0xFF4
 35243                           prodl	equ	0xFF3
 35244                           intcon	equ	0xFF2
 35245                           indf0	equ	0xFEF
 35246                           postinc0	equ	0xFEE
 35247                           fsr0h	equ	0xFEA
 35248                           fsr0l	equ	0xFE9
 35249                           wreg	equ	0xFE8
 35250                           indf1	equ	0xFE7
 35251                           postdec1	equ	0xFE5
 35252                           plusw1	equ	0xFE3
 35253                           fsr1h	equ	0xFE2
 35254                           fsr1l	equ	0xFE1
 35255                           indf2	equ	0xFDF
 35256                           postinc2	equ	0xFDE
 35257                           postdec2	equ	0xFDD
 35258                           plusw2	equ	0xFDB
 35259                           fsr2h	equ	0xFDA
 35260                           fsr2l	equ	0xFD9
 35261                           status	equ	0xFD8
 35262                           
 35263 ;; *************** function _OLED_Init *****************
 35264 ;; Defined at:
 35265 ;;		line 182 in file "oled.c"
 35266 ;; Parameters:    Size  Location     Type
 35267 ;;		None
 35268 ;; Auto vars:     Size  Location     Type
 35269 ;;		None
 35270 ;; Return value:  Size  Location     Type
 35271 ;;                  1    wreg      void 
 35272 ;; Registers used:
 35273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35274 ;; Tracked objects:
 35275 ;;		On entry : 0/0
 35276 ;;		On exit  : 0/0
 35277 ;;		Unchanged: 0/0
 35278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35283 ;;Total ram usage:        0 bytes
 35284 ;; Hardware stack levels used:    1
 35285 ;; Hardware stack levels required when called:   17
 35286 ;; This function calls:
 35287 ;;		_OLED_Command
 35288 ;; This function is called by:
 35289 ;;		_main
 35290 ;; This function uses a non-reentrant model
 35291 ;;
 35292                           
 35293                           	psect	text82
 35294  0198E0                     __ptext82:
 35295                           	opt stack 0
 35296  0198E0                     _OLED_Init:
 35297                           	opt stack 13
 35298                           
 35299                           ;oled.c: 184: OLED_Command(0xAE);
 35300                           
 35301                           ;incstack = 0
 35302  0198E0  0EAE               	movlw	174
 35303  0198E2  EC53  F0D0         	call	_OLED_Command
 35304                           
 35305                           ;oled.c: 186: OLED_Command(0xD5);
 35306  0198E6  0ED5               	movlw	213
 35307  0198E8  EC53  F0D0         	call	_OLED_Command
 35308                           
 35309                           ;oled.c: 188: OLED_Command(0x80);
 35310  0198EC  0E80               	movlw	128
 35311  0198EE  EC53  F0D0         	call	_OLED_Command
 35312                           
 35313                           ;oled.c: 190: OLED_Command(0xA8);
 35314  0198F2  0EA8               	movlw	168
 35315  0198F4  EC53  F0D0         	call	_OLED_Command
 35316                           
 35317                           ;oled.c: 192: OLED_Command(0x1F);
 35318  0198F8  0E1F               	movlw	31
 35319  0198FA  EC53  F0D0         	call	_OLED_Command
 35320                           
 35321                           ;oled.c: 194: OLED_Command(0xD3);
 35322  0198FE  0ED3               	movlw	211
 35323  019900  EC53  F0D0         	call	_OLED_Command
 35324                           
 35325                           ;oled.c: 196: OLED_Command(0x0);
 35326  019904  0E00               	movlw	0
 35327  019906  EC53  F0D0         	call	_OLED_Command
 35328                           
 35329                           ;oled.c: 198: OLED_Command(0x40 | 0x0);
 35330  01990A  0E40               	movlw	64
 35331  01990C  EC53  F0D0         	call	_OLED_Command
 35332                           
 35333                           ;oled.c: 200: OLED_Command(0x8D);
 35334  019910  0E8D               	movlw	141
 35335  019912  EC53  F0D0         	call	_OLED_Command
 35336                           
 35337                           ;oled.c: 202: OLED_Command(0xAF);
 35338  019916  0EAF               	movlw	175
 35339  019918  EC53  F0D0         	call	_OLED_Command
 35340                           
 35341                           ;oled.c: 204: OLED_Command(0x20);
 35342  01991C  0E20               	movlw	32
 35343  01991E  EC53  F0D0         	call	_OLED_Command
 35344                           
 35345                           ;oled.c: 206: OLED_Command(0x00);
 35346  019922  0E00               	movlw	0
 35347  019924  EC53  F0D0         	call	_OLED_Command
 35348                           
 35349                           ;oled.c: 208: OLED_Command(0xA0 | 0x1);
 35350  019928  0EA1               	movlw	161
 35351  01992A  EC53  F0D0         	call	_OLED_Command
 35352                           
 35353                           ;oled.c: 210: OLED_Command(0xC8);
 35354  01992E  0EC8               	movlw	200
 35355  019930  EC53  F0D0         	call	_OLED_Command
 35356                           
 35357                           ;oled.c: 212: OLED_Command(0xDA);
 35358  019934  0EDA               	movlw	218
 35359  019936  EC53  F0D0         	call	_OLED_Command
 35360                           
 35361                           ;oled.c: 214: OLED_Command(0x02);
 35362  01993A  0E02               	movlw	2
 35363  01993C  EC53  F0D0         	call	_OLED_Command
 35364                           
 35365                           ;oled.c: 216: OLED_Command(0x81);
 35366  019940  0E81               	movlw	129
 35367  019942  EC53  F0D0         	call	_OLED_Command
 35368                           
 35369                           ;oled.c: 218: OLED_Command(0x8F);
 35370  019946  0E8F               	movlw	143
 35371  019948  EC53  F0D0         	call	_OLED_Command
 35372                           
 35373                           ;oled.c: 220: OLED_Command(0xD9);
 35374  01994C  0ED9               	movlw	217
 35375  01994E  EC53  F0D0         	call	_OLED_Command
 35376                           
 35377                           ;oled.c: 222: OLED_Command(0xF1);
 35378  019952  0EF1               	movlw	241
 35379  019954  EC53  F0D0         	call	_OLED_Command
 35380                           
 35381                           ;oled.c: 224: OLED_Command(0xDB);
 35382  019958  0EDB               	movlw	219
 35383  01995A  EC53  F0D0         	call	_OLED_Command
 35384                           
 35385                           ;oled.c: 226: OLED_Command(0x40);
 35386  01995E  0E40               	movlw	64
 35387  019960  EC53  F0D0         	call	_OLED_Command
 35388                           
 35389                           ;oled.c: 228: OLED_Command(0xA4);
 35390  019964  0EA4               	movlw	164
 35391  019966  EC53  F0D0         	call	_OLED_Command
 35392                           
 35393                           ;oled.c: 230: OLED_Command(0xA6);
 35394  01996A  0EA6               	movlw	166
 35395  01996C  EC53  F0D0         	call	_OLED_Command
 35396                           
 35397                           ;oled.c: 232: OLED_Command(0xAF);
 35398  019970  0EAF               	movlw	175
 35399  019972  EC53  F0D0         	call	_OLED_Command
 35400                           
 35401                           ;oled.c: 235: __nop();
 35402  019976  F000               	nop	
 35403  019978  0012               	return		;funcret
 35404  01997A                     __end_of_OLED_Init:
 35405                           	opt stack 0
 35406                           tosu	equ	0xFFF
 35407                           tosh	equ	0xFFE
 35408                           tosl	equ	0xFFD
 35409                           pclath	equ	0xFFA
 35410                           tblptru	equ	0xFF8
 35411                           tblptrh	equ	0xFF7
 35412                           tblptrl	equ	0xFF6
 35413                           tablat	equ	0xFF5
 35414                           prodh	equ	0xFF4
 35415                           prodl	equ	0xFF3
 35416                           intcon	equ	0xFF2
 35417                           indf0	equ	0xFEF
 35418                           postinc0	equ	0xFEE
 35419                           fsr0h	equ	0xFEA
 35420                           fsr0l	equ	0xFE9
 35421                           wreg	equ	0xFE8
 35422                           indf1	equ	0xFE7
 35423                           postdec1	equ	0xFE5
 35424                           plusw1	equ	0xFE3
 35425                           fsr1h	equ	0xFE2
 35426                           fsr1l	equ	0xFE1
 35427                           indf2	equ	0xFDF
 35428                           postinc2	equ	0xFDE
 35429                           postdec2	equ	0xFDD
 35430                           plusw2	equ	0xFDB
 35431                           fsr2h	equ	0xFDA
 35432                           fsr2l	equ	0xFD9
 35433                           status	equ	0xFD8
 35434                           
 35435 ;; *************** function _OLED_Command *****************
 35436 ;; Defined at:
 35437 ;;		line 110 in file "oled.c"
 35438 ;; Parameters:    Size  Location     Type
 35439 ;;  temp            1    wreg     unsigned char 
 35440 ;; Auto vars:     Size  Location     Type
 35441 ;;  temp            1   39[BANK1 ] unsigned char 
 35442 ;;  data_array      2   43[BANK1 ] unsigned char [2]
 35443 ;;  timeout         2   41[BANK1 ] int 
 35444 ;;  length          1   40[BANK1 ] unsigned char 
 35445 ;; Return value:  Size  Location     Type
 35446 ;;                  1    wreg      void 
 35447 ;; Registers used:
 35448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35449 ;; Tracked objects:
 35450 ;;		On entry : 0/0
 35451 ;;		On exit  : 0/0
 35452 ;;		Unchanged: 0/0
 35453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35455 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35457 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35458 ;;Total ram usage:        6 bytes
 35459 ;; Hardware stack levels used:    1
 35460 ;; Hardware stack levels required when called:   16
 35461 ;; This function calls:
 35462 ;;		_I2C1_MasterWrite
 35463 ;; This function is called by:
 35464 ;;		_OLED_Init
 35465 ;;		_OLED_YX
 35466 ;; This function uses a non-reentrant model
 35467 ;;
 35468                           
 35469                           	psect	text83
 35470  01A0A6                     __ptext83:
 35471                           	opt stack 0
 35472  01A0A6                     _OLED_Command:
 35473                           	opt stack 13
 35474                           
 35475                           ;incstack = 0
 35476                           ;OLED_Command@temp stored from wreg
 35477  01A0A6  0101               	movlb	1	; () banked
 35478  01A0A8  6F27               	movwf	OLED_Command@temp& (0+255),b
 35479                           
 35480                           ;oled.c: 112: uint8_t length;
 35481                           ;oled.c: 114: uint8_t data_array[2];
 35482                           ;oled.c: 115: data_array[0] = 0x00;
 35483  01A0AA  0E00               	movlw	0
 35484  01A0AC  0101               	movlb	1	; () banked
 35485  01A0AE  6F2B               	movwf	OLED_Command@data_array& (0+255),b
 35486                           
 35487                           ; BSR set to: 1
 35488                           ;oled.c: 116: data_array[1] = temp;
 35489  01A0B0  C127  F12C         	movff	OLED_Command@temp,OLED_Command@data_array+1
 35490                           
 35491                           ; BSR set to: 1
 35492                           ;oled.c: 119: length = 2;
 35493  01A0B4  0E02               	movlw	2
 35494  01A0B6  6F28               	movwf	OLED_Command@length& (0+255),b
 35495                           
 35496                           ; BSR set to: 1
 35497                           ;oled.c: 121: int timeout = 0;
 35498  01A0B8  0E00               	movlw	0
 35499  01A0BA  6F2A               	movwf	(OLED_Command@timeout+1)& (0+255),b
 35500  01A0BC  0E00               	movlw	0
 35501  01A0BE  6F29               	movwf	OLED_Command@timeout& (0+255),b
 35502                           
 35503                           ;oled.c: 122: while (OLED_I2C_Status != I2C1_MESSAGE_FAIL) {
 35504  01A0C0  D022               	goto	l1819
 35505  01A0C2                     
 35506                           ; BSR set to: 1
 35507                           ;oled.c: 124: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 35508                           
 35509                           ; BSR set to: 1
 35510  01A0C2  0E2B               	movlw	low OLED_Command@data_array
 35511  01A0C4  6F20               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 35512  01A0C6  0E01               	movlw	high OLED_Command@data_array
 35513  01A0C8  6F21               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 35514  01A0CA  C128  F122         	movff	OLED_Command@length,I2C1_MasterWrite@length
 35515  01A0CE  0E00               	movlw	0
 35516  01A0D0  6F24               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
 35517  01A0D2  0E3C               	movlw	60
 35518  01A0D4  6F23               	movwf	I2C1_MasterWrite@address& (0+255),b
 35519  01A0D6  0EE6               	movlw	low _OLED_I2C_Status
 35520  01A0D8  6F25               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 35521  01A0DA  0E01               	movlw	high _OLED_I2C_Status
 35522  01A0DC  6F26               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 35523  01A0DE  EC66  F0D2         	call	_I2C1_MasterWrite	;wreg free
 35524  01A0E2  0E02               	movlw	2
 35525  01A0E4  0101               	movlb	1	; () banked
 35526  01A0E6  19E6               	xorwf	_OLED_I2C_Status& (0+255),w,b
 35527  01A0E8  B4D8               	btfsc	status,2,c
 35528  01A0EA  D7FB               	goto	l1814
 35529                           
 35530                           ; BSR set to: 1
 35531                           ;oled.c: 128: if (timeout == 0) {
 35532                           
 35533                           ; BSR set to: 1
 35534  01A0EC  5129               	movf	OLED_Command@timeout& (0+255),w,b
 35535  01A0EE  112A               	iorwf	(OLED_Command@timeout+1)& (0+255),w,b
 35536  01A0F0  A4D8               	btfss	status,2,c
 35537  01A0F2  D002               	goto	l1816
 35538                           
 35539                           ; BSR set to: 1
 35540                           ;oled.c: 129: LATFbits.LATF1 = 1;
 35541  01A0F4  827E               	bsf	3966,1,c	;volatile
 35542                           
 35543                           ;oled.c: 130: break;
 35544  01A0F6  0012               	return	
 35545  01A0F8                     l1816:
 35546                           
 35547                           ; BSR set to: 1
 35548                           ;oled.c: 132: else {
 35549                           ;oled.c: 133: timeout++;
 35550                           
 35551                           ; BSR set to: 1
 35552  01A0F8  4B29               	infsnz	OLED_Command@timeout& (0+255),f,b
 35553  01A0FA  2B2A               	incf	(OLED_Command@timeout+1)& (0+255),f,b
 35554                           
 35555                           ; BSR set to: 1
 35556                           ;oled.c: 134: }
 35557                           ;oled.c: 136: if (OLED_I2C_Status == I2C1_MESSAGE_FAIL) {
 35558                           
 35559                           ; BSR set to: 1
 35560  01A0FC  05E6               	decf	_OLED_I2C_Status& (0+255),w,b
 35561  01A0FE  A4D8               	btfss	status,2,c
 35562  01A100  D002               	goto	l1819
 35563                           
 35564                           ; BSR set to: 1
 35565                           ;oled.c: 137: LATFbits.LATF1 = 1;
 35566  01A102  827E               	bsf	3966,1,c	;volatile
 35567                           
 35568                           ;oled.c: 138: break;
 35569  01A104  0012               	return	
 35570  01A106                     l1819:
 35571                           
 35572                           ; BSR set to: 1
 35573                           
 35574                           ; BSR set to: 1
 35575                           
 35576                           ; BSR set to: 1
 35577  01A106  05E6               	decf	_OLED_I2C_Status& (0+255),w,b
 35578  01A108  B4D8               	btfsc	status,2,c
 35579  01A10A  0012               	return	
 35580  01A10C  D7DA               	goto	l1812
 35581  01A10E                     __end_of_OLED_Command:
 35582                           	opt stack 0
 35583                           tosu	equ	0xFFF
 35584                           tosh	equ	0xFFE
 35585                           tosl	equ	0xFFD
 35586                           pclath	equ	0xFFA
 35587                           tblptru	equ	0xFF8
 35588                           tblptrh	equ	0xFF7
 35589                           tblptrl	equ	0xFF6
 35590                           tablat	equ	0xFF5
 35591                           prodh	equ	0xFF4
 35592                           prodl	equ	0xFF3
 35593                           intcon	equ	0xFF2
 35594                           indf0	equ	0xFEF
 35595                           postinc0	equ	0xFEE
 35596                           fsr0h	equ	0xFEA
 35597                           fsr0l	equ	0xFE9
 35598                           wreg	equ	0xFE8
 35599                           indf1	equ	0xFE7
 35600                           postdec1	equ	0xFE5
 35601                           plusw1	equ	0xFE3
 35602                           fsr1h	equ	0xFE2
 35603                           fsr1l	equ	0xFE1
 35604                           indf2	equ	0xFDF
 35605                           postinc2	equ	0xFDE
 35606                           postdec2	equ	0xFDD
 35607                           plusw2	equ	0xFDB
 35608                           fsr2h	equ	0xFDA
 35609                           fsr2l	equ	0xFD9
 35610                           status	equ	0xFD8
 35611                           
 35612 ;; *************** function _OLED_Clear *****************
 35613 ;; Defined at:
 35614 ;;		line 297 in file "oled.c"
 35615 ;; Parameters:    Size  Location     Type
 35616 ;;		None
 35617 ;; Auto vars:     Size  Location     Type
 35618 ;;  col             2   60[BANK1 ] unsigned int 
 35619 ;;  row             2   58[BANK1 ] unsigned int 
 35620 ;; Return value:  Size  Location     Type
 35621 ;;                  1    wreg      void 
 35622 ;; Registers used:
 35623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35624 ;; Tracked objects:
 35625 ;;		On entry : 0/0
 35626 ;;		On exit  : 0/0
 35627 ;;		Unchanged: 0/0
 35628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35630 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35632 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35633 ;;Total ram usage:        4 bytes
 35634 ;; Hardware stack levels used:    1
 35635 ;; Hardware stack levels required when called:   17
 35636 ;; This function calls:
 35637 ;;		_OLED_PutChar
 35638 ;; This function is called by:
 35639 ;;		_main
 35640 ;; This function uses a non-reentrant model
 35641 ;;
 35642                           
 35643                           	psect	text84
 35644  01A838                     __ptext84:
 35645                           	opt stack 0
 35646  01A838                     _OLED_Clear:
 35647                           	opt stack 13
 35648                           
 35649                           ;oled.c: 299: for(uint16_t row = 0; row < 8; row++) {
 35650                           
 35651                           ; BSR set to: 1
 35652                           ;incstack = 0
 35653  01A838  0E00               	movlw	0
 35654  01A83A  0101               	movlb	1	; () banked
 35655  01A83C  6F3B               	movwf	(OLED_Clear@row+1)& (0+255),b
 35656  01A83E  0E00               	movlw	0
 35657  01A840  6F3A               	movwf	OLED_Clear@row& (0+255),b
 35658  01A842                     l17757:
 35659                           
 35660                           ; BSR set to: 1
 35661  01A842  513B               	movf	(OLED_Clear@row+1)& (0+255),w,b
 35662  01A844  E118               	bnz	l1860
 35663  01A846  0E08               	movlw	8
 35664  01A848  5D3A               	subwf	OLED_Clear@row& (0+255),w,b
 35665  01A84A  B0D8               	btfsc	status,0,c
 35666  01A84C  0012               	return	
 35667                           
 35668                           ; BSR set to: 1
 35669                           ;oled.c: 301: for(uint16_t col = 0; col < 16; col++) {
 35670                           
 35671                           ; BSR set to: 1
 35672                           
 35673                           ; BSR set to: 1
 35674  01A84E  0E00               	movlw	0
 35675  01A850  6F3D               	movwf	(OLED_Clear@col+1)& (0+255),b
 35676  01A852  0E00               	movlw	0
 35677  01A854  6F3C               	movwf	OLED_Clear@col& (0+255),b
 35678  01A856                     l17763:
 35679                           
 35680                           ; BSR set to: 1
 35681  01A856  513D               	movf	(OLED_Clear@col+1)& (0+255),w,b
 35682  01A858  E10B               	bnz	l17773
 35683  01A85A  0E10               	movlw	16
 35684  01A85C  5D3C               	subwf	OLED_Clear@col& (0+255),w,b
 35685  01A85E  B0D8               	btfsc	status,0,c
 35686  01A860  D007               	goto	u23180
 35687                           
 35688                           ; BSR set to: 1
 35689                           ;oled.c: 303: OLED_PutChar('\0');
 35690                           
 35691                           ; BSR set to: 1
 35692                           
 35693                           ; BSR set to: 1
 35694  01A862  0E00               	movlw	0
 35695  01A864  ECBF  F0CA         	call	_OLED_PutChar
 35696  01A868  0101               	movlb	1	; () banked
 35697  01A86A  4B3C               	infsnz	OLED_Clear@col& (0+255),f,b
 35698  01A86C  2B3D               	incf	(OLED_Clear@col+1)& (0+255),f,b
 35699  01A86E  D7F3               	goto	l17763
 35700  01A870                     u23180:
 35701  01A870                     l17773:
 35702                           
 35703                           ; BSR set to: 1
 35704  01A870  4B3A               	infsnz	OLED_Clear@row& (0+255),f,b
 35705  01A872  2B3B               	incf	(OLED_Clear@row+1)& (0+255),f,b
 35706  01A874  D7E6               	goto	l17757
 35707  01A876                     l1860:
 35708                           
 35709                           ; BSR set to: 1
 35710  01A876  0012               	return		;funcret
 35711  01A878                     __end_of_OLED_Clear:
 35712                           	opt stack 0
 35713                           tosu	equ	0xFFF
 35714                           tosh	equ	0xFFE
 35715                           tosl	equ	0xFFD
 35716                           pclath	equ	0xFFA
 35717                           tblptru	equ	0xFF8
 35718                           tblptrh	equ	0xFF7
 35719                           tblptrl	equ	0xFF6
 35720                           tablat	equ	0xFF5
 35721                           prodh	equ	0xFF4
 35722                           prodl	equ	0xFF3
 35723                           intcon	equ	0xFF2
 35724                           indf0	equ	0xFEF
 35725                           postinc0	equ	0xFEE
 35726                           fsr0h	equ	0xFEA
 35727                           fsr0l	equ	0xFE9
 35728                           wreg	equ	0xFE8
 35729                           indf1	equ	0xFE7
 35730                           postdec1	equ	0xFE5
 35731                           plusw1	equ	0xFE3
 35732                           fsr1h	equ	0xFE2
 35733                           fsr1l	equ	0xFE1
 35734                           indf2	equ	0xFDF
 35735                           postinc2	equ	0xFDE
 35736                           postdec2	equ	0xFDD
 35737                           plusw2	equ	0xFDB
 35738                           fsr2h	equ	0xFDA
 35739                           fsr2l	equ	0xFD9
 35740                           status	equ	0xFD8
 35741                           
 35742 ;; *************** function _OLED_PutChar *****************
 35743 ;; Defined at:
 35744 ;;		line 251 in file "oled.c"
 35745 ;; Parameters:    Size  Location     Type
 35746 ;;  ch              1    wreg     unsigned char 
 35747 ;; Auto vars:     Size  Location     Type
 35748 ;;  ch              1   57[BANK1 ] unsigned char 
 35749 ;;  data_array      9   43[BANK1 ] unsigned char [9]
 35750 ;;  timeout         2   55[BANK1 ] int 
 35751 ;;  input_base      2   52[BANK1 ] PTR const unsigned char 
 35752 ;;		 -> OledFont(768), 
 35753 ;;  length          1   54[BANK1 ] unsigned char 
 35754 ;; Return value:  Size  Location     Type
 35755 ;;                  1    wreg      void 
 35756 ;; Registers used:
 35757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35758 ;; Tracked objects:
 35759 ;;		On entry : 0/0
 35760 ;;		On exit  : 0/0
 35761 ;;		Unchanged: 0/0
 35762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35764 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35765 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35766 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35767 ;;Total ram usage:       19 bytes
 35768 ;; Hardware stack levels used:    1
 35769 ;; Hardware stack levels required when called:   16
 35770 ;; This function calls:
 35771 ;;		_I2C1_MasterWrite
 35772 ;;		_memmove
 35773 ;; This function is called by:
 35774 ;;		_OLED_Clear
 35775 ;;		_OLED_Write_String
 35776 ;; This function uses a non-reentrant model
 35777 ;;
 35778                           
 35779                           	psect	text85
 35780  01957E                     __ptext85:
 35781                           	opt stack 0
 35782  01957E                     _OLED_PutChar:
 35783                           	opt stack 13
 35784                           
 35785                           ; BSR set to: 1
 35786                           ;incstack = 0
 35787                           ;OLED_PutChar@ch stored from wreg
 35788  01957E  0101               	movlb	1	; () banked
 35789  019580  6F39               	movwf	OLED_PutChar@ch& (0+255),b
 35790                           
 35791                           ;oled.c: 253: if((ch < 32) || (ch > 127)) {
 35792  019582  0E1F               	movlw	31
 35793  019584  0101               	movlb	1	; () banked
 35794  019586  6539               	cpfsgt	OLED_PutChar@ch& (0+255),b
 35795  019588  D003               	goto	u22810
 35796                           
 35797                           ; BSR set to: 1
 35798  01958A  0E7F               	movlw	127
 35799  01958C  6539               	cpfsgt	OLED_PutChar@ch& (0+255),b
 35800  01958E  D002               	goto	l1841
 35801  019590                     u22810:
 35802                           
 35803                           ; BSR set to: 1
 35804                           ;oled.c: 255: ch = ' ';
 35805                           
 35806                           ; BSR set to: 1
 35807  019590  0E20               	movlw	32
 35808  019592  6F39               	movwf	OLED_PutChar@ch& (0+255),b
 35809  019594                     l1841:
 35810                           
 35811                           ; BSR set to: 1
 35812                           ;oled.c: 257: }
 35813                           ;oled.c: 259: uint8_t length;
 35814                           ;oled.c: 261: uint8_t data_array[9];
 35815                           ;oled.c: 263: data_array[0] = 0x40;
 35816  019594  0E40               	movlw	64
 35817  019596  6F2B               	movwf	OLED_PutChar@data_array& (0+255),b
 35818                           
 35819                           ; BSR set to: 1
 35820                           ;oled.c: 265: const uint8_t *input_base = &OledFont[ch - 32][0];
 35821  019598  0E00               	movlw	0
 35822  01959A  6F27               	movwf	??_OLED_PutChar& (0+255),b
 35823  01959C  0EFF               	movlw	255
 35824  01959E  6F28               	movwf	(??_OLED_PutChar+1)& (0+255),b
 35825  0195A0  5139               	movf	OLED_PutChar@ch& (0+255),w,b
 35826  0195A2  6F29               	movwf	(??_OLED_PutChar+2)& (0+255),b
 35827  0195A4  6B2A               	clrf	(??_OLED_PutChar+3)& (0+255),b
 35828  0195A6  90D8               	bcf	status,0,c
 35829  0195A8  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 35830  0195AA  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 35831  0195AC  90D8               	bcf	status,0,c
 35832  0195AE  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 35833  0195B0  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 35834  0195B2  90D8               	bcf	status,0,c
 35835  0195B4  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 35836  0195B6  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 35837  0195B8  5127               	movf	??_OLED_PutChar& (0+255),w,b
 35838  0195BA  2729               	addwf	(??_OLED_PutChar+2)& (0+255),f,b
 35839  0195BC  5128               	movf	(??_OLED_PutChar+1)& (0+255),w,b
 35840  0195BE  232A               	addwfc	(??_OLED_PutChar+3)& (0+255),f,b
 35841  0195C0  0E0B               	movlw	low _OledFont
 35842  0195C2  2529               	addwf	(??_OLED_PutChar+2)& (0+255),w,b
 35843  0195C4  6F34               	movwf	OLED_PutChar@input_base& (0+255),b
 35844  0195C6  0ED0               	movlw	high _OledFont
 35845  0195C8  212A               	addwfc	(??_OLED_PutChar+3)& (0+255),w,b
 35846  0195CA  6F35               	movwf	(OLED_PutChar@input_base+1)& (0+255),b
 35847                           
 35848                           ; BSR set to: 1
 35849                           ;oled.c: 267: memmove(data_array + 1, input_base, 8);
 35850  0195CC  0E2C               	movlw	low (OLED_PutChar@data_array+1)
 35851  0195CE  6F17               	movwf	memmove@d1& (0+255),b
 35852  0195D0  0E01               	movlw	high (OLED_PutChar@data_array+1)
 35853  0195D2  6F18               	movwf	(memmove@d1+1)& (0+255),b
 35854  0195D4  C134  F119         	movff	OLED_PutChar@input_base,memmove@s1
 35855  0195D8  C135  F11A         	movff	OLED_PutChar@input_base+1,memmove@s1+1
 35856  0195DC  0E00               	movlw	0
 35857  0195DE  6F1C               	movwf	(memmove@n+1)& (0+255),b
 35858  0195E0  0E08               	movlw	8
 35859  0195E2  6F1B               	movwf	memmove@n& (0+255),b
 35860  0195E4  EC22  F0CB         	call	_memmove	;wreg free
 35861                           
 35862                           ;oled.c: 270: length = 9;
 35863  0195E8  0E09               	movlw	9
 35864  0195EA  0101               	movlb	1	; () banked
 35865  0195EC  6F36               	movwf	OLED_PutChar@length& (0+255),b
 35866                           
 35867                           ; BSR set to: 1
 35868                           ;oled.c: 272: int timeout = 0;
 35869  0195EE  0E00               	movlw	0
 35870  0195F0  6F38               	movwf	(OLED_PutChar@timeout+1)& (0+255),b
 35871  0195F2  0E00               	movlw	0
 35872  0195F4  6F37               	movwf	OLED_PutChar@timeout& (0+255),b
 35873                           
 35874                           ;oled.c: 273: while (OLED_I2C_Status != I2C1_MESSAGE_FAIL) {
 35875  0195F6  D022               	goto	l1852
 35876  0195F8                     
 35877                           ; BSR set to: 1
 35878                           ;oled.c: 275: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 35879                           
 35880                           ; BSR set to: 1
 35881  0195F8  0E2B               	movlw	low OLED_PutChar@data_array
 35882  0195FA  6F20               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 35883  0195FC  0E01               	movlw	high OLED_PutChar@data_array
 35884  0195FE  6F21               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 35885  019600  C136  F122         	movff	OLED_PutChar@length,I2C1_MasterWrite@length
 35886  019604  0E00               	movlw	0
 35887  019606  6F24               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
 35888  019608  0E3C               	movlw	60
 35889  01960A  6F23               	movwf	I2C1_MasterWrite@address& (0+255),b
 35890  01960C  0EE6               	movlw	low _OLED_I2C_Status
 35891  01960E  6F25               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 35892  019610  0E01               	movlw	high _OLED_I2C_Status
 35893  019612  6F26               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 35894  019614  EC66  F0D2         	call	_I2C1_MasterWrite	;wreg free
 35895  019618  0E02               	movlw	2
 35896  01961A  0101               	movlb	1	; () banked
 35897  01961C  19E6               	xorwf	_OLED_I2C_Status& (0+255),w,b
 35898  01961E  B4D8               	btfsc	status,2,c
 35899  019620  D7FB               	goto	l1847
 35900                           
 35901                           ; BSR set to: 1
 35902                           ;oled.c: 279: if (timeout == 0) {
 35903                           
 35904                           ; BSR set to: 1
 35905  019622  5137               	movf	OLED_PutChar@timeout& (0+255),w,b
 35906  019624  1138               	iorwf	(OLED_PutChar@timeout+1)& (0+255),w,b
 35907  019626  A4D8               	btfss	status,2,c
 35908  019628  D002               	goto	l1849
 35909                           
 35910                           ; BSR set to: 1
 35911                           ;oled.c: 280: LATFbits.LATF1 = 1;
 35912  01962A  827E               	bsf	3966,1,c	;volatile
 35913                           
 35914                           ;oled.c: 281: break;
 35915  01962C  0012               	return	
 35916  01962E                     l1849:
 35917                           
 35918                           ; BSR set to: 1
 35919                           ;oled.c: 283: else {
 35920                           ;oled.c: 284: timeout++;
 35921                           
 35922                           ; BSR set to: 1
 35923  01962E  4B37               	infsnz	OLED_PutChar@timeout& (0+255),f,b
 35924  019630  2B38               	incf	(OLED_PutChar@timeout+1)& (0+255),f,b
 35925                           
 35926                           ; BSR set to: 1
 35927                           ;oled.c: 285: }
 35928                           ;oled.c: 287: if (OLED_I2C_Status == I2C1_MESSAGE_FAIL) {
 35929                           
 35930                           ; BSR set to: 1
 35931  019632  05E6               	decf	_OLED_I2C_Status& (0+255),w,b
 35932  019634  A4D8               	btfss	status,2,c
 35933  019636  D002               	goto	l1852
 35934                           
 35935                           ; BSR set to: 1
 35936                           ;oled.c: 288: LATFbits.LATF1 = 1;
 35937  019638  827E               	bsf	3966,1,c	;volatile
 35938                           
 35939                           ;oled.c: 289: break;
 35940  01963A  0012               	return	
 35941  01963C                     l1852:
 35942                           
 35943                           ; BSR set to: 1
 35944                           
 35945                           ; BSR set to: 1
 35946                           
 35947                           ; BSR set to: 1
 35948  01963C  05E6               	decf	_OLED_I2C_Status& (0+255),w,b
 35949  01963E  B4D8               	btfsc	status,2,c
 35950  019640  0012               	return	
 35951  019642  D7DA               	goto	l1845
 35952  019644                     __end_of_OLED_PutChar:
 35953                           	opt stack 0
 35954                           tosu	equ	0xFFF
 35955                           tosh	equ	0xFFE
 35956                           tosl	equ	0xFFD
 35957                           pclath	equ	0xFFA
 35958                           tblptru	equ	0xFF8
 35959                           tblptrh	equ	0xFF7
 35960                           tblptrl	equ	0xFF6
 35961                           tablat	equ	0xFF5
 35962                           prodh	equ	0xFF4
 35963                           prodl	equ	0xFF3
 35964                           intcon	equ	0xFF2
 35965                           indf0	equ	0xFEF
 35966                           postinc0	equ	0xFEE
 35967                           fsr0h	equ	0xFEA
 35968                           fsr0l	equ	0xFE9
 35969                           wreg	equ	0xFE8
 35970                           indf1	equ	0xFE7
 35971                           postdec1	equ	0xFE5
 35972                           plusw1	equ	0xFE3
 35973                           fsr1h	equ	0xFE2
 35974                           fsr1l	equ	0xFE1
 35975                           indf2	equ	0xFDF
 35976                           postinc2	equ	0xFDE
 35977                           postdec2	equ	0xFDD
 35978                           plusw2	equ	0xFDB
 35979                           fsr2h	equ	0xFDA
 35980                           fsr2l	equ	0xFD9
 35981                           status	equ	0xFD8
 35982                           
 35983 ;; *************** function _memmove *****************
 35984 ;; Defined at:
 35985 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memmove.c"
 35986 ;; Parameters:    Size  Location     Type
 35987 ;;  d1              2   23[BANK1 ] PTR void 
 35988 ;;		 -> OLED_PutChar@data_array(9), 
 35989 ;;  s1              2   25[BANK1 ] PTR const void 
 35990 ;;		 -> OledFont(768), 
 35991 ;;  n               2   27[BANK1 ] unsigned int 
 35992 ;; Auto vars:     Size  Location     Type
 35993 ;;  s               2   33[BANK1 ] PTR const unsigned char 
 35994 ;;		 -> OledFont(768), 
 35995 ;;  d               2   31[BANK1 ] PTR unsigned char 
 35996 ;;		 -> OLED_PutChar@data_array(9), 
 35997 ;; Return value:  Size  Location     Type
 35998 ;;                  2   23[BANK1 ] PTR void 
 35999 ;; Registers used:
 36000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36001 ;; Tracked objects:
 36002 ;;		On entry : 0/0
 36003 ;;		On exit  : 0/0
 36004 ;;		Unchanged: 0/0
 36005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36006 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36007 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36008 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36009 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36010 ;;Total ram usage:       12 bytes
 36011 ;; Hardware stack levels used:    1
 36012 ;; Hardware stack levels required when called:   13
 36013 ;; This function calls:
 36014 ;;		Nothing
 36015 ;; This function is called by:
 36016 ;;		_OLED_PutChar
 36017 ;; This function uses a non-reentrant model
 36018 ;;
 36019                           
 36020                           	psect	text86
 36021  019644                     __ptext86:
 36022                           	opt stack 0
 36023  019644                     _memmove:
 36024                           	opt stack 15
 36025                           
 36026                           ; BSR set to: 1
 36027                           ;incstack = 0
 36028  019644  C119  F121         	movff	memmove@s1,memmove@s
 36029  019648  C11A  F122         	movff	memmove@s1+1,memmove@s+1
 36030  01964C  C117  F11F         	movff	memmove@d1,memmove@d
 36031  019650  C118  F120         	movff	memmove@d1+1,memmove@d+1
 36032  019654  0101               	movlb	1	; () banked
 36033  019656  511F               	movf	memmove@d& (0+255),w,b
 36034  019658  5D21               	subwf	memmove@s& (0+255),w,b
 36035  01965A  5120               	movf	(memmove@d+1)& (0+255),w,b
 36036  01965C  5922               	subwfb	(memmove@s+1)& (0+255),w,b
 36037  01965E  B0D8               	btfsc	status,0,c
 36038  019660  D02F               	goto	l2640
 36039                           
 36040                           ; BSR set to: 1
 36041  019662  511B               	movf	memmove@n& (0+255),w,b
 36042  019664  2521               	addwf	memmove@s& (0+255),w,b
 36043  019666  6F1D               	movwf	??_memmove& (0+255),b
 36044  019668  511C               	movf	(memmove@n+1)& (0+255),w,b
 36045  01966A  2122               	addwfc	(memmove@s+1)& (0+255),w,b
 36046  01966C  6F1E               	movwf	(??_memmove+1)& (0+255),b
 36047  01966E  511D               	movf	??_memmove& (0+255),w,b
 36048  019670  5D1F               	subwf	memmove@d& (0+255),w,b
 36049  019672  511E               	movf	(??_memmove+1)& (0+255),w,b
 36050  019674  5920               	subwfb	(memmove@d+1)& (0+255),w,b
 36051  019676  B0D8               	btfsc	status,0,c
 36052  019678  D023               	goto	l2640
 36053                           
 36054                           ; BSR set to: 1
 36055  01967A  511B               	movf	memmove@n& (0+255),w,b
 36056  01967C  2721               	addwf	memmove@s& (0+255),f,b
 36057  01967E  511C               	movf	(memmove@n+1)& (0+255),w,b
 36058  019680  2322               	addwfc	(memmove@s+1)& (0+255),f,b
 36059  019682  511B               	movf	memmove@n& (0+255),w,b
 36060  019684  271F               	addwf	memmove@d& (0+255),f,b
 36061  019686  511C               	movf	(memmove@n+1)& (0+255),w,b
 36062  019688  2320               	addwfc	(memmove@d+1)& (0+255),f,b
 36063  01968A                     
 36064                           ; BSR set to: 1
 36065                           
 36066                           ; BSR set to: 1
 36067  01968A  0721               	decf	memmove@s& (0+255),f,b
 36068  01968C  A0D8               	btfss	status,0,c
 36069  01968E  0722               	decf	(memmove@s+1)& (0+255),f,b
 36070  019690  C121  FFF6         	movff	memmove@s,tblptrl
 36071  019694  C122  FFF7         	movff	memmove@s+1,tblptrh
 36072  019698                     	if	0	;tblptru may be non-zero
 36073  019698                     	endif
 36074  019698                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36075  019698  0E00               	movlw	low (__mediumconst shr (0+16))
 36076  01969A  6EF8               	movwf	tblptru,c
 36077  01969C                     	endif
 36078  01969C  071F               	decf	memmove@d& (0+255),f,b
 36079  01969E  A0D8               	btfss	status,0,c
 36080  0196A0  0720               	decf	(memmove@d+1)& (0+255),f,b
 36081  0196A2  C11F  FFD9         	movff	memmove@d,fsr2l
 36082  0196A6  C120  FFDA         	movff	memmove@d+1,fsr2h
 36083  0196AA  0008               	tblrd		*
 36084  0196AC  CFF5 FFDF          	movff	tablat,indf2
 36085                           
 36086                           ; BSR set to: 1
 36087  0196B0  071B               	decf	memmove@n& (0+255),f,b
 36088  0196B2  A0D8               	btfss	status,0,c
 36089  0196B4  071C               	decf	(memmove@n+1)& (0+255),f,b
 36090  0196B6  511B               	movf	memmove@n& (0+255),w,b
 36091  0196B8  111C               	iorwf	(memmove@n+1)& (0+255),w,b
 36092  0196BA  B4D8               	btfsc	status,2,c
 36093  0196BC  0012               	return	
 36094  0196BE  D7E5               	goto	l2641
 36095  0196C0                     l2640:
 36096                           
 36097                           ; BSR set to: 1
 36098                           
 36099                           ; BSR set to: 1
 36100  0196C0  511B               	movf	memmove@n& (0+255),w,b
 36101  0196C2  111C               	iorwf	(memmove@n+1)& (0+255),w,b
 36102  0196C4  B4D8               	btfsc	status,2,c
 36103  0196C6  0012               	return	
 36104                           
 36105                           ; BSR set to: 1
 36106                           
 36107                           ; BSR set to: 1
 36108  0196C8  C121  FFF6         	movff	memmove@s,tblptrl
 36109  0196CC  C122  FFF7         	movff	memmove@s+1,tblptrh
 36110  0196D0                     	if	0	;tblptru may be non-zero
 36111  0196D0                     	endif
 36112  0196D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36113  0196D0  0E00               	movlw	low (__mediumconst shr (0+16))
 36114  0196D2  6EF8               	movwf	tblptru,c
 36115  0196D4                     	endif
 36116  0196D4  C11F  FFD9         	movff	memmove@d,fsr2l
 36117  0196D8  C120  FFDA         	movff	memmove@d+1,fsr2h
 36118  0196DC  0008               	tblrd		*
 36119  0196DE  CFF5 FFDF          	movff	tablat,indf2
 36120                           
 36121                           ; BSR set to: 1
 36122  0196E2  4B21               	infsnz	memmove@s& (0+255),f,b
 36123  0196E4  2B22               	incf	(memmove@s+1)& (0+255),f,b
 36124                           
 36125                           ; BSR set to: 1
 36126  0196E6  4B1F               	infsnz	memmove@d& (0+255),f,b
 36127  0196E8  2B20               	incf	(memmove@d+1)& (0+255),f,b
 36128                           
 36129                           ; BSR set to: 1
 36130  0196EA  071B               	decf	memmove@n& (0+255),f,b
 36131  0196EC  A0D8               	btfss	status,0,c
 36132  0196EE  071C               	decf	(memmove@n+1)& (0+255),f,b
 36133  0196F0  D7E7               	goto	l2640
 36134  0196F2                     __end_of_memmove:
 36135                           	opt stack 0
 36136                           tosu	equ	0xFFF
 36137                           tosh	equ	0xFFE
 36138                           tosl	equ	0xFFD
 36139                           pclath	equ	0xFFA
 36140                           tblptru	equ	0xFF8
 36141                           tblptrh	equ	0xFF7
 36142                           tblptrl	equ	0xFF6
 36143                           tablat	equ	0xFF5
 36144                           prodh	equ	0xFF4
 36145                           prodl	equ	0xFF3
 36146                           intcon	equ	0xFF2
 36147                           indf0	equ	0xFEF
 36148                           postinc0	equ	0xFEE
 36149                           fsr0h	equ	0xFEA
 36150                           fsr0l	equ	0xFE9
 36151                           wreg	equ	0xFE8
 36152                           indf1	equ	0xFE7
 36153                           postdec1	equ	0xFE5
 36154                           plusw1	equ	0xFE3
 36155                           fsr1h	equ	0xFE2
 36156                           fsr1l	equ	0xFE1
 36157                           indf2	equ	0xFDF
 36158                           postinc2	equ	0xFDE
 36159                           postdec2	equ	0xFDD
 36160                           plusw2	equ	0xFDB
 36161                           fsr2h	equ	0xFDA
 36162                           fsr2l	equ	0xFD9
 36163                           status	equ	0xFD8
 36164                           
 36165 ;; *************** function _I2C1_MasterWrite *****************
 36166 ;; Defined at:
 36167 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 36168 ;; Parameters:    Size  Location     Type
 36169 ;;  pdata           2   32[BANK1 ] PTR unsigned char 
 36170 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 36171 ;;  length          1   34[BANK1 ] unsigned char 
 36172 ;;  address         2   35[BANK1 ] unsigned int 
 36173 ;;  pflag           2   37[BANK1 ] PTR enum E17311
 36174 ;;		 -> OLED_I2C_Status(1), 
 36175 ;; Auto vars:     Size  Location     Type
 36176 ;;		None
 36177 ;; Return value:  Size  Location     Type
 36178 ;;                  1    wreg      void 
 36179 ;; Registers used:
 36180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36181 ;; Tracked objects:
 36182 ;;		On entry : 0/0
 36183 ;;		On exit  : 0/0
 36184 ;;		Unchanged: 0/0
 36185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36186 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36189 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36190 ;;Total ram usage:        7 bytes
 36191 ;; Hardware stack levels used:    1
 36192 ;; Hardware stack levels required when called:   15
 36193 ;; This function calls:
 36194 ;;		_I2C1_MasterTRBInsert
 36195 ;;		_I2C1_MasterWriteTRBBuild
 36196 ;; This function is called by:
 36197 ;;		_OLED_Command
 36198 ;;		_OLED_PutChar
 36199 ;;		_OLED_Data
 36200 ;; This function uses a non-reentrant model
 36201 ;;
 36202                           
 36203                           	psect	text87
 36204  01A4CC                     __ptext87:
 36205                           	opt stack 0
 36206  01A4CC                     _I2C1_MasterWrite:
 36207                           	opt stack 13
 36208                           
 36209                           ;i2c1.c: 606: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 36210                           ;i2c1.c: 609: if (i2c1_object.trStatus.s.full != 1)
 36211                           
 36212                           ; BSR set to: 1
 36213                           ;incstack = 0
 36214  01A4CC  0102               	movlb	2	; () banked
 36215  01A4CE  B104               	btfsc	(_i2c1_object+4)& (0+255),0,b
 36216  01A4D0  D01E               	goto	l1101
 36217                           
 36218                           ; BSR set to: 2
 36219                           ;i2c1.c: 610: {
 36220                           ;i2c1.c: 611: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 36221  01A4D2  0E80               	movlw	low I2C1_MasterWrite@trBlock
 36222  01A4D4  0101               	movlb	1	; () banked
 36223  01A4D6  6F17               	movwf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),b
 36224  01A4D8  0E02               	movlw	high I2C1_MasterWrite@trBlock
 36225  01A4DA  6F18               	movwf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 36226  01A4DC  C120  F119         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 36227  01A4E0  C121  F11A         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 36228  01A4E4  C122  F11B         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 36229  01A4E8  C123  F11C         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 36230  01A4EC  C124  F11D         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 36231  01A4F0  ECB6  F0D3         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 36232                           
 36233                           ;i2c1.c: 612: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 36234  01A4F4  0E80               	movlw	low I2C1_MasterWrite@trBlock
 36235  01A4F6  0101               	movlb	1	; () banked
 36236  01A4F8  6F17               	movwf	I2C1_MasterTRBInsert@ptrb_list& (0+255),b
 36237  01A4FA  0E02               	movlw	high I2C1_MasterWrite@trBlock
 36238  01A4FC  6F18               	movwf	(I2C1_MasterTRBInsert@ptrb_list+1)& (0+255),b
 36239  01A4FE  C125  F119         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 36240  01A502  C126  F11A         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 36241  01A506  0E01               	movlw	1
 36242  01A508  ECCF  F0CB         	call	_I2C1_MasterTRBInsert
 36243                           
 36244                           ;i2c1.c: 613: }
 36245  01A50C  0012               	return	
 36246  01A50E                     l1101:
 36247                           
 36248                           ;i2c1.c: 614: else
 36249                           ;i2c1.c: 615: {
 36250                           ;i2c1.c: 616: *pflag = I2C1_MESSAGE_FAIL;
 36251  01A50E  C125  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 36252  01A512  C126  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 36253  01A516  0E01               	movlw	1
 36254  01A518  6EDF               	movwf	indf2,c
 36255  01A51A  0012               	return	
 36256  01A51C                     __end_of_I2C1_MasterWrite:
 36257                           	opt stack 0
 36258                           tosu	equ	0xFFF
 36259                           tosh	equ	0xFFE
 36260                           tosl	equ	0xFFD
 36261                           pclath	equ	0xFFA
 36262                           tblptru	equ	0xFF8
 36263                           tblptrh	equ	0xFF7
 36264                           tblptrl	equ	0xFF6
 36265                           tablat	equ	0xFF5
 36266                           prodh	equ	0xFF4
 36267                           prodl	equ	0xFF3
 36268                           intcon	equ	0xFF2
 36269                           indf0	equ	0xFEF
 36270                           postinc0	equ	0xFEE
 36271                           fsr0h	equ	0xFEA
 36272                           fsr0l	equ	0xFE9
 36273                           wreg	equ	0xFE8
 36274                           indf1	equ	0xFE7
 36275                           postdec1	equ	0xFE5
 36276                           plusw1	equ	0xFE3
 36277                           fsr1h	equ	0xFE2
 36278                           fsr1l	equ	0xFE1
 36279                           indf2	equ	0xFDF
 36280                           postinc2	equ	0xFDE
 36281                           postdec2	equ	0xFDD
 36282                           plusw2	equ	0xFDB
 36283                           fsr2h	equ	0xFDA
 36284                           fsr2l	equ	0xFD9
 36285                           status	equ	0xFD8
 36286                           
 36287 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 36288 ;; Defined at:
 36289 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 36290 ;; Parameters:    Size  Location     Type
 36291 ;;  ptrb            2   23[BANK1 ] PTR struct .
 36292 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 36293 ;;  pdata           2   25[BANK1 ] PTR unsigned char 
 36294 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 36295 ;;  length          1   27[BANK1 ] unsigned char 
 36296 ;;  address         2   28[BANK1 ] unsigned int 
 36297 ;; Auto vars:     Size  Location     Type
 36298 ;;		None
 36299 ;; Return value:  Size  Location     Type
 36300 ;;                  1    wreg      void 
 36301 ;; Registers used:
 36302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36303 ;; Tracked objects:
 36304 ;;		On entry : 0/0
 36305 ;;		On exit  : 0/0
 36306 ;;		Unchanged: 0/0
 36307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36308 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36310 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36311 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36312 ;;Total ram usage:        9 bytes
 36313 ;; Hardware stack levels used:    1
 36314 ;; Hardware stack levels required when called:   13
 36315 ;; This function calls:
 36316 ;;		Nothing
 36317 ;; This function is called by:
 36318 ;;		_I2C1_MasterWrite
 36319 ;; This function uses a non-reentrant model
 36320 ;;
 36321                           
 36322                           	psect	text88
 36323  01A76C                     __ptext88:
 36324                           	opt stack 0
 36325  01A76C                     _I2C1_MasterWriteTRBBuild:
 36326                           	opt stack 14
 36327                           
 36328                           ;i2c1.c: 727: ptrb->address = address << 1;
 36329                           
 36330                           ;incstack = 0
 36331  01A76C  C11C  F11E         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 36332  01A770  C11D  F11F         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 36333  01A774  90D8               	bcf	status,0,c
 36334  01A776  0101               	movlb	1	; () banked
 36335  01A778  371E               	rlcf	??_I2C1_MasterWriteTRBBuild& (0+255),f,b
 36336  01A77A  371F               	rlcf	(??_I2C1_MasterWriteTRBBuild+1)& (0+255),f,b
 36337  01A77C  C117  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 36338  01A780  C118  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 36339  01A784  C11E  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 36340  01A788  C11F  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 36341                           
 36342                           ; BSR set to: 1
 36343                           ;i2c1.c: 728: ptrb->length = length;
 36344  01A78C  EE20 F002          	lfsr	2,2
 36345  01A790  5117               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 36346  01A792  26D9               	addwf	fsr2l,f,c
 36347  01A794  5118               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 36348  01A796  22DA               	addwfc	fsr2h,f,c
 36349  01A798  C11B  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 36350                           
 36351                           ; BSR set to: 1
 36352                           ;i2c1.c: 729: ptrb->pbuffer = pdata;
 36353  01A79C  EE20 F003          	lfsr	2,3
 36354  01A7A0  5117               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 36355  01A7A2  26D9               	addwf	fsr2l,f,c
 36356  01A7A4  5118               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 36357  01A7A6  22DA               	addwfc	fsr2h,f,c
 36358  01A7A8  C119  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 36359  01A7AC  C11A  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 36360                           
 36361                           ; BSR set to: 1
 36362  01A7B0  0012               	return		;funcret
 36363  01A7B2                     __end_of_I2C1_MasterWriteTRBBuild:
 36364                           	opt stack 0
 36365                           tosu	equ	0xFFF
 36366                           tosh	equ	0xFFE
 36367                           tosl	equ	0xFFD
 36368                           pclath	equ	0xFFA
 36369                           tblptru	equ	0xFF8
 36370                           tblptrh	equ	0xFF7
 36371                           tblptrl	equ	0xFF6
 36372                           tablat	equ	0xFF5
 36373                           prodh	equ	0xFF4
 36374                           prodl	equ	0xFF3
 36375                           intcon	equ	0xFF2
 36376                           indf0	equ	0xFEF
 36377                           postinc0	equ	0xFEE
 36378                           fsr0h	equ	0xFEA
 36379                           fsr0l	equ	0xFE9
 36380                           wreg	equ	0xFE8
 36381                           indf1	equ	0xFE7
 36382                           postdec1	equ	0xFE5
 36383                           plusw1	equ	0xFE3
 36384                           fsr1h	equ	0xFE2
 36385                           fsr1l	equ	0xFE1
 36386                           indf2	equ	0xFDF
 36387                           postinc2	equ	0xFDE
 36388                           postdec2	equ	0xFDD
 36389                           plusw2	equ	0xFDB
 36390                           fsr2h	equ	0xFDA
 36391                           fsr2l	equ	0xFD9
 36392                           status	equ	0xFD8
 36393                           
 36394 ;; *************** function _I2C1_MasterTRBInsert *****************
 36395 ;; Defined at:
 36396 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 36397 ;; Parameters:    Size  Location     Type
 36398 ;;  count           1    wreg     unsigned char 
 36399 ;;  ptrb_list       2   23[BANK1 ] PTR struct .
 36400 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 36401 ;;  pflag           2   25[BANK1 ] PTR enum E17311
 36402 ;;		 -> OLED_I2C_Status(1), 
 36403 ;; Auto vars:     Size  Location     Type
 36404 ;;  count           1   28[BANK1 ] unsigned char 
 36405 ;; Return value:  Size  Location     Type
 36406 ;;                  1    wreg      void 
 36407 ;; Registers used:
 36408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36409 ;; Tracked objects:
 36410 ;;		On entry : 0/0
 36411 ;;		On exit  : 0/0
 36412 ;;		Unchanged: 0/0
 36413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36414 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36415 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36416 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36417 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36418 ;;Total ram usage:        6 bytes
 36419 ;; Hardware stack levels used:    1
 36420 ;; Hardware stack levels required when called:   14
 36421 ;; This function calls:
 36422 ;;		_I2C1_WaitForLastPacketToComplete
 36423 ;; This function is called by:
 36424 ;;		_I2C1_MasterWrite
 36425 ;;		_I2C1_MasterRead
 36426 ;; This function uses a non-reentrant model
 36427 ;;
 36428                           
 36429                           	psect	text89
 36430  01979E                     __ptext89:
 36431                           	opt stack 0
 36432  01979E                     _I2C1_MasterTRBInsert:
 36433                           	opt stack 13
 36434                           
 36435                           ; BSR set to: 1
 36436                           ;incstack = 0
 36437                           ;I2C1_MasterTRBInsert@count stored from wreg
 36438  01979E  0101               	movlb	1	; () banked
 36439  0197A0  6F1C               	movwf	I2C1_MasterTRBInsert@count& (0+255),b
 36440                           
 36441                           ;i2c1.c: 661: if (i2c1_object.trStatus.s.full != 1)
 36442  0197A2  0102               	movlb	2	; () banked
 36443  0197A4  B104               	btfsc	(_i2c1_object+4)& (0+255),0,b
 36444  0197A6  D039               	goto	l1119
 36445                           
 36446                           ; BSR set to: 2
 36447                           ;i2c1.c: 662: {
 36448                           ;i2c1.c: 663: *pflag = I2C1_MESSAGE_PENDING;
 36449  0197A8  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 36450  0197AC  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 36451  0197B0  0E02               	movlw	2
 36452  0197B2  6EDF               	movwf	indf2,c
 36453                           
 36454                           ; BSR set to: 2
 36455                           ;i2c1.c: 665: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 36456  0197B4  EE20 F001          	lfsr	2,1
 36457  0197B8  5100               	movf	_i2c1_object& (0+255),w,b
 36458  0197BA  26D9               	addwf	fsr2l,f,c
 36459  0197BC  5101               	movf	(_i2c1_object+1)& (0+255),w,b
 36460  0197BE  22DA               	addwfc	fsr2h,f,c
 36461  0197C0  C117  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 36462  0197C4  C118  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 36463                           
 36464                           ; BSR set to: 2
 36465                           ;i2c1.c: 666: i2c1_object.pTrTail->count = count;
 36466  0197C8  C200  FFD9         	movff	_i2c1_object,fsr2l
 36467  0197CC  C201  FFDA         	movff	_i2c1_object+1,fsr2h
 36468  0197D0  C11C  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 36469                           
 36470                           ; BSR set to: 2
 36471                           ;i2c1.c: 667: i2c1_object.pTrTail->pTrFlag = pflag;
 36472  0197D4  EE20 F003          	lfsr	2,3
 36473  0197D8  5100               	movf	_i2c1_object& (0+255),w,b
 36474  0197DA  26D9               	addwf	fsr2l,f,c
 36475  0197DC  5101               	movf	(_i2c1_object+1)& (0+255),w,b
 36476  0197DE  22DA               	addwfc	fsr2h,f,c
 36477  0197E0  C119  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 36478  0197E4  C11A  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 36479                           
 36480                           ; BSR set to: 2
 36481                           ;i2c1.c: 668: i2c1_object.pTrTail++;
 36482  0197E8  0E05               	movlw	5
 36483  0197EA  2700               	addwf	_i2c1_object& (0+255),f,b
 36484  0197EC  0E00               	movlw	0
 36485  0197EE  2301               	addwfc	(_i2c1_object+1)& (0+255),f,b
 36486                           
 36487                           ; BSR set to: 2
 36488                           ;i2c1.c: 671: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 36489  0197F0  0E8A               	movlw	low (_i2c1_tr_queue+5)
 36490  0197F2  1900               	xorwf	_i2c1_object& (0+255),w,b
 36491  0197F4  E108               	bnz	l15549
 36492  0197F6  0E02               	movlw	high (_i2c1_tr_queue+5)
 36493  0197F8  1901               	xorwf	(_i2c1_object+1)& (0+255),w,b
 36494  0197FA  A4D8               	btfss	status,2,c
 36495  0197FC  D004               	goto	l1120
 36496                           
 36497                           ; BSR set to: 2
 36498                           ;i2c1.c: 672: {
 36499                           ;i2c1.c: 674: i2c1_object.pTrTail = i2c1_tr_queue;
 36500  0197FE  0E85               	movlw	low _i2c1_tr_queue
 36501  019800  6F00               	movwf	_i2c1_object& (0+255),b
 36502  019802  0E02               	movlw	high _i2c1_tr_queue
 36503  019804  6F01               	movwf	(_i2c1_object+1)& (0+255),b
 36504  019806                     l1120:
 36505  019806                     l15549:
 36506                           
 36507                           ; BSR set to: 2
 36508                           ;i2c1.c: 675: }
 36509                           ;i2c1.c: 679: i2c1_object.trStatus.s.empty = 0;
 36510  019806  9304               	bcf	(_i2c1_object+4)& (0+255),1,b
 36511                           
 36512                           ;i2c1.c: 682: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 36513  019808  5100               	movf	_i2c1_object& (0+255),w,b
 36514  01980A  1902               	xorwf	(_i2c1_object+2)& (0+255),w,b
 36515  01980C  E10C               	bnz	l15555
 36516  01980E  5101               	movf	(_i2c1_object+1)& (0+255),w,b
 36517  019810  1903               	xorwf	(_i2c1_object+3)& (0+255),w,b
 36518  019812  A4D8               	btfss	status,2,c
 36519  019814  D008               	goto	l1122
 36520                           
 36521                           ; BSR set to: 2
 36522                           ;i2c1.c: 683: {
 36523                           ;i2c1.c: 685: i2c1_object.trStatus.s.full = 1;
 36524  019816  8104               	bsf	(_i2c1_object+4)& (0+255),0,b
 36525                           
 36526                           ; BSR set to: 2
 36527                           ;i2c1.c: 686: }
 36528                           ;i2c1.c: 688: }
 36529  019818  D006               	goto	l1122
 36530  01981A                     l1119:
 36531                           
 36532                           ; BSR set to: 2
 36533                           ;i2c1.c: 689: else
 36534                           ;i2c1.c: 690: {
 36535                           ;i2c1.c: 691: *pflag = I2C1_MESSAGE_FAIL;
 36536                           
 36537                           ; BSR set to: 2
 36538  01981A  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 36539  01981E  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 36540  019822  0E01               	movlw	1
 36541  019824  6EDF               	movwf	indf2,c
 36542  019826                     l1122:
 36543  019826                     l15555:
 36544                           
 36545                           ; BSR set to: 2
 36546                           ;i2c1.c: 692: }
 36547                           ;i2c1.c: 695: if (*pflag == I2C1_MESSAGE_PENDING)
 36548  019826  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 36549  01982A  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 36550  01982E  0E02               	movlw	2
 36551  019830  18DE               	xorwf	postinc2,w,c
 36552  019832  A4D8               	btfss	status,2,c
 36553  019834  0012               	return	
 36554                           
 36555                           ; BSR set to: 2
 36556                           ;i2c1.c: 696: {
 36557                           ;i2c1.c: 697: I2C1_WaitForLastPacketToComplete();
 36558  019836  ECC5  F0D8         	call	_I2C1_WaitForLastPacketToComplete	;wreg free
 36559                           
 36560                           ;i2c1.c: 702: PIR3bits.SSP1IF = 1;
 36561  01983A  010E               	movlb	14	; () banked
 36562  01983C  8136               	bsf	54,0,b	;volatile
 36563  01983E  0012               	return	
 36564  019840                     __end_of_I2C1_MasterTRBInsert:
 36565                           	opt stack 0
 36566                           tosu	equ	0xFFF
 36567                           tosh	equ	0xFFE
 36568                           tosl	equ	0xFFD
 36569                           pclath	equ	0xFFA
 36570                           tblptru	equ	0xFF8
 36571                           tblptrh	equ	0xFF7
 36572                           tblptrl	equ	0xFF6
 36573                           tablat	equ	0xFF5
 36574                           prodh	equ	0xFF4
 36575                           prodl	equ	0xFF3
 36576                           intcon	equ	0xFF2
 36577                           indf0	equ	0xFEF
 36578                           postinc0	equ	0xFEE
 36579                           fsr0h	equ	0xFEA
 36580                           fsr0l	equ	0xFE9
 36581                           wreg	equ	0xFE8
 36582                           indf1	equ	0xFE7
 36583                           postdec1	equ	0xFE5
 36584                           plusw1	equ	0xFE3
 36585                           fsr1h	equ	0xFE2
 36586                           fsr1l	equ	0xFE1
 36587                           indf2	equ	0xFDF
 36588                           postinc2	equ	0xFDE
 36589                           postdec2	equ	0xFDD
 36590                           plusw2	equ	0xFDB
 36591                           fsr2h	equ	0xFDA
 36592                           fsr2l	equ	0xFD9
 36593                           status	equ	0xFD8
 36594                           
 36595 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 36596 ;; Defined at:
 36597 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 36598 ;; Parameters:    Size  Location     Type
 36599 ;;		None
 36600 ;; Auto vars:     Size  Location     Type
 36601 ;;		None
 36602 ;; Return value:  Size  Location     Type
 36603 ;;                  1    wreg      void 
 36604 ;; Registers used:
 36605 ;;		wreg, status,2
 36606 ;; Tracked objects:
 36607 ;;		On entry : 0/0
 36608 ;;		On exit  : 0/0
 36609 ;;		Unchanged: 0/0
 36610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36615 ;;Total ram usage:        0 bytes
 36616 ;; Hardware stack levels used:    1
 36617 ;; Hardware stack levels required when called:   13
 36618 ;; This function calls:
 36619 ;;		Nothing
 36620 ;; This function is called by:
 36621 ;;		_I2C1_MasterTRBInsert
 36622 ;; This function uses a non-reentrant model
 36623 ;;
 36624                           
 36625                           	psect	text90
 36626  01B18A                     __ptext90:
 36627                           	opt stack 0
 36628  01B18A                     _I2C1_WaitForLastPacketToComplete:
 36629                           	opt stack 13
 36630                           
 36631                           ;i2c1.c: 647: {
 36632                           
 36633                           ;i2c1.c: 646: while(i2c1_state != S_MASTER_IDLE)
 36634                           
 36635                           ;incstack = 0
 36636  01B18A  0102               	movlb	2	; () banked
 36637  01B18C  5168               	movf	_i2c1_state& (0+255),w,b
 36638  01B18E  B4D8               	btfsc	status,2,c
 36639  01B190  0012               	return	
 36640  01B192  D7FB               	goto	_I2C1_WaitForLastPacketToComplete
 36641  01B194                     __end_of_I2C1_WaitForLastPacketToComplete:
 36642                           	opt stack 0
 36643                           tosu	equ	0xFFF
 36644                           tosh	equ	0xFFE
 36645                           tosl	equ	0xFFD
 36646                           pclath	equ	0xFFA
 36647                           tblptru	equ	0xFF8
 36648                           tblptrh	equ	0xFF7
 36649                           tblptrl	equ	0xFF6
 36650                           tablat	equ	0xFF5
 36651                           prodh	equ	0xFF4
 36652                           prodl	equ	0xFF3
 36653                           intcon	equ	0xFF2
 36654                           indf0	equ	0xFEF
 36655                           postinc0	equ	0xFEE
 36656                           fsr0h	equ	0xFEA
 36657                           fsr0l	equ	0xFE9
 36658                           wreg	equ	0xFE8
 36659                           indf1	equ	0xFE7
 36660                           postdec1	equ	0xFE5
 36661                           plusw1	equ	0xFE3
 36662                           fsr1h	equ	0xFE2
 36663                           fsr1l	equ	0xFE1
 36664                           indf2	equ	0xFDF
 36665                           postinc2	equ	0xFDE
 36666                           postdec2	equ	0xFDD
 36667                           plusw2	equ	0xFDB
 36668                           fsr2h	equ	0xFDA
 36669                           fsr2l	equ	0xFD9
 36670                           status	equ	0xFD8
 36671                           
 36672 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 36673 ;; Defined at:
 36674 ;;		line 136 in file "mcc_generated_files/interrupt_manager.c"
 36675 ;; Parameters:    Size  Location     Type
 36676 ;;		None
 36677 ;; Auto vars:     Size  Location     Type
 36678 ;;		None
 36679 ;; Return value:  Size  Location     Type
 36680 ;;                  1    wreg      void 
 36681 ;; Registers used:
 36682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36683 ;; Tracked objects:
 36684 ;;		On entry : 0/0
 36685 ;;		On exit  : 0/0
 36686 ;;		Unchanged: 0/0
 36687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36690 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36691 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36692 ;;Total ram usage:       21 bytes
 36693 ;; Hardware stack levels used:    1
 36694 ;; Hardware stack levels required when called:   12
 36695 ;; This function calls:
 36696 ;;		Absolute function
 36697 ;;		_EUSART2_Transmit_ISR
 36698 ;;		_TMR6_ISR
 36699 ;;		_TMR7_ISR
 36700 ;; This function is called by:
 36701 ;;		Interrupt level 1
 36702 ;; This function uses a non-reentrant model
 36703 ;;
 36704                           
 36705                           	psect	intcodelo
 36706  000018                     __pintcodelo:
 36707                           	opt stack 0
 36708  000018                     _INTERRUPT_InterruptManagerLow:
 36709                           	opt stack 10
 36710                           
 36711                           ; BSR set to: 2
 36712                           ;incstack = 0
 36713  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 36714  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 36715  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 36716  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 36717  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 36718  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 36719  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 36720  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 36721  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 36722  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 36723  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 36724  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 36725  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 36726  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 36727  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 36728  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 36729  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 36730  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 36731  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 36732  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 36733  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 36734  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 36735                           
 36736                           ;interrupt_manager.c: 139: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 36737  00006E  010E               	movlb	14	; () banked
 36738  000070  BB2E               	btfsc	46,5,b	;volatile
 36739                           
 36740                           ; BSR set to: 14
 36741  000072  AB38               	btfss	56,5,b	;volatile
 36742  000074  D003               	goto	i1l263
 36743                           
 36744                           ; BSR set to: 14
 36745                           ;interrupt_manager.c: 140: {
 36746                           ;interrupt_manager.c: 141: TMR6_ISR();
 36747  000076  ECC9  F0D6         	call	_TMR6_ISR	;wreg free
 36748                           
 36749                           ;interrupt_manager.c: 142: }
 36750  00007A  D015               	goto	i1l267
 36751  00007C                     i1l263:
 36752                           
 36753                           ; BSR set to: 14
 36754                           ;interrupt_manager.c: 143: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 36755  00007C  BD2C               	btfsc	44,6,b	;volatile
 36756                           
 36757                           ; BSR set to: 14
 36758  00007E  AD36               	btfss	54,6,b	;volatile
 36759  000080  D00D               	goto	i1l265
 36760                           
 36761                           ; BSR set to: 14
 36762                           ;interrupt_manager.c: 144: {
 36763                           ;interrupt_manager.c: 145: EUSART2_TxDefaultInterruptHandler();
 36764  000082  D801               	call	i1u3372_28
 36765  000084  D010               	goto	i1l267
 36766  000086                     i1u3372_28:
 36767  000086  0005               	push	
 36768  000088  6EFA               	movwf	pclath,c
 36769  00008A  0102               	movlb	2	; () banked
 36770  00008C  5150               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 36771  00008E  6EFD               	movwf	tosl,c
 36772  000090  5151               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 36773  000092  6EFE               	movwf	tosh,c
 36774  000094  5152               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 36775  000096  6EFF               	movwf	tosu,c
 36776  000098  50FA               	movf	pclath,w,c
 36777  00009A  0012               	return		;indir
 36778  00009C                     i1l265:
 36779                           
 36780                           ; BSR set to: 14
 36781                           ;interrupt_manager.c: 147: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 36782  00009C  BD2E               	btfsc	46,6,b	;volatile
 36783                           
 36784                           ; BSR set to: 14
 36785  00009E  AD38               	btfss	56,6,b	;volatile
 36786  0000A0  D002               	goto	i1l267
 36787                           
 36788                           ; BSR set to: 14
 36789                           ;interrupt_manager.c: 148: {
 36790                           ;interrupt_manager.c: 149: TMR7_ISR();
 36791  0000A2  ECF4  F0D5         	call	_TMR7_ISR	;wreg free
 36792  0000A6                     i1l267:
 36793                           
 36794                           ;interrupt_manager.c: 151: else
 36795                           ;interrupt_manager.c: 152: {
 36796  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 36797  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 36798  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 36799  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 36800  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 36801  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 36802  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 36803  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 36804  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 36805  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 36806  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 36807  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 36808  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 36809  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 36810  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 36811  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 36812  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 36813  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 36814  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 36815  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 36816  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 36817  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 36818  0000FC  0010               	retfie	
 36819  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 36820                           	opt stack 0
 36821                           tosu	equ	0xFFF
 36822                           tosh	equ	0xFFE
 36823                           tosl	equ	0xFFD
 36824                           pclatu	equ	0xFFB
 36825                           pclath	equ	0xFFA
 36826                           tblptru	equ	0xFF8
 36827                           tblptrh	equ	0xFF7
 36828                           tblptrl	equ	0xFF6
 36829                           tablat	equ	0xFF5
 36830                           prodh	equ	0xFF4
 36831                           prodl	equ	0xFF3
 36832                           intcon	equ	0xFF2
 36833                           indf0	equ	0xFEF
 36834                           postinc0	equ	0xFEE
 36835                           fsr0h	equ	0xFEA
 36836                           fsr0l	equ	0xFE9
 36837                           wreg	equ	0xFE8
 36838                           indf1	equ	0xFE7
 36839                           postdec1	equ	0xFE5
 36840                           plusw1	equ	0xFE3
 36841                           fsr1h	equ	0xFE2
 36842                           fsr1l	equ	0xFE1
 36843                           bsr	equ	0xFE0
 36844                           indf2	equ	0xFDF
 36845                           postinc2	equ	0xFDE
 36846                           postdec2	equ	0xFDD
 36847                           plusw2	equ	0xFDB
 36848                           fsr2h	equ	0xFDA
 36849                           fsr2l	equ	0xFD9
 36850                           status	equ	0xFD8
 36851                           
 36852 ;; *************** function _TMR7_ISR *****************
 36853 ;; Defined at:
 36854 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 36855 ;; Parameters:    Size  Location     Type
 36856 ;;		None
 36857 ;; Auto vars:     Size  Location     Type
 36858 ;;		None
 36859 ;; Return value:  Size  Location     Type
 36860 ;;                  1    wreg      void 
 36861 ;; Registers used:
 36862 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 36863 ;; Tracked objects:
 36864 ;;		On entry : 0/0
 36865 ;;		On exit  : 0/0
 36866 ;;		Unchanged: 0/0
 36867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36872 ;;Total ram usage:        0 bytes
 36873 ;; Hardware stack levels used:    1
 36874 ;; Hardware stack levels required when called:   11
 36875 ;; This function calls:
 36876 ;;		Absolute function
 36877 ;;		_TMR7_DefaultInterruptHandler
 36878 ;;		_TMR7_WriteTimer
 36879 ;;		_acquisitionTimerCallback
 36880 ;; This function is called by:
 36881 ;;		_INTERRUPT_InterruptManagerLow
 36882 ;; This function uses a non-reentrant model
 36883 ;;
 36884                           
 36885                           	psect	text92
 36886  01ABE8                     __ptext92:
 36887                           	opt stack 0
 36888  01ABE8                     _TMR7_ISR:
 36889                           	opt stack 10
 36890                           
 36891                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 36892                           
 36893                           ;incstack = 0
 36894  01ABE8  010E               	movlb	14	; () banked
 36895  01ABEA  9D38               	bcf	56,6,b	;volatile
 36896                           
 36897                           ; BSR set to: 14
 36898                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 36899  01ABEC  C25F  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 36900  01ABF0  C260  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 36901  01ABF4  EC04  F0D7         	call	_TMR7_WriteTimer	;wreg free
 36902                           
 36903                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 36904  01ABF8  0102               	movlb	2	; () banked
 36905  01ABFA  5144               	movf	_TMR7_InterruptHandler& (0+255),w,b
 36906  01ABFC  1145               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 36907  01ABFE  1146               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 36908  01AC00  B4D8               	btfsc	status,2,c
 36909  01AC02  0012               	return	
 36910                           
 36911                           ; BSR set to: 2
 36912                           ;tmr7.c: 172: {
 36913                           ;tmr7.c: 173: TMR7_InterruptHandler();
 36914  01AC04  D801               	call	i1u3339_28
 36915  01AC06  0012               	return	
 36916  01AC08                     i1u3339_28:
 36917  01AC08  0005               	push	
 36918  01AC0A  6EFA               	movwf	pclath,c
 36919  01AC0C  5144               	movf	_TMR7_InterruptHandler& (0+255),w,b
 36920  01AC0E  6EFD               	movwf	tosl,c
 36921  01AC10  5145               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 36922  01AC12  6EFE               	movwf	tosh,c
 36923  01AC14  5146               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 36924  01AC16  6EFF               	movwf	tosu,c
 36925  01AC18  50FA               	movf	pclath,w,c
 36926  01AC1A  0012               	return		;indir
 36927  01AC1C                     __end_of_TMR7_ISR:
 36928                           	opt stack 0
 36929                           tosu	equ	0xFFF
 36930                           tosh	equ	0xFFE
 36931                           tosl	equ	0xFFD
 36932                           pclatu	equ	0xFFB
 36933                           pclath	equ	0xFFA
 36934                           tblptru	equ	0xFF8
 36935                           tblptrh	equ	0xFF7
 36936                           tblptrl	equ	0xFF6
 36937                           tablat	equ	0xFF5
 36938                           prodh	equ	0xFF4
 36939                           prodl	equ	0xFF3
 36940                           intcon	equ	0xFF2
 36941                           indf0	equ	0xFEF
 36942                           postinc0	equ	0xFEE
 36943                           fsr0h	equ	0xFEA
 36944                           fsr0l	equ	0xFE9
 36945                           wreg	equ	0xFE8
 36946                           indf1	equ	0xFE7
 36947                           postdec1	equ	0xFE5
 36948                           plusw1	equ	0xFE3
 36949                           fsr1h	equ	0xFE2
 36950                           fsr1l	equ	0xFE1
 36951                           bsr	equ	0xFE0
 36952                           indf2	equ	0xFDF
 36953                           postinc2	equ	0xFDE
 36954                           postdec2	equ	0xFDD
 36955                           plusw2	equ	0xFDB
 36956                           fsr2h	equ	0xFDA
 36957                           fsr2l	equ	0xFD9
 36958                           status	equ	0xFD8
 36959                           
 36960 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 36961 ;; Defined at:
 36962 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 36963 ;; Parameters:    Size  Location     Type
 36964 ;;		None
 36965 ;; Auto vars:     Size  Location     Type
 36966 ;;		None
 36967 ;; Return value:  Size  Location     Type
 36968 ;;                  1    wreg      void 
 36969 ;; Registers used:
 36970 ;;		None
 36971 ;; Tracked objects:
 36972 ;;		On entry : 0/0
 36973 ;;		On exit  : 0/0
 36974 ;;		Unchanged: 0/0
 36975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36980 ;;Total ram usage:        0 bytes
 36981 ;; Hardware stack levels used:    1
 36982 ;; Hardware stack levels required when called:    9
 36983 ;; This function calls:
 36984 ;;		Nothing
 36985 ;; This function is called by:
 36986 ;;		_TMR7_Initialize
 36987 ;;		_TMR7_ISR
 36988 ;; This function uses a non-reentrant model
 36989 ;;
 36990                           
 36991                           	psect	text93
 36992  01B1E6                     __ptext93:
 36993                           	opt stack 0
 36994  01B1E6                     _TMR7_DefaultInterruptHandler:
 36995                           	opt stack 11
 36996                           
 36997                           ;incstack = 0
 36998  01B1E6  0012               	return		;funcret
 36999  01B1E8                     __end_of_TMR7_DefaultInterruptHandler:
 37000                           	opt stack 0
 37001                           tosu	equ	0xFFF
 37002                           tosh	equ	0xFFE
 37003                           tosl	equ	0xFFD
 37004                           pclatu	equ	0xFFB
 37005                           pclath	equ	0xFFA
 37006                           tblptru	equ	0xFF8
 37007                           tblptrh	equ	0xFF7
 37008                           tblptrl	equ	0xFF6
 37009                           tablat	equ	0xFF5
 37010                           prodh	equ	0xFF4
 37011                           prodl	equ	0xFF3
 37012                           intcon	equ	0xFF2
 37013                           indf0	equ	0xFEF
 37014                           postinc0	equ	0xFEE
 37015                           fsr0h	equ	0xFEA
 37016                           fsr0l	equ	0xFE9
 37017                           wreg	equ	0xFE8
 37018                           indf1	equ	0xFE7
 37019                           postdec1	equ	0xFE5
 37020                           plusw1	equ	0xFE3
 37021                           fsr1h	equ	0xFE2
 37022                           fsr1l	equ	0xFE1
 37023                           bsr	equ	0xFE0
 37024                           indf2	equ	0xFDF
 37025                           postinc2	equ	0xFDE
 37026                           postdec2	equ	0xFDD
 37027                           plusw2	equ	0xFDB
 37028                           fsr2h	equ	0xFDA
 37029                           fsr2l	equ	0xFD9
 37030                           status	equ	0xFD8
 37031                           
 37032 ;; *************** function _acquisitionTimerCallback *****************
 37033 ;; Defined at:
 37034 ;;		line 431 in file "main.c"
 37035 ;; Parameters:    Size  Location     Type
 37036 ;;		None
 37037 ;; Auto vars:     Size  Location     Type
 37038 ;;		None
 37039 ;; Return value:  Size  Location     Type
 37040 ;;                  1    wreg      void 
 37041 ;; Registers used:
 37042 ;;		wreg, status,2, cstack
 37043 ;; Tracked objects:
 37044 ;;		On entry : 0/0
 37045 ;;		On exit  : 0/0
 37046 ;;		Unchanged: 0/0
 37047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37052 ;;Total ram usage:        0 bytes
 37053 ;; Hardware stack levels used:    1
 37054 ;; Hardware stack levels required when called:   10
 37055 ;; This function calls:
 37056 ;;		_ADCC_ClearAccumulator
 37057 ;;		_ADCC_DischargeSampleCapacitor
 37058 ;;		_ADCC_StartConversion
 37059 ;; This function is called by:
 37060 ;;		_main
 37061 ;;		_TMR7_ISR
 37062 ;; This function uses a non-reentrant model
 37063 ;;
 37064                           
 37065                           	psect	text94
 37066  01B0A2                     __ptext94:
 37067                           	opt stack 0
 37068  01B0A2                     _acquisitionTimerCallback:
 37069                           	opt stack 10
 37070                           
 37071                           ;main.c: 434: ADCC_DischargeSampleCapacitor();
 37072                           
 37073                           ;incstack = 0
 37074  01B0A2  ECD8  F0D8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 37075                           
 37076                           ;main.c: 437: ADCC_ClearAccumulator();
 37077  01B0A6  ECDF  F0D8         	call	_ADCC_ClearAccumulator	;wreg free
 37078                           
 37079                           ;main.c: 440: ADCC_StartConversion(next_channel);
 37080  01B0AA  0102               	movlb	2	; () banked
 37081  01B0AC  51FB               	movf	_next_channel& (0+255),w,b
 37082  01B0AE  ECB2  F0D8         	call	_ADCC_StartConversion
 37083  01B0B2  0012               	return		;funcret
 37084  01B0B4                     __end_of_acquisitionTimerCallback:
 37085                           	opt stack 0
 37086                           tosu	equ	0xFFF
 37087                           tosh	equ	0xFFE
 37088                           tosl	equ	0xFFD
 37089                           pclatu	equ	0xFFB
 37090                           pclath	equ	0xFFA
 37091                           tblptru	equ	0xFF8
 37092                           tblptrh	equ	0xFF7
 37093                           tblptrl	equ	0xFF6
 37094                           tablat	equ	0xFF5
 37095                           prodh	equ	0xFF4
 37096                           prodl	equ	0xFF3
 37097                           intcon	equ	0xFF2
 37098                           indf0	equ	0xFEF
 37099                           postinc0	equ	0xFEE
 37100                           fsr0h	equ	0xFEA
 37101                           fsr0l	equ	0xFE9
 37102                           wreg	equ	0xFE8
 37103                           indf1	equ	0xFE7
 37104                           postdec1	equ	0xFE5
 37105                           plusw1	equ	0xFE3
 37106                           fsr1h	equ	0xFE2
 37107                           fsr1l	equ	0xFE1
 37108                           bsr	equ	0xFE0
 37109                           indf2	equ	0xFDF
 37110                           postinc2	equ	0xFDE
 37111                           postdec2	equ	0xFDD
 37112                           plusw2	equ	0xFDB
 37113                           fsr2h	equ	0xFDA
 37114                           fsr2l	equ	0xFD9
 37115                           status	equ	0xFD8
 37116                           
 37117 ;; *************** function _ADCC_StartConversion *****************
 37118 ;; Defined at:
 37119 ;;		line 112 in file "mcc_generated_files/adcc.c"
 37120 ;; Parameters:    Size  Location     Type
 37121 ;;  channel         1    wreg     enum E17310
 37122 ;; Auto vars:     Size  Location     Type
 37123 ;;  channel         1    0[BANK1 ] enum E17310
 37124 ;; Return value:  Size  Location     Type
 37125 ;;                  1    wreg      void 
 37126 ;; Registers used:
 37127 ;;		wreg
 37128 ;; Tracked objects:
 37129 ;;		On entry : 0/0
 37130 ;;		On exit  : 0/0
 37131 ;;		Unchanged: 0/0
 37132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37134 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37136 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37137 ;;Total ram usage:        1 bytes
 37138 ;; Hardware stack levels used:    1
 37139 ;; Hardware stack levels required when called:    9
 37140 ;; This function calls:
 37141 ;;		Nothing
 37142 ;; This function is called by:
 37143 ;;		_acquisitionTimerCallback
 37144 ;; This function uses a non-reentrant model
 37145 ;;
 37146                           
 37147                           	psect	text95
 37148  01B164                     __ptext95:
 37149                           	opt stack 0
 37150  01B164                     _ADCC_StartConversion:
 37151                           	opt stack 10
 37152                           
 37153                           ;incstack = 0
 37154                           ;ADCC_StartConversion@channel stored from wreg
 37155  01B164  0101               	movlb	1	; () banked
 37156  01B166  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 37157                           
 37158                           ;adcc.c: 115: ADPCH = channel;
 37159  01B168  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 37160                           
 37161                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 37162  01B16C  8E60               	bsf	3936,7,c	;volatile
 37163                           
 37164                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 37165  01B16E  8060               	bsf	3936,0,c	;volatile
 37166  01B170  0012               	return		;funcret
 37167  01B172                     __end_of_ADCC_StartConversion:
 37168                           	opt stack 0
 37169                           tosu	equ	0xFFF
 37170                           tosh	equ	0xFFE
 37171                           tosl	equ	0xFFD
 37172                           pclatu	equ	0xFFB
 37173                           pclath	equ	0xFFA
 37174                           tblptru	equ	0xFF8
 37175                           tblptrh	equ	0xFF7
 37176                           tblptrl	equ	0xFF6
 37177                           tablat	equ	0xFF5
 37178                           prodh	equ	0xFF4
 37179                           prodl	equ	0xFF3
 37180                           intcon	equ	0xFF2
 37181                           indf0	equ	0xFEF
 37182                           postinc0	equ	0xFEE
 37183                           fsr0h	equ	0xFEA
 37184                           fsr0l	equ	0xFE9
 37185                           wreg	equ	0xFE8
 37186                           indf1	equ	0xFE7
 37187                           postdec1	equ	0xFE5
 37188                           plusw1	equ	0xFE3
 37189                           fsr1h	equ	0xFE2
 37190                           fsr1l	equ	0xFE1
 37191                           bsr	equ	0xFE0
 37192                           indf2	equ	0xFDF
 37193                           postinc2	equ	0xFDE
 37194                           postdec2	equ	0xFDD
 37195                           plusw2	equ	0xFDB
 37196                           fsr2h	equ	0xFDA
 37197                           fsr2l	equ	0xFD9
 37198                           status	equ	0xFD8
 37199                           
 37200 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 37201 ;; Defined at:
 37202 ;;		line 174 in file "mcc_generated_files/adcc.c"
 37203 ;; Parameters:    Size  Location     Type
 37204 ;;		None
 37205 ;; Auto vars:     Size  Location     Type
 37206 ;;		None
 37207 ;; Return value:  Size  Location     Type
 37208 ;;                  1    wreg      void 
 37209 ;; Registers used:
 37210 ;;		wreg, status,2
 37211 ;; Tracked objects:
 37212 ;;		On entry : 0/0
 37213 ;;		On exit  : 0/0
 37214 ;;		Unchanged: 0/0
 37215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37220 ;;Total ram usage:        0 bytes
 37221 ;; Hardware stack levels used:    1
 37222 ;; Hardware stack levels required when called:    9
 37223 ;; This function calls:
 37224 ;;		Nothing
 37225 ;; This function is called by:
 37226 ;;		_acquisitionTimerCallback
 37227 ;; This function uses a non-reentrant model
 37228 ;;
 37229                           
 37230                           	psect	text96
 37231  01B1B0                     __ptext96:
 37232                           	opt stack 0
 37233  01B1B0                     _ADCC_DischargeSampleCapacitor:
 37234                           	opt stack 10
 37235                           
 37236                           ;adcc.c: 177: ADPCH = 0x3c;
 37237                           
 37238                           ;incstack = 0
 37239  01B1B0  0E3C               	movlw	60
 37240  01B1B2  010F               	movlb	15	; () banked
 37241  01B1B4  6F5F               	movwf	95,b	;volatile
 37242                           
 37243                           ; BSR set to: 15
 37244  01B1B6  0012               	return		;funcret
 37245  01B1B8                     __end_of_ADCC_DischargeSampleCapacitor:
 37246                           	opt stack 0
 37247                           tosu	equ	0xFFF
 37248                           tosh	equ	0xFFE
 37249                           tosl	equ	0xFFD
 37250                           pclatu	equ	0xFFB
 37251                           pclath	equ	0xFFA
 37252                           tblptru	equ	0xFF8
 37253                           tblptrh	equ	0xFF7
 37254                           tblptrl	equ	0xFF6
 37255                           tablat	equ	0xFF5
 37256                           prodh	equ	0xFF4
 37257                           prodl	equ	0xFF3
 37258                           intcon	equ	0xFF2
 37259                           indf0	equ	0xFEF
 37260                           postinc0	equ	0xFEE
 37261                           fsr0h	equ	0xFEA
 37262                           fsr0l	equ	0xFE9
 37263                           wreg	equ	0xFE8
 37264                           indf1	equ	0xFE7
 37265                           postdec1	equ	0xFE5
 37266                           plusw1	equ	0xFE3
 37267                           fsr1h	equ	0xFE2
 37268                           fsr1l	equ	0xFE1
 37269                           bsr	equ	0xFE0
 37270                           indf2	equ	0xFDF
 37271                           postinc2	equ	0xFDE
 37272                           postdec2	equ	0xFDD
 37273                           plusw2	equ	0xFDB
 37274                           fsr2h	equ	0xFDA
 37275                           fsr2l	equ	0xFD9
 37276                           status	equ	0xFD8
 37277                           
 37278 ;; *************** function _ADCC_ClearAccumulator *****************
 37279 ;; Defined at:
 37280 ;;		line 204 in file "mcc_generated_files/adcc.c"
 37281 ;; Parameters:    Size  Location     Type
 37282 ;;		None
 37283 ;; Auto vars:     Size  Location     Type
 37284 ;;		None
 37285 ;; Return value:  Size  Location     Type
 37286 ;;                  1    wreg      void 
 37287 ;; Registers used:
 37288 ;;		None
 37289 ;; Tracked objects:
 37290 ;;		On entry : 0/0
 37291 ;;		On exit  : 0/0
 37292 ;;		Unchanged: 0/0
 37293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37298 ;;Total ram usage:        0 bytes
 37299 ;; Hardware stack levels used:    1
 37300 ;; Hardware stack levels required when called:    9
 37301 ;; This function calls:
 37302 ;;		Nothing
 37303 ;; This function is called by:
 37304 ;;		_acquisitionTimerCallback
 37305 ;; This function uses a non-reentrant model
 37306 ;;
 37307                           
 37308                           	psect	text97
 37309  01B1BE                     __ptext97:
 37310                           	opt stack 0
 37311  01B1BE                     _ADCC_ClearAccumulator:
 37312                           	opt stack 10
 37313                           
 37314                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 37315                           
 37316                           ; BSR set to: 15
 37317                           ;incstack = 0
 37318  01B1BE  010F               	movlb	15	; () banked
 37319  01B1C0  875A               	bsf	90,3,b	;volatile
 37320                           
 37321                           ; BSR set to: 15
 37322  01B1C2  0012               	return		;funcret
 37323  01B1C4                     __end_of_ADCC_ClearAccumulator:
 37324                           	opt stack 0
 37325                           tosu	equ	0xFFF
 37326                           tosh	equ	0xFFE
 37327                           tosl	equ	0xFFD
 37328                           pclatu	equ	0xFFB
 37329                           pclath	equ	0xFFA
 37330                           tblptru	equ	0xFF8
 37331                           tblptrh	equ	0xFF7
 37332                           tblptrl	equ	0xFF6
 37333                           tablat	equ	0xFF5
 37334                           prodh	equ	0xFF4
 37335                           prodl	equ	0xFF3
 37336                           intcon	equ	0xFF2
 37337                           indf0	equ	0xFEF
 37338                           postinc0	equ	0xFEE
 37339                           fsr0h	equ	0xFEA
 37340                           fsr0l	equ	0xFE9
 37341                           wreg	equ	0xFE8
 37342                           indf1	equ	0xFE7
 37343                           postdec1	equ	0xFE5
 37344                           plusw1	equ	0xFE3
 37345                           fsr1h	equ	0xFE2
 37346                           fsr1l	equ	0xFE1
 37347                           bsr	equ	0xFE0
 37348                           indf2	equ	0xFDF
 37349                           postinc2	equ	0xFDE
 37350                           postdec2	equ	0xFDD
 37351                           plusw2	equ	0xFDB
 37352                           fsr2h	equ	0xFDA
 37353                           fsr2l	equ	0xFD9
 37354                           status	equ	0xFD8
 37355                           
 37356 ;; *************** function _TMR7_WriteTimer *****************
 37357 ;; Defined at:
 37358 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 37359 ;; Parameters:    Size  Location     Type
 37360 ;;  timerVal        2    0[BANK1 ] unsigned int 
 37361 ;; Auto vars:     Size  Location     Type
 37362 ;;		None
 37363 ;; Return value:  Size  Location     Type
 37364 ;;                  1    wreg      void 
 37365 ;; Registers used:
 37366 ;;		wreg, status,2
 37367 ;; Tracked objects:
 37368 ;;		On entry : 0/0
 37369 ;;		On exit  : 0/0
 37370 ;;		Unchanged: 0/0
 37371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37372 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37375 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37376 ;;Total ram usage:        2 bytes
 37377 ;; Hardware stack levels used:    1
 37378 ;; Hardware stack levels required when called:    9
 37379 ;; This function calls:
 37380 ;;		Nothing
 37381 ;; This function is called by:
 37382 ;;		_TMR7_ISR
 37383 ;;		_TMR7_Reload
 37384 ;; This function uses a non-reentrant model
 37385 ;;
 37386                           
 37387                           	psect	text98
 37388  01AE08                     __ptext98:
 37389                           	opt stack 0
 37390  01AE08                     _TMR7_WriteTimer:
 37391                           	opt stack 11
 37392                           
 37393                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 37394                           
 37395                           ; BSR set to: 15
 37396                           ;incstack = 0
 37397  01AE08  010F               	movlb	15	; () banked
 37398  01AE0A  A530               	btfss	48,2,b	;volatile
 37399  01AE0C  D009               	goto	i1l678
 37400                           
 37401                           ; BSR set to: 15
 37402                           ;tmr7.c: 130: {
 37403                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 37404  01AE0E  9130               	bcf	48,0,b	;volatile
 37405                           
 37406                           ; BSR set to: 15
 37407                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 37408  01AE10  0101               	movlb	1	; () banked
 37409  01AE12  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 37410  01AE14  010F               	movlb	15	; () banked
 37411  01AE16  6F2F               	movwf	47,b	;volatile
 37412                           
 37413                           ; BSR set to: 15
 37414                           ;tmr7.c: 136: TMR7L = timerVal;
 37415  01AE18  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 37416                           
 37417                           ; BSR set to: 15
 37418                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 37419  01AE1C  8130               	bsf	48,0,b	;volatile
 37420                           
 37421                           ;tmr7.c: 140: }
 37422  01AE1E  0012               	return	
 37423  01AE20                     i1l678:
 37424                           
 37425                           ; BSR set to: 15
 37426                           ;tmr7.c: 141: else
 37427                           ;tmr7.c: 142: {
 37428                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 37429                           
 37430                           ; BSR set to: 15
 37431  01AE20  0101               	movlb	1	; () banked
 37432  01AE22  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 37433  01AE24  010F               	movlb	15	; () banked
 37434  01AE26  6F2F               	movwf	47,b	;volatile
 37435                           
 37436                           ; BSR set to: 15
 37437                           ;tmr7.c: 145: TMR7L = timerVal;
 37438  01AE28  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 37439  01AE2C  0012               	return	
 37440  01AE2E                     __end_of_TMR7_WriteTimer:
 37441                           	opt stack 0
 37442                           tosu	equ	0xFFF
 37443                           tosh	equ	0xFFE
 37444                           tosl	equ	0xFFD
 37445                           pclatu	equ	0xFFB
 37446                           pclath	equ	0xFFA
 37447                           tblptru	equ	0xFF8
 37448                           tblptrh	equ	0xFF7
 37449                           tblptrl	equ	0xFF6
 37450                           tablat	equ	0xFF5
 37451                           prodh	equ	0xFF4
 37452                           prodl	equ	0xFF3
 37453                           intcon	equ	0xFF2
 37454                           indf0	equ	0xFEF
 37455                           postinc0	equ	0xFEE
 37456                           fsr0h	equ	0xFEA
 37457                           fsr0l	equ	0xFE9
 37458                           wreg	equ	0xFE8
 37459                           indf1	equ	0xFE7
 37460                           postdec1	equ	0xFE5
 37461                           plusw1	equ	0xFE3
 37462                           fsr1h	equ	0xFE2
 37463                           fsr1l	equ	0xFE1
 37464                           bsr	equ	0xFE0
 37465                           indf2	equ	0xFDF
 37466                           postinc2	equ	0xFDE
 37467                           postdec2	equ	0xFDD
 37468                           plusw2	equ	0xFDB
 37469                           fsr2h	equ	0xFDA
 37470                           fsr2l	equ	0xFD9
 37471                           status	equ	0xFD8
 37472                           
 37473 ;; *************** function _TMR6_ISR *****************
 37474 ;; Defined at:
 37475 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 37476 ;; Parameters:    Size  Location     Type
 37477 ;;		None
 37478 ;; Auto vars:     Size  Location     Type
 37479 ;;		None
 37480 ;; Return value:  Size  Location     Type
 37481 ;;                  1    wreg      void 
 37482 ;; Registers used:
 37483 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 37484 ;; Tracked objects:
 37485 ;;		On entry : 0/0
 37486 ;;		On exit  : 0/0
 37487 ;;		Unchanged: 0/0
 37488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37493 ;;Total ram usage:        0 bytes
 37494 ;; Hardware stack levels used:    1
 37495 ;; Hardware stack levels required when called:   10
 37496 ;; This function calls:
 37497 ;;		Absolute function
 37498 ;;		_TMR6_DefaultInterruptHandler
 37499 ;;		_heartbeatTimerCallback
 37500 ;; This function is called by:
 37501 ;;		_INTERRUPT_InterruptManagerLow
 37502 ;; This function uses a non-reentrant model
 37503 ;;
 37504                           
 37505                           	psect	text99
 37506  01AD92                     __ptext99:
 37507                           	opt stack 0
 37508  01AD92                     _TMR6_ISR:
 37509                           	opt stack 11
 37510                           
 37511                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 37512                           
 37513                           ; BSR set to: 15
 37514                           ;incstack = 0
 37515  01AD92  010E               	movlb	14	; () banked
 37516  01AD94  9B38               	bcf	56,5,b	;volatile
 37517                           
 37518                           ; BSR set to: 14
 37519                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 37520  01AD96  0102               	movlb	2	; () banked
 37521  01AD98  514A               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37522  01AD9A  114B               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37523  01AD9C  114C               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37524  01AD9E  B4D8               	btfsc	status,2,c
 37525  01ADA0  0012               	return	
 37526                           
 37527                           ; BSR set to: 2
 37528                           ;tmr6.c: 172: {
 37529                           ;tmr6.c: 173: TMR6_InterruptHandler();
 37530  01ADA2  D801               	call	i1u3337_28
 37531  01ADA4  0012               	return	
 37532  01ADA6                     i1u3337_28:
 37533  01ADA6  0005               	push	
 37534  01ADA8  6EFA               	movwf	pclath,c
 37535  01ADAA  514A               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37536  01ADAC  6EFD               	movwf	tosl,c
 37537  01ADAE  514B               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37538  01ADB0  6EFE               	movwf	tosh,c
 37539  01ADB2  514C               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37540  01ADB4  6EFF               	movwf	tosu,c
 37541  01ADB6  50FA               	movf	pclath,w,c
 37542  01ADB8  0012               	return		;indir
 37543  01ADBA                     __end_of_TMR6_ISR:
 37544                           	opt stack 0
 37545                           tosu	equ	0xFFF
 37546                           tosh	equ	0xFFE
 37547                           tosl	equ	0xFFD
 37548                           pclatu	equ	0xFFB
 37549                           pclath	equ	0xFFA
 37550                           tblptru	equ	0xFF8
 37551                           tblptrh	equ	0xFF7
 37552                           tblptrl	equ	0xFF6
 37553                           tablat	equ	0xFF5
 37554                           prodh	equ	0xFF4
 37555                           prodl	equ	0xFF3
 37556                           intcon	equ	0xFF2
 37557                           indf0	equ	0xFEF
 37558                           postinc0	equ	0xFEE
 37559                           fsr0h	equ	0xFEA
 37560                           fsr0l	equ	0xFE9
 37561                           wreg	equ	0xFE8
 37562                           indf1	equ	0xFE7
 37563                           postdec1	equ	0xFE5
 37564                           plusw1	equ	0xFE3
 37565                           fsr1h	equ	0xFE2
 37566                           fsr1l	equ	0xFE1
 37567                           bsr	equ	0xFE0
 37568                           indf2	equ	0xFDF
 37569                           postinc2	equ	0xFDE
 37570                           postdec2	equ	0xFDD
 37571                           plusw2	equ	0xFDB
 37572                           fsr2h	equ	0xFDA
 37573                           fsr2l	equ	0xFD9
 37574                           status	equ	0xFD8
 37575                           
 37576 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 37577 ;; Defined at:
 37578 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 37579 ;; Parameters:    Size  Location     Type
 37580 ;;		None
 37581 ;; Auto vars:     Size  Location     Type
 37582 ;;		None
 37583 ;; Return value:  Size  Location     Type
 37584 ;;                  1    wreg      void 
 37585 ;; Registers used:
 37586 ;;		None
 37587 ;; Tracked objects:
 37588 ;;		On entry : 0/0
 37589 ;;		On exit  : 0/0
 37590 ;;		Unchanged: 0/0
 37591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37596 ;;Total ram usage:        0 bytes
 37597 ;; Hardware stack levels used:    1
 37598 ;; Hardware stack levels required when called:    9
 37599 ;; This function calls:
 37600 ;;		Nothing
 37601 ;; This function is called by:
 37602 ;;		_TMR6_Initialize
 37603 ;;		_TMR6_ISR
 37604 ;; This function uses a non-reentrant model
 37605 ;;
 37606                           
 37607                           	psect	text100
 37608  01B1E8                     __ptext100:
 37609                           	opt stack 0
 37610  01B1E8                     _TMR6_DefaultInterruptHandler:
 37611                           	opt stack 11
 37612                           
 37613                           ;incstack = 0
 37614  01B1E8  0012               	return		;funcret
 37615  01B1EA                     __end_of_TMR6_DefaultInterruptHandler:
 37616                           	opt stack 0
 37617                           tosu	equ	0xFFF
 37618                           tosh	equ	0xFFE
 37619                           tosl	equ	0xFFD
 37620                           pclatu	equ	0xFFB
 37621                           pclath	equ	0xFFA
 37622                           tblptru	equ	0xFF8
 37623                           tblptrh	equ	0xFF7
 37624                           tblptrl	equ	0xFF6
 37625                           tablat	equ	0xFF5
 37626                           prodh	equ	0xFF4
 37627                           prodl	equ	0xFF3
 37628                           intcon	equ	0xFF2
 37629                           indf0	equ	0xFEF
 37630                           postinc0	equ	0xFEE
 37631                           fsr0h	equ	0xFEA
 37632                           fsr0l	equ	0xFE9
 37633                           wreg	equ	0xFE8
 37634                           indf1	equ	0xFE7
 37635                           postdec1	equ	0xFE5
 37636                           plusw1	equ	0xFE3
 37637                           fsr1h	equ	0xFE2
 37638                           fsr1l	equ	0xFE1
 37639                           bsr	equ	0xFE0
 37640                           indf2	equ	0xFDF
 37641                           postinc2	equ	0xFDE
 37642                           postdec2	equ	0xFDD
 37643                           plusw2	equ	0xFDB
 37644                           fsr2h	equ	0xFDA
 37645                           fsr2l	equ	0xFD9
 37646                           status	equ	0xFD8
 37647                           
 37648 ;; *************** function _heartbeatTimerCallback *****************
 37649 ;; Defined at:
 37650 ;;		line 210 in file "main.c"
 37651 ;; Parameters:    Size  Location     Type
 37652 ;;		None
 37653 ;; Auto vars:     Size  Location     Type
 37654 ;;		None
 37655 ;; Return value:  Size  Location     Type
 37656 ;;                  1    wreg      void 
 37657 ;; Registers used:
 37658 ;;		wreg, status,2, status,0
 37659 ;; Tracked objects:
 37660 ;;		On entry : 0/0
 37661 ;;		On exit  : 0/0
 37662 ;;		Unchanged: 0/0
 37663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37666 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37667 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37668 ;;Total ram usage:        1 bytes
 37669 ;; Hardware stack levels used:    1
 37670 ;; Hardware stack levels required when called:    9
 37671 ;; This function calls:
 37672 ;;		Nothing
 37673 ;; This function is called by:
 37674 ;;		_main
 37675 ;;		_TMR6_ISR
 37676 ;; This function uses a non-reentrant model
 37677 ;;
 37678                           
 37679                           	psect	text101
 37680  01A878                     __ptext101:
 37681                           	opt stack 0
 37682  01A878                     _heartbeatTimerCallback:
 37683                           	opt stack 11
 37684                           
 37685                           ;main.c: 213: LATFbits.LATF2 = !LATFbits.LATF2;
 37686                           
 37687                           ;incstack = 0
 37688  01A878  B47E               	btfsc	3966,2,c	;volatile
 37689  01A87A  D004               	goto	i1u1442_20
 37690  01A87C  0101               	movlb	1	; () banked
 37691  01A87E  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 37692  01A880  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 37693  01A882  D002               	goto	i1u1443_28
 37694  01A884                     i1u1442_20:
 37695  01A884  0101               	movlb	1	; () banked
 37696  01A886  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 37697  01A888                     i1u1443_28:
 37698  01A888  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 37699  01A88A  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 37700  01A88C  507E               	movf	3966,w,c	;volatile
 37701  01A88E  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 37702  01A890  0BFB               	andlw	-5
 37703  01A892  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 37704  01A894  6E7E               	movwf	3966,c	;volatile
 37705                           
 37706                           ;main.c: 216: dev_on_time++;
 37707  01A896  0E01               	movlw	1
 37708  01A898  0102               	movlb	2	; () banked
 37709  01A89A  2723               	addwf	_dev_on_time& (0+255),f,b	;volatile
 37710  01A89C  0E00               	movlw	0
 37711  01A89E  2324               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 37712  01A8A0  2325               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 37713  01A8A2  2326               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 37714                           
 37715                           ; BSR set to: 2
 37716                           ;main.c: 219: if (load_enable) {
 37717  01A8A4  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 37718  01A8A6  D006               	goto	i1l1326
 37719                           
 37720                           ; BSR set to: 2
 37721                           ;main.c: 221: load_on_time++;
 37722  01A8A8  0E01               	movlw	1
 37723  01A8AA  271F               	addwf	_load_on_time& (0+255),f,b	;volatile
 37724  01A8AC  0E00               	movlw	0
 37725  01A8AE  2320               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 37726  01A8B0  2321               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 37727  01A8B2  2322               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 37728  01A8B4                     i1l1326:
 37729                           
 37730                           ; BSR set to: 2
 37731  01A8B4  0004               	clrwdt		;# 
 37732  01A8B6  0012               	return		;funcret
 37733  01A8B8                     __end_of_heartbeatTimerCallback:
 37734                           	opt stack 0
 37735                           tosu	equ	0xFFF
 37736                           tosh	equ	0xFFE
 37737                           tosl	equ	0xFFD
 37738                           pclatu	equ	0xFFB
 37739                           pclath	equ	0xFFA
 37740                           tblptru	equ	0xFF8
 37741                           tblptrh	equ	0xFF7
 37742                           tblptrl	equ	0xFF6
 37743                           tablat	equ	0xFF5
 37744                           prodh	equ	0xFF4
 37745                           prodl	equ	0xFF3
 37746                           intcon	equ	0xFF2
 37747                           indf0	equ	0xFEF
 37748                           postinc0	equ	0xFEE
 37749                           fsr0h	equ	0xFEA
 37750                           fsr0l	equ	0xFE9
 37751                           wreg	equ	0xFE8
 37752                           indf1	equ	0xFE7
 37753                           postdec1	equ	0xFE5
 37754                           plusw1	equ	0xFE3
 37755                           fsr1h	equ	0xFE2
 37756                           fsr1l	equ	0xFE1
 37757                           bsr	equ	0xFE0
 37758                           indf2	equ	0xFDF
 37759                           postinc2	equ	0xFDE
 37760                           postdec2	equ	0xFDD
 37761                           plusw2	equ	0xFDB
 37762                           fsr2h	equ	0xFDA
 37763                           fsr2l	equ	0xFD9
 37764                           status	equ	0xFD8
 37765                           
 37766 ;; *************** function _EUSART2_Transmit_ISR *****************
 37767 ;; Defined at:
 37768 ;;		line 190 in file "mcc_generated_files/eusart2.c"
 37769 ;; Parameters:    Size  Location     Type
 37770 ;;		None
 37771 ;; Auto vars:     Size  Location     Type
 37772 ;;		None
 37773 ;; Return value:  Size  Location     Type
 37774 ;;                  1    wreg      void 
 37775 ;; Registers used:
 37776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37777 ;; Tracked objects:
 37778 ;;		On entry : 0/0
 37779 ;;		On exit  : 0/0
 37780 ;;		Unchanged: 0/0
 37781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37786 ;;Total ram usage:        0 bytes
 37787 ;; Hardware stack levels used:    1
 37788 ;; Hardware stack levels required when called:    9
 37789 ;; This function calls:
 37790 ;;		Nothing
 37791 ;; This function is called by:
 37792 ;;		_EUSART2_Initialize
 37793 ;;		_INTERRUPT_InterruptManagerLow
 37794 ;; This function uses a non-reentrant model
 37795 ;;
 37796                           
 37797                           	psect	text102
 37798  01ABB2                     __ptext102:
 37799                           	opt stack 0
 37800  01ABB2                     _EUSART2_Transmit_ISR:
 37801                           	opt stack 12
 37802                           
 37803                           ;eusart2.c: 194: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 37804                           
 37805                           ;incstack = 0
 37806  01ABB2  0E80               	movlw	128
 37807  01ABB4  0101               	movlb	1	; () banked
 37808  01ABB6  61DF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 37809  01ABB8  D014               	goto	i1l441
 37810                           
 37811                           ; BSR set to: 1
 37812                           ;eusart2.c: 195: {
 37813                           ;eusart2.c: 196: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 37814  01ABBA  51E0               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 37815  01ABBC  0D01               	mullw	1
 37816  01ABBE  0E00               	movlw	low _eusart2TxBuffer
 37817  01ABC0  24F3               	addwf	prodl,w,c
 37818  01ABC2  6ED9               	movwf	fsr2l,c
 37819  01ABC4  0E03               	movlw	high _eusart2TxBuffer
 37820  01ABC6  20F4               	addwfc	prodh,w,c
 37821  01ABC8  6EDA               	movwf	fsr2h,c
 37822  01ABCA  50DF               	movf	indf2,w,c
 37823  01ABCC  010E               	movlb	14	; () banked
 37824  01ABCE  6FF2               	movwf	242,b	;volatile
 37825                           
 37826                           ; BSR set to: 14
 37827  01ABD0  0101               	movlb	1	; () banked
 37828  01ABD2  2BE0               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 37829                           
 37830                           ; BSR set to: 1
 37831                           ;eusart2.c: 197: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 37832  01ABD4  0E7F               	movlw	127
 37833  01ABD6  65E0               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 37834  01ABD8  D002               	goto	i1l442
 37835                           
 37836                           ; BSR set to: 1
 37837                           ;eusart2.c: 198: {
 37838                           ;eusart2.c: 199: eusart2TxTail = 0;
 37839  01ABDA  0E00               	movlw	0
 37840  01ABDC  6FE0               	movwf	_eusart2TxTail& (0+255),b	;volatile
 37841  01ABDE                     i1l442:
 37842                           
 37843                           ; BSR set to: 1
 37844                           ;eusart2.c: 200: }
 37845                           ;eusart2.c: 201: eusart2TxBufferRemaining++;
 37846                           
 37847                           ; BSR set to: 1
 37848  01ABDE  2BDF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 37849                           
 37850                           ;eusart2.c: 202: }
 37851  01ABE0  0012               	return	
 37852  01ABE2                     i1l441:
 37853                           
 37854                           ; BSR set to: 1
 37855                           ;eusart2.c: 203: else
 37856                           ;eusart2.c: 204: {
 37857                           ;eusart2.c: 205: PIE3bits.TX2IE = 0;
 37858  01ABE2  010E               	movlb	14	; () banked
 37859  01ABE4  9D2C               	bcf	44,6,b	;volatile
 37860  01ABE6  0012               	return	
 37861  01ABE8                     __end_of_EUSART2_Transmit_ISR:
 37862                           	opt stack 0
 37863                           tosu	equ	0xFFF
 37864                           tosh	equ	0xFFE
 37865                           tosl	equ	0xFFD
 37866                           pclatu	equ	0xFFB
 37867                           pclath	equ	0xFFA
 37868                           tblptru	equ	0xFF8
 37869                           tblptrh	equ	0xFF7
 37870                           tblptrl	equ	0xFF6
 37871                           tablat	equ	0xFF5
 37872                           prodh	equ	0xFF4
 37873                           prodl	equ	0xFF3
 37874                           intcon	equ	0xFF2
 37875                           indf0	equ	0xFEF
 37876                           postinc0	equ	0xFEE
 37877                           fsr0h	equ	0xFEA
 37878                           fsr0l	equ	0xFE9
 37879                           wreg	equ	0xFE8
 37880                           indf1	equ	0xFE7
 37881                           postdec1	equ	0xFE5
 37882                           plusw1	equ	0xFE3
 37883                           fsr1h	equ	0xFE2
 37884                           fsr1l	equ	0xFE1
 37885                           bsr	equ	0xFE0
 37886                           indf2	equ	0xFDF
 37887                           postinc2	equ	0xFDE
 37888                           postdec2	equ	0xFDD
 37889                           plusw2	equ	0xFDB
 37890                           fsr2h	equ	0xFDA
 37891                           fsr2l	equ	0xFD9
 37892                           status	equ	0xFD8
 37893                           
 37894 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 37895 ;; Defined at:
 37896 ;;		line 95 in file "mcc_generated_files/interrupt_manager.c"
 37897 ;; Parameters:    Size  Location     Type
 37898 ;;		None
 37899 ;; Auto vars:     Size  Location     Type
 37900 ;;		None
 37901 ;; Return value:  Size  Location     Type
 37902 ;;                  1    wreg      void 
 37903 ;; Registers used:
 37904 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37905 ;; Tracked objects:
 37906 ;;		On entry : 0/0
 37907 ;;		On exit  : 0/0
 37908 ;;		Unchanged: 0/0
 37909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37912 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37913 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37914 ;;Total ram usage:       18 bytes
 37915 ;; Hardware stack levels used:    1
 37916 ;; Hardware stack levels required when called:    8
 37917 ;; This function calls:
 37918 ;;		Absolute function
 37919 ;;		_ADCC_ThresholdISR
 37920 ;;		_EUSART2_Receive_ISR
 37921 ;;		_HLVD_ISR
 37922 ;;		_I2C1_BusCollisionISR
 37923 ;;		_I2C1_ISR
 37924 ;;		_INT0_ISR
 37925 ;;		_TMR4_ISR
 37926 ;;		_TMR5_ISR
 37927 ;; This function is called by:
 37928 ;;		Interrupt level 2
 37929 ;; This function uses a non-reentrant model
 37930 ;;
 37931                           
 37932                           	psect	intcode
 37933  000008                     __pintcode:
 37934                           	opt stack 0
 37935  000008                     _INTERRUPT_InterruptManagerHigh:
 37936                           	opt stack 10
 37937                           
 37938                           ;incstack = 0
 37939  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 37940  00000A  EF0B  F0C8         	goto	int_func
 37941                           tosu	equ	0xFFF
 37942                           tosh	equ	0xFFE
 37943                           tosl	equ	0xFFD
 37944                           pclatu	equ	0xFFB
 37945                           pclath	equ	0xFFA
 37946                           tblptru	equ	0xFF8
 37947                           tblptrh	equ	0xFF7
 37948                           tblptrl	equ	0xFF6
 37949                           tablat	equ	0xFF5
 37950                           prodh	equ	0xFF4
 37951                           prodl	equ	0xFF3
 37952                           intcon	equ	0xFF2
 37953                           indf0	equ	0xFEF
 37954                           postinc0	equ	0xFEE
 37955                           fsr0h	equ	0xFEA
 37956                           fsr0l	equ	0xFE9
 37957                           wreg	equ	0xFE8
 37958                           indf1	equ	0xFE7
 37959                           postdec1	equ	0xFE5
 37960                           plusw1	equ	0xFE3
 37961                           fsr1h	equ	0xFE2
 37962                           fsr1l	equ	0xFE1
 37963                           bsr	equ	0xFE0
 37964                           indf2	equ	0xFDF
 37965                           postinc2	equ	0xFDE
 37966                           postdec2	equ	0xFDD
 37967                           plusw2	equ	0xFDB
 37968                           fsr2h	equ	0xFDA
 37969                           fsr2l	equ	0xFD9
 37970                           status	equ	0xFD8
 37971                           
 37972                           	psect	intcode_body
 37973  019016                     __pintcode_body:
 37974                           	opt stack 10
 37975  019016                     int_func:
 37976                           	opt stack 10
 37977  019016  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 37978  01901A  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 37979  01901E  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 37980  019022  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 37981  019026  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 37982  01902A  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 37983  01902E  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 37984  019032  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 37985  019036  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 37986  01903A  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 37987  01903E  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 37988  019042  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 37989  019046  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 37990  01904A  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 37991  01904E  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 37992  019052  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 37993  019056  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 37994  01905A  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 37995                           
 37996                           ;interrupt_manager.c: 98: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 37997  01905E  010E               	movlb	14	; () banked
 37998  019060  B32C               	btfsc	44,1,b	;volatile
 37999                           
 38000                           ; BSR set to: 14
 38001  019062  A336               	btfss	54,1,b	;volatile
 38002  019064  D003               	goto	i2l242
 38003                           
 38004                           ; BSR set to: 14
 38005                           ;interrupt_manager.c: 99: {
 38006                           ;interrupt_manager.c: 100: I2C1_BusCollisionISR();
 38007  019066  ECE2  F0D8         	call	_I2C1_BusCollisionISR	;wreg free
 38008                           
 38009                           ;interrupt_manager.c: 101: }
 38010  01906A  D033               	goto	i2l256
 38011  01906C                     i2l242:
 38012                           
 38013                           ; BSR set to: 14
 38014                           ;interrupt_manager.c: 102: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 38015  01906C  B12C               	btfsc	44,0,b	;volatile
 38016                           
 38017                           ; BSR set to: 14
 38018  01906E  A136               	btfss	54,0,b	;volatile
 38019  019070  D003               	goto	i2l244
 38020                           
 38021                           ; BSR set to: 14
 38022                           ;interrupt_manager.c: 103: {
 38023                           ;interrupt_manager.c: 104: I2C1_ISR();
 38024  019072  EC7B  F0BD         	call	_I2C1_ISR	;wreg free
 38025                           
 38026                           ;interrupt_manager.c: 105: }
 38027  019076  D02D               	goto	i2l256
 38028  019078                     i2l244:
 38029                           
 38030                           ; BSR set to: 14
 38031                           ;interrupt_manager.c: 106: else if(PIE5bits.TMR4IE == 1 && PIR5bits.TMR4IF == 1)
 38032  019078  B72E               	btfsc	46,3,b	;volatile
 38033                           
 38034                           ; BSR set to: 14
 38035  01907A  A738               	btfss	56,3,b	;volatile
 38036  01907C  D003               	goto	i2l246
 38037                           
 38038                           ; BSR set to: 14
 38039                           ;interrupt_manager.c: 107: {
 38040                           ;interrupt_manager.c: 108: TMR4_ISR();
 38041  01907E  EC17  F0D7         	call	_TMR4_ISR	;wreg free
 38042                           
 38043                           ;interrupt_manager.c: 109: }
 38044  019082  D027               	goto	i2l256
 38045  019084                     i2l246:
 38046                           
 38047                           ; BSR set to: 14
 38048                           ;interrupt_manager.c: 110: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 38049  019084  BF2B               	btfsc	43,7,b	;volatile
 38050                           
 38051                           ; BSR set to: 14
 38052  019086  AF35               	btfss	53,7,b	;volatile
 38053  019088  D003               	goto	i2l248
 38054                           
 38055                           ; BSR set to: 14
 38056                           ;interrupt_manager.c: 111: {
 38057                           ;interrupt_manager.c: 112: HLVD_ISR();
 38058  01908A  EC87  F0D5         	call	_HLVD_ISR	;wreg free
 38059                           
 38060                           ;interrupt_manager.c: 113: }
 38061  01908E  D021               	goto	i2l256
 38062  019090                     i2l248:
 38063                           
 38064                           ; BSR set to: 14
 38065                           ;interrupt_manager.c: 114: else if(PIE0bits.INT0IE == 1 && PIR0bits.INT0IF == 1)
 38066  019090  B129               	btfsc	41,0,b	;volatile
 38067                           
 38068                           ; BSR set to: 14
 38069  019092  A133               	btfss	51,0,b	;volatile
 38070  019094  D003               	goto	i2l250
 38071                           
 38072                           ; BSR set to: 14
 38073                           ;interrupt_manager.c: 115: {
 38074                           ;interrupt_manager.c: 116: INT0_ISR();
 38075  019096  ECCA  F0D8         	call	_INT0_ISR	;wreg free
 38076                           
 38077                           ;interrupt_manager.c: 117: }
 38078  01909A  D01B               	goto	i2l256
 38079  01909C                     i2l250:
 38080                           
 38081                           ; BSR set to: 14
 38082                           ;interrupt_manager.c: 118: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 38083  01909C  BF2C               	btfsc	44,7,b	;volatile
 38084                           
 38085                           ; BSR set to: 14
 38086  01909E  AF36               	btfss	54,7,b	;volatile
 38087  0190A0  D00D               	goto	i2l252
 38088                           
 38089                           ; BSR set to: 14
 38090                           ;interrupt_manager.c: 119: {
 38091                           ;interrupt_manager.c: 120: EUSART2_RxDefaultInterruptHandler();
 38092  0190A2  D801               	call	i2u3363_48
 38093  0190A4  D016               	goto	i2l256
 38094  0190A6                     i2u3363_48:
 38095  0190A6  0005               	push	
 38096  0190A8  6EFA               	movwf	pclath,c
 38097  0190AA  0102               	movlb	2	; () banked
 38098  0190AC  514D               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 38099  0190AE  6EFD               	movwf	tosl,c
 38100  0190B0  514E               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 38101  0190B2  6EFE               	movwf	tosh,c
 38102  0190B4  514F               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 38103  0190B6  6EFF               	movwf	tosu,c
 38104  0190B8  50FA               	movf	pclath,w,c
 38105  0190BA  0012               	return		;indir
 38106  0190BC                     i2l252:
 38107                           
 38108                           ; BSR set to: 14
 38109                           ;interrupt_manager.c: 122: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 38110  0190BC  B92E               	btfsc	46,4,b	;volatile
 38111                           
 38112                           ; BSR set to: 14
 38113  0190BE  A938               	btfss	56,4,b	;volatile
 38114  0190C0  D003               	goto	i2l254
 38115                           
 38116                           ; BSR set to: 14
 38117                           ;interrupt_manager.c: 123: {
 38118                           ;interrupt_manager.c: 124: TMR5_ISR();
 38119  0190C2  EC0E  F0D6         	call	_TMR5_ISR	;wreg free
 38120                           
 38121                           ;interrupt_manager.c: 125: }
 38122  0190C6  D005               	goto	i2l256
 38123  0190C8                     i2l254:
 38124                           
 38125                           ; BSR set to: 14
 38126                           ;interrupt_manager.c: 126: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 38127  0190C8  B32A               	btfsc	42,1,b	;volatile
 38128                           
 38129                           ; BSR set to: 14
 38130  0190CA  A334               	btfss	52,1,b	;volatile
 38131  0190CC  D002               	goto	i2l256
 38132                           
 38133                           ; BSR set to: 14
 38134                           ;interrupt_manager.c: 127: {
 38135                           ;interrupt_manager.c: 128: ADCC_ThresholdISR();
 38136  0190CE  ECDD  F0D6         	call	_ADCC_ThresholdISR	;wreg free
 38137  0190D2                     i2l256:
 38138                           
 38139                           ;interrupt_manager.c: 130: else
 38140                           ;interrupt_manager.c: 131: {
 38141  0190D2  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 38142  0190D6  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 38143  0190DA  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 38144  0190DE  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 38145  0190E2  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 38146  0190E6  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 38147  0190EA  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 38148  0190EE  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 38149  0190F2  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 38150  0190F6  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 38151  0190FA  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 38152  0190FE  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 38153  019102  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 38154  019106  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 38155  01910A  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 38156  01910E  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 38157  019112  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 38158  019116  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 38159  01911A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38160  01911C  0011               	retfie		f
 38161  01911E                     __end_of_INTERRUPT_InterruptManagerHigh:
 38162                           	opt stack 0
 38163                           tosu	equ	0xFFF
 38164                           tosh	equ	0xFFE
 38165                           tosl	equ	0xFFD
 38166                           pclatu	equ	0xFFB
 38167                           pclath	equ	0xFFA
 38168                           tblptru	equ	0xFF8
 38169                           tblptrh	equ	0xFF7
 38170                           tblptrl	equ	0xFF6
 38171                           tablat	equ	0xFF5
 38172                           prodh	equ	0xFF4
 38173                           prodl	equ	0xFF3
 38174                           intcon	equ	0xFF2
 38175                           indf0	equ	0xFEF
 38176                           postinc0	equ	0xFEE
 38177                           fsr0h	equ	0xFEA
 38178                           fsr0l	equ	0xFE9
 38179                           wreg	equ	0xFE8
 38180                           indf1	equ	0xFE7
 38181                           postdec1	equ	0xFE5
 38182                           plusw1	equ	0xFE3
 38183                           fsr1h	equ	0xFE2
 38184                           fsr1l	equ	0xFE1
 38185                           bsr	equ	0xFE0
 38186                           indf2	equ	0xFDF
 38187                           postinc2	equ	0xFDE
 38188                           postdec2	equ	0xFDD
 38189                           plusw2	equ	0xFDB
 38190                           fsr2h	equ	0xFDA
 38191                           fsr2l	equ	0xFD9
 38192                           status	equ	0xFD8
 38193                           
 38194 ;; *************** function _TMR5_ISR *****************
 38195 ;; Defined at:
 38196 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 38197 ;; Parameters:    Size  Location     Type
 38198 ;;		None
 38199 ;; Auto vars:     Size  Location     Type
 38200 ;;		None
 38201 ;; Return value:  Size  Location     Type
 38202 ;;                  1    wreg      void 
 38203 ;; Registers used:
 38204 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38205 ;; Tracked objects:
 38206 ;;		On entry : 0/0
 38207 ;;		On exit  : 0/0
 38208 ;;		Unchanged: 0/0
 38209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38214 ;;Total ram usage:        0 bytes
 38215 ;; Hardware stack levels used:    1
 38216 ;; Hardware stack levels required when called:    2
 38217 ;; This function calls:
 38218 ;;		Absolute function
 38219 ;;		_TMR5_DefaultInterruptHandler
 38220 ;;		_TMR5_WriteTimer
 38221 ;;		_dimmingOnTimeCallback
 38222 ;; This function is called by:
 38223 ;;		_INTERRUPT_InterruptManagerHigh
 38224 ;; This function uses a non-reentrant model
 38225 ;;
 38226                           
 38227                           	psect	text104
 38228  01AC1C                     __ptext104:
 38229                           	opt stack 0
 38230  01AC1C                     _TMR5_ISR:
 38231                           	opt stack 15
 38232                           
 38233                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 38234                           
 38235                           ;incstack = 0
 38236  01AC1C  010E               	movlb	14	; () banked
 38237  01AC1E  9938               	bcf	56,4,b	;volatile
 38238                           
 38239                           ; BSR set to: 14
 38240                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 38241  01AC20  C25D  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 38242  01AC24  C25E  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 38243  01AC28  ECDD  F0D7         	call	_TMR5_WriteTimer	;wreg free
 38244                           
 38245                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 38246  01AC2C  0102               	movlb	2	; () banked
 38247  01AC2E  5141               	movf	_TMR5_InterruptHandler& (0+255),w,b
 38248  01AC30  1142               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 38249  01AC32  1143               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 38250  01AC34  B4D8               	btfsc	status,2,c
 38251  01AC36  0012               	return	
 38252                           
 38253                           ; BSR set to: 2
 38254                           ;tmr5.c: 172: {
 38255                           ;tmr5.c: 173: TMR5_InterruptHandler();
 38256  01AC38  D801               	call	i2u3333_48
 38257  01AC3A  0012               	return	
 38258  01AC3C                     i2u3333_48:
 38259  01AC3C  0005               	push	
 38260  01AC3E  6EFA               	movwf	pclath,c
 38261  01AC40  5141               	movf	_TMR5_InterruptHandler& (0+255),w,b
 38262  01AC42  6EFD               	movwf	tosl,c
 38263  01AC44  5142               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 38264  01AC46  6EFE               	movwf	tosh,c
 38265  01AC48  5143               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 38266  01AC4A  6EFF               	movwf	tosu,c
 38267  01AC4C  50FA               	movf	pclath,w,c
 38268  01AC4E  0012               	return		;indir
 38269  01AC50                     __end_of_TMR5_ISR:
 38270                           	opt stack 0
 38271                           tosu	equ	0xFFF
 38272                           tosh	equ	0xFFE
 38273                           tosl	equ	0xFFD
 38274                           pclatu	equ	0xFFB
 38275                           pclath	equ	0xFFA
 38276                           tblptru	equ	0xFF8
 38277                           tblptrh	equ	0xFF7
 38278                           tblptrl	equ	0xFF6
 38279                           tablat	equ	0xFF5
 38280                           prodh	equ	0xFF4
 38281                           prodl	equ	0xFF3
 38282                           intcon	equ	0xFF2
 38283                           indf0	equ	0xFEF
 38284                           postinc0	equ	0xFEE
 38285                           fsr0h	equ	0xFEA
 38286                           fsr0l	equ	0xFE9
 38287                           wreg	equ	0xFE8
 38288                           indf1	equ	0xFE7
 38289                           postdec1	equ	0xFE5
 38290                           plusw1	equ	0xFE3
 38291                           fsr1h	equ	0xFE2
 38292                           fsr1l	equ	0xFE1
 38293                           bsr	equ	0xFE0
 38294                           indf2	equ	0xFDF
 38295                           postinc2	equ	0xFDE
 38296                           postdec2	equ	0xFDD
 38297                           plusw2	equ	0xFDB
 38298                           fsr2h	equ	0xFDA
 38299                           fsr2l	equ	0xFD9
 38300                           status	equ	0xFD8
 38301                           
 38302 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 38303 ;; Defined at:
 38304 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 38305 ;; Parameters:    Size  Location     Type
 38306 ;;		None
 38307 ;; Auto vars:     Size  Location     Type
 38308 ;;		None
 38309 ;; Return value:  Size  Location     Type
 38310 ;;                  1    wreg      void 
 38311 ;; Registers used:
 38312 ;;		None
 38313 ;; Tracked objects:
 38314 ;;		On entry : 0/0
 38315 ;;		On exit  : 0/0
 38316 ;;		Unchanged: 0/0
 38317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38322 ;;Total ram usage:        0 bytes
 38323 ;; Hardware stack levels used:    1
 38324 ;; This function calls:
 38325 ;;		Nothing
 38326 ;; This function is called by:
 38327 ;;		_TMR5_Initialize
 38328 ;;		_TMR5_ISR
 38329 ;; This function uses a non-reentrant model
 38330 ;;
 38331                           
 38332                           	psect	text105
 38333  01B1EA                     __ptext105:
 38334                           	opt stack 0
 38335  01B1EA                     _TMR5_DefaultInterruptHandler:
 38336                           	opt stack 16
 38337                           
 38338                           ;incstack = 0
 38339  01B1EA  0012               	return		;funcret
 38340  01B1EC                     __end_of_TMR5_DefaultInterruptHandler:
 38341                           	opt stack 0
 38342                           tosu	equ	0xFFF
 38343                           tosh	equ	0xFFE
 38344                           tosl	equ	0xFFD
 38345                           pclatu	equ	0xFFB
 38346                           pclath	equ	0xFFA
 38347                           tblptru	equ	0xFF8
 38348                           tblptrh	equ	0xFF7
 38349                           tblptrl	equ	0xFF6
 38350                           tablat	equ	0xFF5
 38351                           prodh	equ	0xFF4
 38352                           prodl	equ	0xFF3
 38353                           intcon	equ	0xFF2
 38354                           indf0	equ	0xFEF
 38355                           postinc0	equ	0xFEE
 38356                           fsr0h	equ	0xFEA
 38357                           fsr0l	equ	0xFE9
 38358                           wreg	equ	0xFE8
 38359                           indf1	equ	0xFE7
 38360                           postdec1	equ	0xFE5
 38361                           plusw1	equ	0xFE3
 38362                           fsr1h	equ	0xFE2
 38363                           fsr1l	equ	0xFE1
 38364                           bsr	equ	0xFE0
 38365                           indf2	equ	0xFDF
 38366                           postinc2	equ	0xFDE
 38367                           postdec2	equ	0xFDD
 38368                           plusw2	equ	0xFDB
 38369                           fsr2h	equ	0xFDA
 38370                           fsr2l	equ	0xFD9
 38371                           status	equ	0xFD8
 38372                           
 38373 ;; *************** function _dimmingOnTimeCallback *****************
 38374 ;; Defined at:
 38375 ;;		line 460 in file "main.c"
 38376 ;; Parameters:    Size  Location     Type
 38377 ;;		None
 38378 ;; Auto vars:     Size  Location     Type
 38379 ;;		None
 38380 ;; Return value:  Size  Location     Type
 38381 ;;                  1    wreg      void 
 38382 ;; Registers used:
 38383 ;;		cstack
 38384 ;; Tracked objects:
 38385 ;;		On entry : 0/0
 38386 ;;		On exit  : 0/0
 38387 ;;		Unchanged: 0/0
 38388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38393 ;;Total ram usage:        0 bytes
 38394 ;; Hardware stack levels used:    1
 38395 ;; Hardware stack levels required when called:    1
 38396 ;; This function calls:
 38397 ;;		i2_TMR5_StopTimer
 38398 ;; This function is called by:
 38399 ;;		_main
 38400 ;;		_TMR5_ISR
 38401 ;; This function uses a non-reentrant model
 38402 ;;
 38403                           
 38404                           	psect	text106
 38405  01B172                     __ptext106:
 38406                           	opt stack 0
 38407  01B172                     _dimmingOnTimeCallback:
 38408                           	opt stack 15
 38409                           
 38410                           ;main.c: 463: LATGbits.LATG1 = 1;
 38411                           
 38412                           ;incstack = 0
 38413  01B172  827F               	bsf	3967,1,c	;volatile
 38414                           
 38415                           ;main.c: 466: TMR5_StopTimer();
 38416  01B174  ECEC  F0D8         	call	i2_TMR5_StopTimer	;wreg free
 38417                           
 38418                           ;main.c: 469: PIE5bits.TMR5IE = 0;
 38419  01B178  010E               	movlb	14	; () banked
 38420  01B17A  992E               	bcf	46,4,b	;volatile
 38421                           
 38422                           ; BSR set to: 14
 38423  01B17C  0012               	return		;funcret
 38424  01B17E                     __end_of_dimmingOnTimeCallback:
 38425                           	opt stack 0
 38426                           tosu	equ	0xFFF
 38427                           tosh	equ	0xFFE
 38428                           tosl	equ	0xFFD
 38429                           pclatu	equ	0xFFB
 38430                           pclath	equ	0xFFA
 38431                           tblptru	equ	0xFF8
 38432                           tblptrh	equ	0xFF7
 38433                           tblptrl	equ	0xFF6
 38434                           tablat	equ	0xFF5
 38435                           prodh	equ	0xFF4
 38436                           prodl	equ	0xFF3
 38437                           intcon	equ	0xFF2
 38438                           indf0	equ	0xFEF
 38439                           postinc0	equ	0xFEE
 38440                           fsr0h	equ	0xFEA
 38441                           fsr0l	equ	0xFE9
 38442                           wreg	equ	0xFE8
 38443                           indf1	equ	0xFE7
 38444                           postdec1	equ	0xFE5
 38445                           plusw1	equ	0xFE3
 38446                           fsr1h	equ	0xFE2
 38447                           fsr1l	equ	0xFE1
 38448                           bsr	equ	0xFE0
 38449                           indf2	equ	0xFDF
 38450                           postinc2	equ	0xFDE
 38451                           postdec2	equ	0xFDD
 38452                           plusw2	equ	0xFDB
 38453                           fsr2h	equ	0xFDA
 38454                           fsr2l	equ	0xFD9
 38455                           status	equ	0xFD8
 38456                           
 38457 ;; *************** function i2_TMR5_StopTimer *****************
 38458 ;; Defined at:
 38459 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 38460 ;; Parameters:    Size  Location     Type
 38461 ;;		None
 38462 ;; Auto vars:     Size  Location     Type
 38463 ;;		None
 38464 ;; Return value:  Size  Location     Type
 38465 ;;                  1    wreg      void 
 38466 ;; Registers used:
 38467 ;;		None
 38468 ;; Tracked objects:
 38469 ;;		On entry : 0/0
 38470 ;;		On exit  : 0/0
 38471 ;;		Unchanged: 0/0
 38472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38477 ;;Total ram usage:        0 bytes
 38478 ;; Hardware stack levels used:    1
 38479 ;; This function calls:
 38480 ;;		Nothing
 38481 ;; This function is called by:
 38482 ;;		_dimmingOnTimeCallback
 38483 ;; This function uses a non-reentrant model
 38484 ;;
 38485                           
 38486                           	psect	text107
 38487  01B1D8                     __ptext107:
 38488                           	opt stack 0
 38489  01B1D8                     i2_TMR5_StopTimer:
 38490                           	opt stack 15
 38491                           
 38492                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 38493                           
 38494                           ; BSR set to: 14
 38495                           ;incstack = 0
 38496  01B1D8  90C3               	bcf	4035,0,c	;volatile
 38497  01B1DA  0012               	return		;funcret
 38498  01B1DC                     __end_ofi2_TMR5_StopTimer:
 38499                           	opt stack 0
 38500                           tosu	equ	0xFFF
 38501                           tosh	equ	0xFFE
 38502                           tosl	equ	0xFFD
 38503                           pclatu	equ	0xFFB
 38504                           pclath	equ	0xFFA
 38505                           tblptru	equ	0xFF8
 38506                           tblptrh	equ	0xFF7
 38507                           tblptrl	equ	0xFF6
 38508                           tablat	equ	0xFF5
 38509                           prodh	equ	0xFF4
 38510                           prodl	equ	0xFF3
 38511                           intcon	equ	0xFF2
 38512                           indf0	equ	0xFEF
 38513                           postinc0	equ	0xFEE
 38514                           fsr0h	equ	0xFEA
 38515                           fsr0l	equ	0xFE9
 38516                           wreg	equ	0xFE8
 38517                           indf1	equ	0xFE7
 38518                           postdec1	equ	0xFE5
 38519                           plusw1	equ	0xFE3
 38520                           fsr1h	equ	0xFE2
 38521                           fsr1l	equ	0xFE1
 38522                           bsr	equ	0xFE0
 38523                           indf2	equ	0xFDF
 38524                           postinc2	equ	0xFDE
 38525                           postdec2	equ	0xFDD
 38526                           plusw2	equ	0xFDB
 38527                           fsr2h	equ	0xFDA
 38528                           fsr2l	equ	0xFD9
 38529                           status	equ	0xFD8
 38530                           
 38531 ;; *************** function _TMR4_ISR *****************
 38532 ;; Defined at:
 38533 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 38534 ;; Parameters:    Size  Location     Type
 38535 ;;		None
 38536 ;; Auto vars:     Size  Location     Type
 38537 ;;		None
 38538 ;; Return value:  Size  Location     Type
 38539 ;;                  1    wreg      void 
 38540 ;; Registers used:
 38541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 38542 ;; Tracked objects:
 38543 ;;		On entry : 0/0
 38544 ;;		On exit  : 0/0
 38545 ;;		Unchanged: 0/0
 38546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38551 ;;Total ram usage:        0 bytes
 38552 ;; Hardware stack levels used:    1
 38553 ;; Hardware stack levels required when called:    4
 38554 ;; This function calls:
 38555 ;;		_TMR4_CallBack
 38556 ;; This function is called by:
 38557 ;;		_INTERRUPT_InterruptManagerHigh
 38558 ;; This function uses a non-reentrant model
 38559 ;;
 38560                           
 38561                           	psect	text108
 38562  01AE2E                     __ptext108:
 38563                           	opt stack 0
 38564  01AE2E                     _TMR4_ISR:
 38565                           	opt stack 13
 38566                           
 38567                           ;tmr4.c: 167: static volatile unsigned int CountCallBack = 0;
 38568                           ;tmr4.c: 170: PIR5bits.TMR4IF = 0;
 38569                           
 38570                           ;incstack = 0
 38571  01AE2E  010E               	movlb	14	; () banked
 38572  01AE30  9738               	bcf	56,3,b	;volatile
 38573                           
 38574                           ; BSR set to: 14
 38575                           ;tmr4.c: 173: if (++CountCallBack >= 8)
 38576  01AE32  0102               	movlb	2	; () banked
 38577  01AE34  4B5B               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 38578  01AE36  2B5C               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 38579  01AE38  515C               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 38580  01AE3A  E104               	bnz	i2u3331_40
 38581  01AE3C  0E08               	movlw	8
 38582  01AE3E  5D5B               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 38583  01AE40  A0D8               	btfss	status,0,c
 38584  01AE42  0012               	return	
 38585  01AE44                     i2u3331_40:
 38586                           
 38587                           ; BSR set to: 2
 38588                           ;tmr4.c: 174: {
 38589                           ;tmr4.c: 176: TMR4_CallBack();
 38590  01AE44  EC50  F0D7         	call	_TMR4_CallBack	;wreg free
 38591                           
 38592                           ;tmr4.c: 179: CountCallBack = 0;
 38593  01AE48  0E00               	movlw	0
 38594  01AE4A  0102               	movlb	2	; () banked
 38595  01AE4C  6F5C               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 38596  01AE4E  0E00               	movlw	0
 38597  01AE50  6F5B               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 38598  01AE52  0012               	return	
 38599  01AE54                     __end_of_TMR4_ISR:
 38600                           	opt stack 0
 38601                           tosu	equ	0xFFF
 38602                           tosh	equ	0xFFE
 38603                           tosl	equ	0xFFD
 38604                           pclatu	equ	0xFFB
 38605                           pclath	equ	0xFFA
 38606                           tblptru	equ	0xFF8
 38607                           tblptrh	equ	0xFF7
 38608                           tblptrl	equ	0xFF6
 38609                           tablat	equ	0xFF5
 38610                           prodh	equ	0xFF4
 38611                           prodl	equ	0xFF3
 38612                           intcon	equ	0xFF2
 38613                           indf0	equ	0xFEF
 38614                           postinc0	equ	0xFEE
 38615                           fsr0h	equ	0xFEA
 38616                           fsr0l	equ	0xFE9
 38617                           wreg	equ	0xFE8
 38618                           indf1	equ	0xFE7
 38619                           postdec1	equ	0xFE5
 38620                           plusw1	equ	0xFE3
 38621                           fsr1h	equ	0xFE2
 38622                           fsr1l	equ	0xFE1
 38623                           bsr	equ	0xFE0
 38624                           indf2	equ	0xFDF
 38625                           postinc2	equ	0xFDE
 38626                           postdec2	equ	0xFDD
 38627                           plusw2	equ	0xFDB
 38628                           fsr2h	equ	0xFDA
 38629                           fsr2l	equ	0xFD9
 38630                           status	equ	0xFD8
 38631                           
 38632 ;; *************** function _TMR4_CallBack *****************
 38633 ;; Defined at:
 38634 ;;		line 183 in file "mcc_generated_files/tmr4.c"
 38635 ;; Parameters:    Size  Location     Type
 38636 ;;		None
 38637 ;; Auto vars:     Size  Location     Type
 38638 ;;		None
 38639 ;; Return value:  Size  Location     Type
 38640 ;;                  1    wreg      void 
 38641 ;; Registers used:
 38642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 38643 ;; Tracked objects:
 38644 ;;		On entry : 0/0
 38645 ;;		On exit  : 0/0
 38646 ;;		Unchanged: 0/0
 38647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38652 ;;Total ram usage:        0 bytes
 38653 ;; Hardware stack levels used:    1
 38654 ;; Hardware stack levels required when called:    3
 38655 ;; This function calls:
 38656 ;;		Absolute function
 38657 ;;		_TMR4_DefaultInterruptHandler
 38658 ;;		_writeEnergyToEEPROMCallback
 38659 ;; This function is called by:
 38660 ;;		_TMR4_ISR
 38661 ;; This function uses a non-reentrant model
 38662 ;;
 38663                           
 38664                           	psect	text109
 38665  01AEA0                     __ptext109:
 38666                           	opt stack 0
 38667  01AEA0                     _TMR4_CallBack:
 38668                           	opt stack 13
 38669                           
 38670                           ;tmr4.c: 187: if(TMR4_InterruptHandler)
 38671                           
 38672                           ; BSR set to: 2
 38673                           ;incstack = 0
 38674  01AEA0  0102               	movlb	2	; () banked
 38675  01AEA2  513B               	movf	_TMR4_InterruptHandler& (0+255),w,b
 38676  01AEA4  113C               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 38677  01AEA6  113D               	iorwf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 38678  01AEA8  B4D8               	btfsc	status,2,c
 38679  01AEAA  0012               	return	
 38680                           
 38681                           ; BSR set to: 2
 38682                           ;tmr4.c: 188: {
 38683                           ;tmr4.c: 189: TMR4_InterruptHandler();
 38684  01AEAC  D801               	call	i2u3271_48
 38685  01AEAE  0012               	return	
 38686  01AEB0                     i2u3271_48:
 38687  01AEB0  0005               	push	
 38688  01AEB2  6EFA               	movwf	pclath,c
 38689  01AEB4  513B               	movf	_TMR4_InterruptHandler& (0+255),w,b
 38690  01AEB6  6EFD               	movwf	tosl,c
 38691  01AEB8  513C               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 38692  01AEBA  6EFE               	movwf	tosh,c
 38693  01AEBC  513D               	movf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 38694  01AEBE  6EFF               	movwf	tosu,c
 38695  01AEC0  50FA               	movf	pclath,w,c
 38696  01AEC2  0012               	return		;indir
 38697  01AEC4                     __end_of_TMR4_CallBack:
 38698                           	opt stack 0
 38699                           tosu	equ	0xFFF
 38700                           tosh	equ	0xFFE
 38701                           tosl	equ	0xFFD
 38702                           pclatu	equ	0xFFB
 38703                           pclath	equ	0xFFA
 38704                           tblptru	equ	0xFF8
 38705                           tblptrh	equ	0xFF7
 38706                           tblptrl	equ	0xFF6
 38707                           tablat	equ	0xFF5
 38708                           prodh	equ	0xFF4
 38709                           prodl	equ	0xFF3
 38710                           intcon	equ	0xFF2
 38711                           indf0	equ	0xFEF
 38712                           postinc0	equ	0xFEE
 38713                           fsr0h	equ	0xFEA
 38714                           fsr0l	equ	0xFE9
 38715                           wreg	equ	0xFE8
 38716                           indf1	equ	0xFE7
 38717                           postdec1	equ	0xFE5
 38718                           plusw1	equ	0xFE3
 38719                           fsr1h	equ	0xFE2
 38720                           fsr1l	equ	0xFE1
 38721                           bsr	equ	0xFE0
 38722                           indf2	equ	0xFDF
 38723                           postinc2	equ	0xFDE
 38724                           postdec2	equ	0xFDD
 38725                           plusw2	equ	0xFDB
 38726                           fsr2h	equ	0xFDA
 38727                           fsr2l	equ	0xFD9
 38728                           status	equ	0xFD8
 38729                           
 38730 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 38731 ;; Defined at:
 38732 ;;		line 197 in file "mcc_generated_files/tmr4.c"
 38733 ;; Parameters:    Size  Location     Type
 38734 ;;		None
 38735 ;; Auto vars:     Size  Location     Type
 38736 ;;		None
 38737 ;; Return value:  Size  Location     Type
 38738 ;;                  1    wreg      void 
 38739 ;; Registers used:
 38740 ;;		None
 38741 ;; Tracked objects:
 38742 ;;		On entry : 0/0
 38743 ;;		On exit  : 0/0
 38744 ;;		Unchanged: 0/0
 38745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38750 ;;Total ram usage:        0 bytes
 38751 ;; Hardware stack levels used:    1
 38752 ;; This function calls:
 38753 ;;		Nothing
 38754 ;; This function is called by:
 38755 ;;		_TMR4_Initialize
 38756 ;;		_TMR4_CallBack
 38757 ;; This function uses a non-reentrant model
 38758 ;;
 38759                           
 38760                           	psect	text110
 38761  01B1EC                     __ptext110:
 38762                           	opt stack 0
 38763  01B1EC                     _TMR4_DefaultInterruptHandler:
 38764                           	opt stack 15
 38765                           
 38766                           ;incstack = 0
 38767  01B1EC  0012               	return		;funcret
 38768  01B1EE                     __end_of_TMR4_DefaultInterruptHandler:
 38769                           	opt stack 0
 38770                           tosu	equ	0xFFF
 38771                           tosh	equ	0xFFE
 38772                           tosl	equ	0xFFD
 38773                           pclatu	equ	0xFFB
 38774                           pclath	equ	0xFFA
 38775                           tblptru	equ	0xFF8
 38776                           tblptrh	equ	0xFF7
 38777                           tblptrl	equ	0xFF6
 38778                           tablat	equ	0xFF5
 38779                           prodh	equ	0xFF4
 38780                           prodl	equ	0xFF3
 38781                           intcon	equ	0xFF2
 38782                           indf0	equ	0xFEF
 38783                           postinc0	equ	0xFEE
 38784                           fsr0h	equ	0xFEA
 38785                           fsr0l	equ	0xFE9
 38786                           wreg	equ	0xFE8
 38787                           indf1	equ	0xFE7
 38788                           postdec1	equ	0xFE5
 38789                           plusw1	equ	0xFE3
 38790                           fsr1h	equ	0xFE2
 38791                           fsr1l	equ	0xFE1
 38792                           bsr	equ	0xFE0
 38793                           indf2	equ	0xFDF
 38794                           postinc2	equ	0xFDE
 38795                           postdec2	equ	0xFDD
 38796                           plusw2	equ	0xFDB
 38797                           fsr2h	equ	0xFDA
 38798                           fsr2l	equ	0xFD9
 38799                           status	equ	0xFD8
 38800                           
 38801 ;; *************** function _writeEnergyToEEPROMCallback *****************
 38802 ;; Defined at:
 38803 ;;		line 477 in file "main.c"
 38804 ;; Parameters:    Size  Location     Type
 38805 ;;		None
 38806 ;; Auto vars:     Size  Location     Type
 38807 ;;  current_valu    4   63[COMRAM] void 
 38808 ;; Return value:  Size  Location     Type
 38809 ;;                  1    wreg      void 
 38810 ;; Registers used:
 38811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38812 ;; Tracked objects:
 38813 ;;		On entry : 0/0
 38814 ;;		On exit  : 0/0
 38815 ;;		Unchanged: 0/0
 38816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38818 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38820 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38821 ;;Total ram usage:        4 bytes
 38822 ;; Hardware stack levels used:    1
 38823 ;; Hardware stack levels required when called:    2
 38824 ;; This function calls:
 38825 ;;		i2___flge
 38826 ;;		i2_readDoubleFromEEPROM
 38827 ;;		i2_writeDoubleToEEPROM
 38828 ;; This function is called by:
 38829 ;;		_main
 38830 ;;		_TMR4_CallBack
 38831 ;; This function uses a non-reentrant model
 38832 ;;
 38833                           
 38834                           	psect	text111
 38835  019C24                     __ptext111:
 38836                           	opt stack 0
 38837  019C24                     _writeEnergyToEEPROMCallback:
 38838                           	opt stack 13
 38839                           
 38840                           ;main.c: 479: double current_value = readDoubleFromEEPROM(Total_Energy_address);
 38841                           
 38842                           ;incstack = 0
 38843  019C24  0E09               	movlw	low _Total_Energy_address
 38844  019C26  6EF6               	movwf	tblptrl,c
 38845  019C28                     	if	1	;There is more than 1 active tblptr byte
 38846  019C28  0ED0               	movlw	high _Total_Energy_address
 38847  019C2A  6EF7               	movwf	tblptrh,c
 38848  019C2C                     	endif
 38849  019C2C                     	if	1	;There are 3 active tblptr bytes
 38850  019C2C  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 38851  019C2E  6EF8               	movwf	tblptru,c
 38852  019C30                     	endif
 38853  019C30  0009               	tblrd		*+
 38854  019C32  CFF5 F003          	movff	tablat,i2readDoubleFromEEPROM@starting_address
 38855  019C36  000A               	tblrd		*-
 38856  019C38  CFF5 F004          	movff	tablat,i2readDoubleFromEEPROM@starting_address+1
 38857  019C3C  EC8E  F0D2         	call	i2_readDoubleFromEEPROM	;wreg free
 38858  019C40  C003  F040         	movff	?i2_readDoubleFromEEPROM,writeEnergyToEEPROMCallback@current_value
 38859  019C44  C004  F041         	movff	?i2_readDoubleFromEEPROM+1,writeEnergyToEEPROMCallback@current_value+1
 38860  019C48  C005  F042         	movff	?i2_readDoubleFromEEPROM+2,writeEnergyToEEPROMCallback@current_value+2
 38861  019C4C  C006  F043         	movff	?i2_readDoubleFromEEPROM+3,writeEnergyToEEPROMCallback@current_value+3
 38862                           
 38863                           ;main.c: 481: if (Total_Energy > current_value) {
 38864  019C50  C040  F034         	movff	writeEnergyToEEPROMCallback@current_value,i2___flge@ff1
 38865  019C54  C041  F035         	movff	writeEnergyToEEPROMCallback@current_value+1,i2___flge@ff1+1
 38866  019C58  C042  F036         	movff	writeEnergyToEEPROMCallback@current_value+2,i2___flge@ff1+2
 38867  019C5C  C043  F037         	movff	writeEnergyToEEPROMCallback@current_value+3,i2___flge@ff1+3
 38868  019C60  C0F0  F038         	movff	_Total_Energy,i2___flge@ff2	;volatile
 38869  019C64  C0F1  F039         	movff	_Total_Energy+1,i2___flge@ff2+1	;volatile
 38870  019C68  C0F2  F03A         	movff	_Total_Energy+2,i2___flge@ff2+2	;volatile
 38871  019C6C  C0F3  F03B         	movff	_Total_Energy+3,i2___flge@ff2+3	;volatile
 38872  019C70  ECF2  F0C6         	call	i2___flge	;wreg free
 38873  019C74  B0D8               	btfsc	status,0,c
 38874  019C76  0012               	return	
 38875                           
 38876                           ;main.c: 483: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 38877  019C78  C0F0  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 38878  019C7C  C0F1  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 38879  019C80  C0F2  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 38880  019C84  C0F3  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 38881  019C88  0E09               	movlw	low _Total_Energy_address
 38882  019C8A  6EF6               	movwf	tblptrl,c
 38883  019C8C                     	if	1	;There is more than 1 active tblptr byte
 38884  019C8C  0ED0               	movlw	high _Total_Energy_address
 38885  019C8E  6EF7               	movwf	tblptrh,c
 38886  019C90                     	endif
 38887  019C90                     	if	1	;There are 3 active tblptr bytes
 38888  019C90  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 38889  019C92  6EF8               	movwf	tblptru,c
 38890  019C94                     	endif
 38891  019C94  0009               	tblrd		*+
 38892  019C96  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 38893  019C9A  000A               	tblrd		*-
 38894  019C9C  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 38895  019CA0  ECDB  F0D2         	call	i2_writeDoubleToEEPROM	;wreg free
 38896  019CA4  0012               	return	
 38897  019CA6                     __end_of_writeEnergyToEEPROMCallback:
 38898                           	opt stack 0
 38899                           tosu	equ	0xFFF
 38900                           tosh	equ	0xFFE
 38901                           tosl	equ	0xFFD
 38902                           pclatu	equ	0xFFB
 38903                           pclath	equ	0xFFA
 38904                           tblptru	equ	0xFF8
 38905                           tblptrh	equ	0xFF7
 38906                           tblptrl	equ	0xFF6
 38907                           tablat	equ	0xFF5
 38908                           prodh	equ	0xFF4
 38909                           prodl	equ	0xFF3
 38910                           intcon	equ	0xFF2
 38911                           indf0	equ	0xFEF
 38912                           postinc0	equ	0xFEE
 38913                           fsr0h	equ	0xFEA
 38914                           fsr0l	equ	0xFE9
 38915                           wreg	equ	0xFE8
 38916                           indf1	equ	0xFE7
 38917                           postdec1	equ	0xFE5
 38918                           plusw1	equ	0xFE3
 38919                           fsr1h	equ	0xFE2
 38920                           fsr1l	equ	0xFE1
 38921                           bsr	equ	0xFE0
 38922                           indf2	equ	0xFDF
 38923                           postinc2	equ	0xFDE
 38924                           postdec2	equ	0xFDD
 38925                           plusw2	equ	0xFDB
 38926                           fsr2h	equ	0xFDA
 38927                           fsr2l	equ	0xFD9
 38928                           status	equ	0xFD8
 38929                           
 38930 ;; *************** function i2_readDoubleFromEEPROM *****************
 38931 ;; Defined at:
 38932 ;;		line 22 in file "double_to_EEPROM.c"
 38933 ;; Parameters:    Size  Location     Type
 38934 ;;  starting_add    2    2[COMRAM] unsigned int 
 38935 ;; Auto vars:     Size  Location     Type
 38936 ;;  readDoubleFr    4    6[COMRAM] struct .
 38937 ;;  readDoubleFr    2   10[COMRAM] int 
 38938 ;; Return value:  Size  Location     Type
 38939 ;;                  4    2[COMRAM] int 
 38940 ;; Registers used:
 38941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38942 ;; Tracked objects:
 38943 ;;		On entry : 0/0
 38944 ;;		On exit  : 0/0
 38945 ;;		Unchanged: 0/0
 38946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38948 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38950 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38951 ;;Total ram usage:       10 bytes
 38952 ;; Hardware stack levels used:    1
 38953 ;; Hardware stack levels required when called:    1
 38954 ;; This function calls:
 38955 ;;		i2_DATAEE_ReadByte
 38956 ;; This function is called by:
 38957 ;;		_writeEnergyToEEPROMCallback
 38958 ;; This function uses a non-reentrant model
 38959 ;;
 38960                           
 38961                           	psect	text112
 38962  01A51C                     __ptext112:
 38963                           	opt stack 0
 38964  01A51C                     i2_readDoubleFromEEPROM:
 38965                           	opt stack 13
 38966                           
 38967                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 38968                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 38969                           
 38970                           ;incstack = 0
 38971  01A51C  0E00               	movlw	0
 38972  01A51E  6E0C               	movwf	i2readDoubleFromEEPROM@byte_index+1,c
 38973  01A520  0E00               	movlw	0
 38974  01A522  6E0B               	movwf	i2readDoubleFromEEPROM@byte_index,c
 38975  01A524  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 38976  01A526  E118               	bnz	i2l1787
 38977  01A528  D013               	goto	L17
 38978  01A52A                     
 38979                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 38980  01A52A  0E07               	movlw	low i2readDoubleFromEEPROM@output_data
 38981  01A52C  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 38982  01A52E  6ED9               	movwf	fsr2l,c
 38983  01A530  0E00               	movlw	high i2readDoubleFromEEPROM@output_data
 38984  01A532  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 38985  01A534  6EDA               	movwf	fsr2h,c
 38986  01A536  5003               	movf	i2readDoubleFromEEPROM@starting_address,w,c
 38987  01A538  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 38988  01A53A  6E01               	movwf	i2DATAEE_ReadByte@bAdd,c
 38989  01A53C  5004               	movf	i2readDoubleFromEEPROM@starting_address+1,w,c
 38990  01A53E  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 38991  01A540  6E02               	movwf	i2DATAEE_ReadByte@bAdd+1,c
 38992  01A542  EC12  F0D8         	call	i2_DATAEE_ReadByte	;wreg free
 38993  01A546  6EDF               	movwf	indf2,c
 38994  01A548  4A0B               	infsnz	i2readDoubleFromEEPROM@byte_index,f,c
 38995  01A54A  2A0C               	incf	i2readDoubleFromEEPROM@byte_index+1,f,c
 38996  01A54C  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 38997  01A54E  E104               	bnz	i2u1235_40
 38998  01A550                     L17:
 38999  01A550  0E04               	movlw	4
 39000  01A552  5C0B               	subwf	i2readDoubleFromEEPROM@byte_index,w,c
 39001  01A554  A0D8               	btfss	status,0,c
 39002  01A556  D7E9               	goto	i2l1786
 39003  01A558                     i2u1235_40:
 39004  01A558                     i2l1787:
 39005                           
 39006                           ;double_to_EEPROM.c: 32: }
 39007                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 39008  01A558  C007  F003         	movff	i2readDoubleFromEEPROM@output_data,?i2_readDoubleFromEEPROM
 39009  01A55C  C008  F004         	movff	i2readDoubleFromEEPROM@output_data+1,?i2_readDoubleFromEEPROM+1
 39010  01A560  C009  F005         	movff	i2readDoubleFromEEPROM@output_data+2,?i2_readDoubleFromEEPROM+2
 39011  01A564  C00A  F006         	movff	i2readDoubleFromEEPROM@output_data+3,?i2_readDoubleFromEEPROM+3
 39012  01A568  0012               	return		;funcret
 39013  01A56A                     __end_ofi2_readDoubleFromEEPROM:
 39014                           	opt stack 0
 39015                           tosu	equ	0xFFF
 39016                           tosh	equ	0xFFE
 39017                           tosl	equ	0xFFD
 39018                           pclatu	equ	0xFFB
 39019                           pclath	equ	0xFFA
 39020                           tblptru	equ	0xFF8
 39021                           tblptrh	equ	0xFF7
 39022                           tblptrl	equ	0xFF6
 39023                           tablat	equ	0xFF5
 39024                           prodh	equ	0xFF4
 39025                           prodl	equ	0xFF3
 39026                           intcon	equ	0xFF2
 39027                           indf0	equ	0xFEF
 39028                           postinc0	equ	0xFEE
 39029                           fsr0h	equ	0xFEA
 39030                           fsr0l	equ	0xFE9
 39031                           wreg	equ	0xFE8
 39032                           indf1	equ	0xFE7
 39033                           postdec1	equ	0xFE5
 39034                           plusw1	equ	0xFE3
 39035                           fsr1h	equ	0xFE2
 39036                           fsr1l	equ	0xFE1
 39037                           bsr	equ	0xFE0
 39038                           indf2	equ	0xFDF
 39039                           postinc2	equ	0xFDE
 39040                           postdec2	equ	0xFDD
 39041                           plusw2	equ	0xFDB
 39042                           fsr2h	equ	0xFDA
 39043                           fsr2l	equ	0xFD9
 39044                           status	equ	0xFD8
 39045                           
 39046 ;; *************** function i2_DATAEE_ReadByte *****************
 39047 ;; Defined at:
 39048 ;;		line 190 in file "mcc_generated_files/memory.c"
 39049 ;; Parameters:    Size  Location     Type
 39050 ;;  bAdd            2    0[COMRAM] unsigned int 
 39051 ;; Auto vars:     Size  Location     Type
 39052 ;;		None
 39053 ;; Return value:  Size  Location     Type
 39054 ;;                  1    wreg      unsigned char 
 39055 ;; Registers used:
 39056 ;;		wreg, status,2, status,0
 39057 ;; Tracked objects:
 39058 ;;		On entry : 0/0
 39059 ;;		On exit  : 0/0
 39060 ;;		Unchanged: 0/0
 39061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39066 ;;Total ram usage:        2 bytes
 39067 ;; Hardware stack levels used:    1
 39068 ;; This function calls:
 39069 ;;		Nothing
 39070 ;; This function is called by:
 39071 ;;		i2_readDoubleFromEEPROM
 39072 ;; This function uses a non-reentrant model
 39073 ;;
 39074                           
 39075                           	psect	text113
 39076  01B024                     __ptext113:
 39077                           	opt stack 0
 39078  01B024                     i2_DATAEE_ReadByte:
 39079                           	opt stack 13
 39080                           
 39081                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 39082                           
 39083                           ;incstack = 0
 39084  01B024  5002               	movf	i2DATAEE_ReadByte@bAdd+1,w,c
 39085  01B026  0B03               	andlw	3
 39086  01B028  6E75               	movwf	3957,c	;volatile
 39087                           
 39088                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 39089  01B02A  C001  FF74         	movff	i2DATAEE_ReadByte@bAdd,3956	;volatile
 39090                           
 39091                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 39092  01B02E  0E3F               	movlw	-193
 39093  01B030  1677               	andwf	3959,f,c	;volsfr
 39094                           
 39095                           ;memory.c: 195: NVMCON1bits.RD = 1;
 39096  01B032  8077               	bsf	3959,0,c	;volsfr
 39097                           
 39098                           ;memory.c: 196: __nop();
 39099  01B034  F000               	nop	
 39100                           
 39101                           ;memory.c: 197: __nop();
 39102  01B036  F000               	nop	
 39103                           
 39104                           ;memory.c: 199: return (NVMDAT);
 39105  01B038  5076               	movf	3958,w,c	;volatile
 39106  01B03A  0012               	return	
 39107  01B03C                     __end_ofi2_DATAEE_ReadByte:
 39108                           	opt stack 0
 39109                           tosu	equ	0xFFF
 39110                           tosh	equ	0xFFE
 39111                           tosl	equ	0xFFD
 39112                           pclatu	equ	0xFFB
 39113                           pclath	equ	0xFFA
 39114                           tblptru	equ	0xFF8
 39115                           tblptrh	equ	0xFF7
 39116                           tblptrl	equ	0xFF6
 39117                           tablat	equ	0xFF5
 39118                           prodh	equ	0xFF4
 39119                           prodl	equ	0xFF3
 39120                           intcon	equ	0xFF2
 39121                           indf0	equ	0xFEF
 39122                           postinc0	equ	0xFEE
 39123                           fsr0h	equ	0xFEA
 39124                           fsr0l	equ	0xFE9
 39125                           wreg	equ	0xFE8
 39126                           indf1	equ	0xFE7
 39127                           postdec1	equ	0xFE5
 39128                           plusw1	equ	0xFE3
 39129                           fsr1h	equ	0xFE2
 39130                           fsr1l	equ	0xFE1
 39131                           bsr	equ	0xFE0
 39132                           indf2	equ	0xFDF
 39133                           postinc2	equ	0xFDE
 39134                           postdec2	equ	0xFDD
 39135                           plusw2	equ	0xFDB
 39136                           fsr2h	equ	0xFDA
 39137                           fsr2l	equ	0xFD9
 39138                           status	equ	0xFD8
 39139                           
 39140 ;; *************** function _INT0_ISR *****************
 39141 ;; Defined at:
 39142 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 39143 ;; Parameters:    Size  Location     Type
 39144 ;;		None
 39145 ;; Auto vars:     Size  Location     Type
 39146 ;;		None
 39147 ;; Return value:  Size  Location     Type
 39148 ;;                  1    wreg      void 
 39149 ;; Registers used:
 39150 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39151 ;; Tracked objects:
 39152 ;;		On entry : 0/0
 39153 ;;		On exit  : 0/0
 39154 ;;		Unchanged: 0/0
 39155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39160 ;;Total ram usage:        0 bytes
 39161 ;; Hardware stack levels used:    1
 39162 ;; Hardware stack levels required when called:    3
 39163 ;; This function calls:
 39164 ;;		_INT0_CallBack
 39165 ;; This function is called by:
 39166 ;;		_INTERRUPT_InterruptManagerHigh
 39167 ;; This function uses a non-reentrant model
 39168 ;;
 39169                           
 39170                           	psect	text114
 39171  01B194                     __ptext114:
 39172                           	opt stack 0
 39173  01B194                     _INT0_ISR:
 39174                           	opt stack 14
 39175                           
 39176                           ;ext_int.c: 34: (PIR0bits.INT0IF = 0);
 39177                           
 39178                           ;incstack = 0
 39179  01B194  010E               	movlb	14	; () banked
 39180  01B196  9133               	bcf	51,0,b	;volatile
 39181                           
 39182                           ; BSR set to: 14
 39183                           ;ext_int.c: 37: INT0_CallBack();
 39184  01B198  EC62  F0D7         	call	_INT0_CallBack	;wreg free
 39185  01B19C  0012               	return		;funcret
 39186  01B19E                     __end_of_INT0_ISR:
 39187                           	opt stack 0
 39188                           tosu	equ	0xFFF
 39189                           tosh	equ	0xFFE
 39190                           tosl	equ	0xFFD
 39191                           pclatu	equ	0xFFB
 39192                           pclath	equ	0xFFA
 39193                           tblptru	equ	0xFF8
 39194                           tblptrh	equ	0xFF7
 39195                           tblptrl	equ	0xFF6
 39196                           tablat	equ	0xFF5
 39197                           prodh	equ	0xFF4
 39198                           prodl	equ	0xFF3
 39199                           intcon	equ	0xFF2
 39200                           indf0	equ	0xFEF
 39201                           postinc0	equ	0xFEE
 39202                           fsr0h	equ	0xFEA
 39203                           fsr0l	equ	0xFE9
 39204                           wreg	equ	0xFE8
 39205                           indf1	equ	0xFE7
 39206                           postdec1	equ	0xFE5
 39207                           plusw1	equ	0xFE3
 39208                           fsr1h	equ	0xFE2
 39209                           fsr1l	equ	0xFE1
 39210                           bsr	equ	0xFE0
 39211                           indf2	equ	0xFDF
 39212                           postinc2	equ	0xFDE
 39213                           postdec2	equ	0xFDD
 39214                           plusw2	equ	0xFDB
 39215                           fsr2h	equ	0xFDA
 39216                           fsr2l	equ	0xFD9
 39217                           status	equ	0xFD8
 39218                           
 39219 ;; *************** function _INT0_CallBack *****************
 39220 ;; Defined at:
 39221 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 39222 ;; Parameters:    Size  Location     Type
 39223 ;;		None
 39224 ;; Auto vars:     Size  Location     Type
 39225 ;;		None
 39226 ;; Return value:  Size  Location     Type
 39227 ;;                  1    wreg      void 
 39228 ;; Registers used:
 39229 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39230 ;; Tracked objects:
 39231 ;;		On entry : 0/0
 39232 ;;		On exit  : 0/0
 39233 ;;		Unchanged: 0/0
 39234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39239 ;;Total ram usage:        0 bytes
 39240 ;; Hardware stack levels used:    1
 39241 ;; Hardware stack levels required when called:    2
 39242 ;; This function calls:
 39243 ;;		Absolute function
 39244 ;;		_INT0_DefaultInterruptHandler
 39245 ;;		_dimmingOffTimeCallback
 39246 ;; This function is called by:
 39247 ;;		_INT0_ISR
 39248 ;; This function uses a non-reentrant model
 39249 ;;
 39250                           
 39251                           	psect	text115
 39252  01AEC4                     __ptext115:
 39253                           	opt stack 0
 39254  01AEC4                     _INT0_CallBack:
 39255                           	opt stack 14
 39256                           
 39257                           ;ext_int.c: 44: if(INT0_InterruptHandler)
 39258                           
 39259                           ;incstack = 0
 39260  01AEC4  0102               	movlb	2	; () banked
 39261  01AEC6  513E               	movf	_INT0_InterruptHandler& (0+255),w,b
 39262  01AEC8  113F               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39263  01AECA  1140               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39264  01AECC  B4D8               	btfsc	status,2,c
 39265  01AECE  0012               	return	
 39266                           
 39267                           ; BSR set to: 2
 39268                           ;ext_int.c: 45: {
 39269                           ;ext_int.c: 46: INT0_InterruptHandler();
 39270  01AED0  D801               	call	i2u3269_48
 39271  01AED2  0012               	return	
 39272  01AED4                     i2u3269_48:
 39273  01AED4  0005               	push	
 39274  01AED6  6EFA               	movwf	pclath,c
 39275  01AED8  513E               	movf	_INT0_InterruptHandler& (0+255),w,b
 39276  01AEDA  6EFD               	movwf	tosl,c
 39277  01AEDC  513F               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39278  01AEDE  6EFE               	movwf	tosh,c
 39279  01AEE0  5140               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39280  01AEE2  6EFF               	movwf	tosu,c
 39281  01AEE4  50FA               	movf	pclath,w,c
 39282  01AEE6  0012               	return		;indir
 39283  01AEE8                     __end_of_INT0_CallBack:
 39284                           	opt stack 0
 39285                           tosu	equ	0xFFF
 39286                           tosh	equ	0xFFE
 39287                           tosl	equ	0xFFD
 39288                           pclatu	equ	0xFFB
 39289                           pclath	equ	0xFFA
 39290                           tblptru	equ	0xFF8
 39291                           tblptrh	equ	0xFF7
 39292                           tblptrl	equ	0xFF6
 39293                           tablat	equ	0xFF5
 39294                           prodh	equ	0xFF4
 39295                           prodl	equ	0xFF3
 39296                           intcon	equ	0xFF2
 39297                           indf0	equ	0xFEF
 39298                           postinc0	equ	0xFEE
 39299                           fsr0h	equ	0xFEA
 39300                           fsr0l	equ	0xFE9
 39301                           wreg	equ	0xFE8
 39302                           indf1	equ	0xFE7
 39303                           postdec1	equ	0xFE5
 39304                           plusw1	equ	0xFE3
 39305                           fsr1h	equ	0xFE2
 39306                           fsr1l	equ	0xFE1
 39307                           bsr	equ	0xFE0
 39308                           indf2	equ	0xFDF
 39309                           postinc2	equ	0xFDE
 39310                           postdec2	equ	0xFDD
 39311                           plusw2	equ	0xFDB
 39312                           fsr2h	equ	0xFDA
 39313                           fsr2l	equ	0xFD9
 39314                           status	equ	0xFD8
 39315                           
 39316 ;; *************** function _INT0_DefaultInterruptHandler *****************
 39317 ;; Defined at:
 39318 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 39319 ;; Parameters:    Size  Location     Type
 39320 ;;		None
 39321 ;; Auto vars:     Size  Location     Type
 39322 ;;		None
 39323 ;; Return value:  Size  Location     Type
 39324 ;;                  1    wreg      void 
 39325 ;; Registers used:
 39326 ;;		None
 39327 ;; Tracked objects:
 39328 ;;		On entry : 0/0
 39329 ;;		On exit  : 0/0
 39330 ;;		Unchanged: 0/0
 39331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39336 ;;Total ram usage:        0 bytes
 39337 ;; Hardware stack levels used:    1
 39338 ;; This function calls:
 39339 ;;		Nothing
 39340 ;; This function is called by:
 39341 ;;		_EXT_INT_Initialize
 39342 ;;		_INT0_CallBack
 39343 ;; This function uses a non-reentrant model
 39344 ;;
 39345                           
 39346                           	psect	text116
 39347  01B1EE                     __ptext116:
 39348                           	opt stack 0
 39349  01B1EE                     _INT0_DefaultInterruptHandler:
 39350                           	opt stack 15
 39351                           
 39352                           ;incstack = 0
 39353  01B1EE  0012               	return		;funcret
 39354  01B1F0                     __end_of_INT0_DefaultInterruptHandler:
 39355                           	opt stack 0
 39356                           tosu	equ	0xFFF
 39357                           tosh	equ	0xFFE
 39358                           tosl	equ	0xFFD
 39359                           pclatu	equ	0xFFB
 39360                           pclath	equ	0xFFA
 39361                           tblptru	equ	0xFF8
 39362                           tblptrh	equ	0xFF7
 39363                           tblptrl	equ	0xFF6
 39364                           tablat	equ	0xFF5
 39365                           prodh	equ	0xFF4
 39366                           prodl	equ	0xFF3
 39367                           intcon	equ	0xFF2
 39368                           indf0	equ	0xFEF
 39369                           postinc0	equ	0xFEE
 39370                           fsr0h	equ	0xFEA
 39371                           fsr0l	equ	0xFE9
 39372                           wreg	equ	0xFE8
 39373                           indf1	equ	0xFE7
 39374                           postdec1	equ	0xFE5
 39375                           plusw1	equ	0xFE3
 39376                           fsr1h	equ	0xFE2
 39377                           fsr1l	equ	0xFE1
 39378                           bsr	equ	0xFE0
 39379                           indf2	equ	0xFDF
 39380                           postinc2	equ	0xFDE
 39381                           postdec2	equ	0xFDD
 39382                           plusw2	equ	0xFDB
 39383                           fsr2h	equ	0xFDA
 39384                           fsr2l	equ	0xFD9
 39385                           status	equ	0xFD8
 39386                           
 39387 ;; *************** function _dimmingOffTimeCallback *****************
 39388 ;; Defined at:
 39389 ;;		line 445 in file "main.c"
 39390 ;; Parameters:    Size  Location     Type
 39391 ;;		None
 39392 ;; Auto vars:     Size  Location     Type
 39393 ;;		None
 39394 ;; Return value:  Size  Location     Type
 39395 ;;                  1    wreg      void 
 39396 ;; Registers used:
 39397 ;;		wreg, status,2, cstack
 39398 ;; Tracked objects:
 39399 ;;		On entry : 0/0
 39400 ;;		On exit  : 0/0
 39401 ;;		Unchanged: 0/0
 39402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39407 ;;Total ram usage:        0 bytes
 39408 ;; Hardware stack levels used:    1
 39409 ;; Hardware stack levels required when called:    1
 39410 ;; This function calls:
 39411 ;;		_TMR5_StartTimer
 39412 ;;		_TMR5_WriteTimer
 39413 ;; This function is called by:
 39414 ;;		_main
 39415 ;;		_INT0_CallBack
 39416 ;; This function uses a non-reentrant model
 39417 ;;
 39418                           
 39419                           	psect	text117
 39420  01B03C                     __ptext117:
 39421                           	opt stack 0
 39422  01B03C                     _dimmingOffTimeCallback:
 39423                           	opt stack 14
 39424                           
 39425                           ;main.c: 448: LATGbits.LATG1 = 0;
 39426                           
 39427                           ;incstack = 0
 39428  01B03C  927F               	bcf	3967,1,c	;volatile
 39429                           
 39430                           ;main.c: 451: TMR5_WriteTimer(dimming_period);
 39431  01B03E  C1E7  F001         	movff	_dimming_period,TMR5_WriteTimer@timerVal	;volatile
 39432  01B042  C1E8  F002         	movff	_dimming_period+1,TMR5_WriteTimer@timerVal+1	;volatile
 39433  01B046  ECDD  F0D7         	call	_TMR5_WriteTimer	;wreg free
 39434                           
 39435                           ;main.c: 452: TMR5_StartTimer();
 39436  01B04A  ECEE  F0D8         	call	_TMR5_StartTimer	;wreg free
 39437                           
 39438                           ;main.c: 455: PIE5bits.TMR5IE = 1;
 39439  01B04E  010E               	movlb	14	; () banked
 39440  01B050  892E               	bsf	46,4,b	;volatile
 39441                           
 39442                           ; BSR set to: 14
 39443  01B052  0012               	return		;funcret
 39444  01B054                     __end_of_dimmingOffTimeCallback:
 39445                           	opt stack 0
 39446                           tosu	equ	0xFFF
 39447                           tosh	equ	0xFFE
 39448                           tosl	equ	0xFFD
 39449                           pclatu	equ	0xFFB
 39450                           pclath	equ	0xFFA
 39451                           tblptru	equ	0xFF8
 39452                           tblptrh	equ	0xFF7
 39453                           tblptrl	equ	0xFF6
 39454                           tablat	equ	0xFF5
 39455                           prodh	equ	0xFF4
 39456                           prodl	equ	0xFF3
 39457                           intcon	equ	0xFF2
 39458                           indf0	equ	0xFEF
 39459                           postinc0	equ	0xFEE
 39460                           fsr0h	equ	0xFEA
 39461                           fsr0l	equ	0xFE9
 39462                           wreg	equ	0xFE8
 39463                           indf1	equ	0xFE7
 39464                           postdec1	equ	0xFE5
 39465                           plusw1	equ	0xFE3
 39466                           fsr1h	equ	0xFE2
 39467                           fsr1l	equ	0xFE1
 39468                           bsr	equ	0xFE0
 39469                           indf2	equ	0xFDF
 39470                           postinc2	equ	0xFDE
 39471                           postdec2	equ	0xFDD
 39472                           plusw2	equ	0xFDB
 39473                           fsr2h	equ	0xFDA
 39474                           fsr2l	equ	0xFD9
 39475                           status	equ	0xFD8
 39476                           
 39477 ;; *************** function _TMR5_WriteTimer *****************
 39478 ;; Defined at:
 39479 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 39480 ;; Parameters:    Size  Location     Type
 39481 ;;  timerVal        2    0[COMRAM] unsigned int 
 39482 ;; Auto vars:     Size  Location     Type
 39483 ;;		None
 39484 ;; Return value:  Size  Location     Type
 39485 ;;                  1    wreg      void 
 39486 ;; Registers used:
 39487 ;;		wreg, status,2
 39488 ;; Tracked objects:
 39489 ;;		On entry : 0/0
 39490 ;;		On exit  : 0/0
 39491 ;;		Unchanged: 0/0
 39492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39497 ;;Total ram usage:        2 bytes
 39498 ;; Hardware stack levels used:    1
 39499 ;; This function calls:
 39500 ;;		Nothing
 39501 ;; This function is called by:
 39502 ;;		_TMR5_ISR
 39503 ;;		_dimmingOffTimeCallback
 39504 ;;		_TMR5_Reload
 39505 ;; This function uses a non-reentrant model
 39506 ;;
 39507                           
 39508                           	psect	text118
 39509  01AFBA                     __ptext118:
 39510                           	opt stack 0
 39511  01AFBA                     _TMR5_WriteTimer:
 39512                           	opt stack 16
 39513                           
 39514                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 39515                           
 39516                           ; BSR set to: 14
 39517                           ;incstack = 0
 39518  01AFBA  A4C3               	btfss	4035,2,c	;volatile
 39519  01AFBC  D007               	goto	i2l752
 39520                           
 39521                           ;tmr5.c: 130: {
 39522                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 39523  01AFBE  90C3               	bcf	4035,0,c	;volatile
 39524                           
 39525                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 39526  01AFC0  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 39527  01AFC2  6EC2               	movwf	4034,c	;volatile
 39528                           
 39529                           ;tmr5.c: 136: TMR5L = timerVal;
 39530  01AFC4  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 39531                           
 39532                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 39533  01AFC8  80C3               	bsf	4035,0,c	;volatile
 39534                           
 39535                           ;tmr5.c: 140: }
 39536  01AFCA  0012               	return	
 39537  01AFCC                     i2l752:
 39538                           
 39539                           ;tmr5.c: 141: else
 39540                           ;tmr5.c: 142: {
 39541                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 39542  01AFCC  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 39543  01AFCE  6EC2               	movwf	4034,c	;volatile
 39544                           
 39545                           ;tmr5.c: 145: TMR5L = timerVal;
 39546  01AFD0  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 39547  01AFD4  0012               	return	
 39548  01AFD6                     __end_of_TMR5_WriteTimer:
 39549                           	opt stack 0
 39550                           tosu	equ	0xFFF
 39551                           tosh	equ	0xFFE
 39552                           tosl	equ	0xFFD
 39553                           pclatu	equ	0xFFB
 39554                           pclath	equ	0xFFA
 39555                           tblptru	equ	0xFF8
 39556                           tblptrh	equ	0xFF7
 39557                           tblptrl	equ	0xFF6
 39558                           tablat	equ	0xFF5
 39559                           prodh	equ	0xFF4
 39560                           prodl	equ	0xFF3
 39561                           intcon	equ	0xFF2
 39562                           indf0	equ	0xFEF
 39563                           postinc0	equ	0xFEE
 39564                           fsr0h	equ	0xFEA
 39565                           fsr0l	equ	0xFE9
 39566                           wreg	equ	0xFE8
 39567                           indf1	equ	0xFE7
 39568                           postdec1	equ	0xFE5
 39569                           plusw1	equ	0xFE3
 39570                           fsr1h	equ	0xFE2
 39571                           fsr1l	equ	0xFE1
 39572                           bsr	equ	0xFE0
 39573                           indf2	equ	0xFDF
 39574                           postinc2	equ	0xFDE
 39575                           postdec2	equ	0xFDD
 39576                           plusw2	equ	0xFDB
 39577                           fsr2h	equ	0xFDA
 39578                           fsr2l	equ	0xFD9
 39579                           status	equ	0xFD8
 39580                           
 39581 ;; *************** function _TMR5_StartTimer *****************
 39582 ;; Defined at:
 39583 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 39584 ;; Parameters:    Size  Location     Type
 39585 ;;		None
 39586 ;; Auto vars:     Size  Location     Type
 39587 ;;		None
 39588 ;; Return value:  Size  Location     Type
 39589 ;;                  1    wreg      void 
 39590 ;; Registers used:
 39591 ;;		None
 39592 ;; Tracked objects:
 39593 ;;		On entry : 0/0
 39594 ;;		On exit  : 0/0
 39595 ;;		Unchanged: 0/0
 39596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39601 ;;Total ram usage:        0 bytes
 39602 ;; Hardware stack levels used:    1
 39603 ;; This function calls:
 39604 ;;		Nothing
 39605 ;; This function is called by:
 39606 ;;		_dimmingOffTimeCallback
 39607 ;; This function uses a non-reentrant model
 39608 ;;
 39609                           
 39610                           	psect	text119
 39611  01B1DC                     __ptext119:
 39612                           	opt stack 0
 39613  01B1DC                     _TMR5_StartTimer:
 39614                           	opt stack 14
 39615                           
 39616                           ;tmr5.c: 102: T5CONbits.TMR5ON = 1;
 39617                           
 39618                           ;incstack = 0
 39619  01B1DC  80C3               	bsf	4035,0,c	;volatile
 39620  01B1DE  0012               	return		;funcret
 39621  01B1E0                     __end_of_TMR5_StartTimer:
 39622                           	opt stack 0
 39623                           tosu	equ	0xFFF
 39624                           tosh	equ	0xFFE
 39625                           tosl	equ	0xFFD
 39626                           pclatu	equ	0xFFB
 39627                           pclath	equ	0xFFA
 39628                           tblptru	equ	0xFF8
 39629                           tblptrh	equ	0xFF7
 39630                           tblptrl	equ	0xFF6
 39631                           tablat	equ	0xFF5
 39632                           prodh	equ	0xFF4
 39633                           prodl	equ	0xFF3
 39634                           intcon	equ	0xFF2
 39635                           indf0	equ	0xFEF
 39636                           postinc0	equ	0xFEE
 39637                           fsr0h	equ	0xFEA
 39638                           fsr0l	equ	0xFE9
 39639                           wreg	equ	0xFE8
 39640                           indf1	equ	0xFE7
 39641                           postdec1	equ	0xFE5
 39642                           plusw1	equ	0xFE3
 39643                           fsr1h	equ	0xFE2
 39644                           fsr1l	equ	0xFE1
 39645                           bsr	equ	0xFE0
 39646                           indf2	equ	0xFDF
 39647                           postinc2	equ	0xFDE
 39648                           postdec2	equ	0xFDD
 39649                           plusw2	equ	0xFDB
 39650                           fsr2h	equ	0xFDA
 39651                           fsr2l	equ	0xFD9
 39652                           status	equ	0xFD8
 39653                           
 39654 ;; *************** function _I2C1_ISR *****************
 39655 ;; Defined at:
 39656 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 39657 ;; Parameters:    Size  Location     Type
 39658 ;;		None
 39659 ;; Auto vars:     Size  Location     Type
 39660 ;;		None
 39661 ;; Return value:  Size  Location     Type
 39662 ;;                  1    wreg      void 
 39663 ;; Registers used:
 39664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39665 ;; Tracked objects:
 39666 ;;		On entry : 0/0
 39667 ;;		On exit  : 0/0
 39668 ;;		Unchanged: 0/0
 39669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39674 ;;Total ram usage:        2 bytes
 39675 ;; Hardware stack levels used:    1
 39676 ;; Hardware stack levels required when called:    1
 39677 ;; This function calls:
 39678 ;;		_I2C1_FunctionComplete
 39679 ;;		_I2C1_Stop
 39680 ;; This function is called by:
 39681 ;;		_INTERRUPT_InterruptManagerHigh
 39682 ;; This function uses a non-reentrant model
 39683 ;;
 39684                           
 39685                           	psect	text120
 39686  017AF6                     __ptext120:
 39687                           	opt stack 0
 39688  017AF6                     _I2C1_ISR:
 39689                           	opt stack 16
 39690                           
 39691                           ;i2c1.c: 238: static uint8_t *pi2c_buf_ptr;
 39692                           ;i2c1.c: 239: static uint16_t i2c_address = 0;
 39693                           ;i2c1.c: 240: static uint8_t i2c_bytes_left = 0;
 39694                           ;i2c1.c: 241: static uint8_t i2c_10bit_address_restart = 0;
 39695                           ;i2c1.c: 243: PIR3bits.SSP1IF = 0;
 39696                           
 39697                           ;incstack = 0
 39698  017AF6  010E               	movlb	14	; () banked
 39699  017AF8  9136               	bcf	54,0,b	;volatile
 39700                           
 39701                           ;i2c1.c: 247: if(SSP1CON1bits.WCOL)
 39702  017AFA  AE95               	btfss	3989,7,c	;volatile
 39703  017AFC  D104               	goto	i2l1048
 39704                           
 39705                           ; BSR set to: 14
 39706                           ;i2c1.c: 248: {
 39707                           ;i2c1.c: 250: SSP1CON1bits.WCOL = 0;
 39708  017AFE  9E95               	bcf	3989,7,c	;volatile
 39709                           
 39710                           ; BSR set to: 14
 39711                           ;i2c1.c: 251: i2c1_state = S_MASTER_IDLE;
 39712  017B00  0E00               	movlw	0
 39713  017B02  0102               	movlb	2	; () banked
 39714  017B04  6F68               	movwf	_i2c1_state& (0+255),b
 39715                           
 39716                           ; BSR set to: 2
 39717                           ;i2c1.c: 252: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 39718  017B06  EE20 F003          	lfsr	2,3
 39719  017B0A  5157               	movf	_p_i2c1_current& (0+255),w,b
 39720  017B0C  26D9               	addwf	fsr2l,f,c
 39721  017B0E  5158               	movf	(_p_i2c1_current+1)& (0+255),w,b
 39722  017B10  22DA               	addwfc	fsr2h,f,c
 39723  017B12  CFDE F004          	movff	postinc2,??_I2C1_ISR
 39724  017B16  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 39725  017B1A  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 39726  017B1E  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 39727  017B22  0E01               	movlw	1
 39728  017B24  6EDF               	movwf	indf2,c
 39729                           
 39730                           ; BSR set to: 2
 39731                           ;i2c1.c: 255: p_i2c1_current = (0);
 39732  017B26  0E00               	movlw	0
 39733  017B28  6F57               	movwf	_p_i2c1_current& (0+255),b
 39734  017B2A  0E00               	movlw	0
 39735  017B2C  6F58               	movwf	(_p_i2c1_current+1)& (0+255),b
 39736                           
 39737                           ; BSR set to: 2
 39738                           ;i2c1.c: 257: return;
 39739  017B2E  0012               	return	
 39740  017B30                     i2l1049:
 39741                           
 39742                           ; BSR set to: 2
 39743                           ;i2c1.c: 265: if(i2c1_object.trStatus.s.empty != 1)
 39744  017B30  B304               	btfsc	(_i2c1_object+4)& (0+255),1,b
 39745  017B32  0012               	return	
 39746                           
 39747                           ; BSR set to: 2
 39748                           ;i2c1.c: 266: {
 39749                           ;i2c1.c: 268: p_i2c1_current = i2c1_object.pTrHead;
 39750  017B34  C202  F257         	movff	_i2c1_object+2,_p_i2c1_current
 39751  017B38  C203  F258         	movff	_i2c1_object+3,_p_i2c1_current+1
 39752                           
 39753                           ; BSR set to: 2
 39754                           ;i2c1.c: 269: i2c1_trb_count = i2c1_object.pTrHead->count;
 39755  017B3C  C202  FFD9         	movff	_i2c1_object+2,fsr2l
 39756  017B40  C203  FFDA         	movff	_i2c1_object+3,fsr2h
 39757  017B44  50DF               	movf	indf2,w,c
 39758  017B46  6F67               	movwf	_i2c1_trb_count& (0+255),b
 39759                           
 39760                           ; BSR set to: 2
 39761                           ;i2c1.c: 270: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 39762  017B48  EE20 F001          	lfsr	2,1
 39763  017B4C  5102               	movf	(_i2c1_object+2)& (0+255),w,b
 39764  017B4E  26D9               	addwf	fsr2l,f,c
 39765  017B50  5103               	movf	(_i2c1_object+3)& (0+255),w,b
 39766  017B52  22DA               	addwfc	fsr2h,f,c
 39767  017B54  CFDE F259          	movff	postinc2,_p_i2c1_trb_current
 39768  017B58  CFDD F25A          	movff	postdec2,_p_i2c1_trb_current+1
 39769                           
 39770                           ; BSR set to: 2
 39771                           ;i2c1.c: 272: i2c1_object.pTrHead++;
 39772  017B5C  0E05               	movlw	5
 39773  017B5E  2702               	addwf	(_i2c1_object+2)& (0+255),f,b
 39774  017B60  0E00               	movlw	0
 39775  017B62  2303               	addwfc	(_i2c1_object+3)& (0+255),f,b
 39776                           
 39777                           ; BSR set to: 2
 39778                           ;i2c1.c: 275: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 39779  017B64  0E8A               	movlw	low (_i2c1_tr_queue+5)
 39780  017B66  1902               	xorwf	(_i2c1_object+2)& (0+255),w,b
 39781  017B68  E108               	bnz	i2l12899
 39782  017B6A  0E02               	movlw	high (_i2c1_tr_queue+5)
 39783  017B6C  1903               	xorwf	(_i2c1_object+3)& (0+255),w,b
 39784  017B6E  A4D8               	btfss	status,2,c
 39785  017B70  D004               	goto	i2l1051
 39786                           
 39787                           ; BSR set to: 2
 39788                           ;i2c1.c: 276: {
 39789                           ;i2c1.c: 278: i2c1_object.pTrHead = i2c1_tr_queue;
 39790  017B72  0E85               	movlw	low _i2c1_tr_queue
 39791  017B74  6F02               	movwf	(_i2c1_object+2)& (0+255),b
 39792  017B76  0E02               	movlw	high _i2c1_tr_queue
 39793  017B78  6F03               	movwf	(_i2c1_object+3)& (0+255),b
 39794  017B7A                     i2l1051:
 39795  017B7A                     i2l12899:
 39796                           
 39797                           ; BSR set to: 2
 39798                           ;i2c1.c: 279: }
 39799                           ;i2c1.c: 283: i2c1_object.trStatus.s.full = 0;
 39800  017B7A  9104               	bcf	(_i2c1_object+4)& (0+255),0,b
 39801                           
 39802                           ;i2c1.c: 286: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 39803  017B7C  5100               	movf	_i2c1_object& (0+255),w,b
 39804  017B7E  1902               	xorwf	(_i2c1_object+2)& (0+255),w,b
 39805  017B80  E104               	bnz	i2l1052
 39806  017B82  5101               	movf	(_i2c1_object+1)& (0+255),w,b
 39807  017B84  1903               	xorwf	(_i2c1_object+3)& (0+255),w,b
 39808  017B86  B4D8               	btfsc	status,2,c
 39809                           
 39810                           ; BSR set to: 2
 39811                           ;i2c1.c: 287: {
 39812                           ;i2c1.c: 289: i2c1_object.trStatus.s.empty = 1;
 39813  017B88  8304               	bsf	(_i2c1_object+4)& (0+255),1,b
 39814  017B8A                     i2l1052:
 39815                           
 39816                           ; BSR set to: 2
 39817                           ;i2c1.c: 290: }
 39818                           ;i2c1.c: 293: SSP1CON2bits.SEN = 1;
 39819  017B8A  8096               	bsf	3990,0,c	;volatile
 39820                           
 39821                           ; BSR set to: 2
 39822                           ;i2c1.c: 296: i2c1_state = S_MASTER_SEND_ADDR;
 39823  017B8C  0E02               	movlw	2
 39824  017B8E  6F68               	movwf	_i2c1_state& (0+255),b
 39825                           
 39826                           ; BSR set to: 2
 39827                           ;i2c1.c: 297: }
 39828                           ;i2c1.c: 299: break;
 39829  017B90  0012               	return	
 39830  017B92                     i2l1054:
 39831                           
 39832                           ; BSR set to: 2
 39833                           ;i2c1.c: 306: SSP1CON2bits.RSEN = 1;
 39834  017B92  8296               	bsf	3990,1,c	;volatile
 39835                           
 39836                           ; BSR set to: 2
 39837                           ;i2c1.c: 309: i2c1_state = S_MASTER_SEND_ADDR;
 39838  017B94  0E02               	movlw	2
 39839  017B96  6F68               	movwf	_i2c1_state& (0+255),b
 39840                           
 39841                           ;i2c1.c: 311: break;
 39842  017B98  0012               	return	
 39843  017B9A                     i2l1055:
 39844                           
 39845                           ; BSR set to: 2
 39846                           ;i2c1.c: 315: if(SSP1CON2bits.ACKSTAT)
 39847  017B9A  AC96               	btfss	3990,6,c	;volatile
 39848  017B9C  D005               	goto	i2l1056
 39849                           
 39850                           ; BSR set to: 2
 39851                           ;i2c1.c: 316: {
 39852                           ;i2c1.c: 317: i2c1_object.i2cErrors++;
 39853  017B9E  2B06               	incf	(_i2c1_object+6)& (0+255),f,b
 39854                           
 39855                           ; BSR set to: 2
 39856                           ;i2c1.c: 318: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 39857  017BA0  0E04               	movlw	4
 39858  017BA2  EC5C  F0D4         	call	_I2C1_Stop
 39859                           
 39860                           ;i2c1.c: 319: }
 39861  017BA6  0012               	return	
 39862  017BA8                     i2l1056:
 39863                           
 39864                           ;i2c1.c: 320: else
 39865                           ;i2c1.c: 321: {
 39866                           ;i2c1.c: 323: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 39867  017BA8  90D8               	bcf	status,0,c
 39868  017BAA  0100               	movlb	0	; () banked
 39869  017BAC  31F6               	rrcf	(I2C1_ISR@i2c_address+1)& (0+255),w,b
 39870  017BAE  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 39871  017BB0  31F5               	rrcf	I2C1_ISR@i2c_address& (0+255),w,b
 39872  017BB2  6E04               	movwf	??_I2C1_ISR& (0+255),c
 39873  017BB4  5004               	movf	??_I2C1_ISR,w,c
 39874  017BB6  6E91               	movwf	3985,c	;volatile
 39875                           
 39876                           ; BSR set to: 0
 39877                           ;i2c1.c: 326: if(i2c_address & 0x01)
 39878  017BB8  A1F5               	btfss	I2C1_ISR@i2c_address& (0+255),0,b
 39879  017BBA  D004               	goto	i2l1058
 39880                           
 39881                           ; BSR set to: 0
 39882                           ;i2c1.c: 327: {
 39883                           ;i2c1.c: 330: i2c1_state = S_MASTER_10BIT_RESTART;
 39884  017BBC  0E0B               	movlw	11
 39885  017BBE  0102               	movlb	2	; () banked
 39886  017BC0  6F68               	movwf	_i2c1_state& (0+255),b
 39887                           
 39888                           ;i2c1.c: 331: }
 39889  017BC2  0012               	return	
 39890  017BC4                     i2l1058:
 39891                           
 39892                           ;i2c1.c: 332: else
 39893                           ;i2c1.c: 333: {
 39894                           ;i2c1.c: 335: i2c1_state = S_MASTER_SEND_DATA;
 39895                           
 39896                           ; BSR set to: 2
 39897  017BC4  0E03               	movlw	3
 39898  017BC6  0102               	movlb	2	; () banked
 39899  017BC8  6F68               	movwf	_i2c1_state& (0+255),b
 39900                           
 39901                           ; BSR set to: 2
 39902                           ;i2c1.c: 336: }
 39903                           ;i2c1.c: 337: }
 39904                           ;i2c1.c: 339: break;
 39905                           
 39906                           ; BSR set to: 2
 39907  017BCA  0012               	return	
 39908  017BCC                     i2l1060:
 39909                           
 39910                           ; BSR set to: 2
 39911                           ;i2c1.c: 343: if(SSP1CON2bits.ACKSTAT)
 39912  017BCC  AC96               	btfss	3990,6,c	;volatile
 39913  017BCE  D005               	goto	i2l1061
 39914                           
 39915                           ; BSR set to: 2
 39916                           ;i2c1.c: 344: {
 39917                           ;i2c1.c: 345: i2c1_object.i2cErrors++;
 39918  017BD0  2B06               	incf	(_i2c1_object+6)& (0+255),f,b
 39919                           
 39920                           ; BSR set to: 2
 39921                           ;i2c1.c: 346: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 39922  017BD2  0E04               	movlw	4
 39923  017BD4  EC5C  F0D4         	call	_I2C1_Stop
 39924                           
 39925                           ;i2c1.c: 347: }
 39926  017BD8  0012               	return	
 39927  017BDA                     i2l1061:
 39928                           
 39929                           ; BSR set to: 2
 39930                           ;i2c1.c: 348: else
 39931                           ;i2c1.c: 349: {
 39932                           ;i2c1.c: 352: SSP1CON2bits.RSEN = 1;
 39933  017BDA  8296               	bsf	3990,1,c	;volatile
 39934                           
 39935                           ; BSR set to: 2
 39936                           ;i2c1.c: 356: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 39937  017BDC  C0F5  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 39938  017BE0  C0F6  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 39939  017BE4  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 39940  017BE8  6A05               	clrf	??_I2C1_ISR+1,c
 39941  017BEA  0E06               	movlw	6
 39942  017BEC  1604               	andwf	??_I2C1_ISR,f,c
 39943  017BEE  0E00               	movlw	0
 39944  017BF0  1605               	andwf	??_I2C1_ISR+1,f,c
 39945  017BF2  0EF0               	movlw	240
 39946  017BF4  1004               	iorwf	??_I2C1_ISR,w,c
 39947  017BF6  0100               	movlb	0	; () banked
 39948  017BF8  6FF5               	movwf	I2C1_ISR@i2c_address& (0+255),b
 39949  017BFA  5005               	movf	??_I2C1_ISR+1,w,c
 39950  017BFC  6FF6               	movwf	(I2C1_ISR@i2c_address+1)& (0+255),b
 39951                           
 39952                           ; BSR set to: 0
 39953                           ;i2c1.c: 359: i2c_address |= 0x0001;
 39954  017BFE  81F5               	bsf	I2C1_ISR@i2c_address& (0+255),0,b
 39955                           
 39956                           ; BSR set to: 0
 39957                           ;i2c1.c: 362: i2c_10bit_address_restart = 1;
 39958  017C00  0E01               	movlw	1
 39959  017C02  0102               	movlb	2	; () banked
 39960  017C04  6F65               	movwf	I2C1_ISR@i2c_10bit_address_restart& (0+255),b
 39961                           
 39962                           ; BSR set to: 2
 39963                           ;i2c1.c: 365: i2c1_state = S_MASTER_SEND_ADDR;
 39964  017C06  0E02               	movlw	2
 39965  017C08  6F68               	movwf	_i2c1_state& (0+255),b
 39966                           
 39967                           ; BSR set to: 2
 39968                           ;i2c1.c: 366: }
 39969                           ;i2c1.c: 368: break;
 39970  017C0A  0012               	return	
 39971  017C0C                     
 39972                           ; BSR set to: 2
 39973                           ;i2c1.c: 383: if(i2c_10bit_address_restart != 1)
 39974                           
 39975                           ; BSR set to: 2
 39976  017C0C  0565               	decf	I2C1_ISR@i2c_10bit_address_restart& (0+255),w,b
 39977  017C0E  B4D8               	btfsc	status,2,c
 39978  017C10  D01A               	goto	i2l1065
 39979                           
 39980                           ; BSR set to: 2
 39981                           ;i2c1.c: 384: {
 39982                           ;i2c1.c: 386: i2c_address = p_i2c1_trb_current->address;
 39983  017C12  C259  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 39984  017C16  C25A  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 39985  017C1A  CFDE F0F5          	movff	postinc2,I2C1_ISR@i2c_address
 39986  017C1E  CFDD F0F6          	movff	postdec2,I2C1_ISR@i2c_address+1
 39987                           
 39988                           ; BSR set to: 2
 39989                           ;i2c1.c: 387: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 39990  017C22  EE20 F003          	lfsr	2,3
 39991  017C26  5159               	movf	_p_i2c1_trb_current& (0+255),w,b
 39992  017C28  26D9               	addwf	fsr2l,f,c
 39993  017C2A  515A               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 39994  017C2C  22DA               	addwfc	fsr2h,f,c
 39995  017C2E  CFDE F255          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 39996  017C32  CFDD F256          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 39997                           
 39998                           ; BSR set to: 2
 39999                           ;i2c1.c: 388: i2c_bytes_left = p_i2c1_trb_current->length;
 40000  017C36  EE20 F002          	lfsr	2,2
 40001  017C3A  5159               	movf	_p_i2c1_trb_current& (0+255),w,b
 40002  017C3C  26D9               	addwf	fsr2l,f,c
 40003  017C3E  515A               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 40004  017C40  22DA               	addwfc	fsr2h,f,c
 40005  017C42  50DF               	movf	indf2,w,c
 40006  017C44  6F66               	movwf	I2C1_ISR@i2c_bytes_left& (0+255),b
 40007  017C46                     i2l1065:
 40008                           
 40009                           ;i2c1.c: 411: else
 40010                           ;i2c1.c: 412: {
 40011                           ;i2c1.c: 414: SSP1BUF = i2c_address;
 40012  017C46  C0F5  FF91         	movff	I2C1_ISR@i2c_address,3985	;volatile
 40013                           
 40014                           ;i2c1.c: 415: if(i2c_address & 0x01)
 40015  017C4A  0100               	movlb	0	; () banked
 40016  017C4C  A1F5               	btfss	I2C1_ISR@i2c_address& (0+255),0,b
 40017  017C4E  D004               	goto	i2l1069
 40018                           
 40019                           ; BSR set to: 0
 40020                           ;i2c1.c: 416: {
 40021                           ;i2c1.c: 418: i2c1_state = S_MASTER_ACK_ADDR;
 40022  017C50  0E05               	movlw	5
 40023  017C52  0102               	movlb	2	; () banked
 40024  017C54  6F68               	movwf	_i2c1_state& (0+255),b
 40025                           
 40026                           ;i2c1.c: 419: }
 40027  017C56  0012               	return	
 40028  017C58                     i2l1069:
 40029                           
 40030                           ;i2c1.c: 420: else
 40031                           ;i2c1.c: 421: {
 40032                           ;i2c1.c: 423: i2c1_state = S_MASTER_SEND_DATA;
 40033                           
 40034                           ; BSR set to: 2
 40035  017C58  0E03               	movlw	3
 40036  017C5A  0102               	movlb	2	; () banked
 40037  017C5C  6F68               	movwf	_i2c1_state& (0+255),b
 40038                           
 40039                           ; BSR set to: 2
 40040                           ;i2c1.c: 424: }
 40041                           ;i2c1.c: 425: }
 40042                           ;i2c1.c: 426: break;
 40043                           
 40044                           ; BSR set to: 2
 40045  017C5E  0012               	return	
 40046  017C60                     i2l1071:
 40047                           
 40048                           ; BSR set to: 2
 40049                           ;i2c1.c: 431: if(SSP1CON2bits.ACKSTAT)
 40050  017C60  AC96               	btfss	3990,6,c	;volatile
 40051  017C62  D006               	goto	i2l1072
 40052                           
 40053                           ; BSR set to: 2
 40054                           ;i2c1.c: 432: {
 40055                           ;i2c1.c: 434: i2c1_object.i2cErrors++;
 40056  017C64  2B06               	incf	(_i2c1_object+6)& (0+255),f,b
 40057                           
 40058                           ; BSR set to: 2
 40059                           ;i2c1.c: 437: SSP1CON2bits.ACKSTAT = 0;
 40060  017C66  9C96               	bcf	3990,6,c	;volatile
 40061                           
 40062                           ; BSR set to: 2
 40063                           ;i2c1.c: 440: I2C1_Stop(I2C1_DATA_NO_ACK);
 40064  017C68  0E05               	movlw	5
 40065  017C6A  EC5C  F0D4         	call	_I2C1_Stop
 40066                           
 40067                           ;i2c1.c: 442: }
 40068  017C6E  0012               	return	
 40069  017C70                     i2l1072:
 40070                           
 40071                           ;i2c1.c: 443: else
 40072                           ;i2c1.c: 444: {
 40073                           ;i2c1.c: 446: if(i2c_bytes_left-- == 0U)
 40074  017C70  0102               	movlb	2	; () banked
 40075  017C72  0766               	decf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 40076  017C74  2966               	incf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 40077  017C76  A4D8               	btfss	status,2,c
 40078  017C78  D00E               	goto	i2l1074
 40079                           
 40080                           ; BSR set to: 2
 40081                           ;i2c1.c: 447: {
 40082                           ;i2c1.c: 451: p_i2c1_trb_current++;
 40083  017C7A  0E05               	movlw	5
 40084  017C7C  2759               	addwf	_p_i2c1_trb_current& (0+255),f,b
 40085  017C7E  0E00               	movlw	0
 40086  017C80  235A               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 40087                           
 40088                           ; BSR set to: 2
 40089                           ;i2c1.c: 454: if(--i2c1_trb_count == 0)
 40090  017C82  2F67               	decfsz	_i2c1_trb_count& (0+255),f,b
 40091  017C84  D004               	goto	i2l1075
 40092                           
 40093                           ; BSR set to: 2
 40094                           ;i2c1.c: 455: {
 40095                           ;i2c1.c: 456: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 40096  017C86  0E00               	movlw	0
 40097  017C88  EC5C  F0D4         	call	_I2C1_Stop
 40098                           
 40099                           ;i2c1.c: 457: }
 40100  017C8C  0012               	return	
 40101  017C8E                     i2l1075:
 40102                           
 40103                           ; BSR set to: 2
 40104                           ;i2c1.c: 458: else
 40105                           ;i2c1.c: 459: {
 40106                           ;i2c1.c: 466: SSP1CON2bits.RSEN = 1;
 40107  017C8E  8296               	bsf	3990,1,c	;volatile
 40108                           
 40109                           ; BSR set to: 2
 40110                           ;i2c1.c: 469: i2c1_state = S_MASTER_SEND_ADDR;
 40111  017C90  0E02               	movlw	2
 40112  017C92  6F68               	movwf	_i2c1_state& (0+255),b
 40113                           
 40114                           ; BSR set to: 2
 40115                           ;i2c1.c: 471: }
 40116                           ;i2c1.c: 472: }
 40117  017C94  0012               	return	
 40118  017C96                     i2l1074:
 40119                           
 40120                           ; BSR set to: 2
 40121                           ;i2c1.c: 473: else
 40122                           ;i2c1.c: 474: {
 40123                           ;i2c1.c: 476: SSP1BUF = *pi2c_buf_ptr++;
 40124                           
 40125                           ; BSR set to: 2
 40126  017C96  C255  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 40127  017C9A  C256  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 40128  017C9E  50DF               	movf	indf2,w,c
 40129  017CA0  6E91               	movwf	3985,c	;volatile
 40130                           
 40131                           ; BSR set to: 2
 40132  017CA2  4B55               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 40133  017CA4  2B56               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 40134                           
 40135                           ; BSR set to: 2
 40136                           ;i2c1.c: 477: }
 40137                           ;i2c1.c: 478: }
 40138                           ;i2c1.c: 479: break;
 40139                           
 40140                           ; BSR set to: 2
 40141  017CA6  0012               	return	
 40142  017CA8                     i2l1078:
 40143                           
 40144                           ; BSR set to: 2
 40145                           ;i2c1.c: 484: if(SSP1CON2bits.ACKSTAT)
 40146  017CA8  AC96               	btfss	3990,6,c	;volatile
 40147  017CAA  D006               	goto	i2l1079
 40148                           
 40149                           ; BSR set to: 2
 40150                           ;i2c1.c: 485: {
 40151                           ;i2c1.c: 488: i2c1_object.i2cErrors++;
 40152  017CAC  2B06               	incf	(_i2c1_object+6)& (0+255),f,b
 40153                           
 40154                           ; BSR set to: 2
 40155                           ;i2c1.c: 491: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 40156  017CAE  0E04               	movlw	4
 40157  017CB0  EC5C  F0D4         	call	_I2C1_Stop
 40158                           
 40159                           ;i2c1.c: 494: SSP1CON2bits.ACKSTAT = 0;
 40160  017CB4  9C96               	bcf	3990,6,c	;volatile
 40161                           
 40162                           ;i2c1.c: 495: }
 40163  017CB6  0012               	return	
 40164  017CB8                     i2l1079:
 40165                           
 40166                           ; BSR set to: 2
 40167                           ;i2c1.c: 496: else
 40168                           ;i2c1.c: 497: {
 40169                           ;i2c1.c: 498: SSP1CON2bits.RCEN = 1;
 40170  017CB8  8696               	bsf	3990,3,c	;volatile
 40171                           
 40172                           ; BSR set to: 2
 40173                           ;i2c1.c: 499: i2c1_state = S_MASTER_ACK_RCV_DATA;
 40174  017CBA  0E08               	movlw	8
 40175  017CBC  6F68               	movwf	_i2c1_state& (0+255),b
 40176                           
 40177                           ; BSR set to: 2
 40178                           ;i2c1.c: 500: }
 40179                           ;i2c1.c: 501: break;
 40180  017CBE  0012               	return	
 40181  017CC0                     
 40182                           ; BSR set to: 2
 40183                           ;i2c1.c: 508: i2c1_state = S_MASTER_ACK_RCV_DATA;
 40184                           
 40185                           ; BSR set to: 2
 40186  017CC0  0E08               	movlw	8
 40187  017CC2  6F68               	movwf	_i2c1_state& (0+255),b
 40188                           
 40189                           ; BSR set to: 2
 40190                           ;i2c1.c: 511: SSP1CON2bits.RCEN = 1;
 40191  017CC4  8696               	bsf	3990,3,c	;volatile
 40192                           
 40193                           ;i2c1.c: 513: break;
 40194  017CC6  0012               	return	
 40195  017CC8                     
 40196                           ; BSR set to: 2
 40197                           ;i2c1.c: 518: *pi2c_buf_ptr++ = SSP1BUF;
 40198                           
 40199                           ; BSR set to: 2
 40200  017CC8  C255  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 40201  017CCC  C256  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 40202  017CD0  CF91 FFDF          	movff	3985,indf2	;volatile
 40203                           
 40204                           ; BSR set to: 2
 40205  017CD4  4B55               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 40206  017CD6  2B56               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 40207                           
 40208                           ; BSR set to: 2
 40209                           ;i2c1.c: 521: if(--i2c_bytes_left)
 40210  017CD8  0E01               	movlw	1
 40211  017CDA  5F66               	subwf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 40212  017CDC  B4D8               	btfsc	status,2,c
 40213  017CDE  D004               	goto	i2l1083
 40214                           
 40215                           ; BSR set to: 2
 40216                           ;i2c1.c: 522: {
 40217                           ;i2c1.c: 528: SSP1CON2bits.ACKDT = 0;
 40218  017CE0  9A96               	bcf	3990,5,c	;volatile
 40219                           
 40220                           ; BSR set to: 2
 40221                           ;i2c1.c: 531: i2c1_state = S_MASTER_RCV_DATA;
 40222  017CE2  0E06               	movlw	6
 40223  017CE4  6F68               	movwf	_i2c1_state& (0+255),b
 40224                           
 40225                           ;i2c1.c: 532: }
 40226  017CE6  D003               	goto	i2l1084
 40227  017CE8                     i2l1083:
 40228                           
 40229                           ; BSR set to: 2
 40230                           ;i2c1.c: 533: else
 40231                           ;i2c1.c: 534: {
 40232                           ;i2c1.c: 538: SSP1CON2bits.ACKDT = 1;
 40233  017CE8  8A96               	bsf	3990,5,c	;volatile
 40234                           
 40235                           ; BSR set to: 2
 40236                           ;i2c1.c: 540: I2C1_FunctionComplete();
 40237  017CEA  EC05  F0D8         	call	_I2C1_FunctionComplete	;wreg free
 40238  017CEE                     i2l1084:
 40239                           
 40240                           ;i2c1.c: 541: }
 40241                           ;i2c1.c: 544: SSP1CON2bits.ACKEN = 1;
 40242  017CEE  8896               	bsf	3990,4,c	;volatile
 40243                           
 40244                           ;i2c1.c: 545: break;
 40245  017CF0  0012               	return	
 40246  017CF2                     
 40247                           ;i2c1.c: 548: case S_MASTER_SEND_STOP:
 40248                           ;i2c1.c: 551: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 40249  017CF2  0E00               	movlw	0
 40250  017CF4  EC5C  F0D4         	call	_I2C1_Stop
 40251                           
 40252                           ;i2c1.c: 552: break;
 40253  017CF8  0012               	return	
 40254  017CFA                     
 40255                           ;i2c1.c: 558: i2c1_object.i2cErrors++;
 40256  017CFA  0102               	movlb	2	; () banked
 40257  017CFC  2B06               	incf	(_i2c1_object+6)& (0+255),f,b
 40258                           
 40259                           ; BSR set to: 2
 40260                           ;i2c1.c: 559: I2C1_Stop(I2C1_LOST_STATE);
 40261  017CFE  0E06               	movlw	6
 40262  017D00  EC5C  F0D4         	call	_I2C1_Stop
 40263                           
 40264                           ;i2c1.c: 562: }
 40265                           
 40266                           ;i2c1.c: 560: break;
 40267  017D04  0012               	return	
 40268  017D06                     i2l1048:
 40269  017D06  0102               	movlb	2	; () banked
 40270  017D08  5168               	movf	_i2c1_state& (0+255),w,b
 40271                           
 40272                           ; Switch size 1, requested type "space"
 40273                           ; Number of cases is 11, Range of values is 0 to 11
 40274                           ; switch strategies available:
 40275                           ; Name         Instructions Cycles
 40276                           ; simple_byte           34    18 (average)
 40277                           ;	Chosen strategy is simple_byte
 40278  017D0A  0A00               	xorlw	0	; case 0
 40279  017D0C  B4D8               	btfsc	status,2,c
 40280  017D0E  D710               	goto	i2l1049
 40281  017D10  0A01               	xorlw	1	; case 1
 40282  017D12  B4D8               	btfsc	status,2,c
 40283  017D14  D73E               	goto	i2l1054
 40284  017D16  0A03               	xorlw	3	; case 2
 40285  017D18  B4D8               	btfsc	status,2,c
 40286  017D1A  D778               	goto	i2l1063
 40287  017D1C  0A01               	xorlw	1	; case 3
 40288  017D1E  B4D8               	btfsc	status,2,c
 40289  017D20  D79F               	goto	i2l1071
 40290  017D22  0A07               	xorlw	7	; case 4
 40291  017D24  B4D8               	btfsc	status,2,c
 40292  017D26  D7E5               	goto	i2l1085
 40293  017D28  0A01               	xorlw	1	; case 5
 40294  017D2A  B4D8               	btfsc	status,2,c
 40295  017D2C  D7BD               	goto	i2l1078
 40296  017D2E  0A03               	xorlw	3	; case 6
 40297  017D30  B4D8               	btfsc	status,2,c
 40298  017D32  D7C6               	goto	i2l1081
 40299  017D34  0A01               	xorlw	1	; case 7
 40300  017D36  B4D8               	btfsc	status,2,c
 40301  017D38  D7DC               	goto	i2l1085
 40302  017D3A  0A0F               	xorlw	15	; case 8
 40303  017D3C  B4D8               	btfsc	status,2,c
 40304  017D3E  D7C4               	goto	i2l1082
 40305  017D40  0A02               	xorlw	2	; case 10
 40306  017D42  B4D8               	btfsc	status,2,c
 40307  017D44  D72A               	goto	i2l1055
 40308  017D46  0A01               	xorlw	1	; case 11
 40309  017D48  B4D8               	btfsc	status,2,c
 40310  017D4A  D740               	goto	i2l1060
 40311  017D4C  D7D6               	goto	i2l1087
 40312  017D4E                     __end_of_I2C1_ISR:
 40313                           	opt stack 0
 40314                           tosu	equ	0xFFF
 40315                           tosh	equ	0xFFE
 40316                           tosl	equ	0xFFD
 40317                           pclatu	equ	0xFFB
 40318                           pclath	equ	0xFFA
 40319                           tblptru	equ	0xFF8
 40320                           tblptrh	equ	0xFF7
 40321                           tblptrl	equ	0xFF6
 40322                           tablat	equ	0xFF5
 40323                           prodh	equ	0xFF4
 40324                           prodl	equ	0xFF3
 40325                           intcon	equ	0xFF2
 40326                           indf0	equ	0xFEF
 40327                           postinc0	equ	0xFEE
 40328                           fsr0h	equ	0xFEA
 40329                           fsr0l	equ	0xFE9
 40330                           wreg	equ	0xFE8
 40331                           indf1	equ	0xFE7
 40332                           postdec1	equ	0xFE5
 40333                           plusw1	equ	0xFE3
 40334                           fsr1h	equ	0xFE2
 40335                           fsr1l	equ	0xFE1
 40336                           bsr	equ	0xFE0
 40337                           indf2	equ	0xFDF
 40338                           postinc2	equ	0xFDE
 40339                           postdec2	equ	0xFDD
 40340                           plusw2	equ	0xFDB
 40341                           fsr2h	equ	0xFDA
 40342                           fsr2l	equ	0xFD9
 40343                           status	equ	0xFD8
 40344                           
 40345 ;; *************** function _I2C1_Stop *****************
 40346 ;; Defined at:
 40347 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 40348 ;; Parameters:    Size  Location     Type
 40349 ;;  completion_c    1    wreg     enum E17311
 40350 ;; Auto vars:     Size  Location     Type
 40351 ;;  completion_c    1    2[COMRAM] enum E17311
 40352 ;; Return value:  Size  Location     Type
 40353 ;;                  1    wreg      void 
 40354 ;; Registers used:
 40355 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40356 ;; Tracked objects:
 40357 ;;		On entry : 0/0
 40358 ;;		On exit  : 0/0
 40359 ;;		Unchanged: 0/0
 40360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40364 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40365 ;;Total ram usage:        3 bytes
 40366 ;; Hardware stack levels used:    1
 40367 ;; This function calls:
 40368 ;;		Nothing
 40369 ;; This function is called by:
 40370 ;;		_I2C1_ISR
 40371 ;; This function uses a non-reentrant model
 40372 ;;
 40373                           
 40374                           	psect	text121
 40375  01A8B8                     __ptext121:
 40376                           	opt stack 0
 40377  01A8B8                     _I2C1_Stop:
 40378                           	opt stack 16
 40379                           
 40380                           ;incstack = 0
 40381                           ;I2C1_Stop@completion_code stored from wreg
 40382  01A8B8  6E03               	movwf	I2C1_Stop@completion_code,c
 40383                           
 40384                           ;i2c1.c: 586: SSP1CON2bits.PEN = 1;
 40385  01A8BA  8496               	bsf	3990,2,c	;volatile
 40386                           
 40387                           ;i2c1.c: 589: if (p_i2c1_current->pTrFlag != (0))
 40388  01A8BC  0102               	movlb	2	; () banked
 40389  01A8BE  EE20 F003          	lfsr	2,3
 40390  01A8C2  5157               	movf	_p_i2c1_current& (0+255),w,b
 40391  01A8C4  26D9               	addwf	fsr2l,f,c
 40392  01A8C6  5158               	movf	(_p_i2c1_current+1)& (0+255),w,b
 40393  01A8C8  22DA               	addwfc	fsr2h,f,c
 40394  01A8CA  50DE               	movf	postinc2,w,c
 40395  01A8CC  10DE               	iorwf	postinc2,w,c
 40396  01A8CE  B4D8               	btfsc	status,2,c
 40397  01A8D0  D010               	goto	i2l1095
 40398                           
 40399                           ; BSR set to: 2
 40400                           ;i2c1.c: 590: {
 40401                           ;i2c1.c: 592: *(p_i2c1_current->pTrFlag) = completion_code;
 40402  01A8D2  EE20 F003          	lfsr	2,3
 40403  01A8D6  5157               	movf	_p_i2c1_current& (0+255),w,b
 40404  01A8D8  26D9               	addwf	fsr2l,f,c
 40405  01A8DA  5158               	movf	(_p_i2c1_current+1)& (0+255),w,b
 40406  01A8DC  22DA               	addwfc	fsr2h,f,c
 40407  01A8DE  CFDE F001          	movff	postinc2,??_I2C1_Stop
 40408  01A8E2  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 40409  01A8E6  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 40410  01A8EA  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 40411  01A8EE  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 40412  01A8F2                     i2l1095:
 40413                           
 40414                           ; BSR set to: 2
 40415                           ;i2c1.c: 593: }
 40416                           ;i2c1.c: 596: i2c1_state = S_MASTER_IDLE;
 40417                           
 40418                           ; BSR set to: 2
 40419  01A8F2  0E00               	movlw	0
 40420  01A8F4  6F68               	movwf	_i2c1_state& (0+255),b
 40421                           
 40422                           ; BSR set to: 2
 40423  01A8F6  0012               	return		;funcret
 40424  01A8F8                     __end_of_I2C1_Stop:
 40425                           	opt stack 0
 40426                           tosu	equ	0xFFF
 40427                           tosh	equ	0xFFE
 40428                           tosl	equ	0xFFD
 40429                           pclatu	equ	0xFFB
 40430                           pclath	equ	0xFFA
 40431                           tblptru	equ	0xFF8
 40432                           tblptrh	equ	0xFF7
 40433                           tblptrl	equ	0xFF6
 40434                           tablat	equ	0xFF5
 40435                           prodh	equ	0xFF4
 40436                           prodl	equ	0xFF3
 40437                           intcon	equ	0xFF2
 40438                           indf0	equ	0xFEF
 40439                           postinc0	equ	0xFEE
 40440                           fsr0h	equ	0xFEA
 40441                           fsr0l	equ	0xFE9
 40442                           wreg	equ	0xFE8
 40443                           indf1	equ	0xFE7
 40444                           postdec1	equ	0xFE5
 40445                           plusw1	equ	0xFE3
 40446                           fsr1h	equ	0xFE2
 40447                           fsr1l	equ	0xFE1
 40448                           bsr	equ	0xFE0
 40449                           indf2	equ	0xFDF
 40450                           postinc2	equ	0xFDE
 40451                           postdec2	equ	0xFDD
 40452                           plusw2	equ	0xFDB
 40453                           fsr2h	equ	0xFDA
 40454                           fsr2l	equ	0xFD9
 40455                           status	equ	0xFD8
 40456                           
 40457 ;; *************** function _I2C1_FunctionComplete *****************
 40458 ;; Defined at:
 40459 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 40460 ;; Parameters:    Size  Location     Type
 40461 ;;		None
 40462 ;; Auto vars:     Size  Location     Type
 40463 ;;		None
 40464 ;; Return value:  Size  Location     Type
 40465 ;;                  1    wreg      void 
 40466 ;; Registers used:
 40467 ;;		wreg, status,2, status,0
 40468 ;; Tracked objects:
 40469 ;;		On entry : 0/0
 40470 ;;		On exit  : 0/0
 40471 ;;		Unchanged: 0/0
 40472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40477 ;;Total ram usage:        0 bytes
 40478 ;; Hardware stack levels used:    1
 40479 ;; This function calls:
 40480 ;;		Nothing
 40481 ;; This function is called by:
 40482 ;;		_I2C1_ISR
 40483 ;; This function uses a non-reentrant model
 40484 ;;
 40485                           
 40486                           	psect	text122
 40487  01B00A                     __ptext122:
 40488                           	opt stack 0
 40489  01B00A                     _I2C1_FunctionComplete:
 40490                           	opt stack 16
 40491                           
 40492                           ;i2c1.c: 569: p_i2c1_trb_current++;
 40493                           
 40494                           ; BSR set to: 2
 40495                           ;incstack = 0
 40496  01B00A  0E05               	movlw	5
 40497  01B00C  0102               	movlb	2	; () banked
 40498  01B00E  2759               	addwf	_p_i2c1_trb_current& (0+255),f,b
 40499  01B010  0E00               	movlw	0
 40500  01B012  235A               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 40501                           
 40502                           ; BSR set to: 2
 40503                           ;i2c1.c: 572: if(--i2c1_trb_count == 0)
 40504  01B014  2F67               	decfsz	_i2c1_trb_count& (0+255),f,b
 40505  01B016  D003               	goto	i2l1090
 40506                           
 40507                           ; BSR set to: 2
 40508                           ;i2c1.c: 573: {
 40509                           ;i2c1.c: 574: i2c1_state = S_MASTER_SEND_STOP;
 40510  01B018  0E04               	movlw	4
 40511  01B01A  6F68               	movwf	_i2c1_state& (0+255),b
 40512                           
 40513                           ;i2c1.c: 575: }
 40514  01B01C  0012               	return	
 40515  01B01E                     i2l1090:
 40516                           
 40517                           ; BSR set to: 2
 40518                           ;i2c1.c: 576: else
 40519                           ;i2c1.c: 577: {
 40520                           ;i2c1.c: 578: i2c1_state = S_MASTER_RESTART;
 40521                           
 40522                           ; BSR set to: 2
 40523  01B01E  0E01               	movlw	1
 40524  01B020  6F68               	movwf	_i2c1_state& (0+255),b
 40525  01B022  0012               	return	
 40526  01B024                     __end_of_I2C1_FunctionComplete:
 40527                           	opt stack 0
 40528                           tosu	equ	0xFFF
 40529                           tosh	equ	0xFFE
 40530                           tosl	equ	0xFFD
 40531                           pclatu	equ	0xFFB
 40532                           pclath	equ	0xFFA
 40533                           tblptru	equ	0xFF8
 40534                           tblptrh	equ	0xFF7
 40535                           tblptrl	equ	0xFF6
 40536                           tablat	equ	0xFF5
 40537                           prodh	equ	0xFF4
 40538                           prodl	equ	0xFF3
 40539                           intcon	equ	0xFF2
 40540                           indf0	equ	0xFEF
 40541                           postinc0	equ	0xFEE
 40542                           fsr0h	equ	0xFEA
 40543                           fsr0l	equ	0xFE9
 40544                           wreg	equ	0xFE8
 40545                           indf1	equ	0xFE7
 40546                           postdec1	equ	0xFE5
 40547                           plusw1	equ	0xFE3
 40548                           fsr1h	equ	0xFE2
 40549                           fsr1l	equ	0xFE1
 40550                           bsr	equ	0xFE0
 40551                           indf2	equ	0xFDF
 40552                           postinc2	equ	0xFDE
 40553                           postdec2	equ	0xFDD
 40554                           plusw2	equ	0xFDB
 40555                           fsr2h	equ	0xFDA
 40556                           fsr2l	equ	0xFD9
 40557                           status	equ	0xFD8
 40558                           
 40559 ;; *************** function _I2C1_BusCollisionISR *****************
 40560 ;; Defined at:
 40561 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 40562 ;; Parameters:    Size  Location     Type
 40563 ;;		None
 40564 ;; Auto vars:     Size  Location     Type
 40565 ;;		None
 40566 ;; Return value:  Size  Location     Type
 40567 ;;                  1    wreg      void 
 40568 ;; Registers used:
 40569 ;;		None
 40570 ;; Tracked objects:
 40571 ;;		On entry : 0/0
 40572 ;;		On exit  : 0/0
 40573 ;;		Unchanged: 0/0
 40574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40579 ;;Total ram usage:        0 bytes
 40580 ;; Hardware stack levels used:    1
 40581 ;; This function calls:
 40582 ;;		Nothing
 40583 ;; This function is called by:
 40584 ;;		_INTERRUPT_InterruptManagerHigh
 40585 ;; This function uses a non-reentrant model
 40586 ;;
 40587                           
 40588                           	psect	text123
 40589  01B1C4                     __ptext123:
 40590                           	opt stack 0
 40591  01B1C4                     _I2C1_BusCollisionISR:
 40592                           	opt stack 17
 40593                           
 40594                           ;i2c1.c: 745: PIR3bits.BCL1IF = 0;
 40595                           
 40596                           ; BSR set to: 2
 40597                           ;incstack = 0
 40598  01B1C4  010E               	movlb	14	; () banked
 40599  01B1C6  9336               	bcf	54,1,b	;volatile
 40600                           
 40601                           ; BSR set to: 14
 40602  01B1C8  0012               	return		;funcret
 40603  01B1CA                     __end_of_I2C1_BusCollisionISR:
 40604                           	opt stack 0
 40605                           tosu	equ	0xFFF
 40606                           tosh	equ	0xFFE
 40607                           tosl	equ	0xFFD
 40608                           pclatu	equ	0xFFB
 40609                           pclath	equ	0xFFA
 40610                           tblptru	equ	0xFF8
 40611                           tblptrh	equ	0xFF7
 40612                           tblptrl	equ	0xFF6
 40613                           tablat	equ	0xFF5
 40614                           prodh	equ	0xFF4
 40615                           prodl	equ	0xFF3
 40616                           intcon	equ	0xFF2
 40617                           indf0	equ	0xFEF
 40618                           postinc0	equ	0xFEE
 40619                           fsr0h	equ	0xFEA
 40620                           fsr0l	equ	0xFE9
 40621                           wreg	equ	0xFE8
 40622                           indf1	equ	0xFE7
 40623                           postdec1	equ	0xFE5
 40624                           plusw1	equ	0xFE3
 40625                           fsr1h	equ	0xFE2
 40626                           fsr1l	equ	0xFE1
 40627                           bsr	equ	0xFE0
 40628                           indf2	equ	0xFDF
 40629                           postinc2	equ	0xFDE
 40630                           postdec2	equ	0xFDD
 40631                           plusw2	equ	0xFDB
 40632                           fsr2h	equ	0xFDA
 40633                           fsr2l	equ	0xFD9
 40634                           status	equ	0xFD8
 40635                           
 40636 ;; *************** function _HLVD_ISR *****************
 40637 ;; Defined at:
 40638 ;;		line 120 in file "mcc_generated_files/hlvd.c"
 40639 ;; Parameters:    Size  Location     Type
 40640 ;;		None
 40641 ;; Auto vars:     Size  Location     Type
 40642 ;;		None
 40643 ;; Return value:  Size  Location     Type
 40644 ;;                  1    wreg      void 
 40645 ;; Registers used:
 40646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40647 ;; Tracked objects:
 40648 ;;		On entry : 0/0
 40649 ;;		On exit  : 0/0
 40650 ;;		Unchanged: 0/0
 40651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40656 ;;Total ram usage:        0 bytes
 40657 ;; Hardware stack levels used:    1
 40658 ;; Hardware stack levels required when called:    2
 40659 ;; This function calls:
 40660 ;;		i2_writeDoubleToEEPROM
 40661 ;; This function is called by:
 40662 ;;		_INTERRUPT_InterruptManagerHigh
 40663 ;; This function uses a non-reentrant model
 40664 ;;
 40665                           
 40666                           	psect	text124
 40667  01AB0E                     __ptext124:
 40668                           	opt stack 0
 40669  01AB0E                     _HLVD_ISR:
 40670                           	opt stack 15
 40671                           
 40672                           ;hlvd.c: 124: PIR2bits.HLVDIF = 0;
 40673                           
 40674                           ; BSR set to: 14
 40675                           ;incstack = 0
 40676  01AB0E  010E               	movlb	14	; () banked
 40677  01AB10  9F35               	bcf	53,7,b	;volatile
 40678                           
 40679                           ;hlvd.c: 127: SBOREN = 0;
 40680  01AB12  9F4B               	bcf	75,7,b	;volatile
 40681                           
 40682                           ; BSR set to: 14
 40683                           ;hlvd.c: 130: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 40684  01AB14  C0F0  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 40685  01AB18  C0F1  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 40686  01AB1C  C0F2  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 40687  01AB20  C0F3  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 40688  01AB24  0E09               	movlw	low _Total_Energy_address
 40689  01AB26  6EF6               	movwf	tblptrl,c
 40690  01AB28                     	if	1	;There is more than 1 active tblptr byte
 40691  01AB28  0ED0               	movlw	high _Total_Energy_address
 40692  01AB2A  6EF7               	movwf	tblptrh,c
 40693  01AB2C                     	endif
 40694  01AB2C                     	if	1	;There are 3 active tblptr bytes
 40695  01AB2C  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 40696  01AB2E  6EF8               	movwf	tblptru,c
 40697  01AB30                     	endif
 40698  01AB30  0009               	tblrd		*+
 40699  01AB32  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 40700  01AB36  000A               	tblrd		*-
 40701  01AB38  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 40702  01AB3C  ECDB  F0D2         	call	i2_writeDoubleToEEPROM	;wreg free
 40703                           
 40704                           ;hlvd.c: 133: SBOREN = 1;
 40705  01AB40  010E               	movlb	14	; () banked
 40706  01AB42  8F4B               	bsf	75,7,b	;volatile
 40707                           
 40708                           ; BSR set to: 14
 40709  01AB44  0012               	return		;funcret
 40710  01AB46                     __end_of_HLVD_ISR:
 40711                           	opt stack 0
 40712                           tosu	equ	0xFFF
 40713                           tosh	equ	0xFFE
 40714                           tosl	equ	0xFFD
 40715                           pclatu	equ	0xFFB
 40716                           pclath	equ	0xFFA
 40717                           tblptru	equ	0xFF8
 40718                           tblptrh	equ	0xFF7
 40719                           tblptrl	equ	0xFF6
 40720                           tablat	equ	0xFF5
 40721                           prodh	equ	0xFF4
 40722                           prodl	equ	0xFF3
 40723                           intcon	equ	0xFF2
 40724                           indf0	equ	0xFEF
 40725                           postinc0	equ	0xFEE
 40726                           fsr0h	equ	0xFEA
 40727                           fsr0l	equ	0xFE9
 40728                           wreg	equ	0xFE8
 40729                           indf1	equ	0xFE7
 40730                           postdec1	equ	0xFE5
 40731                           plusw1	equ	0xFE3
 40732                           fsr1h	equ	0xFE2
 40733                           fsr1l	equ	0xFE1
 40734                           bsr	equ	0xFE0
 40735                           indf2	equ	0xFDF
 40736                           postinc2	equ	0xFDE
 40737                           postdec2	equ	0xFDD
 40738                           plusw2	equ	0xFDB
 40739                           fsr2h	equ	0xFDA
 40740                           fsr2l	equ	0xFD9
 40741                           status	equ	0xFD8
 40742                           
 40743 ;; *************** function i2_writeDoubleToEEPROM *****************
 40744 ;; Defined at:
 40745 ;;		line 6 in file "double_to_EEPROM.c"
 40746 ;; Parameters:    Size  Location     Type
 40747 ;;  input_double    4    4[COMRAM] void 
 40748 ;;  starting_add    2    8[COMRAM] unsigned int 
 40749 ;; Auto vars:     Size  Location     Type
 40750 ;;  writeDoubleT    4   10[COMRAM] struct .
 40751 ;;  writeDoubleT    2   14[COMRAM] int 
 40752 ;; Return value:  Size  Location     Type
 40753 ;;                  1    wreg      void 
 40754 ;; Registers used:
 40755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40756 ;; Tracked objects:
 40757 ;;		On entry : 0/0
 40758 ;;		On exit  : 0/0
 40759 ;;		Unchanged: 0/0
 40760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40761 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40762 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40764 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40765 ;;Total ram usage:       12 bytes
 40766 ;; Hardware stack levels used:    1
 40767 ;; Hardware stack levels required when called:    1
 40768 ;; This function calls:
 40769 ;;		i2_DATAEE_WriteByte
 40770 ;; This function is called by:
 40771 ;;		_HLVD_ISR
 40772 ;;		_writeEnergyToEEPROMCallback
 40773 ;; This function uses a non-reentrant model
 40774 ;;
 40775                           
 40776                           	psect	text125
 40777  01A5B6                     __ptext125:
 40778                           	opt stack 0
 40779  01A5B6                     i2_writeDoubleToEEPROM:
 40780                           	opt stack 13
 40781                           
 40782                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 40783                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 40784                           
 40785                           ; BSR set to: 14
 40786                           ;incstack = 0
 40787  01A5B6  C005  F00B         	movff	i2writeDoubleToEEPROM@input_double,i2writeDoubleToEEPROM@input_data
 40788  01A5BA  C006  F00C         	movff	i2writeDoubleToEEPROM@input_double+1,i2writeDoubleToEEPROM@input_data+1
 40789  01A5BE  C007  F00D         	movff	i2writeDoubleToEEPROM@input_double+2,i2writeDoubleToEEPROM@input_data+2
 40790  01A5C2  C008  F00E         	movff	i2writeDoubleToEEPROM@input_double+3,i2writeDoubleToEEPROM@input_data+3
 40791                           
 40792                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 40793  01A5C6  0E00               	movlw	0
 40794  01A5C8  6E10               	movwf	i2writeDoubleToEEPROM@byte_index+1,c
 40795  01A5CA  0E00               	movlw	0
 40796  01A5CC  6E0F               	movwf	i2writeDoubleToEEPROM@byte_index,c
 40797  01A5CE                     i2l10897:
 40798  01A5CE  5010               	movf	i2writeDoubleToEEPROM@byte_index+1,w,c
 40799  01A5D0  E117               	bnz	i2l1783
 40800  01A5D2  0E04               	movlw	4
 40801  01A5D4  5C0F               	subwf	i2writeDoubleToEEPROM@byte_index,w,c
 40802  01A5D6  B0D8               	btfsc	status,0,c
 40803  01A5D8  0012               	return	
 40804                           
 40805                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 40806  01A5DA  5009               	movf	i2writeDoubleToEEPROM@starting_address,w,c
 40807  01A5DC  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 40808  01A5DE  6E01               	movwf	i2DATAEE_WriteByte@bAdd,c
 40809  01A5E0  500A               	movf	i2writeDoubleToEEPROM@starting_address+1,w,c
 40810  01A5E2  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 40811  01A5E4  6E02               	movwf	i2DATAEE_WriteByte@bAdd+1,c
 40812  01A5E6  0E0B               	movlw	low i2writeDoubleToEEPROM@input_data
 40813  01A5E8  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 40814  01A5EA  6ED9               	movwf	fsr2l,c
 40815  01A5EC  0E00               	movlw	high i2writeDoubleToEEPROM@input_data
 40816  01A5EE  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 40817  01A5F0  6EDA               	movwf	fsr2h,c
 40818  01A5F2  50DF               	movf	indf2,w,c
 40819  01A5F4  6E03               	movwf	i2DATAEE_WriteByte@bData,c
 40820  01A5F6  EC4E  F0D5         	call	i2_DATAEE_WriteByte	;wreg free
 40821  01A5FA  4A0F               	infsnz	i2writeDoubleToEEPROM@byte_index,f,c
 40822  01A5FC  2A10               	incf	i2writeDoubleToEEPROM@byte_index+1,f,c
 40823  01A5FE  D7E7               	goto	i2l10897
 40824  01A600                     i2l1783:
 40825  01A600  0012               	return		;funcret
 40826  01A602                     __end_ofi2_writeDoubleToEEPROM:
 40827                           	opt stack 0
 40828                           tosu	equ	0xFFF
 40829                           tosh	equ	0xFFE
 40830                           tosl	equ	0xFFD
 40831                           pclatu	equ	0xFFB
 40832                           pclath	equ	0xFFA
 40833                           tblptru	equ	0xFF8
 40834                           tblptrh	equ	0xFF7
 40835                           tblptrl	equ	0xFF6
 40836                           tablat	equ	0xFF5
 40837                           prodh	equ	0xFF4
 40838                           prodl	equ	0xFF3
 40839                           intcon	equ	0xFF2
 40840                           indf0	equ	0xFEF
 40841                           postinc0	equ	0xFEE
 40842                           fsr0h	equ	0xFEA
 40843                           fsr0l	equ	0xFE9
 40844                           wreg	equ	0xFE8
 40845                           indf1	equ	0xFE7
 40846                           postdec1	equ	0xFE5
 40847                           plusw1	equ	0xFE3
 40848                           fsr1h	equ	0xFE2
 40849                           fsr1l	equ	0xFE1
 40850                           bsr	equ	0xFE0
 40851                           indf2	equ	0xFDF
 40852                           postinc2	equ	0xFDE
 40853                           postdec2	equ	0xFDD
 40854                           plusw2	equ	0xFDB
 40855                           fsr2h	equ	0xFDA
 40856                           fsr2l	equ	0xFD9
 40857                           status	equ	0xFD8
 40858                           
 40859 ;; *************** function i2_DATAEE_WriteByte *****************
 40860 ;; Defined at:
 40861 ;;		line 168 in file "mcc_generated_files/memory.c"
 40862 ;; Parameters:    Size  Location     Type
 40863 ;;  bAdd            2    0[COMRAM] unsigned int 
 40864 ;;  bData           1    2[COMRAM] unsigned char 
 40865 ;; Auto vars:     Size  Location     Type
 40866 ;;  DATAEE_Write    1    3[COMRAM] unsigned char 
 40867 ;; Return value:  Size  Location     Type
 40868 ;;                  1    wreg      void 
 40869 ;; Registers used:
 40870 ;;		wreg, status,2, status,0
 40871 ;; Tracked objects:
 40872 ;;		On entry : 0/0
 40873 ;;		On exit  : 0/0
 40874 ;;		Unchanged: 0/0
 40875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40876 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40880 ;;Total ram usage:        4 bytes
 40881 ;; Hardware stack levels used:    1
 40882 ;; This function calls:
 40883 ;;		Nothing
 40884 ;; This function is called by:
 40885 ;;		i2_writeDoubleToEEPROM
 40886 ;; This function uses a non-reentrant model
 40887 ;;
 40888                           
 40889                           	psect	text126
 40890  01AA9C                     __ptext126:
 40891                           	opt stack 0
 40892  01AA9C                     i2_DATAEE_WriteByte:
 40893                           	opt stack 13
 40894                           
 40895                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 40896                           
 40897                           ;incstack = 0
 40898  01AA9C  0E00               	movlw	0
 40899  01AA9E  BEF2               	btfsc	intcon,7,c	;volatile
 40900  01AAA0  0E01               	movlw	1
 40901  01AAA2  6E04               	movwf	i2DATAEE_WriteByte@GIEBitValue,c
 40902                           
 40903                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 40904  01AAA4  5002               	movf	i2DATAEE_WriteByte@bAdd+1,w,c
 40905  01AAA6  0B03               	andlw	3
 40906  01AAA8  6E75               	movwf	3957,c	;volatile
 40907                           
 40908                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 40909  01AAAA  C001  FF74         	movff	i2DATAEE_WriteByte@bAdd,3956	;volatile
 40910                           
 40911                           ;memory.c: 174: NVMDAT = bData;
 40912  01AAAE  C003  FF76         	movff	i2DATAEE_WriteByte@bData,3958	;volatile
 40913                           
 40914                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 40915  01AAB2  0E3F               	movlw	-193
 40916  01AAB4  1677               	andwf	3959,f,c	;volsfr
 40917                           
 40918                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 40919  01AAB6  8477               	bsf	3959,2,c	;volsfr
 40920                           
 40921                           ;memory.c: 177: INTCONbits.GIE = 0;
 40922  01AAB8  9EF2               	bcf	intcon,7,c	;volatile
 40923                           
 40924                           ;memory.c: 178: NVMCON2 = 0x55;
 40925  01AABA  0E55               	movlw	85
 40926  01AABC  6E78               	movwf	3960,c	;volsfr
 40927                           
 40928                           ;memory.c: 179: NVMCON2 = 0xAA;
 40929  01AABE  0EAA               	movlw	170
 40930  01AAC0  6E78               	movwf	3960,c	;volsfr
 40931                           
 40932                           ;memory.c: 180: NVMCON1bits.WR = 1;
 40933  01AAC2  8277               	bsf	3959,1,c	;volsfr
 40934  01AAC4                     
 40935                           ;memory.c: 183: {
 40936  01AAC4  B277               	btfsc	3959,1,c	;volsfr
 40937  01AAC6  D7FE               	goto	i2l827
 40938                           
 40939                           ;memory.c: 184: }
 40940                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 40941  01AAC8  9477               	bcf	3959,2,c	;volsfr
 40942                           
 40943                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 40944  01AACA  B004               	btfsc	i2DATAEE_WriteByte@GIEBitValue,0,c
 40945  01AACC  D002               	bra	i2u1199_45
 40946  01AACE  9EF2               	bcf	intcon,7,c	;volatile
 40947  01AAD0  D001               	bra	i2u1199_46
 40948  01AAD2                     i2u1199_45:
 40949  01AAD2  8EF2               	bsf	intcon,7,c	;volatile
 40950  01AAD4                     i2u1199_46:
 40951  01AAD4  0012               	return		;funcret
 40952  01AAD6                     __end_ofi2_DATAEE_WriteByte:
 40953                           	opt stack 0
 40954                           tosu	equ	0xFFF
 40955                           tosh	equ	0xFFE
 40956                           tosl	equ	0xFFD
 40957                           pclatu	equ	0xFFB
 40958                           pclath	equ	0xFFA
 40959                           tblptru	equ	0xFF8
 40960                           tblptrh	equ	0xFF7
 40961                           tblptrl	equ	0xFF6
 40962                           tablat	equ	0xFF5
 40963                           prodh	equ	0xFF4
 40964                           prodl	equ	0xFF3
 40965                           intcon	equ	0xFF2
 40966                           indf0	equ	0xFEF
 40967                           postinc0	equ	0xFEE
 40968                           fsr0h	equ	0xFEA
 40969                           fsr0l	equ	0xFE9
 40970                           wreg	equ	0xFE8
 40971                           indf1	equ	0xFE7
 40972                           postdec1	equ	0xFE5
 40973                           plusw1	equ	0xFE3
 40974                           fsr1h	equ	0xFE2
 40975                           fsr1l	equ	0xFE1
 40976                           bsr	equ	0xFE0
 40977                           indf2	equ	0xFDF
 40978                           postinc2	equ	0xFDE
 40979                           postdec2	equ	0xFDD
 40980                           plusw2	equ	0xFDB
 40981                           fsr2h	equ	0xFDA
 40982                           fsr2l	equ	0xFD9
 40983                           status	equ	0xFD8
 40984                           
 40985 ;; *************** function _EUSART2_Receive_ISR *****************
 40986 ;; Defined at:
 40987 ;;		line 209 in file "mcc_generated_files/eusart2.c"
 40988 ;; Parameters:    Size  Location     Type
 40989 ;;		None
 40990 ;; Auto vars:     Size  Location     Type
 40991 ;;		None
 40992 ;; Return value:  Size  Location     Type
 40993 ;;                  1    wreg      void 
 40994 ;; Registers used:
 40995 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40996 ;; Tracked objects:
 40997 ;;		On entry : 0/0
 40998 ;;		On exit  : 0/0
 40999 ;;		Unchanged: 0/0
 41000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41005 ;;Total ram usage:        0 bytes
 41006 ;; Hardware stack levels used:    1
 41007 ;; Hardware stack levels required when called:    4
 41008 ;; This function calls:
 41009 ;;		i2_printf
 41010 ;; This function is called by:
 41011 ;;		_EUSART2_Initialize
 41012 ;;		_INTERRUPT_InterruptManagerHigh
 41013 ;; This function uses a non-reentrant model
 41014 ;;
 41015                           
 41016                           	psect	text127
 41017  0196F2                     __ptext127:
 41018                           	opt stack 0
 41019  0196F2                     _EUSART2_Receive_ISR:
 41020                           	opt stack 13
 41021                           
 41022                           ;eusart2.c: 212: if(1 == RC2STAbits.OERR)
 41023                           
 41024                           ;incstack = 0
 41025  0196F2  010E               	movlb	14	; () banked
 41026  0196F4  A3F5               	btfss	245,1,b	;volatile
 41027  0196F6  D003               	goto	i2l447
 41028                           
 41029                           ; BSR set to: 14
 41030                           ;eusart2.c: 213: {
 41031                           ;eusart2.c: 216: RC2STAbits.CREN = 0;
 41032  0196F8  99F5               	bcf	245,4,b	;volatile
 41033                           
 41034                           ;eusart2.c: 217: RC2STAbits.CREN = 1;
 41035  0196FA  89F5               	bsf	245,4,b	;volatile
 41036                           
 41037                           ;eusart2.c: 218: LATFbits.LATF1 = 1;
 41038  0196FC  827E               	bsf	3966,1,c	;volatile
 41039  0196FE                     i2l447:
 41040                           
 41041                           ; BSR set to: 14
 41042                           ;eusart2.c: 219: }
 41043                           ;eusart2.c: 222: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 41044                           
 41045                           ; BSR set to: 14
 41046  0196FE  0100               	movlb	0	; () banked
 41047  019700  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 41048  019702  0D01               	mullw	1
 41049  019704  0E80               	movlw	low _eusart2RxBuffer
 41050  019706  24F3               	addwf	prodl,w,c
 41051  019708  6ED9               	movwf	fsr2l,c
 41052  01970A  0E03               	movlw	high _eusart2RxBuffer
 41053  01970C  20F4               	addwfc	prodh,w,c
 41054  01970E  6EDA               	movwf	fsr2h,c
 41055  019710  CEF1 FFDF          	movff	3825,indf2	;volatile
 41056                           
 41057                           ; BSR set to: 0
 41058  019714  2BF4               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 41059                           
 41060                           ; BSR set to: 0
 41061                           ;eusart2.c: 223: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 41062  019716  0E3F               	movlw	63
 41063  019718  65F4               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 41064  01971A  D002               	goto	i2l448
 41065                           
 41066                           ; BSR set to: 0
 41067                           ;eusart2.c: 224: {
 41068                           ;eusart2.c: 225: eusart2RxHead = 0;
 41069  01971C  0E00               	movlw	0
 41070  01971E  6FF4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 41071  019720                     i2l448:
 41072                           
 41073                           ; BSR set to: 0
 41074                           ;eusart2.c: 226: }
 41075                           ;eusart2.c: 227: eusart2RxCount++;
 41076                           
 41077                           ; BSR set to: 0
 41078  019720  0102               	movlb	2	; () banked
 41079  019722  2B69               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 41080                           
 41081                           ; BSR set to: 2
 41082                           ;eusart2.c: 233: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 41083  019724  0E0A               	movlw	10
 41084  019726  010E               	movlb	14	; () banked
 41085  019728  19F1               	xorwf	241,w,b	;volatile
 41086  01972A  B4D8               	btfsc	status,2,c
 41087  01972C  D004               	goto	i2u3343_40
 41088                           
 41089                           ; BSR set to: 14
 41090  01972E  0E0D               	movlw	13
 41091  019730  19F1               	xorwf	241,w,b	;volatile
 41092  019732  A4D8               	btfss	status,2,c
 41093  019734  D006               	goto	i2l449
 41094  019736                     i2u3343_40:
 41095                           
 41096                           ; BSR set to: 14
 41097                           ;eusart2.c: 235: eusart2RxStringReady = 1;
 41098  019736  0100               	movlb	0	; () banked
 41099  019738  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 41100                           
 41101                           ; BSR set to: 0
 41102                           ;eusart2.c: 238: RC2REG = 0;
 41103  01973A  0E00               	movlw	0
 41104  01973C  010E               	movlb	14	; () banked
 41105  01973E  6FF1               	movwf	241,b	;volatile
 41106                           
 41107                           ;eusart2.c: 240: }
 41108  019740  D002               	goto	i2l452
 41109  019742                     i2l449:
 41110                           
 41111                           ; BSR set to: 14
 41112                           ;eusart2.c: 242: else {
 41113                           ;eusart2.c: 244: eusart2RxStringReady = 0;
 41114  019742  0100               	movlb	0	; () banked
 41115  019744  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 41116  019746                     i2l452:
 41117                           
 41118                           ;eusart2.c: 246: }
 41119                           ;eusart2.c: 249: if((RC2REG == (int) '\b')) {
 41120                           
 41121                           ; BSR set to: 0
 41122  019746  0E08               	movlw	8
 41123  019748  010E               	movlb	14	; () banked
 41124  01974A  19F1               	xorwf	241,w,b	;volatile
 41125  01974C  A4D8               	btfss	status,2,c
 41126  01974E  0012               	return	
 41127                           
 41128                           ; BSR set to: 14
 41129                           ;eusart2.c: 251: eusart2RxBuffer[eusart2RxHead] = '\0';
 41130  019750  0100               	movlb	0	; () banked
 41131  019752  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 41132  019754  0D01               	mullw	1
 41133  019756  0E80               	movlw	low _eusart2RxBuffer
 41134  019758  24F3               	addwf	prodl,w,c
 41135  01975A  6ED9               	movwf	fsr2l,c
 41136  01975C  0E03               	movlw	high _eusart2RxBuffer
 41137  01975E  20F4               	addwfc	prodh,w,c
 41138  019760  6EDA               	movwf	fsr2h,c
 41139  019762  0E00               	movlw	0
 41140  019764  6EDF               	movwf	indf2,c
 41141                           
 41142                           ; BSR set to: 0
 41143                           ;eusart2.c: 252: eusart2RxHead--;
 41144  019766  07F4               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 41145                           
 41146                           ; BSR set to: 0
 41147                           ;eusart2.c: 255: printf("\033[K");
 41148  019768  0EC7               	movlw	low STR_1
 41149  01976A  6FB2               	movwf	i2printf@f& (0+255),b
 41150  01976C  0EFF               	movlw	high STR_1
 41151  01976E  6FB3               	movwf	(i2printf@f+1)& (0+255),b
 41152  019770  ECF5  F0D4         	call	i2_printf	;wreg free
 41153                           
 41154                           ;eusart2.c: 257: if(eusart2RxHead != eusart2RxTail) {
 41155  019774  0101               	movlb	1	; () banked
 41156  019776  51DE               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 41157  019778  0100               	movlb	0	; () banked
 41158  01977A  19F4               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 41159  01977C  B4D8               	btfsc	status,2,c
 41160  01977E  D00B               	goto	i2l454
 41161                           
 41162                           ; BSR set to: 0
 41163                           ;eusart2.c: 259: eusart2RxBuffer[eusart2RxHead] = '\0';
 41164  019780  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 41165  019782  0D01               	mullw	1
 41166  019784  0E80               	movlw	low _eusart2RxBuffer
 41167  019786  24F3               	addwf	prodl,w,c
 41168  019788  6ED9               	movwf	fsr2l,c
 41169  01978A  0E03               	movlw	high _eusart2RxBuffer
 41170  01978C  20F4               	addwfc	prodh,w,c
 41171  01978E  6EDA               	movwf	fsr2h,c
 41172  019790  0E00               	movlw	0
 41173  019792  6EDF               	movwf	indf2,c
 41174                           
 41175                           ; BSR set to: 0
 41176                           ;eusart2.c: 260: eusart2RxHead--;
 41177  019794  07F4               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 41178  019796                     i2l454:
 41179                           
 41180                           ; BSR set to: 0
 41181                           ;eusart2.c: 262: }
 41182                           ;eusart2.c: 264: RC2REG = 0;
 41183                           
 41184                           ; BSR set to: 0
 41185  019796  0E00               	movlw	0
 41186  019798  010E               	movlb	14	; () banked
 41187  01979A  6FF1               	movwf	241,b	;volatile
 41188  01979C  0012               	return	
 41189  01979E                     __end_of_EUSART2_Receive_ISR:
 41190                           	opt stack 0
 41191                           tosu	equ	0xFFF
 41192                           tosh	equ	0xFFE
 41193                           tosl	equ	0xFFD
 41194                           pclatu	equ	0xFFB
 41195                           pclath	equ	0xFFA
 41196                           tblptru	equ	0xFF8
 41197                           tblptrh	equ	0xFF7
 41198                           tblptrl	equ	0xFF6
 41199                           tablat	equ	0xFF5
 41200                           prodh	equ	0xFF4
 41201                           prodl	equ	0xFF3
 41202                           intcon	equ	0xFF2
 41203                           indf0	equ	0xFEF
 41204                           postinc0	equ	0xFEE
 41205                           fsr0h	equ	0xFEA
 41206                           fsr0l	equ	0xFE9
 41207                           wreg	equ	0xFE8
 41208                           indf1	equ	0xFE7
 41209                           postdec1	equ	0xFE5
 41210                           plusw1	equ	0xFE3
 41211                           fsr1h	equ	0xFE2
 41212                           fsr1l	equ	0xFE1
 41213                           bsr	equ	0xFE0
 41214                           indf2	equ	0xFDF
 41215                           postinc2	equ	0xFDE
 41216                           postdec2	equ	0xFDD
 41217                           plusw2	equ	0xFDB
 41218                           fsr2h	equ	0xFDA
 41219                           fsr2l	equ	0xFD9
 41220                           status	equ	0xFD8
 41221                           
 41222 ;; *************** function i2_printf *****************
 41223 ;; Defined at:
 41224 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 41225 ;; Parameters:    Size  Location     Type
 41226 ;;  f               2   82[BANK0 ] PTR const unsigned char 
 41227 ;;		 -> STR_172(13), STR_171(31), STR_170(26), STR_169(28), 
 41228 ;;		 -> STR_168(426), STR_166(30), STR_165(46), STR_164(39), 
 41229 ;;		 -> STR_163(62), STR_162(55), STR_161(470), STR_159(3082), 
 41230 ;;		 -> STR_157(492), STR_155(748), STR_153(720), STR_151(970), 
 41231 ;;		 -> STR_149(54), STR_147(54), STR_145(45), STR_143(51), 
 41232 ;;		 -> STR_141(52), STR_139(46), STR_137(51), STR_135(53), 
 41233 ;;		 -> STR_133(58), STR_131(71), STR_130(63), STR_129(37), 
 41234 ;;		 -> STR_128(46), STR_127(102), STR_126(86), STR_124(25), 
 41235 ;;		 -> STR_122(42), STR_121(53), STR_120(31), STR_118(29), 
 41236 ;;		 -> STR_117(28), STR_115(42), STR_113(41), STR_111(34), 
 41237 ;;		 -> STR_109(53), STR_108(52), STR_107(105), STR_106(105), 
 41238 ;;		 -> STR_104(59), STR_102(73), STR_100(56), STR_98(34), 
 41239 ;;		 -> STR_96(34), STR_94(32), STR_92(37), STR_90(58), 
 41240 ;;		 -> STR_88(36), STR_86(36), STR_84(37), STR_82(31), 
 41241 ;;		 -> STR_80(35), STR_79(87), STR_78(33), STR_76(21), 
 41242 ;;		 -> STR_74(24), STR_73(48), STR_63(54), STR_62(64), 
 41243 ;;		 -> STR_60(59), STR_58(85), STR_56(47), STR_55(17), 
 41244 ;;		 -> STR_52(52), STR_50(4), STR_49(5), STR_47(4), 
 41245 ;;		 -> STR_46(5), STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), 
 41246 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(5), 
 41247 ;;		 -> STR_9(3), STR_8(372), STR_7(4), STR_6(5), 
 41248 ;;		 -> STR_1(4), 
 41249 ;; Auto vars:     Size  Location     Type
 41250 ;;  printf          5   86[BANK0 ] struct __prbuf
 41251 ;;  printf          2   84[BANK0 ] PTR void [1]
 41252 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 41253 ;; Return value:  Size  Location     Type
 41254 ;;                  2   82[BANK0 ] int 
 41255 ;; Registers used:
 41256 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41257 ;; Tracked objects:
 41258 ;;		On entry : 0/0
 41259 ;;		On exit  : 0/0
 41260 ;;		Unchanged: 0/0
 41261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41262 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41263 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41265 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41266 ;;Total ram usage:        9 bytes
 41267 ;; Hardware stack levels used:    1
 41268 ;; Hardware stack levels required when called:    3
 41269 ;; This function calls:
 41270 ;;		i2__doprnt
 41271 ;; This function is called by:
 41272 ;;		_EUSART2_Receive_ISR
 41273 ;; This function uses a non-reentrant model
 41274 ;;
 41275                           
 41276                           	psect	text128
 41277  01A9EA                     __ptext128:
 41278                           	opt stack 0
 41279  01A9EA                     i2_printf:
 41280                           	opt stack 13
 41281                           
 41282                           ; BSR set to: 14
 41283                           ;incstack = 0
 41284  01A9EA  0E00               	movlw	0
 41285  01A9EC  0100               	movlb	0	; () banked
 41286  01A9EE  6FB6               	movwf	i2printf@pb& (0+255),b
 41287  01A9F0  0E00               	movlw	0
 41288  01A9F2  6FB7               	movwf	(i2printf@pb+1)& (0+255),b
 41289  01A9F4  0E9E               	movlw	low i2_putch
 41290  01A9F6  6FB8               	movwf	(i2printf@pb+2)& (0+255),b
 41291  01A9F8  0EB1               	movlw	high i2_putch
 41292  01A9FA  6FB9               	movwf	(i2printf@pb+3)& (0+255),b
 41293  01A9FC  0E01               	movlw	low (i2_putch shr (0+16))
 41294  01A9FE  6FBA               	movwf	(i2printf@pb+4)& (0+255),b
 41295  01AA00  0EB4               	movlw	low (?i2_printf+2)
 41296  01AA02  6FB4               	movwf	i2printf@ap& (0+255),b
 41297  01AA04  0E00               	movlw	high (?i2_printf+2)
 41298  01AA06  6FB5               	movwf	(i2printf@ap+1)& (0+255),b
 41299                           
 41300                           ; BSR set to: 0
 41301                           ;	Return value of i2_printf is never used
 41302  01AA08  0EB6               	movlw	low i2printf@pb
 41303  01AA0A  6F88               	movwf	i2__doprnt@pb& (0+255),b
 41304  01AA0C  0E00               	movlw	high i2printf@pb
 41305  01AA0E  6F89               	movwf	(i2__doprnt@pb+1)& (0+255),b
 41306  01AA10  C0B2  F08A         	movff	i2printf@f,i2__doprnt@f
 41307  01AA14  C0B3  F08B         	movff	i2printf@f+1,i2__doprnt@f+1
 41308  01AA18  0EB4               	movlw	low i2printf@ap
 41309  01AA1A  6F8C               	movwf	i2__doprnt@ap& (0+255),b
 41310  01AA1C  0E00               	movlw	high i2printf@ap
 41311  01AA1E  6F8D               	movwf	(i2__doprnt@ap+1)& (0+255),b
 41312  01AA20  ECB2  F095         	call	i2__doprnt	;wreg free
 41313  01AA24  0012               	return	
 41314  01AA26                     __end_ofi2_printf:
 41315                           	opt stack 0
 41316                           tosu	equ	0xFFF
 41317                           tosh	equ	0xFFE
 41318                           tosl	equ	0xFFD
 41319                           pclatu	equ	0xFFB
 41320                           pclath	equ	0xFFA
 41321                           tblptru	equ	0xFF8
 41322                           tblptrh	equ	0xFF7
 41323                           tblptrl	equ	0xFF6
 41324                           tablat	equ	0xFF5
 41325                           prodh	equ	0xFF4
 41326                           prodl	equ	0xFF3
 41327                           intcon	equ	0xFF2
 41328                           indf0	equ	0xFEF
 41329                           postinc0	equ	0xFEE
 41330                           fsr0h	equ	0xFEA
 41331                           fsr0l	equ	0xFE9
 41332                           wreg	equ	0xFE8
 41333                           indf1	equ	0xFE7
 41334                           postdec1	equ	0xFE5
 41335                           plusw1	equ	0xFE3
 41336                           fsr1h	equ	0xFE2
 41337                           fsr1l	equ	0xFE1
 41338                           bsr	equ	0xFE0
 41339                           indf2	equ	0xFDF
 41340                           postinc2	equ	0xFDE
 41341                           postdec2	equ	0xFDD
 41342                           plusw2	equ	0xFDB
 41343                           fsr2h	equ	0xFDA
 41344                           fsr2l	equ	0xFD9
 41345                           status	equ	0xFD8
 41346                           
 41347 ;; *************** function i2__doprnt *****************
 41348 ;; Defined at:
 41349 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 41350 ;; Parameters:    Size  Location     Type
 41351 ;;  pb              2   40[BANK0 ] PTR struct __prbuf
 41352 ;;		 -> sprintf@pb(5), printf@pb(5), 
 41353 ;;  f               2   42[BANK0 ] PTR const unsigned char 
 41354 ;;		 -> STR_190(11), STR_172(13), STR_171(31), STR_170(26), 
 41355 ;;		 -> STR_169(28), STR_168(426), STR_166(30), STR_165(46), 
 41356 ;;		 -> STR_164(39), STR_163(62), STR_162(55), STR_161(470), 
 41357 ;;		 -> STR_159(3082), STR_157(492), STR_155(748), STR_153(720), 
 41358 ;;		 -> STR_151(970), STR_149(54), STR_147(54), STR_145(45), 
 41359 ;;		 -> STR_143(51), STR_141(52), STR_139(46), STR_137(51), 
 41360 ;;		 -> STR_135(53), STR_133(58), STR_131(71), STR_130(63), 
 41361 ;;		 -> STR_129(37), STR_128(46), STR_127(102), STR_126(86), 
 41362 ;;		 -> STR_124(25), STR_122(42), STR_121(53), STR_120(31), 
 41363 ;;		 -> STR_118(29), STR_117(28), STR_115(42), STR_113(41), 
 41364 ;;		 -> STR_111(34), STR_109(53), STR_108(52), STR_107(105), 
 41365 ;;		 -> STR_106(105), STR_104(59), STR_102(73), STR_100(56), 
 41366 ;;		 -> STR_98(34), STR_96(34), STR_94(32), STR_92(37), 
 41367 ;;		 -> STR_90(58), STR_88(36), STR_86(36), STR_84(37), 
 41368 ;;		 -> STR_82(31), STR_80(35), STR_79(87), STR_78(33), 
 41369 ;;		 -> STR_76(21), STR_74(24), STR_73(48), STR_63(54), 
 41370 ;;		 -> STR_62(64), STR_60(59), STR_58(85), STR_56(47), 
 41371 ;;		 -> STR_55(17), STR_52(52), STR_50(4), STR_49(5), 
 41372 ;;		 -> STR_47(4), STR_46(5), STR_44(3), terminal_textAttributes@output_buff(15), 
 41373 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
 41374 ;;		 -> STR_10(5), STR_9(3), STR_8(372), STR_7(4), 
 41375 ;;		 -> STR_6(5), STR_1(4), 
 41376 ;;  ap              2   44[BANK0 ] PTR PTR void 
 41377 ;;		 -> sprintf@ap(2), printf@ap(2), 
 41378 ;; Auto vars:     Size  Location     Type
 41379 ;;  _doprnt         4   71[BANK0 ] unsigned long 
 41380 ;;  _doprnt         4   67[BANK0 ] unsigned long 
 41381 ;;  _doprnt         4   63[BANK0 ] struct .
 41382 ;;  _doprnt         2   79[BANK0 ] int 
 41383 ;;  _doprnt         2   77[BANK0 ] unsigned short 
 41384 ;;  _doprnt         2   75[BANK0 ] int 
 41385 ;;  _doprnt         2   61[BANK0 ] int 
 41386 ;;  _doprnt         2   59[BANK0 ] unsigned int 
 41387 ;;  _doprnt         2   57[BANK0 ] PTR const unsigned char 
 41388 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_188(7), 
 41389 ;;		 -> _doprnt@c(1), STR_185(16), STR_184(22), STR_183(21), 
 41390 ;;		 -> STR_182(27), STR_181(41), STR_180(32), STR_179(19), 
 41391 ;;		 -> STR_178(16), STR_177(15), STR_176(16), STR_175(10), 
 41392 ;;		 -> STR_174(13), STR_173(12), ringBufferLUT@channel_name(22), TRIAC_Firing_Angle(4), 
 41393 ;;		 -> NULL(0), 
 41394 ;;  _doprnt         1   81[BANK0 ] char 
 41395 ;;  _doprnt         1   56[BANK0 ] unsigned char 
 41396 ;;  _doprnt         1    0        unsigned char 
 41397 ;; Return value:  Size  Location     Type
 41398 ;;                  2   40[BANK0 ] int 
 41399 ;; Registers used:
 41400 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41401 ;; Tracked objects:
 41402 ;;		On entry : 0/0
 41403 ;;		On exit  : 0/0
 41404 ;;		Unchanged: 0/0
 41405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41406 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41407 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41408 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41409 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41410 ;;Total ram usage:       42 bytes
 41411 ;; Hardware stack levels used:    1
 41412 ;; Hardware stack levels required when called:    2
 41413 ;; This function calls:
 41414 ;;		Absolute function
 41415 ;;		i2___awdiv
 41416 ;;		i2___fladd
 41417 ;;		i2___flge
 41418 ;;		i2___flmul
 41419 ;;		i2___flneg
 41420 ;;		i2___flsub
 41421 ;;		i2___fltol
 41422 ;;		i2___lldiv
 41423 ;;		i2___llmod
 41424 ;;		i2___wmul
 41425 ;;		i2___xxtofl
 41426 ;;		i2__div_to_l_
 41427 ;;		i2__tdiv_to_l_
 41428 ;;		i2_fround
 41429 ;;		i2_isdigit
 41430 ;;		i2_putch
 41431 ;;		i2_scale
 41432 ;; This function is called by:
 41433 ;;		i2_printf
 41434 ;; This function uses a non-reentrant model
 41435 ;;
 41436                           
 41437                           	psect	text129
 41438  012B64                     __ptext129:
 41439                           	opt stack 0
 41440  012B64                     i2__doprnt:
 41441                           	opt stack 13
 41442                           
 41443                           ;doprnt.c: 499: signed char c;
 41444                           ;doprnt.c: 501: int width;
 41445                           ;doprnt.c: 504: int prec;
 41446                           ;doprnt.c: 508: unsigned short flag;
 41447                           ;doprnt.c: 515: char d;
 41448                           ;doprnt.c: 516: double fval;
 41449                           ;doprnt.c: 517: int exp;
 41450                           ;doprnt.c: 523: union {
 41451                           ;doprnt.c: 524: unsigned long vd;
 41452                           ;doprnt.c: 525: double integ;
 41453                           ;doprnt.c: 526: } tmpval;
 41454                           ;doprnt.c: 528: unsigned long val;
 41455                           ;doprnt.c: 529: unsigned len;
 41456                           ;doprnt.c: 530: const char * cp;
 41457                           ;doprnt.c: 536: while(c = *f++) {
 41458                           
 41459                           ;incstack = 0
 41460  012B64  EF11  F0A0         	goto	i2u3265_40
 41461  012B68                     
 41462                           ;doprnt.c: 538: if(c != '%')
 41463  012B68  0E25               	movlw	37
 41464  012B6A  0100               	movlb	0	; () banked
 41465  012B6C  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 41466  012B6E  B4D8               	btfsc	status,2,c
 41467  012B70  D036               	goto	i2l1909
 41468                           
 41469                           ; BSR set to: 0
 41470                           ;doprnt.c: 540: {
 41471                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 41472  012B72  EE20 F002          	lfsr	2,2
 41473  012B76  5188               	movf	i2__doprnt@pb& (0+255),w,b
 41474  012B78  26D9               	addwf	fsr2l,f,c
 41475  012B7A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41476  012B7C  22DA               	addwfc	fsr2h,f,c
 41477  012B7E  50DE               	movf	postinc2,w,c
 41478  012B80  10DE               	iorwf	postinc2,w,c
 41479  012B82  10DE               	iorwf	postinc2,w,c
 41480  012B84  B4D8               	btfsc	status,2,c
 41481  012B86  D014               	goto	i2l1910
 41482                           
 41483                           ; BSR set to: 0
 41484  012B88  EE20 F002          	lfsr	2,2
 41485  012B8C  5188               	movf	i2__doprnt@pb& (0+255),w,b
 41486  012B8E  26D9               	addwf	fsr2l,f,c
 41487  012B90  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41488  012B92  22DA               	addwfc	fsr2h,f,c
 41489  012B94  D802               	call	i2u3155_48
 41490  012B96  EF11  F0A0         	goto	i2u3265_40
 41491  012B9A                     i2u3155_48:
 41492  012B9A  0005               	push	
 41493  012B9C  6EFA               	movwf	pclath,c
 41494  012B9E  50DE               	movf	postinc2,w,c
 41495  012BA0  6EFD               	movwf	tosl,c
 41496  012BA2  50DE               	movf	postinc2,w,c
 41497  012BA4  6EFE               	movwf	tosh,c
 41498  012BA6  50DE               	movf	postinc2,w,c
 41499  012BA8  6EFF               	movwf	tosu,c
 41500  012BAA  50FA               	movf	pclath,w,c
 41501  012BAC  51B1               	movf	i2__doprnt@c& (0+255),w,b
 41502  012BAE  0012               	return		;indir
 41503  012BB0                     i2l1910:
 41504  012BB0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 41505  012BB4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41506  012BB8  CFDE F08E          	movff	postinc2,??i2__doprnt
 41507  012BBC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 41508  012BC0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 41509  012BC4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 41510  012BC8  C0B1  FFDF         	movff	i2__doprnt@c,indf2
 41511  012BCC  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 41512  012BD0  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41513  012BD4  2ADE               	incf	postinc2,f,c
 41514  012BD6  0E00               	movlw	0
 41515  012BD8  22DD               	addwfc	postdec2,f,c
 41516                           
 41517                           ;doprnt.c: 542: continue;
 41518  012BDA  EF11  F0A0         	goto	i2u3265_40
 41519  012BDE                     i2l1909:
 41520                           
 41521                           ;doprnt.c: 543: }
 41522                           ;doprnt.c: 546: width = 0;
 41523  012BDE  0E00               	movlw	0
 41524  012BE0  0100               	movlb	0	; () banked
 41525  012BE2  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 41526  012BE4  0E00               	movlw	0
 41527  012BE6  6FAB               	movwf	i2__doprnt@width& (0+255),b
 41528                           
 41529                           ;doprnt.c: 548: flag = 0;
 41530  012BE8  0E00               	movlw	0
 41531  012BEA  6FAE               	movwf	(i2__doprnt@flag+1)& (0+255),b
 41532  012BEC  0E00               	movlw	0
 41533  012BEE  6FAD               	movwf	i2__doprnt@flag& (0+255),b
 41534                           
 41535                           ; BSR set to: 0
 41536                           ;doprnt.c: 551: switch(*f) {
 41537                           
 41538                           ;doprnt.c: 550: for(;;) {
 41539  012BF0  D004               	goto	i2l1913
 41540  012BF2                     
 41541                           ;doprnt.c: 580: flag |= 0x04;
 41542                           
 41543                           ; BSR set to: 0
 41544  012BF2  0100               	movlb	0	; () banked
 41545  012BF4  85AD               	bsf	i2__doprnt@flag& (0+255),2,b
 41546                           
 41547                           ;doprnt.c: 581: f++;
 41548  012BF6  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 41549  012BF8  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 41550  012BFA                     i2l1913:
 41551                           
 41552                           ; BSR set to: 0
 41553  012BFA  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 41554  012BFE  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41555  012C02  0E00               	movlw	low (__mediumconst shr (0+16))
 41556  012C04  6EF8               	movwf	tblptru,c
 41557  012C06  0E0D               	movlw	(high __ramtop+-1)
 41558  012C08  64F7               	cpfsgt	tblptrh,c
 41559  012C0A  D003               	bra	i2u3156_47
 41560  012C0C  0008               	tblrd		*
 41561  012C0E  50F5               	movf	tablat,w,c
 41562  012C10  D005               	bra	i2u3156_40
 41563  012C12                     i2u3156_47:
 41564  012C12  CFF6 FFE9          	movff	tblptrl,fsr0l
 41565  012C16  CFF7 FFEA          	movff	tblptrh,fsr0h
 41566  012C1A  50EF               	movf	indf0,w,c
 41567  012C1C                     i2u3156_40:
 41568                           
 41569                           ; Switch size 1, requested type "space"
 41570                           ; Number of cases is 1, Range of values is 48 to 48
 41571                           ; switch strategies available:
 41572                           ; Name         Instructions Cycles
 41573                           ; simple_byte            4     3 (average)
 41574                           ;	Chosen strategy is simple_byte
 41575  012C1C  0A30               	xorlw	48	; case 48
 41576  012C1E  B4D8               	btfsc	status,2,c
 41577  012C20  D7E8               	goto	i2l1914
 41578                           
 41579                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 41580                           
 41581                           ;doprnt.c: 586: }
 41582                           
 41583                           ;doprnt.c: 585: break;
 41584  012C22  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 41585  012C26  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41586  012C2A  0E00               	movlw	low (__mediumconst shr (0+16))
 41587  012C2C  6EF8               	movwf	tblptru,c
 41588  012C2E  0E0D               	movlw	(high __ramtop+-1)
 41589  012C30  64F7               	cpfsgt	tblptrh,c
 41590  012C32  D003               	bra	i2u3157_47
 41591  012C34  0008               	tblrd		*
 41592  012C36  50F5               	movf	tablat,w,c
 41593  012C38  D005               	bra	i2u3157_40
 41594  012C3A                     i2u3157_47:
 41595  012C3A  CFF6 FFE9          	movff	tblptrl,fsr0l
 41596  012C3E  CFF7 FFEA          	movff	tblptrh,fsr0h
 41597  012C42  50EF               	movf	indf0,w,c
 41598  012C44                     i2u3157_40:
 41599  012C44  ECA4  F0D7         	call	i2_isdigit
 41600  012C48  A0D8               	btfss	status,0,c
 41601  012C4A  D04B               	goto	i2u3161_40
 41602                           
 41603                           ;doprnt.c: 598: width = 0;
 41604  012C4C  0E00               	movlw	0
 41605  012C4E  0100               	movlb	0	; () banked
 41606  012C50  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 41607  012C52  0E00               	movlw	0
 41608  012C54  6FAB               	movwf	i2__doprnt@width& (0+255),b
 41609  012C56                     
 41610                           ;doprnt.c: 600: width *= 10;
 41611                           
 41612                           ; BSR set to: 0
 41613  012C56  C0AB  F001         	movff	i2__doprnt@width,i2___wmul@multiplier
 41614  012C5A  C0AC  F002         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 41615  012C5E  0E00               	movlw	0
 41616  012C60  6E04               	movwf	i2___wmul@multiplicand+1,c
 41617  012C62  0E0A               	movlw	10
 41618  012C64  6E03               	movwf	i2___wmul@multiplicand,c
 41619  012C66  EC2A  F0D7         	call	i2___wmul	;wreg free
 41620  012C6A  C001  F0AB         	movff	?i2___wmul,i2__doprnt@width
 41621  012C6E  C002  F0AC         	movff	?i2___wmul+1,i2__doprnt@width+1
 41622                           
 41623                           ;doprnt.c: 601: width += *f++ - '0';
 41624  012C72  0ED0               	movlw	208
 41625  012C74  0100               	movlb	0	; () banked
 41626  012C76  6F8E               	movwf	??i2__doprnt& (0+255),b
 41627  012C78  0EFF               	movlw	255
 41628  012C7A  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 41629  012C7C  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 41630  012C80  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41631  012C84  0E00               	movlw	low (__mediumconst shr (0+16))
 41632  012C86  6EF8               	movwf	tblptru,c
 41633  012C88  0E0D               	movlw	(high __ramtop+-1)
 41634  012C8A  64F7               	cpfsgt	tblptrh,c
 41635  012C8C  D003               	bra	i2u3159_47
 41636  012C8E  0008               	tblrd		*
 41637  012C90  50F5               	movf	tablat,w,c
 41638  012C92  D005               	bra	i2u3159_40
 41639  012C94                     i2u3159_47:
 41640  012C94  CFF6 FFE9          	movff	tblptrl,fsr0l
 41641  012C98  CFF7 FFEA          	movff	tblptrh,fsr0h
 41642  012C9C  50EF               	movf	indf0,w,c
 41643  012C9E                     i2u3159_40:
 41644  012C9E  0100               	movlb	0	; () banked
 41645  012CA0  6F90               	movwf	(??i2__doprnt+2)& (0+255),b
 41646  012CA2  6B91               	clrf	(??i2__doprnt+3)& (0+255),b
 41647  012CA4  518E               	movf	??i2__doprnt& (0+255),w,b
 41648  012CA6  2790               	addwf	(??i2__doprnt+2)& (0+255),f,b
 41649  012CA8  518F               	movf	(??i2__doprnt+1)& (0+255),w,b
 41650  012CAA  2391               	addwfc	(??i2__doprnt+3)& (0+255),f,b
 41651  012CAC  5190               	movf	(??i2__doprnt+2)& (0+255),w,b
 41652  012CAE  27AB               	addwf	i2__doprnt@width& (0+255),f,b
 41653  012CB0  5191               	movf	(??i2__doprnt+3)& (0+255),w,b
 41654  012CB2  23AC               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 41655                           
 41656                           ; BSR set to: 0
 41657  012CB4  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 41658  012CB6  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 41659                           
 41660                           ; BSR set to: 0
 41661                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 41662  012CB8  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 41663  012CBC  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41664  012CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 41665  012CC2  6EF8               	movwf	tblptru,c
 41666  012CC4  0E0D               	movlw	(high __ramtop+-1)
 41667  012CC6  64F7               	cpfsgt	tblptrh,c
 41668  012CC8  D003               	bra	i2u3160_47
 41669  012CCA  0008               	tblrd		*
 41670  012CCC  50F5               	movf	tablat,w,c
 41671  012CCE  D005               	bra	i2u3160_40
 41672  012CD0                     i2u3160_47:
 41673  012CD0  CFF6 FFE9          	movff	tblptrl,fsr0l
 41674  012CD4  CFF7 FFEA          	movff	tblptrh,fsr0h
 41675  012CD8  50EF               	movf	indf0,w,c
 41676  012CDA                     i2u3160_40:
 41677  012CDA  ECA4  F0D7         	call	i2_isdigit
 41678  012CDE  B0D8               	btfsc	status,0,c
 41679  012CE0  D7BA               	goto	i2l1919
 41680  012CE2                     i2u3161_40:
 41681                           
 41682                           ;doprnt.c: 608: }
 41683                           ;doprnt.c: 611: if(*f == '.') {
 41684  012CE2  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 41685  012CE6  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41686  012CEA  0E00               	movlw	low (__mediumconst shr (0+16))
 41687  012CEC  6EF8               	movwf	tblptru,c
 41688  012CEE  0E0D               	movlw	(high __ramtop+-1)
 41689  012CF0  64F7               	cpfsgt	tblptrh,c
 41690  012CF2  D003               	bra	i2u3162_47
 41691  012CF4  0008               	tblrd		*
 41692  012CF6  50F5               	movf	tablat,w,c
 41693  012CF8  D005               	bra	i2u3162_40
 41694  012CFA                     i2u3162_47:
 41695  012CFA  CFF6 FFE9          	movff	tblptrl,fsr0l
 41696  012CFE  CFF7 FFEA          	movff	tblptrh,fsr0h
 41697  012D02  50EF               	movf	indf0,w,c
 41698  012D04                     i2u3162_40:
 41699  012D04  0A2E               	xorlw	46
 41700  012D06  A4D8               	btfss	status,2,c
 41701  012D08  D048               	goto	i2l1921
 41702                           
 41703                           ;doprnt.c: 612: flag |= 0x4000;
 41704  012D0A  0100               	movlb	0	; () banked
 41705  012D0C  8DAE               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 41706                           
 41707                           ;doprnt.c: 613: f++;
 41708  012D0E  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 41709  012D10  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 41710                           
 41711                           ; BSR set to: 0
 41712                           ;doprnt.c: 620: {
 41713                           ;doprnt.c: 621: prec = 0;
 41714  012D12  0E00               	movlw	0
 41715  012D14  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 41716  012D16  0E00               	movlw	0
 41717  012D18  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 41718                           
 41719                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 41720  012D1A  D029               	goto	i2l1922
 41721  012D1C                     
 41722                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 41723                           
 41724                           ; BSR set to: 0
 41725  012D1C  C0AF  F001         	movff	i2__doprnt@prec,i2___wmul@multiplier
 41726  012D20  C0B0  F002         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 41727  012D24  0E00               	movlw	0
 41728  012D26  6E04               	movwf	i2___wmul@multiplicand+1,c
 41729  012D28  0E0A               	movlw	10
 41730  012D2A  6E03               	movwf	i2___wmul@multiplicand,c
 41731  012D2C  EC2A  F0D7         	call	i2___wmul	;wreg free
 41732  012D30  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 41733  012D34  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41734  012D38  0E00               	movlw	low (__mediumconst shr (0+16))
 41735  012D3A  6EF8               	movwf	tblptru,c
 41736  012D3C  0E0D               	movlw	(high __ramtop+-1)
 41737  012D3E  64F7               	cpfsgt	tblptrh,c
 41738  012D40  D003               	bra	i2u3164_47
 41739  012D42  0008               	tblrd		*
 41740  012D44  50F5               	movf	tablat,w,c
 41741  012D46  D005               	bra	i2u3164_40
 41742  012D48                     i2u3164_47:
 41743  012D48  CFF6 FFE9          	movff	tblptrl,fsr0l
 41744  012D4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 41745  012D50  50EF               	movf	indf0,w,c
 41746  012D52                     i2u3164_40:
 41747  012D52  0100               	movlb	0	; () banked
 41748  012D54  6F8E               	movwf	??i2__doprnt& (0+255),b
 41749  012D56  518E               	movf	??i2__doprnt& (0+255),w,b
 41750  012D58  2601               	addwf	?i2___wmul,f,c
 41751  012D5A  0E00               	movlw	0
 41752  012D5C  2202               	addwfc	?i2___wmul+1,f,c
 41753  012D5E  0ED0               	movlw	208
 41754  012D60  2401               	addwf	?i2___wmul,w,c
 41755  012D62  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 41756  012D64  0EFF               	movlw	255
 41757  012D66  2002               	addwfc	?i2___wmul+1,w,c
 41758  012D68  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 41759                           
 41760                           ; BSR set to: 0
 41761  012D6A  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 41762  012D6C  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 41763  012D6E                     i2l1922:
 41764                           
 41765                           ; BSR set to: 0
 41766                           
 41767                           ; BSR set to: 0
 41768  012D6E  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 41769  012D72  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41770  012D76  0E00               	movlw	low (__mediumconst shr (0+16))
 41771  012D78  6EF8               	movwf	tblptru,c
 41772  012D7A  0E0D               	movlw	(high __ramtop+-1)
 41773  012D7C  64F7               	cpfsgt	tblptrh,c
 41774  012D7E  D003               	bra	i2u3165_47
 41775  012D80  0008               	tblrd		*
 41776  012D82  50F5               	movf	tablat,w,c
 41777  012D84  D005               	bra	i2u3165_40
 41778  012D86                     i2u3165_47:
 41779  012D86  CFF6 FFE9          	movff	tblptrl,fsr0l
 41780  012D8A  CFF7 FFEA          	movff	tblptrh,fsr0h
 41781  012D8E  50EF               	movf	indf0,w,c
 41782  012D90                     i2u3165_40:
 41783  012D90  ECA4  F0D7         	call	i2_isdigit
 41784  012D94  A0D8               	btfss	status,0,c
 41785  012D96  D12A               	goto	i2l1927
 41786  012D98  D7C1               	goto	i2l1923
 41787  012D9A                     i2l1921:
 41788                           
 41789                           ;doprnt.c: 626: prec = 0;
 41790  012D9A  0E00               	movlw	0
 41791  012D9C  0100               	movlb	0	; () banked
 41792  012D9E  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 41793  012DA0  0E00               	movlw	0
 41794  012DA2  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 41795                           
 41796                           ; BSR set to: 0
 41797                           ;doprnt.c: 628: flag |= 0x1000;
 41798  012DA4  89AE               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 41799                           
 41800                           ; BSR set to: 0
 41801                           ;doprnt.c: 635: switch(c = *f++) {
 41802                           
 41803                           ;doprnt.c: 630: }
 41804                           ;doprnt.c: 633: loop:
 41805                           
 41806                           ; BSR set to: 0
 41807  012DA6  D122               	goto	i2l1927
 41808  012DA8                     
 41809                           ; BSR set to: 0
 41810                           ;doprnt.c: 643: flag |= 0x10;
 41811                           
 41812                           ; BSR set to: 0
 41813  012DA8  89AD               	bsf	i2__doprnt@flag& (0+255),4,b
 41814                           
 41815                           ;doprnt.c: 644: goto loop;
 41816  012DAA  D120               	goto	i2l1927
 41817  012DAC                     
 41818                           ; BSR set to: 0
 41819                           ;doprnt.c: 663: flag |= 0x400;
 41820                           
 41821                           ; BSR set to: 0
 41822  012DAC  85AE               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 41823                           
 41824                           ; BSR set to: 0
 41825                           ;doprnt.c: 698: case 'i':
 41826                           ;doprnt.c: 699: break;
 41827                           
 41828                           ; BSR set to: 0
 41829                           
 41830                           ;doprnt.c: 697: case 'd':
 41831                           
 41832                           ;doprnt.c: 664: break;
 41833  012DAE  D159               	goto	i2l1932
 41834  012DB0                     
 41835                           ; BSR set to: 0
 41836                           ;doprnt.c: 718: case 'x':
 41837                           ;doprnt.c: 721: flag |= 0x80;
 41838                           
 41839                           ; BSR set to: 0
 41840                           
 41841                           ; BSR set to: 0
 41842  012DB0  8FAD               	bsf	i2__doprnt@flag& (0+255),7,b
 41843                           
 41844                           ;doprnt.c: 723: break;
 41845  012DB2  D157               	goto	i2l1932
 41846  012DB4                     
 41847                           ; BSR set to: 0
 41848                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 41849                           
 41850                           ; BSR set to: 0
 41851  012DB4  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 41852  012DB8  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41853  012DBC  CFDF F08E          	movff	indf2,??i2__doprnt
 41854  012DC0  0E02               	movlw	2
 41855  012DC2  26DE               	addwf	postinc2,f,c
 41856  012DC4  CFDF F08F          	movff	indf2,??i2__doprnt+1
 41857  012DC8  0E00               	movlw	0
 41858  012DCA  22DD               	addwfc	postdec2,f,c
 41859  012DCC  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 41860  012DD0  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 41861  012DD4  CFDE F099          	movff	postinc2,i2__doprnt@cp
 41862  012DD8  CFDD F09A          	movff	postdec2,i2__doprnt@cp+1
 41863                           
 41864                           ; BSR set to: 0
 41865                           ;doprnt.c: 740: if(!cp)
 41866  012DDC  5199               	movf	i2__doprnt@cp& (0+255),w,b
 41867  012DDE  119A               	iorwf	(i2__doprnt@cp+1)& (0+255),w,b
 41868  012DE0  A4D8               	btfss	status,2,c
 41869  012DE2  D004               	goto	i2l1938
 41870                           
 41871                           ; BSR set to: 0
 41872                           ;doprnt.c: 741: cp = "(null)";
 41873  012DE4  0E88               	movlw	low STR_188
 41874  012DE6  6F99               	movwf	i2__doprnt@cp& (0+255),b
 41875  012DE8  0EFF               	movlw	high STR_188
 41876  012DEA  6F9A               	movwf	(i2__doprnt@cp+1)& (0+255),b
 41877  012DEC                     i2l1938:
 41878                           
 41879                           ; BSR set to: 0
 41880                           ;doprnt.c: 745: len = 0;
 41881                           
 41882                           ; BSR set to: 0
 41883  012DEC  0E00               	movlw	0
 41884  012DEE  6F9C               	movwf	(i2__doprnt@len+1)& (0+255),b
 41885  012DF0  0E00               	movlw	0
 41886  012DF2  6F9B               	movwf	i2__doprnt@len& (0+255),b
 41887                           
 41888                           ;doprnt.c: 746: while(cp[len])
 41889  012DF4  D003               	goto	i2l1939
 41890  012DF6                     
 41891                           ;doprnt.c: 747: len++;
 41892                           
 41893                           ; BSR set to: 0
 41894  012DF6  0100               	movlb	0	; () banked
 41895  012DF8  4B9B               	infsnz	i2__doprnt@len& (0+255),f,b
 41896  012DFA  2B9C               	incf	(i2__doprnt@len+1)& (0+255),f,b
 41897  012DFC                     i2l1939:
 41898                           
 41899                           ; BSR set to: 0
 41900                           
 41901                           ; BSR set to: 0
 41902  012DFC  519B               	movf	i2__doprnt@len& (0+255),w,b
 41903  012DFE  2599               	addwf	i2__doprnt@cp& (0+255),w,b
 41904  012E00  6F8E               	movwf	??i2__doprnt& (0+255),b
 41905  012E02  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 41906  012E04  219A               	addwfc	(i2__doprnt@cp+1)& (0+255),w,b
 41907  012E06  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 41908  012E08  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 41909  012E0C  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 41910  012E10  0E00               	movlw	low (__mediumconst shr (0+16))
 41911  012E12  6EF8               	movwf	tblptru,c
 41912  012E14  0E0D               	movlw	(high __ramtop+-1)
 41913  012E16  64F7               	cpfsgt	tblptrh,c
 41914  012E18  D003               	bra	i2u3168_47
 41915  012E1A  0008               	tblrd		*
 41916  012E1C  50F5               	movf	tablat,w,c
 41917  012E1E  D005               	bra	i2u3168_40
 41918  012E20                     i2u3168_47:
 41919  012E20  CFF6 FFE9          	movff	tblptrl,fsr0l
 41920  012E24  CFF7 FFEA          	movff	tblptrh,fsr0h
 41921  012E28  50EF               	movf	indf0,w,c
 41922  012E2A                     i2u3168_40:
 41923  012E2A  0900               	iorlw	0
 41924  012E2C  A4D8               	btfss	status,2,c
 41925  012E2E  D7E3               	goto	i2l1940
 41926  012E30                     i2u3169_40:
 41927                           
 41928                           ;doprnt.c: 753: if(prec && prec < len)
 41929                           
 41930                           ;doprnt.c: 750: dostring:
 41931  012E30  0100               	movlb	0	; () banked
 41932  012E32  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 41933  012E34  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 41934  012E36  B4D8               	btfsc	status,2,c
 41935  012E38  D00A               	goto	i2l1943
 41936                           
 41937                           ; BSR set to: 0
 41938  012E3A  519B               	movf	i2__doprnt@len& (0+255),w,b
 41939  012E3C  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 41940  012E3E  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 41941  012E40  59B0               	subwfb	(i2__doprnt@prec+1)& (0+255),w,b
 41942  012E42  B0D8               	btfsc	status,0,c
 41943  012E44  D004               	goto	i2l1943
 41944                           
 41945                           ; BSR set to: 0
 41946                           ;doprnt.c: 754: len = prec;
 41947  012E46  C0AF  F09B         	movff	i2__doprnt@prec,i2__doprnt@len
 41948  012E4A  C0B0  F09C         	movff	i2__doprnt@prec+1,i2__doprnt@len+1
 41949  012E4E                     i2l1943:
 41950                           
 41951                           ; BSR set to: 0
 41952                           ;doprnt.c: 757: if(width > len)
 41953                           
 41954                           ; BSR set to: 0
 41955  012E4E  51AB               	movf	i2__doprnt@width& (0+255),w,b
 41956  012E50  5D9B               	subwf	i2__doprnt@len& (0+255),w,b
 41957  012E52  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 41958  012E54  599C               	subwfb	(i2__doprnt@len+1)& (0+255),w,b
 41959  012E56  B0D8               	btfsc	status,0,c
 41960  012E58  D005               	goto	i2l1944
 41961                           
 41962                           ; BSR set to: 0
 41963                           ;doprnt.c: 758: width -= len;
 41964  012E5A  519B               	movf	i2__doprnt@len& (0+255),w,b
 41965  012E5C  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 41966  012E5E  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 41967  012E60  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 41968  012E62  D038               	goto	i2l1949
 41969  012E64                     i2l1944:
 41970                           
 41971                           ; BSR set to: 0
 41972                           ;doprnt.c: 759: else
 41973                           ;doprnt.c: 760: width = 0;
 41974                           
 41975                           ; BSR set to: 0
 41976  012E64  0E00               	movlw	0
 41977  012E66  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 41978  012E68  0E00               	movlw	0
 41979  012E6A  6FAB               	movwf	i2__doprnt@width& (0+255),b
 41980                           
 41981                           ; BSR set to: 0
 41982                           ;doprnt.c: 764: while(width--)
 41983  012E6C  D033               	goto	i2l1949
 41984  012E6E                     i2l22219:
 41985                           
 41986                           ; BSR set to: 0
 41987                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 41988  012E6E  EE20 F002          	lfsr	2,2
 41989  012E72  5188               	movf	i2__doprnt@pb& (0+255),w,b
 41990  012E74  26D9               	addwf	fsr2l,f,c
 41991  012E76  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41992  012E78  22DA               	addwfc	fsr2h,f,c
 41993  012E7A  50DE               	movf	postinc2,w,c
 41994  012E7C  10DE               	iorwf	postinc2,w,c
 41995  012E7E  10DE               	iorwf	postinc2,w,c
 41996  012E80  B4D8               	btfsc	status,2,c
 41997  012E82  D013               	goto	i2l1948
 41998                           
 41999                           ; BSR set to: 0
 42000  012E84  EE20 F002          	lfsr	2,2
 42001  012E88  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42002  012E8A  26D9               	addwf	fsr2l,f,c
 42003  012E8C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42004  012E8E  22DA               	addwfc	fsr2h,f,c
 42005  012E90  D801               	call	i2u3174_48
 42006  012E92  D020               	goto	i2l1949
 42007  012E94                     i2u3174_48:
 42008  012E94  0005               	push	
 42009  012E96  6EFA               	movwf	pclath,c
 42010  012E98  50DE               	movf	postinc2,w,c
 42011  012E9A  6EFD               	movwf	tosl,c
 42012  012E9C  50DE               	movf	postinc2,w,c
 42013  012E9E  6EFE               	movwf	tosh,c
 42014  012EA0  50DE               	movf	postinc2,w,c
 42015  012EA2  6EFF               	movwf	tosu,c
 42016  012EA4  50FA               	movf	pclath,w,c
 42017  012EA6  0E20               	movlw	32
 42018  012EA8  0012               	return		;indir
 42019  012EAA                     i2l1948:
 42020  012EAA  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42021  012EAE  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42022  012EB2  CFDE F08E          	movff	postinc2,??i2__doprnt
 42023  012EB6  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42024  012EBA  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42025  012EBE  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42026  012EC2  0E20               	movlw	32
 42027  012EC4  6EDF               	movwf	indf2,c
 42028  012EC6  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42029  012ECA  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42030  012ECE  2ADE               	incf	postinc2,f,c
 42031  012ED0  0E00               	movlw	0
 42032  012ED2  22DD               	addwfc	postdec2,f,c
 42033  012ED4                     i2l1949:
 42034  012ED4  0100               	movlb	0	; () banked
 42035  012ED6  07AB               	decf	i2__doprnt@width& (0+255),f,b
 42036  012ED8  A0D8               	btfss	status,0,c
 42037  012EDA  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42038  012EDC  29AB               	incf	i2__doprnt@width& (0+255),w,b
 42039  012EDE  E1C7               	bnz	i2l22219
 42040  012EE0  29AC               	incf	(i2__doprnt@width+1)& (0+255),w,b
 42041  012EE2  B4D8               	btfsc	status,2,c
 42042  012EE4  D05B               	goto	i2l1954
 42043  012EE6  D7C3               	goto	i2l1947
 42044  012EE8                     i2l22229:
 42045                           
 42046                           ; BSR set to: 0
 42047                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 42048  012EE8  EE20 F002          	lfsr	2,2
 42049  012EEC  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42050  012EEE  26D9               	addwf	fsr2l,f,c
 42051  012EF0  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42052  012EF2  22DA               	addwfc	fsr2h,f,c
 42053  012EF4  50DE               	movf	postinc2,w,c
 42054  012EF6  10DE               	iorwf	postinc2,w,c
 42055  012EF8  10DE               	iorwf	postinc2,w,c
 42056  012EFA  B4D8               	btfsc	status,2,c
 42057  012EFC  D027               	goto	i2l1953
 42058                           
 42059                           ; BSR set to: 0
 42060  012EFE  EE20 F002          	lfsr	2,2
 42061  012F02  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42062  012F04  26D9               	addwf	fsr2l,f,c
 42063  012F06  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42064  012F08  22DA               	addwfc	fsr2h,f,c
 42065  012F0A  D801               	call	i2u3177_48
 42066  012F0C  D01B               	goto	i2u3177_49
 42067  012F0E                     i2u3177_48:
 42068  012F0E  0005               	push	
 42069  012F10  6EFA               	movwf	pclath,c
 42070  012F12  50DE               	movf	postinc2,w,c
 42071  012F14  6EFD               	movwf	tosl,c
 42072  012F16  50DE               	movf	postinc2,w,c
 42073  012F18  6EFE               	movwf	tosh,c
 42074  012F1A  50DE               	movf	postinc2,w,c
 42075  012F1C  6EFF               	movwf	tosu,c
 42076  012F1E  50FA               	movf	pclath,w,c
 42077  012F20  C099  FFF6         	movff	i2__doprnt@cp,tblptrl
 42078  012F24  C09A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 42079  012F28  0E00               	movlw	low (__mediumconst shr (0+16))
 42080  012F2A  6EF8               	movwf	tblptru,c
 42081  012F2C  0E0D               	movlw	(high __ramtop+-1)
 42082  012F2E  64F7               	cpfsgt	tblptrh,c
 42083  012F30  D003               	bra	i2u3178_47
 42084  012F32  0008               	tblrd		*
 42085  012F34  50F5               	movf	tablat,w,c
 42086  012F36  D005               	bra	i2u3178_40
 42087  012F38                     i2u3178_47:
 42088  012F38  CFF6 FFE9          	movff	tblptrl,fsr0l
 42089  012F3C  CFF7 FFEA          	movff	tblptrh,fsr0h
 42090  012F40  50EF               	movf	indf0,w,c
 42091  012F42                     i2u3178_40:
 42092  012F42  0012               	return		;indir
 42093  012F44                     i2u3177_49:
 42094  012F44  0100               	movlb	0	; () banked
 42095  012F46  4B99               	infsnz	i2__doprnt@cp& (0+255),f,b
 42096  012F48  2B9A               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 42097  012F4A  D028               	goto	i2l1954
 42098  012F4C                     i2l1953:
 42099                           
 42100                           ; BSR set to: 0
 42101                           
 42102                           ; BSR set to: 0
 42103  012F4C  C099  FFF6         	movff	i2__doprnt@cp,tblptrl
 42104  012F50  C09A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 42105  012F54  0E00               	movlw	low (__mediumconst shr (0+16))
 42106  012F56  6EF8               	movwf	tblptru,c
 42107  012F58  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42108  012F5C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42109  012F60  CFDE F08E          	movff	postinc2,??i2__doprnt
 42110  012F64  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42111  012F68  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42112  012F6C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42113  012F70  0E0D               	movlw	(high __ramtop+-1)
 42114  012F72  64F7               	cpfsgt	tblptrh,c
 42115  012F74  D003               	bra	i2u3179_47
 42116  012F76  0008               	tblrd		*
 42117  012F78  50F5               	movf	tablat,w,c
 42118  012F7A  D005               	bra	i2u3179_40
 42119  012F7C                     i2u3179_47:
 42120  012F7C  CFF6 FFE9          	movff	tblptrl,fsr0l
 42121  012F80  CFF7 FFEA          	movff	tblptrh,fsr0h
 42122  012F84  50EF               	movf	indf0,w,c
 42123  012F86                     i2u3179_40:
 42124  012F86  6EDF               	movwf	indf2,c
 42125  012F88  0100               	movlb	0	; () banked
 42126  012F8A  4B99               	infsnz	i2__doprnt@cp& (0+255),f,b
 42127  012F8C  2B9A               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 42128                           
 42129                           ; BSR set to: 0
 42130  012F8E  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42131  012F92  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42132  012F96  2ADE               	incf	postinc2,f,c
 42133  012F98  0E00               	movlw	0
 42134  012F9A  22DD               	addwfc	postdec2,f,c
 42135  012F9C                     i2l1954:
 42136                           
 42137                           ; BSR set to: 0
 42138                           
 42139                           ; BSR set to: 0
 42140                           
 42141                           ; BSR set to: 0
 42142  012F9C  079B               	decf	i2__doprnt@len& (0+255),f,b
 42143  012F9E  A0D8               	btfss	status,0,c
 42144  012FA0  079C               	decf	(i2__doprnt@len+1)& (0+255),f,b
 42145  012FA2  299B               	incf	i2__doprnt@len& (0+255),w,b
 42146  012FA4  E1A1               	bnz	i2l22229
 42147  012FA6  299C               	incf	(i2__doprnt@len+1)& (0+255),w,b
 42148  012FA8  B4D8               	btfsc	status,2,c
 42149  012FAA  EF11  F0A0         	goto	i2u3265_40
 42150  012FAE  D79C               	goto	i2l1952
 42151  012FB0                     
 42152                           ; BSR set to: 0
 42153                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 42154                           
 42155                           ; BSR set to: 0
 42156  012FB0  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 42157  012FB4  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42158  012FB8  CFDF F08E          	movff	indf2,??i2__doprnt
 42159  012FBC  0E02               	movlw	2
 42160  012FBE  26DE               	addwf	postinc2,f,c
 42161  012FC0  CFDF F08F          	movff	indf2,??i2__doprnt+1
 42162  012FC4  0E00               	movlw	0
 42163  012FC6  22DD               	addwfc	postdec2,f,c
 42164  012FC8  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42165  012FCC  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42166  012FD0  50DF               	movf	indf2,w,c
 42167  012FD2  6FB1               	movwf	i2__doprnt@c& (0+255),b
 42168  012FD4                     
 42169                           ; BSR set to: 0
 42170                           ;doprnt.c: 805: cp = (char *)&c;
 42171                           
 42172                           ; BSR set to: 0
 42173  012FD4  0EB1               	movlw	low i2__doprnt@c
 42174  012FD6  6F99               	movwf	i2__doprnt@cp& (0+255),b
 42175  012FD8  0E00               	movlw	high i2__doprnt@c
 42176  012FDA  6F9A               	movwf	(i2__doprnt@cp+1)& (0+255),b
 42177                           
 42178                           ; BSR set to: 0
 42179                           ;doprnt.c: 806: len = 1;
 42180  012FDC  0E00               	movlw	0
 42181  012FDE  6F9C               	movwf	(i2__doprnt@len+1)& (0+255),b
 42182  012FE0  0E01               	movlw	1
 42183  012FE2  6F9B               	movwf	i2__doprnt@len& (0+255),b
 42184                           
 42185                           ;doprnt.c: 807: goto dostring;
 42186  012FE4  D725               	goto	i2u3169_40
 42187  012FE6                     
 42188                           ; BSR set to: 0
 42189                           ;doprnt.c: 818: flag |= 0xC0;
 42190                           
 42191                           ; BSR set to: 0
 42192  012FE6  0EC0               	movlw	192
 42193  012FE8  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 42194                           
 42195                           ; BSR set to: 0
 42196                           ;doprnt.c: 822: }
 42197                           
 42198                           ;doprnt.c: 819: break;
 42199  012FEA  D03B               	goto	i2l1932
 42200  012FEC                     i2l1927:
 42201                           
 42202                           ; BSR set to: 0
 42203  012FEC  0100               	movlb	0	; () banked
 42204  012FEE  518A               	movf	i2__doprnt@f& (0+255),w,b
 42205  012FF0  6F8E               	movwf	??i2__doprnt& (0+255),b
 42206  012FF2  518B               	movf	(i2__doprnt@f+1)& (0+255),w,b
 42207  012FF4  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 42208  012FF6  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42209  012FF8  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42210  012FFA  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 42211  012FFE  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 42212  013002  0E00               	movlw	low (__mediumconst shr (0+16))
 42213  013004  6EF8               	movwf	tblptru,c
 42214  013006  0E0D               	movlw	(high __ramtop+-1)
 42215  013008  64F7               	cpfsgt	tblptrh,c
 42216  01300A  D003               	bra	i2u3181_47
 42217  01300C  0008               	tblrd		*
 42218  01300E  50F5               	movf	tablat,w,c
 42219  013010  D005               	bra	i2u3181_40
 42220  013012                     i2u3181_47:
 42221  013012  CFF6 FFE9          	movff	tblptrl,fsr0l
 42222  013016  CFF7 FFEA          	movff	tblptrh,fsr0h
 42223  01301A  50EF               	movf	indf0,w,c
 42224  01301C                     i2u3181_40:
 42225  01301C  0100               	movlb	0	; () banked
 42226  01301E  6FB1               	movwf	i2__doprnt@c& (0+255),b
 42227  013020  51B1               	movf	i2__doprnt@c& (0+255),w,b
 42228                           
 42229                           ; Switch size 1, requested type "space"
 42230                           ; Number of cases is 10, Range of values is 0 to 120
 42231                           ; switch strategies available:
 42232                           ; Name         Instructions Cycles
 42233                           ; simple_byte           31    16 (average)
 42234                           ;	Chosen strategy is simple_byte
 42235  013022  0A00               	xorlw	0	; case 0
 42236  013024  B4D8               	btfsc	status,2,c
 42237  013026  EF2F  F0A0         	goto	i2u3267_40
 42238  01302A  0A58               	xorlw	88	; case 88
 42239  01302C  B4D8               	btfsc	status,2,c
 42240  01302E  D6C0               	goto	i2l1935
 42241  013030  0A3B               	xorlw	59	; case 99
 42242  013032  B4D8               	btfsc	status,2,c
 42243  013034  D7BD               	goto	i2l1956
 42244  013036  0A07               	xorlw	7	; case 100
 42245  013038  B4D8               	btfsc	status,2,c
 42246  01303A  D013               	goto	i2l1932
 42247  01303C  0A02               	xorlw	2	; case 102
 42248  01303E  B4D8               	btfsc	status,2,c
 42249  013040  D6B5               	goto	i2l1931
 42250  013042  0A0F               	xorlw	15	; case 105
 42251  013044  B4D8               	btfsc	status,2,c
 42252  013046  D00D               	goto	i2l1932
 42253  013048  0A05               	xorlw	5	; case 108
 42254  01304A  B4D8               	btfsc	status,2,c
 42255  01304C  D6AD               	goto	i2l1930
 42256  01304E  0A1F               	xorlw	31	; case 115
 42257  013050  B4D8               	btfsc	status,2,c
 42258  013052  D6B0               	goto	i2l1937
 42259  013054  0A06               	xorlw	6	; case 117
 42260  013056  B4D8               	btfsc	status,2,c
 42261  013058  D7C6               	goto	i2l1958
 42262  01305A  0A0D               	xorlw	13	; case 120
 42263  01305C  B4D8               	btfsc	status,2,c
 42264  01305E  D6A8               	goto	i2l1935
 42265  013060  D7B9               	goto	i2l1957
 42266  013062                     i2l1932:
 42267                           
 42268                           ; BSR set to: 0
 42269                           ;doprnt.c: 825: if(flag & (0x700)) {
 42270                           
 42271                           ; BSR set to: 0
 42272  013062  0E07               	movlw	7
 42273  013064  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42274  013066  B4D8               	btfsc	status,2,c
 42275  013068  EF26  F09D         	goto	i2l1959
 42276                           
 42277                           ; BSR set to: 0
 42278                           ;doprnt.c: 827: if(flag & 0x1000)
 42279  01306C  A9AE               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 42280  01306E  D004               	goto	i2l1960
 42281                           
 42282                           ; BSR set to: 0
 42283                           ;doprnt.c: 829: prec = 6;
 42284  013070  0E00               	movlw	0
 42285  013072  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42286  013074  0E06               	movlw	6
 42287  013076  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42288  013078                     i2l1960:
 42289                           
 42290                           ; BSR set to: 0
 42291                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 42292                           
 42293                           ; BSR set to: 0
 42294  013078  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 42295  01307C  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42296  013080  CFDF F08E          	movff	indf2,??i2__doprnt
 42297  013084  0E04               	movlw	4
 42298  013086  26DE               	addwf	postinc2,f,c
 42299  013088  CFDF F08F          	movff	indf2,??i2__doprnt+1
 42300  01308C  0E00               	movlw	0
 42301  01308E  22DD               	addwfc	postdec2,f,c
 42302  013090  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42303  013094  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42304  013098  CFDE F0A3          	movff	postinc2,i2__doprnt@fval
 42305  01309C  CFDE F0A4          	movff	postinc2,i2__doprnt@fval+1
 42306  0130A0  CFDE F0A5          	movff	postinc2,i2__doprnt@fval+2
 42307  0130A4  CFDE F0A6          	movff	postinc2,i2__doprnt@fval+3
 42308                           
 42309                           ; BSR set to: 0
 42310                           ;doprnt.c: 831: if(fval < 0.0) {
 42311  0130A8  AFA6               	btfss	(i2__doprnt@fval+3)& (0+255),7,b
 42312  0130AA  D015               	goto	i2l1961
 42313                           
 42314                           ; BSR set to: 0
 42315                           ;doprnt.c: 832: fval = -fval;
 42316  0130AC  C0A3  F02C         	movff	i2__doprnt@fval,i2___flneg@f1
 42317  0130B0  C0A4  F02D         	movff	i2__doprnt@fval+1,i2___flneg@f1+1
 42318  0130B4  C0A5  F02E         	movff	i2__doprnt@fval+2,i2___flneg@f1+2
 42319  0130B8  C0A6  F02F         	movff	i2__doprnt@fval+3,i2___flneg@f1+3
 42320  0130BC  EC89  F0D6         	call	i2___flneg
 42321  0130C0  C02C  F0A3         	movff	?i2___flneg,i2__doprnt@fval
 42322  0130C4  C02D  F0A4         	movff	?i2___flneg+1,i2__doprnt@fval+1
 42323  0130C8  C02E  F0A5         	movff	?i2___flneg+2,i2__doprnt@fval+2
 42324  0130CC  C02F  F0A6         	movff	?i2___flneg+3,i2__doprnt@fval+3
 42325                           
 42326                           ;doprnt.c: 833: flag |= 0x03;
 42327  0130D0  0E03               	movlw	3
 42328  0130D2  0100               	movlb	0	; () banked
 42329  0130D4  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 42330  0130D6                     i2l1961:
 42331                           
 42332                           ; BSR set to: 0
 42333                           ;doprnt.c: 834: }
 42334                           ;doprnt.c: 835: exp = 0;
 42335                           
 42336                           ; BSR set to: 0
 42337  0130D6  0E00               	movlw	0
 42338  0130D8  6F9E               	movwf	(i2__doprnt@exp+1)& (0+255),b
 42339  0130DA  0E00               	movlw	0
 42340  0130DC  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 42341                           
 42342                           ; BSR set to: 0
 42343                           ;doprnt.c: 836: if( fval!=0) {
 42344  0130DE  51A3               	movf	i2__doprnt@fval& (0+255),w,b
 42345  0130E0  11A4               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 42346  0130E2  11A5               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 42347  0130E4  11A6               	iorwf	(i2__doprnt@fval+3)& (0+255),w,b
 42348  0130E6  B4D8               	btfsc	status,2,c
 42349  0130E8  D082               	goto	i2l1966
 42350                           
 42351                           ; BSR set to: 0
 42352                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 42353  0130EA  35A5               	rlcf	(i2__doprnt@fval+2)& (0+255),w,b
 42354  0130EC  35A6               	rlcf	(i2__doprnt@fval+3)& (0+255),w,b
 42355  0130EE  0F82               	addlw	130
 42356  0130F0  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 42357  0130F2  6B9E               	clrf	(i2__doprnt@exp+1)& (0+255),b
 42358  0130F4  0EFF               	movlw	255
 42359  0130F6  239E               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 42360                           
 42361                           ; BSR set to: 0
 42362                           ;doprnt.c: 838: exp--;
 42363  0130F8  079D               	decf	i2__doprnt@exp& (0+255),f,b
 42364  0130FA  A0D8               	btfss	status,0,c
 42365  0130FC  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 42366                           
 42367                           ; BSR set to: 0
 42368                           ;doprnt.c: 839: exp *= 3;
 42369  0130FE  C09D  F001         	movff	i2__doprnt@exp,i2___wmul@multiplier
 42370  013102  C09E  F002         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 42371  013106  0E00               	movlw	0
 42372  013108  6E04               	movwf	i2___wmul@multiplicand+1,c
 42373  01310A  0E03               	movlw	3
 42374  01310C  6E03               	movwf	i2___wmul@multiplicand,c
 42375  01310E  EC2A  F0D7         	call	i2___wmul	;wreg free
 42376  013112  C001  F09D         	movff	?i2___wmul,i2__doprnt@exp
 42377  013116  C002  F09E         	movff	?i2___wmul+1,i2__doprnt@exp+1
 42378                           
 42379                           ;doprnt.c: 840: exp /= 10;
 42380  01311A  C09D  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 42381  01311E  C09E  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 42382  013122  0E00               	movlw	0
 42383  013124  6E0A               	movwf	i2___awdiv@divisor+1,c
 42384  013126  0E0A               	movlw	10
 42385  013128  6E09               	movwf	i2___awdiv@divisor,c
 42386  01312A  ECD0  F0CD         	call	i2___awdiv	;wreg free
 42387  01312E  C007  F09D         	movff	?i2___awdiv,i2__doprnt@exp
 42388  013132  C008  F09E         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 42389                           
 42390                           ;doprnt.c: 841: if(exp < 0)
 42391  013136  0100               	movlb	0	; () banked
 42392  013138  AF9E               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 42393  01313A  D003               	goto	i2l1963
 42394                           
 42395                           ; BSR set to: 0
 42396                           ;doprnt.c: 842: exp--;
 42397  01313C  079D               	decf	i2__doprnt@exp& (0+255),f,b
 42398  01313E  A0D8               	btfss	status,0,c
 42399  013140  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 42400  013142                     i2l1963:
 42401                           
 42402                           ; BSR set to: 0
 42403                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 42404                           
 42405                           ; BSR set to: 0
 42406  013142  519D               	movf	i2__doprnt@exp& (0+255),w,b
 42407  013144  0800               	sublw	0
 42408  013146  ECF3  F0A7         	call	i2_scale
 42409  01314A  C049  F09F         	movff	?i2_scale,i2__doprnt@tmpval
 42410  01314E  C04A  F0A0         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 42411  013152  C04B  F0A1         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 42412  013156  C04C  F0A2         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 42413                           
 42414                           ;doprnt.c: 847: tmpval.integ *= fval;
 42415  01315A  C09F  F030         	movff	i2__doprnt@tmpval,i2___flmul@b
 42416  01315E  C0A0  F031         	movff	i2__doprnt@tmpval+1,i2___flmul@b+1
 42417  013162  C0A1  F032         	movff	i2__doprnt@tmpval+2,i2___flmul@b+2
 42418  013166  C0A2  F033         	movff	i2__doprnt@tmpval+3,i2___flmul@b+3
 42419  01316A  C0A3  F034         	movff	i2__doprnt@fval,i2___flmul@a
 42420  01316E  C0A4  F035         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 42421  013172  C0A5  F036         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 42422  013176  C0A6  F037         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 42423  01317A  EC90  F0AD         	call	i2___flmul	;wreg free
 42424  01317E  C030  F09F         	movff	?i2___flmul,i2__doprnt@tmpval
 42425  013182  C031  F0A0         	movff	?i2___flmul+1,i2__doprnt@tmpval+1
 42426  013186  C032  F0A1         	movff	?i2___flmul+2,i2__doprnt@tmpval+2
 42427  01318A  C033  F0A2         	movff	?i2___flmul+3,i2__doprnt@tmpval+3
 42428                           
 42429                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 42430  01318E  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 42431  013192  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 42432  013196  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 42433  01319A  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 42434  01319E  0E00               	movlw	0
 42435  0131A0  6E38               	movwf	i2___flge@ff2,c
 42436  0131A2  0E00               	movlw	0
 42437  0131A4  6E39               	movwf	i2___flge@ff2+1,c
 42438  0131A6  0E80               	movlw	128
 42439  0131A8  6E3A               	movwf	i2___flge@ff2+2,c
 42440  0131AA  0E3F               	movlw	63
 42441  0131AC  6E3B               	movwf	i2___flge@ff2+3,c
 42442  0131AE  ECF2  F0C6         	call	i2___flge	;wreg free
 42443  0131B2  B0D8               	btfsc	status,0,c
 42444  0131B4  D005               	goto	i2l1964
 42445                           
 42446                           ;doprnt.c: 849: exp--;
 42447  0131B6  0100               	movlb	0	; () banked
 42448  0131B8  079D               	decf	i2__doprnt@exp& (0+255),f,b
 42449  0131BA  A0D8               	btfss	status,0,c
 42450  0131BC  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 42451  0131BE  D017               	goto	i2l1966
 42452  0131C0                     i2l1964:
 42453                           
 42454                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 42455                           
 42456                           ; BSR set to: 0
 42457  0131C0  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 42458  0131C4  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 42459  0131C8  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 42460  0131CC  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 42461  0131D0  0E00               	movlw	0
 42462  0131D2  6E38               	movwf	i2___flge@ff2,c
 42463  0131D4  0E00               	movlw	0
 42464  0131D6  6E39               	movwf	i2___flge@ff2+1,c
 42465  0131D8  0E20               	movlw	32
 42466  0131DA  6E3A               	movwf	i2___flge@ff2+2,c
 42467  0131DC  0E41               	movlw	65
 42468  0131DE  6E3B               	movwf	i2___flge@ff2+3,c
 42469  0131E0  ECF2  F0C6         	call	i2___flge	;wreg free
 42470  0131E4  A0D8               	btfss	status,0,c
 42471  0131E6  D003               	goto	i2l1966
 42472                           
 42473                           ;doprnt.c: 851: exp++;
 42474  0131E8  0100               	movlb	0	; () banked
 42475  0131EA  4B9D               	infsnz	i2__doprnt@exp& (0+255),f,b
 42476  0131EC  2B9E               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 42477  0131EE                     i2l1966:
 42478                           
 42479                           ;doprnt.c: 852: }
 42480                           ;doprnt.c: 1112: if(prec <= 12)
 42481                           
 42482                           ; BSR set to: 0
 42483                           
 42484                           ; BSR set to: 0
 42485                           
 42486                           ; BSR set to: 0
 42487  0131EE  0100               	movlb	0	; () banked
 42488  0131F0  BFB0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 42489  0131F2  D006               	goto	i2u3189_40
 42490  0131F4  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42491  0131F6  E121               	bnz	i2l22301
 42492  0131F8  0E0D               	movlw	13
 42493  0131FA  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 42494  0131FC  B0D8               	btfsc	status,0,c
 42495  0131FE  D01D               	goto	i2l1967
 42496  013200                     i2u3189_40:
 42497                           
 42498                           ; BSR set to: 0
 42499                           ;doprnt.c: 1113: fval += fround(prec);
 42500  013200  C0A3  F056         	movff	i2__doprnt@fval,i2___fladd@b
 42501  013204  C0A4  F057         	movff	i2__doprnt@fval+1,i2___fladd@b+1
 42502  013208  C0A5  F058         	movff	i2__doprnt@fval+2,i2___fladd@b+2
 42503  01320C  C0A6  F059         	movff	i2__doprnt@fval+3,i2___fladd@b+3
 42504  013210  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 42505  013212  ECF1  F0BA         	call	i2_fround
 42506  013216  C049  F05A         	movff	?i2_fround,i2___fladd@a
 42507  01321A  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 42508  01321E  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 42509  013222  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 42510  013226  ECD7  F0B0         	call	i2___fladd	;wreg free
 42511  01322A  C056  F0A3         	movff	?i2___fladd,i2__doprnt@fval
 42512  01322E  C057  F0A4         	movff	?i2___fladd+1,i2__doprnt@fval+1
 42513  013232  C058  F0A5         	movff	?i2___fladd+2,i2__doprnt@fval+2
 42514  013236  C059  F0A6         	movff	?i2___fladd+3,i2__doprnt@fval+3
 42515  01323A                     i2l1967:
 42516  01323A                     i2l22301:
 42517                           
 42518                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 42519  01323A  0100               	movlb	0	; () banked
 42520  01323C  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 42521  01323E  D006               	goto	i2u3190_40
 42522  013240  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 42523  013242  E122               	bnz	i2l22309
 42524  013244  0E0A               	movlw	10
 42525  013246  5D9D               	subwf	i2__doprnt@exp& (0+255),w,b
 42526  013248  B0D8               	btfsc	status,0,c
 42527  01324A  D01E               	goto	i2u3193_40
 42528  01324C                     i2u3190_40:
 42529                           
 42530                           ; BSR set to: 0
 42531  01324C  51A3               	movf	i2__doprnt@fval& (0+255),w,b
 42532  01324E  11A4               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 42533  013250  11A5               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 42534  013252  11A6               	iorwf	(i2__doprnt@fval+3)& (0+255),w,b
 42535  013254  B4D8               	btfsc	status,2,c
 42536  013256  D063               	goto	i2l1968
 42537                           
 42538                           ; BSR set to: 0
 42539  013258  C0A3  F06C         	movff	i2__doprnt@fval,i2___fltol@f1
 42540  01325C  C0A4  F06D         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 42541  013260  C0A5  F06E         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 42542  013264  C0A6  F06F         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 42543  013268  EC7E  F0C9         	call	i2___fltol	;wreg free
 42544  01326C  0100               	movlb	0	; () banked
 42545  01326E  516C               	movf	?i2___fltol& (0+255),w,b
 42546  013270  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 42547  013272  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 42548  013274  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 42549  013276  B4D8               	btfsc	status,2,c
 42550                           
 42551                           ; BSR set to: 0
 42552  013278  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 42553  01327A  D051               	goto	i2l1968
 42554  01327C  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 42555  01327E  E104               	bnz	i2l22309
 42556  013280  0E02               	movlw	2
 42557  013282  5D9D               	subwf	i2__doprnt@exp& (0+255),w,b
 42558  013284  A0D8               	btfss	status,0,c
 42559  013286  D04B               	goto	i2l1968
 42560  013288                     i2u3193_40:
 42561  013288                     i2l22309:
 42562                           
 42563                           ; BSR set to: 0
 42564                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 42565  013288  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 42566  01328C  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 42567  013290  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 42568  013294  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 42569  013298  0E5F               	movlw	95
 42570  01329A  6E38               	movwf	i2___flge@ff2,c
 42571  01329C  0E70               	movlw	112
 42572  01329E  6E39               	movwf	i2___flge@ff2+1,c
 42573  0132A0  0E89               	movlw	137
 42574  0132A2  6E3A               	movwf	i2___flge@ff2+2,c
 42575  0132A4  0E40               	movlw	64
 42576  0132A6  6E3B               	movwf	i2___flge@ff2+3,c
 42577  0132A8  ECF2  F0C6         	call	i2___flge	;wreg free
 42578  0132AC  B0D8               	btfsc	status,0,c
 42579  0132AE  D003               	goto	i2l1971
 42580                           
 42581                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 42582  0132B0  0100               	movlb	0	; () banked
 42583  0132B2  0EF7               	movlw	247
 42584  0132B4  D002               	goto	L18
 42585  0132B6                     i2l1971:
 42586                           
 42587                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 42588                           
 42589                           ; BSR set to: 0
 42590  0132B6  0100               	movlb	0	; () banked
 42591  0132B8  0EF8               	movlw	248
 42592  0132BA                     L18:
 42593  0132BA  279D               	addwf	i2__doprnt@exp& (0+255),f,b
 42594  0132BC  0EFF               	movlw	255
 42595  0132BE  239E               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 42596                           
 42597                           ; BSR set to: 0
 42598                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 42599                           
 42600                           ; BSR set to: 0
 42601  0132C0  519D               	movf	i2__doprnt@exp& (0+255),w,b
 42602  0132C2  ECF3  F0A7         	call	i2_scale
 42603  0132C6  C049  F09F         	movff	?i2_scale,i2__doprnt@tmpval
 42604  0132CA  C04A  F0A0         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 42605  0132CE  C04B  F0A1         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 42606  0132D2  C04C  F0A2         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 42607  0132D6  C0A3  F001         	movff	i2__doprnt@fval,i2__div_to_l_@f1
 42608  0132DA  C0A4  F002         	movff	i2__doprnt@fval+1,i2__div_to_l_@f1+1
 42609  0132DE  C0A5  F003         	movff	i2__doprnt@fval+2,i2__div_to_l_@f1+2
 42610  0132E2  C0A6  F004         	movff	i2__doprnt@fval+3,i2__div_to_l_@f1+3
 42611  0132E6  C09F  F005         	movff	i2__doprnt@tmpval,i2__div_to_l_@f2
 42612  0132EA  C0A0  F006         	movff	i2__doprnt@tmpval+1,i2__div_to_l_@f2+1
 42613  0132EE  C0A1  F007         	movff	i2__doprnt@tmpval+2,i2__div_to_l_@f2+2
 42614  0132F2  C0A2  F008         	movff	i2__doprnt@tmpval+3,i2__div_to_l_@f2+3
 42615  0132F6  EC3B  F0C5         	call	i2__div_to_l_	;wreg free
 42616  0132FA  C001  F0A7         	movff	?i2__div_to_l_,i2__doprnt@val
 42617  0132FE  C002  F0A8         	movff	?i2__div_to_l_+1,i2__doprnt@val+1
 42618  013302  C003  F0A9         	movff	?i2__div_to_l_+2,i2__doprnt@val+2
 42619  013306  C004  F0AA         	movff	?i2__div_to_l_+3,i2__doprnt@val+3
 42620                           
 42621                           ;doprnt.c: 1129: fval = 0.0;
 42622  01330A  0E00               	movlw	0
 42623  01330C  0100               	movlb	0	; () banked
 42624  01330E  6FA3               	movwf	i2__doprnt@fval& (0+255),b
 42625  013310  0E00               	movlw	0
 42626  013312  6FA4               	movwf	(i2__doprnt@fval+1)& (0+255),b
 42627  013314  0E00               	movlw	0
 42628  013316  6FA5               	movwf	(i2__doprnt@fval+2)& (0+255),b
 42629  013318  0E00               	movlw	0
 42630  01331A  6FA6               	movwf	(i2__doprnt@fval+3)& (0+255),b
 42631                           
 42632                           ;doprnt.c: 1130: } else {
 42633  01331C  D03C               	goto	i2l1977
 42634  01331E                     i2l1968:
 42635                           
 42636                           ; BSR set to: 0
 42637                           ;doprnt.c: 1131: val = (unsigned long)fval;
 42638                           
 42639                           ; BSR set to: 0
 42640  01331E  C0A3  F06C         	movff	i2__doprnt@fval,i2___fltol@f1
 42641  013322  C0A4  F06D         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 42642  013326  C0A5  F06E         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 42643  01332A  C0A6  F06F         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 42644  01332E  EC7E  F0C9         	call	i2___fltol	;wreg free
 42645  013332  C06C  F0A7         	movff	?i2___fltol,i2__doprnt@val
 42646  013336  C06D  F0A8         	movff	?i2___fltol+1,i2__doprnt@val+1
 42647  01333A  C06E  F0A9         	movff	?i2___fltol+2,i2__doprnt@val+2
 42648  01333E  C06F  F0AA         	movff	?i2___fltol+3,i2__doprnt@val+3
 42649                           
 42650                           ;doprnt.c: 1132: fval -= (double)val;
 42651  013342  C0A3  F080         	movff	i2__doprnt@fval,i2___flsub@b
 42652  013346  C0A4  F081         	movff	i2__doprnt@fval+1,i2___flsub@b+1
 42653  01334A  C0A5  F082         	movff	i2__doprnt@fval+2,i2___flsub@b+2
 42654  01334E  C0A6  F083         	movff	i2__doprnt@fval+3,i2___flsub@b+3
 42655  013352  C0A7  F005         	movff	i2__doprnt@val,i2___xxtofl@val
 42656  013356  C0A8  F006         	movff	i2__doprnt@val+1,i2___xxtofl@val+1
 42657  01335A  C0A9  F007         	movff	i2__doprnt@val+2,i2___xxtofl@val+2
 42658  01335E  C0AA  F008         	movff	i2__doprnt@val+3,i2___xxtofl@val+3
 42659  013362  0E00               	movlw	0
 42660  013364  EC91  F0C1         	call	i2___xxtofl
 42661  013368  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 42662  01336C  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 42663  013370  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 42664  013374  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 42665  013378  EC92  F0D3         	call	i2___flsub	;wreg free
 42666  01337C  C080  F0A3         	movff	?i2___flsub,i2__doprnt@fval
 42667  013380  C081  F0A4         	movff	?i2___flsub+1,i2__doprnt@fval+1
 42668  013384  C082  F0A5         	movff	?i2___flsub+2,i2__doprnt@fval+2
 42669  013388  C083  F0A6         	movff	?i2___flsub+3,i2__doprnt@fval+3
 42670                           
 42671                           ;doprnt.c: 1133: exp = 0;
 42672  01338C  0E00               	movlw	0
 42673  01338E  0100               	movlb	0	; () banked
 42674  013390  6F9E               	movwf	(i2__doprnt@exp+1)& (0+255),b
 42675  013392  0E00               	movlw	0
 42676  013394  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 42677  013396                     i2l1977:
 42678                           
 42679                           ; BSR set to: 0
 42680                           ;doprnt.c: 1134: }
 42681                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 42682                           
 42683                           ; BSR set to: 0
 42684  013396  0E01               	movlw	1
 42685  013398  6FB1               	movwf	i2__doprnt@c& (0+255),b
 42686  01339A                     i2l22329:
 42687                           
 42688                           ; BSR set to: 0
 42689  01339A  0E0A               	movlw	10
 42690  01339C  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 42691  01339E  B4D8               	btfsc	status,2,c
 42692  0133A0  D01B               	goto	i2u3197_40
 42693                           
 42694                           ; BSR set to: 0
 42695                           ;doprnt.c: 1137: if(val < dpowers[c])
 42696                           
 42697                           ; BSR set to: 0
 42698                           
 42699                           ; BSR set to: 0
 42700  0133A2  51B1               	movf	i2__doprnt@c& (0+255),w,b
 42701  0133A4  0D04               	mullw	4
 42702  0133A6  0EB5               	movlw	low _dpowers
 42703  0133A8  24F3               	addwf	prodl,w,c
 42704  0133AA  6EF6               	movwf	tblptrl,c
 42705  0133AC  0ECF               	movlw	high _dpowers
 42706  0133AE  20F4               	addwfc	prodh,w,c
 42707  0133B0  6EF7               	movwf	tblptrh,c
 42708  0133B2                     	if	1	;There are 3 active tblptr bytes
 42709  0133B2  6AF8               	clrf	tblptru,c
 42710  0133B4  0E00               	movlw	low (__mediumconst shr (0+16))
 42711  0133B6  22F8               	addwfc	tblptru,f,c
 42712  0133B8                     	endif
 42713  0133B8  0009               	tblrd		*+
 42714  0133BA  50F5               	movf	tablat,w,c
 42715  0133BC  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 42716  0133BE  0009               	tblrd		*+
 42717  0133C0  50F5               	movf	tablat,w,c
 42718  0133C2  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 42719  0133C4  0009               	tblrd		*+
 42720  0133C6  50F5               	movf	tablat,w,c
 42721  0133C8  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 42722  0133CA  0009               	tblrd		*+
 42723  0133CC  50F5               	movf	tablat,w,c
 42724  0133CE  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 42725  0133D0  A0D8               	btfss	status,0,c
 42726  0133D2  D002               	goto	i2u3197_40
 42727                           
 42728                           ; BSR set to: 0
 42729                           
 42730                           ; BSR set to: 0
 42731                           
 42732                           ; BSR set to: 0
 42733                           ;doprnt.c: 1138: break;
 42734  0133D4  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 42735  0133D6  D7E1               	goto	i2l22329
 42736  0133D8                     i2u3197_40:
 42737                           
 42738                           ; BSR set to: 0
 42739                           ;doprnt.c: 1142: width -= prec + c + exp;
 42740                           
 42741                           ; BSR set to: 0
 42742  0133D8  C0B1  F08E         	movff	i2__doprnt@c,??i2__doprnt
 42743  0133DC  6B8F               	clrf	(??i2__doprnt+1)& (0+255),b
 42744  0133DE  BF8E               	btfsc	??i2__doprnt& (0+255),7,b
 42745  0133E0  078F               	decf	(??i2__doprnt+1)& (0+255),f,b
 42746  0133E2  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 42747  0133E4  278E               	addwf	??i2__doprnt& (0+255),f,b
 42748  0133E6  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42749  0133E8  238F               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 42750  0133EA  519D               	movf	i2__doprnt@exp& (0+255),w,b
 42751  0133EC  278E               	addwf	??i2__doprnt& (0+255),f,b
 42752  0133EE  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 42753  0133F0  238F               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 42754  0133F2  518E               	movf	??i2__doprnt& (0+255),w,b
 42755  0133F4  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 42756  0133F6  518F               	movf	(??i2__doprnt+1)& (0+255),w,b
 42757  0133F8  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 42758                           
 42759                           ;doprnt.c: 1143: if(
 42760                           ;doprnt.c: 1147: prec)
 42761  0133FA  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 42762  0133FC  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42763  0133FE  B4D8               	btfsc	status,2,c
 42764  013400  D003               	goto	i2l1981
 42765                           
 42766                           ; BSR set to: 0
 42767                           ;doprnt.c: 1148: width--;
 42768  013402  07AB               	decf	i2__doprnt@width& (0+255),f,b
 42769  013404  A0D8               	btfss	status,0,c
 42770  013406  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42771  013408                     i2l1981:
 42772                           
 42773                           ; BSR set to: 0
 42774                           ;doprnt.c: 1149: if(flag & 0x03)
 42775                           
 42776                           ; BSR set to: 0
 42777  013408  0E03               	movlw	3
 42778  01340A  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 42779  01340C  6F8E               	movwf	??i2__doprnt& (0+255),b
 42780  01340E  0E00               	movlw	0
 42781  013410  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42782  013412  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 42783  013414  518E               	movf	??i2__doprnt& (0+255),w,b
 42784  013416  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 42785  013418  B4D8               	btfsc	status,2,c
 42786  01341A  D003               	goto	i2l1982
 42787                           
 42788                           ; BSR set to: 0
 42789                           ;doprnt.c: 1150: width--;
 42790  01341C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 42791  01341E  A0D8               	btfss	status,0,c
 42792  013420  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42793  013422                     i2l1982:
 42794                           
 42795                           ; BSR set to: 0
 42796                           ;doprnt.c: 1153: if(flag & 0x04) {
 42797                           
 42798                           ; BSR set to: 0
 42799  013422  A5AD               	btfss	i2__doprnt@flag& (0+255),2,b
 42800  013424  D0B6               	goto	i2l1993
 42801                           
 42802                           ; BSR set to: 0
 42803                           ;doprnt.c: 1157: if(flag & 0x03)
 42804  013426  0E03               	movlw	3
 42805  013428  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 42806  01342A  6F8E               	movwf	??i2__doprnt& (0+255),b
 42807  01342C  0E00               	movlw	0
 42808  01342E  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42809  013430  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 42810  013432  518E               	movf	??i2__doprnt& (0+255),w,b
 42811  013434  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 42812  013436  B4D8               	btfsc	status,2,c
 42813  013438  D06C               	goto	i2l1987
 42814                           
 42815                           ; BSR set to: 0
 42816                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 42817  01343A  EE20 F002          	lfsr	2,2
 42818  01343E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42819  013440  26D9               	addwf	fsr2l,f,c
 42820  013442  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42821  013444  22DA               	addwfc	fsr2h,f,c
 42822  013446  50DE               	movf	postinc2,w,c
 42823  013448  10DE               	iorwf	postinc2,w,c
 42824  01344A  10DE               	iorwf	postinc2,w,c
 42825  01344C  B4D8               	btfsc	status,2,c
 42826  01344E  D013               	goto	i2l1985
 42827                           
 42828                           ; BSR set to: 0
 42829  013450  EE20 F002          	lfsr	2,2
 42830  013454  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42831  013456  26D9               	addwf	fsr2l,f,c
 42832  013458  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42833  01345A  22DA               	addwfc	fsr2h,f,c
 42834  01345C  D801               	call	i2u3203_48
 42835  01345E  D059               	goto	i2l1987
 42836  013460                     i2u3203_48:
 42837  013460  0005               	push	
 42838  013462  6EFA               	movwf	pclath,c
 42839  013464  50DE               	movf	postinc2,w,c
 42840  013466  6EFD               	movwf	tosl,c
 42841  013468  50DE               	movf	postinc2,w,c
 42842  01346A  6EFE               	movwf	tosh,c
 42843  01346C  50DE               	movf	postinc2,w,c
 42844  01346E  6EFF               	movwf	tosu,c
 42845  013470  50FA               	movf	pclath,w,c
 42846  013472  0E2D               	movlw	45
 42847  013474  0012               	return		;indir
 42848  013476                     i2l1985:
 42849  013476  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42850  01347A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42851  01347E  CFDE F08E          	movff	postinc2,??i2__doprnt
 42852  013482  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42853  013486  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42854  01348A  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42855  01348E  0E2D               	movlw	45
 42856  013490  6EDF               	movwf	indf2,c
 42857  013492  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42858  013496  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42859  01349A  2ADE               	incf	postinc2,f,c
 42860  01349C  0E00               	movlw	0
 42861  01349E  22DD               	addwfc	postdec2,f,c
 42862                           
 42863                           ;doprnt.c: 1168: while(width > 0) {
 42864  0134A0  D038               	goto	i2l1987
 42865  0134A2                     i2l22361:
 42866                           
 42867                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 42868  0134A2  0100               	movlb	0	; () banked
 42869  0134A4  EE20 F002          	lfsr	2,2
 42870  0134A8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42871  0134AA  26D9               	addwf	fsr2l,f,c
 42872  0134AC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42873  0134AE  22DA               	addwfc	fsr2h,f,c
 42874  0134B0  50DE               	movf	postinc2,w,c
 42875  0134B2  10DE               	iorwf	postinc2,w,c
 42876  0134B4  10DE               	iorwf	postinc2,w,c
 42877  0134B6  B4D8               	btfsc	status,2,c
 42878  0134B8  D013               	goto	i2l1989
 42879                           
 42880                           ; BSR set to: 0
 42881  0134BA  EE20 F002          	lfsr	2,2
 42882  0134BE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42883  0134C0  26D9               	addwf	fsr2l,f,c
 42884  0134C2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42885  0134C4  22DA               	addwfc	fsr2h,f,c
 42886  0134C6  D801               	call	i2u3205_48
 42887  0134C8  D020               	goto	i2l1990
 42888  0134CA                     i2u3205_48:
 42889  0134CA  0005               	push	
 42890  0134CC  6EFA               	movwf	pclath,c
 42891  0134CE  50DE               	movf	postinc2,w,c
 42892  0134D0  6EFD               	movwf	tosl,c
 42893  0134D2  50DE               	movf	postinc2,w,c
 42894  0134D4  6EFE               	movwf	tosh,c
 42895  0134D6  50DE               	movf	postinc2,w,c
 42896  0134D8  6EFF               	movwf	tosu,c
 42897  0134DA  50FA               	movf	pclath,w,c
 42898  0134DC  0E30               	movlw	48
 42899  0134DE  0012               	return		;indir
 42900  0134E0                     i2l1989:
 42901  0134E0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42902  0134E4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42903  0134E8  CFDE F08E          	movff	postinc2,??i2__doprnt
 42904  0134EC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42905  0134F0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42906  0134F4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42907  0134F8  0E30               	movlw	48
 42908  0134FA  6EDF               	movwf	indf2,c
 42909  0134FC  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42910  013500  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42911  013504  2ADE               	incf	postinc2,f,c
 42912  013506  0E00               	movlw	0
 42913  013508  22DD               	addwfc	postdec2,f,c
 42914  01350A                     i2l1990:
 42915                           
 42916                           ;doprnt.c: 1170: width--;
 42917  01350A  0100               	movlb	0	; () banked
 42918  01350C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 42919  01350E  A0D8               	btfss	status,0,c
 42920  013510  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42921  013512                     i2l1987:
 42922                           
 42923                           ; BSR set to: 0
 42924  013512  0100               	movlb	0	; () banked
 42925  013514  BFAC               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 42926  013516  D0F5               	goto	i2l2004
 42927  013518  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42928  01351A  E1C3               	bnz	i2l22361
 42929  01351C  05AB               	decf	i2__doprnt@width& (0+255),w,b
 42930  01351E  A0D8               	btfss	status,0,c
 42931  013520  D0F0               	goto	i2l2004
 42932  013522  D7BF               	goto	i2l1988
 42933  013524                     i2l22373:
 42934                           
 42935                           ; BSR set to: 0
 42936                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 42937  013524  EE20 F002          	lfsr	2,2
 42938  013528  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42939  01352A  26D9               	addwf	fsr2l,f,c
 42940  01352C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42941  01352E  22DA               	addwfc	fsr2h,f,c
 42942  013530  50DE               	movf	postinc2,w,c
 42943  013532  10DE               	iorwf	postinc2,w,c
 42944  013534  10DE               	iorwf	postinc2,w,c
 42945  013536  B4D8               	btfsc	status,2,c
 42946  013538  D013               	goto	i2l1995
 42947                           
 42948                           ; BSR set to: 0
 42949  01353A  EE20 F002          	lfsr	2,2
 42950  01353E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42951  013540  26D9               	addwf	fsr2l,f,c
 42952  013542  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42953  013544  22DA               	addwfc	fsr2h,f,c
 42954  013546  D801               	call	i2u3208_48
 42955  013548  D020               	goto	i2l1996
 42956  01354A                     i2u3208_48:
 42957  01354A  0005               	push	
 42958  01354C  6EFA               	movwf	pclath,c
 42959  01354E  50DE               	movf	postinc2,w,c
 42960  013550  6EFD               	movwf	tosl,c
 42961  013552  50DE               	movf	postinc2,w,c
 42962  013554  6EFE               	movwf	tosh,c
 42963  013556  50DE               	movf	postinc2,w,c
 42964  013558  6EFF               	movwf	tosu,c
 42965  01355A  50FA               	movf	pclath,w,c
 42966  01355C  0E20               	movlw	32
 42967  01355E  0012               	return		;indir
 42968  013560                     i2l1995:
 42969  013560  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42970  013564  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42971  013568  CFDE F08E          	movff	postinc2,??i2__doprnt
 42972  01356C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42973  013570  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42974  013574  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42975  013578  0E20               	movlw	32
 42976  01357A  6EDF               	movwf	indf2,c
 42977  01357C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42978  013580  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42979  013584  2ADE               	incf	postinc2,f,c
 42980  013586  0E00               	movlw	0
 42981  013588  22DD               	addwfc	postdec2,f,c
 42982  01358A                     i2l1996:
 42983                           
 42984                           ;doprnt.c: 1182: width--;
 42985  01358A  0100               	movlb	0	; () banked
 42986  01358C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 42987  01358E  A0D8               	btfss	status,0,c
 42988  013590  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42989  013592                     i2l1993:
 42990                           
 42991                           ; BSR set to: 0
 42992                           
 42993                           ; BSR set to: 0
 42994  013592  BFAC               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 42995  013594  D005               	goto	i2u3209_40
 42996  013596  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42997  013598  E1C5               	bnz	i2l22373
 42998  01359A  05AB               	decf	i2__doprnt@width& (0+255),w,b
 42999  01359C  B0D8               	btfsc	status,0,c
 43000  01359E  D7C2               	goto	i2l1994
 43001  0135A0                     i2u3209_40:
 43002                           
 43003                           ; BSR set to: 0
 43004                           ;doprnt.c: 1183: }
 43005                           ;doprnt.c: 1188: if(flag & 0x03)
 43006                           
 43007                           ; BSR set to: 0
 43008  0135A0  0E03               	movlw	3
 43009  0135A2  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43010  0135A4  6F8E               	movwf	??i2__doprnt& (0+255),b
 43011  0135A6  0E00               	movlw	0
 43012  0135A8  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43013  0135AA  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43014  0135AC  518E               	movf	??i2__doprnt& (0+255),w,b
 43015  0135AE  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43016  0135B0  B4D8               	btfsc	status,2,c
 43017  0135B2  D0A7               	goto	i2l2004
 43018                           
 43019                           ; BSR set to: 0
 43020                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 43021  0135B4  EE20 F002          	lfsr	2,2
 43022  0135B8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43023  0135BA  26D9               	addwf	fsr2l,f,c
 43024  0135BC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43025  0135BE  22DA               	addwfc	fsr2h,f,c
 43026  0135C0  50DE               	movf	postinc2,w,c
 43027  0135C2  10DE               	iorwf	postinc2,w,c
 43028  0135C4  10DE               	iorwf	postinc2,w,c
 43029  0135C6  B4D8               	btfsc	status,2,c
 43030  0135C8  D013               	goto	i2l1999
 43031                           
 43032                           ; BSR set to: 0
 43033  0135CA  EE20 F002          	lfsr	2,2
 43034  0135CE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43035  0135D0  26D9               	addwf	fsr2l,f,c
 43036  0135D2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43037  0135D4  22DA               	addwfc	fsr2h,f,c
 43038  0135D6  D801               	call	i2u3212_48
 43039  0135D8  D094               	goto	i2l2004
 43040  0135DA                     i2u3212_48:
 43041  0135DA  0005               	push	
 43042  0135DC  6EFA               	movwf	pclath,c
 43043  0135DE  50DE               	movf	postinc2,w,c
 43044  0135E0  6EFD               	movwf	tosl,c
 43045  0135E2  50DE               	movf	postinc2,w,c
 43046  0135E4  6EFE               	movwf	tosh,c
 43047  0135E6  50DE               	movf	postinc2,w,c
 43048  0135E8  6EFF               	movwf	tosu,c
 43049  0135EA  50FA               	movf	pclath,w,c
 43050  0135EC  0E2D               	movlw	45
 43051  0135EE  0012               	return		;indir
 43052  0135F0                     i2l1999:
 43053  0135F0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43054  0135F4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43055  0135F8  CFDE F08E          	movff	postinc2,??i2__doprnt
 43056  0135FC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43057  013600  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43058  013604  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43059  013608  0E2D               	movlw	45
 43060  01360A  D073               	goto	L19
 43061  01360C                     
 43062                           ;doprnt.c: 1200: {
 43063                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 43064  01360C  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43065  013610  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43066  013614  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43067  013618  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43068  01361C  0100               	movlb	0	; () banked
 43069  01361E  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43070  013620  0D04               	mullw	4
 43071  013622  0EB5               	movlw	low _dpowers
 43072  013624  24F3               	addwf	prodl,w,c
 43073  013626  6EF6               	movwf	tblptrl,c
 43074  013628  0ECF               	movlw	high _dpowers
 43075  01362A  20F4               	addwfc	prodh,w,c
 43076  01362C  6EF7               	movwf	tblptrh,c
 43077  01362E                     	if	1	;There are 3 active tblptr bytes
 43078  01362E  6AF8               	clrf	tblptru,c
 43079  013630  0E00               	movlw	low (__mediumconst shr (0+16))
 43080  013632  22F8               	addwfc	tblptru,f,c
 43081  013634                     	endif
 43082  013634  0009               	tblrd		*+
 43083  013636  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43084  01363A  0009               	tblrd		*+
 43085  01363C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43086  013640  0009               	tblrd		*+
 43087  013642  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43088  013646  000A               	tblrd		*-
 43089  013648  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43090  01364C  EC53  F0CE         	call	i2___lldiv
 43091  013650  C001  F09F         	movff	?i2___lldiv,i2__doprnt@tmpval
 43092  013654  C002  F0A0         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 43093  013658  C003  F0A1         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 43094  01365C  C004  F0A2         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 43095                           
 43096                           ;doprnt.c: 1202: tmpval.vd %= 10;
 43097  013660  C09F  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 43098  013664  C0A0  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 43099  013668  C0A1  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 43100  01366C  C0A2  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 43101  013670  0E0A               	movlw	10
 43102  013672  6E12               	movwf	i2___llmod@divisor,c
 43103  013674  0E00               	movlw	0
 43104  013676  6E13               	movwf	i2___llmod@divisor+1,c
 43105  013678  0E00               	movlw	0
 43106  01367A  6E14               	movwf	i2___llmod@divisor+2,c
 43107  01367C  0E00               	movlw	0
 43108  01367E  6E15               	movwf	i2___llmod@divisor+3,c
 43109  013680  EC87  F0D0         	call	i2___llmod	;wreg free
 43110  013684  C00E  F09F         	movff	?i2___llmod,i2__doprnt@tmpval
 43111  013688  C00F  F0A0         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 43112  01368C  C010  F0A1         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 43113  013690  C011  F0A2         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 43114                           
 43115                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 43116  013694  0100               	movlb	0	; () banked
 43117  013696  EE20 F002          	lfsr	2,2
 43118  01369A  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43119  01369C  26D9               	addwf	fsr2l,f,c
 43120  01369E  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43121  0136A0  22DA               	addwfc	fsr2h,f,c
 43122  0136A2  50DE               	movf	postinc2,w,c
 43123  0136A4  10DE               	iorwf	postinc2,w,c
 43124  0136A6  10DE               	iorwf	postinc2,w,c
 43125  0136A8  B4D8               	btfsc	status,2,c
 43126  0136AA  D014               	goto	i2l2003
 43127                           
 43128                           ; BSR set to: 0
 43129  0136AC  EE20 F002          	lfsr	2,2
 43130  0136B0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43131  0136B2  26D9               	addwf	fsr2l,f,c
 43132  0136B4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43133  0136B6  22DA               	addwfc	fsr2h,f,c
 43134  0136B8  D801               	call	i2u3214_48
 43135  0136BA  D023               	goto	i2l2004
 43136  0136BC                     i2u3214_48:
 43137  0136BC  0005               	push	
 43138  0136BE  6EFA               	movwf	pclath,c
 43139  0136C0  50DE               	movf	postinc2,w,c
 43140  0136C2  6EFD               	movwf	tosl,c
 43141  0136C4  50DE               	movf	postinc2,w,c
 43142  0136C6  6EFE               	movwf	tosh,c
 43143  0136C8  50DE               	movf	postinc2,w,c
 43144  0136CA  6EFF               	movwf	tosu,c
 43145  0136CC  50FA               	movf	pclath,w,c
 43146  0136CE  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 43147  0136D0  0F30               	addlw	48
 43148  0136D2  0012               	return		;indir
 43149  0136D4                     i2l2003:
 43150  0136D4  0100               	movlb	0	; () banked
 43151  0136D6  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 43152  0136D8  0F30               	addlw	48
 43153  0136DA  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43154  0136DE  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43155  0136E2  CFDE F08E          	movff	postinc2,??i2__doprnt
 43156  0136E6  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43157  0136EA  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43158  0136EE  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43159  0136F2                     L19:
 43160  0136F2  6EDF               	movwf	indf2,c
 43161  0136F4  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43162  0136F8  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43163  0136FC  2ADE               	incf	postinc2,f,c
 43164  0136FE  0E00               	movlw	0
 43165  013700  22DD               	addwfc	postdec2,f,c
 43166  013702                     i2l2004:
 43167                           
 43168                           ; BSR set to: 0
 43169                           
 43170                           ; BSR set to: 0
 43171  013702  0100               	movlb	0	; () banked
 43172  013704  07B1               	decf	i2__doprnt@c& (0+255),f,b
 43173  013706  29B1               	incf	i2__doprnt@c& (0+255),w,b
 43174  013708  B4D8               	btfsc	status,2,c
 43175  01370A  D038               	goto	i2l2006
 43176  01370C  D77F               	goto	i2l2002
 43177  01370E                     i2l22407:
 43178                           
 43179                           ; BSR set to: 0
 43180                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 43181  01370E  EE20 F002          	lfsr	2,2
 43182  013712  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43183  013714  26D9               	addwf	fsr2l,f,c
 43184  013716  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43185  013718  22DA               	addwfc	fsr2h,f,c
 43186  01371A  50DE               	movf	postinc2,w,c
 43187  01371C  10DE               	iorwf	postinc2,w,c
 43188  01371E  10DE               	iorwf	postinc2,w,c
 43189  013720  B4D8               	btfsc	status,2,c
 43190  013722  D013               	goto	i2l2008
 43191                           
 43192                           ; BSR set to: 0
 43193  013724  EE20 F002          	lfsr	2,2
 43194  013728  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43195  01372A  26D9               	addwf	fsr2l,f,c
 43196  01372C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43197  01372E  22DA               	addwfc	fsr2h,f,c
 43198  013730  D801               	call	i2u3217_48
 43199  013732  D020               	goto	i2l2009
 43200  013734                     i2u3217_48:
 43201  013734  0005               	push	
 43202  013736  6EFA               	movwf	pclath,c
 43203  013738  50DE               	movf	postinc2,w,c
 43204  01373A  6EFD               	movwf	tosl,c
 43205  01373C  50DE               	movf	postinc2,w,c
 43206  01373E  6EFE               	movwf	tosh,c
 43207  013740  50DE               	movf	postinc2,w,c
 43208  013742  6EFF               	movwf	tosu,c
 43209  013744  50FA               	movf	pclath,w,c
 43210  013746  0E30               	movlw	48
 43211  013748  0012               	return		;indir
 43212  01374A                     i2l2008:
 43213  01374A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43214  01374E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43215  013752  CFDE F08E          	movff	postinc2,??i2__doprnt
 43216  013756  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43217  01375A  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43218  01375E  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43219  013762  0E30               	movlw	48
 43220  013764  6EDF               	movwf	indf2,c
 43221  013766  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43222  01376A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43223  01376E  2ADE               	incf	postinc2,f,c
 43224  013770  0E00               	movlw	0
 43225  013772  22DD               	addwfc	postdec2,f,c
 43226  013774                     i2l2009:
 43227                           
 43228                           ;doprnt.c: 1209: exp--;
 43229  013774  0100               	movlb	0	; () banked
 43230  013776  079D               	decf	i2__doprnt@exp& (0+255),f,b
 43231  013778  A0D8               	btfss	status,0,c
 43232  01377A  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 43233  01377C                     i2l2006:
 43234                           
 43235                           ; BSR set to: 0
 43236                           
 43237                           ; BSR set to: 0
 43238  01377C  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 43239  01377E  D005               	goto	i2u3218_40
 43240  013780  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 43241  013782  E1C5               	bnz	i2l22407
 43242  013784  059D               	decf	i2__doprnt@exp& (0+255),w,b
 43243  013786  B0D8               	btfsc	status,0,c
 43244  013788  D7C2               	goto	i2l2007
 43245  01378A                     i2u3218_40:
 43246                           
 43247                           ; BSR set to: 0
 43248                           ;doprnt.c: 1210: }
 43249                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 43250                           
 43251                           ; BSR set to: 0
 43252  01378A  BFB0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 43253  01378C  D009               	goto	i2l2011
 43254  01378E  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43255  013790  E104               	bnz	i2u3219_40
 43256  013792  0E09               	movlw	9
 43257  013794  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 43258  013796  A0D8               	btfss	status,0,c
 43259  013798  D003               	goto	i2l2011
 43260  01379A                     i2u3219_40:
 43261                           
 43262                           ; BSR set to: 0
 43263                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 43264  01379A  0E08               	movlw	8
 43265  01379C  6FB1               	movwf	i2__doprnt@c& (0+255),b
 43266  01379E  D002               	goto	i2l2012
 43267  0137A0                     i2l2011:
 43268                           
 43269                           ; BSR set to: 0
 43270                           ;doprnt.c: 1213: else
 43271                           ;doprnt.c: 1214: c = prec;
 43272  0137A0  C0AF  F0B1         	movff	i2__doprnt@prec,i2__doprnt@c
 43273  0137A4                     i2l2012:
 43274                           
 43275                           ; BSR set to: 0
 43276                           ;doprnt.c: 1215: prec -= c;
 43277                           
 43278                           ; BSR set to: 0
 43279  0137A4  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43280  0137A6  5FAF               	subwf	i2__doprnt@prec& (0+255),f,b
 43281  0137A8  0E00               	movlw	0
 43282  0137AA  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 43283  0137AC  0EFF               	movlw	255
 43284  0137AE  5BB0               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 43285                           
 43286                           ; BSR set to: 0
 43287                           ;doprnt.c: 1219: if(c)
 43288  0137B0  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43289  0137B2  B4D8               	btfsc	status,2,c
 43290  0137B4  D033               	goto	i2l2015
 43291                           
 43292                           ; BSR set to: 0
 43293                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 43294  0137B6  EE20 F002          	lfsr	2,2
 43295  0137BA  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43296  0137BC  26D9               	addwf	fsr2l,f,c
 43297  0137BE  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43298  0137C0  22DA               	addwfc	fsr2h,f,c
 43299  0137C2  50DE               	movf	postinc2,w,c
 43300  0137C4  10DE               	iorwf	postinc2,w,c
 43301  0137C6  10DE               	iorwf	postinc2,w,c
 43302  0137C8  B4D8               	btfsc	status,2,c
 43303  0137CA  D013               	goto	i2l2014
 43304                           
 43305                           ; BSR set to: 0
 43306  0137CC  EE20 F002          	lfsr	2,2
 43307  0137D0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43308  0137D2  26D9               	addwf	fsr2l,f,c
 43309  0137D4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43310  0137D6  22DA               	addwfc	fsr2h,f,c
 43311  0137D8  D801               	call	i2u3222_48
 43312  0137DA  D020               	goto	i2l2015
 43313  0137DC                     i2u3222_48:
 43314  0137DC  0005               	push	
 43315  0137DE  6EFA               	movwf	pclath,c
 43316  0137E0  50DE               	movf	postinc2,w,c
 43317  0137E2  6EFD               	movwf	tosl,c
 43318  0137E4  50DE               	movf	postinc2,w,c
 43319  0137E6  6EFE               	movwf	tosh,c
 43320  0137E8  50DE               	movf	postinc2,w,c
 43321  0137EA  6EFF               	movwf	tosu,c
 43322  0137EC  50FA               	movf	pclath,w,c
 43323  0137EE  0E2E               	movlw	46
 43324  0137F0  0012               	return		;indir
 43325  0137F2                     i2l2014:
 43326  0137F2  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43327  0137F6  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43328  0137FA  CFDE F08E          	movff	postinc2,??i2__doprnt
 43329  0137FE  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43330  013802  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43331  013806  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43332  01380A  0E2E               	movlw	46
 43333  01380C  6EDF               	movwf	indf2,c
 43334  01380E  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43335  013812  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43336  013816  2ADE               	incf	postinc2,f,c
 43337  013818  0E00               	movlw	0
 43338  01381A  22DD               	addwfc	postdec2,f,c
 43339  01381C                     i2l2015:
 43340                           
 43341                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 43342  01381C  0100               	movlb	0	; () banked
 43343  01381E  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43344  013820  ECF3  F0A7         	call	i2_scale
 43345  013824  C049  F094         	movff	?i2_scale,i2__doprnt$5357
 43346  013828  C04A  F095         	movff	?i2_scale+1,i2__doprnt$5357+1
 43347  01382C  C04B  F096         	movff	?i2_scale+2,i2__doprnt$5357+2
 43348  013830  C04C  F097         	movff	?i2_scale+3,i2__doprnt$5357+3
 43349                           
 43350                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 43351  013834  C0A3  F034         	movff	i2__doprnt@fval,i2___flmul@a
 43352  013838  C0A4  F035         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 43353  01383C  C0A5  F036         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 43354  013840  C0A6  F037         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 43355  013844  C094  F030         	movff	i2__doprnt$5357,i2___flmul@b
 43356  013848  C095  F031         	movff	i2__doprnt$5357+1,i2___flmul@b+1
 43357  01384C  C096  F032         	movff	i2__doprnt$5357+2,i2___flmul@b+2
 43358  013850  C097  F033         	movff	i2__doprnt$5357+3,i2___flmul@b+3
 43359  013854  EC90  F0AD         	call	i2___flmul	;wreg free
 43360  013858  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 43361  01385C  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 43362  013860  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 43363  013864  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 43364  013868  EC7E  F0C9         	call	i2___fltol	;wreg free
 43365  01386C  C06C  F0A7         	movff	?i2___fltol,i2__doprnt@val
 43366  013870  C06D  F0A8         	movff	?i2___fltol+1,i2__doprnt@val+1
 43367  013874  C06E  F0A9         	movff	?i2___fltol+2,i2__doprnt@val+2
 43368  013878  C06F  F0AA         	movff	?i2___fltol+3,i2__doprnt@val+3
 43369                           
 43370                           ;doprnt.c: 1228: while(c--) {
 43371  01387C  D0A5               	goto	i2l2016
 43372  01387E                     
 43373                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 43374  01387E  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43375  013882  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43376  013886  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43377  01388A  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43378  01388E  0100               	movlb	0	; () banked
 43379  013890  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43380  013892  0D04               	mullw	4
 43381  013894  0EB5               	movlw	low _dpowers
 43382  013896  24F3               	addwf	prodl,w,c
 43383  013898  6EF6               	movwf	tblptrl,c
 43384  01389A  0ECF               	movlw	high _dpowers
 43385  01389C  20F4               	addwfc	prodh,w,c
 43386  01389E  6EF7               	movwf	tblptrh,c
 43387  0138A0                     	if	1	;There are 3 active tblptr bytes
 43388  0138A0  6AF8               	clrf	tblptru,c
 43389  0138A2  0E00               	movlw	low (__mediumconst shr (0+16))
 43390  0138A4  22F8               	addwfc	tblptru,f,c
 43391  0138A6                     	endif
 43392  0138A6  0009               	tblrd		*+
 43393  0138A8  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43394  0138AC  0009               	tblrd		*+
 43395  0138AE  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43396  0138B2  0009               	tblrd		*+
 43397  0138B4  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43398  0138B8  000A               	tblrd		*-
 43399  0138BA  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43400  0138BE  EC53  F0CE         	call	i2___lldiv	;wreg free
 43401  0138C2  C001  F09F         	movff	?i2___lldiv,i2__doprnt@tmpval
 43402  0138C6  C002  F0A0         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 43403  0138CA  C003  F0A1         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 43404  0138CE  C004  F0A2         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 43405                           
 43406                           ;doprnt.c: 1230: tmpval.vd %= 10;
 43407  0138D2  C09F  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 43408  0138D6  C0A0  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 43409  0138DA  C0A1  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 43410  0138DE  C0A2  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 43411  0138E2  0E0A               	movlw	10
 43412  0138E4  6E12               	movwf	i2___llmod@divisor,c
 43413  0138E6  0E00               	movlw	0
 43414  0138E8  6E13               	movwf	i2___llmod@divisor+1,c
 43415  0138EA  0E00               	movlw	0
 43416  0138EC  6E14               	movwf	i2___llmod@divisor+2,c
 43417  0138EE  0E00               	movlw	0
 43418  0138F0  6E15               	movwf	i2___llmod@divisor+3,c
 43419  0138F2  EC87  F0D0         	call	i2___llmod	;wreg free
 43420  0138F6  C00E  F09F         	movff	?i2___llmod,i2__doprnt@tmpval
 43421  0138FA  C00F  F0A0         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 43422  0138FE  C010  F0A1         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 43423  013902  C011  F0A2         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 43424                           
 43425                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 43426  013906  0100               	movlb	0	; () banked
 43427  013908  EE20 F002          	lfsr	2,2
 43428  01390C  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43429  01390E  26D9               	addwf	fsr2l,f,c
 43430  013910  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43431  013912  22DA               	addwfc	fsr2h,f,c
 43432  013914  50DE               	movf	postinc2,w,c
 43433  013916  10DE               	iorwf	postinc2,w,c
 43434  013918  10DE               	iorwf	postinc2,w,c
 43435  01391A  B4D8               	btfsc	status,2,c
 43436  01391C  D014               	goto	i2l2018
 43437                           
 43438                           ; BSR set to: 0
 43439  01391E  EE20 F002          	lfsr	2,2
 43440  013922  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43441  013924  26D9               	addwf	fsr2l,f,c
 43442  013926  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43443  013928  22DA               	addwfc	fsr2h,f,c
 43444  01392A  D801               	call	i2u3224_48
 43445  01392C  D023               	goto	i2l2019
 43446  01392E                     i2u3224_48:
 43447  01392E  0005               	push	
 43448  013930  6EFA               	movwf	pclath,c
 43449  013932  50DE               	movf	postinc2,w,c
 43450  013934  6EFD               	movwf	tosl,c
 43451  013936  50DE               	movf	postinc2,w,c
 43452  013938  6EFE               	movwf	tosh,c
 43453  01393A  50DE               	movf	postinc2,w,c
 43454  01393C  6EFF               	movwf	tosu,c
 43455  01393E  50FA               	movf	pclath,w,c
 43456  013940  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 43457  013942  0F30               	addlw	48
 43458  013944  0012               	return		;indir
 43459  013946                     i2l2018:
 43460  013946  0100               	movlb	0	; () banked
 43461  013948  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 43462  01394A  0F30               	addlw	48
 43463  01394C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43464  013950  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43465  013954  CFDE F08E          	movff	postinc2,??i2__doprnt
 43466  013958  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43467  01395C  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43468  013960  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43469  013964  6EDF               	movwf	indf2,c
 43470  013966  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43471  01396A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43472  01396E  2ADE               	incf	postinc2,f,c
 43473  013970  0E00               	movlw	0
 43474  013972  22DD               	addwfc	postdec2,f,c
 43475  013974                     i2l2019:
 43476                           
 43477                           ;doprnt.c: 1232: val %= dpowers[c];
 43478                           
 43479                           ; BSR set to: 0
 43480  013974  C0A7  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 43481  013978  C0A8  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 43482  01397C  C0A9  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 43483  013980  C0AA  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 43484  013984  0100               	movlb	0	; () banked
 43485  013986  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43486  013988  0D04               	mullw	4
 43487  01398A  0EB5               	movlw	low _dpowers
 43488  01398C  24F3               	addwf	prodl,w,c
 43489  01398E  6EF6               	movwf	tblptrl,c
 43490  013990  0ECF               	movlw	high _dpowers
 43491  013992  20F4               	addwfc	prodh,w,c
 43492  013994  6EF7               	movwf	tblptrh,c
 43493  013996                     	if	1	;There are 3 active tblptr bytes
 43494  013996  6AF8               	clrf	tblptru,c
 43495  013998  0E00               	movlw	low (__mediumconst shr (0+16))
 43496  01399A  22F8               	addwfc	tblptru,f,c
 43497  01399C                     	endif
 43498  01399C  0009               	tblrd		*+
 43499  01399E  CFF5 F012          	movff	tablat,i2___llmod@divisor
 43500  0139A2  0009               	tblrd		*+
 43501  0139A4  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 43502  0139A8  0009               	tblrd		*+
 43503  0139AA  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 43504  0139AE  000A               	tblrd		*-
 43505  0139B0  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 43506  0139B4  EC87  F0D0         	call	i2___llmod
 43507  0139B8  C00E  F0A7         	movff	?i2___llmod,i2__doprnt@val
 43508  0139BC  C00F  F0A8         	movff	?i2___llmod+1,i2__doprnt@val+1
 43509  0139C0  C010  F0A9         	movff	?i2___llmod+2,i2__doprnt@val+2
 43510  0139C4  C011  F0AA         	movff	?i2___llmod+3,i2__doprnt@val+3
 43511  0139C8                     i2l2016:
 43512  0139C8  0100               	movlb	0	; () banked
 43513  0139CA  07B1               	decf	i2__doprnt@c& (0+255),f,b
 43514  0139CC  29B1               	incf	i2__doprnt@c& (0+255),w,b
 43515  0139CE  B4D8               	btfsc	status,2,c
 43516  0139D0  D038               	goto	i2l2021
 43517  0139D2  D755               	goto	i2l2017
 43518  0139D4                     
 43519                           ; BSR set to: 0
 43520                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 43521                           
 43522                           ; BSR set to: 0
 43523  0139D4  EE20 F002          	lfsr	2,2
 43524  0139D8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43525  0139DA  26D9               	addwf	fsr2l,f,c
 43526  0139DC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43527  0139DE  22DA               	addwfc	fsr2h,f,c
 43528  0139E0  50DE               	movf	postinc2,w,c
 43529  0139E2  10DE               	iorwf	postinc2,w,c
 43530  0139E4  10DE               	iorwf	postinc2,w,c
 43531  0139E6  B4D8               	btfsc	status,2,c
 43532  0139E8  D013               	goto	i2l2023
 43533                           
 43534                           ; BSR set to: 0
 43535  0139EA  EE20 F002          	lfsr	2,2
 43536  0139EE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43537  0139F0  26D9               	addwf	fsr2l,f,c
 43538  0139F2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43539  0139F4  22DA               	addwfc	fsr2h,f,c
 43540  0139F6  D801               	call	i2u3227_48
 43541  0139F8  D020               	goto	i2l2024
 43542  0139FA                     i2u3227_48:
 43543  0139FA  0005               	push	
 43544  0139FC  6EFA               	movwf	pclath,c
 43545  0139FE  50DE               	movf	postinc2,w,c
 43546  013A00  6EFD               	movwf	tosl,c
 43547  013A02  50DE               	movf	postinc2,w,c
 43548  013A04  6EFE               	movwf	tosh,c
 43549  013A06  50DE               	movf	postinc2,w,c
 43550  013A08  6EFF               	movwf	tosu,c
 43551  013A0A  50FA               	movf	pclath,w,c
 43552  013A0C  0E30               	movlw	48
 43553  013A0E  0012               	return		;indir
 43554  013A10                     i2l2023:
 43555  013A10  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43556  013A14  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43557  013A18  CFDE F08E          	movff	postinc2,??i2__doprnt
 43558  013A1C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43559  013A20  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43560  013A24  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43561  013A28  0E30               	movlw	48
 43562  013A2A  6EDF               	movwf	indf2,c
 43563  013A2C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43564  013A30  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43565  013A34  2ADE               	incf	postinc2,f,c
 43566  013A36  0E00               	movlw	0
 43567  013A38  22DD               	addwfc	postdec2,f,c
 43568  013A3A                     i2l2024:
 43569                           
 43570                           ;doprnt.c: 1237: prec--;
 43571  013A3A  0100               	movlb	0	; () banked
 43572  013A3C  07AF               	decf	i2__doprnt@prec& (0+255),f,b
 43573  013A3E  A0D8               	btfss	status,0,c
 43574  013A40  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 43575  013A42                     i2l2021:
 43576                           
 43577                           ; BSR set to: 0
 43578                           
 43579                           ; BSR set to: 0
 43580  013A42  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43581  013A44  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 43582  013A46  B4D8               	btfsc	status,2,c
 43583  013A48  D2EC               	goto	i2u3265_40
 43584  013A4A  D7C4               	goto	i2l2022
 43585  013A4C                     i2l1959:
 43586                           
 43587                           ; BSR set to: 0
 43588                           ;doprnt.c: 1246: }
 43589                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 43590                           
 43591                           ; BSR set to: 0
 43592  013A4C  0EC0               	movlw	192
 43593  013A4E  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43594  013A50  6F8E               	movwf	??i2__doprnt& (0+255),b
 43595  013A52  0E00               	movlw	0
 43596  013A54  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43597  013A56  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43598  013A58  518E               	movf	??i2__doprnt& (0+255),w,b
 43599  013A5A  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43600  013A5C  A4D8               	btfss	status,2,c
 43601  013A5E  D041               	goto	i2l2026
 43602                           
 43603                           ; BSR set to: 0
 43604                           ;doprnt.c: 1253: {
 43605                           ;doprnt.c: 1255: if(flag & 0x10)
 43606  013A60  A9AD               	btfss	i2__doprnt@flag& (0+255),4,b
 43607  013A62  D019               	goto	i2l2027
 43608                           
 43609                           ; BSR set to: 0
 43610                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 43611  013A64  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 43612  013A68  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 43613  013A6C  CFDF F08E          	movff	indf2,??i2__doprnt
 43614  013A70  0E04               	movlw	4
 43615  013A72  26DE               	addwf	postinc2,f,c
 43616  013A74  CFDF F08F          	movff	indf2,??i2__doprnt+1
 43617  013A78  0E00               	movlw	0
 43618  013A7A  22DD               	addwfc	postdec2,f,c
 43619  013A7C  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43620  013A80  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43621  013A84  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 43622  013A88  CFDE F0A8          	movff	postinc2,i2__doprnt@val+1
 43623  013A8C  CFDE F0A9          	movff	postinc2,i2__doprnt@val+2
 43624  013A90  CFDE F0AA          	movff	postinc2,i2__doprnt@val+3
 43625  013A94  D019               	goto	i2l2028
 43626  013A96                     i2l2027:
 43627                           
 43628                           ; BSR set to: 0
 43629                           ;doprnt.c: 1257: else
 43630                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 43631                           
 43632                           ; BSR set to: 0
 43633  013A96  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 43634  013A9A  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 43635  013A9E  CFDF F08E          	movff	indf2,??i2__doprnt
 43636  013AA2  0E02               	movlw	2
 43637  013AA4  26DE               	addwf	postinc2,f,c
 43638  013AA6  CFDF F08F          	movff	indf2,??i2__doprnt+1
 43639  013AAA  0E00               	movlw	0
 43640  013AAC  22DD               	addwfc	postdec2,f,c
 43641  013AAE  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43642  013AB2  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43643  013AB6  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 43644  013ABA  CFDD F0A8          	movff	postdec2,i2__doprnt@val+1
 43645  013ABE  0E00               	movlw	0
 43646  013AC0  BFA8               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 43647  013AC2  0EFF               	movlw	-1
 43648  013AC4  6FA9               	movwf	(i2__doprnt@val+2)& (0+255),b
 43649  013AC6  6FAA               	movwf	(i2__doprnt@val+3)& (0+255),b
 43650  013AC8                     i2l2028:
 43651                           
 43652                           ; BSR set to: 0
 43653                           ;doprnt.c: 1261: if((long)val < 0) {
 43654                           
 43655                           ; BSR set to: 0
 43656  013AC8  AFAA               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 43657  013ACA  D040               	goto	i2l2032
 43658                           
 43659                           ; BSR set to: 0
 43660                           ;doprnt.c: 1262: flag |= 0x03;
 43661  013ACC  0E03               	movlw	3
 43662  013ACE  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 43663                           
 43664                           ; BSR set to: 0
 43665                           ;doprnt.c: 1263: val = -val;
 43666  013AD0  1FAA               	comf	(i2__doprnt@val+3)& (0+255),f,b
 43667  013AD2  1FA9               	comf	(i2__doprnt@val+2)& (0+255),f,b
 43668  013AD4  1FA8               	comf	(i2__doprnt@val+1)& (0+255),f,b
 43669  013AD6  6DA7               	negf	i2__doprnt@val& (0+255),b
 43670  013AD8  0E00               	movlw	0
 43671  013ADA  23A8               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 43672  013ADC  23A9               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 43673  013ADE  23AA               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 43674                           
 43675                           ; BSR set to: 0
 43676                           ;doprnt.c: 1264: }
 43677                           ;doprnt.c: 1266: }
 43678  013AE0  D035               	goto	i2l2032
 43679  013AE2                     i2l2026:
 43680                           
 43681                           ; BSR set to: 0
 43682                           ;doprnt.c: 1268: else
 43683                           ;doprnt.c: 1273: {
 43684                           ;doprnt.c: 1281: if(flag & 0x10)
 43685  013AE2  A9AD               	btfss	i2__doprnt@flag& (0+255),4,b
 43686  013AE4  D019               	goto	i2l2031
 43687                           
 43688                           ; BSR set to: 0
 43689                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 43690  013AE6  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 43691  013AEA  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 43692  013AEE  CFDF F08E          	movff	indf2,??i2__doprnt
 43693  013AF2  0E04               	movlw	4
 43694  013AF4  26DE               	addwf	postinc2,f,c
 43695  013AF6  CFDF F08F          	movff	indf2,??i2__doprnt+1
 43696  013AFA  0E00               	movlw	0
 43697  013AFC  22DD               	addwfc	postdec2,f,c
 43698  013AFE  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43699  013B02  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43700  013B06  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 43701  013B0A  CFDE F0A8          	movff	postinc2,i2__doprnt@val+1
 43702  013B0E  CFDE F0A9          	movff	postinc2,i2__doprnt@val+2
 43703  013B12  CFDE F0AA          	movff	postinc2,i2__doprnt@val+3
 43704  013B16  D01A               	goto	i2l2032
 43705  013B18                     i2l2031:
 43706                           
 43707                           ; BSR set to: 0
 43708                           ;doprnt.c: 1283: else
 43709                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 43710                           
 43711                           ; BSR set to: 0
 43712  013B18  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 43713  013B1C  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 43714  013B20  CFDF F08E          	movff	indf2,??i2__doprnt
 43715  013B24  0E02               	movlw	2
 43716  013B26  26DE               	addwf	postinc2,f,c
 43717  013B28  CFDF F08F          	movff	indf2,??i2__doprnt+1
 43718  013B2C  0E00               	movlw	0
 43719  013B2E  22DD               	addwfc	postdec2,f,c
 43720  013B30  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43721  013B34  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43722  013B38  CFDE F090          	movff	postinc2,??i2__doprnt+2
 43723  013B3C  CFDD F091          	movff	postdec2,??i2__doprnt+3
 43724  013B40  C090  F0A7         	movff	??i2__doprnt+2,i2__doprnt@val
 43725  013B44  C091  F0A8         	movff	??i2__doprnt+3,i2__doprnt@val+1
 43726  013B48  6BA9               	clrf	(i2__doprnt@val+2)& (0+255),b
 43727  013B4A  6BAA               	clrf	(i2__doprnt@val+3)& (0+255),b
 43728  013B4C                     i2l2032:
 43729                           
 43730                           ; BSR set to: 0
 43731                           ;doprnt.c: 1287: }
 43732                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 43733                           
 43734                           ; BSR set to: 0
 43735                           
 43736                           ; BSR set to: 0
 43737  013B4C  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43738  013B4E  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 43739  013B50  A4D8               	btfss	status,2,c
 43740  013B52  D04B               	goto	i2l2034
 43741                           
 43742                           ; BSR set to: 0
 43743  013B54  51A7               	movf	i2__doprnt@val& (0+255),w,b
 43744  013B56  11A8               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 43745  013B58  11A9               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 43746  013B5A  11AA               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 43747  013B5C  A4D8               	btfss	status,2,c
 43748  013B5E  D045               	goto	i2l2034
 43749                           
 43750                           ; BSR set to: 0
 43751                           ;doprnt.c: 1291: prec++;
 43752  013B60  4BAF               	infsnz	i2__doprnt@prec& (0+255),f,b
 43753  013B62  2BB0               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 43754                           
 43755                           ; BSR set to: 0
 43756                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 43757  013B64  D042               	goto	i2l2034
 43758  013B66                     
 43759                           ; BSR set to: 0
 43760                           ;doprnt.c: 1302: case 0xC0:
 43761                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 43762                           
 43763                           ; BSR set to: 0
 43764                           
 43765                           ; BSR set to: 0
 43766  013B66  0E01               	movlw	1
 43767  013B68  6FB1               	movwf	i2__doprnt@c& (0+255),b
 43768  013B6A                     i2l22491:
 43769                           
 43770                           ; BSR set to: 0
 43771  013B6A  0E0A               	movlw	10
 43772  013B6C  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 43773  013B6E  B4D8               	btfsc	status,2,c
 43774  013B70  D047               	goto	i2l2040
 43775                           
 43776                           ; BSR set to: 0
 43777                           ;doprnt.c: 1306: if(val < dpowers[c])
 43778                           
 43779                           ; BSR set to: 0
 43780                           
 43781                           ; BSR set to: 0
 43782  013B72  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43783  013B74  0D04               	mullw	4
 43784  013B76  0EB5               	movlw	low _dpowers
 43785  013B78  24F3               	addwf	prodl,w,c
 43786  013B7A  6EF6               	movwf	tblptrl,c
 43787  013B7C  0ECF               	movlw	high _dpowers
 43788  013B7E  20F4               	addwfc	prodh,w,c
 43789  013B80  6EF7               	movwf	tblptrh,c
 43790  013B82                     	if	1	;There are 3 active tblptr bytes
 43791  013B82  6AF8               	clrf	tblptru,c
 43792  013B84  0E00               	movlw	low (__mediumconst shr (0+16))
 43793  013B86  22F8               	addwfc	tblptru,f,c
 43794  013B88                     	endif
 43795  013B88  0009               	tblrd		*+
 43796  013B8A  50F5               	movf	tablat,w,c
 43797  013B8C  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 43798  013B8E  0009               	tblrd		*+
 43799  013B90  50F5               	movf	tablat,w,c
 43800  013B92  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 43801  013B94  0009               	tblrd		*+
 43802  013B96  50F5               	movf	tablat,w,c
 43803  013B98  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 43804  013B9A  0009               	tblrd		*+
 43805  013B9C  50F5               	movf	tablat,w,c
 43806  013B9E  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 43807  013BA0  A0D8               	btfss	status,0,c
 43808  013BA2  D02E               	goto	i2l2040
 43809                           
 43810                           ; BSR set to: 0
 43811                           
 43812                           ; BSR set to: 0
 43813                           
 43814                           ; BSR set to: 0
 43815                           ;doprnt.c: 1307: break;
 43816  013BA4  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 43817  013BA6  D7E1               	goto	i2l22491
 43818  013BA8                     
 43819                           ; BSR set to: 0
 43820                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 43821                           
 43822                           ; BSR set to: 0
 43823  013BA8  0E01               	movlw	1
 43824  013BAA  6FB1               	movwf	i2__doprnt@c& (0+255),b
 43825  013BAC                     i2l22505:
 43826                           
 43827                           ; BSR set to: 0
 43828  013BAC  0E08               	movlw	8
 43829  013BAE  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 43830  013BB0  B4D8               	btfsc	status,2,c
 43831  013BB2  D026               	goto	i2l2040
 43832                           
 43833                           ; BSR set to: 0
 43834                           ;doprnt.c: 1317: if(val < hexpowers[c])
 43835                           
 43836                           ; BSR set to: 0
 43837                           
 43838                           ; BSR set to: 0
 43839  013BB4  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43840  013BB6  0D04               	mullw	4
 43841  013BB8  0EDD               	movlw	low _hexpowers
 43842  013BBA  24F3               	addwf	prodl,w,c
 43843  013BBC  6EF6               	movwf	tblptrl,c
 43844  013BBE  0ECF               	movlw	high _hexpowers
 43845  013BC0  20F4               	addwfc	prodh,w,c
 43846  013BC2  6EF7               	movwf	tblptrh,c
 43847  013BC4                     	if	1	;There are 3 active tblptr bytes
 43848  013BC4  6AF8               	clrf	tblptru,c
 43849  013BC6  0E00               	movlw	low (__mediumconst shr (0+16))
 43850  013BC8  22F8               	addwfc	tblptru,f,c
 43851  013BCA                     	endif
 43852  013BCA  0009               	tblrd		*+
 43853  013BCC  50F5               	movf	tablat,w,c
 43854  013BCE  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 43855  013BD0  0009               	tblrd		*+
 43856  013BD2  50F5               	movf	tablat,w,c
 43857  013BD4  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 43858  013BD6  0009               	tblrd		*+
 43859  013BD8  50F5               	movf	tablat,w,c
 43860  013BDA  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 43861  013BDC  0009               	tblrd		*+
 43862  013BDE  50F5               	movf	tablat,w,c
 43863  013BE0  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 43864  013BE2  A0D8               	btfss	status,0,c
 43865  013BE4  D00D               	goto	i2l2040
 43866                           
 43867                           ; BSR set to: 0
 43868                           
 43869                           ; BSR set to: 0
 43870                           
 43871                           ; BSR set to: 0
 43872                           ;doprnt.c: 1318: break;
 43873  013BE6  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 43874  013BE8  D7E1               	goto	i2l22505
 43875  013BEA                     i2l2034:
 43876                           
 43877                           ; BSR set to: 0
 43878                           
 43879                           ; BSR set to: 0
 43880  013BEA  51AD               	movf	i2__doprnt@flag& (0+255),w,b
 43881  013BEC  0BC0               	andlw	192
 43882                           
 43883                           ; Switch size 1, requested type "space"
 43884                           ; Number of cases is 3, Range of values is 0 to 192
 43885                           ; switch strategies available:
 43886                           ; Name         Instructions Cycles
 43887                           ; simple_byte           10     6 (average)
 43888                           ;	Chosen strategy is simple_byte
 43889  013BEE  0A00               	xorlw	0	; case 0
 43890  013BF0  B4D8               	btfsc	status,2,c
 43891  013BF2  D7B9               	goto	i2l2035
 43892  013BF4  0A80               	xorlw	128	; case 128
 43893  013BF6  B4D8               	btfsc	status,2,c
 43894  013BF8  D7D7               	goto	i2l2041
 43895  013BFA  0A40               	xorlw	64	; case 192
 43896  013BFC  B4D8               	btfsc	status,2,c
 43897  013BFE  D7B3               	goto	i2l2035
 43898  013C00                     i2l2040:
 43899                           
 43900                           ; BSR set to: 0
 43901                           ;doprnt.c: 1339: if(c < prec)
 43902                           
 43903                           ; BSR set to: 0
 43904  013C00  0E80               	movlw	128
 43905  013C02  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 43906  013C04  0E7F               	movlw	127
 43907  013C06  6F8E               	movwf	??i2__doprnt& (0+255),b
 43908  013C08  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43909  013C0A  5DB1               	subwf	i2__doprnt@c& (0+255),w,b
 43910  013C0C  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43911  013C0E  0A80               	xorlw	128
 43912  013C10  598E               	subwfb	??i2__doprnt& (0+255),w,b
 43913  013C12  B0D8               	btfsc	status,0,c
 43914  013C14  D003               	goto	i2l2045
 43915                           
 43916                           ; BSR set to: 0
 43917                           ;doprnt.c: 1340: c = prec;
 43918  013C16  C0AF  F0B1         	movff	i2__doprnt@prec,i2__doprnt@c
 43919  013C1A  D010               	goto	i2l2047
 43920  013C1C                     i2l2045:
 43921                           
 43922                           ; BSR set to: 0
 43923                           ;doprnt.c: 1341: else if(prec < c)
 43924                           
 43925                           ; BSR set to: 0
 43926  013C1C  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43927  013C1E  0A80               	xorlw	128
 43928  013C20  6F8E               	movwf	??i2__doprnt& (0+255),b
 43929  013C22  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43930  013C24  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 43931  013C26  0E80               	movlw	128
 43932  013C28  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 43933  013C2A  0E7F               	movlw	127
 43934  013C2C  598E               	subwfb	??i2__doprnt& (0+255),w,b
 43935  013C2E  B0D8               	btfsc	status,0,c
 43936  013C30  D005               	goto	i2l2047
 43937                           
 43938                           ; BSR set to: 0
 43939                           ;doprnt.c: 1342: prec = c;
 43940  013C32  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43941  013C34  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 43942  013C36  6BB0               	clrf	(i2__doprnt@prec+1)& (0+255),b
 43943  013C38  BFAF               	btfsc	i2__doprnt@prec& (0+255),7,b
 43944  013C3A  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 43945  013C3C                     i2l2047:
 43946                           
 43947                           ; BSR set to: 0
 43948                           ;doprnt.c: 1345: if(width && flag & 0x03)
 43949                           
 43950                           ; BSR set to: 0
 43951                           
 43952                           ; BSR set to: 0
 43953  013C3C  51AB               	movf	i2__doprnt@width& (0+255),w,b
 43954  013C3E  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43955  013C40  B4D8               	btfsc	status,2,c
 43956  013C42  D00D               	goto	i2l2048
 43957                           
 43958                           ; BSR set to: 0
 43959  013C44  0E03               	movlw	3
 43960  013C46  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43961  013C48  6F8E               	movwf	??i2__doprnt& (0+255),b
 43962  013C4A  0E00               	movlw	0
 43963  013C4C  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43964  013C4E  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43965  013C50  518E               	movf	??i2__doprnt& (0+255),w,b
 43966  013C52  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43967  013C54  B4D8               	btfsc	status,2,c
 43968  013C56  D003               	goto	i2l2048
 43969                           
 43970                           ; BSR set to: 0
 43971                           ;doprnt.c: 1346: width--;
 43972  013C58  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43973  013C5A  A0D8               	btfss	status,0,c
 43974  013C5C  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43975  013C5E                     i2l2048:
 43976                           
 43977                           ; BSR set to: 0
 43978                           ;doprnt.c: 1348: if(flag & 0x4000) {
 43979                           
 43980                           ; BSR set to: 0
 43981  013C5E  ADAE               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 43982  013C60  D013               	goto	i2l2051
 43983                           
 43984                           ; BSR set to: 0
 43985                           ;doprnt.c: 1349: if(width > prec)
 43986  013C62  51AB               	movf	i2__doprnt@width& (0+255),w,b
 43987  013C64  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 43988  013C66  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43989  013C68  0A80               	xorlw	128
 43990  013C6A  6F8E               	movwf	??i2__doprnt& (0+255),b
 43991  013C6C  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43992  013C6E  0A80               	xorlw	128
 43993  013C70  598E               	subwfb	??i2__doprnt& (0+255),w,b
 43994  013C72  B0D8               	btfsc	status,0,c
 43995  013C74  D005               	goto	i2l2050
 43996                           
 43997                           ; BSR set to: 0
 43998                           ;doprnt.c: 1350: width -= prec;
 43999  013C76  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44000  013C78  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 44001  013C7A  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44002  013C7C  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 44003  013C7E  D004               	goto	i2l2051
 44004  013C80                     i2l2050:
 44005                           
 44006                           ; BSR set to: 0
 44007                           ;doprnt.c: 1351: else
 44008                           ;doprnt.c: 1352: width = 0;
 44009                           
 44010                           ; BSR set to: 0
 44011  013C80  0E00               	movlw	0
 44012  013C82  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 44013  013C84  0E00               	movlw	0
 44014  013C86  6FAB               	movwf	i2__doprnt@width& (0+255),b
 44015  013C88                     i2l2051:
 44016                           
 44017                           ; BSR set to: 0
 44018                           ;doprnt.c: 1353: }
 44019                           ;doprnt.c: 1381: if(width > c)
 44020                           
 44021                           ; BSR set to: 0
 44022                           
 44023                           ; BSR set to: 0
 44024  013C88  0E80               	movlw	128
 44025  013C8A  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44026  013C8C  0E7F               	movlw	127
 44027  013C8E  6F8E               	movwf	??i2__doprnt& (0+255),b
 44028  013C90  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44029  013C92  5DB1               	subwf	i2__doprnt@c& (0+255),w,b
 44030  013C94  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 44031  013C96  0A80               	xorlw	128
 44032  013C98  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44033  013C9A  B0D8               	btfsc	status,0,c
 44034  013C9C  D007               	goto	i2l2052
 44035                           
 44036                           ; BSR set to: 0
 44037                           ;doprnt.c: 1382: width -= c;
 44038  013C9E  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44039  013CA0  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 44040  013CA2  0E00               	movlw	0
 44041  013CA4  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44042  013CA6  0EFF               	movlw	255
 44043  013CA8  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 44044  013CAA  D004               	goto	i2l2053
 44045  013CAC                     i2l2052:
 44046                           
 44047                           ; BSR set to: 0
 44048                           ;doprnt.c: 1383: else
 44049                           ;doprnt.c: 1384: width = 0;
 44050                           
 44051                           ; BSR set to: 0
 44052  013CAC  0E00               	movlw	0
 44053  013CAE  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 44054  013CB0  0E00               	movlw	0
 44055  013CB2  6FAB               	movwf	i2__doprnt@width& (0+255),b
 44056  013CB4                     i2l2053:
 44057                           
 44058                           ; BSR set to: 0
 44059                           ;doprnt.c: 1387: if(flag & 0x04) {
 44060                           
 44061                           ; BSR set to: 0
 44062  013CB4  A5AD               	btfss	i2__doprnt@flag& (0+255),2,b
 44063  013CB6  D07A               	goto	i2l2054
 44064                           
 44065                           ; BSR set to: 0
 44066                           ;doprnt.c: 1392: if(flag & 0x03)
 44067  013CB8  0E03               	movlw	3
 44068  013CBA  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44069  013CBC  6F8E               	movwf	??i2__doprnt& (0+255),b
 44070  013CBE  0E00               	movlw	0
 44071  013CC0  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44072  013CC2  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44073  013CC4  518E               	movf	??i2__doprnt& (0+255),w,b
 44074  013CC6  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44075  013CC8  B4D8               	btfsc	status,2,c
 44076  013CCA  D033               	goto	i2l2057
 44077                           
 44078                           ; BSR set to: 0
 44079                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 44080  013CCC  EE20 F002          	lfsr	2,2
 44081  013CD0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44082  013CD2  26D9               	addwf	fsr2l,f,c
 44083  013CD4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44084  013CD6  22DA               	addwfc	fsr2h,f,c
 44085  013CD8  50DE               	movf	postinc2,w,c
 44086  013CDA  10DE               	iorwf	postinc2,w,c
 44087  013CDC  10DE               	iorwf	postinc2,w,c
 44088  013CDE  B4D8               	btfsc	status,2,c
 44089  013CE0  D013               	goto	i2l2056
 44090                           
 44091                           ; BSR set to: 0
 44092  013CE2  EE20 F002          	lfsr	2,2
 44093  013CE6  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44094  013CE8  26D9               	addwf	fsr2l,f,c
 44095  013CEA  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44096  013CEC  22DA               	addwfc	fsr2h,f,c
 44097  013CEE  D801               	call	i2u3251_48
 44098  013CF0  D020               	goto	i2l2057
 44099  013CF2                     i2u3251_48:
 44100  013CF2  0005               	push	
 44101  013CF4  6EFA               	movwf	pclath,c
 44102  013CF6  50DE               	movf	postinc2,w,c
 44103  013CF8  6EFD               	movwf	tosl,c
 44104  013CFA  50DE               	movf	postinc2,w,c
 44105  013CFC  6EFE               	movwf	tosh,c
 44106  013CFE  50DE               	movf	postinc2,w,c
 44107  013D00  6EFF               	movwf	tosu,c
 44108  013D02  50FA               	movf	pclath,w,c
 44109  013D04  0E2D               	movlw	45
 44110  013D06  0012               	return		;indir
 44111  013D08                     i2l2056:
 44112  013D08  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44113  013D0C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44114  013D10  CFDE F08E          	movff	postinc2,??i2__doprnt
 44115  013D14  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44116  013D18  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44117  013D1C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44118  013D20  0E2D               	movlw	45
 44119  013D22  6EDF               	movwf	indf2,c
 44120  013D24  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44121  013D28  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44122  013D2C  2ADE               	incf	postinc2,f,c
 44123  013D2E  0E00               	movlw	0
 44124  013D30  22DD               	addwfc	postdec2,f,c
 44125  013D32                     i2l2057:
 44126                           
 44127                           ;doprnt.c: 1415: if(width)
 44128  013D32  0100               	movlb	0	; () banked
 44129  013D34  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44130  013D36  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44131  013D38  B4D8               	btfsc	status,2,c
 44132  013D3A  D16A               	goto	i2l2080
 44133                           
 44134                           ; BSR set to: 0
 44135                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 44136                           
 44137                           ; BSR set to: 0
 44138                           
 44139                           ;doprnt.c: 1416: do
 44140  013D3C  EE20 F002          	lfsr	2,2
 44141  013D40  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44142  013D42  26D9               	addwf	fsr2l,f,c
 44143  013D44  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44144  013D46  22DA               	addwfc	fsr2h,f,c
 44145  013D48  50DE               	movf	postinc2,w,c
 44146  013D4A  10DE               	iorwf	postinc2,w,c
 44147  013D4C  10DE               	iorwf	postinc2,w,c
 44148  013D4E  B4D8               	btfsc	status,2,c
 44149  013D50  D013               	goto	i2l2060
 44150                           
 44151                           ; BSR set to: 0
 44152  013D52  EE20 F002          	lfsr	2,2
 44153  013D56  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44154  013D58  26D9               	addwf	fsr2l,f,c
 44155  013D5A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44156  013D5C  22DA               	addwfc	fsr2h,f,c
 44157  013D5E  D801               	call	i2u3254_48
 44158  013D60  D020               	goto	i2l2061
 44159  013D62                     i2u3254_48:
 44160  013D62  0005               	push	
 44161  013D64  6EFA               	movwf	pclath,c
 44162  013D66  50DE               	movf	postinc2,w,c
 44163  013D68  6EFD               	movwf	tosl,c
 44164  013D6A  50DE               	movf	postinc2,w,c
 44165  013D6C  6EFE               	movwf	tosh,c
 44166  013D6E  50DE               	movf	postinc2,w,c
 44167  013D70  6EFF               	movwf	tosu,c
 44168  013D72  50FA               	movf	pclath,w,c
 44169  013D74  0E30               	movlw	48
 44170  013D76  0012               	return		;indir
 44171  013D78                     i2l2060:
 44172  013D78  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44173  013D7C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44174  013D80  CFDE F08E          	movff	postinc2,??i2__doprnt
 44175  013D84  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44176  013D88  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44177  013D8C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44178  013D90  0E30               	movlw	48
 44179  013D92  6EDF               	movwf	indf2,c
 44180  013D94  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44181  013D98  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44182  013D9C  2ADE               	incf	postinc2,f,c
 44183  013D9E  0E00               	movlw	0
 44184  013DA0  22DD               	addwfc	postdec2,f,c
 44185  013DA2                     i2l2061:
 44186                           
 44187                           ;doprnt.c: 1418: while(--width);
 44188  013DA2  0100               	movlb	0	; () banked
 44189  013DA4  07AB               	decf	i2__doprnt@width& (0+255),f,b
 44190  013DA6  A0D8               	btfss	status,0,c
 44191  013DA8  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 44192  013DAA  D7C4               	goto	L29
 44193  013DAC                     i2l2054:
 44194                           
 44195                           ; BSR set to: 0
 44196                           ;doprnt.c: 1422: {
 44197                           ;doprnt.c: 1424: if(width
 44198                           ;doprnt.c: 1428: )
 44199                           
 44200                           ; BSR set to: 0
 44201  013DAC  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44202  013DAE  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44203  013DB0  B4D8               	btfsc	status,2,c
 44204  013DB2  D03B               	goto	i2u3259_40
 44205  013DB4                     i2u3256_40:
 44206                           
 44207                           ; BSR set to: 0
 44208                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 44209                           
 44210                           ; BSR set to: 0
 44211                           
 44212                           ;doprnt.c: 1429: do
 44213  013DB4  EE20 F002          	lfsr	2,2
 44214  013DB8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44215  013DBA  26D9               	addwf	fsr2l,f,c
 44216  013DBC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44217  013DBE  22DA               	addwfc	fsr2h,f,c
 44218  013DC0  50DE               	movf	postinc2,w,c
 44219  013DC2  10DE               	iorwf	postinc2,w,c
 44220  013DC4  10DE               	iorwf	postinc2,w,c
 44221  013DC6  B4D8               	btfsc	status,2,c
 44222  013DC8  D013               	goto	i2l2066
 44223                           
 44224                           ; BSR set to: 0
 44225  013DCA  EE20 F002          	lfsr	2,2
 44226  013DCE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44227  013DD0  26D9               	addwf	fsr2l,f,c
 44228  013DD2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44229  013DD4  22DA               	addwfc	fsr2h,f,c
 44230  013DD6  D801               	call	i2u3258_48
 44231  013DD8  D020               	goto	i2l2067
 44232  013DDA                     i2u3258_48:
 44233  013DDA  0005               	push	
 44234  013DDC  6EFA               	movwf	pclath,c
 44235  013DDE  50DE               	movf	postinc2,w,c
 44236  013DE0  6EFD               	movwf	tosl,c
 44237  013DE2  50DE               	movf	postinc2,w,c
 44238  013DE4  6EFE               	movwf	tosh,c
 44239  013DE6  50DE               	movf	postinc2,w,c
 44240  013DE8  6EFF               	movwf	tosu,c
 44241  013DEA  50FA               	movf	pclath,w,c
 44242  013DEC  0E20               	movlw	32
 44243  013DEE  0012               	return		;indir
 44244  013DF0                     i2l2066:
 44245  013DF0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44246  013DF4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44247  013DF8  CFDE F08E          	movff	postinc2,??i2__doprnt
 44248  013DFC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44249  013E00  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44250  013E04  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44251  013E08  0E20               	movlw	32
 44252  013E0A  6EDF               	movwf	indf2,c
 44253  013E0C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44254  013E10  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44255  013E14  2ADE               	incf	postinc2,f,c
 44256  013E16  0E00               	movlw	0
 44257  013E18  22DD               	addwfc	postdec2,f,c
 44258  013E1A                     i2l2067:
 44259                           
 44260                           ;doprnt.c: 1431: while(--width);
 44261  013E1A  0100               	movlb	0	; () banked
 44262  013E1C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 44263  013E1E  A0D8               	btfss	status,0,c
 44264  013E20  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 44265  013E22  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44266  013E24  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44267  013E26  A4D8               	btfss	status,2,c
 44268  013E28  D7C5               	goto	i2u3256_40
 44269  013E2A                     i2u3259_40:
 44270                           
 44271                           ; BSR set to: 0
 44272                           ;doprnt.c: 1438: if(flag & 0x03)
 44273                           
 44274                           ; BSR set to: 0
 44275                           
 44276                           ; BSR set to: 0
 44277  013E2A  0E03               	movlw	3
 44278  013E2C  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44279  013E2E  6F8E               	movwf	??i2__doprnt& (0+255),b
 44280  013E30  0E00               	movlw	0
 44281  013E32  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44282  013E34  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44283  013E36  518E               	movf	??i2__doprnt& (0+255),w,b
 44284  013E38  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44285  013E3A  B4D8               	btfsc	status,2,c
 44286  013E3C  D0E9               	goto	i2l2080
 44287                           
 44288                           ; BSR set to: 0
 44289                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 44290  013E3E  EE20 F002          	lfsr	2,2
 44291  013E42  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44292  013E44  26D9               	addwf	fsr2l,f,c
 44293  013E46  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44294  013E48  22DA               	addwfc	fsr2h,f,c
 44295  013E4A  50DE               	movf	postinc2,w,c
 44296  013E4C  10DE               	iorwf	postinc2,w,c
 44297  013E4E  10DE               	iorwf	postinc2,w,c
 44298  013E50  B4D8               	btfsc	status,2,c
 44299  013E52  D013               	goto	i2l2070
 44300                           
 44301                           ; BSR set to: 0
 44302  013E54  EE20 F002          	lfsr	2,2
 44303  013E58  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44304  013E5A  26D9               	addwf	fsr2l,f,c
 44305  013E5C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44306  013E5E  22DA               	addwfc	fsr2h,f,c
 44307  013E60  D801               	call	i2u3262_48
 44308  013E62  D0D6               	goto	i2l2080
 44309  013E64                     i2u3262_48:
 44310  013E64  0005               	push	
 44311  013E66  6EFA               	movwf	pclath,c
 44312  013E68  50DE               	movf	postinc2,w,c
 44313  013E6A  6EFD               	movwf	tosl,c
 44314  013E6C  50DE               	movf	postinc2,w,c
 44315  013E6E  6EFE               	movwf	tosh,c
 44316  013E70  50DE               	movf	postinc2,w,c
 44317  013E72  6EFF               	movwf	tosu,c
 44318  013E74  50FA               	movf	pclath,w,c
 44319  013E76  0E2D               	movlw	45
 44320  013E78  0012               	return		;indir
 44321  013E7A                     i2l2070:
 44322  013E7A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44323  013E7E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44324  013E82  CFDE F08E          	movff	postinc2,??i2__doprnt
 44325  013E86  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44326  013E8A  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44327  013E8E  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44328  013E92  0E2D               	movlw	45
 44329  013E94  6EDF               	movwf	indf2,c
 44330  013E96  D0B5               	goto	i2l22611
 44331  013E98                     
 44332                           ;doprnt.c: 1486: case 0xC0:
 44333                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 44334  013E98  C0AF  F08E         	movff	i2__doprnt@prec,??i2__doprnt
 44335  013E9C  C0B0  F08F         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 44336  013EA0  0100               	movlb	0	; () banked
 44337  013EA2  90D8               	bcf	status,0,c
 44338  013EA4  378E               	rlcf	??i2__doprnt& (0+255),f,b
 44339  013EA6  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 44340  013EA8  90D8               	bcf	status,0,c
 44341  013EAA  378E               	rlcf	??i2__doprnt& (0+255),f,b
 44342  013EAC  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 44343  013EAE  0EB5               	movlw	low _dpowers
 44344  013EB0  258E               	addwf	??i2__doprnt& (0+255),w,b
 44345  013EB2  6EF6               	movwf	tblptrl,c
 44346  013EB4  0ECF               	movlw	high _dpowers
 44347  013EB6  218F               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 44348  013EB8  6EF7               	movwf	tblptrh,c
 44349  013EBA                     	if	1	;There are 3 active tblptr bytes
 44350  013EBA  6AF8               	clrf	tblptru,c
 44351  013EBC  0E00               	movlw	low (__mediumconst shr (0+16))
 44352  013EBE  22F8               	addwfc	tblptru,f,c
 44353  013EC0                     	endif
 44354  013EC0  0009               	tblrd		*+
 44355  013EC2  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 44356  013EC6  0009               	tblrd		*+
 44357  013EC8  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 44358  013ECC  0009               	tblrd		*+
 44359  013ECE  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 44360  013ED2  000A               	tblrd		*-
 44361  013ED4  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 44362  013ED8  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 44363  013EDC  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 44364  013EE0  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 44365  013EE4  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 44366  013EE8  EC53  F0CE         	call	i2___lldiv
 44367  013EEC  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 44368  013EF0  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 44369  013EF4  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 44370  013EF8  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 44371  013EFC  0E0A               	movlw	10
 44372  013EFE  6E12               	movwf	i2___llmod@divisor,c
 44373  013F00  0E00               	movlw	0
 44374  013F02  6E13               	movwf	i2___llmod@divisor+1,c
 44375  013F04  0E00               	movlw	0
 44376  013F06  6E14               	movwf	i2___llmod@divisor+2,c
 44377  013F08  0E00               	movlw	0
 44378  013F0A  6E15               	movwf	i2___llmod@divisor+3,c
 44379  013F0C  EC87  F0D0         	call	i2___llmod	;wreg free
 44380  013F10  500E               	movf	?i2___llmod,w,c
 44381  013F12  0F30               	addlw	48
 44382  013F14  0100               	movlb	0	; () banked
 44383  013F16  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44384                           
 44385                           ;doprnt.c: 1491: break;
 44386  013F18  D048               	goto	i2l2077
 44387  013F1A                     
 44388                           ; BSR set to: 0
 44389                           ;doprnt.c: 1499: {
 44390                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 44391                           
 44392                           ; BSR set to: 0
 44393  013F1A  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 44394  013F1E  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 44395  013F22  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 44396  013F26  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 44397  013F2A  C0AF  F08E         	movff	i2__doprnt@prec,??i2__doprnt
 44398  013F2E  C0B0  F08F         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 44399  013F32  90D8               	bcf	status,0,c
 44400  013F34  378E               	rlcf	??i2__doprnt& (0+255),f,b
 44401  013F36  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 44402  013F38  90D8               	bcf	status,0,c
 44403  013F3A  378E               	rlcf	??i2__doprnt& (0+255),f,b
 44404  013F3C  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 44405  013F3E  0EDD               	movlw	low _hexpowers
 44406  013F40  258E               	addwf	??i2__doprnt& (0+255),w,b
 44407  013F42  6EF6               	movwf	tblptrl,c
 44408  013F44  0ECF               	movlw	high _hexpowers
 44409  013F46  218F               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 44410  013F48  6EF7               	movwf	tblptrh,c
 44411  013F4A                     	if	1	;There are 3 active tblptr bytes
 44412  013F4A  6AF8               	clrf	tblptru,c
 44413  013F4C  0E00               	movlw	low (__mediumconst shr (0+16))
 44414  013F4E  22F8               	addwfc	tblptru,f,c
 44415  013F50                     	endif
 44416  013F50  0009               	tblrd		*+
 44417  013F52  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 44418  013F56  0009               	tblrd		*+
 44419  013F58  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 44420  013F5C  0009               	tblrd		*+
 44421  013F5E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 44422  013F62  000A               	tblrd		*-
 44423  013F64  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 44424  013F68  EC53  F0CE         	call	i2___lldiv	;wreg free
 44425  013F6C  5001               	movf	?i2___lldiv,w,c
 44426  013F6E  0B0F               	andlw	15
 44427  013F70  0100               	movlb	0	; () banked
 44428  013F72  6F98               	movwf	i2__doprnt@idx& (0+255),b
 44429                           
 44430                           ; BSR set to: 0
 44431                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 44432  013F74  5198               	movf	i2__doprnt@idx& (0+255),w,b
 44433  013F76  0D01               	mullw	1
 44434  013F78  0EEA               	movlw	low STR_189
 44435  013F7A  24F3               	addwf	prodl,w,c
 44436  013F7C  6EF6               	movwf	tblptrl,c
 44437  013F7E  0EFC               	movlw	high STR_189
 44438  013F80  20F4               	addwfc	prodh,w,c
 44439  013F82  6EF7               	movwf	tblptrh,c
 44440  013F84                     	if	1	;There are 3 active tblptr bytes
 44441  013F84  6AF8               	clrf	tblptru,c
 44442  013F86  0E00               	movlw	low (__mediumconst shr (0+16))
 44443  013F88  22F8               	addwfc	tblptru,f,c
 44444  013F8A                     	endif
 44445  013F8A  0008               	tblrd		*
 44446  013F8C  CFF5 F0B1          	movff	tablat,i2__doprnt@c
 44447                           
 44448                           ; BSR set to: 0
 44449                           ;doprnt.c: 1523: }
 44450                           
 44451                           ;doprnt.c: 1508: }
 44452                           ;doprnt.c: 1510: break;
 44453  013F90  D00C               	goto	i2l2077
 44454  013F92                     i2l22603:
 44455  013F92  0100               	movlb	0	; () banked
 44456  013F94  51AD               	movf	i2__doprnt@flag& (0+255),w,b
 44457  013F96  0BC0               	andlw	192
 44458                           
 44459                           ; Switch size 1, requested type "space"
 44460                           ; Number of cases is 3, Range of values is 0 to 192
 44461                           ; switch strategies available:
 44462                           ; Name         Instructions Cycles
 44463                           ; simple_byte           10     6 (average)
 44464                           ;	Chosen strategy is simple_byte
 44465  013F98  0A00               	xorlw	0	; case 0
 44466  013F9A  B4D8               	btfsc	status,2,c
 44467  013F9C  D77D               	goto	i2l2075
 44468  013F9E  0A80               	xorlw	128	; case 128
 44469  013FA0  B4D8               	btfsc	status,2,c
 44470  013FA2  D7BB               	goto	i2l2078
 44471  013FA4  0A40               	xorlw	64	; case 192
 44472  013FA6  B4D8               	btfsc	status,2,c
 44473  013FA8  D777               	goto	i2l2075
 44474  013FAA                     i2l2077:
 44475                           
 44476                           ; BSR set to: 0
 44477                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 44478                           
 44479                           ; BSR set to: 0
 44480  013FAA  EE20 F002          	lfsr	2,2
 44481  013FAE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44482  013FB0  26D9               	addwf	fsr2l,f,c
 44483  013FB2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44484  013FB4  22DA               	addwfc	fsr2h,f,c
 44485  013FB6  50DE               	movf	postinc2,w,c
 44486  013FB8  10DE               	iorwf	postinc2,w,c
 44487  013FBA  10DE               	iorwf	postinc2,w,c
 44488  013FBC  B4D8               	btfsc	status,2,c
 44489  013FBE  D013               	goto	i2l2079
 44490                           
 44491                           ; BSR set to: 0
 44492  013FC0  EE20 F002          	lfsr	2,2
 44493  013FC4  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44494  013FC6  26D9               	addwf	fsr2l,f,c
 44495  013FC8  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44496  013FCA  22DA               	addwfc	fsr2h,f,c
 44497  013FCC  D801               	call	i2u3264_48
 44498  013FCE  D020               	goto	i2l2080
 44499  013FD0                     i2u3264_48:
 44500  013FD0  0005               	push	
 44501  013FD2  6EFA               	movwf	pclath,c
 44502  013FD4  50DE               	movf	postinc2,w,c
 44503  013FD6  6EFD               	movwf	tosl,c
 44504  013FD8  50DE               	movf	postinc2,w,c
 44505  013FDA  6EFE               	movwf	tosh,c
 44506  013FDC  50DE               	movf	postinc2,w,c
 44507  013FDE  6EFF               	movwf	tosu,c
 44508  013FE0  50FA               	movf	pclath,w,c
 44509  013FE2  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44510  013FE4  0012               	return		;indir
 44511  013FE6                     i2l2079:
 44512  013FE6  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44513  013FEA  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44514  013FEE  CFDE F08E          	movff	postinc2,??i2__doprnt
 44515  013FF2  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44516  013FF6  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44517  013FFA  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44518  013FFE  C0B1  FFDF         	movff	i2__doprnt@c,indf2
 44519  014002                     i2l22611:
 44520  014002  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44521  014006  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44522  01400A  2ADE               	incf	postinc2,f,c
 44523  01400C  0E00               	movlw	0
 44524  01400E  22DD               	addwfc	postdec2,f,c
 44525  014010                     i2l2080:
 44526  014010  0100               	movlb	0	; () banked
 44527  014012  07AF               	decf	i2__doprnt@prec& (0+255),f,b
 44528  014014  A0D8               	btfss	status,0,c
 44529  014016  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 44530  014018  29AF               	incf	i2__doprnt@prec& (0+255),w,b
 44531  01401A  E1BB               	bnz	i2l22603
 44532  01401C  29B0               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 44533  01401E  A4D8               	btfss	status,2,c
 44534  014020  D7B8               	goto	i2l2074
 44535  014022                     i2u3265_40:
 44536                           
 44537                           ; BSR set to: 0
 44538                           
 44539                           ; BSR set to: 0
 44540  014022  0100               	movlb	0	; () banked
 44541  014024  518A               	movf	i2__doprnt@f& (0+255),w,b
 44542  014026  6F8E               	movwf	??i2__doprnt& (0+255),b
 44543  014028  518B               	movf	(i2__doprnt@f+1)& (0+255),w,b
 44544  01402A  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44545  01402C  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 44546  01402E  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 44547  014030  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 44548  014034  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 44549  014038  0E00               	movlw	low (__mediumconst shr (0+16))
 44550  01403A  6EF8               	movwf	tblptru,c
 44551  01403C  0E0D               	movlw	(high __ramtop+-1)
 44552  01403E  64F7               	cpfsgt	tblptrh,c
 44553  014040  D003               	bra	i2u3266_47
 44554  014042  0008               	tblrd		*
 44555  014044  50F5               	movf	tablat,w,c
 44556  014046  D005               	bra	i2u3266_40
 44557  014048                     i2u3266_47:
 44558  014048  CFF6 FFE9          	movff	tblptrl,fsr0l
 44559  01404C  CFF7 FFEA          	movff	tblptrh,fsr0h
 44560  014050  50EF               	movf	indf0,w,c
 44561  014052                     i2u3266_40:
 44562  014052  0100               	movlb	0	; () banked
 44563  014054  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44564  014056  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44565  014058  A4D8               	btfss	status,2,c
 44566  01405A  EFB4  F095         	goto	i2l1908
 44567  01405E                     i2u3267_40:
 44568                           
 44569                           ; BSR set to: 0
 44570                           ;doprnt.c: 1540: return 0;
 44571                           
 44572                           ; BSR set to: 0
 44573                           
 44574                           ;doprnt.c: 1525: }
 44575                           ;doprnt.c: 1533: }
 44576                           ;doprnt.c: 1535: alldone:
 44577                           
 44578                           ; BSR set to: 0
 44579  01405E  0E00               	movlw	0
 44580  014060  6F89               	movwf	(?i2__doprnt+1)& (0+255),b
 44581  014062  0E00               	movlw	0
 44582  014064  6F88               	movwf	?i2__doprnt& (0+255),b
 44583  014066  0012               	return	
 44584  014068                     __end_ofi2__doprnt:
 44585                           	opt stack 0
 44586                           tosu	equ	0xFFF
 44587                           tosh	equ	0xFFE
 44588                           tosl	equ	0xFFD
 44589                           pclatu	equ	0xFFB
 44590                           pclath	equ	0xFFA
 44591                           tblptru	equ	0xFF8
 44592                           tblptrh	equ	0xFF7
 44593                           tblptrl	equ	0xFF6
 44594                           tablat	equ	0xFF5
 44595                           prodh	equ	0xFF4
 44596                           prodl	equ	0xFF3
 44597                           intcon	equ	0xFF2
 44598                           indf0	equ	0xFEF
 44599                           postinc0	equ	0xFEE
 44600                           fsr0h	equ	0xFEA
 44601                           fsr0l	equ	0xFE9
 44602                           wreg	equ	0xFE8
 44603                           indf1	equ	0xFE7
 44604                           postdec1	equ	0xFE5
 44605                           plusw1	equ	0xFE3
 44606                           fsr1h	equ	0xFE2
 44607                           fsr1l	equ	0xFE1
 44608                           bsr	equ	0xFE0
 44609                           indf2	equ	0xFDF
 44610                           postinc2	equ	0xFDE
 44611                           postdec2	equ	0xFDD
 44612                           plusw2	equ	0xFDB
 44613                           fsr2h	equ	0xFDA
 44614                           fsr2l	equ	0xFD9
 44615                           status	equ	0xFD8
 44616                           
 44617 ;; *************** function i2_scale *****************
 44618 ;; Defined at:
 44619 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 44620 ;; Parameters:    Size  Location     Type
 44621 ;;  scl             1    wreg     char 
 44622 ;; Auto vars:     Size  Location     Type
 44623 ;;  scl             1   80[COMRAM] char 
 44624 ;; Return value:  Size  Location     Type
 44625 ;;                  4   72[COMRAM] char 
 44626 ;; Registers used:
 44627 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44628 ;; Tracked objects:
 44629 ;;		On entry : 0/0
 44630 ;;		On exit  : 0/0
 44631 ;;		Unchanged: 0/0
 44632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44634 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44636 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44637 ;;Total ram usage:        9 bytes
 44638 ;; Hardware stack levels used:    1
 44639 ;; Hardware stack levels required when called:    1
 44640 ;; This function calls:
 44641 ;;		i2___awdiv
 44642 ;;		i2___awmod
 44643 ;;		i2___flmul
 44644 ;; This function is called by:
 44645 ;;		i2__doprnt
 44646 ;; This function uses a non-reentrant model
 44647 ;;
 44648                           
 44649                           	psect	text130
 44650  014FE6                     __ptext130:
 44651                           	opt stack 0
 44652  014FE6                     i2_scale:
 44653                           	opt stack 13
 44654                           
 44655                           ; BSR set to: 0
 44656                           ;incstack = 0
 44657                           ;i2scale@scl stored from wreg
 44658  014FE6  6E51               	movwf	i2scale@scl,c
 44659                           
 44660                           ;doprnt.c: 428: if(scl < 0) {
 44661  014FE8  AE51               	btfss	i2scale@scl,7,c
 44662  014FEA  D11F               	goto	i2l1897
 44663                           
 44664                           ;doprnt.c: 429: scl = -scl;
 44665  014FEC  6C51               	negf	i2scale@scl,c
 44666                           
 44667                           ;doprnt.c: 430: if(scl>=110)
 44668  014FEE  5051               	movf	i2scale@scl,w,c
 44669  014FF0  0A80               	xorlw	128
 44670  014FF2  0F12               	addlw	-238
 44671  014FF4  A0D8               	btfss	status,0,c
 44672  014FF6  D0A1               	goto	i2l1898
 44673                           
 44674                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 44675  014FF8  0E00               	movlw	0
 44676  014FFA  6E0A               	movwf	i2___awdiv@divisor+1,c
 44677  014FFC  0E0A               	movlw	10
 44678  014FFE  6E09               	movwf	i2___awdiv@divisor,c
 44679  015000  0E00               	movlw	0
 44680  015002  6E04               	movwf	i2___awmod@divisor+1,c
 44681  015004  0E64               	movlw	100
 44682  015006  6E03               	movwf	i2___awmod@divisor,c
 44683  015008  5051               	movf	i2scale@scl,w,c
 44684  01500A  6E01               	movwf	i2___awmod@dividend,c
 44685  01500C  6A02               	clrf	i2___awmod@dividend+1,c
 44686  01500E  BE01               	btfsc	i2___awmod@dividend,7,c
 44687  015010  0602               	decf	i2___awmod@dividend+1,f,c
 44688  015012  EC48  F0CF         	call	i2___awmod
 44689  015016  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 44690  01501A  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 44691  01501E  ECD0  F0CD         	call	i2___awdiv	;wreg free
 44692  015022  90D8               	bcf	status,0,c
 44693  015024  3607               	rlcf	?i2___awdiv,f,c
 44694  015026  3608               	rlcf	?i2___awdiv+1,f,c
 44695  015028  90D8               	bcf	status,0,c
 44696  01502A  3607               	rlcf	?i2___awdiv,f,c
 44697  01502C  3608               	rlcf	?i2___awdiv+1,f,c
 44698  01502E  0E24               	movlw	36
 44699  015030  2607               	addwf	?i2___awdiv,f,c
 44700  015032  0E00               	movlw	0
 44701  015034  2208               	addwfc	?i2___awdiv+1,f,c
 44702  015036  0E81               	movlw	low __npowers_
 44703  015038  2407               	addwf	?i2___awdiv,w,c
 44704  01503A  6EF6               	movwf	tblptrl,c
 44705  01503C  0ECF               	movlw	high __npowers_
 44706  01503E  2008               	addwfc	?i2___awdiv+1,w,c
 44707  015040  6EF7               	movwf	tblptrh,c
 44708  015042                     	if	1	;There are 3 active tblptr bytes
 44709  015042  6AF8               	clrf	tblptru,c
 44710  015044  0E00               	movlw	low (__mediumconst shr (0+16))
 44711  015046  22F8               	addwfc	tblptru,f,c
 44712  015048                     	endif
 44713  015048  0009               	tblrd		*+
 44714  01504A  CFF5 F034          	movff	tablat,i2___flmul@a
 44715  01504E  0009               	tblrd		*+
 44716  015050  CFF5 F035          	movff	tablat,i2___flmul@a+1
 44717  015054  0009               	tblrd		*+
 44718  015056  CFF5 F036          	movff	tablat,i2___flmul@a+2
 44719  01505A  000A               	tblrd		*-
 44720  01505C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 44721  015060  0E00               	movlw	0
 44722  015062  6E0A               	movwf	i2___awdiv@divisor+1,c
 44723  015064  0E64               	movlw	100
 44724  015066  6E09               	movwf	i2___awdiv@divisor,c
 44725  015068  5051               	movf	i2scale@scl,w,c
 44726  01506A  6E07               	movwf	i2___awdiv@dividend,c
 44727  01506C  6A08               	clrf	i2___awdiv@dividend+1,c
 44728  01506E  BE07               	btfsc	i2___awdiv@dividend,7,c
 44729  015070  0608               	decf	i2___awdiv@dividend+1,f,c
 44730  015072  ECD0  F0CD         	call	i2___awdiv	;wreg free
 44731  015076  90D8               	bcf	status,0,c
 44732  015078  3607               	rlcf	?i2___awdiv,f,c
 44733  01507A  3608               	rlcf	?i2___awdiv+1,f,c
 44734  01507C  90D8               	bcf	status,0,c
 44735  01507E  3607               	rlcf	?i2___awdiv,f,c
 44736  015080  3608               	rlcf	?i2___awdiv+1,f,c
 44737  015082  0E48               	movlw	72
 44738  015084  2607               	addwf	?i2___awdiv,f,c
 44739  015086  0E00               	movlw	0
 44740  015088  2208               	addwfc	?i2___awdiv+1,f,c
 44741  01508A  0E81               	movlw	low __npowers_
 44742  01508C  2407               	addwf	?i2___awdiv,w,c
 44743  01508E  6EF6               	movwf	tblptrl,c
 44744  015090  0ECF               	movlw	high __npowers_
 44745  015092  2008               	addwfc	?i2___awdiv+1,w,c
 44746  015094  6EF7               	movwf	tblptrh,c
 44747  015096                     	if	1	;There are 3 active tblptr bytes
 44748  015096  6AF8               	clrf	tblptru,c
 44749  015098  0E00               	movlw	low (__mediumconst shr (0+16))
 44750  01509A  22F8               	addwfc	tblptru,f,c
 44751  01509C                     	endif
 44752  01509C  0009               	tblrd		*+
 44753  01509E  CFF5 F030          	movff	tablat,i2___flmul@b
 44754  0150A2  0009               	tblrd		*+
 44755  0150A4  CFF5 F031          	movff	tablat,i2___flmul@b+1
 44756  0150A8  0009               	tblrd		*+
 44757  0150AA  CFF5 F032          	movff	tablat,i2___flmul@b+2
 44758  0150AE  000A               	tblrd		*-
 44759  0150B0  CFF5 F033          	movff	tablat,i2___flmul@b+3
 44760  0150B4  EC90  F0AD         	call	i2___flmul	;wreg free
 44761  0150B8  C030  F04D         	movff	?i2___flmul,i2_scale$5356
 44762  0150BC  C031  F04E         	movff	?i2___flmul+1,i2_scale$5356+1
 44763  0150C0  C032  F04F         	movff	?i2___flmul+2,i2_scale$5356+2
 44764  0150C4  C033  F050         	movff	?i2___flmul+3,i2_scale$5356+3
 44765                           
 44766                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 44767  0150C8  C04D  F030         	movff	i2_scale$5356,i2___flmul@b
 44768  0150CC  C04E  F031         	movff	i2_scale$5356+1,i2___flmul@b+1
 44769  0150D0  C04F  F032         	movff	i2_scale$5356+2,i2___flmul@b+2
 44770  0150D4  C050  F033         	movff	i2_scale$5356+3,i2___flmul@b+3
 44771  0150D8  0E00               	movlw	0
 44772  0150DA  6E04               	movwf	i2___awmod@divisor+1,c
 44773  0150DC  0E0A               	movlw	10
 44774  0150DE  6E03               	movwf	i2___awmod@divisor,c
 44775  0150E0  5051               	movf	i2scale@scl,w,c
 44776  0150E2  6E01               	movwf	i2___awmod@dividend,c
 44777  0150E4  6A02               	clrf	i2___awmod@dividend+1,c
 44778  0150E6  BE01               	btfsc	i2___awmod@dividend,7,c
 44779  0150E8  0602               	decf	i2___awmod@dividend+1,f,c
 44780  0150EA  EC48  F0CF         	call	i2___awmod	;wreg free
 44781  0150EE  90D8               	bcf	status,0,c
 44782  0150F0  3601               	rlcf	?i2___awmod,f,c
 44783  0150F2  3602               	rlcf	?i2___awmod+1,f,c
 44784  0150F4  90D8               	bcf	status,0,c
 44785  0150F6  3601               	rlcf	?i2___awmod,f,c
 44786  0150F8  3602               	rlcf	?i2___awmod+1,f,c
 44787  0150FA  0E81               	movlw	low __npowers_
 44788  0150FC  2401               	addwf	?i2___awmod,w,c
 44789  0150FE  6EF6               	movwf	tblptrl,c
 44790  015100  0ECF               	movlw	high __npowers_
 44791  015102  2002               	addwfc	?i2___awmod+1,w,c
 44792  015104  6EF7               	movwf	tblptrh,c
 44793  015106                     	if	1	;There are 3 active tblptr bytes
 44794  015106  6AF8               	clrf	tblptru,c
 44795  015108  0E00               	movlw	low (__mediumconst shr (0+16))
 44796  01510A  22F8               	addwfc	tblptru,f,c
 44797  01510C                     	endif
 44798  01510C  0009               	tblrd		*+
 44799  01510E  CFF5 F034          	movff	tablat,i2___flmul@a
 44800  015112  0009               	tblrd		*+
 44801  015114  CFF5 F035          	movff	tablat,i2___flmul@a+1
 44802  015118  0009               	tblrd		*+
 44803  01511A  CFF5 F036          	movff	tablat,i2___flmul@a+2
 44804  01511E  000A               	tblrd		*-
 44805  015120  CFF5 F037          	movff	tablat,i2___flmul@a+3
 44806  015124  EC90  F0AD         	call	i2___flmul	;wreg free
 44807  015128  C030  F049         	movff	?i2___flmul,?i2_scale
 44808  01512C  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 44809  015130  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 44810  015134  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 44811  015138  0012               	return	
 44812  01513A                     i2l1898:
 44813                           
 44814                           ;doprnt.c: 432: else if(scl > 10)
 44815  01513A  5051               	movf	i2scale@scl,w,c
 44816  01513C  0A80               	xorlw	128
 44817  01513E  0F75               	addlw	-139
 44818  015140  A0D8               	btfss	status,0,c
 44819  015142  D05B               	goto	i2l1901
 44820                           
 44821                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 44822  015144  0E00               	movlw	0
 44823  015146  6E0A               	movwf	i2___awdiv@divisor+1,c
 44824  015148  0E0A               	movlw	10
 44825  01514A  6E09               	movwf	i2___awdiv@divisor,c
 44826  01514C  5051               	movf	i2scale@scl,w,c
 44827  01514E  6E07               	movwf	i2___awdiv@dividend,c
 44828  015150  6A08               	clrf	i2___awdiv@dividend+1,c
 44829  015152  BE07               	btfsc	i2___awdiv@dividend,7,c
 44830  015154  0608               	decf	i2___awdiv@dividend+1,f,c
 44831  015156  ECD0  F0CD         	call	i2___awdiv	;wreg free
 44832  01515A  90D8               	bcf	status,0,c
 44833  01515C  3607               	rlcf	?i2___awdiv,f,c
 44834  01515E  3608               	rlcf	?i2___awdiv+1,f,c
 44835  015160  90D8               	bcf	status,0,c
 44836  015162  3607               	rlcf	?i2___awdiv,f,c
 44837  015164  3608               	rlcf	?i2___awdiv+1,f,c
 44838  015166  0E24               	movlw	36
 44839  015168  2607               	addwf	?i2___awdiv,f,c
 44840  01516A  0E00               	movlw	0
 44841  01516C  2208               	addwfc	?i2___awdiv+1,f,c
 44842  01516E  0E81               	movlw	low __npowers_
 44843  015170  2407               	addwf	?i2___awdiv,w,c
 44844  015172  6EF6               	movwf	tblptrl,c
 44845  015174  0ECF               	movlw	high __npowers_
 44846  015176  2008               	addwfc	?i2___awdiv+1,w,c
 44847  015178  6EF7               	movwf	tblptrh,c
 44848  01517A                     	if	1	;There are 3 active tblptr bytes
 44849  01517A  6AF8               	clrf	tblptru,c
 44850  01517C  0E00               	movlw	low (__mediumconst shr (0+16))
 44851  01517E  22F8               	addwfc	tblptru,f,c
 44852  015180                     	endif
 44853  015180  0009               	tblrd		*+
 44854  015182  CFF5 F030          	movff	tablat,i2___flmul@b
 44855  015186  0009               	tblrd		*+
 44856  015188  CFF5 F031          	movff	tablat,i2___flmul@b+1
 44857  01518C  0009               	tblrd		*+
 44858  01518E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 44859  015192  000A               	tblrd		*-
 44860  015194  CFF5 F033          	movff	tablat,i2___flmul@b+3
 44861  015198  0E00               	movlw	0
 44862  01519A  6E04               	movwf	i2___awmod@divisor+1,c
 44863  01519C  0E0A               	movlw	10
 44864  01519E  6E03               	movwf	i2___awmod@divisor,c
 44865  0151A0  5051               	movf	i2scale@scl,w,c
 44866  0151A2  6E01               	movwf	i2___awmod@dividend,c
 44867  0151A4  6A02               	clrf	i2___awmod@dividend+1,c
 44868  0151A6  BE01               	btfsc	i2___awmod@dividend,7,c
 44869  0151A8  0602               	decf	i2___awmod@dividend+1,f,c
 44870  0151AA  EC48  F0CF         	call	i2___awmod	;wreg free
 44871  0151AE  90D8               	bcf	status,0,c
 44872  0151B0  3601               	rlcf	?i2___awmod,f,c
 44873  0151B2  3602               	rlcf	?i2___awmod+1,f,c
 44874  0151B4  90D8               	bcf	status,0,c
 44875  0151B6  3601               	rlcf	?i2___awmod,f,c
 44876  0151B8  3602               	rlcf	?i2___awmod+1,f,c
 44877  0151BA  0E81               	movlw	low __npowers_
 44878  0151BC  2401               	addwf	?i2___awmod,w,c
 44879  0151BE  6EF6               	movwf	tblptrl,c
 44880  0151C0  0ECF               	movlw	high __npowers_
 44881  0151C2  2002               	addwfc	?i2___awmod+1,w,c
 44882  0151C4  6EF7               	movwf	tblptrh,c
 44883  0151C6                     	if	1	;There are 3 active tblptr bytes
 44884  0151C6  6AF8               	clrf	tblptru,c
 44885  0151C8  0E00               	movlw	low (__mediumconst shr (0+16))
 44886  0151CA  22F8               	addwfc	tblptru,f,c
 44887  0151CC                     	endif
 44888  0151CC  0009               	tblrd		*+
 44889  0151CE  CFF5 F034          	movff	tablat,i2___flmul@a
 44890  0151D2  0009               	tblrd		*+
 44891  0151D4  CFF5 F035          	movff	tablat,i2___flmul@a+1
 44892  0151D8  0009               	tblrd		*+
 44893  0151DA  CFF5 F036          	movff	tablat,i2___flmul@a+2
 44894  0151DE  000A               	tblrd		*-
 44895  0151E0  CFF5 F037          	movff	tablat,i2___flmul@a+3
 44896  0151E4  EC90  F0AD         	call	i2___flmul	;wreg free
 44897  0151E8  C030  F049         	movff	?i2___flmul,?i2_scale
 44898  0151EC  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 44899  0151F0  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 44900  0151F4  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 44901  0151F8  0012               	return	
 44902  0151FA                     i2l1901:
 44903                           
 44904                           ;doprnt.c: 434: return _npowers_[scl];
 44905  0151FA  5051               	movf	i2scale@scl,w,c
 44906  0151FC  0D04               	mullw	4
 44907  0151FE  0E81               	movlw	low __npowers_
 44908  015200  24F3               	addwf	prodl,w,c
 44909  015202  6EF6               	movwf	tblptrl,c
 44910  015204  0ECF               	movlw	high __npowers_
 44911  015206  20F4               	addwfc	prodh,w,c
 44912  015208  6EF7               	movwf	tblptrh,c
 44913  01520A                     	if	1	;There are 3 active tblptr bytes
 44914  01520A  6AF8               	clrf	tblptru,c
 44915  01520C  0E00               	movlw	low (__mediumconst shr (0+16))
 44916  01520E  22F8               	addwfc	tblptru,f,c
 44917  015210                     	endif
 44918  015210  0009               	tblrd		*+
 44919  015212  CFF5 F049          	movff	tablat,?i2_scale
 44920  015216  0009               	tblrd		*+
 44921  015218  CFF5 F04A          	movff	tablat,?i2_scale+1
 44922  01521C  0009               	tblrd		*+
 44923  01521E  CFF5 F04B          	movff	tablat,?i2_scale+2
 44924  015222  000A               	tblrd		*-
 44925  015224  CFF5 F04C          	movff	tablat,?i2_scale+3
 44926  015228  0012               	return	
 44927  01522A                     i2l1897:
 44928                           
 44929                           ;doprnt.c: 435: }
 44930                           ;doprnt.c: 436: if(scl>=110)
 44931  01522A  5051               	movf	i2scale@scl,w,c
 44932  01522C  0A80               	xorlw	128
 44933  01522E  0F12               	addlw	-238
 44934  015230  A0D8               	btfss	status,0,c
 44935  015232  D0A1               	goto	i2l1902
 44936                           
 44937                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 44938  015234  0E00               	movlw	0
 44939  015236  6E0A               	movwf	i2___awdiv@divisor+1,c
 44940  015238  0E0A               	movlw	10
 44941  01523A  6E09               	movwf	i2___awdiv@divisor,c
 44942  01523C  0E00               	movlw	0
 44943  01523E  6E04               	movwf	i2___awmod@divisor+1,c
 44944  015240  0E64               	movlw	100
 44945  015242  6E03               	movwf	i2___awmod@divisor,c
 44946  015244  5051               	movf	i2scale@scl,w,c
 44947  015246  6E01               	movwf	i2___awmod@dividend,c
 44948  015248  6A02               	clrf	i2___awmod@dividend+1,c
 44949  01524A  BE01               	btfsc	i2___awmod@dividend,7,c
 44950  01524C  0602               	decf	i2___awmod@dividend+1,f,c
 44951  01524E  EC48  F0CF         	call	i2___awmod	;wreg free
 44952  015252  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 44953  015256  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 44954  01525A  ECD0  F0CD         	call	i2___awdiv	;wreg free
 44955  01525E  90D8               	bcf	status,0,c
 44956  015260  3607               	rlcf	?i2___awdiv,f,c
 44957  015262  3608               	rlcf	?i2___awdiv+1,f,c
 44958  015264  90D8               	bcf	status,0,c
 44959  015266  3607               	rlcf	?i2___awdiv,f,c
 44960  015268  3608               	rlcf	?i2___awdiv+1,f,c
 44961  01526A  0E24               	movlw	36
 44962  01526C  2607               	addwf	?i2___awdiv,f,c
 44963  01526E  0E00               	movlw	0
 44964  015270  2208               	addwfc	?i2___awdiv+1,f,c
 44965  015272  0E4D               	movlw	low __powers_
 44966  015274  2407               	addwf	?i2___awdiv,w,c
 44967  015276  6EF6               	movwf	tblptrl,c
 44968  015278  0ECF               	movlw	high __powers_
 44969  01527A  2008               	addwfc	?i2___awdiv+1,w,c
 44970  01527C  6EF7               	movwf	tblptrh,c
 44971  01527E                     	if	1	;There are 3 active tblptr bytes
 44972  01527E  6AF8               	clrf	tblptru,c
 44973  015280  0E00               	movlw	low (__mediumconst shr (0+16))
 44974  015282  22F8               	addwfc	tblptru,f,c
 44975  015284                     	endif
 44976  015284  0009               	tblrd		*+
 44977  015286  CFF5 F034          	movff	tablat,i2___flmul@a
 44978  01528A  0009               	tblrd		*+
 44979  01528C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 44980  015290  0009               	tblrd		*+
 44981  015292  CFF5 F036          	movff	tablat,i2___flmul@a+2
 44982  015296  000A               	tblrd		*-
 44983  015298  CFF5 F037          	movff	tablat,i2___flmul@a+3
 44984  01529C  0E00               	movlw	0
 44985  01529E  6E0A               	movwf	i2___awdiv@divisor+1,c
 44986  0152A0  0E64               	movlw	100
 44987  0152A2  6E09               	movwf	i2___awdiv@divisor,c
 44988  0152A4  5051               	movf	i2scale@scl,w,c
 44989  0152A6  6E07               	movwf	i2___awdiv@dividend,c
 44990  0152A8  6A08               	clrf	i2___awdiv@dividend+1,c
 44991  0152AA  BE07               	btfsc	i2___awdiv@dividend,7,c
 44992  0152AC  0608               	decf	i2___awdiv@dividend+1,f,c
 44993  0152AE  ECD0  F0CD         	call	i2___awdiv	;wreg free
 44994  0152B2  90D8               	bcf	status,0,c
 44995  0152B4  3607               	rlcf	?i2___awdiv,f,c
 44996  0152B6  3608               	rlcf	?i2___awdiv+1,f,c
 44997  0152B8  90D8               	bcf	status,0,c
 44998  0152BA  3607               	rlcf	?i2___awdiv,f,c
 44999  0152BC  3608               	rlcf	?i2___awdiv+1,f,c
 45000  0152BE  0E48               	movlw	72
 45001  0152C0  2607               	addwf	?i2___awdiv,f,c
 45002  0152C2  0E00               	movlw	0
 45003  0152C4  2208               	addwfc	?i2___awdiv+1,f,c
 45004  0152C6  0E4D               	movlw	low __powers_
 45005  0152C8  2407               	addwf	?i2___awdiv,w,c
 45006  0152CA  6EF6               	movwf	tblptrl,c
 45007  0152CC  0ECF               	movlw	high __powers_
 45008  0152CE  2008               	addwfc	?i2___awdiv+1,w,c
 45009  0152D0  6EF7               	movwf	tblptrh,c
 45010  0152D2                     	if	1	;There are 3 active tblptr bytes
 45011  0152D2  6AF8               	clrf	tblptru,c
 45012  0152D4  0E00               	movlw	low (__mediumconst shr (0+16))
 45013  0152D6  22F8               	addwfc	tblptru,f,c
 45014  0152D8                     	endif
 45015  0152D8  0009               	tblrd		*+
 45016  0152DA  CFF5 F030          	movff	tablat,i2___flmul@b
 45017  0152DE  0009               	tblrd		*+
 45018  0152E0  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45019  0152E4  0009               	tblrd		*+
 45020  0152E6  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45021  0152EA  000A               	tblrd		*-
 45022  0152EC  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45023  0152F0  EC90  F0AD         	call	i2___flmul	;wreg free
 45024  0152F4  C030  F04D         	movff	?i2___flmul,i2_scale$5356
 45025  0152F8  C031  F04E         	movff	?i2___flmul+1,i2_scale$5356+1
 45026  0152FC  C032  F04F         	movff	?i2___flmul+2,i2_scale$5356+2
 45027  015300  C033  F050         	movff	?i2___flmul+3,i2_scale$5356+3
 45028                           
 45029                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 45030  015304  C04D  F030         	movff	i2_scale$5356,i2___flmul@b
 45031  015308  C04E  F031         	movff	i2_scale$5356+1,i2___flmul@b+1
 45032  01530C  C04F  F032         	movff	i2_scale$5356+2,i2___flmul@b+2
 45033  015310  C050  F033         	movff	i2_scale$5356+3,i2___flmul@b+3
 45034  015314  0E00               	movlw	0
 45035  015316  6E04               	movwf	i2___awmod@divisor+1,c
 45036  015318  0E0A               	movlw	10
 45037  01531A  6E03               	movwf	i2___awmod@divisor,c
 45038  01531C  5051               	movf	i2scale@scl,w,c
 45039  01531E  6E01               	movwf	i2___awmod@dividend,c
 45040  015320  6A02               	clrf	i2___awmod@dividend+1,c
 45041  015322  BE01               	btfsc	i2___awmod@dividend,7,c
 45042  015324  0602               	decf	i2___awmod@dividend+1,f,c
 45043  015326  EC48  F0CF         	call	i2___awmod	;wreg free
 45044  01532A  90D8               	bcf	status,0,c
 45045  01532C  3601               	rlcf	?i2___awmod,f,c
 45046  01532E  3602               	rlcf	?i2___awmod+1,f,c
 45047  015330  90D8               	bcf	status,0,c
 45048  015332  3601               	rlcf	?i2___awmod,f,c
 45049  015334  3602               	rlcf	?i2___awmod+1,f,c
 45050  015336  0E4D               	movlw	low __powers_
 45051  015338  2401               	addwf	?i2___awmod,w,c
 45052  01533A  6EF6               	movwf	tblptrl,c
 45053  01533C  0ECF               	movlw	high __powers_
 45054  01533E  2002               	addwfc	?i2___awmod+1,w,c
 45055  015340  6EF7               	movwf	tblptrh,c
 45056  015342                     	if	1	;There are 3 active tblptr bytes
 45057  015342  6AF8               	clrf	tblptru,c
 45058  015344  0E00               	movlw	low (__mediumconst shr (0+16))
 45059  015346  22F8               	addwfc	tblptru,f,c
 45060  015348                     	endif
 45061  015348  0009               	tblrd		*+
 45062  01534A  CFF5 F034          	movff	tablat,i2___flmul@a
 45063  01534E  0009               	tblrd		*+
 45064  015350  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45065  015354  0009               	tblrd		*+
 45066  015356  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45067  01535A  000A               	tblrd		*-
 45068  01535C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45069  015360  EC90  F0AD         	call	i2___flmul	;wreg free
 45070  015364  C030  F049         	movff	?i2___flmul,?i2_scale
 45071  015368  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45072  01536C  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45073  015370  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45074  015374  0012               	return	
 45075  015376                     i2l1902:
 45076                           
 45077                           ;doprnt.c: 438: else if(scl > 10)
 45078  015376  5051               	movf	i2scale@scl,w,c
 45079  015378  0A80               	xorlw	128
 45080  01537A  0F75               	addlw	-139
 45081  01537C  A0D8               	btfss	status,0,c
 45082  01537E  D05B               	goto	i2l1904
 45083                           
 45084                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 45085  015380  0E00               	movlw	0
 45086  015382  6E0A               	movwf	i2___awdiv@divisor+1,c
 45087  015384  0E0A               	movlw	10
 45088  015386  6E09               	movwf	i2___awdiv@divisor,c
 45089  015388  5051               	movf	i2scale@scl,w,c
 45090  01538A  6E07               	movwf	i2___awdiv@dividend,c
 45091  01538C  6A08               	clrf	i2___awdiv@dividend+1,c
 45092  01538E  BE07               	btfsc	i2___awdiv@dividend,7,c
 45093  015390  0608               	decf	i2___awdiv@dividend+1,f,c
 45094  015392  ECD0  F0CD         	call	i2___awdiv	;wreg free
 45095  015396  90D8               	bcf	status,0,c
 45096  015398  3607               	rlcf	?i2___awdiv,f,c
 45097  01539A  3608               	rlcf	?i2___awdiv+1,f,c
 45098  01539C  90D8               	bcf	status,0,c
 45099  01539E  3607               	rlcf	?i2___awdiv,f,c
 45100  0153A0  3608               	rlcf	?i2___awdiv+1,f,c
 45101  0153A2  0E24               	movlw	36
 45102  0153A4  2607               	addwf	?i2___awdiv,f,c
 45103  0153A6  0E00               	movlw	0
 45104  0153A8  2208               	addwfc	?i2___awdiv+1,f,c
 45105  0153AA  0E4D               	movlw	low __powers_
 45106  0153AC  2407               	addwf	?i2___awdiv,w,c
 45107  0153AE  6EF6               	movwf	tblptrl,c
 45108  0153B0  0ECF               	movlw	high __powers_
 45109  0153B2  2008               	addwfc	?i2___awdiv+1,w,c
 45110  0153B4  6EF7               	movwf	tblptrh,c
 45111  0153B6                     	if	1	;There are 3 active tblptr bytes
 45112  0153B6  6AF8               	clrf	tblptru,c
 45113  0153B8  0E00               	movlw	low (__mediumconst shr (0+16))
 45114  0153BA  22F8               	addwfc	tblptru,f,c
 45115  0153BC                     	endif
 45116  0153BC  0009               	tblrd		*+
 45117  0153BE  CFF5 F030          	movff	tablat,i2___flmul@b
 45118  0153C2  0009               	tblrd		*+
 45119  0153C4  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45120  0153C8  0009               	tblrd		*+
 45121  0153CA  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45122  0153CE  000A               	tblrd		*-
 45123  0153D0  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45124  0153D4  0E00               	movlw	0
 45125  0153D6  6E04               	movwf	i2___awmod@divisor+1,c
 45126  0153D8  0E0A               	movlw	10
 45127  0153DA  6E03               	movwf	i2___awmod@divisor,c
 45128  0153DC  5051               	movf	i2scale@scl,w,c
 45129  0153DE  6E01               	movwf	i2___awmod@dividend,c
 45130  0153E0  6A02               	clrf	i2___awmod@dividend+1,c
 45131  0153E2  BE01               	btfsc	i2___awmod@dividend,7,c
 45132  0153E4  0602               	decf	i2___awmod@dividend+1,f,c
 45133  0153E6  EC48  F0CF         	call	i2___awmod	;wreg free
 45134  0153EA  90D8               	bcf	status,0,c
 45135  0153EC  3601               	rlcf	?i2___awmod,f,c
 45136  0153EE  3602               	rlcf	?i2___awmod+1,f,c
 45137  0153F0  90D8               	bcf	status,0,c
 45138  0153F2  3601               	rlcf	?i2___awmod,f,c
 45139  0153F4  3602               	rlcf	?i2___awmod+1,f,c
 45140  0153F6  0E4D               	movlw	low __powers_
 45141  0153F8  2401               	addwf	?i2___awmod,w,c
 45142  0153FA  6EF6               	movwf	tblptrl,c
 45143  0153FC  0ECF               	movlw	high __powers_
 45144  0153FE  2002               	addwfc	?i2___awmod+1,w,c
 45145  015400  6EF7               	movwf	tblptrh,c
 45146  015402                     	if	1	;There are 3 active tblptr bytes
 45147  015402  6AF8               	clrf	tblptru,c
 45148  015404  0E00               	movlw	low (__mediumconst shr (0+16))
 45149  015406  22F8               	addwfc	tblptru,f,c
 45150  015408                     	endif
 45151  015408  0009               	tblrd		*+
 45152  01540A  CFF5 F034          	movff	tablat,i2___flmul@a
 45153  01540E  0009               	tblrd		*+
 45154  015410  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45155  015414  0009               	tblrd		*+
 45156  015416  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45157  01541A  000A               	tblrd		*-
 45158  01541C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45159  015420  EC90  F0AD         	call	i2___flmul	;wreg free
 45160  015424  C030  F049         	movff	?i2___flmul,?i2_scale
 45161  015428  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45162  01542C  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45163  015430  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45164  015434  0012               	return	
 45165  015436                     i2l1904:
 45166                           
 45167                           ;doprnt.c: 440: return _powers_[scl];
 45168  015436  5051               	movf	i2scale@scl,w,c
 45169  015438  0D04               	mullw	4
 45170  01543A  0E4D               	movlw	low __powers_
 45171  01543C  24F3               	addwf	prodl,w,c
 45172  01543E  6EF6               	movwf	tblptrl,c
 45173  015440  0ECF               	movlw	high __powers_
 45174  015442  20F4               	addwfc	prodh,w,c
 45175  015444  6EF7               	movwf	tblptrh,c
 45176  015446                     	if	1	;There are 3 active tblptr bytes
 45177  015446  6AF8               	clrf	tblptru,c
 45178  015448  0E00               	movlw	low (__mediumconst shr (0+16))
 45179  01544A  22F8               	addwfc	tblptru,f,c
 45180  01544C                     	endif
 45181  01544C  0009               	tblrd		*+
 45182  01544E  CFF5 F049          	movff	tablat,?i2_scale
 45183  015452  0009               	tblrd		*+
 45184  015454  CFF5 F04A          	movff	tablat,?i2_scale+1
 45185  015458  0009               	tblrd		*+
 45186  01545A  CFF5 F04B          	movff	tablat,?i2_scale+2
 45187  01545E  000A               	tblrd		*-
 45188  015460  CFF5 F04C          	movff	tablat,?i2_scale+3
 45189  015464  0012               	return	
 45190  015466                     __end_ofi2_scale:
 45191                           	opt stack 0
 45192                           tosu	equ	0xFFF
 45193                           tosh	equ	0xFFE
 45194                           tosl	equ	0xFFD
 45195                           pclatu	equ	0xFFB
 45196                           pclath	equ	0xFFA
 45197                           tblptru	equ	0xFF8
 45198                           tblptrh	equ	0xFF7
 45199                           tblptrl	equ	0xFF6
 45200                           tablat	equ	0xFF5
 45201                           prodh	equ	0xFF4
 45202                           prodl	equ	0xFF3
 45203                           intcon	equ	0xFF2
 45204                           indf0	equ	0xFEF
 45205                           postinc0	equ	0xFEE
 45206                           fsr0h	equ	0xFEA
 45207                           fsr0l	equ	0xFE9
 45208                           wreg	equ	0xFE8
 45209                           indf1	equ	0xFE7
 45210                           postdec1	equ	0xFE5
 45211                           plusw1	equ	0xFE3
 45212                           fsr1h	equ	0xFE2
 45213                           fsr1l	equ	0xFE1
 45214                           bsr	equ	0xFE0
 45215                           indf2	equ	0xFDF
 45216                           postinc2	equ	0xFDE
 45217                           postdec2	equ	0xFDD
 45218                           plusw2	equ	0xFDB
 45219                           fsr2h	equ	0xFDA
 45220                           fsr2l	equ	0xFD9
 45221                           status	equ	0xFD8
 45222                           
 45223 ;; *************** function i2_putch *****************
 45224 ;; Defined at:
 45225 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 45226 ;; Parameters:    Size  Location     Type
 45227 ;;  txData          1    wreg     unsigned char 
 45228 ;; Auto vars:     Size  Location     Type
 45229 ;;  txData          1    1[COMRAM] unsigned char 
 45230 ;; Return value:  Size  Location     Type
 45231 ;;                  1    wreg      void 
 45232 ;; Registers used:
 45233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45234 ;; Tracked objects:
 45235 ;;		On entry : 0/0
 45236 ;;		On exit  : 0/0
 45237 ;;		Unchanged: 0/0
 45238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45243 ;;Total ram usage:        1 bytes
 45244 ;; Hardware stack levels used:    1
 45245 ;; Hardware stack levels required when called:    1
 45246 ;; This function calls:
 45247 ;;		i2_EUSART2_Write
 45248 ;; This function is called by:
 45249 ;;		i2_printf
 45250 ;; This function uses a non-reentrant model
 45251 ;;
 45252                           
 45253                           	psect	text131
 45254  01B19E                     __ptext131:
 45255                           	opt stack 0
 45256  01B19E                     i2_putch:
 45257                           	opt stack 13
 45258                           
 45259                           ;incstack = 0
 45260                           ;i2putch@txData stored from wreg
 45261  01B19E  6E02               	movwf	i2putch@txData,c
 45262                           
 45263                           ;eusart2.c: 187: EUSART2_Write(txData);
 45264  01B1A0  5002               	movf	i2putch@txData,w,c
 45265  01B1A2  EC6E  F0D3         	call	i2_EUSART2_Write
 45266  01B1A6  0012               	return		;funcret
 45267  01B1A8                     __end_ofi2_putch:
 45268                           	opt stack 0
 45269                           tosu	equ	0xFFF
 45270                           tosh	equ	0xFFE
 45271                           tosl	equ	0xFFD
 45272                           pclatu	equ	0xFFB
 45273                           pclath	equ	0xFFA
 45274                           tblptru	equ	0xFF8
 45275                           tblptrh	equ	0xFF7
 45276                           tblptrl	equ	0xFF6
 45277                           tablat	equ	0xFF5
 45278                           prodh	equ	0xFF4
 45279                           prodl	equ	0xFF3
 45280                           intcon	equ	0xFF2
 45281                           indf0	equ	0xFEF
 45282                           postinc0	equ	0xFEE
 45283                           fsr0h	equ	0xFEA
 45284                           fsr0l	equ	0xFE9
 45285                           wreg	equ	0xFE8
 45286                           indf1	equ	0xFE7
 45287                           postdec1	equ	0xFE5
 45288                           plusw1	equ	0xFE3
 45289                           fsr1h	equ	0xFE2
 45290                           fsr1l	equ	0xFE1
 45291                           bsr	equ	0xFE0
 45292                           indf2	equ	0xFDF
 45293                           postinc2	equ	0xFDE
 45294                           postdec2	equ	0xFDD
 45295                           plusw2	equ	0xFDB
 45296                           fsr2h	equ	0xFDA
 45297                           fsr2l	equ	0xFD9
 45298                           status	equ	0xFD8
 45299                           
 45300 ;; *************** function i2_EUSART2_Write *****************
 45301 ;; Defined at:
 45302 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 45303 ;; Parameters:    Size  Location     Type
 45304 ;;  txData          1    wreg     unsigned char 
 45305 ;; Auto vars:     Size  Location     Type
 45306 ;;  txData          1    0[COMRAM] unsigned char 
 45307 ;; Return value:  Size  Location     Type
 45308 ;;                  1    wreg      void 
 45309 ;; Registers used:
 45310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45311 ;; Tracked objects:
 45312 ;;		On entry : 0/0
 45313 ;;		On exit  : 0/0
 45314 ;;		Unchanged: 0/0
 45315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45320 ;;Total ram usage:        1 bytes
 45321 ;; Hardware stack levels used:    1
 45322 ;; This function calls:
 45323 ;;		Nothing
 45324 ;; This function is called by:
 45325 ;;		i2_putch
 45326 ;; This function uses a non-reentrant model
 45327 ;;
 45328                           
 45329                           	psect	text132
 45330  01A6DC                     __ptext132:
 45331                           	opt stack 0
 45332  01A6DC                     i2_EUSART2_Write:
 45333                           	opt stack 13
 45334                           
 45335                           ;incstack = 0
 45336                           ;i2EUSART2_Write@txData stored from wreg
 45337  01A6DC  6E01               	movwf	i2EUSART2_Write@txData,c
 45338                           
 45339                           ;eusart2.c: 157: while(0 == eusart2TxBufferRemaining)
 45340  01A6DE  D002               	goto	i2l426
 45341  01A6E0                     i2l427:
 45342                           
 45343                           ; BSR set to: 1
 45344  01A6E0  0004               	clrwdt		;# 
 45345                           
 45346                           ;eusart2.c: 160: LATFbits.LATF1 = 1;
 45347  01A6E2  827E               	bsf	3966,1,c	;volatile
 45348  01A6E4                     i2l426:
 45349  01A6E4  0101               	movlb	1	; () banked
 45350  01A6E6  51DF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 45351  01A6E8  B4D8               	btfsc	status,2,c
 45352  01A6EA  D7FA               	goto	i2l427
 45353                           
 45354                           ; BSR set to: 1
 45355                           ;eusart2.c: 161: }
 45356                           ;eusart2.c: 163: if(0 == PIE3bits.TX2IE)
 45357  01A6EC  010E               	movlb	14	; () banked
 45358  01A6EE  BD2C               	btfsc	44,6,b	;volatile
 45359  01A6F0  D003               	goto	i2l429
 45360                           
 45361                           ; BSR set to: 14
 45362                           ;eusart2.c: 164: {
 45363                           ;eusart2.c: 165: TX2REG = txData;
 45364  01A6F2  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 45365                           
 45366                           ;eusart2.c: 166: }
 45367  01A6F6  D013               	goto	i2l430
 45368  01A6F8                     i2l429:
 45369                           
 45370                           ; BSR set to: 14
 45371                           ;eusart2.c: 167: else
 45372                           ;eusart2.c: 168: {
 45373                           ;eusart2.c: 169: PIE3bits.TX2IE = 0;
 45374  01A6F8  9D2C               	bcf	44,6,b	;volatile
 45375                           
 45376                           ; BSR set to: 14
 45377                           ;eusart2.c: 170: eusart2TxBuffer[eusart2TxHead++] = txData;
 45378  01A6FA  0101               	movlb	1	; () banked
 45379  01A6FC  51E1               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 45380  01A6FE  0D01               	mullw	1
 45381  01A700  0E00               	movlw	low _eusart2TxBuffer
 45382  01A702  24F3               	addwf	prodl,w,c
 45383  01A704  6ED9               	movwf	fsr2l,c
 45384  01A706  0E03               	movlw	high _eusart2TxBuffer
 45385  01A708  20F4               	addwfc	prodh,w,c
 45386  01A70A  6EDA               	movwf	fsr2h,c
 45387  01A70C  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 45388                           
 45389                           ; BSR set to: 1
 45390  01A710  2BE1               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 45391                           
 45392                           ; BSR set to: 1
 45393                           ;eusart2.c: 171: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 45394  01A712  0E7F               	movlw	127
 45395  01A714  65E1               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 45396  01A716  D002               	goto	i2l431
 45397                           
 45398                           ; BSR set to: 1
 45399                           ;eusart2.c: 172: {
 45400                           ;eusart2.c: 173: eusart2TxHead = 0;
 45401  01A718  0E00               	movlw	0
 45402  01A71A  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 45403  01A71C                     i2l431:
 45404                           
 45405                           ; BSR set to: 1
 45406                           ;eusart2.c: 174: }
 45407                           ;eusart2.c: 175: eusart2TxBufferRemaining--;
 45408                           
 45409                           ; BSR set to: 1
 45410  01A71C  07DF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 45411  01A71E                     i2l430:
 45412                           
 45413                           ;eusart2.c: 176: }
 45414                           ;eusart2.c: 177: PIE3bits.TX2IE = 1;
 45415                           
 45416                           ; BSR set to: 1
 45417  01A71E  010E               	movlb	14	; () banked
 45418  01A720  8D2C               	bsf	44,6,b	;volatile
 45419                           
 45420                           ; BSR set to: 14
 45421  01A722  0012               	return		;funcret
 45422  01A724                     __end_ofi2_EUSART2_Write:
 45423                           	opt stack 0
 45424                           tosu	equ	0xFFF
 45425                           tosh	equ	0xFFE
 45426                           tosl	equ	0xFFD
 45427                           pclatu	equ	0xFFB
 45428                           pclath	equ	0xFFA
 45429                           tblptru	equ	0xFF8
 45430                           tblptrh	equ	0xFF7
 45431                           tblptrl	equ	0xFF6
 45432                           tablat	equ	0xFF5
 45433                           prodh	equ	0xFF4
 45434                           prodl	equ	0xFF3
 45435                           intcon	equ	0xFF2
 45436                           indf0	equ	0xFEF
 45437                           postinc0	equ	0xFEE
 45438                           fsr0h	equ	0xFEA
 45439                           fsr0l	equ	0xFE9
 45440                           wreg	equ	0xFE8
 45441                           indf1	equ	0xFE7
 45442                           postdec1	equ	0xFE5
 45443                           plusw1	equ	0xFE3
 45444                           fsr1h	equ	0xFE2
 45445                           fsr1l	equ	0xFE1
 45446                           bsr	equ	0xFE0
 45447                           indf2	equ	0xFDF
 45448                           postinc2	equ	0xFDE
 45449                           postdec2	equ	0xFDD
 45450                           plusw2	equ	0xFDB
 45451                           fsr2h	equ	0xFDA
 45452                           fsr2l	equ	0xFD9
 45453                           status	equ	0xFD8
 45454                           
 45455 ;; *************** function i2_isdigit *****************
 45456 ;; Defined at:
 45457 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 45458 ;; Parameters:    Size  Location     Type
 45459 ;;  c               1    wreg     unsigned char 
 45460 ;; Auto vars:     Size  Location     Type
 45461 ;;  c               1    2[COMRAM] unsigned char 
 45462 ;; Return value:  Size  Location     Type
 45463 ;;		None               void
 45464 ;; Registers used:
 45465 ;;		wreg, status,2, status,0
 45466 ;; Tracked objects:
 45467 ;;		On entry : 0/0
 45468 ;;		On exit  : 0/0
 45469 ;;		Unchanged: 0/0
 45470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45474 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45475 ;;Total ram usage:        3 bytes
 45476 ;; Hardware stack levels used:    1
 45477 ;; This function calls:
 45478 ;;		Nothing
 45479 ;; This function is called by:
 45480 ;;		i2__doprnt
 45481 ;; This function uses a non-reentrant model
 45482 ;;
 45483                           
 45484                           	psect	text133
 45485  01AF48                     __ptext133:
 45486                           	opt stack 0
 45487  01AF48                     i2_isdigit:
 45488                           	opt stack 14
 45489                           
 45490                           ; BSR set to: 14
 45491                           ;incstack = 0
 45492                           ;i2isdigit@c stored from wreg
 45493  01AF48  6E03               	movwf	i2isdigit@c,c
 45494  01AF4A  0E00               	movlw	0
 45495  01AF4C  6E02               	movwf	i2_isdigit$4252,c
 45496  01AF4E  0E3A               	movlw	58
 45497  01AF50  6003               	cpfslt	i2isdigit@c,c
 45498  01AF52  D005               	goto	i2l2523
 45499  01AF54  0E2F               	movlw	47
 45500  01AF56  6403               	cpfsgt	i2isdigit@c,c
 45501  01AF58  D002               	goto	i2l2523
 45502  01AF5A  0E01               	movlw	1
 45503  01AF5C  6E02               	movwf	i2_isdigit$4252,c
 45504  01AF5E                     i2l2523:
 45505  01AF5E  C002  F001         	movff	i2_isdigit$4252,??i2_isdigit
 45506  01AF62  3001               	rrcf	??i2_isdigit,w,c
 45507  01AF64  0012               	return	
 45508  01AF66                     __end_ofi2_isdigit:
 45509                           	opt stack 0
 45510                           tosu	equ	0xFFF
 45511                           tosh	equ	0xFFE
 45512                           tosl	equ	0xFFD
 45513                           pclatu	equ	0xFFB
 45514                           pclath	equ	0xFFA
 45515                           tblptru	equ	0xFF8
 45516                           tblptrh	equ	0xFF7
 45517                           tblptrl	equ	0xFF6
 45518                           tablat	equ	0xFF5
 45519                           prodh	equ	0xFF4
 45520                           prodl	equ	0xFF3
 45521                           intcon	equ	0xFF2
 45522                           indf0	equ	0xFEF
 45523                           postinc0	equ	0xFEE
 45524                           fsr0h	equ	0xFEA
 45525                           fsr0l	equ	0xFE9
 45526                           wreg	equ	0xFE8
 45527                           indf1	equ	0xFE7
 45528                           postdec1	equ	0xFE5
 45529                           plusw1	equ	0xFE3
 45530                           fsr1h	equ	0xFE2
 45531                           fsr1l	equ	0xFE1
 45532                           bsr	equ	0xFE0
 45533                           indf2	equ	0xFDF
 45534                           postinc2	equ	0xFDE
 45535                           postdec2	equ	0xFDD
 45536                           plusw2	equ	0xFDB
 45537                           fsr2h	equ	0xFDA
 45538                           fsr2l	equ	0xFD9
 45539                           status	equ	0xFD8
 45540                           
 45541 ;; *************** function i2_fround *****************
 45542 ;; Defined at:
 45543 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 45544 ;; Parameters:    Size  Location     Type
 45545 ;;  prec            1    wreg     unsigned char 
 45546 ;; Auto vars:     Size  Location     Type
 45547 ;;  prec            1   84[COMRAM] unsigned char 
 45548 ;; Return value:  Size  Location     Type
 45549 ;;                  4   72[COMRAM] unsigned char 
 45550 ;; Registers used:
 45551 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45552 ;; Tracked objects:
 45553 ;;		On entry : 0/0
 45554 ;;		On exit  : 0/0
 45555 ;;		Unchanged: 0/0
 45556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45558 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45560 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45561 ;;Total ram usage:       13 bytes
 45562 ;; Hardware stack levels used:    1
 45563 ;; Hardware stack levels required when called:    1
 45564 ;; This function calls:
 45565 ;;		i2___awdiv
 45566 ;;		i2___awmod
 45567 ;;		i2___flmul
 45568 ;; This function is called by:
 45569 ;;		i2__doprnt
 45570 ;; This function uses a non-reentrant model
 45571 ;;
 45572                           
 45573                           	psect	text134
 45574  0175E2                     __ptext134:
 45575                           	opt stack 0
 45576  0175E2                     i2_fround:
 45577                           	opt stack 13
 45578                           
 45579                           ;incstack = 0
 45580                           ;i2fround@prec stored from wreg
 45581  0175E2  6E55               	movwf	i2fround@prec,c
 45582                           
 45583                           ;doprnt.c: 413: if(prec>=110)
 45584  0175E4  0E6D               	movlw	109
 45585  0175E6  6455               	cpfsgt	i2fround@prec,c
 45586  0175E8  D0B5               	goto	i2l1891
 45587                           
 45588                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 45589  0175EA  0E00               	movlw	0
 45590  0175EC  6E0A               	movwf	i2___awdiv@divisor+1,c
 45591  0175EE  0E0A               	movlw	10
 45592  0175F0  6E09               	movwf	i2___awdiv@divisor,c
 45593  0175F2  0E00               	movlw	0
 45594  0175F4  6E04               	movwf	i2___awmod@divisor+1,c
 45595  0175F6  0E64               	movlw	100
 45596  0175F8  6E03               	movwf	i2___awmod@divisor,c
 45597  0175FA  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 45598  0175FE  6A02               	clrf	i2___awmod@dividend+1,c
 45599  017600  EC48  F0CF         	call	i2___awmod	;wreg free
 45600  017604  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 45601  017608  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 45602  01760C  ECD0  F0CD         	call	i2___awdiv	;wreg free
 45603  017610  90D8               	bcf	status,0,c
 45604  017612  3607               	rlcf	?i2___awdiv,f,c
 45605  017614  3608               	rlcf	?i2___awdiv+1,f,c
 45606  017616  90D8               	bcf	status,0,c
 45607  017618  3607               	rlcf	?i2___awdiv,f,c
 45608  01761A  3608               	rlcf	?i2___awdiv+1,f,c
 45609  01761C  0E24               	movlw	36
 45610  01761E  2607               	addwf	?i2___awdiv,f,c
 45611  017620  0E00               	movlw	0
 45612  017622  2208               	addwfc	?i2___awdiv+1,f,c
 45613  017624  0E81               	movlw	low __npowers_
 45614  017626  2407               	addwf	?i2___awdiv,w,c
 45615  017628  6EF6               	movwf	tblptrl,c
 45616  01762A  0ECF               	movlw	high __npowers_
 45617  01762C  2008               	addwfc	?i2___awdiv+1,w,c
 45618  01762E  6EF7               	movwf	tblptrh,c
 45619  017630                     	if	1	;There are 3 active tblptr bytes
 45620  017630  6AF8               	clrf	tblptru,c
 45621  017632  0E00               	movlw	low (__mediumconst shr (0+16))
 45622  017634  22F8               	addwfc	tblptru,f,c
 45623  017636                     	endif
 45624  017636  0009               	tblrd		*+
 45625  017638  CFF5 F034          	movff	tablat,i2___flmul@a
 45626  01763C  0009               	tblrd		*+
 45627  01763E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45628  017642  0009               	tblrd		*+
 45629  017644  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45630  017648  000A               	tblrd		*-
 45631  01764A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45632  01764E  0E00               	movlw	0
 45633  017650  6E0A               	movwf	i2___awdiv@divisor+1,c
 45634  017652  0E64               	movlw	100
 45635  017654  6E09               	movwf	i2___awdiv@divisor,c
 45636  017656  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 45637  01765A  6A08               	clrf	i2___awdiv@dividend+1,c
 45638  01765C  ECD0  F0CD         	call	i2___awdiv	;wreg free
 45639  017660  90D8               	bcf	status,0,c
 45640  017662  3607               	rlcf	?i2___awdiv,f,c
 45641  017664  3608               	rlcf	?i2___awdiv+1,f,c
 45642  017666  90D8               	bcf	status,0,c
 45643  017668  3607               	rlcf	?i2___awdiv,f,c
 45644  01766A  3608               	rlcf	?i2___awdiv+1,f,c
 45645  01766C  0E48               	movlw	72
 45646  01766E  2607               	addwf	?i2___awdiv,f,c
 45647  017670  0E00               	movlw	0
 45648  017672  2208               	addwfc	?i2___awdiv+1,f,c
 45649  017674  0E81               	movlw	low __npowers_
 45650  017676  2407               	addwf	?i2___awdiv,w,c
 45651  017678  6EF6               	movwf	tblptrl,c
 45652  01767A  0ECF               	movlw	high __npowers_
 45653  01767C  2008               	addwfc	?i2___awdiv+1,w,c
 45654  01767E  6EF7               	movwf	tblptrh,c
 45655  017680                     	if	1	;There are 3 active tblptr bytes
 45656  017680  6AF8               	clrf	tblptru,c
 45657  017682  0E00               	movlw	low (__mediumconst shr (0+16))
 45658  017684  22F8               	addwfc	tblptru,f,c
 45659  017686                     	endif
 45660  017686  0009               	tblrd		*+
 45661  017688  CFF5 F030          	movff	tablat,i2___flmul@b
 45662  01768C  0009               	tblrd		*+
 45663  01768E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45664  017692  0009               	tblrd		*+
 45665  017694  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45666  017698  000A               	tblrd		*-
 45667  01769A  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45668  01769E  EC90  F0AD         	call	i2___flmul	;wreg free
 45669  0176A2  C030  F051         	movff	?i2___flmul,i2_fround$5354
 45670  0176A6  C031  F052         	movff	?i2___flmul+1,i2_fround$5354+1
 45671  0176AA  C032  F053         	movff	?i2___flmul+2,i2_fround$5354+2
 45672  0176AE  C033  F054         	movff	?i2___flmul+3,i2_fround$5354+3
 45673                           
 45674                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 45675  0176B2  0E00               	movlw	0
 45676  0176B4  6E04               	movwf	i2___awmod@divisor+1,c
 45677  0176B6  0E0A               	movlw	10
 45678  0176B8  6E03               	movwf	i2___awmod@divisor,c
 45679  0176BA  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 45680  0176BE  6A02               	clrf	i2___awmod@dividend+1,c
 45681  0176C0  EC48  F0CF         	call	i2___awmod	;wreg free
 45682  0176C4  90D8               	bcf	status,0,c
 45683  0176C6  3601               	rlcf	?i2___awmod,f,c
 45684  0176C8  3602               	rlcf	?i2___awmod+1,f,c
 45685  0176CA  90D8               	bcf	status,0,c
 45686  0176CC  3601               	rlcf	?i2___awmod,f,c
 45687  0176CE  3602               	rlcf	?i2___awmod+1,f,c
 45688  0176D0  0E81               	movlw	low __npowers_
 45689  0176D2  2401               	addwf	?i2___awmod,w,c
 45690  0176D4  6EF6               	movwf	tblptrl,c
 45691  0176D6  0ECF               	movlw	high __npowers_
 45692  0176D8  2002               	addwfc	?i2___awmod+1,w,c
 45693  0176DA  6EF7               	movwf	tblptrh,c
 45694  0176DC                     	if	1	;There are 3 active tblptr bytes
 45695  0176DC  6AF8               	clrf	tblptru,c
 45696  0176DE  0E00               	movlw	low (__mediumconst shr (0+16))
 45697  0176E0  22F8               	addwfc	tblptru,f,c
 45698  0176E2                     	endif
 45699  0176E2  0009               	tblrd		*+
 45700  0176E4  CFF5 F034          	movff	tablat,i2___flmul@a
 45701  0176E8  0009               	tblrd		*+
 45702  0176EA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45703  0176EE  0009               	tblrd		*+
 45704  0176F0  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45705  0176F4  000A               	tblrd		*-
 45706  0176F6  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45707  0176FA  C051  F030         	movff	i2_fround$5354,i2___flmul@b
 45708  0176FE  C052  F031         	movff	i2_fround$5354+1,i2___flmul@b+1
 45709  017702  C053  F032         	movff	i2_fround$5354+2,i2___flmul@b+2
 45710  017706  C054  F033         	movff	i2_fround$5354+3,i2___flmul@b+3
 45711  01770A  EC90  F0AD         	call	i2___flmul	;wreg free
 45712  01770E  C030  F04D         	movff	?i2___flmul,i2_fround$5355
 45713  017712  C031  F04E         	movff	?i2___flmul+1,i2_fround$5355+1
 45714  017716  C032  F04F         	movff	?i2___flmul+2,i2_fround$5355+2
 45715  01771A  C033  F050         	movff	?i2___flmul+3,i2_fround$5355+3
 45716                           
 45717                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 45718  01771E  C04D  F030         	movff	i2_fround$5355,i2___flmul@b
 45719  017722  C04E  F031         	movff	i2_fround$5355+1,i2___flmul@b+1
 45720  017726  C04F  F032         	movff	i2_fround$5355+2,i2___flmul@b+2
 45721  01772A  C050  F033         	movff	i2_fround$5355+3,i2___flmul@b+3
 45722  01772E  0E00               	movlw	0
 45723  017730  6E34               	movwf	i2___flmul@a,c
 45724  017732  0E00               	movlw	0
 45725  017734  6E35               	movwf	i2___flmul@a+1,c
 45726  017736  0E00               	movlw	0
 45727  017738  6E36               	movwf	i2___flmul@a+2,c
 45728  01773A  0E3F               	movlw	63
 45729  01773C  6E37               	movwf	i2___flmul@a+3,c
 45730  01773E  EC90  F0AD         	call	i2___flmul	;wreg free
 45731  017742  C030  F049         	movff	?i2___flmul,?i2_fround
 45732  017746  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 45733  01774A  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 45734  01774E  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 45735  017752  0012               	return	
 45736  017754                     i2l1891:
 45737                           
 45738                           ;doprnt.c: 415: else if(prec > 10)
 45739  017754  0E0A               	movlw	10
 45740  017756  6455               	cpfsgt	i2fround@prec,c
 45741  017758  D071               	goto	i2l1894
 45742                           
 45743                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 45744  01775A  0E00               	movlw	0
 45745  01775C  6E04               	movwf	i2___awmod@divisor+1,c
 45746  01775E  0E0A               	movlw	10
 45747  017760  6E03               	movwf	i2___awmod@divisor,c
 45748  017762  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 45749  017766  6A02               	clrf	i2___awmod@dividend+1,c
 45750  017768  EC48  F0CF         	call	i2___awmod	;wreg free
 45751  01776C  90D8               	bcf	status,0,c
 45752  01776E  3601               	rlcf	?i2___awmod,f,c
 45753  017770  3602               	rlcf	?i2___awmod+1,f,c
 45754  017772  90D8               	bcf	status,0,c
 45755  017774  3601               	rlcf	?i2___awmod,f,c
 45756  017776  3602               	rlcf	?i2___awmod+1,f,c
 45757  017778  0E81               	movlw	low __npowers_
 45758  01777A  2401               	addwf	?i2___awmod,w,c
 45759  01777C  6EF6               	movwf	tblptrl,c
 45760  01777E  0ECF               	movlw	high __npowers_
 45761  017780  2002               	addwfc	?i2___awmod+1,w,c
 45762  017782  6EF7               	movwf	tblptrh,c
 45763  017784                     	if	1	;There are 3 active tblptr bytes
 45764  017784  6AF8               	clrf	tblptru,c
 45765  017786  0E00               	movlw	low (__mediumconst shr (0+16))
 45766  017788  22F8               	addwfc	tblptru,f,c
 45767  01778A                     	endif
 45768  01778A  0009               	tblrd		*+
 45769  01778C  CFF5 F034          	movff	tablat,i2___flmul@a
 45770  017790  0009               	tblrd		*+
 45771  017792  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45772  017796  0009               	tblrd		*+
 45773  017798  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45774  01779C  000A               	tblrd		*-
 45775  01779E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45776  0177A2  0E00               	movlw	0
 45777  0177A4  6E0A               	movwf	i2___awdiv@divisor+1,c
 45778  0177A6  0E0A               	movlw	10
 45779  0177A8  6E09               	movwf	i2___awdiv@divisor,c
 45780  0177AA  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 45781  0177AE  6A08               	clrf	i2___awdiv@dividend+1,c
 45782  0177B0  ECD0  F0CD         	call	i2___awdiv	;wreg free
 45783  0177B4  90D8               	bcf	status,0,c
 45784  0177B6  3607               	rlcf	?i2___awdiv,f,c
 45785  0177B8  3608               	rlcf	?i2___awdiv+1,f,c
 45786  0177BA  90D8               	bcf	status,0,c
 45787  0177BC  3607               	rlcf	?i2___awdiv,f,c
 45788  0177BE  3608               	rlcf	?i2___awdiv+1,f,c
 45789  0177C0  0E24               	movlw	36
 45790  0177C2  2607               	addwf	?i2___awdiv,f,c
 45791  0177C4  0E00               	movlw	0
 45792  0177C6  2208               	addwfc	?i2___awdiv+1,f,c
 45793  0177C8  0E81               	movlw	low __npowers_
 45794  0177CA  2407               	addwf	?i2___awdiv,w,c
 45795  0177CC  6EF6               	movwf	tblptrl,c
 45796  0177CE  0ECF               	movlw	high __npowers_
 45797  0177D0  2008               	addwfc	?i2___awdiv+1,w,c
 45798  0177D2  6EF7               	movwf	tblptrh,c
 45799  0177D4                     	if	1	;There are 3 active tblptr bytes
 45800  0177D4  6AF8               	clrf	tblptru,c
 45801  0177D6  0E00               	movlw	low (__mediumconst shr (0+16))
 45802  0177D8  22F8               	addwfc	tblptru,f,c
 45803  0177DA                     	endif
 45804  0177DA  0009               	tblrd		*+
 45805  0177DC  CFF5 F030          	movff	tablat,i2___flmul@b
 45806  0177E0  0009               	tblrd		*+
 45807  0177E2  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45808  0177E6  0009               	tblrd		*+
 45809  0177E8  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45810  0177EC  000A               	tblrd		*-
 45811  0177EE  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45812  0177F2  EC90  F0AD         	call	i2___flmul	;wreg free
 45813  0177F6  C030  F051         	movff	?i2___flmul,i2_fround$5354
 45814  0177FA  C031  F052         	movff	?i2___flmul+1,i2_fround$5354+1
 45815  0177FE  C032  F053         	movff	?i2___flmul+2,i2_fround$5354+2
 45816  017802  C033  F054         	movff	?i2___flmul+3,i2_fround$5354+3
 45817                           
 45818                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 45819  017806  C051  F030         	movff	i2_fround$5354,i2___flmul@b
 45820  01780A  C052  F031         	movff	i2_fround$5354+1,i2___flmul@b+1
 45821  01780E  C053  F032         	movff	i2_fround$5354+2,i2___flmul@b+2
 45822  017812  C054  F033         	movff	i2_fround$5354+3,i2___flmul@b+3
 45823  017816  0E00               	movlw	0
 45824  017818  6E34               	movwf	i2___flmul@a,c
 45825  01781A  0E00               	movlw	0
 45826  01781C  6E35               	movwf	i2___flmul@a+1,c
 45827  01781E  0E00               	movlw	0
 45828  017820  6E36               	movwf	i2___flmul@a+2,c
 45829  017822  0E3F               	movlw	63
 45830  017824  6E37               	movwf	i2___flmul@a+3,c
 45831  017826  EC90  F0AD         	call	i2___flmul	;wreg free
 45832  01782A  C030  F049         	movff	?i2___flmul,?i2_fround
 45833  01782E  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 45834  017832  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 45835  017836  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 45836  01783A  0012               	return	
 45837  01783C                     i2l1894:
 45838                           
 45839                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 45840  01783C  5055               	movf	i2fround@prec,w,c
 45841  01783E  0D04               	mullw	4
 45842  017840  0E81               	movlw	low __npowers_
 45843  017842  24F3               	addwf	prodl,w,c
 45844  017844  6EF6               	movwf	tblptrl,c
 45845  017846  0ECF               	movlw	high __npowers_
 45846  017848  20F4               	addwfc	prodh,w,c
 45847  01784A  6EF7               	movwf	tblptrh,c
 45848  01784C                     	if	1	;There are 3 active tblptr bytes
 45849  01784C  6AF8               	clrf	tblptru,c
 45850  01784E  0E00               	movlw	low (__mediumconst shr (0+16))
 45851  017850  22F8               	addwfc	tblptru,f,c
 45852  017852                     	endif
 45853  017852  0009               	tblrd		*+
 45854  017854  CFF5 F030          	movff	tablat,i2___flmul@b
 45855  017858  0009               	tblrd		*+
 45856  01785A  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45857  01785E  0009               	tblrd		*+
 45858  017860  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45859  017864  000A               	tblrd		*-
 45860  017866  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45861  01786A  0E00               	movlw	0
 45862  01786C  6E34               	movwf	i2___flmul@a,c
 45863  01786E  0E00               	movlw	0
 45864  017870  6E35               	movwf	i2___flmul@a+1,c
 45865  017872  0E00               	movlw	0
 45866  017874  6E36               	movwf	i2___flmul@a+2,c
 45867  017876  0E3F               	movlw	63
 45868  017878  6E37               	movwf	i2___flmul@a+3,c
 45869  01787A  EC90  F0AD         	call	i2___flmul	;wreg free
 45870  01787E  C030  F049         	movff	?i2___flmul,?i2_fround
 45871  017882  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 45872  017886  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 45873  01788A  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 45874  01788E  0012               	return	
 45875  017890                     __end_ofi2_fround:
 45876                           	opt stack 0
 45877                           tosu	equ	0xFFF
 45878                           tosh	equ	0xFFE
 45879                           tosl	equ	0xFFD
 45880                           pclatu	equ	0xFFB
 45881                           pclath	equ	0xFFA
 45882                           tblptru	equ	0xFF8
 45883                           tblptrh	equ	0xFF7
 45884                           tblptrl	equ	0xFF6
 45885                           tablat	equ	0xFF5
 45886                           prodh	equ	0xFF4
 45887                           prodl	equ	0xFF3
 45888                           intcon	equ	0xFF2
 45889                           indf0	equ	0xFEF
 45890                           postinc0	equ	0xFEE
 45891                           fsr0h	equ	0xFEA
 45892                           fsr0l	equ	0xFE9
 45893                           wreg	equ	0xFE8
 45894                           indf1	equ	0xFE7
 45895                           postdec1	equ	0xFE5
 45896                           plusw1	equ	0xFE3
 45897                           fsr1h	equ	0xFE2
 45898                           fsr1l	equ	0xFE1
 45899                           bsr	equ	0xFE0
 45900                           indf2	equ	0xFDF
 45901                           postinc2	equ	0xFDE
 45902                           postdec2	equ	0xFDD
 45903                           plusw2	equ	0xFDB
 45904                           fsr2h	equ	0xFDA
 45905                           fsr2l	equ	0xFD9
 45906                           status	equ	0xFD8
 45907                           
 45908 ;; *************** function i2___awmod *****************
 45909 ;; Defined at:
 45910 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 45911 ;; Parameters:    Size  Location     Type
 45912 ;;  dividend        2    0[COMRAM] int 
 45913 ;;  divisor         2    2[COMRAM] int 
 45914 ;; Auto vars:     Size  Location     Type
 45915 ;;  __awmod         1    5[COMRAM] unsigned char 
 45916 ;;  __awmod         1    4[COMRAM] unsigned char 
 45917 ;; Return value:  Size  Location     Type
 45918 ;;                  2    0[COMRAM] int 
 45919 ;; Registers used:
 45920 ;;		wreg, status,2, status,0
 45921 ;; Tracked objects:
 45922 ;;		On entry : 0/0
 45923 ;;		On exit  : 0/0
 45924 ;;		Unchanged: 0/0
 45925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45929 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45930 ;;Total ram usage:        6 bytes
 45931 ;; Hardware stack levels used:    1
 45932 ;; This function calls:
 45933 ;;		Nothing
 45934 ;; This function is called by:
 45935 ;;		i2_fround
 45936 ;;		i2_scale
 45937 ;; This function uses a non-reentrant model
 45938 ;;
 45939                           
 45940                           	psect	text135
 45941  019E90                     __ptext135:
 45942                           	opt stack 0
 45943  019E90                     i2___awmod:
 45944                           	opt stack 13
 45945                           
 45946                           ;incstack = 0
 45947  019E90  0E00               	movlw	0
 45948  019E92  6E06               	movwf	i2___awmod@sign,c
 45949  019E94  AE02               	btfss	i2___awmod@dividend+1,7,c
 45950  019E96  D006               	goto	i2l2320
 45951  019E98  6C01               	negf	i2___awmod@dividend,c
 45952  019E9A  1E02               	comf	i2___awmod@dividend+1,f,c
 45953  019E9C  B0D8               	btfsc	status,0,c
 45954  019E9E  2A02               	incf	i2___awmod@dividend+1,f,c
 45955  019EA0  0E01               	movlw	1
 45956  019EA2  6E06               	movwf	i2___awmod@sign,c
 45957  019EA4                     i2l2320:
 45958  019EA4  AE04               	btfss	i2___awmod@divisor+1,7,c
 45959  019EA6  D004               	goto	i2l2321
 45960  019EA8  6C03               	negf	i2___awmod@divisor,c
 45961  019EAA  1E04               	comf	i2___awmod@divisor+1,f,c
 45962  019EAC  B0D8               	btfsc	status,0,c
 45963  019EAE  2A04               	incf	i2___awmod@divisor+1,f,c
 45964  019EB0                     i2l2321:
 45965  019EB0  5003               	movf	i2___awmod@divisor,w,c
 45966  019EB2  1004               	iorwf	i2___awmod@divisor+1,w,c
 45967  019EB4  B4D8               	btfsc	status,2,c
 45968  019EB6  D018               	goto	i2l2328
 45969  019EB8  0E01               	movlw	1
 45970  019EBA  6E05               	movwf	i2___awmod@counter,c
 45971  019EBC  D004               	goto	i2l2323
 45972  019EBE  90D8               	bcf	status,0,c
 45973  019EC0  3603               	rlcf	i2___awmod@divisor,f,c
 45974  019EC2  3604               	rlcf	i2___awmod@divisor+1,f,c
 45975  019EC4  2A05               	incf	i2___awmod@counter,f,c
 45976  019EC6                     i2l2323:
 45977  019EC6  AE04               	btfss	i2___awmod@divisor+1,7,c
 45978  019EC8  D7FA               	goto	i2l2324
 45979  019ECA                     i2u1977_40:
 45980  019ECA  5003               	movf	i2___awmod@divisor,w,c
 45981  019ECC  5C01               	subwf	i2___awmod@dividend,w,c
 45982  019ECE  5004               	movf	i2___awmod@divisor+1,w,c
 45983  019ED0  5802               	subwfb	i2___awmod@dividend+1,w,c
 45984  019ED2  A0D8               	btfss	status,0,c
 45985  019ED4  D004               	goto	i2l2327
 45986  019ED6  5003               	movf	i2___awmod@divisor,w,c
 45987  019ED8  5E01               	subwf	i2___awmod@dividend,f,c
 45988  019EDA  5004               	movf	i2___awmod@divisor+1,w,c
 45989  019EDC  5A02               	subwfb	i2___awmod@dividend+1,f,c
 45990  019EDE                     i2l2327:
 45991  019EDE  90D8               	bcf	status,0,c
 45992  019EE0  3204               	rrcf	i2___awmod@divisor+1,f,c
 45993  019EE2  3203               	rrcf	i2___awmod@divisor,f,c
 45994  019EE4  2E05               	decfsz	i2___awmod@counter,f,c
 45995  019EE6  D7F1               	goto	i2u1977_40
 45996  019EE8                     i2l2328:
 45997  019EE8  5006               	movf	i2___awmod@sign,w,c
 45998  019EEA  B4D8               	btfsc	status,2,c
 45999  019EEC  D004               	goto	i2l2329
 46000  019EEE  6C01               	negf	i2___awmod@dividend,c
 46001  019EF0  1E02               	comf	i2___awmod@dividend+1,f,c
 46002  019EF2  B0D8               	btfsc	status,0,c
 46003  019EF4  2A02               	incf	i2___awmod@dividend+1,f,c
 46004  019EF6                     i2l2329:
 46005  019EF6  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 46006  019EFA  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 46007  019EFE  0012               	return	
 46008  019F00                     __end_ofi2___awmod:
 46009                           	opt stack 0
 46010                           tosu	equ	0xFFF
 46011                           tosh	equ	0xFFE
 46012                           tosl	equ	0xFFD
 46013                           pclatu	equ	0xFFB
 46014                           pclath	equ	0xFFA
 46015                           tblptru	equ	0xFF8
 46016                           tblptrh	equ	0xFF7
 46017                           tblptrl	equ	0xFF6
 46018                           tablat	equ	0xFF5
 46019                           prodh	equ	0xFF4
 46020                           prodl	equ	0xFF3
 46021                           intcon	equ	0xFF2
 46022                           indf0	equ	0xFEF
 46023                           postinc0	equ	0xFEE
 46024                           fsr0h	equ	0xFEA
 46025                           fsr0l	equ	0xFE9
 46026                           wreg	equ	0xFE8
 46027                           indf1	equ	0xFE7
 46028                           postdec1	equ	0xFE5
 46029                           plusw1	equ	0xFE3
 46030                           fsr1h	equ	0xFE2
 46031                           fsr1l	equ	0xFE1
 46032                           bsr	equ	0xFE0
 46033                           indf2	equ	0xFDF
 46034                           postinc2	equ	0xFDE
 46035                           postdec2	equ	0xFDD
 46036                           plusw2	equ	0xFDB
 46037                           fsr2h	equ	0xFDA
 46038                           fsr2l	equ	0xFD9
 46039                           status	equ	0xFD8
 46040                           
 46041 ;; *************** function i2___awdiv *****************
 46042 ;; Defined at:
 46043 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 46044 ;; Parameters:    Size  Location     Type
 46045 ;;  dividend        2    6[COMRAM] int 
 46046 ;;  divisor         2    8[COMRAM] int 
 46047 ;; Auto vars:     Size  Location     Type
 46048 ;;  __awdiv         2   12[COMRAM] int 
 46049 ;;  __awdiv         1   11[COMRAM] unsigned char 
 46050 ;;  __awdiv         1   10[COMRAM] unsigned char 
 46051 ;; Return value:  Size  Location     Type
 46052 ;;                  2    6[COMRAM] int 
 46053 ;; Registers used:
 46054 ;;		wreg, status,2, status,0
 46055 ;; Tracked objects:
 46056 ;;		On entry : 0/0
 46057 ;;		On exit  : 0/0
 46058 ;;		Unchanged: 0/0
 46059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46061 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46063 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46064 ;;Total ram usage:        8 bytes
 46065 ;; Hardware stack levels used:    1
 46066 ;; This function calls:
 46067 ;;		Nothing
 46068 ;; This function is called by:
 46069 ;;		i2_fround
 46070 ;;		i2_scale
 46071 ;;		i2__doprnt
 46072 ;; This function uses a non-reentrant model
 46073 ;;
 46074                           
 46075                           	psect	text136
 46076  019BA0                     __ptext136:
 46077                           	opt stack 0
 46078  019BA0                     i2___awdiv:
 46079                           	opt stack 13
 46080                           
 46081                           ;incstack = 0
 46082  019BA0  0E00               	movlw	0
 46083  019BA2  6E0C               	movwf	i2___awdiv@sign,c
 46084  019BA4  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 46085  019BA6  D006               	goto	i2l2307
 46086  019BA8  6C09               	negf	i2___awdiv@divisor,c
 46087  019BAA  1E0A               	comf	i2___awdiv@divisor+1,f,c
 46088  019BAC  B0D8               	btfsc	status,0,c
 46089  019BAE  2A0A               	incf	i2___awdiv@divisor+1,f,c
 46090  019BB0  0E01               	movlw	1
 46091  019BB2  6E0C               	movwf	i2___awdiv@sign,c
 46092  019BB4                     i2l2307:
 46093  019BB4  AE08               	btfss	i2___awdiv@dividend+1,7,c
 46094  019BB6  D006               	goto	i2l2308
 46095  019BB8  6C07               	negf	i2___awdiv@dividend,c
 46096  019BBA  1E08               	comf	i2___awdiv@dividend+1,f,c
 46097  019BBC  B0D8               	btfsc	status,0,c
 46098  019BBE  2A08               	incf	i2___awdiv@dividend+1,f,c
 46099  019BC0  0E01               	movlw	1
 46100  019BC2  1A0C               	xorwf	i2___awdiv@sign,f,c
 46101  019BC4                     i2l2308:
 46102  019BC4  0E00               	movlw	0
 46103  019BC6  6E0E               	movwf	i2___awdiv@quotient+1,c
 46104  019BC8  0E00               	movlw	0
 46105  019BCA  6E0D               	movwf	i2___awdiv@quotient,c
 46106  019BCC  5009               	movf	i2___awdiv@divisor,w,c
 46107  019BCE  100A               	iorwf	i2___awdiv@divisor+1,w,c
 46108  019BD0  B4D8               	btfsc	status,2,c
 46109  019BD2  D01C               	goto	i2l2315
 46110  019BD4  0E01               	movlw	1
 46111  019BD6  6E0B               	movwf	i2___awdiv@counter,c
 46112  019BD8  D004               	goto	i2l2310
 46113  019BDA  90D8               	bcf	status,0,c
 46114  019BDC  3609               	rlcf	i2___awdiv@divisor,f,c
 46115  019BDE  360A               	rlcf	i2___awdiv@divisor+1,f,c
 46116  019BE0  2A0B               	incf	i2___awdiv@counter,f,c
 46117  019BE2                     i2l2310:
 46118  019BE2  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 46119  019BE4  D7FA               	goto	i2l2311
 46120  019BE6                     i2u1971_40:
 46121  019BE6  90D8               	bcf	status,0,c
 46122  019BE8  360D               	rlcf	i2___awdiv@quotient,f,c
 46123  019BEA  360E               	rlcf	i2___awdiv@quotient+1,f,c
 46124  019BEC  5009               	movf	i2___awdiv@divisor,w,c
 46125  019BEE  5C07               	subwf	i2___awdiv@dividend,w,c
 46126  019BF0  500A               	movf	i2___awdiv@divisor+1,w,c
 46127  019BF2  5808               	subwfb	i2___awdiv@dividend+1,w,c
 46128  019BF4  A0D8               	btfss	status,0,c
 46129  019BF6  D005               	goto	i2l2314
 46130  019BF8  5009               	movf	i2___awdiv@divisor,w,c
 46131  019BFA  5E07               	subwf	i2___awdiv@dividend,f,c
 46132  019BFC  500A               	movf	i2___awdiv@divisor+1,w,c
 46133  019BFE  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 46134  019C00  800D               	bsf	i2___awdiv@quotient,0,c
 46135  019C02                     i2l2314:
 46136  019C02  90D8               	bcf	status,0,c
 46137  019C04  320A               	rrcf	i2___awdiv@divisor+1,f,c
 46138  019C06  3209               	rrcf	i2___awdiv@divisor,f,c
 46139  019C08  2E0B               	decfsz	i2___awdiv@counter,f,c
 46140  019C0A  D7ED               	goto	i2u1971_40
 46141  019C0C                     i2l2315:
 46142  019C0C  500C               	movf	i2___awdiv@sign,w,c
 46143  019C0E  B4D8               	btfsc	status,2,c
 46144  019C10  D004               	goto	i2l2316
 46145  019C12  6C0D               	negf	i2___awdiv@quotient,c
 46146  019C14  1E0E               	comf	i2___awdiv@quotient+1,f,c
 46147  019C16  B0D8               	btfsc	status,0,c
 46148  019C18  2A0E               	incf	i2___awdiv@quotient+1,f,c
 46149  019C1A                     i2l2316:
 46150  019C1A  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 46151  019C1E  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 46152  019C22  0012               	return	
 46153  019C24                     __end_ofi2___awdiv:
 46154                           	opt stack 0
 46155                           tosu	equ	0xFFF
 46156                           tosh	equ	0xFFE
 46157                           tosl	equ	0xFFD
 46158                           pclatu	equ	0xFFB
 46159                           pclath	equ	0xFFA
 46160                           tblptru	equ	0xFF8
 46161                           tblptrh	equ	0xFF7
 46162                           tblptrl	equ	0xFF6
 46163                           tablat	equ	0xFF5
 46164                           prodh	equ	0xFF4
 46165                           prodl	equ	0xFF3
 46166                           intcon	equ	0xFF2
 46167                           indf0	equ	0xFEF
 46168                           postinc0	equ	0xFEE
 46169                           fsr0h	equ	0xFEA
 46170                           fsr0l	equ	0xFE9
 46171                           wreg	equ	0xFE8
 46172                           indf1	equ	0xFE7
 46173                           postdec1	equ	0xFE5
 46174                           plusw1	equ	0xFE3
 46175                           fsr1h	equ	0xFE2
 46176                           fsr1l	equ	0xFE1
 46177                           bsr	equ	0xFE0
 46178                           indf2	equ	0xFDF
 46179                           postinc2	equ	0xFDE
 46180                           postdec2	equ	0xFDD
 46181                           plusw2	equ	0xFDB
 46182                           fsr2h	equ	0xFDA
 46183                           fsr2l	equ	0xFD9
 46184                           status	equ	0xFD8
 46185                           
 46186 ;; *************** function i2__tdiv_to_l_ *****************
 46187 ;; Defined at:
 46188 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 46189 ;; Parameters:    Size  Location     Type
 46190 ;;  f1              3    0[COMRAM] float 
 46191 ;;  f2              3    3[COMRAM] float 
 46192 ;; Auto vars:     Size  Location     Type
 46193 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 46194 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 46195 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 46196 ;; Return value:  Size  Location     Type
 46197 ;;                  4    0[COMRAM] unsigned long 
 46198 ;; Registers used:
 46199 ;;		wreg, status,2, status,0
 46200 ;; Tracked objects:
 46201 ;;		On entry : 0/0
 46202 ;;		On exit  : 0/0
 46203 ;;		Unchanged: 0/0
 46204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46205 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46206 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46207 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46208 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46209 ;;Total ram usage:       15 bytes
 46210 ;; Hardware stack levels used:    1
 46211 ;; This function calls:
 46212 ;;		Nothing
 46213 ;; This function is called by:
 46214 ;;		i2__doprnt
 46215 ;; This function uses a non-reentrant model
 46216 ;;
 46217                           
 46218                           	psect	text137
 46219  01881A                     __ptext137:
 46220                           	opt stack 0
 46221  01881A                     i2__tdiv_to_l_:
 46222                           	opt stack 14
 46223                           
 46224                           ;incstack = 0
 46225  01881A  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 46226  01881E  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 46227  018820  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 46228  018822  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 46229  018824  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 46230  018826  E301               	bnc	u2013_41
 46231  018828  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 46232  01882A                     u2013_41:
 46233  01882A  5007               	movf	??i2__tdiv_to_l_,w,c
 46234  01882C  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 46235  01882E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 46236  018830  A4D8               	btfss	status,2,c
 46237  018832  D009               	goto	i2l2455
 46238  018834  0E00               	movlw	0
 46239  018836  6E01               	movwf	?i2__tdiv_to_l_,c
 46240  018838  0E00               	movlw	0
 46241  01883A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46242  01883C  0E00               	movlw	0
 46243  01883E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46244  018840  0E00               	movlw	0
 46245  018842  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46246  018844  0012               	return	
 46247  018846                     i2l2455:
 46248  018846  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 46249  01884A  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 46250  01884C  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 46251  01884E  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 46252  018850  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 46253  018852  E301               	bnc	u2015_41
 46254  018854  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 46255  018856                     u2015_41:
 46256  018856  5007               	movf	??i2__tdiv_to_l_,w,c
 46257  018858  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 46258  01885A  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 46259  01885C  A4D8               	btfss	status,2,c
 46260  01885E  D009               	goto	i2l2457
 46261  018860  0E00               	movlw	0
 46262  018862  6E01               	movwf	?i2__tdiv_to_l_,c
 46263  018864  0E00               	movlw	0
 46264  018866  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46265  018868  0E00               	movlw	0
 46266  01886A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46267  01886C  0E00               	movlw	0
 46268  01886E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46269  018870  0012               	return	
 46270  018872                     i2l2457:
 46271  018872  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 46272  018874  0EFF               	movlw	255
 46273  018876  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 46274  018878  0EFF               	movlw	255
 46275  01887A  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 46276  01887C  0E00               	movlw	0
 46277  01887E  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 46278  018880  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 46279  018882  0EFF               	movlw	255
 46280  018884  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 46281  018886  0EFF               	movlw	255
 46282  018888  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 46283  01888A  0E00               	movlw	0
 46284  01888C  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 46285  01888E  0E00               	movlw	0
 46286  018890  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 46287  018892  0E00               	movlw	0
 46288  018894  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 46289  018896  0E00               	movlw	0
 46290  018898  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 46291  01889A  0E00               	movlw	0
 46292  01889C  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 46293  01889E  0E7F               	movlw	127
 46294  0188A0  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 46295  0188A2  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 46296  0188A4  0F98               	addlw	152
 46297  0188A6  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 46298  0188A8  0E18               	movlw	24
 46299  0188AA  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 46300  0188AC                     i2l2458:
 46301  0188AC  90D8               	bcf	status,0,c
 46302  0188AE  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 46303  0188B0  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 46304  0188B2  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 46305  0188B4  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 46306  0188B6  5004               	movf	i2__tdiv_to_l_@f2,w,c
 46307  0188B8  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 46308  0188BA  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 46309  0188BC  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 46310  0188BE  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 46311  0188C0  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 46312  0188C2  A0D8               	btfss	status,0,c
 46313  0188C4  D007               	goto	i2l2459
 46314  0188C6  5004               	movf	i2__tdiv_to_l_@f2,w,c
 46315  0188C8  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 46316  0188CA  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 46317  0188CC  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 46318  0188CE  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 46319  0188D0  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 46320  0188D2  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 46321  0188D4                     i2l2459:
 46322  0188D4  90D8               	bcf	status,0,c
 46323  0188D6  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 46324  0188D8  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 46325  0188DA  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 46326  0188DC  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 46327  0188DE  D7E6               	goto	i2l2458
 46328  0188E0  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 46329  0188E2  D016               	goto	i2l2461
 46330  0188E4  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 46331  0188E6  0A80               	xorlw	128
 46332  0188E8  0F97               	addlw	151
 46333  0188EA  B0D8               	btfsc	status,0,c
 46334  0188EC  D009               	goto	i2l2462
 46335  0188EE  0E00               	movlw	0
 46336  0188F0  6E01               	movwf	?i2__tdiv_to_l_,c
 46337  0188F2  0E00               	movlw	0
 46338  0188F4  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46339  0188F6  0E00               	movlw	0
 46340  0188F8  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46341  0188FA  0E00               	movlw	0
 46342  0188FC  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46343  0188FE  0012               	return	
 46344  018900                     i2l2462:
 46345  018900  90D8               	bcf	status,0,c
 46346  018902  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 46347  018904  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 46348  018906  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 46349  018908  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 46350  01890A  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 46351  01890C  D7F9               	goto	i2l2462
 46352  01890E  D015               	goto	i2u2021_40
 46353  018910                     i2l2461:
 46354  018910  0E17               	movlw	23
 46355  018912  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 46356  018914  D00F               	goto	i2l2467
 46357  018916  0E00               	movlw	0
 46358  018918  6E01               	movwf	?i2__tdiv_to_l_,c
 46359  01891A  0E00               	movlw	0
 46360  01891C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46361  01891E  0E00               	movlw	0
 46362  018920  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46363  018922  0E00               	movlw	0
 46364  018924  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46365  018926  0012               	return	
 46366  018928  90D8               	bcf	status,0,c
 46367  01892A  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 46368  01892C  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 46369  01892E  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 46370  018930  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 46371  018932  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 46372  018934                     i2l2467:
 46373  018934  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 46374  018936  A4D8               	btfss	status,2,c
 46375  018938  D7F7               	goto	i2l2468
 46376  01893A                     i2u2021_40:
 46377  01893A  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 46378  01893E  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 46379  018942  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 46380  018946  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 46381  01894A  0012               	return		;funcret
 46382  01894C                     __end_ofi2__tdiv_to_l_:
 46383                           	opt stack 0
 46384                           tosu	equ	0xFFF
 46385                           tosh	equ	0xFFE
 46386                           tosl	equ	0xFFD
 46387                           pclatu	equ	0xFFB
 46388                           pclath	equ	0xFFA
 46389                           tblptru	equ	0xFF8
 46390                           tblptrh	equ	0xFF7
 46391                           tblptrl	equ	0xFF6
 46392                           tablat	equ	0xFF5
 46393                           prodh	equ	0xFF4
 46394                           prodl	equ	0xFF3
 46395                           intcon	equ	0xFF2
 46396                           indf0	equ	0xFEF
 46397                           postinc0	equ	0xFEE
 46398                           fsr0h	equ	0xFEA
 46399                           fsr0l	equ	0xFE9
 46400                           wreg	equ	0xFE8
 46401                           indf1	equ	0xFE7
 46402                           postdec1	equ	0xFE5
 46403                           plusw1	equ	0xFE3
 46404                           fsr1h	equ	0xFE2
 46405                           fsr1l	equ	0xFE1
 46406                           bsr	equ	0xFE0
 46407                           indf2	equ	0xFDF
 46408                           postinc2	equ	0xFDE
 46409                           postdec2	equ	0xFDD
 46410                           plusw2	equ	0xFDB
 46411                           fsr2h	equ	0xFDA
 46412                           fsr2l	equ	0xFD9
 46413                           status	equ	0xFD8
 46414                           
 46415 ;; *************** function i2__div_to_l_ *****************
 46416 ;; Defined at:
 46417 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 46418 ;; Parameters:    Size  Location     Type
 46419 ;;  f1              4    0[COMRAM] unsigned long 
 46420 ;;  f2              4    4[COMRAM] unsigned long 
 46421 ;; Auto vars:     Size  Location     Type
 46422 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 46423 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 46424 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 46425 ;; Return value:  Size  Location     Type
 46426 ;;                  4    0[COMRAM] unsigned long 
 46427 ;; Registers used:
 46428 ;;		wreg, status,2, status,0
 46429 ;; Tracked objects:
 46430 ;;		On entry : 0/0
 46431 ;;		On exit  : 0/0
 46432 ;;		Unchanged: 0/0
 46433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46434 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46435 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46437 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46438 ;;Total ram usage:       14 bytes
 46439 ;; Hardware stack levels used:    1
 46440 ;; This function calls:
 46441 ;;		Nothing
 46442 ;; This function is called by:
 46443 ;;		i2__doprnt
 46444 ;; This function uses a non-reentrant model
 46445 ;;
 46446                           
 46447                           	psect	text138
 46448  018A76                     __ptext138:
 46449                           	opt stack 0
 46450  018A76                     i2__div_to_l_:
 46451                           	opt stack 14
 46452                           
 46453                           ;incstack = 0
 46454  018A76  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 46455  018A78  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 46456  018A7A  6E0E               	movwf	i2__div_to_l_@exp1,c
 46457  018A7C  500E               	movf	i2__div_to_l_@exp1,w,c
 46458  018A7E  A4D8               	btfss	status,2,c
 46459  018A80  D009               	goto	i2l2351
 46460  018A82  0E00               	movlw	0
 46461  018A84  6E01               	movwf	?i2__div_to_l_,c
 46462  018A86  0E00               	movlw	0
 46463  018A88  6E02               	movwf	?i2__div_to_l_+1,c
 46464  018A8A  0E00               	movlw	0
 46465  018A8C  6E03               	movwf	?i2__div_to_l_+2,c
 46466  018A8E  0E00               	movlw	0
 46467  018A90  6E04               	movwf	?i2__div_to_l_+3,c
 46468  018A92  0012               	return	
 46469  018A94                     i2l2351:
 46470  018A94  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 46471  018A96  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 46472  018A98  6E0D               	movwf	i2__div_to_l_@cntr,c
 46473  018A9A  500D               	movf	i2__div_to_l_@cntr,w,c
 46474  018A9C  A4D8               	btfss	status,2,c
 46475  018A9E  D009               	goto	i2l2353
 46476  018AA0  0E00               	movlw	0
 46477  018AA2  6E01               	movwf	?i2__div_to_l_,c
 46478  018AA4  0E00               	movlw	0
 46479  018AA6  6E02               	movwf	?i2__div_to_l_+1,c
 46480  018AA8  0E00               	movlw	0
 46481  018AAA  6E03               	movwf	?i2__div_to_l_+2,c
 46482  018AAC  0E00               	movlw	0
 46483  018AAE  6E04               	movwf	?i2__div_to_l_+3,c
 46484  018AB0  0012               	return	
 46485  018AB2                     i2l2353:
 46486  018AB2  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 46487  018AB4  0EFF               	movlw	255
 46488  018AB6  1601               	andwf	i2__div_to_l_@f1,f,c
 46489  018AB8  0EFF               	movlw	255
 46490  018ABA  1602               	andwf	i2__div_to_l_@f1+1,f,c
 46491  018ABC  0EFF               	movlw	255
 46492  018ABE  1603               	andwf	i2__div_to_l_@f1+2,f,c
 46493  018AC0  0E00               	movlw	0
 46494  018AC2  1604               	andwf	i2__div_to_l_@f1+3,f,c
 46495  018AC4  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 46496  018AC6  0EFF               	movlw	255
 46497  018AC8  1605               	andwf	i2__div_to_l_@f2,f,c
 46498  018ACA  0EFF               	movlw	255
 46499  018ACC  1606               	andwf	i2__div_to_l_@f2+1,f,c
 46500  018ACE  0EFF               	movlw	255
 46501  018AD0  1607               	andwf	i2__div_to_l_@f2+2,f,c
 46502  018AD2  0E00               	movlw	0
 46503  018AD4  1608               	andwf	i2__div_to_l_@f2+3,f,c
 46504  018AD6  0E00               	movlw	0
 46505  018AD8  6E09               	movwf	i2__div_to_l_@quot,c
 46506  018ADA  0E00               	movlw	0
 46507  018ADC  6E0A               	movwf	i2__div_to_l_@quot+1,c
 46508  018ADE  0E00               	movlw	0
 46509  018AE0  6E0B               	movwf	i2__div_to_l_@quot+2,c
 46510  018AE2  0E00               	movlw	0
 46511  018AE4  6E0C               	movwf	i2__div_to_l_@quot+3,c
 46512  018AE6  0E7F               	movlw	127
 46513  018AE8  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 46514  018AEA  500D               	movf	i2__div_to_l_@cntr,w,c
 46515  018AEC  0FA0               	addlw	160
 46516  018AEE  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 46517  018AF0  0E20               	movlw	32
 46518  018AF2  6E0D               	movwf	i2__div_to_l_@cntr,c
 46519  018AF4  90D8               	bcf	status,0,c
 46520  018AF6  3609               	rlcf	i2__div_to_l_@quot,f,c
 46521  018AF8  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 46522  018AFA  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 46523  018AFC  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 46524  018AFE  5005               	movf	i2__div_to_l_@f2,w,c
 46525  018B00  5C01               	subwf	i2__div_to_l_@f1,w,c
 46526  018B02  5006               	movf	i2__div_to_l_@f2+1,w,c
 46527  018B04  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 46528  018B06  5007               	movf	i2__div_to_l_@f2+2,w,c
 46529  018B08  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 46530  018B0A  5008               	movf	i2__div_to_l_@f2+3,w,c
 46531  018B0C  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 46532  018B0E  A0D8               	btfss	status,0,c
 46533  018B10  D009               	goto	i2l2355
 46534  018B12  5005               	movf	i2__div_to_l_@f2,w,c
 46535  018B14  5E01               	subwf	i2__div_to_l_@f1,f,c
 46536  018B16  5006               	movf	i2__div_to_l_@f2+1,w,c
 46537  018B18  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 46538  018B1A  5007               	movf	i2__div_to_l_@f2+2,w,c
 46539  018B1C  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 46540  018B1E  5008               	movf	i2__div_to_l_@f2+3,w,c
 46541  018B20  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 46542  018B22  8009               	bsf	i2__div_to_l_@quot,0,c
 46543  018B24                     i2l2355:
 46544  018B24  90D8               	bcf	status,0,c
 46545  018B26  3601               	rlcf	i2__div_to_l_@f1,f,c
 46546  018B28  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 46547  018B2A  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 46548  018B2C  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 46549  018B2E  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 46550  018B30  D7E1               	goto	i2l2354
 46551  018B32  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 46552  018B34  D016               	goto	i2l2357
 46553  018B36  500E               	movf	i2__div_to_l_@exp1,w,c
 46554  018B38  0A80               	xorlw	128
 46555  018B3A  0F9F               	addlw	159
 46556  018B3C  B0D8               	btfsc	status,0,c
 46557  018B3E  D009               	goto	i2l2358
 46558  018B40  0E00               	movlw	0
 46559  018B42  6E01               	movwf	?i2__div_to_l_,c
 46560  018B44  0E00               	movlw	0
 46561  018B46  6E02               	movwf	?i2__div_to_l_+1,c
 46562  018B48  0E00               	movlw	0
 46563  018B4A  6E03               	movwf	?i2__div_to_l_+2,c
 46564  018B4C  0E00               	movlw	0
 46565  018B4E  6E04               	movwf	?i2__div_to_l_+3,c
 46566  018B50  0012               	return	
 46567  018B52                     i2l2358:
 46568  018B52  90D8               	bcf	status,0,c
 46569  018B54  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 46570  018B56  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 46571  018B58  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 46572  018B5A  3209               	rrcf	i2__div_to_l_@quot,f,c
 46573  018B5C  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 46574  018B5E  D7F9               	goto	i2l2358
 46575  018B60  D015               	goto	i2u2012_40
 46576  018B62                     i2l2357:
 46577  018B62  0E1F               	movlw	31
 46578  018B64  640E               	cpfsgt	i2__div_to_l_@exp1,c
 46579  018B66  D00F               	goto	i2l2363
 46580  018B68  0E00               	movlw	0
 46581  018B6A  6E01               	movwf	?i2__div_to_l_,c
 46582  018B6C  0E00               	movlw	0
 46583  018B6E  6E02               	movwf	?i2__div_to_l_+1,c
 46584  018B70  0E00               	movlw	0
 46585  018B72  6E03               	movwf	?i2__div_to_l_+2,c
 46586  018B74  0E00               	movlw	0
 46587  018B76  6E04               	movwf	?i2__div_to_l_+3,c
 46588  018B78  0012               	return	
 46589  018B7A  90D8               	bcf	status,0,c
 46590  018B7C  3609               	rlcf	i2__div_to_l_@quot,f,c
 46591  018B7E  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 46592  018B80  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 46593  018B82  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 46594  018B84  060E               	decf	i2__div_to_l_@exp1,f,c
 46595  018B86                     i2l2363:
 46596  018B86  500E               	movf	i2__div_to_l_@exp1,w,c
 46597  018B88  A4D8               	btfss	status,2,c
 46598  018B8A  D7F7               	goto	i2l2364
 46599  018B8C                     i2u2012_40:
 46600  018B8C  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 46601  018B90  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 46602  018B94  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 46603  018B98  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 46604  018B9C  0012               	return		;funcret
 46605  018B9E                     __end_ofi2__div_to_l_:
 46606                           	opt stack 0
 46607                           tosu	equ	0xFFF
 46608                           tosh	equ	0xFFE
 46609                           tosl	equ	0xFFD
 46610                           pclatu	equ	0xFFB
 46611                           pclath	equ	0xFFA
 46612                           tblptru	equ	0xFF8
 46613                           tblptrh	equ	0xFF7
 46614                           tblptrl	equ	0xFF6
 46615                           tablat	equ	0xFF5
 46616                           prodh	equ	0xFF4
 46617                           prodl	equ	0xFF3
 46618                           intcon	equ	0xFF2
 46619                           indf0	equ	0xFEF
 46620                           postinc0	equ	0xFEE
 46621                           fsr0h	equ	0xFEA
 46622                           fsr0l	equ	0xFE9
 46623                           wreg	equ	0xFE8
 46624                           indf1	equ	0xFE7
 46625                           postdec1	equ	0xFE5
 46626                           plusw1	equ	0xFE3
 46627                           fsr1h	equ	0xFE2
 46628                           fsr1l	equ	0xFE1
 46629                           bsr	equ	0xFE0
 46630                           indf2	equ	0xFDF
 46631                           postinc2	equ	0xFDE
 46632                           postdec2	equ	0xFDD
 46633                           plusw2	equ	0xFDB
 46634                           fsr2h	equ	0xFDA
 46635                           fsr2l	equ	0xFD9
 46636                           status	equ	0xFD8
 46637                           
 46638 ;; *************** function i2___wmul *****************
 46639 ;; Defined at:
 46640 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 46641 ;; Parameters:    Size  Location     Type
 46642 ;;  multiplier      2    0[COMRAM] unsigned int 
 46643 ;;  multiplicand    2    2[COMRAM] unsigned int 
 46644 ;; Auto vars:     Size  Location     Type
 46645 ;;  __wmul          2    4[COMRAM] unsigned int 
 46646 ;; Return value:  Size  Location     Type
 46647 ;;                  2    0[COMRAM] unsigned int 
 46648 ;; Registers used:
 46649 ;;		wreg, status,2, status,0, prodl, prodh
 46650 ;; Tracked objects:
 46651 ;;		On entry : 0/0
 46652 ;;		On exit  : 0/0
 46653 ;;		Unchanged: 0/0
 46654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46656 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46658 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46659 ;;Total ram usage:        6 bytes
 46660 ;; Hardware stack levels used:    1
 46661 ;; This function calls:
 46662 ;;		Nothing
 46663 ;; This function is called by:
 46664 ;;		i2__doprnt
 46665 ;; This function uses a non-reentrant model
 46666 ;;
 46667                           
 46668                           	psect	text139
 46669  01AE54                     __ptext139:
 46670                           	opt stack 0
 46671  01AE54                     i2___wmul:
 46672                           	opt stack 14
 46673                           
 46674                           ;incstack = 0
 46675  01AE54  5001               	movf	i2___wmul@multiplier,w,c
 46676  01AE56  0203               	mulwf	i2___wmul@multiplicand,c
 46677  01AE58  CFF3 F005          	movff	prodl,i2___wmul@product
 46678  01AE5C  CFF4 F006          	movff	prodh,i2___wmul@product+1
 46679  01AE60  5001               	movf	i2___wmul@multiplier,w,c
 46680  01AE62  0204               	mulwf	i2___wmul@multiplicand+1,c
 46681  01AE64  50F3               	movf	prodl,w,c
 46682  01AE66  2606               	addwf	i2___wmul@product+1,f,c
 46683  01AE68  5002               	movf	i2___wmul@multiplier+1,w,c
 46684  01AE6A  0203               	mulwf	i2___wmul@multiplicand,c
 46685  01AE6C  50F3               	movf	prodl,w,c
 46686  01AE6E  2606               	addwf	i2___wmul@product+1,f,c
 46687  01AE70  C005  F001         	movff	i2___wmul@product,?i2___wmul
 46688  01AE74  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 46689  01AE78  0012               	return	
 46690  01AE7A                     __end_ofi2___wmul:
 46691                           	opt stack 0
 46692                           tosu	equ	0xFFF
 46693                           tosh	equ	0xFFE
 46694                           tosl	equ	0xFFD
 46695                           pclatu	equ	0xFFB
 46696                           pclath	equ	0xFFA
 46697                           tblptru	equ	0xFF8
 46698                           tblptrh	equ	0xFF7
 46699                           tblptrl	equ	0xFF6
 46700                           tablat	equ	0xFF5
 46701                           prodh	equ	0xFF4
 46702                           prodl	equ	0xFF3
 46703                           intcon	equ	0xFF2
 46704                           indf0	equ	0xFEF
 46705                           postinc0	equ	0xFEE
 46706                           fsr0h	equ	0xFEA
 46707                           fsr0l	equ	0xFE9
 46708                           wreg	equ	0xFE8
 46709                           indf1	equ	0xFE7
 46710                           postdec1	equ	0xFE5
 46711                           plusw1	equ	0xFE3
 46712                           fsr1h	equ	0xFE2
 46713                           fsr1l	equ	0xFE1
 46714                           bsr	equ	0xFE0
 46715                           indf2	equ	0xFDF
 46716                           postinc2	equ	0xFDE
 46717                           postdec2	equ	0xFDD
 46718                           plusw2	equ	0xFDB
 46719                           fsr2h	equ	0xFDA
 46720                           fsr2l	equ	0xFD9
 46721                           status	equ	0xFD8
 46722                           
 46723 ;; *************** function i2___llmod *****************
 46724 ;; Defined at:
 46725 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 46726 ;; Parameters:    Size  Location     Type
 46727 ;;  dividend        4   13[COMRAM] unsigned long 
 46728 ;;  divisor         4   17[COMRAM] unsigned long 
 46729 ;; Auto vars:     Size  Location     Type
 46730 ;;  __llmod         1   21[COMRAM] unsigned char 
 46731 ;; Return value:  Size  Location     Type
 46732 ;;                  4   13[COMRAM] unsigned long 
 46733 ;; Registers used:
 46734 ;;		wreg, status,2, status,0
 46735 ;; Tracked objects:
 46736 ;;		On entry : 0/0
 46737 ;;		On exit  : 0/0
 46738 ;;		Unchanged: 0/0
 46739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46740 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46743 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46744 ;;Total ram usage:        9 bytes
 46745 ;; Hardware stack levels used:    1
 46746 ;; This function calls:
 46747 ;;		Nothing
 46748 ;; This function is called by:
 46749 ;;		i2__doprnt
 46750 ;; This function uses a non-reentrant model
 46751 ;;
 46752                           
 46753                           	psect	text140
 46754  01A10E                     __ptext140:
 46755                           	opt stack 0
 46756  01A10E                     i2___llmod:
 46757                           	opt stack 14
 46758                           
 46759                           ;incstack = 0
 46760  01A10E  5012               	movf	i2___llmod@divisor,w,c
 46761  01A110  1013               	iorwf	i2___llmod@divisor+1,w,c
 46762  01A112  1014               	iorwf	i2___llmod@divisor+2,w,c
 46763  01A114  1015               	iorwf	i2___llmod@divisor+3,w,c
 46764  01A116  B4D8               	btfsc	status,2,c
 46765  01A118  D024               	goto	i2l2578
 46766  01A11A  0E01               	movlw	1
 46767  01A11C  6E16               	movwf	i2___llmod@counter,c
 46768  01A11E  D006               	goto	i2l2573
 46769  01A120  90D8               	bcf	status,0,c
 46770  01A122  3612               	rlcf	i2___llmod@divisor,f,c
 46771  01A124  3613               	rlcf	i2___llmod@divisor+1,f,c
 46772  01A126  3614               	rlcf	i2___llmod@divisor+2,f,c
 46773  01A128  3615               	rlcf	i2___llmod@divisor+3,f,c
 46774  01A12A  2A16               	incf	i2___llmod@counter,f,c
 46775  01A12C                     i2l2573:
 46776  01A12C  AE15               	btfss	i2___llmod@divisor+3,7,c
 46777  01A12E  D7F8               	goto	i2l2574
 46778  01A130                     i2u2028_40:
 46779  01A130  5012               	movf	i2___llmod@divisor,w,c
 46780  01A132  5C0E               	subwf	i2___llmod@dividend,w,c
 46781  01A134  5013               	movf	i2___llmod@divisor+1,w,c
 46782  01A136  580F               	subwfb	i2___llmod@dividend+1,w,c
 46783  01A138  5014               	movf	i2___llmod@divisor+2,w,c
 46784  01A13A  5810               	subwfb	i2___llmod@dividend+2,w,c
 46785  01A13C  5015               	movf	i2___llmod@divisor+3,w,c
 46786  01A13E  5811               	subwfb	i2___llmod@dividend+3,w,c
 46787  01A140  A0D8               	btfss	status,0,c
 46788  01A142  D008               	goto	i2l2577
 46789  01A144  5012               	movf	i2___llmod@divisor,w,c
 46790  01A146  5E0E               	subwf	i2___llmod@dividend,f,c
 46791  01A148  5013               	movf	i2___llmod@divisor+1,w,c
 46792  01A14A  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 46793  01A14C  5014               	movf	i2___llmod@divisor+2,w,c
 46794  01A14E  5A10               	subwfb	i2___llmod@dividend+2,f,c
 46795  01A150  5015               	movf	i2___llmod@divisor+3,w,c
 46796  01A152  5A11               	subwfb	i2___llmod@dividend+3,f,c
 46797  01A154                     i2l2577:
 46798  01A154  90D8               	bcf	status,0,c
 46799  01A156  3215               	rrcf	i2___llmod@divisor+3,f,c
 46800  01A158  3214               	rrcf	i2___llmod@divisor+2,f,c
 46801  01A15A  3213               	rrcf	i2___llmod@divisor+1,f,c
 46802  01A15C  3212               	rrcf	i2___llmod@divisor,f,c
 46803  01A15E  2E16               	decfsz	i2___llmod@counter,f,c
 46804  01A160  D7E7               	goto	i2u2028_40
 46805  01A162                     i2l2578:
 46806  01A162  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 46807  01A166  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 46808  01A16A  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 46809  01A16E  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 46810  01A172  0012               	return		;funcret
 46811  01A174                     __end_ofi2___llmod:
 46812                           	opt stack 0
 46813                           tosu	equ	0xFFF
 46814                           tosh	equ	0xFFE
 46815                           tosl	equ	0xFFD
 46816                           pclatu	equ	0xFFB
 46817                           pclath	equ	0xFFA
 46818                           tblptru	equ	0xFF8
 46819                           tblptrh	equ	0xFF7
 46820                           tblptrl	equ	0xFF6
 46821                           tablat	equ	0xFF5
 46822                           prodh	equ	0xFF4
 46823                           prodl	equ	0xFF3
 46824                           intcon	equ	0xFF2
 46825                           indf0	equ	0xFEF
 46826                           postinc0	equ	0xFEE
 46827                           fsr0h	equ	0xFEA
 46828                           fsr0l	equ	0xFE9
 46829                           wreg	equ	0xFE8
 46830                           indf1	equ	0xFE7
 46831                           postdec1	equ	0xFE5
 46832                           plusw1	equ	0xFE3
 46833                           fsr1h	equ	0xFE2
 46834                           fsr1l	equ	0xFE1
 46835                           bsr	equ	0xFE0
 46836                           indf2	equ	0xFDF
 46837                           postinc2	equ	0xFDE
 46838                           postdec2	equ	0xFDD
 46839                           plusw2	equ	0xFDB
 46840                           fsr2h	equ	0xFDA
 46841                           fsr2l	equ	0xFD9
 46842                           status	equ	0xFD8
 46843                           
 46844 ;; *************** function i2___lldiv *****************
 46845 ;; Defined at:
 46846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 46847 ;; Parameters:    Size  Location     Type
 46848 ;;  dividend        4    0[COMRAM] unsigned long 
 46849 ;;  divisor         4    4[COMRAM] unsigned long 
 46850 ;; Auto vars:     Size  Location     Type
 46851 ;;  __lldiv         4    8[COMRAM] unsigned long 
 46852 ;;  __lldiv         1   12[COMRAM] unsigned char 
 46853 ;; Return value:  Size  Location     Type
 46854 ;;                  4    0[COMRAM] unsigned long 
 46855 ;; Registers used:
 46856 ;;		wreg, status,2, status,0
 46857 ;; Tracked objects:
 46858 ;;		On entry : 0/0
 46859 ;;		On exit  : 0/0
 46860 ;;		Unchanged: 0/0
 46861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46862 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46863 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46865 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46866 ;;Total ram usage:       13 bytes
 46867 ;; Hardware stack levels used:    1
 46868 ;; This function calls:
 46869 ;;		Nothing
 46870 ;; This function is called by:
 46871 ;;		i2__doprnt
 46872 ;; This function uses a non-reentrant model
 46873 ;;
 46874                           
 46875                           	psect	text141
 46876  019CA6                     __ptext141:
 46877                           	opt stack 0
 46878  019CA6                     i2___lldiv:
 46879                           	opt stack 14
 46880                           
 46881                           ;incstack = 0
 46882  019CA6  0E00               	movlw	0
 46883  019CA8  6E09               	movwf	i2___lldiv@quotient,c
 46884  019CAA  0E00               	movlw	0
 46885  019CAC  6E0A               	movwf	i2___lldiv@quotient+1,c
 46886  019CAE  0E00               	movlw	0
 46887  019CB0  6E0B               	movwf	i2___lldiv@quotient+2,c
 46888  019CB2  0E00               	movlw	0
 46889  019CB4  6E0C               	movwf	i2___lldiv@quotient+3,c
 46890  019CB6  5005               	movf	i2___lldiv@divisor,w,c
 46891  019CB8  1006               	iorwf	i2___lldiv@divisor+1,w,c
 46892  019CBA  1007               	iorwf	i2___lldiv@divisor+2,w,c
 46893  019CBC  1008               	iorwf	i2___lldiv@divisor+3,w,c
 46894  019CBE  B4D8               	btfsc	status,2,c
 46895  019CC0  D02A               	goto	i2l2568
 46896  019CC2  0E01               	movlw	1
 46897  019CC4  6E0D               	movwf	i2___lldiv@counter,c
 46898  019CC6  D006               	goto	i2l2563
 46899  019CC8  90D8               	bcf	status,0,c
 46900  019CCA  3605               	rlcf	i2___lldiv@divisor,f,c
 46901  019CCC  3606               	rlcf	i2___lldiv@divisor+1,f,c
 46902  019CCE  3607               	rlcf	i2___lldiv@divisor+2,f,c
 46903  019CD0  3608               	rlcf	i2___lldiv@divisor+3,f,c
 46904  019CD2  2A0D               	incf	i2___lldiv@counter,f,c
 46905  019CD4                     i2l2563:
 46906  019CD4  AE08               	btfss	i2___lldiv@divisor+3,7,c
 46907  019CD6  D7F8               	goto	i2l2564
 46908  019CD8                     i2u2025_40:
 46909  019CD8  90D8               	bcf	status,0,c
 46910  019CDA  3609               	rlcf	i2___lldiv@quotient,f,c
 46911  019CDC  360A               	rlcf	i2___lldiv@quotient+1,f,c
 46912  019CDE  360B               	rlcf	i2___lldiv@quotient+2,f,c
 46913  019CE0  360C               	rlcf	i2___lldiv@quotient+3,f,c
 46914  019CE2  5005               	movf	i2___lldiv@divisor,w,c
 46915  019CE4  5C01               	subwf	i2___lldiv@dividend,w,c
 46916  019CE6  5006               	movf	i2___lldiv@divisor+1,w,c
 46917  019CE8  5802               	subwfb	i2___lldiv@dividend+1,w,c
 46918  019CEA  5007               	movf	i2___lldiv@divisor+2,w,c
 46919  019CEC  5803               	subwfb	i2___lldiv@dividend+2,w,c
 46920  019CEE  5008               	movf	i2___lldiv@divisor+3,w,c
 46921  019CF0  5804               	subwfb	i2___lldiv@dividend+3,w,c
 46922  019CF2  A0D8               	btfss	status,0,c
 46923  019CF4  D009               	goto	i2l2567
 46924  019CF6  5005               	movf	i2___lldiv@divisor,w,c
 46925  019CF8  5E01               	subwf	i2___lldiv@dividend,f,c
 46926  019CFA  5006               	movf	i2___lldiv@divisor+1,w,c
 46927  019CFC  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 46928  019CFE  5007               	movf	i2___lldiv@divisor+2,w,c
 46929  019D00  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 46930  019D02  5008               	movf	i2___lldiv@divisor+3,w,c
 46931  019D04  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 46932  019D06  8009               	bsf	i2___lldiv@quotient,0,c
 46933  019D08                     i2l2567:
 46934  019D08  90D8               	bcf	status,0,c
 46935  019D0A  3208               	rrcf	i2___lldiv@divisor+3,f,c
 46936  019D0C  3207               	rrcf	i2___lldiv@divisor+2,f,c
 46937  019D0E  3206               	rrcf	i2___lldiv@divisor+1,f,c
 46938  019D10  3205               	rrcf	i2___lldiv@divisor,f,c
 46939  019D12  2E0D               	decfsz	i2___lldiv@counter,f,c
 46940  019D14  D7E1               	goto	i2u2025_40
 46941  019D16                     i2l2568:
 46942  019D16  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 46943  019D1A  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 46944  019D1E  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 46945  019D22  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 46946  019D26  0012               	return		;funcret
 46947  019D28                     __end_ofi2___lldiv:
 46948                           	opt stack 0
 46949                           tosu	equ	0xFFF
 46950                           tosh	equ	0xFFE
 46951                           tosl	equ	0xFFD
 46952                           pclatu	equ	0xFFB
 46953                           pclath	equ	0xFFA
 46954                           tblptru	equ	0xFF8
 46955                           tblptrh	equ	0xFF7
 46956                           tblptrl	equ	0xFF6
 46957                           tablat	equ	0xFF5
 46958                           prodh	equ	0xFF4
 46959                           prodl	equ	0xFF3
 46960                           intcon	equ	0xFF2
 46961                           indf0	equ	0xFEF
 46962                           postinc0	equ	0xFEE
 46963                           fsr0h	equ	0xFEA
 46964                           fsr0l	equ	0xFE9
 46965                           wreg	equ	0xFE8
 46966                           indf1	equ	0xFE7
 46967                           postdec1	equ	0xFE5
 46968                           plusw1	equ	0xFE3
 46969                           fsr1h	equ	0xFE2
 46970                           fsr1l	equ	0xFE1
 46971                           bsr	equ	0xFE0
 46972                           indf2	equ	0xFDF
 46973                           postinc2	equ	0xFDE
 46974                           postdec2	equ	0xFDD
 46975                           plusw2	equ	0xFDB
 46976                           fsr2h	equ	0xFDA
 46977                           fsr2l	equ	0xFD9
 46978                           status	equ	0xFD8
 46979                           
 46980 ;; *************** function _ADCC_ThresholdISR *****************
 46981 ;; Defined at:
 46982 ;;		line 298 in file "mcc_generated_files/adcc.c"
 46983 ;; Parameters:    Size  Location     Type
 46984 ;;		None
 46985 ;; Auto vars:     Size  Location     Type
 46986 ;;		None
 46987 ;; Return value:  Size  Location     Type
 46988 ;;                  1    wreg      void 
 46989 ;; Registers used:
 46990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46991 ;; Tracked objects:
 46992 ;;		On entry : 0/0
 46993 ;;		On exit  : 0/0
 46994 ;;		Unchanged: 0/0
 46995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47000 ;;Total ram usage:        0 bytes
 47001 ;; Hardware stack levels used:    1
 47002 ;; Hardware stack levels required when called:    7
 47003 ;; This function calls:
 47004 ;;		Absolute function
 47005 ;;		_ADCC_DefaultInterruptHandler
 47006 ;;		_ADCPostProcessingCallback
 47007 ;; This function is called by:
 47008 ;;		_INTERRUPT_InterruptManagerHigh
 47009 ;; This function uses a non-reentrant model
 47010 ;;
 47011                           
 47012                           	psect	text142
 47013  01ADBA                     __ptext142:
 47014                           	opt stack 0
 47015  01ADBA                     _ADCC_ThresholdISR:
 47016                           	opt stack 10
 47017                           
 47018                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 47019                           
 47020                           ;incstack = 0
 47021  01ADBA  010E               	movlb	14	; () banked
 47022  01ADBC  9334               	bcf	52,1,b	;volatile
 47023                           
 47024                           ; BSR set to: 14
 47025                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 47026  01ADBE  0102               	movlb	2	; () banked
 47027  01ADC0  5147               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 47028  01ADC2  1148               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 47029  01ADC4  1149               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 47030  01ADC6  B4D8               	btfsc	status,2,c
 47031  01ADC8  0012               	return	
 47032                           
 47033                           ; BSR set to: 2
 47034                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 47035  01ADCA  D801               	call	i2u3335_48
 47036  01ADCC  0012               	return	
 47037  01ADCE                     i2u3335_48:
 47038  01ADCE  0005               	push	
 47039  01ADD0  6EFA               	movwf	pclath,c
 47040  01ADD2  5147               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 47041  01ADD4  6EFD               	movwf	tosl,c
 47042  01ADD6  5148               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 47043  01ADD8  6EFE               	movwf	tosh,c
 47044  01ADDA  5149               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 47045  01ADDC  6EFF               	movwf	tosu,c
 47046  01ADDE  50FA               	movf	pclath,w,c
 47047  01ADE0  0012               	return		;indir
 47048  01ADE2                     __end_of_ADCC_ThresholdISR:
 47049                           	opt stack 0
 47050                           tosu	equ	0xFFF
 47051                           tosh	equ	0xFFE
 47052                           tosl	equ	0xFFD
 47053                           pclatu	equ	0xFFB
 47054                           pclath	equ	0xFFA
 47055                           tblptru	equ	0xFF8
 47056                           tblptrh	equ	0xFF7
 47057                           tblptrl	equ	0xFF6
 47058                           tablat	equ	0xFF5
 47059                           prodh	equ	0xFF4
 47060                           prodl	equ	0xFF3
 47061                           intcon	equ	0xFF2
 47062                           indf0	equ	0xFEF
 47063                           postinc0	equ	0xFEE
 47064                           fsr0h	equ	0xFEA
 47065                           fsr0l	equ	0xFE9
 47066                           wreg	equ	0xFE8
 47067                           indf1	equ	0xFE7
 47068                           postdec1	equ	0xFE5
 47069                           plusw1	equ	0xFE3
 47070                           fsr1h	equ	0xFE2
 47071                           fsr1l	equ	0xFE1
 47072                           bsr	equ	0xFE0
 47073                           indf2	equ	0xFDF
 47074                           postinc2	equ	0xFDE
 47075                           postdec2	equ	0xFDD
 47076                           plusw2	equ	0xFDB
 47077                           fsr2h	equ	0xFDA
 47078                           fsr2l	equ	0xFD9
 47079                           status	equ	0xFD8
 47080                           
 47081 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 47082 ;; Defined at:
 47083 ;;		line 310 in file "mcc_generated_files/adcc.c"
 47084 ;; Parameters:    Size  Location     Type
 47085 ;;		None
 47086 ;; Auto vars:     Size  Location     Type
 47087 ;;		None
 47088 ;; Return value:  Size  Location     Type
 47089 ;;                  1    wreg      void 
 47090 ;; Registers used:
 47091 ;;		None
 47092 ;; Tracked objects:
 47093 ;;		On entry : 0/0
 47094 ;;		On exit  : 0/0
 47095 ;;		Unchanged: 0/0
 47096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47101 ;;Total ram usage:        0 bytes
 47102 ;; Hardware stack levels used:    1
 47103 ;; This function calls:
 47104 ;;		Nothing
 47105 ;; This function is called by:
 47106 ;;		_ADCC_Initialize
 47107 ;;		_ADCC_ThresholdISR
 47108 ;; This function uses a non-reentrant model
 47109 ;;
 47110                           
 47111                           	psect	text143
 47112  01B1F0                     __ptext143:
 47113                           	opt stack 0
 47114  01B1F0                     _ADCC_DefaultInterruptHandler:
 47115                           	opt stack 16
 47116                           
 47117                           ;incstack = 0
 47118  01B1F0  0012               	return		;funcret
 47119  01B1F2                     __end_of_ADCC_DefaultInterruptHandler:
 47120                           	opt stack 0
 47121                           tosu	equ	0xFFF
 47122                           tosh	equ	0xFFE
 47123                           tosl	equ	0xFFD
 47124                           pclatu	equ	0xFFB
 47125                           pclath	equ	0xFFA
 47126                           tblptru	equ	0xFF8
 47127                           tblptrh	equ	0xFF7
 47128                           tblptrl	equ	0xFF6
 47129                           tablat	equ	0xFF5
 47130                           prodh	equ	0xFF4
 47131                           prodl	equ	0xFF3
 47132                           intcon	equ	0xFF2
 47133                           indf0	equ	0xFEF
 47134                           postinc0	equ	0xFEE
 47135                           fsr0h	equ	0xFEA
 47136                           fsr0l	equ	0xFE9
 47137                           wreg	equ	0xFE8
 47138                           indf1	equ	0xFE7
 47139                           postdec1	equ	0xFE5
 47140                           plusw1	equ	0xFE3
 47141                           fsr1h	equ	0xFE2
 47142                           fsr1l	equ	0xFE1
 47143                           bsr	equ	0xFE0
 47144                           indf2	equ	0xFDF
 47145                           postinc2	equ	0xFDE
 47146                           postdec2	equ	0xFDD
 47147                           plusw2	equ	0xFDB
 47148                           fsr2h	equ	0xFDA
 47149                           fsr2l	equ	0xFD9
 47150                           status	equ	0xFD8
 47151                           
 47152 ;; *************** function _ADCPostProcessingCallback *****************
 47153 ;; Defined at:
 47154 ;;		line 231 in file "main.c"
 47155 ;; Parameters:    Size  Location     Type
 47156 ;;		None
 47157 ;; Auto vars:     Size  Location     Type
 47158 ;;  current_adc_    1  117[BANK0 ] enum E17551
 47159 ;; Return value:  Size  Location     Type
 47160 ;;                  1    wreg      void 
 47161 ;; Registers used:
 47162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47163 ;; Tracked objects:
 47164 ;;		On entry : 0/0
 47165 ;;		On exit  : 0/0
 47166 ;;		Unchanged: 0/0
 47167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47169 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47171 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47172 ;;Total ram usage:       21 bytes
 47173 ;; Hardware stack levels used:    1
 47174 ;; Hardware stack levels required when called:    6
 47175 ;; This function calls:
 47176 ;;		_ADCC_GetConversionResult
 47177 ;;		_ADCC_GetFilterValue
 47178 ;;		_ADCC_HasAccumulatorOverflowed
 47179 ;;		_ADCC_StopConversion
 47180 ;;		_abs
 47181 ;;		_currentMeasuredToPeak
 47182 ;;		_peakToRMS
 47183 ;;		i2_TMR7_StopTimer
 47184 ;;		i2___fladd
 47185 ;;		i2___fldiv
 47186 ;;		i2___flge
 47187 ;;		i2___flmul
 47188 ;;		i2___flneg
 47189 ;;		i2___fltol
 47190 ;;		i2___xxtofl
 47191 ;; This function is called by:
 47192 ;;		_main
 47193 ;;		_ADCC_ThresholdISR
 47194 ;; This function uses a non-reentrant model
 47195 ;;
 47196                           
 47197                           	psect	text144
 47198  014068                     __ptext144:
 47199                           	opt stack 0
 47200  014068                     _ADCPostProcessingCallback:
 47201                           	opt stack 10
 47202                           
 47203                           ;main.c: 234: ADCC_StopConversion();
 47204                           
 47205                           ;incstack = 0
 47206  014068  ECF0  F0D8         	call	_ADCC_StopConversion	;wreg free
 47207                           
 47208                           ;main.c: 237: adcc_channel_t current_adc_channel = ADPCH;
 47209  01406C  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 47210                           
 47211                           ;main.c: 240: switch (current_adc_channel) {
 47212  014070  EF88  F0A5         	goto	i2l1330
 47213  014074                     
 47214                           ;main.c: 244: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 47215  014074  EC3E  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 47216  014078  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 47217  01407C  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 47218  014080  6A07               	clrf	i2___xxtofl@val+2,c
 47219  014082  6A08               	clrf	i2___xxtofl@val+3,c
 47220  014084  0E00               	movlw	0
 47221  014086  EC91  F0C1         	call	i2___xxtofl
 47222  01408A  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 47223  01408E  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 47224  014092  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 47225  014096  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 47226  01409A  0E0D               	movlw	13
 47227  01409C  6E34               	movwf	i2___flmul@a,c
 47228  01409E  0E68               	movlw	104
 47229  0140A0  6E35               	movwf	i2___flmul@a+1,c
 47230  0140A2  0E53               	movlw	83
 47231  0140A4  6E36               	movwf	i2___flmul@a+2,c
 47232  0140A6  0E3B               	movlw	59
 47233  0140A8  6E37               	movwf	i2___flmul@a+3,c
 47234  0140AA  EC90  F0AD         	call	i2___flmul	;wreg free
 47235  0140AE  C030  F237         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 47236  0140B2  C031  F238         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 47237  0140B6  C032  F239         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 47238  0140BA  C033  F23A         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 47239                           
 47240                           ;main.c: 246: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 47241  0140BE  0E0A               	movlw	10
 47242  0140C0  6E34               	movwf	i2___flge@ff1,c
 47243  0140C2  0ED7               	movlw	215
 47244  0140C4  6E35               	movwf	i2___flge@ff1+1,c
 47245  0140C6  0E23               	movlw	35
 47246  0140C8  6E36               	movwf	i2___flge@ff1+2,c
 47247  0140CA  0E3C               	movlw	60
 47248  0140CC  6E37               	movwf	i2___flge@ff1+3,c
 47249  0140CE  C237  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 47250  0140D2  C238  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 47251  0140D6  C239  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 47252  0140DA  C23A  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 47253  0140DE  ECF2  F0C6         	call	i2___flge	;wreg free
 47254  0140E2  A0D8               	btfss	status,0,c
 47255  0140E4  D005               	goto	i2u2202_40
 47256  0140E6  ECBF  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47257  0140EA  0900               	iorlw	0
 47258  0140EC  B4D8               	btfsc	status,2,c
 47259  0140EE  D007               	goto	i2l1332
 47260  0140F0                     i2u2202_40:
 47261                           
 47262                           ;main.c: 248: LATFbits.LATF3 = 1;
 47263  0140F0  867E               	bsf	3966,3,c	;volatile
 47264                           
 47265                           ;main.c: 249: adc_error_flag = 1;
 47266  0140F2  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 47267                           
 47268                           ;main.c: 251: PIE5bits.TMR7IE = 0;
 47269  0140F4  010E               	movlb	14	; () banked
 47270  0140F6  9D2E               	bcf	46,6,b	;volatile
 47271                           
 47272                           ; BSR set to: 14
 47273                           ;main.c: 252: TMR7_StopTimer();
 47274  0140F8  ECE5  F0D8         	call	i2_TMR7_StopTimer	;wreg free
 47275                           
 47276                           ;main.c: 253: return;
 47277  0140FC  0012               	return	
 47278  0140FE                     i2l1332:
 47279                           
 47280                           ;main.c: 255: }
 47281                           ;main.c: 257: next_channel = channel_FVR_buf1;
 47282  0140FE  0E3F               	movlw	63
 47283  014100  0102               	movlb	2	; () banked
 47284  014102  6FFB               	movwf	_next_channel& (0+255),b
 47285                           
 47286                           ;main.c: 259: break;
 47287  014104  0012               	return	
 47288  014106                     
 47289                           ;main.c: 264: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 47290                           
 47291                           ; BSR set to: 2
 47292  014106  0E0D               	movlw	13
 47293  014108  6E34               	movwf	i2___flmul@a,c
 47294  01410A  0E68               	movlw	104
 47295  01410C  6E35               	movwf	i2___flmul@a+1,c
 47296  01410E  0E53               	movlw	83
 47297  014110  6E36               	movwf	i2___flmul@a+2,c
 47298  014112  0E3B               	movlw	59
 47299  014114  6E37               	movwf	i2___flmul@a+3,c
 47300  014116  EC3E  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 47301  01411A  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 47302  01411E  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 47303  014122  6A07               	clrf	i2___xxtofl@val+2,c
 47304  014124  6A08               	clrf	i2___xxtofl@val+3,c
 47305  014126  0E00               	movlw	0
 47306  014128  EC91  F0C1         	call	i2___xxtofl
 47307  01412C  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 47308  014130  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 47309  014134  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 47310  014138  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 47311  01413C  EC90  F0AD         	call	i2___flmul	;wreg free
 47312  014140  C030  F056         	movff	?i2___flmul,i2___fladd@b
 47313  014144  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 47314  014148  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 47315  01414C  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 47316  014150  C237  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 47317  014154  C238  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 47318  014158  C239  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 47319  01415C  C23A  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 47320  014160  ECD7  F0B0         	call	i2___fladd	;wreg free
 47321  014164  C056  F1E2         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 47322  014168  C057  F1E3         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 47323  01416C  C058  F1E4         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 47324  014170  C059  F1E5         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 47325                           
 47326                           ;main.c: 265: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 47327  014174  0E6F               	movlw	111
 47328  014176  6E13               	movwf	i2___fldiv@b,c
 47329  014178  0E12               	movlw	18
 47330  01417A  6E14               	movwf	i2___fldiv@b+1,c
 47331  01417C  0E03               	movlw	3
 47332  01417E  6E15               	movwf	i2___fldiv@b+2,c
 47333  014180  0E40               	movlw	64
 47334  014182  6E16               	movwf	i2___fldiv@b+3,c
 47335  014184  C1E2  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 47336  014188  C1E3  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 47337  01418C  C1E4  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 47338  014190  C1E5  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 47339  014194  EC97  F0B9         	call	i2___fldiv	;wreg free
 47340  014198  C013  F233         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 47341  01419C  C014  F234         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 47342  0141A0  C015  F235         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 47343  0141A4  C016  F236         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 47344                           
 47345                           ;main.c: 267: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 47346  0141A8  0E00               	movlw	0
 47347  0141AA  6E34               	movwf	i2___flge@ff1,c
 47348  0141AC  0E00               	movlw	0
 47349  0141AE  6E35               	movwf	i2___flge@ff1+1,c
 47350  0141B0  0E20               	movlw	32
 47351  0141B2  6E36               	movwf	i2___flge@ff1+2,c
 47352  0141B4  0E40               	movlw	64
 47353  0141B6  6E37               	movwf	i2___flge@ff1+3,c
 47354  0141B8  C1E2  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 47355  0141BC  C1E3  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 47356  0141C0  C1E4  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 47357  0141C4  C1E5  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 47358  0141C8  ECF2  F0C6         	call	i2___flge	;wreg free
 47359  0141CC  A0D8               	btfss	status,0,c
 47360  0141CE  D019               	goto	i2u2205_40
 47361  0141D0  C1E2  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 47362  0141D4  C1E3  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 47363  0141D8  C1E4  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 47364  0141DC  C1E5  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 47365  0141E0  0E00               	movlw	0
 47366  0141E2  6E38               	movwf	i2___flge@ff2,c
 47367  0141E4  0E00               	movlw	0
 47368  0141E6  6E39               	movwf	i2___flge@ff2+1,c
 47369  0141E8  0E00               	movlw	0
 47370  0141EA  6E3A               	movwf	i2___flge@ff2+2,c
 47371  0141EC  0E40               	movlw	64
 47372  0141EE  6E3B               	movwf	i2___flge@ff2+3,c
 47373  0141F0  ECF2  F0C6         	call	i2___flge	;wreg free
 47374  0141F4  A0D8               	btfss	status,0,c
 47375  0141F6  D005               	goto	i2u2205_40
 47376  0141F8  ECBF  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47377  0141FC  0900               	iorlw	0
 47378  0141FE  B4D8               	btfsc	status,2,c
 47379  014200  D007               	goto	i2l1338
 47380  014202                     i2u2205_40:
 47381                           
 47382                           ;main.c: 269: LATFbits.LATF3 = 1;
 47383  014202  867E               	bsf	3966,3,c	;volatile
 47384                           
 47385                           ;main.c: 270: adc_error_flag = 1;
 47386  014204  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 47387                           
 47388                           ;main.c: 272: PIE5bits.TMR7IE = 0;
 47389  014206  010E               	movlb	14	; () banked
 47390  014208  9D2E               	bcf	46,6,b	;volatile
 47391                           
 47392                           ; BSR set to: 14
 47393                           ;main.c: 273: TMR7_StopTimer();
 47394  01420A  ECE5  F0D8         	call	i2_TMR7_StopTimer	;wreg free
 47395                           
 47396                           ;main.c: 274: return;
 47397  01420E  0012               	return	
 47398  014210                     i2l1338:
 47399                           
 47400                           ;main.c: 276: }
 47401                           ;main.c: 278: next_channel = POS3P3_ADC;
 47402  014210  0E22               	movlw	34
 47403  014212  0102               	movlb	2	; () banked
 47404  014214  6FFB               	movwf	_next_channel& (0+255),b
 47405                           
 47406                           ;main.c: 280: break;
 47407  014216  0012               	return	
 47408  014218                     
 47409                           ;main.c: 285: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 47410                           
 47411                           ; BSR set to: 2
 47412  014218  C233  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 47413  01421C  C234  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 47414  014220  C235  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 47415  014224  C236  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 47416  014228  EC34  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 47417  01422C  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 47418  014230  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 47419  014234  6A07               	clrf	i2___xxtofl@val+2,c
 47420  014236  6A08               	clrf	i2___xxtofl@val+3,c
 47421  014238  0E00               	movlw	0
 47422  01423A  EC91  F0C1         	call	i2___xxtofl
 47423  01423E  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 47424  014242  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 47425  014246  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 47426  01424A  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 47427  01424E  EC90  F0AD         	call	i2___flmul	;wreg free
 47428  014252  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5344
 47429  014256  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5344+1
 47430  01425A  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5344+2
 47431  01425E  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5344+3
 47432                           
 47433                           ;main.c: 285: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 47434  014262  C0D6  F030         	movff	_ADCPostProcessingCallback$5344,i2___flmul@b
 47435  014266  C0D7  F031         	movff	_ADCPostProcessingCallback$5344+1,i2___flmul@b+1
 47436  01426A  C0D8  F032         	movff	_ADCPostProcessingCallback$5344+2,i2___flmul@b+2
 47437  01426E  C0D9  F033         	movff	_ADCPostProcessingCallback$5344+3,i2___flmul@b+3
 47438  014272  0E0D               	movlw	13
 47439  014274  6E34               	movwf	i2___flmul@a,c
 47440  014276  0E68               	movlw	104
 47441  014278  6E35               	movwf	i2___flmul@a+1,c
 47442  01427A  0ED3               	movlw	211
 47443  01427C  6E36               	movwf	i2___flmul@a+2,c
 47444  01427E  0E3B               	movlw	59
 47445  014280  6E37               	movwf	i2___flmul@a+3,c
 47446  014282  EC90  F0AD         	call	i2___flmul	;wreg free
 47447  014286  C030  F1DA         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 47448  01428A  C031  F1DB         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 47449  01428E  C032  F1DC         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 47450  014292  C033  F1DD         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 47451                           
 47452                           ;main.c: 287: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 47453  014296  0E00               	movlw	0
 47454  014298  6E34               	movwf	i2___flge@ff1,c
 47455  01429A  0E00               	movlw	0
 47456  01429C  6E35               	movwf	i2___flge@ff1+1,c
 47457  01429E  0E60               	movlw	96
 47458  0142A0  6E36               	movwf	i2___flge@ff1+2,c
 47459  0142A2  0E40               	movlw	64
 47460  0142A4  6E37               	movwf	i2___flge@ff1+3,c
 47461  0142A6  C1DA  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 47462  0142AA  C1DB  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 47463  0142AE  C1DC  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 47464  0142B2  C1DD  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 47465  0142B6  ECF2  F0C6         	call	i2___flge	;wreg free
 47466  0142BA  A0D8               	btfss	status,0,c
 47467  0142BC  D005               	goto	i2u2207_40
 47468  0142BE  ECBF  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47469  0142C2  0900               	iorlw	0
 47470  0142C4  B4D8               	btfsc	status,2,c
 47471  0142C6  D007               	goto	i2l1342
 47472  0142C8                     i2u2207_40:
 47473                           
 47474                           ;main.c: 289: LATFbits.LATF3 = 1;
 47475  0142C8  867E               	bsf	3966,3,c	;volatile
 47476                           
 47477                           ;main.c: 290: adc_error_flag = 1;
 47478  0142CA  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 47479                           
 47480                           ;main.c: 292: PIE5bits.TMR7IE = 0;
 47481  0142CC  010E               	movlb	14	; () banked
 47482  0142CE  9D2E               	bcf	46,6,b	;volatile
 47483                           
 47484                           ; BSR set to: 14
 47485                           ;main.c: 293: TMR7_StopTimer();
 47486  0142D0  ECE5  F0D8         	call	i2_TMR7_StopTimer	;wreg free
 47487                           
 47488                           ;main.c: 294: return;
 47489  0142D4  0012               	return	
 47490  0142D6                     i2l1342:
 47491                           
 47492                           ;main.c: 296: }
 47493                           ;main.c: 298: next_channel = ISNS_ADC;
 47494  0142D6  0E00               	movlw	0
 47495  0142D8  0102               	movlb	2	; () banked
 47496  0142DA  6FFB               	movwf	_next_channel& (0+255),b
 47497                           
 47498                           ;main.c: 300: break;
 47499  0142DC  0012               	return	
 47500  0142DE                     
 47501                           ;main.c: 305: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 47502                           
 47503                           ; BSR set to: 2
 47504  0142DE  0E00               	movlw	0
 47505  0142E0  6E17               	movwf	i2___fldiv@a,c
 47506  0142E2  0EC0               	movlw	192
 47507  0142E4  6E18               	movwf	i2___fldiv@a+1,c
 47508  0142E6  0E7F               	movlw	127
 47509  0142E8  6E19               	movwf	i2___fldiv@a+2,c
 47510  0142EA  0E44               	movlw	68
 47511  0142EC  6E1A               	movwf	i2___fldiv@a+3,c
 47512  0142EE  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 47513  0142F2  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 47514  0142F6  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 47515  0142FA  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 47516  0142FE  EC97  F0B9         	call	i2___fldiv	;wreg free
 47517  014302  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 47518  014306  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 47519  01430A  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 47520  01430E  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 47521  014312  EC34  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 47522  014316  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 47523  01431A  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 47524  01431E  6A07               	clrf	i2___xxtofl@val+2,c
 47525  014320  6A08               	clrf	i2___xxtofl@val+3,c
 47526  014322  0E00               	movlw	0
 47527  014324  EC91  F0C1         	call	i2___xxtofl
 47528  014328  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 47529  01432C  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 47530  014330  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 47531  014334  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 47532  014338  EC90  F0AD         	call	i2___flmul	;wreg free
 47533  01433C  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5344
 47534  014340  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5344+1
 47535  014344  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5344+2
 47536  014348  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5344+3
 47537                           
 47538                           ;main.c: 305: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 47539  01434C  C0D6  F030         	movff	_ADCPostProcessingCallback$5344,i2___flmul@b
 47540  014350  C0D7  F031         	movff	_ADCPostProcessingCallback$5344+1,i2___flmul@b+1
 47541  014354  C0D8  F032         	movff	_ADCPostProcessingCallback$5344+2,i2___flmul@b+2
 47542  014358  C0D9  F033         	movff	_ADCPostProcessingCallback$5344+3,i2___flmul@b+3
 47543  01435C  0E35               	movlw	53
 47544  01435E  6E34               	movwf	i2___flmul@a,c
 47545  014360  0E5E               	movlw	94
 47546  014362  6E35               	movwf	i2___flmul@a+1,c
 47547  014364  0EF2               	movlw	242
 47548  014366  6E36               	movwf	i2___flmul@a+2,c
 47549  014368  0E3F               	movlw	63
 47550  01436A  6E37               	movwf	i2___flmul@a+3,c
 47551  01436C  EC90  F0AD         	call	i2___flmul	;wreg free
 47552  014370  C030  F22B         	movff	?i2___flmul,_Imeas	;volatile
 47553  014374  C031  F22C         	movff	?i2___flmul+1,_Imeas+1	;volatile
 47554  014378  C032  F22D         	movff	?i2___flmul+2,_Imeas+2	;volatile
 47555  01437C  C033  F22E         	movff	?i2___flmul+3,_Imeas+3	;volatile
 47556                           
 47557                           ;main.c: 309: if (LATGbits.LATG0 != 1) {
 47558  014380  B07F               	btfsc	3967,0,c	;volatile
 47559  014382  D166               	goto	i2l1346
 47560                           
 47561                           ;main.c: 314: if (load_enable) {
 47562  014384  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 47563  014386  D0CD               	goto	i2l1347
 47564                           
 47565                           ;main.c: 317: if (dimming_period < 0x7FEE) {
 47566  014388  0EEE               	movlw	238
 47567  01438A  0101               	movlb	1	; () banked
 47568  01438C  5DE7               	subwf	_dimming_period& (0+255),w,b	;volatile
 47569  01438E  0E7F               	movlw	127
 47570  014390  59E8               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 47571  014392  B0D8               	btfsc	status,0,c
 47572  014394  D052               	goto	i2l1348
 47573                           
 47574                           ; BSR set to: 1
 47575                           ;main.c: 319: Ipk = Imeas;
 47576  014396  C22B  F1CE         	movff	_Imeas,_Ipk	;volatile
 47577  01439A  C22C  F1CF         	movff	_Imeas+1,_Ipk+1	;volatile
 47578  01439E  C22D  F1D0         	movff	_Imeas+2,_Ipk+2	;volatile
 47579  0143A2  C22E  F1D1         	movff	_Imeas+3,_Ipk+3	;volatile
 47580                           
 47581                           ; BSR set to: 1
 47582                           ;main.c: 320: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 47583  0143A6  C0F7  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 47584  0143AA  C0F8  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 47585  0143AE  C0F9  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 47586  0143B2  C0FA  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 47587  0143B6  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 47588  0143BA  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 47589  0143BE  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 47590  0143C2  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 47591  0143C6  ECA7  F0BE         	call	_peakToRMS	;wreg free
 47592  0143CA  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5345
 47593  0143CE  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5345+1
 47594  0143D2  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5345+2
 47595  0143D6  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5345+3
 47596                           
 47597                           ;main.c: 320: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 47598  0143DA  C2EF  F05A         	movff	_Irms_offset,i2___fladd@a
 47599  0143DE  C2F0  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 47600  0143E2  C2F1  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 47601  0143E6  C2F2  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 47602  0143EA  C0DA  F056         	movff	_ADCPostProcessingCallback$5345,i2___fladd@b
 47603  0143EE  C0DB  F057         	movff	_ADCPostProcessingCallback$5345+1,i2___fladd@b+1
 47604  0143F2  C0DC  F058         	movff	_ADCPostProcessingCallback$5345+2,i2___fladd@b+2
 47605  0143F6  C0DD  F059         	movff	_ADCPostProcessingCallback$5345+3,i2___fladd@b+3
 47606  0143FA  ECD7  F0B0         	call	i2___fladd	;wreg free
 47607  0143FE  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 47608  014402  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 47609  014406  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 47610  01440A  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 47611  01440E  EC7E  F0C9         	call	i2___fltol	;wreg free
 47612  014412  C06C  F076         	movff	?i2___fltol,abs@a
 47613  014416  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 47614  01441A  ECA0  F0D6         	call	_abs	;wreg free
 47615  01441E  0100               	movlb	0	; () banked
 47616  014420  C076  F005         	movff	?_abs,i2___xxtofl@val
 47617  014424  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 47618  014428  0E00               	movlw	0
 47619  01442A  BE06               	btfsc	i2___xxtofl@val+1,7,c
 47620  01442C  0EFF               	movlw	-1
 47621  01442E  6E07               	movwf	i2___xxtofl@val+2,c
 47622  014430  6E08               	movwf	i2___xxtofl@val+3,c
 47623  014432  0E01               	movlw	1
 47624  014434  EC91  F0C1         	call	i2___xxtofl
 47625  014438  D063               	goto	L21
 47626  01443A                     i2l1348:
 47627                           
 47628                           ;main.c: 325: else {
 47629                           ;main.c: 327: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 47630  01443A  C22B  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 47631  01443E  C22C  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 47632  014442  C22D  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 47633  014446  C22E  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 47634  01444A  C0F7  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 47635  01444E  C0F8  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 47636  014452  C0F9  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 47637  014456  C0FA  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 47638  01445A  EC94  F0CE         	call	_currentMeasuredToPeak	;wreg free
 47639  01445E  C099  F1CE         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 47640  014462  C09A  F1CF         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 47641  014466  C09B  F1D0         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 47642  01446A  C09C  F1D1         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 47643                           
 47644                           ;main.c: 328: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 47645  01446E  C0F7  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 47646  014472  C0F8  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 47647  014476  C0F9  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 47648  01447A  C0FA  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 47649  01447E  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 47650  014482  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 47651  014486  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 47652  01448A  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 47653  01448E  ECA7  F0BE         	call	_peakToRMS	;wreg free
 47654  014492  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5345
 47655  014496  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5345+1
 47656  01449A  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5345+2
 47657  01449E  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5345+3
 47658                           
 47659                           ;main.c: 328: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 47660  0144A2  C2EF  F05A         	movff	_Irms_offset,i2___fladd@a
 47661  0144A6  C2F0  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 47662  0144AA  C2F1  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 47663  0144AE  C2F2  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 47664  0144B2  C0DA  F056         	movff	_ADCPostProcessingCallback$5345,i2___fladd@b
 47665  0144B6  C0DB  F057         	movff	_ADCPostProcessingCallback$5345+1,i2___fladd@b+1
 47666  0144BA  C0DC  F058         	movff	_ADCPostProcessingCallback$5345+2,i2___fladd@b+2
 47667  0144BE  C0DD  F059         	movff	_ADCPostProcessingCallback$5345+3,i2___fladd@b+3
 47668  0144C2  ECD7  F0B0         	call	i2___fladd	;wreg free
 47669  0144C6  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 47670  0144CA  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 47671  0144CE  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 47672  0144D2  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 47673  0144D6  EC7E  F0C9         	call	i2___fltol	;wreg free
 47674  0144DA  C06C  F076         	movff	?i2___fltol,abs@a
 47675  0144DE  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 47676  0144E2  ECA0  F0D6         	call	_abs	;wreg free
 47677  0144E6  0100               	movlb	0	; () banked
 47678  0144E8  C076  F005         	movff	?_abs,i2___xxtofl@val
 47679  0144EC  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 47680  0144F0  0E00               	movlw	0
 47681  0144F2  BE06               	btfsc	i2___xxtofl@val+1,7,c
 47682  0144F4  0EFF               	movlw	-1
 47683  0144F6  6E07               	movwf	i2___xxtofl@val+2,c
 47684  0144F8  6E08               	movwf	i2___xxtofl@val+3,c
 47685  0144FA  0E01               	movlw	1
 47686  0144FC  EC91  F0C1         	call	i2___xxtofl
 47687  014500                     L21:
 47688  014500  C005  F1CA         	movff	?i2___xxtofl,_Irms	;volatile
 47689  014504  C006  F1CB         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 47690  014508  C007  F1CC         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 47691  01450C  C008  F1CD         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 47692                           
 47693                           ;main.c: 330: }
 47694                           ;main.c: 332: Vpk = Vpk_const;
 47695  014510  C2F3  F22F         	movff	_Vpk_const,_Vpk	;volatile
 47696  014514  C2F4  F230         	movff	_Vpk_const+1,_Vpk+1	;volatile
 47697  014518  C2F5  F231         	movff	_Vpk_const+2,_Vpk+2	;volatile
 47698  01451C  C2F6  F232         	movff	_Vpk_const+3,_Vpk+3	;volatile
 47699                           
 47700                           ;main.c: 334: }
 47701  014520  D02C               	goto	i2l1350
 47702  014522                     i2l1347:
 47703                           
 47704                           ;main.c: 336: else {
 47705                           ;main.c: 338: Ipk = 0.0;
 47706  014522  0E00               	movlw	0
 47707  014524  0101               	movlb	1	; () banked
 47708  014526  6FCE               	movwf	_Ipk& (0+255),b	;volatile
 47709  014528  0E00               	movlw	0
 47710  01452A  6FCF               	movwf	(_Ipk+1)& (0+255),b	;volatile
 47711  01452C  0E00               	movlw	0
 47712  01452E  6FD0               	movwf	(_Ipk+2)& (0+255),b	;volatile
 47713  014530  0E00               	movlw	0
 47714  014532  6FD1               	movwf	(_Ipk+3)& (0+255),b	;volatile
 47715                           
 47716                           ;main.c: 339: Vpk = 0.0;
 47717  014534  0E00               	movlw	0
 47718  014536  0102               	movlb	2	; () banked
 47719  014538  6F2F               	movwf	_Vpk& (0+255),b	;volatile
 47720  01453A  0E00               	movlw	0
 47721  01453C  6F30               	movwf	(_Vpk+1)& (0+255),b	;volatile
 47722  01453E  0E00               	movlw	0
 47723  014540  6F31               	movwf	(_Vpk+2)& (0+255),b	;volatile
 47724  014542  0E00               	movlw	0
 47725  014544  6F32               	movwf	(_Vpk+3)& (0+255),b	;volatile
 47726                           
 47727                           ; BSR set to: 2
 47728                           ;main.c: 340: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 47729  014546  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 47730  01454A  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 47731  01454E  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 47732  014552  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 47733  014556  C0F7  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 47734  01455A  C0F8  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 47735  01455E  C0F9  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 47736  014562  C0FA  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 47737  014566  ECA7  F0BE         	call	_peakToRMS	;wreg free
 47738  01456A  C0B1  F1CA         	movff	?_peakToRMS,_Irms	;volatile
 47739  01456E  C0B2  F1CB         	movff	?_peakToRMS+1,_Irms+1	;volatile
 47740  014572  C0B3  F1CC         	movff	?_peakToRMS+2,_Irms+2	;volatile
 47741  014576  C0B4  F1CD         	movff	?_peakToRMS+3,_Irms+3	;volatile
 47742  01457A                     i2l1350:
 47743                           
 47744                           ;main.c: 342: }
 47745                           ;main.c: 344: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 47746  01457A  C22F  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 47747  01457E  C230  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 47748  014582  C231  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 47749  014586  C232  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 47750  01458A  C0F7  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 47751  01458E  C0F8  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 47752  014592  C0F9  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 47753  014596  C0FA  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 47754  01459A  ECA7  F0BE         	call	_peakToRMS	;wreg free
 47755  01459E  C0B1  F227         	movff	?_peakToRMS,_Vrms	;volatile
 47756  0145A2  C0B2  F228         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 47757  0145A6  C0B3  F229         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 47758  0145AA  C0B4  F22A         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 47759                           
 47760                           ;main.c: 345: Avg_Power = Vrms * Irms;
 47761  0145AE  C227  F030         	movff	_Vrms,i2___flmul@b	;volatile
 47762  0145B2  C228  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 47763  0145B6  C229  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 47764  0145BA  C22A  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 47765  0145BE  C1CA  F034         	movff	_Irms,i2___flmul@a	;volatile
 47766  0145C2  C1CB  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 47767  0145C6  C1CC  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 47768  0145CA  C1CD  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 47769  0145CE  EC90  F0AD         	call	i2___flmul	;wreg free
 47770  0145D2  C030  F1C6         	movff	?i2___flmul,_Avg_Power	;volatile
 47771  0145D6  C031  F1C7         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 47772  0145DA  C032  F1C8         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 47773  0145DE  C033  F1C9         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 47774                           
 47775                           ;main.c: 346: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 47776  0145E2  0E00               	movlw	0
 47777  0145E4  6E17               	movwf	i2___fldiv@a,c
 47778  0145E6  0E00               	movlw	0
 47779  0145E8  6E18               	movwf	i2___fldiv@a+1,c
 47780  0145EA  0E61               	movlw	97
 47781  0145EC  6E19               	movwf	i2___fldiv@a+2,c
 47782  0145EE  0E45               	movlw	69
 47783  0145F0  6E1A               	movwf	i2___fldiv@a+3,c
 47784  0145F2  0E29               	movlw	41
 47785  0145F4  6E34               	movwf	i2___flmul@a,c
 47786  0145F6  0E5C               	movlw	92
 47787  0145F8  6E35               	movwf	i2___flmul@a+1,c
 47788  0145FA  0E8F               	movlw	143
 47789  0145FC  6E36               	movwf	i2___flmul@a+2,c
 47790  0145FE  0E3D               	movlw	61
 47791  014600  6E37               	movwf	i2___flmul@a+3,c
 47792  014602  C1C6  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 47793  014606  C1C7  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 47794  01460A  C1C8  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 47795  01460E  C1C9  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 47796  014612  EC90  F0AD         	call	i2___flmul	;wreg free
 47797  014616  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 47798  01461A  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 47799  01461E  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 47800  014622  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 47801  014626  EC97  F0B9         	call	i2___fldiv	;wreg free
 47802  01462A  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 47803  01462E  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 47804  014632  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 47805  014636  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 47806  01463A  C0F0  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 47807  01463E  C0F1  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 47808  014642  C0F2  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 47809  014646  C0F3  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 47810  01464A  ECD7  F0B0         	call	i2___fladd	;wreg free
 47811  01464E  D0C5               	goto	L20
 47812  014650                     i2l1346:
 47813                           
 47814                           ;main.c: 351: else {
 47815                           ;main.c: 353: Ipk = Imeas;
 47816  014650  C22B  F1CE         	movff	_Imeas,_Ipk	;volatile
 47817  014654  C22C  F1CF         	movff	_Imeas+1,_Ipk+1	;volatile
 47818  014658  C22D  F1D0         	movff	_Imeas+2,_Ipk+2	;volatile
 47819  01465C  C22E  F1D1         	movff	_Imeas+3,_Ipk+3	;volatile
 47820                           
 47821                           ;main.c: 354: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 47822  014660  0E00               	movlw	0
 47823  014662  0100               	movlb	0	; () banked
 47824  014664  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 47825  014666  0E00               	movlw	0
 47826  014668  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 47827  01466A  0E00               	movlw	0
 47828  01466C  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 47829  01466E  0E00               	movlw	0
 47830  014670  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 47831  014672  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 47832  014676  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 47833  01467A  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 47834  01467E  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 47835  014682  ECA7  F0BE         	call	_peakToRMS	;wreg free
 47836  014686  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5345
 47837  01468A  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5345+1
 47838  01468E  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5345+2
 47839  014692  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5345+3
 47840                           
 47841                           ;main.c: 354: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 47842  014696  C2EF  F05A         	movff	_Irms_offset,i2___fladd@a
 47843  01469A  C2F0  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 47844  01469E  C2F1  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 47845  0146A2  C2F2  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 47846  0146A6  C0DA  F056         	movff	_ADCPostProcessingCallback$5345,i2___fladd@b
 47847  0146AA  C0DB  F057         	movff	_ADCPostProcessingCallback$5345+1,i2___fladd@b+1
 47848  0146AE  C0DC  F058         	movff	_ADCPostProcessingCallback$5345+2,i2___fladd@b+2
 47849  0146B2  C0DD  F059         	movff	_ADCPostProcessingCallback$5345+3,i2___fladd@b+3
 47850  0146B6  ECD7  F0B0         	call	i2___fladd	;wreg free
 47851  0146BA  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 47852  0146BE  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 47853  0146C2  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 47854  0146C6  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 47855  0146CA  EC7E  F0C9         	call	i2___fltol	;wreg free
 47856  0146CE  C06C  F076         	movff	?i2___fltol,abs@a
 47857  0146D2  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 47858  0146D6  ECA0  F0D6         	call	_abs	;wreg free
 47859  0146DA  0100               	movlb	0	; () banked
 47860  0146DC  C076  F005         	movff	?_abs,i2___xxtofl@val
 47861  0146E0  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 47862  0146E4  0E00               	movlw	0
 47863  0146E6  BE06               	btfsc	i2___xxtofl@val+1,7,c
 47864  0146E8  0EFF               	movlw	-1
 47865  0146EA  6E07               	movwf	i2___xxtofl@val+2,c
 47866  0146EC  6E08               	movwf	i2___xxtofl@val+3,c
 47867  0146EE  0E01               	movlw	1
 47868  0146F0  EC91  F0C1         	call	i2___xxtofl
 47869  0146F4  C005  F1CA         	movff	?i2___xxtofl,_Irms	;volatile
 47870  0146F8  C006  F1CB         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 47871  0146FC  C007  F1CC         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 47872  014700  C008  F1CD         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 47873                           
 47874                           ;main.c: 355: Vrms = peakToRMS(Vpk_const, 0.0);
 47875  014704  C2F3  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 47876  014708  C2F4  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 47877  01470C  C2F5  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 47878  014710  C2F6  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 47879  014714  0E00               	movlw	0
 47880  014716  0100               	movlb	0	; () banked
 47881  014718  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 47882  01471A  0E00               	movlw	0
 47883  01471C  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 47884  01471E  0E00               	movlw	0
 47885  014720  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 47886  014722  0E00               	movlw	0
 47887  014724  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 47888  014726  ECA7  F0BE         	call	_peakToRMS	;wreg free
 47889  01472A  C0B1  F227         	movff	?_peakToRMS,_Vrms	;volatile
 47890  01472E  C0B2  F228         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 47891  014732  C0B3  F229         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 47892  014736  C0B4  F22A         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 47893                           
 47894                           ;main.c: 356: Avg_Power = Vrms * Irms;
 47895  01473A  C227  F030         	movff	_Vrms,i2___flmul@b	;volatile
 47896  01473E  C228  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 47897  014742  C229  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 47898  014746  C22A  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 47899  01474A  C1CA  F034         	movff	_Irms,i2___flmul@a	;volatile
 47900  01474E  C1CB  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 47901  014752  C1CC  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 47902  014756  C1CD  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 47903  01475A  EC90  F0AD         	call	i2___flmul	;wreg free
 47904  01475E  C030  F1C6         	movff	?i2___flmul,_Avg_Power	;volatile
 47905  014762  C031  F1C7         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 47906  014766  C032  F1C8         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 47907  01476A  C033  F1C9         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 47908                           
 47909                           ;main.c: 357: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 47910  01476E  0E00               	movlw	0
 47911  014770  6E17               	movwf	i2___fldiv@a,c
 47912  014772  0E00               	movlw	0
 47913  014774  6E18               	movwf	i2___fldiv@a+1,c
 47914  014776  0E61               	movlw	97
 47915  014778  6E19               	movwf	i2___fldiv@a+2,c
 47916  01477A  0E45               	movlw	69
 47917  01477C  6E1A               	movwf	i2___fldiv@a+3,c
 47918  01477E  0E29               	movlw	41
 47919  014780  6E34               	movwf	i2___flmul@a,c
 47920  014782  0E5C               	movlw	92
 47921  014784  6E35               	movwf	i2___flmul@a+1,c
 47922  014786  0E8F               	movlw	143
 47923  014788  6E36               	movwf	i2___flmul@a+2,c
 47924  01478A  0E3D               	movlw	61
 47925  01478C  6E37               	movwf	i2___flmul@a+3,c
 47926  01478E  C1C6  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 47927  014792  C1C7  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 47928  014796  C1C8  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 47929  01479A  C1C9  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 47930  01479E  EC90  F0AD         	call	i2___flmul	;wreg free
 47931  0147A2  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 47932  0147A6  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 47933  0147AA  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 47934  0147AE  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 47935  0147B2  EC97  F0B9         	call	i2___fldiv	;wreg free
 47936  0147B6  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 47937  0147BA  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 47938  0147BE  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 47939  0147C2  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 47940  0147C6  C0F0  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 47941  0147CA  C0F1  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 47942  0147CE  C0F2  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 47943  0147D2  C0F3  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 47944  0147D6  ECD7  F0B0         	call	i2___fladd	;wreg free
 47945  0147DA                     L20:
 47946  0147DA  C056  F0F0         	movff	?i2___fladd,_Total_Energy	;volatile
 47947  0147DE  C057  F0F1         	movff	?i2___fladd+1,_Total_Energy+1	;volatile
 47948  0147E2  C058  F0F2         	movff	?i2___fladd+2,_Total_Energy+2	;volatile
 47949  0147E6  C059  F0F3         	movff	?i2___fladd+3,_Total_Energy+3	;volatile
 47950                           
 47951                           ;main.c: 359: }
 47952                           ;main.c: 361: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 47953  0147EA  0E00               	movlw	0
 47954  0147EC  6E34               	movwf	i2___flge@ff1,c
 47955  0147EE  0E00               	movlw	0
 47956  0147F0  6E35               	movwf	i2___flge@ff1+1,c
 47957  0147F2  0EA0               	movlw	160
 47958  0147F4  6E36               	movwf	i2___flge@ff1+2,c
 47959  0147F6  0E40               	movlw	64
 47960  0147F8  6E37               	movwf	i2___flge@ff1+3,c
 47961  0147FA  C1CA  F038         	movff	_Irms,i2___flge@ff2	;volatile
 47962  0147FE  C1CB  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 47963  014802  C1CC  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 47964  014806  C1CD  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 47965  01480A  ECF2  F0C6         	call	i2___flge	;wreg free
 47966  01480E  A0D8               	btfss	status,0,c
 47967  014810  D005               	goto	i2u2212_40
 47968  014812  ECBF  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47969  014816  0900               	iorlw	0
 47970  014818  B4D8               	btfsc	status,2,c
 47971  01481A  D007               	goto	i2l1352
 47972  01481C                     i2u2212_40:
 47973                           
 47974                           ;main.c: 363: LATFbits.LATF3 = 1;
 47975  01481C  867E               	bsf	3966,3,c	;volatile
 47976                           
 47977                           ;main.c: 364: adc_error_flag = 1;
 47978  01481E  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 47979                           
 47980                           ;main.c: 366: PIE5bits.TMR7IE = 0;
 47981  014820  010E               	movlb	14	; () banked
 47982  014822  9D2E               	bcf	46,6,b	;volatile
 47983                           
 47984                           ; BSR set to: 14
 47985                           ;main.c: 367: TMR7_StopTimer();
 47986  014824  ECE5  F0D8         	call	i2_TMR7_StopTimer	;wreg free
 47987                           
 47988                           ;main.c: 368: return;
 47989  014828  0012               	return	
 47990  01482A                     i2l1352:
 47991                           
 47992                           ;main.c: 370: }
 47993                           ;main.c: 372: next_channel = POS12_ADC;
 47994  01482A  0E04               	movlw	4
 47995  01482C  0102               	movlb	2	; () banked
 47996  01482E  6FFB               	movwf	_next_channel& (0+255),b
 47997                           
 47998                           ;main.c: 374: break;
 47999  014830  0012               	return	
 48000  014832                     
 48001                           ;main.c: 379: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 48002                           
 48003                           ; BSR set to: 2
 48004  014832  0E00               	movlw	0
 48005  014834  6E17               	movwf	i2___fldiv@a,c
 48006  014836  0EC0               	movlw	192
 48007  014838  6E18               	movwf	i2___fldiv@a+1,c
 48008  01483A  0E7F               	movlw	127
 48009  01483C  6E19               	movwf	i2___fldiv@a+2,c
 48010  01483E  0E44               	movlw	68
 48011  014840  6E1A               	movwf	i2___fldiv@a+3,c
 48012  014842  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 48013  014846  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 48014  01484A  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 48015  01484E  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 48016  014852  EC97  F0B9         	call	i2___fldiv	;wreg free
 48017  014856  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 48018  01485A  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 48019  01485E  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 48020  014862  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 48021  014866  EC34  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 48022  01486A  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 48023  01486E  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 48024  014872  6A07               	clrf	i2___xxtofl@val+2,c
 48025  014874  6A08               	clrf	i2___xxtofl@val+3,c
 48026  014876  0E00               	movlw	0
 48027  014878  EC91  F0C1         	call	i2___xxtofl
 48028  01487C  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 48029  014880  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 48030  014884  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 48031  014888  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 48032  01488C  EC90  F0AD         	call	i2___flmul	;wreg free
 48033  014890  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5344
 48034  014894  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5344+1
 48035  014898  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5344+2
 48036  01489C  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5344+3
 48037                           
 48038                           ;main.c: 379: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 48039  0148A0  C0D6  F030         	movff	_ADCPostProcessingCallback$5344,i2___flmul@b
 48040  0148A4  C0D7  F031         	movff	_ADCPostProcessingCallback$5344+1,i2___flmul@b+1
 48041  0148A8  C0D8  F032         	movff	_ADCPostProcessingCallback$5344+2,i2___flmul@b+2
 48042  0148AC  C0D9  F033         	movff	_ADCPostProcessingCallback$5344+3,i2___flmul@b+3
 48043  0148B0  0E3E               	movlw	62
 48044  0148B2  6E34               	movwf	i2___flmul@a,c
 48045  0148B4  0EF8               	movlw	248
 48046  0148B6  6E35               	movwf	i2___flmul@a+1,c
 48047  0148B8  0E80               	movlw	128
 48048  0148BA  6E36               	movwf	i2___flmul@a+2,c
 48049  0148BC  0E40               	movlw	64
 48050  0148BE  6E37               	movwf	i2___flmul@a+3,c
 48051  0148C0  EC90  F0AD         	call	i2___flmul	;wreg free
 48052  0148C4  C030  F1D6         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 48053  0148C8  C031  F1D7         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 48054  0148CC  C032  F1D8         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 48055  0148D0  C033  F1D9         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 48056                           
 48057                           ;main.c: 381: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 48058  0148D4  0E9A               	movlw	154
 48059  0148D6  6E34               	movwf	i2___flge@ff1,c
 48060  0148D8  0E99               	movlw	153
 48061  0148DA  6E35               	movwf	i2___flge@ff1+1,c
 48062  0148DC  0E59               	movlw	89
 48063  0148DE  6E36               	movwf	i2___flge@ff1+2,c
 48064  0148E0  0E41               	movlw	65
 48065  0148E2  6E37               	movwf	i2___flge@ff1+3,c
 48066  0148E4  C1D6  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 48067  0148E8  C1D7  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 48068  0148EC  C1D8  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 48069  0148F0  C1D9  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 48070  0148F4  ECF2  F0C6         	call	i2___flge	;wreg free
 48071  0148F8  A0D8               	btfss	status,0,c
 48072  0148FA  D005               	goto	i2u2214_40
 48073  0148FC  ECBF  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48074  014900  0900               	iorlw	0
 48075  014902  B4D8               	btfsc	status,2,c
 48076  014904  D007               	goto	i2l1356
 48077  014906                     i2u2214_40:
 48078                           
 48079                           ;main.c: 383: LATFbits.LATF3 = 1;
 48080  014906  867E               	bsf	3966,3,c	;volatile
 48081                           
 48082                           ;main.c: 384: adc_error_flag = 1;
 48083  014908  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 48084                           
 48085                           ;main.c: 386: PIE5bits.TMR7IE = 0;
 48086  01490A  010E               	movlb	14	; () banked
 48087  01490C  9D2E               	bcf	46,6,b	;volatile
 48088                           
 48089                           ; BSR set to: 14
 48090                           ;main.c: 387: TMR7_StopTimer();
 48091  01490E  ECE5  F0D8         	call	i2_TMR7_StopTimer	;wreg free
 48092                           
 48093                           ;main.c: 388: return;
 48094  014912  0012               	return	
 48095  014914                     i2l1356:
 48096                           
 48097                           ;main.c: 390: }
 48098                           ;main.c: 392: next_channel = channel_Temp;
 48099  014914  0E3D               	movlw	61
 48100  014916  0102               	movlb	2	; () banked
 48101  014918  6FFB               	movwf	_next_channel& (0+255),b
 48102                           
 48103                           ;main.c: 394: break;
 48104  01491A  0012               	return	
 48105  01491C                     
 48106                           ;main.c: 399: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48107                           
 48108                           ; BSR set to: 2
 48109  01491C  0E00               	movlw	0
 48110  01491E  6E17               	movwf	i2___fldiv@a,c
 48111  014920  0E00               	movlw	0
 48112  014922  6E18               	movwf	i2___fldiv@a+1,c
 48113  014924  0E00               	movlw	0
 48114  014926  6E19               	movwf	i2___fldiv@a+2,c
 48115  014928  0E40               	movlw	64
 48116  01492A  6E1A               	movwf	i2___fldiv@a+3,c
 48117  01492C  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 48118  014930  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 48119  014934  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 48120  014938  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 48121  01493C  EC97  F0B9         	call	i2___fldiv	;wreg free
 48122  014940  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 48123  014944  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 48124  014948  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 48125  01494C  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 48126  014950  0E00               	movlw	0
 48127  014952  6E5A               	movwf	i2___fladd@a,c
 48128  014954  0E00               	movlw	0
 48129  014956  6E5B               	movwf	i2___fladd@a+1,c
 48130  014958  0E80               	movlw	128
 48131  01495A  6E5C               	movwf	i2___fladd@a+2,c
 48132  01495C  0E3F               	movlw	63
 48133  01495E  6E5D               	movwf	i2___fladd@a+3,c
 48134  014960  0E00               	movlw	0
 48135  014962  6E17               	movwf	i2___fldiv@a,c
 48136  014964  0EC0               	movlw	192
 48137  014966  6E18               	movwf	i2___fldiv@a+1,c
 48138  014968  0E7F               	movlw	127
 48139  01496A  6E19               	movwf	i2___fldiv@a+2,c
 48140  01496C  0E44               	movlw	68
 48141  01496E  6E1A               	movwf	i2___fldiv@a+3,c
 48142  014970  EC3E  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 48143  014974  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 48144  014978  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 48145  01497C  6A07               	clrf	i2___xxtofl@val+2,c
 48146  01497E  6A08               	clrf	i2___xxtofl@val+3,c
 48147  014980  0E00               	movlw	0
 48148  014982  EC91  F0C1         	call	i2___xxtofl
 48149  014986  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 48150  01498A  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 48151  01498E  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 48152  014992  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 48153  014996  EC97  F0B9         	call	i2___fldiv	;wreg free
 48154  01499A  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 48155  01499E  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 48156  0149A2  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 48157  0149A6  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 48158  0149AA  EC89  F0D6         	call	i2___flneg	;wreg free
 48159  0149AE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 48160  0149B2  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 48161  0149B6  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 48162  0149BA  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 48163  0149BE  ECD7  F0B0         	call	i2___fladd	;wreg free
 48164  0149C2  C056  F030         	movff	?i2___fladd,i2___flmul@b
 48165  0149C6  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 48166  0149CA  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 48167  0149CE  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 48168  0149D2  EC90  F0AD         	call	i2___flmul	;wreg free
 48169  0149D6  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$5346
 48170  0149DA  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5346+1
 48171  0149DE  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5346+2
 48172  0149E2  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5346+3
 48173                           
 48174                           ;main.c: 399: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48175  0149E6  0EDA               	movlw	218
 48176  0149E8  6E17               	movwf	i2___fldiv@a,c
 48177  0149EA  0E03               	movlw	3
 48178  0149EC  6E18               	movwf	i2___fldiv@a+1,c
 48179  0149EE  0EAD               	movlw	173
 48180  0149F0  6E19               	movwf	i2___fldiv@a+2,c
 48181  0149F2  0E3A               	movlw	58
 48182  0149F4  6E1A               	movwf	i2___fldiv@a+3,c
 48183  0149F6  0E39               	movlw	57
 48184  0149F8  6E5A               	movwf	i2___fladd@a,c
 48185  0149FA  0EB4               	movlw	180
 48186  0149FC  6E5B               	movwf	i2___fladd@a+1,c
 48187  0149FE  0E28               	movlw	40
 48188  014A00  6E5C               	movwf	i2___fladd@a+2,c
 48189  014A02  0E3F               	movlw	63
 48190  014A04  6E5D               	movwf	i2___fladd@a+3,c
 48191  014A06  C0C9  F02C         	movff	_ADCPostProcessingCallback$5346,i2___flneg@f1
 48192  014A0A  C0CA  F02D         	movff	_ADCPostProcessingCallback$5346+1,i2___flneg@f1+1
 48193  014A0E  C0CB  F02E         	movff	_ADCPostProcessingCallback$5346+2,i2___flneg@f1+2
 48194  014A12  C0CC  F02F         	movff	_ADCPostProcessingCallback$5346+3,i2___flneg@f1+3
 48195  014A16  EC89  F0D6         	call	i2___flneg	;wreg free
 48196  014A1A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 48197  014A1E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 48198  014A22  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 48199  014A26  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 48200  014A2A  ECD7  F0B0         	call	i2___fladd	;wreg free
 48201  014A2E  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 48202  014A32  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 48203  014A36  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 48204  014A3A  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 48205  014A3E  EC97  F0B9         	call	i2___fldiv	;wreg free
 48206  014A42  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$5347
 48207  014A46  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$5347+1
 48208  014A4A  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$5347+2
 48209  014A4E  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$5347+3
 48210                           
 48211                           ;main.c: 399: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48212  014A52  C2F7  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 48213  014A56  C2F8  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 48214  014A5A  C2F9  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 48215  014A5E  C2FA  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 48216  014A62  C0CD  F056         	movff	_ADCPostProcessingCallback$5347,i2___fladd@b
 48217  014A66  C0CE  F057         	movff	_ADCPostProcessingCallback$5347+1,i2___fladd@b+1
 48218  014A6A  C0CF  F058         	movff	_ADCPostProcessingCallback$5347+2,i2___fladd@b+2
 48219  014A6E  C0D0  F059         	movff	_ADCPostProcessingCallback$5347+3,i2___fladd@b+3
 48220  014A72  ECD7  F0B0         	call	i2___fladd	;wreg free
 48221  014A76  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$5348
 48222  014A7A  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$5348+1
 48223  014A7E  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$5348+2
 48224  014A82  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$5348+3
 48225                           
 48226                           ;main.c: 399: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48227  014A86  C0D1  F056         	movff	_ADCPostProcessingCallback$5348,i2___fladd@b
 48228  014A8A  C0D2  F057         	movff	_ADCPostProcessingCallback$5348+1,i2___fladd@b+1
 48229  014A8E  C0D3  F058         	movff	_ADCPostProcessingCallback$5348+2,i2___fladd@b+2
 48230  014A92  C0D4  F059         	movff	_ADCPostProcessingCallback$5348+3,i2___fladd@b+3
 48231  014A96  0E00               	movlw	0
 48232  014A98  6E5A               	movwf	i2___fladd@a,c
 48233  014A9A  0E00               	movlw	0
 48234  014A9C  6E5B               	movwf	i2___fladd@a+1,c
 48235  014A9E  0E20               	movlw	32
 48236  014AA0  6E5C               	movwf	i2___fladd@a+2,c
 48237  014AA2  0EC2               	movlw	194
 48238  014AA4  6E5D               	movwf	i2___fladd@a+3,c
 48239  014AA6  ECD7  F0B0         	call	i2___fladd	;wreg free
 48240  014AAA  C056  F1D2         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 48241  014AAE  C057  F1D3         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 48242  014AB2  C058  F1D4         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 48243  014AB6  C059  F1D5         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 48244                           
 48245                           ;main.c: 401: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 48246  014ABA  0E00               	movlw	0
 48247  014ABC  6E34               	movwf	i2___flge@ff1,c
 48248  014ABE  0E00               	movlw	0
 48249  014AC0  6E35               	movwf	i2___flge@ff1+1,c
 48250  014AC2  0E20               	movlw	32
 48251  014AC4  6E36               	movwf	i2___flge@ff1+2,c
 48252  014AC6  0E42               	movlw	66
 48253  014AC8  6E37               	movwf	i2___flge@ff1+3,c
 48254  014ACA  C1D2  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 48255  014ACE  C1D3  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 48256  014AD2  C1D4  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 48257  014AD6  C1D5  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 48258  014ADA  ECF2  F0C6         	call	i2___flge	;wreg free
 48259  014ADE  A0D8               	btfss	status,0,c
 48260  014AE0  D005               	goto	i2u2216_40
 48261  014AE2  ECBF  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48262  014AE6  0900               	iorlw	0
 48263  014AE8  B4D8               	btfsc	status,2,c
 48264  014AEA  D007               	goto	i2l1360
 48265  014AEC                     i2u2216_40:
 48266                           
 48267                           ;main.c: 403: LATFbits.LATF3 = 1;
 48268  014AEC  867E               	bsf	3966,3,c	;volatile
 48269                           
 48270                           ;main.c: 404: adc_error_flag = 1;
 48271  014AEE  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 48272                           
 48273                           ;main.c: 406: PIE5bits.TMR7IE = 0;
 48274  014AF0  010E               	movlb	14	; () banked
 48275  014AF2  9D2E               	bcf	46,6,b	;volatile
 48276                           
 48277                           ; BSR set to: 14
 48278                           ;main.c: 407: TMR7_StopTimer();
 48279  014AF4  ECE5  F0D8         	call	i2_TMR7_StopTimer	;wreg free
 48280                           
 48281                           ;main.c: 408: return;
 48282  014AF8  0012               	return	
 48283  014AFA                     i2l1360:
 48284                           
 48285                           ;main.c: 410: }
 48286                           ;main.c: 412: next_channel = channel_VSS;
 48287  014AFA  0E3C               	movlw	60
 48288  014AFC  0102               	movlb	2	; () banked
 48289  014AFE  6FFB               	movwf	_next_channel& (0+255),b
 48290                           
 48291                           ;main.c: 414: break;
 48292  014B00  0012               	return	
 48293  014B02                     i2l1363:
 48294                           
 48295                           ; BSR set to: 0
 48296                           ;main.c: 419: LATFbits.LATF3 = 1;
 48297  014B02  867E               	bsf	3966,3,c	;volatile
 48298                           
 48299                           ;main.c: 420: adc_error_flag = 1;
 48300  014B04  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 48301                           
 48302                           ; BSR set to: 0
 48303                           ;main.c: 422: PIE5bits.TMR7IE == 0;
 48304  014B06  010E               	movlb	14	; () banked
 48305  014B08  512E               	movf	46,w,b	;volatile
 48306                           
 48307                           ; BSR set to: 14
 48308                           ;main.c: 423: TMR7_StopTimer();
 48309  014B0A  ECE5  F0D8         	call	i2_TMR7_StopTimer	;wreg free
 48310                           
 48311                           ;main.c: 426: }
 48312                           
 48313                           ;main.c: 424: break;
 48314  014B0E  0012               	return	
 48315  014B10                     i2l1330:
 48316  014B10  0100               	movlb	0	; () banked
 48317  014B12  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 48318                           
 48319                           ; Switch size 1, requested type "space"
 48320                           ; Number of cases is 6, Range of values is 0 to 63
 48321                           ; switch strategies available:
 48322                           ; Name         Instructions Cycles
 48323                           ; simple_byte           19    10 (average)
 48324                           ;	Chosen strategy is simple_byte
 48325  014B14  0A00               	xorlw	0	; case 0
 48326  014B16  B4D8               	btfsc	status,2,c
 48327  014B18  EF6F  F0A1         	goto	i2l1345
 48328  014B1C  0A04               	xorlw	4	; case 4
 48329  014B1E  B4D8               	btfsc	status,2,c
 48330  014B20  D688               	goto	i2l1355
 48331  014B22  0A26               	xorlw	38	; case 34
 48332  014B24  B4D8               	btfsc	status,2,c
 48333  014B26  EF0C  F0A1         	goto	i2l1341
 48334  014B2A  0A1E               	xorlw	30	; case 60
 48335  014B2C  B4D8               	btfsc	status,2,c
 48336  014B2E  EF3A  F0A0         	goto	i2l1331
 48337  014B32  0A01               	xorlw	1	; case 61
 48338  014B34  B4D8               	btfsc	status,2,c
 48339  014B36  D6F2               	goto	i2l1359
 48340  014B38  0A02               	xorlw	2	; case 63
 48341  014B3A  B4D8               	btfsc	status,2,c
 48342  014B3C  EF83  F0A0         	goto	i2l1337
 48343  014B40  D7E0               	goto	i2l1363
 48344  014B42                     __end_of_ADCPostProcessingCallback:
 48345                           	opt stack 0
 48346                           tosu	equ	0xFFF
 48347                           tosh	equ	0xFFE
 48348                           tosl	equ	0xFFD
 48349                           pclatu	equ	0xFFB
 48350                           pclath	equ	0xFFA
 48351                           tblptru	equ	0xFF8
 48352                           tblptrh	equ	0xFF7
 48353                           tblptrl	equ	0xFF6
 48354                           tablat	equ	0xFF5
 48355                           prodh	equ	0xFF4
 48356                           prodl	equ	0xFF3
 48357                           intcon	equ	0xFF2
 48358                           indf0	equ	0xFEF
 48359                           postinc0	equ	0xFEE
 48360                           fsr0h	equ	0xFEA
 48361                           fsr0l	equ	0xFE9
 48362                           wreg	equ	0xFE8
 48363                           indf1	equ	0xFE7
 48364                           postdec1	equ	0xFE5
 48365                           plusw1	equ	0xFE3
 48366                           fsr1h	equ	0xFE2
 48367                           fsr1l	equ	0xFE1
 48368                           bsr	equ	0xFE0
 48369                           indf2	equ	0xFDF
 48370                           postinc2	equ	0xFDE
 48371                           postdec2	equ	0xFDD
 48372                           plusw2	equ	0xFDB
 48373                           fsr2h	equ	0xFDA
 48374                           fsr2l	equ	0xFD9
 48375                           status	equ	0xFD8
 48376                           
 48377 ;; *************** function i2_TMR7_StopTimer *****************
 48378 ;; Defined at:
 48379 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 48380 ;; Parameters:    Size  Location     Type
 48381 ;;		None
 48382 ;; Auto vars:     Size  Location     Type
 48383 ;;		None
 48384 ;; Return value:  Size  Location     Type
 48385 ;;                  1    wreg      void 
 48386 ;; Registers used:
 48387 ;;		None
 48388 ;; Tracked objects:
 48389 ;;		On entry : 0/0
 48390 ;;		On exit  : 0/0
 48391 ;;		Unchanged: 0/0
 48392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 48393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48397 ;;Total ram usage:        0 bytes
 48398 ;; Hardware stack levels used:    1
 48399 ;; This function calls:
 48400 ;;		Nothing
 48401 ;; This function is called by:
 48402 ;;		_ADCPostProcessingCallback
 48403 ;; This function uses a non-reentrant model
 48404 ;;
 48405                           
 48406                           	psect	text145
 48407  01B1CA                     __ptext145:
 48408                           	opt stack 0
 48409  01B1CA                     i2_TMR7_StopTimer:
 48410                           	opt stack 15
 48411                           
 48412                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 48413                           
 48414                           ;incstack = 0
 48415  01B1CA  010F               	movlb	15	; () banked
 48416  01B1CC  9130               	bcf	48,0,b	;volatile
 48417                           
 48418                           ; BSR set to: 15
 48419  01B1CE  0012               	return		;funcret
 48420  01B1D0                     __end_ofi2_TMR7_StopTimer:
 48421                           	opt stack 0
 48422                           tosu	equ	0xFFF
 48423                           tosh	equ	0xFFE
 48424                           tosl	equ	0xFFD
 48425                           pclatu	equ	0xFFB
 48426                           pclath	equ	0xFFA
 48427                           tblptru	equ	0xFF8
 48428                           tblptrh	equ	0xFF7
 48429                           tblptrl	equ	0xFF6
 48430                           tablat	equ	0xFF5
 48431                           prodh	equ	0xFF4
 48432                           prodl	equ	0xFF3
 48433                           intcon	equ	0xFF2
 48434                           indf0	equ	0xFEF
 48435                           postinc0	equ	0xFEE
 48436                           fsr0h	equ	0xFEA
 48437                           fsr0l	equ	0xFE9
 48438                           wreg	equ	0xFE8
 48439                           indf1	equ	0xFE7
 48440                           postdec1	equ	0xFE5
 48441                           plusw1	equ	0xFE3
 48442                           fsr1h	equ	0xFE2
 48443                           fsr1l	equ	0xFE1
 48444                           bsr	equ	0xFE0
 48445                           indf2	equ	0xFDF
 48446                           postinc2	equ	0xFDE
 48447                           postdec2	equ	0xFDD
 48448                           plusw2	equ	0xFDB
 48449                           fsr2h	equ	0xFDA
 48450                           fsr2l	equ	0xFD9
 48451                           status	equ	0xFD8
 48452                           
 48453 ;; *************** function _peakToRMS *****************
 48454 ;; Defined at:
 48455 ;;		line 125 in file "main.c"
 48456 ;; Parameters:    Size  Location     Type
 48457 ;;  Peak            4   81[BANK0 ] void 
 48458 ;;  Angle           4   85[BANK0 ] void 
 48459 ;; Auto vars:     Size  Location     Type
 48460 ;;  RMS             4  101[BANK0 ] void 
 48461 ;; Return value:  Size  Location     Type
 48462 ;;                  4   81[BANK0 ] void 
 48463 ;; Registers used:
 48464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48465 ;; Tracked objects:
 48466 ;;		On entry : 0/0
 48467 ;;		On exit  : 0/0
 48468 ;;		Unchanged: 0/0
 48469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 48470 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48471 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48473 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48474 ;;Total ram usage:       24 bytes
 48475 ;; Hardware stack levels used:    1
 48476 ;; Hardware stack levels required when called:    5
 48477 ;; This function calls:
 48478 ;;		_acos
 48479 ;;		_sin
 48480 ;;		_sqrt
 48481 ;;		i2___fladd
 48482 ;;		i2___fldiv
 48483 ;;		i2___flmul
 48484 ;;		i2___flneg
 48485 ;; This function is called by:
 48486 ;;		_ADCPostProcessingCallback
 48487 ;; This function uses a non-reentrant model
 48488 ;;
 48489                           
 48490                           	psect	text146
 48491  017D4E                     __ptext146:
 48492                           	opt stack 0
 48493  017D4E                     _peakToRMS:
 48494                           	opt stack 10
 48495                           
 48496                           ;main.c: 128: double RMS = 0.0;
 48497                           
 48498                           ; BSR set to: 15
 48499                           ;incstack = 0
 48500  017D4E  0E00               	movlw	0
 48501  017D50  0100               	movlb	0	; () banked
 48502  017D52  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 48503  017D54  0E00               	movlw	0
 48504  017D56  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 48505  017D58  0E00               	movlw	0
 48506  017D5A  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 48507  017D5C  0E00               	movlw	0
 48508  017D5E  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 48509                           
 48510                           ; BSR set to: 0
 48511                           ;main.c: 131: RMS = 2.0 * acos(-1.0);
 48512  017D60  0E00               	movlw	0
 48513  017D62  6FA9               	movwf	acos@x& (0+255),b
 48514  017D64  0E00               	movlw	0
 48515  017D66  6FAA               	movwf	(acos@x+1)& (0+255),b
 48516  017D68  0E80               	movlw	128
 48517  017D6A  6FAB               	movwf	(acos@x+2)& (0+255),b
 48518  017D6C  0EBF               	movlw	191
 48519  017D6E  6FAC               	movwf	(acos@x+3)& (0+255),b
 48520  017D70  EC80  F0CF         	call	_acos	;wreg free
 48521  017D74  C0A9  F0C1         	movff	?_acos,_peakToRMS$5341
 48522  017D78  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$5341+1
 48523  017D7C  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$5341+2
 48524  017D80  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$5341+3
 48525                           
 48526                           ;main.c: 131: RMS = 2.0 * acos(-1.0);
 48527  017D84  C0C1  F030         	movff	_peakToRMS$5341,i2___flmul@b
 48528  017D88  C0C2  F031         	movff	_peakToRMS$5341+1,i2___flmul@b+1
 48529  017D8C  C0C3  F032         	movff	_peakToRMS$5341+2,i2___flmul@b+2
 48530  017D90  C0C4  F033         	movff	_peakToRMS$5341+3,i2___flmul@b+3
 48531  017D94  0E00               	movlw	0
 48532  017D96  6E34               	movwf	i2___flmul@a,c
 48533  017D98  0E00               	movlw	0
 48534  017D9A  6E35               	movwf	i2___flmul@a+1,c
 48535  017D9C  0E00               	movlw	0
 48536  017D9E  6E36               	movwf	i2___flmul@a+2,c
 48537  017DA0  0E40               	movlw	64
 48538  017DA2  6E37               	movwf	i2___flmul@a+3,c
 48539  017DA4  EC90  F0AD         	call	i2___flmul	;wreg free
 48540  017DA8  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 48541  017DAC  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 48542  017DB0  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 48543  017DB4  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 48544                           
 48545                           ;main.c: 132: RMS = RMS - (2.0 * Angle);
 48546  017DB8  0E00               	movlw	0
 48547  017DBA  6E34               	movwf	i2___flmul@a,c
 48548  017DBC  0E00               	movlw	0
 48549  017DBE  6E35               	movwf	i2___flmul@a+1,c
 48550  017DC0  0E00               	movlw	0
 48551  017DC2  6E36               	movwf	i2___flmul@a+2,c
 48552  017DC4  0E40               	movlw	64
 48553  017DC6  6E37               	movwf	i2___flmul@a+3,c
 48554  017DC8  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 48555  017DCC  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 48556  017DD0  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 48557  017DD4  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 48558  017DD8  EC90  F0AD         	call	i2___flmul	;wreg free
 48559  017DDC  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 48560  017DE0  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 48561  017DE4  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 48562  017DE8  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 48563  017DEC  EC89  F0D6         	call	i2___flneg	;wreg free
 48564  017DF0  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 48565  017DF4  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 48566  017DF8  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 48567  017DFC  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 48568  017E00  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 48569  017E04  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 48570  017E08  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 48571  017E0C  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 48572  017E10  ECD7  F0B0         	call	i2___fladd	;wreg free
 48573  017E14  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 48574  017E18  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 48575  017E1C  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 48576  017E20  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 48577                           
 48578                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 48579  017E24  0E00               	movlw	0
 48580  017E26  6E34               	movwf	i2___flmul@a,c
 48581  017E28  0E00               	movlw	0
 48582  017E2A  6E35               	movwf	i2___flmul@a+1,c
 48583  017E2C  0E00               	movlw	0
 48584  017E2E  6E36               	movwf	i2___flmul@a+2,c
 48585  017E30  0E40               	movlw	64
 48586  017E32  6E37               	movwf	i2___flmul@a+3,c
 48587  017E34  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 48588  017E38  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 48589  017E3C  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 48590  017E40  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 48591  017E44  EC90  F0AD         	call	i2___flmul	;wreg free
 48592  017E48  C030  F0B9         	movff	?i2___flmul,_peakToRMS$5342
 48593  017E4C  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$5342+1
 48594  017E50  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$5342+2
 48595  017E54  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$5342+3
 48596                           
 48597                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 48598  017E58  C0B9  F088         	movff	_peakToRMS$5342,sin@f
 48599  017E5C  C0BA  F089         	movff	_peakToRMS$5342+1,sin@f+1
 48600  017E60  C0BB  F08A         	movff	_peakToRMS$5342+2,sin@f+2
 48601  017E64  C0BC  F08B         	movff	_peakToRMS$5342+3,sin@f+3
 48602  017E68  ECF8  F0B3         	call	_sin	;wreg free
 48603  017E6C  C088  F0BD         	movff	?_sin,_peakToRMS$5343
 48604  017E70  C089  F0BE         	movff	?_sin+1,_peakToRMS$5343+1
 48605  017E74  C08A  F0BF         	movff	?_sin+2,_peakToRMS$5343+2
 48606  017E78  C08B  F0C0         	movff	?_sin+3,_peakToRMS$5343+3
 48607                           
 48608                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 48609  017E7C  C0BD  F056         	movff	_peakToRMS$5343,i2___fladd@b
 48610  017E80  C0BE  F057         	movff	_peakToRMS$5343+1,i2___fladd@b+1
 48611  017E84  C0BF  F058         	movff	_peakToRMS$5343+2,i2___fladd@b+2
 48612  017E88  C0C0  F059         	movff	_peakToRMS$5343+3,i2___fladd@b+3
 48613  017E8C  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 48614  017E90  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 48615  017E94  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 48616  017E98  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 48617  017E9C  ECD7  F0B0         	call	i2___fladd	;wreg free
 48618  017EA0  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 48619  017EA4  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 48620  017EA8  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 48621  017EAC  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 48622                           
 48623                           ;main.c: 134: RMS = RMS / (4.0 * acos(-1.0));
 48624  017EB0  0E00               	movlw	0
 48625  017EB2  0100               	movlb	0	; () banked
 48626  017EB4  6FA9               	movwf	acos@x& (0+255),b
 48627  017EB6  0E00               	movlw	0
 48628  017EB8  6FAA               	movwf	(acos@x+1)& (0+255),b
 48629  017EBA  0E80               	movlw	128
 48630  017EBC  6FAB               	movwf	(acos@x+2)& (0+255),b
 48631  017EBE  0EBF               	movlw	191
 48632  017EC0  6FAC               	movwf	(acos@x+3)& (0+255),b
 48633  017EC2  EC80  F0CF         	call	_acos	;wreg free
 48634  017EC6  C0A9  F0C1         	movff	?_acos,_peakToRMS$5341
 48635  017ECA  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$5341+1
 48636  017ECE  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$5341+2
 48637  017ED2  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$5341+3
 48638                           
 48639                           ;main.c: 134: RMS = RMS / (4.0 * acos(-1.0));
 48640  017ED6  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 48641  017EDA  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 48642  017EDE  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 48643  017EE2  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 48644  017EE6  0E00               	movlw	0
 48645  017EE8  6E34               	movwf	i2___flmul@a,c
 48646  017EEA  0E00               	movlw	0
 48647  017EEC  6E35               	movwf	i2___flmul@a+1,c
 48648  017EEE  0E80               	movlw	128
 48649  017EF0  6E36               	movwf	i2___flmul@a+2,c
 48650  017EF2  0E40               	movlw	64
 48651  017EF4  6E37               	movwf	i2___flmul@a+3,c
 48652  017EF6  C0C1  F030         	movff	_peakToRMS$5341,i2___flmul@b
 48653  017EFA  C0C2  F031         	movff	_peakToRMS$5341+1,i2___flmul@b+1
 48654  017EFE  C0C3  F032         	movff	_peakToRMS$5341+2,i2___flmul@b+2
 48655  017F02  C0C4  F033         	movff	_peakToRMS$5341+3,i2___flmul@b+3
 48656  017F06  EC90  F0AD         	call	i2___flmul	;wreg free
 48657  017F0A  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 48658  017F0E  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 48659  017F12  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 48660  017F16  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 48661  017F1A  EC97  F0B9         	call	i2___fldiv	;wreg free
 48662  017F1E  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 48663  017F22  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 48664  017F26  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 48665  017F2A  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 48666                           
 48667                           ;main.c: 135: RMS = sqrt(RMS);
 48668  017F2E  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 48669  017F32  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 48670  017F36  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 48671  017F3A  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 48672  017F3E  EC75  F0B5         	call	_sqrt	;wreg free
 48673  017F42  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 48674  017F46  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 48675  017F4A  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 48676  017F4E  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 48677                           
 48678                           ;main.c: 136: RMS = Peak * RMS;
 48679  017F52  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 48680  017F56  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 48681  017F5A  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 48682  017F5E  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 48683  017F62  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 48684  017F66  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 48685  017F6A  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 48686  017F6E  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 48687  017F72  EC90  F0AD         	call	i2___flmul	;wreg free
 48688  017F76  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 48689  017F7A  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 48690  017F7E  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 48691  017F82  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 48692                           
 48693                           ;main.c: 137: return RMS;
 48694  017F86  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 48695  017F8A  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 48696  017F8E  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 48697  017F92  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 48698  017F96  0012               	return	
 48699  017F98                     __end_of_peakToRMS:
 48700                           	opt stack 0
 48701                           tosu	equ	0xFFF
 48702                           tosh	equ	0xFFE
 48703                           tosl	equ	0xFFD
 48704                           pclatu	equ	0xFFB
 48705                           pclath	equ	0xFFA
 48706                           tblptru	equ	0xFF8
 48707                           tblptrh	equ	0xFF7
 48708                           tblptrl	equ	0xFF6
 48709                           tablat	equ	0xFF5
 48710                           prodh	equ	0xFF4
 48711                           prodl	equ	0xFF3
 48712                           intcon	equ	0xFF2
 48713                           indf0	equ	0xFEF
 48714                           postinc0	equ	0xFEE
 48715                           fsr0h	equ	0xFEA
 48716                           fsr0l	equ	0xFE9
 48717                           wreg	equ	0xFE8
 48718                           indf1	equ	0xFE7
 48719                           postdec1	equ	0xFE5
 48720                           plusw1	equ	0xFE3
 48721                           fsr1h	equ	0xFE2
 48722                           fsr1l	equ	0xFE1
 48723                           bsr	equ	0xFE0
 48724                           indf2	equ	0xFDF
 48725                           postinc2	equ	0xFDE
 48726                           postdec2	equ	0xFDD
 48727                           plusw2	equ	0xFDB
 48728                           fsr2h	equ	0xFDA
 48729                           fsr2l	equ	0xFD9
 48730                           status	equ	0xFD8
 48731                           
 48732 ;; *************** function _acos *****************
 48733 ;; Defined at:
 48734 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 48735 ;; Parameters:    Size  Location     Type
 48736 ;;  x               4   73[BANK0 ] void 
 48737 ;; Auto vars:     Size  Location     Type
 48738 ;;		None
 48739 ;; Return value:  Size  Location     Type
 48740 ;;                  4   73[BANK0 ] void 
 48741 ;; Registers used:
 48742 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48743 ;; Tracked objects:
 48744 ;;		On entry : 0/0
 48745 ;;		On exit  : 0/0
 48746 ;;		Unchanged: 0/0
 48747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 48748 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48749 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48751 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48752 ;;Total ram usage:        8 bytes
 48753 ;; Hardware stack levels used:    1
 48754 ;; Hardware stack levels required when called:    4
 48755 ;; This function calls:
 48756 ;;		_asin
 48757 ;;		i2___fladd
 48758 ;;		i2___flneg
 48759 ;; This function is called by:
 48760 ;;		_peakToRMS
 48761 ;; This function uses a non-reentrant model
 48762 ;;
 48763                           
 48764                           	psect	text147
 48765  019F00                     __ptext147:
 48766                           	opt stack 0
 48767  019F00                     _acos:
 48768                           	opt stack 10
 48769                           
 48770                           ;incstack = 0
 48771  019F00  C0A9  F091         	movff	acos@x,asin@x
 48772  019F04  C0AA  F092         	movff	acos@x+1,asin@x+1
 48773  019F08  C0AB  F093         	movff	acos@x+2,asin@x+2
 48774  019F0C  C0AC  F094         	movff	acos@x+3,asin@x+3
 48775  019F10  EC76  F0B2         	call	_asin	;wreg free
 48776  019F14  C091  F0AD         	movff	?_asin,_acos$5349
 48777  019F18  C092  F0AE         	movff	?_asin+1,_acos$5349+1
 48778  019F1C  C093  F0AF         	movff	?_asin+2,_acos$5349+2
 48779  019F20  C094  F0B0         	movff	?_asin+3,_acos$5349+3
 48780  019F24  C0AD  F02C         	movff	_acos$5349,i2___flneg@f1
 48781  019F28  C0AE  F02D         	movff	_acos$5349+1,i2___flneg@f1+1
 48782  019F2C  C0AF  F02E         	movff	_acos$5349+2,i2___flneg@f1+2
 48783  019F30  C0B0  F02F         	movff	_acos$5349+3,i2___flneg@f1+3
 48784  019F34  EC89  F0D6         	call	i2___flneg	;wreg free
 48785  019F38  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 48786  019F3C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 48787  019F40  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 48788  019F44  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 48789  019F48  0EDB               	movlw	219
 48790  019F4A  6E5A               	movwf	i2___fladd@a,c
 48791  019F4C  0E0F               	movlw	15
 48792  019F4E  6E5B               	movwf	i2___fladd@a+1,c
 48793  019F50  0EC9               	movlw	201
 48794  019F52  6E5C               	movwf	i2___fladd@a+2,c
 48795  019F54  0E3F               	movlw	63
 48796  019F56  6E5D               	movwf	i2___fladd@a+3,c
 48797  019F58  ECD7  F0B0         	call	i2___fladd	;wreg free
 48798  019F5C  C056  F0A9         	movff	?i2___fladd,?_acos
 48799  019F60  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 48800  019F64  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 48801  019F68  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 48802  019F6C  0012               	return	
 48803  019F6E                     __end_of_acos:
 48804                           	opt stack 0
 48805                           tosu	equ	0xFFF
 48806                           tosh	equ	0xFFE
 48807                           tosl	equ	0xFFD
 48808                           pclatu	equ	0xFFB
 48809                           pclath	equ	0xFFA
 48810                           tblptru	equ	0xFF8
 48811                           tblptrh	equ	0xFF7
 48812                           tblptrl	equ	0xFF6
 48813                           tablat	equ	0xFF5
 48814                           prodh	equ	0xFF4
 48815                           prodl	equ	0xFF3
 48816                           intcon	equ	0xFF2
 48817                           indf0	equ	0xFEF
 48818                           postinc0	equ	0xFEE
 48819                           fsr0h	equ	0xFEA
 48820                           fsr0l	equ	0xFE9
 48821                           wreg	equ	0xFE8
 48822                           indf1	equ	0xFE7
 48823                           postdec1	equ	0xFE5
 48824                           plusw1	equ	0xFE3
 48825                           fsr1h	equ	0xFE2
 48826                           fsr1l	equ	0xFE1
 48827                           bsr	equ	0xFE0
 48828                           indf2	equ	0xFDF
 48829                           postinc2	equ	0xFDE
 48830                           postdec2	equ	0xFDD
 48831                           plusw2	equ	0xFDB
 48832                           fsr2h	equ	0xFDA
 48833                           fsr2l	equ	0xFD9
 48834                           status	equ	0xFD8
 48835                           
 48836 ;; *************** function _asin *****************
 48837 ;; Defined at:
 48838 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 48839 ;; Parameters:    Size  Location     Type
 48840 ;;  x               4   49[BANK0 ] void 
 48841 ;; Auto vars:     Size  Location     Type
 48842 ;;  y               4   65[BANK0 ] void 
 48843 ;;  sgn             4   53[BANK0 ] void 
 48844 ;; Return value:  Size  Location     Type
 48845 ;;                  4   49[BANK0 ] void 
 48846 ;; Registers used:
 48847 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48848 ;; Tracked objects:
 48849 ;;		On entry : 0/0
 48850 ;;		On exit  : 0/0
 48851 ;;		Unchanged: 0/0
 48852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 48853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48854 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48856 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48857 ;;Total ram usage:       24 bytes
 48858 ;; Hardware stack levels used:    1
 48859 ;; Hardware stack levels required when called:    3
 48860 ;; This function calls:
 48861 ;;		_atan
 48862 ;;		_fabs
 48863 ;;		_sqrt
 48864 ;;		i2___fladd
 48865 ;;		i2___fldiv
 48866 ;;		i2___flge
 48867 ;;		i2___flmul
 48868 ;;		i2___flneg
 48869 ;; This function is called by:
 48870 ;;		_acos
 48871 ;; This function uses a non-reentrant model
 48872 ;;
 48873                           
 48874                           	psect	text148
 48875  0164EC                     __ptext148:
 48876                           	opt stack 0
 48877  0164EC                     _asin:
 48878                           	opt stack 10
 48879                           
 48880                           ;incstack = 0
 48881  0164EC  0E00               	movlw	0
 48882  0164EE  6E34               	movwf	i2___flge@ff1,c
 48883  0164F0  0E00               	movlw	0
 48884  0164F2  6E35               	movwf	i2___flge@ff1+1,c
 48885  0164F4  0E80               	movlw	128
 48886  0164F6  6E36               	movwf	i2___flge@ff1+2,c
 48887  0164F8  0E3F               	movlw	63
 48888  0164FA  6E37               	movwf	i2___flge@ff1+3,c
 48889  0164FC  C091  F030         	movff	asin@x,fabs@d
 48890  016500  C092  F031         	movff	asin@x+1,fabs@d+1
 48891  016504  C093  F032         	movff	asin@x+2,fabs@d+2
 48892  016508  C094  F033         	movff	asin@x+3,fabs@d+3
 48893  01650C  EC13  F0D5         	call	_fabs	;wreg free
 48894  016510  C030  F038         	movff	?_fabs,i2___flge@ff2
 48895  016514  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 48896  016518  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 48897  01651C  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 48898  016520  ECF2  F0C6         	call	i2___flge	;wreg free
 48899  016524  B0D8               	btfsc	status,0,c
 48900  016526  D00F               	goto	i2l2231
 48901  016528  0E00               	movlw	0
 48902  01652A  0102               	movlb	2	; () banked
 48903  01652C  6F54               	movwf	(_errno+1)& (0+255),b
 48904  01652E  0E21               	movlw	33
 48905  016530  6F53               	movwf	_errno& (0+255),b
 48906  016532  0E00               	movlw	0
 48907  016534  0100               	movlb	0	; () banked
 48908  016536  6F91               	movwf	?_asin& (0+255),b
 48909  016538  0E00               	movlw	0
 48910  01653A  6F92               	movwf	(?_asin+1)& (0+255),b
 48911  01653C  0E00               	movlw	0
 48912  01653E  6F93               	movwf	(?_asin+2)& (0+255),b
 48913  016540  0E00               	movlw	0
 48914  016542  6F94               	movwf	(?_asin+3)& (0+255),b
 48915                           
 48916                           ; BSR set to: 0
 48917  016544  0012               	return	
 48918  016546                     i2l2231:
 48919                           
 48920                           ; BSR set to: 0
 48921  016546  0E00               	movlw	0
 48922  016548  0100               	movlb	0	; () banked
 48923  01654A  6F95               	movwf	asin@sgn& (0+255),b
 48924  01654C  0E00               	movlw	0
 48925  01654E  6F96               	movwf	(asin@sgn+1)& (0+255),b
 48926  016550  0E80               	movlw	128
 48927  016552  6F97               	movwf	(asin@sgn+2)& (0+255),b
 48928  016554  0E3F               	movlw	63
 48929  016556  6F98               	movwf	(asin@sgn+3)& (0+255),b
 48930                           
 48931                           ; BSR set to: 0
 48932  016558  C091  F034         	movff	asin@x,i2___flmul@a
 48933  01655C  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 48934  016560  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 48935  016564  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 48936  016568  C091  F030         	movff	asin@x,i2___flmul@b
 48937  01656C  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 48938  016570  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 48939  016574  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 48940  016578  EC90  F0AD         	call	i2___flmul	;wreg free
 48941  01657C  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 48942  016580  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 48943  016584  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 48944  016588  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 48945  01658C  EC89  F0D6         	call	i2___flneg	;wreg free
 48946  016590  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 48947  016594  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 48948  016598  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 48949  01659C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 48950  0165A0  0E00               	movlw	0
 48951  0165A2  6E5A               	movwf	i2___fladd@a,c
 48952  0165A4  0E00               	movlw	0
 48953  0165A6  6E5B               	movwf	i2___fladd@a+1,c
 48954  0165A8  0E80               	movlw	128
 48955  0165AA  6E5C               	movwf	i2___fladd@a+2,c
 48956  0165AC  0E3F               	movlw	63
 48957  0165AE  6E5D               	movwf	i2___fladd@a+3,c
 48958  0165B0  ECD7  F0B0         	call	i2___fladd	;wreg free
 48959  0165B4  C056  F06C         	movff	?i2___fladd,sqrt@a
 48960  0165B8  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 48961  0165BC  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 48962  0165C0  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 48963  0165C4  EC75  F0B5         	call	_sqrt	;wreg free
 48964  0165C8  C06C  F0A1         	movff	?_sqrt,asin@y
 48965  0165CC  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 48966  0165D0  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 48967  0165D4  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 48968  0165D8  C091  F030         	movff	asin@x,fabs@d
 48969  0165DC  C092  F031         	movff	asin@x+1,fabs@d+1
 48970  0165E0  C093  F032         	movff	asin@x+2,fabs@d+2
 48971  0165E4  C094  F033         	movff	asin@x+3,fabs@d+3
 48972  0165E8  EC13  F0D5         	call	_fabs	;wreg free
 48973  0165EC  C030  F034         	movff	?_fabs,i2___flge@ff1
 48974  0165F0  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 48975  0165F4  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 48976  0165F8  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 48977  0165FC  0E8F               	movlw	143
 48978  0165FE  6E38               	movwf	i2___flge@ff2,c
 48979  016600  0EC2               	movlw	194
 48980  016602  6E39               	movwf	i2___flge@ff2+1,c
 48981  016604  0E35               	movlw	53
 48982  016606  6E3A               	movwf	i2___flge@ff2+2,c
 48983  016608  0E3F               	movlw	63
 48984  01660A  6E3B               	movwf	i2___flge@ff2+3,c
 48985  01660C  ECF2  F0C6         	call	i2___flge	;wreg free
 48986  016610  B0D8               	btfsc	status,0,c
 48987  016612  D02D               	goto	i2l2233
 48988  016614  C091  F013         	movff	asin@x,i2___fldiv@b
 48989  016618  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 48990  01661C  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 48991  016620  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 48992  016624  C0A1  F017         	movff	asin@y,i2___fldiv@a
 48993  016628  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 48994  01662C  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 48995  016630  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 48996  016634  EC97  F0B9         	call	i2___fldiv	;wreg free
 48997  016638  C013  F0A5         	movff	?i2___fldiv,_asin$5350
 48998  01663C  C014  F0A6         	movff	?i2___fldiv+1,_asin$5350+1
 48999  016640  C015  F0A7         	movff	?i2___fldiv+2,_asin$5350+2
 49000  016644  C016  F0A8         	movff	?i2___fldiv+3,_asin$5350+3
 49001  016648  C0A5  F07C         	movff	_asin$5350,atan@f
 49002  01664C  C0A6  F07D         	movff	_asin$5350+1,atan@f+1
 49003  016650  C0A7  F07E         	movff	_asin$5350+2,atan@f+2
 49004  016654  C0A8  F07F         	movff	_asin$5350+3,atan@f+3
 49005  016658  ECCC  F0BF         	call	_atan	;wreg free
 49006  01665C  C07C  F091         	movff	?_atan,?_asin
 49007  016660  C07D  F092         	movff	?_atan+1,?_asin+1
 49008  016664  C07E  F093         	movff	?_atan+2,?_asin+2
 49009  016668  C07F  F094         	movff	?_atan+3,?_asin+3
 49010  01666C  0012               	return	
 49011  01666E                     i2l2233:
 49012  01666E  0100               	movlb	0	; () banked
 49013  016670  AF94               	btfss	(asin@x+3)& (0+255),7,b
 49014  016672  D06D               	goto	i2l2234
 49015                           
 49016                           ; BSR set to: 0
 49017  016674  C091  F017         	movff	asin@x,i2___fldiv@a
 49018  016678  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 49019  01667C  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 49020  016680  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 49021  016684  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 49022  016688  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 49023  01668C  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 49024  016690  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 49025  016694  EC89  F0D6         	call	i2___flneg	;wreg free
 49026  016698  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 49027  01669C  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 49028  0166A0  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 49029  0166A4  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 49030  0166A8  EC97  F0B9         	call	i2___fldiv	;wreg free
 49031  0166AC  C013  F0A5         	movff	?i2___fldiv,_asin$5350
 49032  0166B0  C014  F0A6         	movff	?i2___fldiv+1,_asin$5350+1
 49033  0166B4  C015  F0A7         	movff	?i2___fldiv+2,_asin$5350+2
 49034  0166B8  C016  F0A8         	movff	?i2___fldiv+3,_asin$5350+3
 49035  0166BC  C0A5  F07C         	movff	_asin$5350,atan@f
 49036  0166C0  C0A6  F07D         	movff	_asin$5350+1,atan@f+1
 49037  0166C4  C0A7  F07E         	movff	_asin$5350+2,atan@f+2
 49038  0166C8  C0A8  F07F         	movff	_asin$5350+3,atan@f+3
 49039  0166CC  ECCC  F0BF         	call	_atan	;wreg free
 49040  0166D0  C07C  F09D         	movff	?_atan,_asin$5351
 49041  0166D4  C07D  F09E         	movff	?_atan+1,_asin$5351+1
 49042  0166D8  C07E  F09F         	movff	?_atan+2,_asin$5351+2
 49043  0166DC  C07F  F0A0         	movff	?_atan+3,_asin$5351+3
 49044  0166E0  0EDB               	movlw	219
 49045  0166E2  6E5A               	movwf	i2___fladd@a,c
 49046  0166E4  0E0F               	movlw	15
 49047  0166E6  6E5B               	movwf	i2___fladd@a+1,c
 49048  0166E8  0EC9               	movlw	201
 49049  0166EA  6E5C               	movwf	i2___fladd@a+2,c
 49050  0166EC  0E3F               	movlw	63
 49051  0166EE  6E5D               	movwf	i2___fladd@a+3,c
 49052  0166F0  C09D  F02C         	movff	_asin$5351,i2___flneg@f1
 49053  0166F4  C09E  F02D         	movff	_asin$5351+1,i2___flneg@f1+1
 49054  0166F8  C09F  F02E         	movff	_asin$5351+2,i2___flneg@f1+2
 49055  0166FC  C0A0  F02F         	movff	_asin$5351+3,i2___flneg@f1+3
 49056  016700  EC89  F0D6         	call	i2___flneg	;wreg free
 49057  016704  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49058  016708  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49059  01670C  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49060  016710  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49061  016714  ECD7  F0B0         	call	i2___fladd	;wreg free
 49062  016718  C056  F099         	movff	?i2___fladd,_asin$5352
 49063  01671C  C057  F09A         	movff	?i2___fladd+1,_asin$5352+1
 49064  016720  C058  F09B         	movff	?i2___fladd+2,_asin$5352+2
 49065  016724  C059  F09C         	movff	?i2___fladd+3,_asin$5352+3
 49066  016728  C099  F02C         	movff	_asin$5352,i2___flneg@f1
 49067  01672C  C09A  F02D         	movff	_asin$5352+1,i2___flneg@f1+1
 49068  016730  C09B  F02E         	movff	_asin$5352+2,i2___flneg@f1+2
 49069  016734  C09C  F02F         	movff	_asin$5352+3,i2___flneg@f1+3
 49070  016738  EC89  F0D6         	call	i2___flneg	;wreg free
 49071  01673C  C02C  F091         	movff	?i2___flneg,?_asin
 49072  016740  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 49073  016744  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 49074  016748  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 49075  01674C  0012               	return	
 49076  01674E                     i2l2234:
 49077  01674E  C091  F017         	movff	asin@x,i2___fldiv@a
 49078  016752  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 49079  016756  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 49080  01675A  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 49081  01675E  C0A1  F013         	movff	asin@y,i2___fldiv@b
 49082  016762  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 49083  016766  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 49084  01676A  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 49085  01676E  EC97  F0B9         	call	i2___fldiv	;wreg free
 49086  016772  C013  F0A5         	movff	?i2___fldiv,_asin$5350
 49087  016776  C014  F0A6         	movff	?i2___fldiv+1,_asin$5350+1
 49088  01677A  C015  F0A7         	movff	?i2___fldiv+2,_asin$5350+2
 49089  01677E  C016  F0A8         	movff	?i2___fldiv+3,_asin$5350+3
 49090  016782  C0A5  F07C         	movff	_asin$5350,atan@f
 49091  016786  C0A6  F07D         	movff	_asin$5350+1,atan@f+1
 49092  01678A  C0A7  F07E         	movff	_asin$5350+2,atan@f+2
 49093  01678E  C0A8  F07F         	movff	_asin$5350+3,atan@f+3
 49094  016792  ECCC  F0BF         	call	_atan	;wreg free
 49095  016796  C07C  F09D         	movff	?_atan,_asin$5351
 49096  01679A  C07D  F09E         	movff	?_atan+1,_asin$5351+1
 49097  01679E  C07E  F09F         	movff	?_atan+2,_asin$5351+2
 49098  0167A2  C07F  F0A0         	movff	?_atan+3,_asin$5351+3
 49099  0167A6  C09D  F02C         	movff	_asin$5351,i2___flneg@f1
 49100  0167AA  C09E  F02D         	movff	_asin$5351+1,i2___flneg@f1+1
 49101  0167AE  C09F  F02E         	movff	_asin$5351+2,i2___flneg@f1+2
 49102  0167B2  C0A0  F02F         	movff	_asin$5351+3,i2___flneg@f1+3
 49103  0167B6  EC89  F0D6         	call	i2___flneg	;wreg free
 49104  0167BA  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49105  0167BE  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49106  0167C2  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49107  0167C6  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49108  0167CA  0EDB               	movlw	219
 49109  0167CC  6E5A               	movwf	i2___fladd@a,c
 49110  0167CE  0E0F               	movlw	15
 49111  0167D0  6E5B               	movwf	i2___fladd@a+1,c
 49112  0167D2  0EC9               	movlw	201
 49113  0167D4  6E5C               	movwf	i2___fladd@a+2,c
 49114  0167D6  0E3F               	movlw	63
 49115  0167D8  6E5D               	movwf	i2___fladd@a+3,c
 49116  0167DA  ECD7  F0B0         	call	i2___fladd	;wreg free
 49117  0167DE  C056  F091         	movff	?i2___fladd,?_asin
 49118  0167E2  C057  F092         	movff	?i2___fladd+1,?_asin+1
 49119  0167E6  C058  F093         	movff	?i2___fladd+2,?_asin+2
 49120  0167EA  C059  F094         	movff	?i2___fladd+3,?_asin+3
 49121  0167EE  0012               	return	
 49122  0167F0                     __end_of_asin:
 49123                           	opt stack 0
 49124                           tosu	equ	0xFFF
 49125                           tosh	equ	0xFFE
 49126                           tosl	equ	0xFFD
 49127                           pclatu	equ	0xFFB
 49128                           pclath	equ	0xFFA
 49129                           tblptru	equ	0xFF8
 49130                           tblptrh	equ	0xFF7
 49131                           tblptrl	equ	0xFF6
 49132                           tablat	equ	0xFF5
 49133                           prodh	equ	0xFF4
 49134                           prodl	equ	0xFF3
 49135                           intcon	equ	0xFF2
 49136                           indf0	equ	0xFEF
 49137                           postinc0	equ	0xFEE
 49138                           fsr0h	equ	0xFEA
 49139                           fsr0l	equ	0xFE9
 49140                           wreg	equ	0xFE8
 49141                           indf1	equ	0xFE7
 49142                           postdec1	equ	0xFE5
 49143                           plusw1	equ	0xFE3
 49144                           fsr1h	equ	0xFE2
 49145                           fsr1l	equ	0xFE1
 49146                           bsr	equ	0xFE0
 49147                           indf2	equ	0xFDF
 49148                           postinc2	equ	0xFDE
 49149                           postdec2	equ	0xFDD
 49150                           plusw2	equ	0xFDB
 49151                           fsr2h	equ	0xFDA
 49152                           fsr2l	equ	0xFD9
 49153                           status	equ	0xFD8
 49154                           
 49155 ;; *************** function _sqrt *****************
 49156 ;; Defined at:
 49157 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 49158 ;; Parameters:    Size  Location     Type
 49159 ;;  a               4   12[BANK0 ] void 
 49160 ;; Auto vars:     Size  Location     Type
 49161 ;;  frac            4   37[BANK0 ] unsigned long 
 49162 ;;  root            4   33[BANK0 ] struct .
 49163 ;;  grs             4   27[BANK0 ] unsigned long 
 49164 ;;  tfrac           4   22[BANK0 ] unsigned long 
 49165 ;;  exp             2   31[BANK0 ] int 
 49166 ;;  p               1   26[BANK0 ] unsigned char 
 49167 ;;  i               1   21[BANK0 ] unsigned char 
 49168 ;;  sign            1   20[BANK0 ] unsigned char 
 49169 ;; Return value:  Size  Location     Type
 49170 ;;                  4   12[BANK0 ] unsigned char 
 49171 ;; Registers used:
 49172 ;;		wreg, status,2, status,0
 49173 ;; Tracked objects:
 49174 ;;		On entry : 0/0
 49175 ;;		On exit  : 0/0
 49176 ;;		Unchanged: 0/0
 49177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49178 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49179 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49180 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49181 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49182 ;;Total ram usage:       29 bytes
 49183 ;; Hardware stack levels used:    1
 49184 ;; This function calls:
 49185 ;;		Nothing
 49186 ;; This function is called by:
 49187 ;;		_peakToRMS
 49188 ;;		_asin
 49189 ;; This function uses a non-reentrant model
 49190 ;;
 49191                           
 49192                           	psect	text149
 49193  016AEA                     __ptext149:
 49194                           	opt stack 0
 49195  016AEA                     _sqrt:
 49196                           	opt stack 14
 49197                           
 49198                           ;incstack = 0
 49199  016AEA  0100               	movlb	0	; () banked
 49200  016AEC  516F               	movf	(sqrt@a+3)& (0+255),w,b
 49201  016AEE  0B80               	andlw	128
 49202  016AF0  6F74               	movwf	sqrt@sign& (0+255),b
 49203  016AF2  516F               	movf	(sqrt@a+3)& (0+255),w,b
 49204  016AF4  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 49205  016AF6  6F7A               	movwf	sqrt@p& (0+255),b
 49206                           
 49207                           ; BSR set to: 0
 49208  016AF8  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 49209                           
 49210                           ; BSR set to: 0
 49211  016AFA  817A               	bsf	sqrt@p& (0+255),0,b
 49212                           
 49213                           ; BSR set to: 0
 49214                           
 49215                           ; BSR set to: 0
 49216  016AFC  C07A  F07F         	movff	sqrt@p,sqrt@exp
 49217  016B00  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 49218                           
 49219                           ; BSR set to: 0
 49220  016B02  0EFF               	movlw	255
 49221  016B04  156C               	andwf	sqrt@a& (0+255),w,b
 49222  016B06  6F85               	movwf	sqrt@frac& (0+255),b
 49223  016B08  0EFF               	movlw	255
 49224  016B0A  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 49225  016B0C  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 49226  016B0E  0E7F               	movlw	127
 49227  016B10  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 49228  016B12  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 49229  016B14  0E00               	movlw	0
 49230  016B16  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 49231  016B18  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 49232                           
 49233                           ; BSR set to: 0
 49234  016B1A  517F               	movf	sqrt@exp& (0+255),w,b
 49235  016B1C  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49236  016B1E  B4D8               	btfsc	status,2,c
 49237  016B20  D005               	goto	i2l2801
 49238                           
 49239                           ; BSR set to: 0
 49240  016B22  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 49241                           
 49242                           ; BSR set to: 0
 49243  016B24  297F               	incf	sqrt@exp& (0+255),w,b
 49244  016B26  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49245  016B28  A4D8               	btfss	status,2,c
 49246  016B2A  D008               	goto	i2l2803
 49247  016B2C                     i2l2801:
 49248                           
 49249                           ; BSR set to: 0
 49250                           
 49251                           ; BSR set to: 0
 49252  016B2C  0E00               	movlw	0
 49253  016B2E  6F85               	movwf	sqrt@frac& (0+255),b
 49254  016B30  0E00               	movlw	0
 49255  016B32  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 49256  016B34  0E00               	movlw	0
 49257  016B36  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 49258  016B38  0E00               	movlw	0
 49259  016B3A  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 49260  016B3C                     i2l2803:
 49261                           
 49262                           ; BSR set to: 0
 49263                           
 49264                           ; BSR set to: 0
 49265  016B3C  517F               	movf	sqrt@exp& (0+255),w,b
 49266  016B3E  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49267  016B40  A4D8               	btfss	status,2,c
 49268  016B42  D009               	goto	i2l2804
 49269                           
 49270                           ; BSR set to: 0
 49271  016B44  0E00               	movlw	0
 49272  016B46  6F6C               	movwf	?_sqrt& (0+255),b
 49273  016B48  0E00               	movlw	0
 49274  016B4A  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 49275  016B4C  0E00               	movlw	0
 49276  016B4E  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 49277  016B50  0E00               	movlw	0
 49278  016B52  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 49279                           
 49280                           ; BSR set to: 0
 49281  016B54  0012               	return	
 49282  016B56                     i2l2804:
 49283                           
 49284                           ; BSR set to: 0
 49285                           
 49286                           ; BSR set to: 0
 49287  016B56  5174               	movf	sqrt@sign& (0+255),w,b
 49288  016B58  B4D8               	btfsc	status,2,c
 49289  016B5A  D01A               	goto	i2l2806
 49290                           
 49291                           ; BSR set to: 0
 49292  016B5C  0E00               	movlw	0
 49293  016B5E  6F81               	movwf	sqrt@root& (0+255),b
 49294  016B60  0E00               	movlw	0
 49295  016B62  6F82               	movwf	(sqrt@root+1)& (0+255),b
 49296  016B64  0E40               	movlw	64
 49297  016B66  6F83               	movwf	(sqrt@root+2)& (0+255),b
 49298  016B68  0E00               	movlw	0
 49299  016B6A  6F84               	movwf	(sqrt@root+3)& (0+255),b
 49300                           
 49301                           ; BSR set to: 0
 49302  016B6C  0E80               	movlw	128
 49303  016B6E  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 49304  016B70  0EFF               	movlw	255
 49305  016B72  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 49306                           
 49307                           ; BSR set to: 0
 49308  016B74  0E00               	movlw	0
 49309  016B76  0102               	movlb	2	; () banked
 49310  016B78  6F54               	movwf	(_errno+1)& (0+255),b
 49311  016B7A  0E21               	movlw	33
 49312  016B7C  6F53               	movwf	_errno& (0+255),b
 49313                           
 49314                           ; BSR set to: 2
 49315  016B7E  C081  F06C         	movff	sqrt@root,?_sqrt
 49316  016B82  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 49317  016B86  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 49318  016B8A  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 49319                           
 49320                           ; BSR set to: 2
 49321  016B8E  0012               	return	
 49322  016B90                     i2l2806:
 49323                           
 49324                           ; BSR set to: 2
 49325  016B90  0100               	movlb	0	; () banked
 49326  016B92  297F               	incf	sqrt@exp& (0+255),w,b
 49327  016B94  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49328  016B96  A4D8               	btfss	status,2,c
 49329  016B98  D011               	goto	i2l2807
 49330                           
 49331                           ; BSR set to: 0
 49332  016B9A  0E00               	movlw	0
 49333  016B9C  6F81               	movwf	sqrt@root& (0+255),b
 49334  016B9E  0E00               	movlw	0
 49335  016BA0  6F82               	movwf	(sqrt@root+1)& (0+255),b
 49336  016BA2  0E80               	movlw	128
 49337  016BA4  6F83               	movwf	(sqrt@root+2)& (0+255),b
 49338  016BA6  0E7F               	movlw	127
 49339  016BA8  6F84               	movwf	(sqrt@root+3)& (0+255),b
 49340                           
 49341                           ; BSR set to: 0
 49342  016BAA  C081  F06C         	movff	sqrt@root,?_sqrt
 49343  016BAE  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 49344  016BB2  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 49345  016BB6  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 49346                           
 49347                           ; BSR set to: 0
 49348  016BBA  0012               	return	
 49349  016BBC                     i2l2807:
 49350                           
 49351                           ; BSR set to: 0
 49352                           
 49353                           ; BSR set to: 0
 49354  016BBC  0E81               	movlw	129
 49355  016BBE  277F               	addwf	sqrt@exp& (0+255),f,b
 49356  016BC0  0EFF               	movlw	255
 49357  016BC2  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 49358  016BC4  517F               	movf	sqrt@exp& (0+255),w,b
 49359  016BC6  0B01               	andlw	1
 49360  016BC8  6F7A               	movwf	sqrt@p& (0+255),b
 49361  016BCA  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 49362  016BCC  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 49363  016BCE  337F               	rrcf	sqrt@exp& (0+255),f,b
 49364  016BD0  0E7F               	movlw	127
 49365  016BD2  277F               	addwf	sqrt@exp& (0+255),f,b
 49366  016BD4  0E00               	movlw	0
 49367  016BD6  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 49368  016BD8  90D8               	bcf	status,0,c
 49369  016BDA  3585               	rlcf	sqrt@frac& (0+255),w,b
 49370  016BDC  6F76               	movwf	sqrt@tfrac& (0+255),b
 49371  016BDE  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 49372  016BE0  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 49373  016BE2  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 49374  016BE4  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 49375  016BE6  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 49376  016BE8  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 49377                           
 49378                           ; BSR set to: 0
 49379  016BEA  0E00               	movlw	0
 49380  016BEC  6F85               	movwf	sqrt@frac& (0+255),b
 49381  016BEE  0E00               	movlw	0
 49382  016BF0  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 49383  016BF2  0E00               	movlw	0
 49384  016BF4  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 49385  016BF6  0E00               	movlw	0
 49386  016BF8  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 49387                           
 49388                           ; BSR set to: 0
 49389  016BFA  0E00               	movlw	0
 49390  016BFC  6F7B               	movwf	sqrt@grs& (0+255),b
 49391  016BFE  0E00               	movlw	0
 49392  016C00  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 49393  016C02  0E00               	movlw	0
 49394  016C04  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 49395  016C06  0E01               	movlw	1
 49396  016C08  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 49397                           
 49398                           ; BSR set to: 0
 49399  016C0A  517A               	movf	sqrt@p& (0+255),w,b
 49400  016C0C  B4D8               	btfsc	status,2,c
 49401  016C0E  D005               	goto	i2l2808
 49402                           
 49403                           ; BSR set to: 0
 49404  016C10  90D8               	bcf	status,0,c
 49405  016C12  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 49406  016C14  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 49407  016C16  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 49408  016C18  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 49409  016C1A                     i2l2808:
 49410                           
 49411                           ; BSR set to: 0
 49412                           
 49413                           ; BSR set to: 0
 49414  016C1A  0E00               	movlw	0
 49415  016C1C  6F75               	movwf	sqrt@i& (0+255),b
 49416  016C1E  D052               	goto	i2l2809
 49417  016C20                     
 49418                           ; BSR set to: 0
 49419                           
 49420                           ; BSR set to: 0
 49421  016C20  517B               	movf	sqrt@grs& (0+255),w,b
 49422  016C22  1385               	iorwf	sqrt@frac& (0+255),f,b
 49423  016C24  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 49424  016C26  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 49425  016C28  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 49426  016C2A  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 49427  016C2C  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 49428  016C2E  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 49429  016C30  5185               	movf	sqrt@frac& (0+255),w,b
 49430  016C32  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 49431  016C34  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 49432  016C36  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 49433  016C38  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 49434  016C3A  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 49435  016C3C  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 49436  016C3E  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 49437  016C40  A0D8               	btfss	status,0,c
 49438  016C42  D011               	goto	i2l2811
 49439                           
 49440                           ; BSR set to: 0
 49441  016C44  5185               	movf	sqrt@frac& (0+255),w,b
 49442  016C46  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 49443  016C48  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 49444  016C4A  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 49445  016C4C  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 49446  016C4E  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 49447  016C50  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 49448  016C52  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 49449  016C54  517B               	movf	sqrt@grs& (0+255),w,b
 49450  016C56  2785               	addwf	sqrt@frac& (0+255),f,b
 49451  016C58  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 49452  016C5A  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 49453  016C5C  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 49454  016C5E  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 49455  016C60  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 49456  016C62  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 49457  016C64  D014               	goto	i2l2812
 49458  016C66                     i2l2811:
 49459                           
 49460                           ; BSR set to: 0
 49461                           
 49462                           ; BSR set to: 0
 49463  016C66  C07B  F070         	movff	sqrt@grs,??_sqrt
 49464  016C6A  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 49465  016C6E  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 49466  016C72  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 49467  016C76  1F70               	comf	??_sqrt& (0+255),f,b
 49468  016C78  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 49469  016C7A  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 49470  016C7C  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 49471  016C7E  5170               	movf	??_sqrt& (0+255),w,b
 49472  016C80  1785               	andwf	sqrt@frac& (0+255),f,b
 49473  016C82  5171               	movf	(??_sqrt+1)& (0+255),w,b
 49474  016C84  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 49475  016C86  5172               	movf	(??_sqrt+2)& (0+255),w,b
 49476  016C88  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 49477  016C8A  5173               	movf	(??_sqrt+3)& (0+255),w,b
 49478  016C8C  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 49479  016C8E                     i2l2812:
 49480                           
 49481                           ; BSR set to: 0
 49482                           
 49483                           ; BSR set to: 0
 49484  016C8E  C07B  F070         	movff	sqrt@grs,??_sqrt
 49485  016C92  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 49486  016C96  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 49487  016C9A  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 49488  016C9E  90D8               	bcf	status,0,c
 49489  016CA0  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 49490  016CA2  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 49491  016CA4  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 49492  016CA6  3370               	rrcf	??_sqrt& (0+255),f,b
 49493  016CA8  C070  F07B         	movff	??_sqrt,sqrt@grs
 49494  016CAC  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 49495  016CB0  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 49496  016CB4  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 49497                           
 49498                           ; BSR set to: 0
 49499  016CB8  90D8               	bcf	status,0,c
 49500  016CBA  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 49501  016CBC  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 49502  016CBE  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 49503  016CC0  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 49504                           
 49505                           ; BSR set to: 0
 49506  016CC2  2B75               	incf	sqrt@i& (0+255),f,b
 49507  016CC4                     i2l2809:
 49508                           
 49509                           ; BSR set to: 0
 49510                           
 49511                           ; BSR set to: 0
 49512  016CC4  0E18               	movlw	24
 49513  016CC6  6575               	cpfsgt	sqrt@i& (0+255),b
 49514  016CC8  D7AB               	goto	i2l2810
 49515                           
 49516                           ; BSR set to: 0
 49517                           
 49518                           ; BSR set to: 0
 49519  016CCA  C085  F070         	movff	sqrt@frac,??_sqrt
 49520  016CCE  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 49521  016CD2  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 49522  016CD6  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 49523  016CDA  90D8               	bcf	status,0,c
 49524  016CDC  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 49525  016CDE  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 49526  016CE0  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 49527  016CE2  3370               	rrcf	??_sqrt& (0+255),f,b
 49528  016CE4  C070  F085         	movff	??_sqrt,sqrt@frac
 49529  016CE8  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 49530  016CEC  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 49531  016CF0  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 49532                           
 49533                           ; BSR set to: 0
 49534  016CF4  0E01               	movlw	1
 49535  016CF6  1585               	andwf	sqrt@frac& (0+255),w,b
 49536  016CF8  6F7B               	movwf	sqrt@grs& (0+255),b
 49537  016CFA  0E00               	movlw	0
 49538  016CFC  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 49539  016CFE  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 49540  016D00  0E00               	movlw	0
 49541  016D02  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 49542  016D04  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 49543  016D06  0E00               	movlw	0
 49544  016D08  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 49545  016D0A  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 49546                           
 49547                           ; BSR set to: 0
 49548  016D0C  C085  F070         	movff	sqrt@frac,??_sqrt
 49549  016D10  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 49550  016D14  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 49551  016D18  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 49552  016D1C  90D8               	bcf	status,0,c
 49553  016D1E  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 49554  016D20  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 49555  016D22  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 49556  016D24  3370               	rrcf	??_sqrt& (0+255),f,b
 49557  016D26  C070  F085         	movff	??_sqrt,sqrt@frac
 49558  016D2A  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 49559  016D2E  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 49560  016D32  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 49561  016D36  517B               	movf	sqrt@grs& (0+255),w,b
 49562  016D38  2785               	addwf	sqrt@frac& (0+255),f,b
 49563  016D3A  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 49564  016D3C  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 49565  016D3E  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 49566  016D40  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 49567  016D42  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 49568  016D44  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 49569                           
 49570                           ; BSR set to: 0
 49571  016D46  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 49572  016D48  D017               	goto	i2l2814
 49573                           
 49574                           ; BSR set to: 0
 49575  016D4A  C085  F070         	movff	sqrt@frac,??_sqrt
 49576  016D4E  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 49577  016D52  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 49578  016D56  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 49579  016D5A  90D8               	bcf	status,0,c
 49580  016D5C  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 49581  016D5E  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 49582  016D60  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 49583  016D62  3370               	rrcf	??_sqrt& (0+255),f,b
 49584  016D64  C070  F085         	movff	??_sqrt,sqrt@frac
 49585  016D68  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 49586  016D6C  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 49587  016D70  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 49588  016D74  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 49589  016D76  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 49590  016D78                     i2l2814:
 49591                           
 49592                           ; BSR set to: 0
 49593                           
 49594                           ; BSR set to: 0
 49595  016D78  0EFF               	movlw	255
 49596  016D7A  1585               	andwf	sqrt@frac& (0+255),w,b
 49597  016D7C  6F81               	movwf	sqrt@root& (0+255),b
 49598  016D7E  0EFF               	movlw	255
 49599  016D80  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 49600  016D82  6F82               	movwf	(sqrt@root+1)& (0+255),b
 49601  016D84  0E7F               	movlw	127
 49602  016D86  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 49603  016D88  6F83               	movwf	(sqrt@root+2)& (0+255),b
 49604  016D8A  0E00               	movlw	0
 49605  016D8C  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 49606  016D8E  6F84               	movwf	(sqrt@root+3)& (0+255),b
 49607                           
 49608                           ; BSR set to: 0
 49609  016D90  C07F  F07A         	movff	sqrt@exp,sqrt@p
 49610                           
 49611                           ; BSR set to: 0
 49612  016D94  B17A               	btfsc	sqrt@p& (0+255),0,b
 49613                           
 49614                           ; BSR set to: 0
 49615  016D96  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 49616                           
 49617                           ; BSR set to: 0
 49618                           
 49619                           ; BSR set to: 0
 49620  016D98  90D8               	bcf	status,0,c
 49621  016D9A  317A               	rrcf	sqrt@p& (0+255),w,b
 49622  016D9C  6F84               	movwf	(sqrt@root+3)& (0+255),b
 49623                           
 49624                           ; BSR set to: 0
 49625  016D9E  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 49626                           
 49627                           ; BSR set to: 0
 49628  016DA0  C081  F06C         	movff	sqrt@root,?_sqrt
 49629  016DA4  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 49630  016DA8  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 49631  016DAC  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 49632  016DB0  0012               	return	
 49633  016DB2                     __end_of_sqrt:
 49634                           	opt stack 0
 49635                           tosu	equ	0xFFF
 49636                           tosh	equ	0xFFE
 49637                           tosl	equ	0xFFD
 49638                           pclatu	equ	0xFFB
 49639                           pclath	equ	0xFFA
 49640                           tblptru	equ	0xFF8
 49641                           tblptrh	equ	0xFF7
 49642                           tblptrl	equ	0xFF6
 49643                           tablat	equ	0xFF5
 49644                           prodh	equ	0xFF4
 49645                           prodl	equ	0xFF3
 49646                           intcon	equ	0xFF2
 49647                           indf0	equ	0xFEF
 49648                           postinc0	equ	0xFEE
 49649                           fsr0h	equ	0xFEA
 49650                           fsr0l	equ	0xFE9
 49651                           wreg	equ	0xFE8
 49652                           indf1	equ	0xFE7
 49653                           postdec1	equ	0xFE5
 49654                           plusw1	equ	0xFE3
 49655                           fsr1h	equ	0xFE2
 49656                           fsr1l	equ	0xFE1
 49657                           bsr	equ	0xFE0
 49658                           indf2	equ	0xFDF
 49659                           postinc2	equ	0xFDE
 49660                           postdec2	equ	0xFDD
 49661                           plusw2	equ	0xFDB
 49662                           fsr2h	equ	0xFDA
 49663                           fsr2l	equ	0xFD9
 49664                           status	equ	0xFD8
 49665                           
 49666 ;; *************** function _atan *****************
 49667 ;; Defined at:
 49668 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 49669 ;; Parameters:    Size  Location     Type
 49670 ;;  f               4   28[BANK0 ] unsigned char 
 49671 ;; Auto vars:     Size  Location     Type
 49672 ;;  val             4   45[BANK0 ] unsigned char 
 49673 ;;  val_squared     4   41[BANK0 ] unsigned char 
 49674 ;;  x               4   36[BANK0 ] unsigned char 
 49675 ;;  y               4   32[BANK0 ] unsigned char 
 49676 ;;  recip           1   40[BANK0 ] unsigned char 
 49677 ;; Return value:  Size  Location     Type
 49678 ;;                  4   28[BANK0 ] unsigned char 
 49679 ;; Registers used:
 49680 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49681 ;; Tracked objects:
 49682 ;;		On entry : 0/0
 49683 ;;		On exit  : 0/0
 49684 ;;		Unchanged: 0/0
 49685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49686 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49687 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49689 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49690 ;;Total ram usage:       21 bytes
 49691 ;; Hardware stack levels used:    1
 49692 ;; Hardware stack levels required when called:    2
 49693 ;; This function calls:
 49694 ;;		_eval_poly
 49695 ;;		_fabs
 49696 ;;		i2___fladd
 49697 ;;		i2___fldiv
 49698 ;;		i2___flge
 49699 ;;		i2___flmul
 49700 ;;		i2___flneg
 49701 ;; This function is called by:
 49702 ;;		_asin
 49703 ;; This function uses a non-reentrant model
 49704 ;;
 49705                           
 49706                           	psect	text150
 49707  017F98                     __ptext150:
 49708                           	opt stack 0
 49709  017F98                     _atan:
 49710                           	opt stack 10
 49711                           
 49712                           ;incstack = 0
 49713  017F98  C07C  F030         	movff	atan@f,fabs@d
 49714  017F9C  C07D  F031         	movff	atan@f+1,fabs@d+1
 49715  017FA0  C07E  F032         	movff	atan@f+2,fabs@d+2
 49716  017FA4  C07F  F033         	movff	atan@f+3,fabs@d+3
 49717  017FA8  EC13  F0D5         	call	_fabs	;wreg free
 49718  017FAC  C030  F08D         	movff	?_fabs,atan@val
 49719  017FB0  C031  F08E         	movff	?_fabs+1,atan@val+1
 49720  017FB4  C032  F08F         	movff	?_fabs+2,atan@val+2
 49721  017FB8  C033  F090         	movff	?_fabs+3,atan@val+3
 49722  017FBC  0100               	movlb	0	; () banked
 49723  017FBE  518D               	movf	atan@val& (0+255),w,b
 49724  017FC0  118E               	iorwf	(atan@val+1)& (0+255),w,b
 49725  017FC2  118F               	iorwf	(atan@val+2)& (0+255),w,b
 49726  017FC4  1190               	iorwf	(atan@val+3)& (0+255),w,b
 49727  017FC6  A4D8               	btfss	status,2,c
 49728  017FC8  D009               	goto	i2l2250
 49729                           
 49730                           ; BSR set to: 0
 49731  017FCA  0E00               	movlw	0
 49732  017FCC  6F7C               	movwf	?_atan& (0+255),b
 49733  017FCE  0E00               	movlw	0
 49734  017FD0  6F7D               	movwf	(?_atan+1)& (0+255),b
 49735  017FD2  0E00               	movlw	0
 49736  017FD4  6F7E               	movwf	(?_atan+2)& (0+255),b
 49737  017FD6  0E00               	movlw	0
 49738  017FD8  6F7F               	movwf	(?_atan+3)& (0+255),b
 49739                           
 49740                           ; BSR set to: 0
 49741  017FDA  0012               	return	
 49742  017FDC                     i2l2250:
 49743                           
 49744                           ; BSR set to: 0
 49745                           
 49746                           ; BSR set to: 0
 49747  017FDC  0E00               	movlw	0
 49748  017FDE  6E34               	movwf	i2___flge@ff1,c
 49749  017FE0  0E00               	movlw	0
 49750  017FE2  6E35               	movwf	i2___flge@ff1+1,c
 49751  017FE4  0E80               	movlw	128
 49752  017FE6  6E36               	movwf	i2___flge@ff1+2,c
 49753  017FE8  0E3F               	movlw	63
 49754  017FEA  6E37               	movwf	i2___flge@ff1+3,c
 49755  017FEC  C08D  F038         	movff	atan@val,i2___flge@ff2
 49756  017FF0  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 49757  017FF4  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 49758  017FF8  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 49759  017FFC  ECF2  F0C6         	call	i2___flge	;wreg free
 49760  018000  B0D8               	btfsc	status,0,c
 49761  018002  D002               	goto	i2u1930_40
 49762  018004  0E01               	movlw	1
 49763  018006  D001               	goto	i2u1931_40
 49764  018008                     i2u1930_40:
 49765  018008  0E00               	movlw	0
 49766  01800A                     i2u1931_40:
 49767  01800A  0100               	movlb	0	; () banked
 49768  01800C  6F88               	movwf	atan@recip& (0+255),b
 49769  01800E  5188               	movf	atan@recip& (0+255),w,b
 49770  018010  B4D8               	btfsc	status,2,c
 49771  018012  D01A               	goto	i2l2252
 49772                           
 49773                           ; BSR set to: 0
 49774  018014  0E00               	movlw	0
 49775  018016  6E13               	movwf	i2___fldiv@b,c
 49776  018018  0E00               	movlw	0
 49777  01801A  6E14               	movwf	i2___fldiv@b+1,c
 49778  01801C  0E80               	movlw	128
 49779  01801E  6E15               	movwf	i2___fldiv@b+2,c
 49780  018020  0E3F               	movlw	63
 49781  018022  6E16               	movwf	i2___fldiv@b+3,c
 49782  018024  C08D  F017         	movff	atan@val,i2___fldiv@a
 49783  018028  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 49784  01802C  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 49785  018030  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 49786  018034  EC97  F0B9         	call	i2___fldiv	;wreg free
 49787  018038  C013  F08D         	movff	?i2___fldiv,atan@val
 49788  01803C  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 49789  018040  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 49790  018044  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 49791  018048                     i2l2252:
 49792  018048  C08D  F030         	movff	atan@val,i2___flmul@b
 49793  01804C  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 49794  018050  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 49795  018054  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 49796  018058  C08D  F034         	movff	atan@val,i2___flmul@a
 49797  01805C  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 49798  018060  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 49799  018064  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 49800  018068  EC90  F0AD         	call	i2___flmul	;wreg free
 49801  01806C  C030  F089         	movff	?i2___flmul,atan@val_squared
 49802  018070  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 49803  018074  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 49804  018078  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 49805  01807C  C089  F06C         	movff	atan@val_squared,eval_poly@x
 49806  018080  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 49807  018084  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 49808  018088  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 49809  01808C  0E37               	movlw	low atan@coeff_b
 49810  01808E  0100               	movlb	0	; () banked
 49811  018090  6F70               	movwf	eval_poly@d& (0+255),b
 49812  018092  0ED3               	movlw	high atan@coeff_b
 49813  018094  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 49814  018096  0E00               	movlw	0
 49815  018098  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 49816  01809A  0E04               	movlw	4
 49817  01809C  6F72               	movwf	eval_poly@n& (0+255),b
 49818  01809E  EC8F  F0C8         	call	_eval_poly	;wreg free
 49819  0180A2  C06C  F080         	movff	?_eval_poly,atan@y
 49820  0180A6  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 49821  0180AA  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 49822  0180AE  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 49823  0180B2  C089  F06C         	movff	atan@val_squared,eval_poly@x
 49824  0180B6  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 49825  0180BA  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 49826  0180BE  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 49827  0180C2  0E0B               	movlw	low atan@coeff_a
 49828  0180C4  0100               	movlb	0	; () banked
 49829  0180C6  6F70               	movwf	eval_poly@d& (0+255),b
 49830  0180C8  0ED3               	movlw	high atan@coeff_a
 49831  0180CA  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 49832  0180CC  0E00               	movlw	0
 49833  0180CE  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 49834  0180D0  0E05               	movlw	5
 49835  0180D2  6F72               	movwf	eval_poly@n& (0+255),b
 49836  0180D4  EC8F  F0C8         	call	_eval_poly	;wreg free
 49837  0180D8  C06C  F084         	movff	?_eval_poly,atan@x
 49838  0180DC  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 49839  0180E0  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 49840  0180E4  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 49841  0180E8  C08D  F030         	movff	atan@val,i2___flmul@b
 49842  0180EC  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 49843  0180F0  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 49844  0180F4  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 49845  0180F8  C080  F017         	movff	atan@y,i2___fldiv@a
 49846  0180FC  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 49847  018100  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 49848  018104  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 49849  018108  C084  F013         	movff	atan@x,i2___fldiv@b
 49850  01810C  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 49851  018110  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 49852  018114  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 49853  018118  EC97  F0B9         	call	i2___fldiv	;wreg free
 49854  01811C  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 49855  018120  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 49856  018124  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 49857  018128  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 49858  01812C  EC90  F0AD         	call	i2___flmul	;wreg free
 49859  018130  C030  F08D         	movff	?i2___flmul,atan@val
 49860  018134  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 49861  018138  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 49862  01813C  C033  F090         	movff	?i2___flmul+3,atan@val+3
 49863  018140  0100               	movlb	0	; () banked
 49864  018142  5188               	movf	atan@recip& (0+255),w,b
 49865  018144  B4D8               	btfsc	status,2,c
 49866  018146  D024               	goto	i2l2253
 49867                           
 49868                           ; BSR set to: 0
 49869  018148  C08D  F02C         	movff	atan@val,i2___flneg@f1
 49870  01814C  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 49871  018150  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 49872  018154  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 49873  018158  EC89  F0D6         	call	i2___flneg	;wreg free
 49874  01815C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49875  018160  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49876  018164  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49877  018168  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49878  01816C  0EDB               	movlw	219
 49879  01816E  6E5A               	movwf	i2___fladd@a,c
 49880  018170  0E0F               	movlw	15
 49881  018172  6E5B               	movwf	i2___fladd@a+1,c
 49882  018174  0EC9               	movlw	201
 49883  018176  6E5C               	movwf	i2___fladd@a+2,c
 49884  018178  0E3F               	movlw	63
 49885  01817A  6E5D               	movwf	i2___fladd@a+3,c
 49886  01817C  ECD7  F0B0         	call	i2___fladd	;wreg free
 49887  018180  C056  F08D         	movff	?i2___fladd,atan@val
 49888  018184  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 49889  018188  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 49890  01818C  C059  F090         	movff	?i2___fladd+3,atan@val+3
 49891  018190                     i2l2253:
 49892  018190  0100               	movlb	0	; () banked
 49893  018192  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 49894  018194  D009               	goto	i2l2255
 49895                           
 49896                           ; BSR set to: 0
 49897  018196  C08D  F07C         	movff	atan@val,?_atan
 49898  01819A  C08E  F07D         	movff	atan@val+1,?_atan+1
 49899  01819E  C08F  F07E         	movff	atan@val+2,?_atan+2
 49900  0181A2  C090  F07F         	movff	atan@val+3,?_atan+3
 49901  0181A6  0012               	return	
 49902  0181A8                     i2l2255:
 49903                           
 49904                           ; BSR set to: 0
 49905                           
 49906                           ; BSR set to: 0
 49907  0181A8  C08D  F02C         	movff	atan@val,i2___flneg@f1
 49908  0181AC  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 49909  0181B0  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 49910  0181B4  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 49911  0181B8  EC89  F0D6         	call	i2___flneg	;wreg free
 49912  0181BC  C02C  F07C         	movff	?i2___flneg,?_atan
 49913  0181C0  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 49914  0181C4  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 49915  0181C8  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 49916  0181CC  0012               	return	
 49917  0181CE                     __end_of_atan:
 49918                           	opt stack 0
 49919                           tosu	equ	0xFFF
 49920                           tosh	equ	0xFFE
 49921                           tosl	equ	0xFFD
 49922                           pclatu	equ	0xFFB
 49923                           pclath	equ	0xFFA
 49924                           tblptru	equ	0xFF8
 49925                           tblptrh	equ	0xFF7
 49926                           tblptrl	equ	0xFF6
 49927                           tablat	equ	0xFF5
 49928                           prodh	equ	0xFF4
 49929                           prodl	equ	0xFF3
 49930                           intcon	equ	0xFF2
 49931                           indf0	equ	0xFEF
 49932                           postinc0	equ	0xFEE
 49933                           fsr0h	equ	0xFEA
 49934                           fsr0l	equ	0xFE9
 49935                           wreg	equ	0xFE8
 49936                           indf1	equ	0xFE7
 49937                           postdec1	equ	0xFE5
 49938                           plusw1	equ	0xFE3
 49939                           fsr1h	equ	0xFE2
 49940                           fsr1l	equ	0xFE1
 49941                           bsr	equ	0xFE0
 49942                           indf2	equ	0xFDF
 49943                           postinc2	equ	0xFDE
 49944                           postdec2	equ	0xFDD
 49945                           plusw2	equ	0xFDB
 49946                           fsr2h	equ	0xFDA
 49947                           fsr2l	equ	0xFD9
 49948                           status	equ	0xFD8
 49949                           
 49950 ;; *************** function _fabs *****************
 49951 ;; Defined at:
 49952 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 49953 ;; Parameters:    Size  Location     Type
 49954 ;;  d               4   47[COMRAM] unsigned char 
 49955 ;; Auto vars:     Size  Location     Type
 49956 ;;		None
 49957 ;; Return value:  Size  Location     Type
 49958 ;;                  4   47[COMRAM] unsigned char 
 49959 ;; Registers used:
 49960 ;;		wreg, status,2, status,0, cstack
 49961 ;; Tracked objects:
 49962 ;;		On entry : 0/0
 49963 ;;		On exit  : 0/0
 49964 ;;		Unchanged: 0/0
 49965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49970 ;;Total ram usage:        4 bytes
 49971 ;; Hardware stack levels used:    1
 49972 ;; Hardware stack levels required when called:    1
 49973 ;; This function calls:
 49974 ;;		i2___flneg
 49975 ;; This function is called by:
 49976 ;;		_asin
 49977 ;;		_atan
 49978 ;; This function uses a non-reentrant model
 49979 ;;
 49980                           
 49981                           	psect	text151
 49982  01AA26                     __ptext151:
 49983                           	opt stack 0
 49984  01AA26                     _fabs:
 49985                           	opt stack 11
 49986                           
 49987                           ;incstack = 0
 49988  01AA26  AE33               	btfss	fabs@d+3,7,c
 49989  01AA28  D013               	goto	i2l2347
 49990  01AA2A  C030  F02C         	movff	fabs@d,i2___flneg@f1
 49991  01AA2E  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 49992  01AA32  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 49993  01AA36  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 49994  01AA3A  EC89  F0D6         	call	i2___flneg	;wreg free
 49995  01AA3E  C02C  F030         	movff	?i2___flneg,?_fabs
 49996  01AA42  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 49997  01AA46  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 49998  01AA4A  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 49999  01AA4E  0012               	return	
 50000  01AA50                     i2l2347:
 50001  01AA50  C030  F030         	movff	fabs@d,?_fabs
 50002  01AA54  C031  F031         	movff	fabs@d+1,?_fabs+1
 50003  01AA58  C032  F032         	movff	fabs@d+2,?_fabs+2
 50004  01AA5C  C033  F033         	movff	fabs@d+3,?_fabs+3
 50005  01AA60  0012               	return		;funcret
 50006  01AA62                     __end_of_fabs:
 50007                           	opt stack 0
 50008                           tosu	equ	0xFFF
 50009                           tosh	equ	0xFFE
 50010                           tosl	equ	0xFFD
 50011                           pclatu	equ	0xFFB
 50012                           pclath	equ	0xFFA
 50013                           tblptru	equ	0xFF8
 50014                           tblptrh	equ	0xFF7
 50015                           tblptrl	equ	0xFF6
 50016                           tablat	equ	0xFF5
 50017                           prodh	equ	0xFF4
 50018                           prodl	equ	0xFF3
 50019                           intcon	equ	0xFF2
 50020                           indf0	equ	0xFEF
 50021                           postinc0	equ	0xFEE
 50022                           fsr0h	equ	0xFEA
 50023                           fsr0l	equ	0xFE9
 50024                           wreg	equ	0xFE8
 50025                           indf1	equ	0xFE7
 50026                           postdec1	equ	0xFE5
 50027                           plusw1	equ	0xFE3
 50028                           fsr1h	equ	0xFE2
 50029                           fsr1l	equ	0xFE1
 50030                           bsr	equ	0xFE0
 50031                           indf2	equ	0xFDF
 50032                           postinc2	equ	0xFDE
 50033                           postdec2	equ	0xFDD
 50034                           plusw2	equ	0xFDB
 50035                           fsr2h	equ	0xFDA
 50036                           fsr2l	equ	0xFD9
 50037                           status	equ	0xFD8
 50038                           
 50039 ;; *************** function _currentMeasuredToPeak *****************
 50040 ;; Defined at:
 50041 ;;		line 142 in file "main.c"
 50042 ;; Parameters:    Size  Location     Type
 50043 ;;  Measured        4   57[BANK0 ] unsigned char 
 50044 ;;  Angle           4   61[BANK0 ] unsigned char 
 50045 ;; Auto vars:     Size  Location     Type
 50046 ;;  Peak            4   65[BANK0 ] unsigned char 
 50047 ;; Return value:  Size  Location     Type
 50048 ;;                  4   57[BANK0 ] unsigned char 
 50049 ;; Registers used:
 50050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50051 ;; Tracked objects:
 50052 ;;		On entry : 0/0
 50053 ;;		On exit  : 0/0
 50054 ;;		Unchanged: 0/0
 50055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50056 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50057 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50059 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50060 ;;Total ram usage:       12 bytes
 50061 ;; Hardware stack levels used:    1
 50062 ;; Hardware stack levels required when called:    3
 50063 ;; This function calls:
 50064 ;;		_sin
 50065 ;;		i2___fldiv
 50066 ;; This function is called by:
 50067 ;;		_ADCPostProcessingCallback
 50068 ;; This function uses a non-reentrant model
 50069 ;;
 50070                           
 50071                           	psect	text152
 50072  019D28                     __ptext152:
 50073                           	opt stack 0
 50074  019D28                     _currentMeasuredToPeak:
 50075                           	opt stack 12
 50076                           
 50077                           ;main.c: 145: double Peak = 0.0;
 50078                           
 50079                           ;incstack = 0
 50080  019D28  0E00               	movlw	0
 50081  019D2A  0100               	movlb	0	; () banked
 50082  019D2C  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 50083  019D2E  0E00               	movlw	0
 50084  019D30  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 50085  019D32  0E00               	movlw	0
 50086  019D34  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 50087  019D36  0E00               	movlw	0
 50088  019D38  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 50089                           
 50090                           ; BSR set to: 0
 50091                           ;main.c: 148: Peak = sin(Angle);
 50092  019D3A  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 50093  019D3E  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 50094  019D42  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 50095  019D46  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 50096  019D4A  ECF8  F0B3         	call	_sin	;wreg free
 50097  019D4E  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 50098  019D52  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 50099  019D56  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 50100  019D5A  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 50101                           
 50102                           ;main.c: 149: Peak = Measured / Peak;
 50103  019D5E  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 50104  019D62  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 50105  019D66  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 50106  019D6A  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 50107  019D6E  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 50108  019D72  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 50109  019D76  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 50110  019D7A  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 50111  019D7E  EC97  F0B9         	call	i2___fldiv	;wreg free
 50112  019D82  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 50113  019D86  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 50114  019D8A  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 50115  019D8E  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 50116                           
 50117                           ;main.c: 150: return Peak;
 50118  019D92  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 50119  019D96  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 50120  019D9A  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 50121  019D9E  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 50122  019DA2  0012               	return	
 50123  019DA4                     __end_of_currentMeasuredToPeak:
 50124                           	opt stack 0
 50125                           tosu	equ	0xFFF
 50126                           tosh	equ	0xFFE
 50127                           tosl	equ	0xFFD
 50128                           pclatu	equ	0xFFB
 50129                           pclath	equ	0xFFA
 50130                           tblptru	equ	0xFF8
 50131                           tblptrh	equ	0xFF7
 50132                           tblptrl	equ	0xFF6
 50133                           tablat	equ	0xFF5
 50134                           prodh	equ	0xFF4
 50135                           prodl	equ	0xFF3
 50136                           intcon	equ	0xFF2
 50137                           indf0	equ	0xFEF
 50138                           postinc0	equ	0xFEE
 50139                           fsr0h	equ	0xFEA
 50140                           fsr0l	equ	0xFE9
 50141                           wreg	equ	0xFE8
 50142                           indf1	equ	0xFE7
 50143                           postdec1	equ	0xFE5
 50144                           plusw1	equ	0xFE3
 50145                           fsr1h	equ	0xFE2
 50146                           fsr1l	equ	0xFE1
 50147                           bsr	equ	0xFE0
 50148                           indf2	equ	0xFDF
 50149                           postinc2	equ	0xFDE
 50150                           postdec2	equ	0xFDD
 50151                           plusw2	equ	0xFDB
 50152                           fsr2h	equ	0xFDA
 50153                           fsr2l	equ	0xFD9
 50154                           status	equ	0xFD8
 50155                           
 50156 ;; *************** function _sin *****************
 50157 ;; Defined at:
 50158 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 50159 ;; Parameters:    Size  Location     Type
 50160 ;;  f               4   40[BANK0 ] unsigned char 
 50161 ;; Auto vars:     Size  Location     Type
 50162 ;;  x2              4   52[BANK0 ] unsigned char 
 50163 ;;  y               4   44[BANK0 ] unsigned char 
 50164 ;;  sgn             1   56[BANK0 ] unsigned char 
 50165 ;; Return value:  Size  Location     Type
 50166 ;;                  4   40[BANK0 ] unsigned char 
 50167 ;; Registers used:
 50168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50169 ;; Tracked objects:
 50170 ;;		On entry : 0/0
 50171 ;;		On exit  : 0/0
 50172 ;;		Unchanged: 0/0
 50173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50174 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50175 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50177 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50178 ;;Total ram usage:       17 bytes
 50179 ;; Hardware stack levels used:    1
 50180 ;; Hardware stack levels required when called:    2
 50181 ;; This function calls:
 50182 ;;		_eval_poly
 50183 ;;		_floor
 50184 ;;		i2___fladd
 50185 ;;		i2___fldiv
 50186 ;;		i2___flge
 50187 ;;		i2___flmul
 50188 ;;		i2___flneg
 50189 ;;		i2___flsub
 50190 ;; This function is called by:
 50191 ;;		_peakToRMS
 50192 ;;		_currentMeasuredToPeak
 50193 ;; This function uses a non-reentrant model
 50194 ;;
 50195                           
 50196                           	psect	text153
 50197  0167F0                     __ptext153:
 50198                           	opt stack 0
 50199  0167F0                     _sin:
 50200                           	opt stack 12
 50201                           
 50202                           ;incstack = 0
 50203  0167F0  0E00               	movlw	0
 50204  0167F2  0100               	movlb	0	; () banked
 50205  0167F4  6F98               	movwf	sin@sgn& (0+255),b
 50206                           
 50207                           ; BSR set to: 0
 50208  0167F6  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 50209  0167F8  D015               	goto	i2l2671
 50210                           
 50211                           ; BSR set to: 0
 50212  0167FA  C088  F02C         	movff	sin@f,i2___flneg@f1
 50213  0167FE  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 50214  016802  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 50215  016806  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 50216  01680A  EC89  F0D6         	call	i2___flneg	;wreg free
 50217  01680E  C02C  F088         	movff	?i2___flneg,sin@f
 50218  016812  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 50219  016816  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 50220  01681A  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 50221  01681E  0E01               	movlw	1
 50222  016820  0100               	movlb	0	; () banked
 50223  016822  6F98               	movwf	sin@sgn& (0+255),b
 50224  016824                     i2l2671:
 50225                           
 50226                           ; BSR set to: 0
 50227                           
 50228                           ; BSR set to: 0
 50229  016824  C088  F030         	movff	sin@f,i2___flmul@b
 50230  016828  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50231  01682C  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50232  016830  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50233  016834  0E83               	movlw	131
 50234  016836  6E34               	movwf	i2___flmul@a,c
 50235  016838  0EF9               	movlw	249
 50236  01683A  6E35               	movwf	i2___flmul@a+1,c
 50237  01683C  0E22               	movlw	34
 50238  01683E  6E36               	movwf	i2___flmul@a+2,c
 50239  016840  0E3E               	movlw	62
 50240  016842  6E37               	movwf	i2___flmul@a+3,c
 50241  016844  EC90  F0AD         	call	i2___flmul	;wreg free
 50242  016848  C030  F088         	movff	?i2___flmul,sin@f
 50243  01684C  C031  F089         	movff	?i2___flmul+1,sin@f+1
 50244  016850  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 50245  016854  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 50246  016858  C088  F080         	movff	sin@f,i2___flsub@b
 50247  01685C  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 50248  016860  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 50249  016864  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 50250  016868  C088  F076         	movff	sin@f,floor@x
 50251  01686C  C089  F077         	movff	sin@f+1,floor@x+1
 50252  016870  C08A  F078         	movff	sin@f+2,floor@x+2
 50253  016874  C08B  F079         	movff	sin@f+3,floor@x+3
 50254  016878  EC82  F0C7         	call	_floor	;wreg free
 50255  01687C  C076  F084         	movff	?_floor,i2___flsub@a
 50256  016880  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 50257  016884  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 50258  016888  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 50259  01688C  EC92  F0D3         	call	i2___flsub	;wreg free
 50260  016890  C080  F088         	movff	?i2___flsub,sin@f
 50261  016894  C081  F089         	movff	?i2___flsub+1,sin@f+1
 50262  016898  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 50263  01689C  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 50264  0168A0  C088  F030         	movff	sin@f,i2___flmul@b
 50265  0168A4  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50266  0168A8  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50267  0168AC  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50268  0168B0  0E00               	movlw	0
 50269  0168B2  6E34               	movwf	i2___flmul@a,c
 50270  0168B4  0E00               	movlw	0
 50271  0168B6  6E35               	movwf	i2___flmul@a+1,c
 50272  0168B8  0E80               	movlw	128
 50273  0168BA  6E36               	movwf	i2___flmul@a+2,c
 50274  0168BC  0E40               	movlw	64
 50275  0168BE  6E37               	movwf	i2___flmul@a+3,c
 50276  0168C0  EC90  F0AD         	call	i2___flmul	;wreg free
 50277  0168C4  C030  F088         	movff	?i2___flmul,sin@f
 50278  0168C8  C031  F089         	movff	?i2___flmul+1,sin@f+1
 50279  0168CC  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 50280  0168D0  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 50281  0168D4  0E00               	movlw	0
 50282  0168D6  6E34               	movwf	i2___flge@ff1,c
 50283  0168D8  0E00               	movlw	0
 50284  0168DA  6E35               	movwf	i2___flge@ff1+1,c
 50285  0168DC  0E00               	movlw	0
 50286  0168DE  6E36               	movwf	i2___flge@ff1+2,c
 50287  0168E0  0E40               	movlw	64
 50288  0168E2  6E37               	movwf	i2___flge@ff1+3,c
 50289  0168E4  C088  F038         	movff	sin@f,i2___flge@ff2
 50290  0168E8  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 50291  0168EC  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 50292  0168F0  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 50293  0168F4  ECF2  F0C6         	call	i2___flge	;wreg free
 50294  0168F8  B0D8               	btfsc	status,0,c
 50295  0168FA  D023               	goto	i2l2672
 50296  0168FC  C088  F080         	movff	sin@f,i2___flsub@b
 50297  016900  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 50298  016904  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 50299  016908  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 50300  01690C  0E00               	movlw	0
 50301  01690E  0100               	movlb	0	; () banked
 50302  016910  6F84               	movwf	i2___flsub@a& (0+255),b
 50303  016912  0E00               	movlw	0
 50304  016914  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 50305  016916  0E00               	movlw	0
 50306  016918  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 50307  01691A  0E40               	movlw	64
 50308  01691C  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 50309  01691E  EC92  F0D3         	call	i2___flsub	;wreg free
 50310  016922  C080  F088         	movff	?i2___flsub,sin@f
 50311  016926  C081  F089         	movff	?i2___flsub+1,sin@f+1
 50312  01692A  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 50313  01692E  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 50314  016932  0100               	movlb	0	; () banked
 50315  016934  5198               	movf	sin@sgn& (0+255),w,b
 50316  016936  A4D8               	btfss	status,2,c
 50317  016938  D002               	goto	i2u1988_40
 50318  01693A  0E01               	movlw	1
 50319  01693C  D001               	goto	i2u1989_40
 50320  01693E                     i2u1988_40:
 50321  01693E  0E00               	movlw	0
 50322  016940                     i2u1989_40:
 50323  016940  6F98               	movwf	sin@sgn& (0+255),b
 50324  016942                     i2l2672:
 50325                           
 50326                           ; BSR set to: 0
 50327  016942  0E00               	movlw	0
 50328  016944  6E34               	movwf	i2___flge@ff1,c
 50329  016946  0E00               	movlw	0
 50330  016948  6E35               	movwf	i2___flge@ff1+1,c
 50331  01694A  0E80               	movlw	128
 50332  01694C  6E36               	movwf	i2___flge@ff1+2,c
 50333  01694E  0E3F               	movlw	63
 50334  016950  6E37               	movwf	i2___flge@ff1+3,c
 50335  016952  C088  F038         	movff	sin@f,i2___flge@ff2
 50336  016956  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 50337  01695A  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 50338  01695E  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 50339  016962  ECF2  F0C6         	call	i2___flge	;wreg free
 50340  016966  B0D8               	btfsc	status,0,c
 50341  016968  D024               	goto	i2l2673
 50342  01696A  C088  F02C         	movff	sin@f,i2___flneg@f1
 50343  01696E  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 50344  016972  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 50345  016976  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 50346  01697A  EC89  F0D6         	call	i2___flneg	;wreg free
 50347  01697E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 50348  016982  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 50349  016986  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 50350  01698A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 50351  01698E  0E00               	movlw	0
 50352  016990  6E5A               	movwf	i2___fladd@a,c
 50353  016992  0E00               	movlw	0
 50354  016994  6E5B               	movwf	i2___fladd@a+1,c
 50355  016996  0E00               	movlw	0
 50356  016998  6E5C               	movwf	i2___fladd@a+2,c
 50357  01699A  0E40               	movlw	64
 50358  01699C  6E5D               	movwf	i2___fladd@a+3,c
 50359  01699E  ECD7  F0B0         	call	i2___fladd	;wreg free
 50360  0169A2  C056  F088         	movff	?i2___fladd,sin@f
 50361  0169A6  C057  F089         	movff	?i2___fladd+1,sin@f+1
 50362  0169AA  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 50363  0169AE  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 50364  0169B2                     i2l2673:
 50365  0169B2  C088  F030         	movff	sin@f,i2___flmul@b
 50366  0169B6  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50367  0169BA  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50368  0169BE  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50369  0169C2  C088  F034         	movff	sin@f,i2___flmul@a
 50370  0169C6  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 50371  0169CA  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 50372  0169CE  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 50373  0169D2  EC90  F0AD         	call	i2___flmul	;wreg free
 50374  0169D6  C030  F094         	movff	?i2___flmul,sin@x2
 50375  0169DA  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 50376  0169DE  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 50377  0169E2  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 50378  0169E6  C094  F06C         	movff	sin@x2,eval_poly@x
 50379  0169EA  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 50380  0169EE  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 50381  0169F2  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 50382  0169F6  0E4B               	movlw	low sin@coeff_b
 50383  0169F8  0100               	movlb	0	; () banked
 50384  0169FA  6F70               	movwf	eval_poly@d& (0+255),b
 50385  0169FC  0ED3               	movlw	high sin@coeff_b
 50386  0169FE  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50387  016A00  0E00               	movlw	0
 50388  016A02  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50389  016A04  0E03               	movlw	3
 50390  016A06  6F72               	movwf	eval_poly@n& (0+255),b
 50391  016A08  EC8F  F0C8         	call	_eval_poly	;wreg free
 50392  016A0C  C06C  F08C         	movff	?_eval_poly,sin@y
 50393  016A10  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 50394  016A14  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 50395  016A18  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 50396  016A1C  C08C  F017         	movff	sin@y,i2___fldiv@a
 50397  016A20  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 50398  016A24  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 50399  016A28  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 50400  016A2C  0E00               	movlw	0
 50401  016A2E  0100               	movlb	0	; () banked
 50402  016A30  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50403  016A32  0E04               	movlw	4
 50404  016A34  6F72               	movwf	eval_poly@n& (0+255),b
 50405  016A36  0E23               	movlw	low sin@coeff_a
 50406  016A38  6F70               	movwf	eval_poly@d& (0+255),b
 50407  016A3A  0ED3               	movlw	high sin@coeff_a
 50408  016A3C  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50409  016A3E  C094  F06C         	movff	sin@x2,eval_poly@x
 50410  016A42  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 50411  016A46  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 50412  016A4A  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 50413  016A4E  EC8F  F0C8         	call	_eval_poly	;wreg free
 50414  016A52  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 50415  016A56  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 50416  016A5A  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 50417  016A5E  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 50418  016A62  EC97  F0B9         	call	i2___fldiv	;wreg free
 50419  016A66  C013  F090         	movff	?i2___fldiv,_sin$5353
 50420  016A6A  C014  F091         	movff	?i2___fldiv+1,_sin$5353+1
 50421  016A6E  C015  F092         	movff	?i2___fldiv+2,_sin$5353+2
 50422  016A72  C016  F093         	movff	?i2___fldiv+3,_sin$5353+3
 50423  016A76  C088  F030         	movff	sin@f,i2___flmul@b
 50424  016A7A  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50425  016A7E  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50426  016A82  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50427  016A86  C090  F034         	movff	_sin$5353,i2___flmul@a
 50428  016A8A  C091  F035         	movff	_sin$5353+1,i2___flmul@a+1
 50429  016A8E  C092  F036         	movff	_sin$5353+2,i2___flmul@a+2
 50430  016A92  C093  F037         	movff	_sin$5353+3,i2___flmul@a+3
 50431  016A96  EC90  F0AD         	call	i2___flmul	;wreg free
 50432  016A9A  C030  F088         	movff	?i2___flmul,sin@f
 50433  016A9E  C031  F089         	movff	?i2___flmul+1,sin@f+1
 50434  016AA2  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 50435  016AA6  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 50436  016AAA  0100               	movlb	0	; () banked
 50437  016AAC  5198               	movf	sin@sgn& (0+255),w,b
 50438  016AAE  B4D8               	btfsc	status,2,c
 50439  016AB0  D013               	goto	i2l2674
 50440                           
 50441                           ; BSR set to: 0
 50442  016AB2  C088  F02C         	movff	sin@f,i2___flneg@f1
 50443  016AB6  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 50444  016ABA  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 50445  016ABE  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 50446  016AC2  EC89  F0D6         	call	i2___flneg	;wreg free
 50447  016AC6  C02C  F088         	movff	?i2___flneg,?_sin
 50448  016ACA  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 50449  016ACE  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 50450  016AD2  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 50451  016AD6  0012               	return	
 50452  016AD8                     i2l2674:
 50453                           
 50454                           ; BSR set to: 0
 50455  016AD8  C088  F088         	movff	sin@f,?_sin
 50456  016ADC  C089  F089         	movff	sin@f+1,?_sin+1
 50457  016AE0  C08A  F08A         	movff	sin@f+2,?_sin+2
 50458  016AE4  C08B  F08B         	movff	sin@f+3,?_sin+3
 50459  016AE8  0012               	return		;funcret
 50460  016AEA                     __end_of_sin:
 50461                           	opt stack 0
 50462                           tosu	equ	0xFFF
 50463                           tosh	equ	0xFFE
 50464                           tosl	equ	0xFFD
 50465                           pclatu	equ	0xFFB
 50466                           pclath	equ	0xFFA
 50467                           tblptru	equ	0xFF8
 50468                           tblptrh	equ	0xFF7
 50469                           tblptrl	equ	0xFF6
 50470                           tablat	equ	0xFF5
 50471                           prodh	equ	0xFF4
 50472                           prodl	equ	0xFF3
 50473                           intcon	equ	0xFF2
 50474                           indf0	equ	0xFEF
 50475                           postinc0	equ	0xFEE
 50476                           fsr0h	equ	0xFEA
 50477                           fsr0l	equ	0xFE9
 50478                           wreg	equ	0xFE8
 50479                           indf1	equ	0xFE7
 50480                           postdec1	equ	0xFE5
 50481                           plusw1	equ	0xFE3
 50482                           fsr1h	equ	0xFE2
 50483                           fsr1l	equ	0xFE1
 50484                           bsr	equ	0xFE0
 50485                           indf2	equ	0xFDF
 50486                           postinc2	equ	0xFDE
 50487                           postdec2	equ	0xFDD
 50488                           plusw2	equ	0xFDB
 50489                           fsr2h	equ	0xFDA
 50490                           fsr2l	equ	0xFD9
 50491                           status	equ	0xFD8
 50492                           
 50493 ;; *************** function i2___flsub *****************
 50494 ;; Defined at:
 50495 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 50496 ;; Parameters:    Size  Location     Type
 50497 ;;  b               4   32[BANK0 ] unsigned char 
 50498 ;;  a               4   36[BANK0 ] unsigned char 
 50499 ;; Auto vars:     Size  Location     Type
 50500 ;;		None
 50501 ;; Return value:  Size  Location     Type
 50502 ;;                  4   32[BANK0 ] unsigned char 
 50503 ;; Registers used:
 50504 ;;		wreg, status,2, status,0, cstack
 50505 ;; Tracked objects:
 50506 ;;		On entry : 0/0
 50507 ;;		On exit  : 0/0
 50508 ;;		Unchanged: 0/0
 50509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50510 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50513 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50514 ;;Total ram usage:        8 bytes
 50515 ;; Hardware stack levels used:    1
 50516 ;; Hardware stack levels required when called:    1
 50517 ;; This function calls:
 50518 ;;		i2___fladd
 50519 ;; This function is called by:
 50520 ;;		_sin
 50521 ;;		i2__doprnt
 50522 ;; This function uses a non-reentrant model
 50523 ;;
 50524                           
 50525                           	psect	text154
 50526  01A724                     __ptext154:
 50527                           	opt stack 0
 50528  01A724                     i2___flsub:
 50529                           	opt stack 13
 50530                           
 50531                           ;incstack = 0
 50532  01A724  0E00               	movlw	0
 50533  01A726  0100               	movlb	0	; () banked
 50534  01A728  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 50535  01A72A  0E00               	movlw	0
 50536  01A72C  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 50537  01A72E  0E00               	movlw	0
 50538  01A730  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 50539  01A732  0E80               	movlw	128
 50540  01A734  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 50541                           
 50542                           ; BSR set to: 0
 50543  01A736  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 50544  01A73A  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 50545  01A73E  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 50546  01A742  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 50547  01A746  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 50548  01A74A  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 50549  01A74E  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 50550  01A752  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 50551  01A756  ECD7  F0B0         	call	i2___fladd	;wreg free
 50552  01A75A  C056  F080         	movff	?i2___fladd,?i2___flsub
 50553  01A75E  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 50554  01A762  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 50555  01A766  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 50556  01A76A  0012               	return	
 50557  01A76C                     __end_ofi2___flsub:
 50558                           	opt stack 0
 50559                           tosu	equ	0xFFF
 50560                           tosh	equ	0xFFE
 50561                           tosl	equ	0xFFD
 50562                           pclatu	equ	0xFFB
 50563                           pclath	equ	0xFFA
 50564                           tblptru	equ	0xFF8
 50565                           tblptrh	equ	0xFF7
 50566                           tblptrl	equ	0xFF6
 50567                           tablat	equ	0xFF5
 50568                           prodh	equ	0xFF4
 50569                           prodl	equ	0xFF3
 50570                           intcon	equ	0xFF2
 50571                           indf0	equ	0xFEF
 50572                           postinc0	equ	0xFEE
 50573                           fsr0h	equ	0xFEA
 50574                           fsr0l	equ	0xFE9
 50575                           wreg	equ	0xFE8
 50576                           indf1	equ	0xFE7
 50577                           postdec1	equ	0xFE5
 50578                           plusw1	equ	0xFE3
 50579                           fsr1h	equ	0xFE2
 50580                           fsr1l	equ	0xFE1
 50581                           bsr	equ	0xFE0
 50582                           indf2	equ	0xFDF
 50583                           postinc2	equ	0xFDE
 50584                           postdec2	equ	0xFDD
 50585                           plusw2	equ	0xFDB
 50586                           fsr2h	equ	0xFDA
 50587                           fsr2l	equ	0xFD9
 50588                           status	equ	0xFD8
 50589                           
 50590 ;; *************** function i2___flneg *****************
 50591 ;; Defined at:
 50592 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 50593 ;; Parameters:    Size  Location     Type
 50594 ;;  f1              4   43[COMRAM] unsigned char 
 50595 ;; Auto vars:     Size  Location     Type
 50596 ;;		None
 50597 ;; Return value:  Size  Location     Type
 50598 ;;                  4   43[COMRAM] unsigned char 
 50599 ;; Registers used:
 50600 ;;		wreg, status,2, status,0
 50601 ;; Tracked objects:
 50602 ;;		On entry : 0/0
 50603 ;;		On exit  : 0/0
 50604 ;;		Unchanged: 0/0
 50605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50609 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50610 ;;Total ram usage:        4 bytes
 50611 ;; Hardware stack levels used:    1
 50612 ;; This function calls:
 50613 ;;		Nothing
 50614 ;; This function is called by:
 50615 ;;		_peakToRMS
 50616 ;;		_ADCPostProcessingCallback
 50617 ;;		_acos
 50618 ;;		_asin
 50619 ;;		_atan
 50620 ;;		_fabs
 50621 ;;		_sin
 50622 ;;		i2__doprnt
 50623 ;; This function uses a non-reentrant model
 50624 ;;
 50625                           
 50626                           	psect	text155
 50627  01AD12                     __ptext155:
 50628                           	opt stack 0
 50629  01AD12                     i2___flneg:
 50630                           	opt stack 14
 50631                           
 50632                           ;incstack = 0
 50633  01AD12  502C               	movf	i2___flneg@f1,w,c
 50634  01AD14  102D               	iorwf	i2___flneg@f1+1,w,c
 50635  01AD16  102E               	iorwf	i2___flneg@f1+2,w,c
 50636  01AD18  102F               	iorwf	i2___flneg@f1+3,w,c
 50637  01AD1A  B4D8               	btfsc	status,2,c
 50638  01AD1C  D008               	goto	i2l2375
 50639  01AD1E  0E00               	movlw	0
 50640  01AD20  1A2C               	xorwf	i2___flneg@f1,f,c
 50641  01AD22  0E00               	movlw	0
 50642  01AD24  1A2D               	xorwf	i2___flneg@f1+1,f,c
 50643  01AD26  0E00               	movlw	0
 50644  01AD28  1A2E               	xorwf	i2___flneg@f1+2,f,c
 50645  01AD2A  0E80               	movlw	128
 50646  01AD2C  1A2F               	xorwf	i2___flneg@f1+3,f,c
 50647  01AD2E                     i2l2375:
 50648  01AD2E  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 50649  01AD32  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 50650  01AD36  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 50651  01AD3A  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 50652  01AD3E  0012               	return	
 50653  01AD40                     __end_ofi2___flneg:
 50654                           	opt stack 0
 50655                           tosu	equ	0xFFF
 50656                           tosh	equ	0xFFE
 50657                           tosl	equ	0xFFD
 50658                           pclatu	equ	0xFFB
 50659                           pclath	equ	0xFFA
 50660                           tblptru	equ	0xFF8
 50661                           tblptrh	equ	0xFF7
 50662                           tblptrl	equ	0xFF6
 50663                           tablat	equ	0xFF5
 50664                           prodh	equ	0xFF4
 50665                           prodl	equ	0xFF3
 50666                           intcon	equ	0xFF2
 50667                           indf0	equ	0xFEF
 50668                           postinc0	equ	0xFEE
 50669                           fsr0h	equ	0xFEA
 50670                           fsr0l	equ	0xFE9
 50671                           wreg	equ	0xFE8
 50672                           indf1	equ	0xFE7
 50673                           postdec1	equ	0xFE5
 50674                           plusw1	equ	0xFE3
 50675                           fsr1h	equ	0xFE2
 50676                           fsr1l	equ	0xFE1
 50677                           bsr	equ	0xFE0
 50678                           indf2	equ	0xFDF
 50679                           postinc2	equ	0xFDE
 50680                           postdec2	equ	0xFDD
 50681                           plusw2	equ	0xFDB
 50682                           fsr2h	equ	0xFDA
 50683                           fsr2l	equ	0xFD9
 50684                           status	equ	0xFD8
 50685                           
 50686 ;; *************** function i2___fldiv *****************
 50687 ;; Defined at:
 50688 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 50689 ;; Parameters:    Size  Location     Type
 50690 ;;  b               4   18[COMRAM] unsigned char 
 50691 ;;  a               4   22[COMRAM] unsigned char 
 50692 ;; Auto vars:     Size  Location     Type
 50693 ;;  __fldiv         4   37[COMRAM] unsigned long 
 50694 ;;  __fldiv         4   31[COMRAM] unsigned long 
 50695 ;;  __fldiv         2   35[COMRAM] int 
 50696 ;;  __fldiv         1   42[COMRAM] unsigned char 
 50697 ;;  __fldiv         1   41[COMRAM] unsigned char 
 50698 ;;  __fldiv         1   30[COMRAM] unsigned char 
 50699 ;; Return value:  Size  Location     Type
 50700 ;;                  4   18[COMRAM] unsigned char 
 50701 ;; Registers used:
 50702 ;;		wreg, status,2, status,0
 50703 ;; Tracked objects:
 50704 ;;		On entry : 0/0
 50705 ;;		On exit  : 0/0
 50706 ;;		Unchanged: 0/0
 50707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50708 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50709 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50710 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50711 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50712 ;;Total ram usage:       25 bytes
 50713 ;; Hardware stack levels used:    1
 50714 ;; This function calls:
 50715 ;;		Nothing
 50716 ;; This function is called by:
 50717 ;;		_peakToRMS
 50718 ;;		_currentMeasuredToPeak
 50719 ;;		_ADCPostProcessingCallback
 50720 ;;		_asin
 50721 ;;		_atan
 50722 ;;		_sin
 50723 ;; This function uses a non-reentrant model
 50724 ;;
 50725                           
 50726                           	psect	text156
 50727  01732E                     __ptext156:
 50728                           	opt stack 0
 50729  01732E                     i2___fldiv:
 50730                           	opt stack 15
 50731                           
 50732                           ;incstack = 0
 50733  01732E  5016               	movf	i2___fldiv@b+3,w,c
 50734  017330  0B80               	andlw	128
 50735  017332  6E1F               	movwf	i2___fldiv@sign,c
 50736  017334  5016               	movf	i2___fldiv@b+3,w,c
 50737  017336  2416               	addwf	i2___fldiv@b+3,w,c
 50738  017338  6E2A               	movwf	i2___fldiv@bexp,c
 50739  01733A  BE15               	btfsc	i2___fldiv@b+2,7,c
 50740  01733C  802A               	bsf	i2___fldiv@bexp,0,c
 50741  01733E  502A               	movf	i2___fldiv@bexp,w,c
 50742  017340  B4D8               	btfsc	status,2,c
 50743  017342  D00D               	goto	i2l2736
 50744  017344  282A               	incf	i2___fldiv@bexp,w,c
 50745  017346  A4D8               	btfss	status,2,c
 50746  017348  D008               	goto	i2l2737
 50747  01734A  0E00               	movlw	0
 50748  01734C  6E13               	movwf	i2___fldiv@b,c
 50749  01734E  0E00               	movlw	0
 50750  017350  6E14               	movwf	i2___fldiv@b+1,c
 50751  017352  0E00               	movlw	0
 50752  017354  6E15               	movwf	i2___fldiv@b+2,c
 50753  017356  0E00               	movlw	0
 50754  017358  6E16               	movwf	i2___fldiv@b+3,c
 50755  01735A                     i2l2737:
 50756  01735A  8E15               	bsf	i2___fldiv@b+2,7,c
 50757  01735C  D006               	goto	L22
 50758  01735E                     i2l2736:
 50759  01735E  0E00               	movlw	0
 50760  017360  6E13               	movwf	i2___fldiv@b,c
 50761  017362  0E00               	movlw	0
 50762  017364  6E14               	movwf	i2___fldiv@b+1,c
 50763  017366  0E00               	movlw	0
 50764  017368  6E15               	movwf	i2___fldiv@b+2,c
 50765  01736A                     L22:
 50766  01736A  0E00               	movlw	0
 50767  01736C  6E16               	movwf	i2___fldiv@b+3,c
 50768  01736E  501A               	movf	i2___fldiv@a+3,w,c
 50769  017370  0B80               	andlw	128
 50770  017372  1A1F               	xorwf	i2___fldiv@sign,f,c
 50771  017374  501A               	movf	i2___fldiv@a+3,w,c
 50772  017376  241A               	addwf	i2___fldiv@a+3,w,c
 50773  017378  6E2B               	movwf	i2___fldiv@aexp,c
 50774  01737A  BE19               	btfsc	i2___fldiv@a+2,7,c
 50775  01737C  802B               	bsf	i2___fldiv@aexp,0,c
 50776  01737E  502B               	movf	i2___fldiv@aexp,w,c
 50777  017380  B4D8               	btfsc	status,2,c
 50778  017382  D00D               	goto	i2l2740
 50779  017384  282B               	incf	i2___fldiv@aexp,w,c
 50780  017386  A4D8               	btfss	status,2,c
 50781  017388  D008               	goto	i2l2741
 50782  01738A  0E00               	movlw	0
 50783  01738C  6E17               	movwf	i2___fldiv@a,c
 50784  01738E  0E00               	movlw	0
 50785  017390  6E18               	movwf	i2___fldiv@a+1,c
 50786  017392  0E00               	movlw	0
 50787  017394  6E19               	movwf	i2___fldiv@a+2,c
 50788  017396  0E00               	movlw	0
 50789  017398  6E1A               	movwf	i2___fldiv@a+3,c
 50790  01739A                     i2l2741:
 50791  01739A  8E19               	bsf	i2___fldiv@a+2,7,c
 50792  01739C  D006               	goto	L23
 50793  01739E                     i2l2740:
 50794  01739E  0E00               	movlw	0
 50795  0173A0  6E17               	movwf	i2___fldiv@a,c
 50796  0173A2  0E00               	movlw	0
 50797  0173A4  6E18               	movwf	i2___fldiv@a+1,c
 50798  0173A6  0E00               	movlw	0
 50799  0173A8  6E19               	movwf	i2___fldiv@a+2,c
 50800  0173AA                     L23:
 50801  0173AA  0E00               	movlw	0
 50802  0173AC  6E1A               	movwf	i2___fldiv@a+3,c
 50803  0173AE  5017               	movf	i2___fldiv@a,w,c
 50804  0173B0  1018               	iorwf	i2___fldiv@a+1,w,c
 50805  0173B2  1019               	iorwf	i2___fldiv@a+2,w,c
 50806  0173B4  101A               	iorwf	i2___fldiv@a+3,w,c
 50807  0173B6  A4D8               	btfss	status,2,c
 50808  0173B8  D015               	goto	i2l2743
 50809  0173BA  0E00               	movlw	0
 50810  0173BC  6E13               	movwf	i2___fldiv@b,c
 50811  0173BE  0E00               	movlw	0
 50812  0173C0  6E14               	movwf	i2___fldiv@b+1,c
 50813  0173C2  0E00               	movlw	0
 50814  0173C4  6E15               	movwf	i2___fldiv@b+2,c
 50815  0173C6  0E00               	movlw	0
 50816  0173C8  6E16               	movwf	i2___fldiv@b+3,c
 50817  0173CA  0E80               	movlw	128
 50818  0173CC  1215               	iorwf	i2___fldiv@b+2,f,c
 50819  0173CE  0E7F               	movlw	127
 50820  0173D0  1216               	iorwf	i2___fldiv@b+3,f,c
 50821  0173D2  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 50822  0173D6  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 50823  0173DA  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 50824  0173DE  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 50825  0173E2  0012               	return	
 50826  0173E4                     i2l2743:
 50827  0173E4  502A               	movf	i2___fldiv@bexp,w,c
 50828  0173E6  A4D8               	btfss	status,2,c
 50829  0173E8  D011               	goto	i2l2745
 50830  0173EA  0E00               	movlw	0
 50831  0173EC  6E13               	movwf	i2___fldiv@b,c
 50832  0173EE  0E00               	movlw	0
 50833  0173F0  6E14               	movwf	i2___fldiv@b+1,c
 50834  0173F2  0E00               	movlw	0
 50835  0173F4  6E15               	movwf	i2___fldiv@b+2,c
 50836  0173F6  0E00               	movlw	0
 50837  0173F8  6E16               	movwf	i2___fldiv@b+3,c
 50838  0173FA  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 50839  0173FE  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 50840  017402  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 50841  017406  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 50842  01740A  0012               	return	
 50843  01740C                     i2l2745:
 50844  01740C  502B               	movf	i2___fldiv@aexp,w,c
 50845  01740E  6E1B               	movwf	??i2___fldiv& (0+255),c
 50846  017410  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 50847  017412  1E1B               	comf	??i2___fldiv,f,c
 50848  017414  1E1C               	comf	??i2___fldiv+1,f,c
 50849  017416  4A1B               	infsnz	??i2___fldiv,f,c
 50850  017418  2A1C               	incf	??i2___fldiv+1,f,c
 50851  01741A  502A               	movf	i2___fldiv@bexp,w,c
 50852  01741C  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 50853  01741E  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 50854  017420  501B               	movf	??i2___fldiv,w,c
 50855  017422  261D               	addwf	??i2___fldiv+2,f,c
 50856  017424  501C               	movf	??i2___fldiv+1,w,c
 50857  017426  221E               	addwfc	??i2___fldiv+3,f,c
 50858  017428  0E7F               	movlw	127
 50859  01742A  241D               	addwf	??i2___fldiv+2,w,c
 50860  01742C  6E24               	movwf	i2___fldiv@new_exp,c
 50861  01742E  0E00               	movlw	0
 50862  017430  201E               	addwfc	??i2___fldiv+3,w,c
 50863  017432  6E25               	movwf	i2___fldiv@new_exp+1,c
 50864  017434  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 50865  017438  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 50866  01743C  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 50867  017440  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 50868  017444  0E00               	movlw	0
 50869  017446  6E13               	movwf	i2___fldiv@b,c
 50870  017448  0E00               	movlw	0
 50871  01744A  6E14               	movwf	i2___fldiv@b+1,c
 50872  01744C  0E00               	movlw	0
 50873  01744E  6E15               	movwf	i2___fldiv@b+2,c
 50874  017450  0E00               	movlw	0
 50875  017452  6E16               	movwf	i2___fldiv@b+3,c
 50876  017454  0E00               	movlw	0
 50877  017456  6E26               	movwf	i2___fldiv@grs,c
 50878  017458  0E00               	movlw	0
 50879  01745A  6E27               	movwf	i2___fldiv@grs+1,c
 50880  01745C  0E00               	movlw	0
 50881  01745E  6E28               	movwf	i2___fldiv@grs+2,c
 50882  017460  0E00               	movlw	0
 50883  017462  6E29               	movwf	i2___fldiv@grs+3,c
 50884  017464  0E00               	movlw	0
 50885  017466  6E2B               	movwf	i2___fldiv@aexp,c
 50886  017468  D028               	goto	i2l2746
 50887  01746A  502B               	movf	i2___fldiv@aexp,w,c
 50888  01746C  B4D8               	btfsc	status,2,c
 50889  01746E  D011               	goto	i2l2748
 50890  017470  90D8               	bcf	status,0,c
 50891  017472  3620               	rlcf	i2___fldiv@rem,f,c
 50892  017474  3621               	rlcf	i2___fldiv@rem+1,f,c
 50893  017476  3622               	rlcf	i2___fldiv@rem+2,f,c
 50894  017478  3623               	rlcf	i2___fldiv@rem+3,f,c
 50895  01747A  90D8               	bcf	status,0,c
 50896  01747C  3613               	rlcf	i2___fldiv@b,f,c
 50897  01747E  3614               	rlcf	i2___fldiv@b+1,f,c
 50898  017480  3615               	rlcf	i2___fldiv@b+2,f,c
 50899  017482  3616               	rlcf	i2___fldiv@b+3,f,c
 50900  017484  BE29               	btfsc	i2___fldiv@grs+3,7,c
 50901  017486  8013               	bsf	i2___fldiv@b,0,c
 50902  017488  90D8               	bcf	status,0,c
 50903  01748A  3626               	rlcf	i2___fldiv@grs,f,c
 50904  01748C  3627               	rlcf	i2___fldiv@grs+1,f,c
 50905  01748E  3628               	rlcf	i2___fldiv@grs+2,f,c
 50906  017490  3629               	rlcf	i2___fldiv@grs+3,f,c
 50907  017492                     i2l2748:
 50908  017492  5017               	movf	i2___fldiv@a,w,c
 50909  017494  5C20               	subwf	i2___fldiv@rem,w,c
 50910  017496  5018               	movf	i2___fldiv@a+1,w,c
 50911  017498  5821               	subwfb	i2___fldiv@rem+1,w,c
 50912  01749A  5019               	movf	i2___fldiv@a+2,w,c
 50913  01749C  5822               	subwfb	i2___fldiv@rem+2,w,c
 50914  01749E  501A               	movf	i2___fldiv@a+3,w,c
 50915  0174A0  5823               	subwfb	i2___fldiv@rem+3,w,c
 50916  0174A2  A0D8               	btfss	status,0,c
 50917  0174A4  D009               	goto	i2l2750
 50918  0174A6  8C29               	bsf	i2___fldiv@grs+3,6,c
 50919  0174A8  5017               	movf	i2___fldiv@a,w,c
 50920  0174AA  5E20               	subwf	i2___fldiv@rem,f,c
 50921  0174AC  5018               	movf	i2___fldiv@a+1,w,c
 50922  0174AE  5A21               	subwfb	i2___fldiv@rem+1,f,c
 50923  0174B0  5019               	movf	i2___fldiv@a+2,w,c
 50924  0174B2  5A22               	subwfb	i2___fldiv@rem+2,f,c
 50925  0174B4  501A               	movf	i2___fldiv@a+3,w,c
 50926  0174B6  5A23               	subwfb	i2___fldiv@rem+3,f,c
 50927  0174B8                     i2l2750:
 50928  0174B8  2A2B               	incf	i2___fldiv@aexp,f,c
 50929  0174BA                     i2l2746:
 50930  0174BA  0E19               	movlw	25
 50931  0174BC  642B               	cpfsgt	i2___fldiv@aexp,c
 50932  0174BE  D7D5               	goto	i2l2747
 50933  0174C0  5020               	movf	i2___fldiv@rem,w,c
 50934  0174C2  1021               	iorwf	i2___fldiv@rem+1,w,c
 50935  0174C4  1022               	iorwf	i2___fldiv@rem+2,w,c
 50936  0174C6  1023               	iorwf	i2___fldiv@rem+3,w,c
 50937  0174C8  B4D8               	btfsc	status,2,c
 50938  0174CA  D011               	goto	i2l2753
 50939  0174CC  8026               	bsf	i2___fldiv@grs,0,c
 50940  0174CE  D00F               	goto	i2l2753
 50941  0174D0  90D8               	bcf	status,0,c
 50942  0174D2  3613               	rlcf	i2___fldiv@b,f,c
 50943  0174D4  3614               	rlcf	i2___fldiv@b+1,f,c
 50944  0174D6  3615               	rlcf	i2___fldiv@b+2,f,c
 50945  0174D8  3616               	rlcf	i2___fldiv@b+3,f,c
 50946  0174DA  BE29               	btfsc	i2___fldiv@grs+3,7,c
 50947  0174DC  8013               	bsf	i2___fldiv@b,0,c
 50948  0174DE  90D8               	bcf	status,0,c
 50949  0174E0  3626               	rlcf	i2___fldiv@grs,f,c
 50950  0174E2  3627               	rlcf	i2___fldiv@grs+1,f,c
 50951  0174E4  3628               	rlcf	i2___fldiv@grs+2,f,c
 50952  0174E6  3629               	rlcf	i2___fldiv@grs+3,f,c
 50953  0174E8  0624               	decf	i2___fldiv@new_exp,f,c
 50954  0174EA  A0D8               	btfss	status,0,c
 50955  0174EC  0625               	decf	i2___fldiv@new_exp+1,f,c
 50956  0174EE                     i2l2753:
 50957  0174EE  AE15               	btfss	i2___fldiv@b+2,7,c
 50958  0174F0  D7EF               	goto	i2l2754
 50959  0174F2  0E00               	movlw	0
 50960  0174F4  6E2B               	movwf	i2___fldiv@aexp,c
 50961  0174F6  AE29               	btfss	i2___fldiv@grs+3,7,c
 50962  0174F8  D016               	goto	i2l2760
 50963  0174FA  0EFF               	movlw	255
 50964  0174FC  1426               	andwf	i2___fldiv@grs,w,c
 50965  0174FE  6E1B               	movwf	??i2___fldiv& (0+255),c
 50966  017500  0EFF               	movlw	255
 50967  017502  1427               	andwf	i2___fldiv@grs+1,w,c
 50968  017504  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 50969  017506  0EFF               	movlw	255
 50970  017508  1428               	andwf	i2___fldiv@grs+2,w,c
 50971  01750A  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 50972  01750C  0E7F               	movlw	127
 50973  01750E  1429               	andwf	i2___fldiv@grs+3,w,c
 50974  017510  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 50975  017512  501B               	movf	??i2___fldiv,w,c
 50976  017514  101C               	iorwf	??i2___fldiv+1,w,c
 50977  017516  101D               	iorwf	??i2___fldiv+2,w,c
 50978  017518  101E               	iorwf	??i2___fldiv+3,w,c
 50979  01751A  A4D8               	btfss	status,2,c
 50980  01751C  D002               	goto	i2u1025_40
 50981  01751E  A013               	btfss	i2___fldiv@b,0,c
 50982  017520  D002               	goto	i2l2760
 50983  017522                     i2u1025_40:
 50984  017522  0E01               	movlw	1
 50985  017524  6E2B               	movwf	i2___fldiv@aexp,c
 50986  017526                     i2l2760:
 50987  017526  502B               	movf	i2___fldiv@aexp,w,c
 50988  017528  B4D8               	btfsc	status,2,c
 50989  01752A  D01F               	goto	i2l2762
 50990  01752C  0E01               	movlw	1
 50991  01752E  2613               	addwf	i2___fldiv@b,f,c
 50992  017530  0E00               	movlw	0
 50993  017532  2214               	addwfc	i2___fldiv@b+1,f,c
 50994  017534  2215               	addwfc	i2___fldiv@b+2,f,c
 50995  017536  2216               	addwfc	i2___fldiv@b+3,f,c
 50996  017538  A016               	btfss	i2___fldiv@b+3,0,c
 50997  01753A  D017               	goto	i2l2762
 50998  01753C  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 50999  017540  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 51000  017544  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 51001  017548  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 51002  01754C  341E               	rlcf	??i2___fldiv+3,w,c
 51003  01754E  321E               	rrcf	??i2___fldiv+3,f,c
 51004  017550  321D               	rrcf	??i2___fldiv+2,f,c
 51005  017552  321C               	rrcf	??i2___fldiv+1,f,c
 51006  017554  321B               	rrcf	??i2___fldiv,f,c
 51007  017556  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 51008  01755A  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 51009  01755E  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 51010  017562  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 51011  017566  4A24               	infsnz	i2___fldiv@new_exp,f,c
 51012  017568  2A25               	incf	i2___fldiv@new_exp+1,f,c
 51013  01756A                     i2l2762:
 51014  01756A  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 51015  01756C  D010               	goto	i2l2763
 51016  01756E  5025               	movf	i2___fldiv@new_exp+1,w,c
 51017  017570  E103               	bnz	i2u1028_40
 51018  017572  2824               	incf	i2___fldiv@new_exp,w,c
 51019  017574  A0D8               	btfss	status,0,c
 51020  017576  D00B               	goto	i2l2763
 51021  017578                     i2u1028_40:
 51022  017578  0E00               	movlw	0
 51023  01757A  6E25               	movwf	i2___fldiv@new_exp+1,c
 51024  01757C  6824               	setf	i2___fldiv@new_exp,c
 51025  01757E  0E00               	movlw	0
 51026  017580  6E13               	movwf	i2___fldiv@b,c
 51027  017582  0E00               	movlw	0
 51028  017584  6E14               	movwf	i2___fldiv@b+1,c
 51029  017586  0E00               	movlw	0
 51030  017588  6E15               	movwf	i2___fldiv@b+2,c
 51031  01758A  0E00               	movlw	0
 51032  01758C  6E16               	movwf	i2___fldiv@b+3,c
 51033  01758E                     i2l2763:
 51034  01758E  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 51035  017590  D005               	goto	i2u1029_40
 51036  017592  5025               	movf	i2___fldiv@new_exp+1,w,c
 51037  017594  E111               	bnz	i2l9671
 51038  017596  0424               	decf	i2___fldiv@new_exp,w,c
 51039  017598  B0D8               	btfsc	status,0,c
 51040  01759A  D00E               	goto	i2l2764
 51041  01759C                     i2u1029_40:
 51042  01759C  0E00               	movlw	0
 51043  01759E  6E25               	movwf	i2___fldiv@new_exp+1,c
 51044  0175A0  0E00               	movlw	0
 51045  0175A2  6E24               	movwf	i2___fldiv@new_exp,c
 51046  0175A4  0E00               	movlw	0
 51047  0175A6  6E13               	movwf	i2___fldiv@b,c
 51048  0175A8  0E00               	movlw	0
 51049  0175AA  6E14               	movwf	i2___fldiv@b+1,c
 51050  0175AC  0E00               	movlw	0
 51051  0175AE  6E15               	movwf	i2___fldiv@b+2,c
 51052  0175B0  0E00               	movlw	0
 51053  0175B2  6E16               	movwf	i2___fldiv@b+3,c
 51054  0175B4  0E00               	movlw	0
 51055  0175B6  6E1F               	movwf	i2___fldiv@sign,c
 51056  0175B8                     i2l2764:
 51057  0175B8                     i2l9671:
 51058  0175B8  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 51059  0175BC  A02A               	btfss	i2___fldiv@bexp,0,c
 51060  0175BE  D002               	goto	i2l2765
 51061  0175C0  8E15               	bsf	i2___fldiv@b+2,7,c
 51062  0175C2  D001               	goto	i2l2766
 51063  0175C4                     i2l2765:
 51064  0175C4  9E15               	bcf	i2___fldiv@b+2,7,c
 51065  0175C6                     i2l2766:
 51066  0175C6  90D8               	bcf	status,0,c
 51067  0175C8  302A               	rrcf	i2___fldiv@bexp,w,c
 51068  0175CA  6E16               	movwf	i2___fldiv@b+3,c
 51069  0175CC  501F               	movf	i2___fldiv@sign,w,c
 51070  0175CE  1216               	iorwf	i2___fldiv@b+3,f,c
 51071  0175D0  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 51072  0175D4  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 51073  0175D8  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 51074  0175DC  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 51075  0175E0  0012               	return	
 51076  0175E2                     __end_ofi2___fldiv:
 51077                           	opt stack 0
 51078                           tosu	equ	0xFFF
 51079                           tosh	equ	0xFFE
 51080                           tosl	equ	0xFFD
 51081                           pclatu	equ	0xFFB
 51082                           pclath	equ	0xFFA
 51083                           tblptru	equ	0xFF8
 51084                           tblptrh	equ	0xFF7
 51085                           tblptrl	equ	0xFF6
 51086                           tablat	equ	0xFF5
 51087                           prodh	equ	0xFF4
 51088                           prodl	equ	0xFF3
 51089                           intcon	equ	0xFF2
 51090                           indf0	equ	0xFEF
 51091                           postinc0	equ	0xFEE
 51092                           fsr0h	equ	0xFEA
 51093                           fsr0l	equ	0xFE9
 51094                           wreg	equ	0xFE8
 51095                           indf1	equ	0xFE7
 51096                           postdec1	equ	0xFE5
 51097                           plusw1	equ	0xFE3
 51098                           fsr1h	equ	0xFE2
 51099                           fsr1l	equ	0xFE1
 51100                           bsr	equ	0xFE0
 51101                           indf2	equ	0xFDF
 51102                           postinc2	equ	0xFDE
 51103                           postdec2	equ	0xFDD
 51104                           plusw2	equ	0xFDB
 51105                           fsr2h	equ	0xFDA
 51106                           fsr2l	equ	0xFD9
 51107                           status	equ	0xFD8
 51108                           
 51109 ;; *************** function _floor *****************
 51110 ;; Defined at:
 51111 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 51112 ;; Parameters:    Size  Location     Type
 51113 ;;  x               4   22[BANK0 ] unsigned char 
 51114 ;; Auto vars:     Size  Location     Type
 51115 ;;  i               4   26[BANK0 ] unsigned char 
 51116 ;;  expon           2   30[BANK0 ] int 
 51117 ;; Return value:  Size  Location     Type
 51118 ;;                  4   22[BANK0 ] int 
 51119 ;; Registers used:
 51120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 51121 ;; Tracked objects:
 51122 ;;		On entry : 0/0
 51123 ;;		On exit  : 0/0
 51124 ;;		Unchanged: 0/0
 51125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51126 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51127 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51129 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51130 ;;Total ram usage:       10 bytes
 51131 ;; Hardware stack levels used:    1
 51132 ;; Hardware stack levels required when called:    1
 51133 ;; This function calls:
 51134 ;;		_frexp
 51135 ;;		i2___fladd
 51136 ;;		i2___flge
 51137 ;;		i2___fltol
 51138 ;;		i2___xxtofl
 51139 ;; This function is called by:
 51140 ;;		_sin
 51141 ;; This function uses a non-reentrant model
 51142 ;;
 51143                           
 51144                           	psect	text157
 51145  018F04                     __ptext157:
 51146                           	opt stack 0
 51147  018F04                     _floor:
 51148                           	opt stack 12
 51149                           
 51150                           ;incstack = 0
 51151  018F04  C076  F001         	movff	floor@x,frexp@value
 51152  018F08  C077  F002         	movff	floor@x+1,frexp@value+1
 51153  018F0C  C078  F003         	movff	floor@x+2,frexp@value+2
 51154  018F10  C079  F004         	movff	floor@x+3,frexp@value+3
 51155  018F14  0E7E               	movlw	low floor@expon
 51156  018F16  6E05               	movwf	frexp@eptr,c
 51157  018F18  0E00               	movlw	high floor@expon
 51158  018F1A  6E06               	movwf	frexp@eptr+1,c
 51159  018F1C  ECD2  F0CE         	call	_frexp	;wreg free
 51160  018F20  0100               	movlb	0	; () banked
 51161  018F22  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 51162  018F24  D014               	goto	i2l2900
 51163                           
 51164                           ; BSR set to: 0
 51165  018F26  AF79               	btfss	(floor@x+3)& (0+255),7,b
 51166  018F28  D009               	goto	i2l2901
 51167                           
 51168                           ; BSR set to: 0
 51169  018F2A  0E00               	movlw	0
 51170  018F2C  6F76               	movwf	?_floor& (0+255),b
 51171  018F2E  0E00               	movlw	0
 51172  018F30  6F77               	movwf	(?_floor+1)& (0+255),b
 51173  018F32  0E80               	movlw	128
 51174  018F34  6F78               	movwf	(?_floor+2)& (0+255),b
 51175  018F36  0EBF               	movlw	191
 51176  018F38  6F79               	movwf	(?_floor+3)& (0+255),b
 51177                           
 51178                           ; BSR set to: 0
 51179  018F3A  0012               	return	
 51180  018F3C                     i2l2901:
 51181                           
 51182                           ; BSR set to: 0
 51183                           
 51184                           ; BSR set to: 0
 51185  018F3C  0E00               	movlw	0
 51186  018F3E  6F76               	movwf	?_floor& (0+255),b
 51187  018F40  0E00               	movlw	0
 51188  018F42  6F77               	movwf	(?_floor+1)& (0+255),b
 51189  018F44  0E00               	movlw	0
 51190  018F46  6F78               	movwf	(?_floor+2)& (0+255),b
 51191  018F48  0E00               	movlw	0
 51192  018F4A  6F79               	movwf	(?_floor+3)& (0+255),b
 51193                           
 51194                           ; BSR set to: 0
 51195  018F4C  0012               	return	
 51196  018F4E                     i2l2900:
 51197                           
 51198                           ; BSR set to: 0
 51199                           
 51200                           ; BSR set to: 0
 51201  018F4E  517F               	movf	(floor@expon+1)& (0+255),w,b
 51202  018F50  E104               	bnz	i2u1963_40
 51203  018F52  0E1D               	movlw	29
 51204  018F54  5D7E               	subwf	floor@expon& (0+255),w,b
 51205  018F56  A0D8               	btfss	status,0,c
 51206  018F58  D009               	goto	i2l2903
 51207  018F5A                     i2u1963_40:
 51208                           
 51209                           ; BSR set to: 0
 51210  018F5A  C076  F076         	movff	floor@x,?_floor
 51211  018F5E  C077  F077         	movff	floor@x+1,?_floor+1
 51212  018F62  C078  F078         	movff	floor@x+2,?_floor+2
 51213  018F66  C079  F079         	movff	floor@x+3,?_floor+3
 51214  018F6A  0012               	return	
 51215  018F6C                     i2l2903:
 51216                           
 51217                           ; BSR set to: 0
 51218                           
 51219                           ; BSR set to: 0
 51220  018F6C  C076  F06C         	movff	floor@x,i2___fltol@f1
 51221  018F70  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 51222  018F74  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 51223  018F78  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 51224  018F7C  EC7E  F0C9         	call	i2___fltol	;wreg free
 51225  018F80  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 51226  018F84  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 51227  018F88  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 51228  018F8C  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 51229  018F90  0E01               	movlw	1
 51230  018F92  EC91  F0C1         	call	i2___xxtofl
 51231  018F96  C005  F07A         	movff	?i2___xxtofl,floor@i
 51232  018F9A  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 51233  018F9E  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 51234  018FA2  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 51235  018FA6  C076  F034         	movff	floor@x,i2___flge@ff1
 51236  018FAA  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 51237  018FAE  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 51238  018FB2  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 51239  018FB6  C07A  F038         	movff	floor@i,i2___flge@ff2
 51240  018FBA  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 51241  018FBE  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 51242  018FC2  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 51243  018FC6  ECF2  F0C6         	call	i2___flge	;wreg free
 51244  018FCA  B0D8               	btfsc	status,0,c
 51245  018FCC  D01B               	goto	i2l2904
 51246  018FCE  C07A  F056         	movff	floor@i,i2___fladd@b
 51247  018FD2  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 51248  018FD6  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 51249  018FDA  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 51250  018FDE  0E00               	movlw	0
 51251  018FE0  6E5A               	movwf	i2___fladd@a,c
 51252  018FE2  0E00               	movlw	0
 51253  018FE4  6E5B               	movwf	i2___fladd@a+1,c
 51254  018FE6  0E80               	movlw	128
 51255  018FE8  6E5C               	movwf	i2___fladd@a+2,c
 51256  018FEA  0EBF               	movlw	191
 51257  018FEC  6E5D               	movwf	i2___fladd@a+3,c
 51258  018FEE  ECD7  F0B0         	call	i2___fladd	;wreg free
 51259  018FF2  C056  F076         	movff	?i2___fladd,?_floor
 51260  018FF6  C057  F077         	movff	?i2___fladd+1,?_floor+1
 51261  018FFA  C058  F078         	movff	?i2___fladd+2,?_floor+2
 51262  018FFE  C059  F079         	movff	?i2___fladd+3,?_floor+3
 51263  019002  0012               	return	
 51264  019004                     i2l2904:
 51265  019004  C07A  F076         	movff	floor@i,?_floor
 51266  019008  C07B  F077         	movff	floor@i+1,?_floor+1
 51267  01900C  C07C  F078         	movff	floor@i+2,?_floor+2
 51268  019010  C07D  F079         	movff	floor@i+3,?_floor+3
 51269  019014  0012               	return		;funcret
 51270  019016                     __end_of_floor:
 51271                           	opt stack 0
 51272                           tosu	equ	0xFFF
 51273                           tosh	equ	0xFFE
 51274                           tosl	equ	0xFFD
 51275                           pclatu	equ	0xFFB
 51276                           pclath	equ	0xFFA
 51277                           tblptru	equ	0xFF8
 51278                           tblptrh	equ	0xFF7
 51279                           tblptrl	equ	0xFF6
 51280                           tablat	equ	0xFF5
 51281                           prodh	equ	0xFF4
 51282                           prodl	equ	0xFF3
 51283                           intcon	equ	0xFF2
 51284                           indf0	equ	0xFEF
 51285                           postinc0	equ	0xFEE
 51286                           fsr0h	equ	0xFEA
 51287                           fsr0l	equ	0xFE9
 51288                           wreg	equ	0xFE8
 51289                           indf1	equ	0xFE7
 51290                           postdec1	equ	0xFE5
 51291                           plusw1	equ	0xFE3
 51292                           fsr1h	equ	0xFE2
 51293                           fsr1l	equ	0xFE1
 51294                           bsr	equ	0xFE0
 51295                           indf2	equ	0xFDF
 51296                           postinc2	equ	0xFDE
 51297                           postdec2	equ	0xFDD
 51298                           plusw2	equ	0xFDB
 51299                           fsr2h	equ	0xFDA
 51300                           fsr2l	equ	0xFD9
 51301                           status	equ	0xFD8
 51302                           
 51303 ;; *************** function i2___xxtofl *****************
 51304 ;; Defined at:
 51305 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 51306 ;; Parameters:    Size  Location     Type
 51307 ;;  sign            1    wreg     unsigned char 
 51308 ;;  val             4    4[COMRAM] long 
 51309 ;; Auto vars:     Size  Location     Type
 51310 ;;  sign            1   12[COMRAM] unsigned char 
 51311 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 51312 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 51313 ;; Return value:  Size  Location     Type
 51314 ;;                  4    4[COMRAM] unsigned char 
 51315 ;; Registers used:
 51316 ;;		wreg, status,2, status,0
 51317 ;; Tracked objects:
 51318 ;;		On entry : 0/0
 51319 ;;		On exit  : 0/0
 51320 ;;		Unchanged: 0/0
 51321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51323 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51325 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51326 ;;Total ram usage:       14 bytes
 51327 ;; Hardware stack levels used:    1
 51328 ;; This function calls:
 51329 ;;		Nothing
 51330 ;; This function is called by:
 51331 ;;		_ADCPostProcessingCallback
 51332 ;;		_floor
 51333 ;;		i2__doprnt
 51334 ;; This function uses a non-reentrant model
 51335 ;;
 51336                           
 51337                           	psect	text158
 51338  018322                     __ptext158:
 51339                           	opt stack 0
 51340  018322                     i2___xxtofl:
 51341                           	opt stack 14
 51342                           
 51343                           ;incstack = 0
 51344                           ;i2___xxtofl@sign stored from wreg
 51345  018322  6E0D               	movwf	i2___xxtofl@sign,c
 51346  018324  500D               	movf	i2___xxtofl@sign,w,c
 51347  018326  A4D8               	btfss	status,2,c
 51348  018328  AE08               	btfss	i2___xxtofl@val+3,7,c
 51349  01832A  D01A               	goto	i2l2879
 51350  01832C  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 51351  018330  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 51352  018334  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 51353  018338  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 51354  01833C  1E09               	comf	??i2___xxtofl,f,c
 51355  01833E  1E0A               	comf	??i2___xxtofl+1,f,c
 51356  018340  1E0B               	comf	??i2___xxtofl+2,f,c
 51357  018342  1E0C               	comf	??i2___xxtofl+3,f,c
 51358  018344  2A09               	incf	??i2___xxtofl,f,c
 51359  018346  0E00               	movlw	0
 51360  018348  220A               	addwfc	??i2___xxtofl+1,f,c
 51361  01834A  220B               	addwfc	??i2___xxtofl+2,f,c
 51362  01834C  220C               	addwfc	??i2___xxtofl+3,f,c
 51363  01834E  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 51364  018352  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 51365  018356  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 51366  01835A  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 51367  01835E  D008               	goto	i2l2880
 51368  018360                     i2l2879:
 51369  018360  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 51370  018364  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 51371  018368  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 51372  01836C  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 51373  018370                     i2l2880:
 51374  018370  5005               	movf	i2___xxtofl@val,w,c
 51375  018372  1006               	iorwf	i2___xxtofl@val+1,w,c
 51376  018374  1007               	iorwf	i2___xxtofl@val+2,w,c
 51377  018376  1008               	iorwf	i2___xxtofl@val+3,w,c
 51378  018378  A4D8               	btfss	status,2,c
 51379  01837A  D009               	goto	i2l2881
 51380  01837C  0E00               	movlw	0
 51381  01837E  6E05               	movwf	?i2___xxtofl,c
 51382  018380  0E00               	movlw	0
 51383  018382  6E06               	movwf	?i2___xxtofl+1,c
 51384  018384  0E00               	movlw	0
 51385  018386  6E07               	movwf	?i2___xxtofl+2,c
 51386  018388  0E00               	movlw	0
 51387  01838A  6E08               	movwf	?i2___xxtofl+3,c
 51388  01838C  0012               	return	
 51389  01838E                     i2l2881:
 51390  01838E  0E96               	movlw	150
 51391  018390  6E0E               	movwf	i2___xxtofl@exp,c
 51392  018392  D006               	goto	i2l2883
 51393  018394  2A0E               	incf	i2___xxtofl@exp,f,c
 51394  018396  90D8               	bcf	status,0,c
 51395  018398  3212               	rrcf	i2___xxtofl@arg+3,f,c
 51396  01839A  3211               	rrcf	i2___xxtofl@arg+2,f,c
 51397  01839C  3210               	rrcf	i2___xxtofl@arg+1,f,c
 51398  01839E  320F               	rrcf	i2___xxtofl@arg,f,c
 51399  0183A0                     i2l2883:
 51400  0183A0  0E00               	movlw	0
 51401  0183A2  140F               	andwf	i2___xxtofl@arg,w,c
 51402  0183A4  6E09               	movwf	??i2___xxtofl& (0+255),c
 51403  0183A6  0E00               	movlw	0
 51404  0183A8  1410               	andwf	i2___xxtofl@arg+1,w,c
 51405  0183AA  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 51406  0183AC  0E00               	movlw	0
 51407  0183AE  1411               	andwf	i2___xxtofl@arg+2,w,c
 51408  0183B0  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 51409  0183B2  0EFE               	movlw	254
 51410  0183B4  1412               	andwf	i2___xxtofl@arg+3,w,c
 51411  0183B6  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 51412  0183B8  5009               	movf	??i2___xxtofl,w,c
 51413  0183BA  100A               	iorwf	??i2___xxtofl+1,w,c
 51414  0183BC  100B               	iorwf	??i2___xxtofl+2,w,c
 51415  0183BE  100C               	iorwf	??i2___xxtofl+3,w,c
 51416  0183C0  B4D8               	btfsc	status,2,c
 51417  0183C2  D00D               	goto	i2l2886
 51418  0183C4  D7E7               	goto	i2l2884
 51419  0183C6  2A0E               	incf	i2___xxtofl@exp,f,c
 51420  0183C8  0E01               	movlw	1
 51421  0183CA  260F               	addwf	i2___xxtofl@arg,f,c
 51422  0183CC  0E00               	movlw	0
 51423  0183CE  2210               	addwfc	i2___xxtofl@arg+1,f,c
 51424  0183D0  2211               	addwfc	i2___xxtofl@arg+2,f,c
 51425  0183D2  2212               	addwfc	i2___xxtofl@arg+3,f,c
 51426  0183D4  90D8               	bcf	status,0,c
 51427  0183D6  3212               	rrcf	i2___xxtofl@arg+3,f,c
 51428  0183D8  3211               	rrcf	i2___xxtofl@arg+2,f,c
 51429  0183DA  3210               	rrcf	i2___xxtofl@arg+1,f,c
 51430  0183DC  320F               	rrcf	i2___xxtofl@arg,f,c
 51431  0183DE                     i2l2886:
 51432  0183DE  0E00               	movlw	0
 51433  0183E0  140F               	andwf	i2___xxtofl@arg,w,c
 51434  0183E2  6E09               	movwf	??i2___xxtofl& (0+255),c
 51435  0183E4  0E00               	movlw	0
 51436  0183E6  1410               	andwf	i2___xxtofl@arg+1,w,c
 51437  0183E8  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 51438  0183EA  0E00               	movlw	0
 51439  0183EC  1411               	andwf	i2___xxtofl@arg+2,w,c
 51440  0183EE  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 51441  0183F0  0EFF               	movlw	255
 51442  0183F2  1412               	andwf	i2___xxtofl@arg+3,w,c
 51443  0183F4  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 51444  0183F6  5009               	movf	??i2___xxtofl,w,c
 51445  0183F8  100A               	iorwf	??i2___xxtofl+1,w,c
 51446  0183FA  100B               	iorwf	??i2___xxtofl+2,w,c
 51447  0183FC  100C               	iorwf	??i2___xxtofl+3,w,c
 51448  0183FE  B4D8               	btfsc	status,2,c
 51449  018400  D007               	goto	i2l2889
 51450  018402  D7E1               	goto	i2l2887
 51451  018404  060E               	decf	i2___xxtofl@exp,f,c
 51452  018406  90D8               	bcf	status,0,c
 51453  018408  360F               	rlcf	i2___xxtofl@arg,f,c
 51454  01840A  3610               	rlcf	i2___xxtofl@arg+1,f,c
 51455  01840C  3611               	rlcf	i2___xxtofl@arg+2,f,c
 51456  01840E  3612               	rlcf	i2___xxtofl@arg+3,f,c
 51457  018410                     i2l2889:
 51458  018410  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 51459  018412  D003               	goto	i2u1948_40
 51460  018414  0E02               	movlw	2
 51461  018416  600E               	cpfslt	i2___xxtofl@exp,c
 51462  018418  D7F5               	goto	i2l2890
 51463  01841A                     i2u1948_40:
 51464  01841A  B00E               	btfsc	i2___xxtofl@exp,0,c
 51465  01841C  D008               	goto	i2l2894
 51466  01841E  0EFF               	movlw	255
 51467  018420  160F               	andwf	i2___xxtofl@arg,f,c
 51468  018422  0EFF               	movlw	255
 51469  018424  1610               	andwf	i2___xxtofl@arg+1,f,c
 51470  018426  0E7F               	movlw	127
 51471  018428  1611               	andwf	i2___xxtofl@arg+2,f,c
 51472  01842A  0EFF               	movlw	255
 51473  01842C  1612               	andwf	i2___xxtofl@arg+3,f,c
 51474  01842E                     i2l2894:
 51475  01842E  90D8               	bcf	status,0,c
 51476  018430  320E               	rrcf	i2___xxtofl@exp,f,c
 51477  018432  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 51478  018436  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 51479  018438  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 51480  01843A  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 51481  01843C  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 51482  018440  6A0B               	clrf	??i2___xxtofl+2,c
 51483  018442  6A0A               	clrf	??i2___xxtofl+1,c
 51484  018444  6A09               	clrf	??i2___xxtofl,c
 51485  018446  5009               	movf	??i2___xxtofl,w,c
 51486  018448  120F               	iorwf	i2___xxtofl@arg,f,c
 51487  01844A  500A               	movf	??i2___xxtofl+1,w,c
 51488  01844C  1210               	iorwf	i2___xxtofl@arg+1,f,c
 51489  01844E  500B               	movf	??i2___xxtofl+2,w,c
 51490  018450  1211               	iorwf	i2___xxtofl@arg+2,f,c
 51491  018452  500C               	movf	??i2___xxtofl+3,w,c
 51492  018454  1212               	iorwf	i2___xxtofl@arg+3,f,c
 51493  018456  500D               	movf	i2___xxtofl@sign,w,c
 51494  018458  A4D8               	btfss	status,2,c
 51495  01845A  AE08               	btfss	i2___xxtofl@val+3,7,c
 51496  01845C  D001               	goto	i2l2895
 51497  01845E  8E12               	bsf	i2___xxtofl@arg+3,7,c
 51498  018460                     i2l2895:
 51499  018460  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 51500  018464  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 51501  018468  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 51502  01846C  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 51503  018470  0012               	return	
 51504  018472                     __end_ofi2___xxtofl:
 51505                           	opt stack 0
 51506                           tosu	equ	0xFFF
 51507                           tosh	equ	0xFFE
 51508                           tosl	equ	0xFFD
 51509                           pclatu	equ	0xFFB
 51510                           pclath	equ	0xFFA
 51511                           tblptru	equ	0xFF8
 51512                           tblptrh	equ	0xFF7
 51513                           tblptrl	equ	0xFF6
 51514                           tablat	equ	0xFF5
 51515                           prodh	equ	0xFF4
 51516                           prodl	equ	0xFF3
 51517                           intcon	equ	0xFF2
 51518                           indf0	equ	0xFEF
 51519                           postinc0	equ	0xFEE
 51520                           fsr0h	equ	0xFEA
 51521                           fsr0l	equ	0xFE9
 51522                           wreg	equ	0xFE8
 51523                           indf1	equ	0xFE7
 51524                           postdec1	equ	0xFE5
 51525                           plusw1	equ	0xFE3
 51526                           fsr1h	equ	0xFE2
 51527                           fsr1l	equ	0xFE1
 51528                           bsr	equ	0xFE0
 51529                           indf2	equ	0xFDF
 51530                           postinc2	equ	0xFDE
 51531                           postdec2	equ	0xFDD
 51532                           plusw2	equ	0xFDB
 51533                           fsr2h	equ	0xFDA
 51534                           fsr2l	equ	0xFD9
 51535                           status	equ	0xFD8
 51536                           
 51537 ;; *************** function i2___fltol *****************
 51538 ;; Defined at:
 51539 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 51540 ;; Parameters:    Size  Location     Type
 51541 ;;  f1              4   12[BANK0 ] unsigned char 
 51542 ;; Auto vars:     Size  Location     Type
 51543 ;;  __fltol         1   21[BANK0 ] unsigned char 
 51544 ;;  __fltol         1   20[BANK0 ] unsigned char 
 51545 ;; Return value:  Size  Location     Type
 51546 ;;                  4   12[BANK0 ] long 
 51547 ;; Registers used:
 51548 ;;		wreg, status,2, status,0
 51549 ;; Tracked objects:
 51550 ;;		On entry : 0/0
 51551 ;;		On exit  : 0/0
 51552 ;;		Unchanged: 0/0
 51553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51554 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51555 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51556 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51557 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51558 ;;Total ram usage:       10 bytes
 51559 ;; Hardware stack levels used:    1
 51560 ;; This function calls:
 51561 ;;		Nothing
 51562 ;; This function is called by:
 51563 ;;		_ADCPostProcessingCallback
 51564 ;;		_floor
 51565 ;;		i2__doprnt
 51566 ;; This function uses a non-reentrant model
 51567 ;;
 51568                           
 51569                           	psect	text159
 51570  0192FC                     __ptext159:
 51571                           	opt stack 0
 51572  0192FC                     i2___fltol:
 51573                           	opt stack 14
 51574                           
 51575                           ;incstack = 0
 51576  0192FC  0100               	movlb	0	; () banked
 51577  0192FE  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 51578  019300  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 51579  019302  6F75               	movwf	i2___fltol@exp1& (0+255),b
 51580  019304  5175               	movf	i2___fltol@exp1& (0+255),w,b
 51581  019306  A4D8               	btfss	status,2,c
 51582  019308  D009               	goto	i2l2398
 51583                           
 51584                           ; BSR set to: 0
 51585  01930A  0E00               	movlw	0
 51586  01930C  6F6C               	movwf	?i2___fltol& (0+255),b
 51587  01930E  0E00               	movlw	0
 51588  019310  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 51589  019312  0E00               	movlw	0
 51590  019314  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 51591  019316  0E00               	movlw	0
 51592  019318  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 51593                           
 51594                           ; BSR set to: 0
 51595  01931A  0012               	return	
 51596  01931C                     i2l2398:
 51597                           
 51598                           ; BSR set to: 0
 51599                           
 51600                           ; BSR set to: 0
 51601  01931C  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 51602  019320  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 51603  019324  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 51604  019328  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 51605  01932C  0E20               	movlw	32
 51606  01932E  D005               	goto	i2u1936_40
 51607  019330                     i2u1936_45:
 51608  019330  90D8               	bcf	status,0,c
 51609  019332  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 51610  019334  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 51611  019336  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 51612  019338  3370               	rrcf	??i2___fltol& (0+255),f,b
 51613  01933A                     i2u1936_40:
 51614  01933A  2EE8               	decfsz	wreg,f,c
 51615  01933C  D7F9               	goto	i2u1936_45
 51616  01933E  5170               	movf	??i2___fltol& (0+255),w,b
 51617  019340  6F74               	movwf	i2___fltol@sign1& (0+255),b
 51618                           
 51619                           ; BSR set to: 0
 51620  019342  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 51621                           
 51622                           ; BSR set to: 0
 51623  019344  0EFF               	movlw	255
 51624  019346  176C               	andwf	i2___fltol@f1& (0+255),f,b
 51625  019348  0EFF               	movlw	255
 51626  01934A  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 51627  01934C  0EFF               	movlw	255
 51628  01934E  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 51629  019350  0E00               	movlw	0
 51630  019352  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 51631                           
 51632                           ; BSR set to: 0
 51633  019354  0E96               	movlw	150
 51634  019356  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 51635                           
 51636                           ; BSR set to: 0
 51637  019358  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 51638  01935A  D016               	goto	i2l2400
 51639                           
 51640                           ; BSR set to: 0
 51641  01935C  5175               	movf	i2___fltol@exp1& (0+255),w,b
 51642  01935E  0A80               	xorlw	128
 51643  019360  0F97               	addlw	151
 51644  019362  B0D8               	btfsc	status,0,c
 51645  019364  D009               	goto	i2l2401
 51646                           
 51647                           ; BSR set to: 0
 51648  019366  0E00               	movlw	0
 51649  019368  6F6C               	movwf	?i2___fltol& (0+255),b
 51650  01936A  0E00               	movlw	0
 51651  01936C  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 51652  01936E  0E00               	movlw	0
 51653  019370  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 51654  019372  0E00               	movlw	0
 51655  019374  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 51656                           
 51657                           ; BSR set to: 0
 51658  019376  0012               	return	
 51659  019378                     i2l2401:
 51660                           
 51661                           ; BSR set to: 0
 51662                           
 51663                           ; BSR set to: 0
 51664                           
 51665                           ; BSR set to: 0
 51666  019378  90D8               	bcf	status,0,c
 51667  01937A  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 51668  01937C  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 51669  01937E  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 51670  019380  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 51671                           
 51672                           ; BSR set to: 0
 51673  019382  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 51674  019384  D7F9               	goto	i2l2401
 51675                           
 51676                           ; BSR set to: 0
 51677  019386  D015               	goto	i2u1940_40
 51678  019388                     i2l2400:
 51679                           
 51680                           ; BSR set to: 0
 51681                           
 51682                           ; BSR set to: 0
 51683  019388  0E1F               	movlw	31
 51684  01938A  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 51685  01938C  D00F               	goto	i2l2406
 51686                           
 51687                           ; BSR set to: 0
 51688  01938E  0E00               	movlw	0
 51689  019390  6F6C               	movwf	?i2___fltol& (0+255),b
 51690  019392  0E00               	movlw	0
 51691  019394  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 51692  019396  0E00               	movlw	0
 51693  019398  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 51694  01939A  0E00               	movlw	0
 51695  01939C  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 51696                           
 51697                           ; BSR set to: 0
 51698  01939E  0012               	return	
 51699  0193A0                     
 51700                           ; BSR set to: 0
 51701                           
 51702                           ; BSR set to: 0
 51703  0193A0  90D8               	bcf	status,0,c
 51704  0193A2  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 51705  0193A4  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 51706  0193A6  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 51707  0193A8  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 51708  0193AA  0775               	decf	i2___fltol@exp1& (0+255),f,b
 51709  0193AC                     i2l2406:
 51710                           
 51711                           ; BSR set to: 0
 51712                           
 51713                           ; BSR set to: 0
 51714  0193AC  5175               	movf	i2___fltol@exp1& (0+255),w,b
 51715  0193AE  A4D8               	btfss	status,2,c
 51716  0193B0  D7F7               	goto	i2l2407
 51717  0193B2                     i2u1940_40:
 51718                           
 51719                           ; BSR set to: 0
 51720                           
 51721                           ; BSR set to: 0
 51722                           
 51723                           ; BSR set to: 0
 51724  0193B2  5174               	movf	i2___fltol@sign1& (0+255),w,b
 51725  0193B4  B4D8               	btfsc	status,2,c
 51726  0193B6  D008               	goto	i2l2409
 51727                           
 51728                           ; BSR set to: 0
 51729  0193B8  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 51730  0193BA  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 51731  0193BC  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 51732  0193BE  6D6C               	negf	i2___fltol@f1& (0+255),b
 51733  0193C0  0E00               	movlw	0
 51734  0193C2  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 51735  0193C4  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 51736  0193C6  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 51737  0193C8                     i2l2409:
 51738                           
 51739                           ; BSR set to: 0
 51740                           
 51741                           ; BSR set to: 0
 51742  0193C8  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 51743  0193CC  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 51744  0193D0  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 51745  0193D4  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 51746  0193D8  0012               	return	
 51747  0193DA                     __end_ofi2___fltol:
 51748                           	opt stack 0
 51749                           tosu	equ	0xFFF
 51750                           tosh	equ	0xFFE
 51751                           tosl	equ	0xFFD
 51752                           pclatu	equ	0xFFB
 51753                           pclath	equ	0xFFA
 51754                           tblptru	equ	0xFF8
 51755                           tblptrh	equ	0xFF7
 51756                           tblptrl	equ	0xFF6
 51757                           tablat	equ	0xFF5
 51758                           prodh	equ	0xFF4
 51759                           prodl	equ	0xFF3
 51760                           intcon	equ	0xFF2
 51761                           indf0	equ	0xFEF
 51762                           postinc0	equ	0xFEE
 51763                           fsr0h	equ	0xFEA
 51764                           fsr0l	equ	0xFE9
 51765                           wreg	equ	0xFE8
 51766                           indf1	equ	0xFE7
 51767                           postdec1	equ	0xFE5
 51768                           plusw1	equ	0xFE3
 51769                           fsr1h	equ	0xFE2
 51770                           fsr1l	equ	0xFE1
 51771                           bsr	equ	0xFE0
 51772                           indf2	equ	0xFDF
 51773                           postinc2	equ	0xFDE
 51774                           postdec2	equ	0xFDD
 51775                           plusw2	equ	0xFDB
 51776                           fsr2h	equ	0xFDA
 51777                           fsr2l	equ	0xFD9
 51778                           status	equ	0xFD8
 51779                           
 51780 ;; *************** function i2___flge *****************
 51781 ;; Defined at:
 51782 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 51783 ;; Parameters:    Size  Location     Type
 51784 ;;  ff1             4   51[COMRAM] long 
 51785 ;;  ff2             4   55[COMRAM] long 
 51786 ;; Auto vars:     Size  Location     Type
 51787 ;;		None
 51788 ;; Return value:  Size  Location     Type
 51789 ;;		None               void
 51790 ;; Registers used:
 51791 ;;		wreg, status,2, status,0
 51792 ;; Tracked objects:
 51793 ;;		On entry : 0/0
 51794 ;;		On exit  : 0/0
 51795 ;;		Unchanged: 0/0
 51796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51797 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51800 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51801 ;;Total ram usage:       12 bytes
 51802 ;; Hardware stack levels used:    1
 51803 ;; This function calls:
 51804 ;;		Nothing
 51805 ;; This function is called by:
 51806 ;;		_ADCPostProcessingCallback
 51807 ;;		_writeEnergyToEEPROMCallback
 51808 ;;		_asin
 51809 ;;		_atan
 51810 ;;		_sin
 51811 ;;		_floor
 51812 ;;		i2__doprnt
 51813 ;; This function uses a non-reentrant model
 51814 ;;
 51815                           
 51816                           	psect	text160
 51817  018DE4                     __ptext160:
 51818                           	opt stack 0
 51819  018DE4                     i2___flge:
 51820                           	opt stack 14
 51821                           
 51822                           ; BSR set to: 0
 51823                           ;incstack = 0
 51824  018DE4  0E00               	movlw	0
 51825  018DE6  1434               	andwf	i2___flge@ff1,w,c
 51826  018DE8  6E3C               	movwf	??i2___flge& (0+255),c
 51827  018DEA  0E00               	movlw	0
 51828  018DEC  1435               	andwf	i2___flge@ff1+1,w,c
 51829  018DEE  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 51830  018DF0  0E80               	movlw	128
 51831  018DF2  1436               	andwf	i2___flge@ff1+2,w,c
 51832  018DF4  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 51833  018DF6  0E7F               	movlw	127
 51834  018DF8  1437               	andwf	i2___flge@ff1+3,w,c
 51835  018DFA  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 51836  018DFC  503C               	movf	??i2___flge,w,c
 51837  018DFE  103D               	iorwf	??i2___flge+1,w,c
 51838  018E00  103E               	iorwf	??i2___flge+2,w,c
 51839  018E02  103F               	iorwf	??i2___flge+3,w,c
 51840  018E04  A4D8               	btfss	status,2,c
 51841  018E06  D008               	goto	i2l2368
 51842  018E08  0E00               	movlw	0
 51843  018E0A  6E34               	movwf	i2___flge@ff1,c
 51844  018E0C  0E00               	movlw	0
 51845  018E0E  6E35               	movwf	i2___flge@ff1+1,c
 51846  018E10  0E00               	movlw	0
 51847  018E12  6E36               	movwf	i2___flge@ff1+2,c
 51848  018E14  0E00               	movlw	0
 51849  018E16  6E37               	movwf	i2___flge@ff1+3,c
 51850  018E18                     i2l2368:
 51851  018E18  0E00               	movlw	0
 51852  018E1A  1438               	andwf	i2___flge@ff2,w,c
 51853  018E1C  6E3C               	movwf	??i2___flge& (0+255),c
 51854  018E1E  0E00               	movlw	0
 51855  018E20  1439               	andwf	i2___flge@ff2+1,w,c
 51856  018E22  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 51857  018E24  0E80               	movlw	128
 51858  018E26  143A               	andwf	i2___flge@ff2+2,w,c
 51859  018E28  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 51860  018E2A  0E7F               	movlw	127
 51861  018E2C  143B               	andwf	i2___flge@ff2+3,w,c
 51862  018E2E  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 51863  018E30  503C               	movf	??i2___flge,w,c
 51864  018E32  103D               	iorwf	??i2___flge+1,w,c
 51865  018E34  103E               	iorwf	??i2___flge+2,w,c
 51866  018E36  103F               	iorwf	??i2___flge+3,w,c
 51867  018E38  A4D8               	btfss	status,2,c
 51868  018E3A  D008               	goto	i2l2369
 51869  018E3C  0E00               	movlw	0
 51870  018E3E  6E38               	movwf	i2___flge@ff2,c
 51871  018E40  0E00               	movlw	0
 51872  018E42  6E39               	movwf	i2___flge@ff2+1,c
 51873  018E44  0E00               	movlw	0
 51874  018E46  6E3A               	movwf	i2___flge@ff2+2,c
 51875  018E48  0E00               	movlw	0
 51876  018E4A  6E3B               	movwf	i2___flge@ff2+3,c
 51877  018E4C                     i2l2369:
 51878  018E4C  AE37               	btfss	i2___flge@ff1+3,7,c
 51879  018E4E  D01D               	goto	i2l2370
 51880  018E50  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 51881  018E54  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 51882  018E58  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 51883  018E5C  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 51884  018E60  1E3C               	comf	??i2___flge,f,c
 51885  018E62  1E3D               	comf	??i2___flge+1,f,c
 51886  018E64  1E3E               	comf	??i2___flge+2,f,c
 51887  018E66  1E3F               	comf	??i2___flge+3,f,c
 51888  018E68  2A3C               	incf	??i2___flge,f,c
 51889  018E6A  0E00               	movlw	0
 51890  018E6C  223D               	addwfc	??i2___flge+1,f,c
 51891  018E6E  223E               	addwfc	??i2___flge+2,f,c
 51892  018E70  223F               	addwfc	??i2___flge+3,f,c
 51893  018E72  0E00               	movlw	0
 51894  018E74  243C               	addwf	??i2___flge,w,c
 51895  018E76  6E34               	movwf	i2___flge@ff1,c
 51896  018E78  0E00               	movlw	0
 51897  018E7A  203D               	addwfc	??i2___flge+1,w,c
 51898  018E7C  6E35               	movwf	i2___flge@ff1+1,c
 51899  018E7E  0E00               	movlw	0
 51900  018E80  203E               	addwfc	??i2___flge+2,w,c
 51901  018E82  6E36               	movwf	i2___flge@ff1+2,c
 51902  018E84  0E80               	movlw	128
 51903  018E86  203F               	addwfc	??i2___flge+3,w,c
 51904  018E88  6E37               	movwf	i2___flge@ff1+3,c
 51905  018E8A                     i2l2370:
 51906  018E8A  AE3B               	btfss	i2___flge@ff2+3,7,c
 51907  018E8C  D01D               	goto	i2l2371
 51908  018E8E  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 51909  018E92  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 51910  018E96  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 51911  018E9A  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 51912  018E9E  1E3C               	comf	??i2___flge,f,c
 51913  018EA0  1E3D               	comf	??i2___flge+1,f,c
 51914  018EA2  1E3E               	comf	??i2___flge+2,f,c
 51915  018EA4  1E3F               	comf	??i2___flge+3,f,c
 51916  018EA6  2A3C               	incf	??i2___flge,f,c
 51917  018EA8  0E00               	movlw	0
 51918  018EAA  223D               	addwfc	??i2___flge+1,f,c
 51919  018EAC  223E               	addwfc	??i2___flge+2,f,c
 51920  018EAE  223F               	addwfc	??i2___flge+3,f,c
 51921  018EB0  0E00               	movlw	0
 51922  018EB2  243C               	addwf	??i2___flge,w,c
 51923  018EB4  6E38               	movwf	i2___flge@ff2,c
 51924  018EB6  0E00               	movlw	0
 51925  018EB8  203D               	addwfc	??i2___flge+1,w,c
 51926  018EBA  6E39               	movwf	i2___flge@ff2+1,c
 51927  018EBC  0E00               	movlw	0
 51928  018EBE  203E               	addwfc	??i2___flge+2,w,c
 51929  018EC0  6E3A               	movwf	i2___flge@ff2+2,c
 51930  018EC2  0E80               	movlw	128
 51931  018EC4  203F               	addwfc	??i2___flge+3,w,c
 51932  018EC6  6E3B               	movwf	i2___flge@ff2+3,c
 51933  018EC8                     i2l2371:
 51934  018EC8  0E00               	movlw	0
 51935  018ECA  1A34               	xorwf	i2___flge@ff1,f,c
 51936  018ECC  0E00               	movlw	0
 51937  018ECE  1A35               	xorwf	i2___flge@ff1+1,f,c
 51938  018ED0  0E00               	movlw	0
 51939  018ED2  1A36               	xorwf	i2___flge@ff1+2,f,c
 51940  018ED4  0E80               	movlw	128
 51941  018ED6  1A37               	xorwf	i2___flge@ff1+3,f,c
 51942  018ED8  0E00               	movlw	0
 51943  018EDA  1A38               	xorwf	i2___flge@ff2,f,c
 51944  018EDC  0E00               	movlw	0
 51945  018EDE  1A39               	xorwf	i2___flge@ff2+1,f,c
 51946  018EE0  0E00               	movlw	0
 51947  018EE2  1A3A               	xorwf	i2___flge@ff2+2,f,c
 51948  018EE4  0E80               	movlw	128
 51949  018EE6  1A3B               	xorwf	i2___flge@ff2+3,f,c
 51950  018EE8  5038               	movf	i2___flge@ff2,w,c
 51951  018EEA  5C34               	subwf	i2___flge@ff1,w,c
 51952  018EEC  5039               	movf	i2___flge@ff2+1,w,c
 51953  018EEE  5835               	subwfb	i2___flge@ff1+1,w,c
 51954  018EF0  503A               	movf	i2___flge@ff2+2,w,c
 51955  018EF2  5836               	subwfb	i2___flge@ff1+2,w,c
 51956  018EF4  503B               	movf	i2___flge@ff2+3,w,c
 51957  018EF6  5837               	subwfb	i2___flge@ff1+3,w,c
 51958  018EF8  B0D8               	btfsc	status,0,c
 51959  018EFA  D002               	goto	i2l13515
 51960  018EFC  90D8               	bcf	status,0,c
 51961  018EFE  0012               	return	
 51962  018F00                     i2l13515:
 51963  018F00  80D8               	bsf	status,0,c
 51964  018F02  0012               	return	
 51965  018F04                     __end_ofi2___flge:
 51966                           	opt stack 0
 51967                           tosu	equ	0xFFF
 51968                           tosh	equ	0xFFE
 51969                           tosl	equ	0xFFD
 51970                           pclatu	equ	0xFFB
 51971                           pclath	equ	0xFFA
 51972                           tblptru	equ	0xFF8
 51973                           tblptrh	equ	0xFF7
 51974                           tblptrl	equ	0xFF6
 51975                           tablat	equ	0xFF5
 51976                           prodh	equ	0xFF4
 51977                           prodl	equ	0xFF3
 51978                           intcon	equ	0xFF2
 51979                           indf0	equ	0xFEF
 51980                           postinc0	equ	0xFEE
 51981                           fsr0h	equ	0xFEA
 51982                           fsr0l	equ	0xFE9
 51983                           wreg	equ	0xFE8
 51984                           indf1	equ	0xFE7
 51985                           postdec1	equ	0xFE5
 51986                           plusw1	equ	0xFE3
 51987                           fsr1h	equ	0xFE2
 51988                           fsr1l	equ	0xFE1
 51989                           bsr	equ	0xFE0
 51990                           indf2	equ	0xFDF
 51991                           postinc2	equ	0xFDE
 51992                           postdec2	equ	0xFDD
 51993                           plusw2	equ	0xFDB
 51994                           fsr2h	equ	0xFDA
 51995                           fsr2l	equ	0xFD9
 51996                           status	equ	0xFD8
 51997                           
 51998 ;; *************** function _frexp *****************
 51999 ;; Defined at:
 52000 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 52001 ;; Parameters:    Size  Location     Type
 52002 ;;  value           4    0[COMRAM] long 
 52003 ;;  eptr            2    4[COMRAM] PTR int 
 52004 ;;		 -> floor@expon(2), 
 52005 ;; Auto vars:     Size  Location     Type
 52006 ;;		None
 52007 ;; Return value:  Size  Location     Type
 52008 ;;                  4    0[COMRAM] PTR int 
 52009 ;; Registers used:
 52010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52011 ;; Tracked objects:
 52012 ;;		On entry : 0/0
 52013 ;;		On exit  : 0/0
 52014 ;;		Unchanged: 0/0
 52015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52016 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52018 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52019 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52020 ;;Total ram usage:        8 bytes
 52021 ;; Hardware stack levels used:    1
 52022 ;; This function calls:
 52023 ;;		Nothing
 52024 ;; This function is called by:
 52025 ;;		_floor
 52026 ;; This function uses a non-reentrant model
 52027 ;;
 52028                           
 52029                           	psect	text161
 52030  019DA4                     __ptext161:
 52031                           	opt stack 0
 52032  019DA4                     _frexp:
 52033                           	opt stack 12
 52034                           
 52035                           ;incstack = 0
 52036  019DA4  5001               	movf	frexp@value,w,c
 52037  019DA6  1002               	iorwf	frexp@value+1,w,c
 52038  019DA8  1003               	iorwf	frexp@value+2,w,c
 52039  019DAA  1004               	iorwf	frexp@value+3,w,c
 52040  019DAC  A4D8               	btfss	status,2,c
 52041  019DAE  D009               	goto	i2l2909
 52042  019DB0  C005  FFD9         	movff	frexp@eptr,fsr2l
 52043  019DB4  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52044  019DB8  0E00               	movlw	0
 52045  019DBA  6EDE               	movwf	postinc2,c
 52046  019DBC  0E00               	movlw	0
 52047  019DBE  6EDD               	movwf	postdec2,c
 52048                           
 52049                           ;	Return value of _frexp is never used
 52050  019DC0  0012               	return	
 52051  019DC2                     i2l2909:
 52052  019DC2  5004               	movf	frexp@value+3,w,c
 52053  019DC4  0B7F               	andlw	127
 52054  019DC6  6E07               	movwf	??_frexp& (0+255),c
 52055  019DC8  6A08               	clrf	(??_frexp+1)& (0+255),c
 52056  019DCA  90D8               	bcf	status,0,c
 52057  019DCC  3607               	rlcf	??_frexp,f,c
 52058  019DCE  3608               	rlcf	??_frexp+1,f,c
 52059  019DD0  C005  FFD9         	movff	frexp@eptr,fsr2l
 52060  019DD4  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52061  019DD8  C007  FFDE         	movff	??_frexp,postinc2
 52062  019DDC  C008  FFDD         	movff	??_frexp+1,postdec2
 52063  019DE0  AE03               	btfss	frexp@value+2,7,c
 52064  019DE2  D003               	goto	i2u1164_40
 52065  019DE4  6A07               	clrf	??_frexp& (0+255),c
 52066  019DE6  2A07               	incf	??_frexp& (0+255),f,c
 52067  019DE8  D001               	goto	i2u1164_48
 52068  019DEA                     i2u1164_40:
 52069  019DEA  6A07               	clrf	??_frexp& (0+255),c
 52070  019DEC                     i2u1164_48:
 52071  019DEC  5007               	movf	??_frexp,w,c
 52072  019DEE  C005  FFD9         	movff	frexp@eptr,fsr2l
 52073  019DF2  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52074  019DF6  12DE               	iorwf	postinc2,f,c
 52075  019DF8  0E00               	movlw	0
 52076  019DFA  12DD               	iorwf	postdec2,f,c
 52077  019DFC  C005  FFD9         	movff	frexp@eptr,fsr2l
 52078  019E00  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52079  019E04  0E82               	movlw	130
 52080  019E06  26DE               	addwf	postinc2,f,c
 52081  019E08  0EFF               	movlw	255
 52082  019E0A  22DD               	addwfc	postdec2,f,c
 52083  019E0C  8004               	bsf	frexp@value+3,0,c
 52084  019E0E  8204               	bsf	frexp@value+3,1,c
 52085  019E10  8404               	bsf	frexp@value+3,2,c
 52086  019E12  8604               	bsf	frexp@value+3,3,c
 52087  019E14  8804               	bsf	frexp@value+3,4,c
 52088  019E16  8A04               	bsf	frexp@value+3,5,c
 52089  019E18  9C04               	bcf	frexp@value+3,6,c
 52090  019E1A  9E03               	bcf	frexp@value+2,7,c
 52091  019E1C  0012               	return	
 52092  019E1E                     __end_of_frexp:
 52093                           	opt stack 0
 52094                           tosu	equ	0xFFF
 52095                           tosh	equ	0xFFE
 52096                           tosl	equ	0xFFD
 52097                           pclatu	equ	0xFFB
 52098                           pclath	equ	0xFFA
 52099                           tblptru	equ	0xFF8
 52100                           tblptrh	equ	0xFF7
 52101                           tblptrl	equ	0xFF6
 52102                           tablat	equ	0xFF5
 52103                           prodh	equ	0xFF4
 52104                           prodl	equ	0xFF3
 52105                           intcon	equ	0xFF2
 52106                           indf0	equ	0xFEF
 52107                           postinc0	equ	0xFEE
 52108                           fsr0h	equ	0xFEA
 52109                           fsr0l	equ	0xFE9
 52110                           wreg	equ	0xFE8
 52111                           indf1	equ	0xFE7
 52112                           postdec1	equ	0xFE5
 52113                           plusw1	equ	0xFE3
 52114                           fsr1h	equ	0xFE2
 52115                           fsr1l	equ	0xFE1
 52116                           bsr	equ	0xFE0
 52117                           indf2	equ	0xFDF
 52118                           postinc2	equ	0xFDE
 52119                           postdec2	equ	0xFDD
 52120                           plusw2	equ	0xFDB
 52121                           fsr2h	equ	0xFDA
 52122                           fsr2l	equ	0xFD9
 52123                           status	equ	0xFD8
 52124                           
 52125 ;; *************** function _eval_poly *****************
 52126 ;; Defined at:
 52127 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 52128 ;; Parameters:    Size  Location     Type
 52129 ;;  x               4   12[BANK0 ] PTR int 
 52130 ;;  d               2   16[BANK0 ] PTR const 
 52131 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 52132 ;;  n               2   18[BANK0 ] int 
 52133 ;; Auto vars:     Size  Location     Type
 52134 ;;  res             4   24[BANK0 ] int 
 52135 ;; Return value:  Size  Location     Type
 52136 ;;                  4   12[BANK0 ] int 
 52137 ;; Registers used:
 52138 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52139 ;; Tracked objects:
 52140 ;;		On entry : 0/0
 52141 ;;		On exit  : 0/0
 52142 ;;		Unchanged: 0/0
 52143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52144 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52145 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52146 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52147 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52148 ;;Total ram usage:       16 bytes
 52149 ;; Hardware stack levels used:    1
 52150 ;; Hardware stack levels required when called:    1
 52151 ;; This function calls:
 52152 ;;		i2___fladd
 52153 ;;		i2___flmul
 52154 ;; This function is called by:
 52155 ;;		_atan
 52156 ;;		_sin
 52157 ;; This function uses a non-reentrant model
 52158 ;;
 52159                           
 52160                           	psect	text162
 52161  01911E                     __ptext162:
 52162                           	opt stack 0
 52163  01911E                     _eval_poly:
 52164                           	opt stack 12
 52165                           
 52166                           ;incstack = 0
 52167  01911E  C072  F074         	movff	eval_poly@n,??_eval_poly
 52168  019122  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 52169  019126  0100               	movlb	0	; () banked
 52170  019128  90D8               	bcf	status,0,c
 52171  01912A  3774               	rlcf	??_eval_poly& (0+255),f,b
 52172  01912C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52173  01912E  90D8               	bcf	status,0,c
 52174  019130  3774               	rlcf	??_eval_poly& (0+255),f,b
 52175  019132  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52176  019134  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 52177  019138  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 52178  01913C  5174               	movf	??_eval_poly& (0+255),w,b
 52179  01913E  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 52180  019140  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 52181  019142  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 52182  019144  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 52183  019148  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 52184  01914C                     	if	0	;tblptru may be non-zero
 52185  01914C                     	endif
 52186  01914C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 52187  01914C  0E00               	movlw	low (__mediumconst shr (0+16))
 52188  01914E  6EF8               	movwf	tblptru,c
 52189  019150                     	endif
 52190  019150  0009               	tblrd		*+
 52191  019152  CFF5 F078          	movff	tablat,eval_poly@res
 52192  019156  0009               	tblrd		*+
 52193  019158  CFF5 F079          	movff	tablat,eval_poly@res+1
 52194  01915C  0009               	tblrd		*+
 52195  01915E  CFF5 F07A          	movff	tablat,eval_poly@res+2
 52196  019162  000A               	tblrd		*-
 52197  019164  CFF5 F07B          	movff	tablat,eval_poly@res+3
 52198  019168  D04C               	goto	i2l2341
 52199  01916A                     
 52200                           ; BSR set to: 0
 52201                           
 52202                           ; BSR set to: 0
 52203  01916A  C078  F034         	movff	eval_poly@res,i2___flmul@a
 52204  01916E  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 52205  019172  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 52206  019176  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 52207  01917A  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 52208  01917E  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 52209  019182  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 52210  019186  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 52211  01918A  EC90  F0AD         	call	i2___flmul	;wreg free
 52212  01918E  C030  F056         	movff	?i2___flmul,i2___fladd@b
 52213  019192  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 52214  019196  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 52215  01919A  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 52216  01919E  0100               	movlb	0	; () banked
 52217  0191A0  0772               	decf	eval_poly@n& (0+255),f,b
 52218  0191A2  A0D8               	btfss	status,0,c
 52219  0191A4  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 52220  0191A6  C072  F074         	movff	eval_poly@n,??_eval_poly
 52221  0191AA  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 52222  0191AE  90D8               	bcf	status,0,c
 52223  0191B0  3774               	rlcf	??_eval_poly& (0+255),f,b
 52224  0191B2  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52225  0191B4  90D8               	bcf	status,0,c
 52226  0191B6  3774               	rlcf	??_eval_poly& (0+255),f,b
 52227  0191B8  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52228  0191BA  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 52229  0191BE  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 52230  0191C2  5174               	movf	??_eval_poly& (0+255),w,b
 52231  0191C4  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 52232  0191C6  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 52233  0191C8  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 52234  0191CA  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 52235  0191CE  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 52236  0191D2                     	if	0	;tblptru may be non-zero
 52237  0191D2                     	endif
 52238  0191D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 52239  0191D2  0E00               	movlw	low (__mediumconst shr (0+16))
 52240  0191D4  6EF8               	movwf	tblptru,c
 52241  0191D6                     	endif
 52242  0191D6  0009               	tblrd		*+
 52243  0191D8  CFF5 F05A          	movff	tablat,i2___fladd@a
 52244  0191DC  0009               	tblrd		*+
 52245  0191DE  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 52246  0191E2  0009               	tblrd		*+
 52247  0191E4  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 52248  0191E8  000A               	tblrd		*-
 52249  0191EA  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 52250  0191EE  ECD7  F0B0         	call	i2___fladd	;wreg free
 52251  0191F2  C056  F078         	movff	?i2___fladd,eval_poly@res
 52252  0191F6  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 52253  0191FA  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 52254  0191FE  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 52255  019202                     i2l2341:
 52256  019202  0100               	movlb	0	; () banked
 52257  019204  5172               	movf	eval_poly@n& (0+255),w,b
 52258  019206  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 52259  019208  A4D8               	btfss	status,2,c
 52260  01920A  D7AF               	goto	i2l2342
 52261                           
 52262                           ; BSR set to: 0
 52263  01920C  C078  F06C         	movff	eval_poly@res,?_eval_poly
 52264  019210  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 52265  019214  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 52266  019218  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 52267                           
 52268                           ; BSR set to: 0
 52269  01921C  0012               	return		;funcret
 52270  01921E                     __end_of_eval_poly:
 52271                           	opt stack 0
 52272                           tosu	equ	0xFFF
 52273                           tosh	equ	0xFFE
 52274                           tosl	equ	0xFFD
 52275                           pclatu	equ	0xFFB
 52276                           pclath	equ	0xFFA
 52277                           tblptru	equ	0xFF8
 52278                           tblptrh	equ	0xFF7
 52279                           tblptrl	equ	0xFF6
 52280                           tablat	equ	0xFF5
 52281                           prodh	equ	0xFF4
 52282                           prodl	equ	0xFF3
 52283                           intcon	equ	0xFF2
 52284                           indf0	equ	0xFEF
 52285                           postinc0	equ	0xFEE
 52286                           fsr0h	equ	0xFEA
 52287                           fsr0l	equ	0xFE9
 52288                           wreg	equ	0xFE8
 52289                           indf1	equ	0xFE7
 52290                           postdec1	equ	0xFE5
 52291                           plusw1	equ	0xFE3
 52292                           fsr1h	equ	0xFE2
 52293                           fsr1l	equ	0xFE1
 52294                           bsr	equ	0xFE0
 52295                           indf2	equ	0xFDF
 52296                           postinc2	equ	0xFDE
 52297                           postdec2	equ	0xFDD
 52298                           plusw2	equ	0xFDB
 52299                           fsr2h	equ	0xFDA
 52300                           fsr2l	equ	0xFD9
 52301                           status	equ	0xFD8
 52302                           
 52303 ;; *************** function i2___flmul *****************
 52304 ;; Defined at:
 52305 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 52306 ;; Parameters:    Size  Location     Type
 52307 ;;  b               4   47[COMRAM] int 
 52308 ;;  a               4   51[COMRAM] int 
 52309 ;; Auto vars:     Size  Location     Type
 52310 ;;  __flmul         4   66[COMRAM] struct .
 52311 ;;  __flmul         4   61[COMRAM] unsigned long 
 52312 ;;  __flmul         2   70[COMRAM] struct .
 52313 ;;  __flmul         1   65[COMRAM] unsigned char 
 52314 ;;  __flmul         1   60[COMRAM] unsigned char 
 52315 ;;  __flmul         1   59[COMRAM] unsigned char 
 52316 ;; Return value:  Size  Location     Type
 52317 ;;                  4   47[COMRAM] unsigned char 
 52318 ;; Registers used:
 52319 ;;		wreg, status,2, status,0, prodl, prodh
 52320 ;; Tracked objects:
 52321 ;;		On entry : 0/0
 52322 ;;		On exit  : 0/0
 52323 ;;		Unchanged: 0/0
 52324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52325 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52326 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52328 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52329 ;;Total ram usage:       25 bytes
 52330 ;; Hardware stack levels used:    1
 52331 ;; This function calls:
 52332 ;;		Nothing
 52333 ;; This function is called by:
 52334 ;;		_peakToRMS
 52335 ;;		_ADCPostProcessingCallback
 52336 ;;		_asin
 52337 ;;		_atan
 52338 ;;		_eval_poly
 52339 ;;		_sin
 52340 ;;		i2_fround
 52341 ;;		i2_scale
 52342 ;;		i2__doprnt
 52343 ;; This function uses a non-reentrant model
 52344 ;;
 52345                           
 52346                           	psect	text163
 52347  015B20                     __ptext163:
 52348                           	opt stack 0
 52349  015B20                     i2___flmul:
 52350                           	opt stack 13
 52351                           
 52352                           ; BSR set to: 0
 52353                           ;incstack = 0
 52354  015B20  5033               	movf	i2___flmul@b+3,w,c
 52355  015B22  0B80               	andlw	128
 52356  015B24  6E3C               	movwf	i2___flmul@sign,c
 52357  015B26  5033               	movf	i2___flmul@b+3,w,c
 52358  015B28  2433               	addwf	i2___flmul@b+3,w,c
 52359  015B2A  6E42               	movwf	i2___flmul@bexp,c
 52360  015B2C  BE32               	btfsc	i2___flmul@b+2,7,c
 52361  015B2E  8042               	bsf	i2___flmul@bexp,0,c
 52362  015B30  5042               	movf	i2___flmul@bexp,w,c
 52363  015B32  B4D8               	btfsc	status,2,c
 52364  015B34  D00D               	goto	i2l2770
 52365  015B36  2842               	incf	i2___flmul@bexp,w,c
 52366  015B38  A4D8               	btfss	status,2,c
 52367  015B3A  D008               	goto	i2l2771
 52368  015B3C  0E00               	movlw	0
 52369  015B3E  6E30               	movwf	i2___flmul@b,c
 52370  015B40  0E00               	movlw	0
 52371  015B42  6E31               	movwf	i2___flmul@b+1,c
 52372  015B44  0E00               	movlw	0
 52373  015B46  6E32               	movwf	i2___flmul@b+2,c
 52374  015B48  0E00               	movlw	0
 52375  015B4A  6E33               	movwf	i2___flmul@b+3,c
 52376  015B4C                     i2l2771:
 52377  015B4C  8E32               	bsf	i2___flmul@b+2,7,c
 52378  015B4E  D008               	goto	i2l2772
 52379  015B50                     i2l2770:
 52380  015B50  0E00               	movlw	0
 52381  015B52  6E30               	movwf	i2___flmul@b,c
 52382  015B54  0E00               	movlw	0
 52383  015B56  6E31               	movwf	i2___flmul@b+1,c
 52384  015B58  0E00               	movlw	0
 52385  015B5A  6E32               	movwf	i2___flmul@b+2,c
 52386  015B5C  0E00               	movlw	0
 52387  015B5E  6E33               	movwf	i2___flmul@b+3,c
 52388  015B60                     i2l2772:
 52389  015B60  5037               	movf	i2___flmul@a+3,w,c
 52390  015B62  0B80               	andlw	128
 52391  015B64  1A3C               	xorwf	i2___flmul@sign,f,c
 52392  015B66  5037               	movf	i2___flmul@a+3,w,c
 52393  015B68  2437               	addwf	i2___flmul@a+3,w,c
 52394  015B6A  6E3D               	movwf	i2___flmul@aexp,c
 52395  015B6C  BE36               	btfsc	i2___flmul@a+2,7,c
 52396  015B6E  803D               	bsf	i2___flmul@aexp,0,c
 52397  015B70  503D               	movf	i2___flmul@aexp,w,c
 52398  015B72  B4D8               	btfsc	status,2,c
 52399  015B74  D00D               	goto	i2l2774
 52400  015B76  283D               	incf	i2___flmul@aexp,w,c
 52401  015B78  A4D8               	btfss	status,2,c
 52402  015B7A  D008               	goto	i2l2775
 52403  015B7C  0E00               	movlw	0
 52404  015B7E  6E34               	movwf	i2___flmul@a,c
 52405  015B80  0E00               	movlw	0
 52406  015B82  6E35               	movwf	i2___flmul@a+1,c
 52407  015B84  0E00               	movlw	0
 52408  015B86  6E36               	movwf	i2___flmul@a+2,c
 52409  015B88  0E00               	movlw	0
 52410  015B8A  6E37               	movwf	i2___flmul@a+3,c
 52411  015B8C                     i2l2775:
 52412  015B8C  8E36               	bsf	i2___flmul@a+2,7,c
 52413  015B8E  D008               	goto	i2l2776
 52414  015B90                     i2l2774:
 52415  015B90  0E00               	movlw	0
 52416  015B92  6E34               	movwf	i2___flmul@a,c
 52417  015B94  0E00               	movlw	0
 52418  015B96  6E35               	movwf	i2___flmul@a+1,c
 52419  015B98  0E00               	movlw	0
 52420  015B9A  6E36               	movwf	i2___flmul@a+2,c
 52421  015B9C  0E00               	movlw	0
 52422  015B9E  6E37               	movwf	i2___flmul@a+3,c
 52423  015BA0                     i2l2776:
 52424  015BA0  503D               	movf	i2___flmul@aexp,w,c
 52425  015BA2  B4D8               	btfsc	status,2,c
 52426  015BA4  D003               	goto	i2u1741_40
 52427  015BA6  5042               	movf	i2___flmul@bexp,w,c
 52428  015BA8  A4D8               	btfss	status,2,c
 52429  015BAA  D009               	goto	i2l2777
 52430  015BAC                     i2u1741_40:
 52431  015BAC  0E00               	movlw	0
 52432  015BAE  6E30               	movwf	?i2___flmul,c
 52433  015BB0  0E00               	movlw	0
 52434  015BB2  6E31               	movwf	?i2___flmul+1,c
 52435  015BB4  0E00               	movlw	0
 52436  015BB6  6E32               	movwf	?i2___flmul+2,c
 52437  015BB8  0E00               	movlw	0
 52438  015BBA  6E33               	movwf	?i2___flmul+3,c
 52439  015BBC  0012               	return	
 52440  015BBE                     i2l2777:
 52441  015BBE  5036               	movf	i2___flmul@a+2,w,c
 52442  015BC0  0230               	mulwf	i2___flmul@b,c
 52443  015BC2  CFF3 F047          	movff	prodl,i2___flmul@temp
 52444  015BC6  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52445  015BCA  5047               	movf	i2___flmul@temp,w,c
 52446  015BCC  6E3E               	movwf	i2___flmul@grs,c
 52447  015BCE  6A3F               	clrf	i2___flmul@grs+1,c
 52448  015BD0  6A40               	clrf	i2___flmul@grs+2,c
 52449  015BD2  6A41               	clrf	i2___flmul@grs+3,c
 52450  015BD4  5048               	movf	i2___flmul@temp+1,w,c
 52451  015BD6  6E43               	movwf	i2___flmul@prod,c
 52452  015BD8  6A44               	clrf	i2___flmul@prod+1,c
 52453  015BDA  6A45               	clrf	i2___flmul@prod+2,c
 52454  015BDC  6A46               	clrf	i2___flmul@prod+3,c
 52455  015BDE  5035               	movf	i2___flmul@a+1,w,c
 52456  015BE0  0231               	mulwf	i2___flmul@b+1,c
 52457  015BE2  CFF3 F047          	movff	prodl,i2___flmul@temp
 52458  015BE6  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52459  015BEA  5047               	movf	i2___flmul@temp,w,c
 52460  015BEC  263E               	addwf	i2___flmul@grs,f,c
 52461  015BEE  0E00               	movlw	0
 52462  015BF0  223F               	addwfc	i2___flmul@grs+1,f,c
 52463  015BF2  2240               	addwfc	i2___flmul@grs+2,f,c
 52464  015BF4  2241               	addwfc	i2___flmul@grs+3,f,c
 52465  015BF6  5048               	movf	i2___flmul@temp+1,w,c
 52466  015BF8  2643               	addwf	i2___flmul@prod,f,c
 52467  015BFA  0E00               	movlw	0
 52468  015BFC  2244               	addwfc	i2___flmul@prod+1,f,c
 52469  015BFE  2245               	addwfc	i2___flmul@prod+2,f,c
 52470  015C00  2246               	addwfc	i2___flmul@prod+3,f,c
 52471  015C02  5034               	movf	i2___flmul@a,w,c
 52472  015C04  0232               	mulwf	i2___flmul@b+2,c
 52473  015C06  CFF3 F047          	movff	prodl,i2___flmul@temp
 52474  015C0A  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52475  015C0E  5047               	movf	i2___flmul@temp,w,c
 52476  015C10  263E               	addwf	i2___flmul@grs,f,c
 52477  015C12  0E00               	movlw	0
 52478  015C14  223F               	addwfc	i2___flmul@grs+1,f,c
 52479  015C16  2240               	addwfc	i2___flmul@grs+2,f,c
 52480  015C18  2241               	addwfc	i2___flmul@grs+3,f,c
 52481  015C1A  5048               	movf	i2___flmul@temp+1,w,c
 52482  015C1C  2643               	addwf	i2___flmul@prod,f,c
 52483  015C1E  0E00               	movlw	0
 52484  015C20  2244               	addwfc	i2___flmul@prod+1,f,c
 52485  015C22  2245               	addwfc	i2___flmul@prod+2,f,c
 52486  015C24  2246               	addwfc	i2___flmul@prod+3,f,c
 52487  015C26  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 52488  015C2A  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 52489  015C2E  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 52490  015C32  6A3E               	clrf	i2___flmul@grs,c
 52491  015C34  5034               	movf	i2___flmul@a,w,c
 52492  015C36  0231               	mulwf	i2___flmul@b+1,c
 52493  015C38  CFF3 F047          	movff	prodl,i2___flmul@temp
 52494  015C3C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52495  015C40  5047               	movf	i2___flmul@temp,w,c
 52496  015C42  263E               	addwf	i2___flmul@grs,f,c
 52497  015C44  5048               	movf	i2___flmul@temp+1,w,c
 52498  015C46  223F               	addwfc	i2___flmul@grs+1,f,c
 52499  015C48  0E00               	movlw	0
 52500  015C4A  2240               	addwfc	i2___flmul@grs+2,f,c
 52501  015C4C  0E00               	movlw	0
 52502  015C4E  2241               	addwfc	i2___flmul@grs+3,f,c
 52503  015C50  5035               	movf	i2___flmul@a+1,w,c
 52504  015C52  0230               	mulwf	i2___flmul@b,c
 52505  015C54  CFF3 F047          	movff	prodl,i2___flmul@temp
 52506  015C58  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52507  015C5C  5047               	movf	i2___flmul@temp,w,c
 52508  015C5E  263E               	addwf	i2___flmul@grs,f,c
 52509  015C60  5048               	movf	i2___flmul@temp+1,w,c
 52510  015C62  223F               	addwfc	i2___flmul@grs+1,f,c
 52511  015C64  0E00               	movlw	0
 52512  015C66  2240               	addwfc	i2___flmul@grs+2,f,c
 52513  015C68  0E00               	movlw	0
 52514  015C6A  2241               	addwfc	i2___flmul@grs+3,f,c
 52515  015C6C  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 52516  015C70  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 52517  015C74  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 52518  015C78  6A3E               	clrf	i2___flmul@grs,c
 52519  015C7A  5034               	movf	i2___flmul@a,w,c
 52520  015C7C  0230               	mulwf	i2___flmul@b,c
 52521  015C7E  CFF3 F047          	movff	prodl,i2___flmul@temp
 52522  015C82  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52523  015C86  5047               	movf	i2___flmul@temp,w,c
 52524  015C88  263E               	addwf	i2___flmul@grs,f,c
 52525  015C8A  5048               	movf	i2___flmul@temp+1,w,c
 52526  015C8C  223F               	addwfc	i2___flmul@grs+1,f,c
 52527  015C8E  0E00               	movlw	0
 52528  015C90  2240               	addwfc	i2___flmul@grs+2,f,c
 52529  015C92  0E00               	movlw	0
 52530  015C94  2241               	addwfc	i2___flmul@grs+3,f,c
 52531  015C96  5036               	movf	i2___flmul@a+2,w,c
 52532  015C98  0231               	mulwf	i2___flmul@b+1,c
 52533  015C9A  CFF3 F047          	movff	prodl,i2___flmul@temp
 52534  015C9E  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52535  015CA2  5047               	movf	i2___flmul@temp,w,c
 52536  015CA4  2643               	addwf	i2___flmul@prod,f,c
 52537  015CA6  5048               	movf	i2___flmul@temp+1,w,c
 52538  015CA8  2244               	addwfc	i2___flmul@prod+1,f,c
 52539  015CAA  0E00               	movlw	0
 52540  015CAC  2245               	addwfc	i2___flmul@prod+2,f,c
 52541  015CAE  0E00               	movlw	0
 52542  015CB0  2246               	addwfc	i2___flmul@prod+3,f,c
 52543  015CB2  5035               	movf	i2___flmul@a+1,w,c
 52544  015CB4  0232               	mulwf	i2___flmul@b+2,c
 52545  015CB6  CFF3 F047          	movff	prodl,i2___flmul@temp
 52546  015CBA  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52547  015CBE  5047               	movf	i2___flmul@temp,w,c
 52548  015CC0  2643               	addwf	i2___flmul@prod,f,c
 52549  015CC2  5048               	movf	i2___flmul@temp+1,w,c
 52550  015CC4  2244               	addwfc	i2___flmul@prod+1,f,c
 52551  015CC6  0E00               	movlw	0
 52552  015CC8  2245               	addwfc	i2___flmul@prod+2,f,c
 52553  015CCA  0E00               	movlw	0
 52554  015CCC  2246               	addwfc	i2___flmul@prod+3,f,c
 52555  015CCE  5036               	movf	i2___flmul@a+2,w,c
 52556  015CD0  0232               	mulwf	i2___flmul@b+2,c
 52557  015CD2  CFF3 F047          	movff	prodl,i2___flmul@temp
 52558  015CD6  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52559  015CDA  5047               	movf	i2___flmul@temp,w,c
 52560  015CDC  6E38               	movwf	??i2___flmul& (0+255),c
 52561  015CDE  5048               	movf	i2___flmul@temp+1,w,c
 52562  015CE0  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 52563  015CE2  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 52564  015CE4  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 52565  015CE6  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 52566  015CEA  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 52567  015CEE  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 52568  015CF2  6A38               	clrf	??i2___flmul,c
 52569  015CF4  5038               	movf	??i2___flmul,w,c
 52570  015CF6  2643               	addwf	i2___flmul@prod,f,c
 52571  015CF8  5039               	movf	??i2___flmul+1,w,c
 52572  015CFA  2244               	addwfc	i2___flmul@prod+1,f,c
 52573  015CFC  503A               	movf	??i2___flmul+2,w,c
 52574  015CFE  2245               	addwfc	i2___flmul@prod+2,f,c
 52575  015D00  503B               	movf	??i2___flmul+3,w,c
 52576  015D02  2246               	addwfc	i2___flmul@prod+3,f,c
 52577  015D04  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 52578  015D08  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 52579  015D0C  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 52580  015D10  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 52581  015D14  0E19               	movlw	25
 52582  015D16  D005               	goto	i2u1742_40
 52583  015D18                     i2u1742_45:
 52584  015D18  90D8               	bcf	status,0,c
 52585  015D1A  323B               	rrcf	??i2___flmul+3,f,c
 52586  015D1C  323A               	rrcf	??i2___flmul+2,f,c
 52587  015D1E  3239               	rrcf	??i2___flmul+1,f,c
 52588  015D20  3238               	rrcf	??i2___flmul,f,c
 52589  015D22                     i2u1742_40:
 52590  015D22  2EE8               	decfsz	wreg,f,c
 52591  015D24  D7F9               	goto	i2u1742_45
 52592  015D26  5038               	movf	??i2___flmul,w,c
 52593  015D28  2643               	addwf	i2___flmul@prod,f,c
 52594  015D2A  5039               	movf	??i2___flmul+1,w,c
 52595  015D2C  2244               	addwfc	i2___flmul@prod+1,f,c
 52596  015D2E  503A               	movf	??i2___flmul+2,w,c
 52597  015D30  2245               	addwfc	i2___flmul@prod+2,f,c
 52598  015D32  503B               	movf	??i2___flmul+3,w,c
 52599  015D34  2246               	addwfc	i2___flmul@prod+3,f,c
 52600  015D36  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 52601  015D3A  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 52602  015D3E  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 52603  015D42  6A3E               	clrf	i2___flmul@grs,c
 52604  015D44  503D               	movf	i2___flmul@aexp,w,c
 52605  015D46  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 52606  015D4A  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 52607  015D4C  2638               	addwf	??i2___flmul,f,c
 52608  015D4E  0E00               	movlw	0
 52609  015D50  2239               	addwfc	??i2___flmul+1,f,c
 52610  015D52  0E82               	movlw	130
 52611  015D54  2438               	addwf	??i2___flmul,w,c
 52612  015D56  6E47               	movwf	i2___flmul@temp,c
 52613  015D58  0EFF               	movlw	255
 52614  015D5A  2039               	addwfc	??i2___flmul+1,w,c
 52615  015D5C  6E48               	movwf	i2___flmul@temp+1,c
 52616  015D5E  D00F               	goto	i2l2781
 52617  015D60  90D8               	bcf	status,0,c
 52618  015D62  3643               	rlcf	i2___flmul@prod,f,c
 52619  015D64  3644               	rlcf	i2___flmul@prod+1,f,c
 52620  015D66  3645               	rlcf	i2___flmul@prod+2,f,c
 52621  015D68  3646               	rlcf	i2___flmul@prod+3,f,c
 52622  015D6A  BE41               	btfsc	i2___flmul@grs+3,7,c
 52623  015D6C  8043               	bsf	i2___flmul@prod,0,c
 52624  015D6E  90D8               	bcf	status,0,c
 52625  015D70  363E               	rlcf	i2___flmul@grs,f,c
 52626  015D72  363F               	rlcf	i2___flmul@grs+1,f,c
 52627  015D74  3640               	rlcf	i2___flmul@grs+2,f,c
 52628  015D76  3641               	rlcf	i2___flmul@grs+3,f,c
 52629  015D78  0647               	decf	i2___flmul@temp,f,c
 52630  015D7A  A0D8               	btfss	status,0,c
 52631  015D7C  0648               	decf	i2___flmul@temp+1,f,c
 52632  015D7E                     i2l2781:
 52633  015D7E  AE45               	btfss	i2___flmul@prod+2,7,c
 52634  015D80  D7EF               	goto	i2l2782
 52635  015D82  0E00               	movlw	0
 52636  015D84  6E3D               	movwf	i2___flmul@aexp,c
 52637  015D86  AE41               	btfss	i2___flmul@grs+3,7,c
 52638  015D88  D016               	goto	i2l2788
 52639  015D8A  0EFF               	movlw	255
 52640  015D8C  143E               	andwf	i2___flmul@grs,w,c
 52641  015D8E  6E38               	movwf	??i2___flmul& (0+255),c
 52642  015D90  0EFF               	movlw	255
 52643  015D92  143F               	andwf	i2___flmul@grs+1,w,c
 52644  015D94  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 52645  015D96  0EFF               	movlw	255
 52646  015D98  1440               	andwf	i2___flmul@grs+2,w,c
 52647  015D9A  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 52648  015D9C  0E7F               	movlw	127
 52649  015D9E  1441               	andwf	i2___flmul@grs+3,w,c
 52650  015DA0  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 52651  015DA2  5038               	movf	??i2___flmul,w,c
 52652  015DA4  1039               	iorwf	??i2___flmul+1,w,c
 52653  015DA6  103A               	iorwf	??i2___flmul+2,w,c
 52654  015DA8  103B               	iorwf	??i2___flmul+3,w,c
 52655  015DAA  A4D8               	btfss	status,2,c
 52656  015DAC  D002               	goto	i2u1747_40
 52657  015DAE  A043               	btfss	i2___flmul@prod,0,c
 52658  015DB0  D002               	goto	i2l2788
 52659  015DB2                     i2u1747_40:
 52660  015DB2  0E01               	movlw	1
 52661  015DB4  6E3D               	movwf	i2___flmul@aexp,c
 52662  015DB6                     i2l2788:
 52663  015DB6  503D               	movf	i2___flmul@aexp,w,c
 52664  015DB8  B4D8               	btfsc	status,2,c
 52665  015DBA  D01F               	goto	i2l2790
 52666  015DBC  0E01               	movlw	1
 52667  015DBE  2643               	addwf	i2___flmul@prod,f,c
 52668  015DC0  0E00               	movlw	0
 52669  015DC2  2244               	addwfc	i2___flmul@prod+1,f,c
 52670  015DC4  2245               	addwfc	i2___flmul@prod+2,f,c
 52671  015DC6  2246               	addwfc	i2___flmul@prod+3,f,c
 52672  015DC8  A046               	btfss	i2___flmul@prod+3,0,c
 52673  015DCA  D017               	goto	i2l2790
 52674  015DCC  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 52675  015DD0  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 52676  015DD4  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 52677  015DD8  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 52678  015DDC  343B               	rlcf	??i2___flmul+3,w,c
 52679  015DDE  323B               	rrcf	??i2___flmul+3,f,c
 52680  015DE0  323A               	rrcf	??i2___flmul+2,f,c
 52681  015DE2  3239               	rrcf	??i2___flmul+1,f,c
 52682  015DE4  3238               	rrcf	??i2___flmul,f,c
 52683  015DE6  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 52684  015DEA  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 52685  015DEE  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 52686  015DF2  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 52687  015DF6  4A47               	infsnz	i2___flmul@temp,f,c
 52688  015DF8  2A48               	incf	i2___flmul@temp+1,f,c
 52689  015DFA                     i2l2790:
 52690  015DFA  BE48               	btfsc	i2___flmul@temp+1,7,c
 52691  015DFC  D00D               	goto	i2l2791
 52692  015DFE  5048               	movf	i2___flmul@temp+1,w,c
 52693  015E00  E103               	bnz	i2u1750_40
 52694  015E02  2847               	incf	i2___flmul@temp,w,c
 52695  015E04  A0D8               	btfss	status,0,c
 52696  015E06  D008               	goto	i2l2791
 52697  015E08                     i2u1750_40:
 52698  015E08  0E00               	movlw	0
 52699  015E0A  6E43               	movwf	i2___flmul@prod,c
 52700  015E0C  0E00               	movlw	0
 52701  015E0E  6E44               	movwf	i2___flmul@prod+1,c
 52702  015E10  0E80               	movlw	128
 52703  015E12  6E45               	movwf	i2___flmul@prod+2,c
 52704  015E14  0E7F               	movlw	127
 52705  015E16  D020               	goto	L24
 52706  015E18                     i2l2791:
 52707  015E18  BE48               	btfsc	i2___flmul@temp+1,7,c
 52708  015E1A  D005               	goto	i2u1751_40
 52709  015E1C  5048               	movf	i2___flmul@temp+1,w,c
 52710  015E1E  E10E               	bnz	i2l2793
 52711  015E20  0447               	decf	i2___flmul@temp,w,c
 52712  015E22  B0D8               	btfsc	status,0,c
 52713  015E24  D00B               	goto	i2l2793
 52714  015E26                     i2u1751_40:
 52715  015E26  0E00               	movlw	0
 52716  015E28  6E43               	movwf	i2___flmul@prod,c
 52717  015E2A  0E00               	movlw	0
 52718  015E2C  6E44               	movwf	i2___flmul@prod+1,c
 52719  015E2E  0E00               	movlw	0
 52720  015E30  6E45               	movwf	i2___flmul@prod+2,c
 52721  015E32  0E00               	movlw	0
 52722  015E34  6E46               	movwf	i2___flmul@prod+3,c
 52723  015E36  0E00               	movlw	0
 52724  015E38  6E3C               	movwf	i2___flmul@sign,c
 52725  015E3A  D00F               	goto	i2l2794
 52726  015E3C                     i2l2793:
 52727  015E3C  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 52728  015E40  0EFF               	movlw	255
 52729  015E42  1643               	andwf	i2___flmul@prod,f,c
 52730  015E44  0EFF               	movlw	255
 52731  015E46  1644               	andwf	i2___flmul@prod+1,f,c
 52732  015E48  0E7F               	movlw	127
 52733  015E4A  1645               	andwf	i2___flmul@prod+2,f,c
 52734  015E4C  0E00               	movlw	0
 52735  015E4E  1646               	andwf	i2___flmul@prod+3,f,c
 52736  015E50  B042               	btfsc	i2___flmul@bexp,0,c
 52737  015E52  8E45               	bsf	i2___flmul@prod+2,7,c
 52738  015E54  90D8               	bcf	status,0,c
 52739  015E56  3042               	rrcf	i2___flmul@bexp,w,c
 52740  015E58                     L24:
 52741  015E58  6E46               	movwf	i2___flmul@prod+3,c
 52742  015E5A                     i2l2794:
 52743  015E5A  503C               	movf	i2___flmul@sign,w,c
 52744  015E5C  1246               	iorwf	i2___flmul@prod+3,f,c
 52745  015E5E  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 52746  015E62  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 52747  015E66  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 52748  015E6A  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 52749  015E6E  0012               	return	
 52750  015E70                     __end_ofi2___flmul:
 52751                           	opt stack 0
 52752                           tosu	equ	0xFFF
 52753                           tosh	equ	0xFFE
 52754                           tosl	equ	0xFFD
 52755                           pclatu	equ	0xFFB
 52756                           pclath	equ	0xFFA
 52757                           tblptru	equ	0xFF8
 52758                           tblptrh	equ	0xFF7
 52759                           tblptrl	equ	0xFF6
 52760                           tablat	equ	0xFF5
 52761                           prodh	equ	0xFF4
 52762                           prodl	equ	0xFF3
 52763                           intcon	equ	0xFF2
 52764                           indf0	equ	0xFEF
 52765                           postinc0	equ	0xFEE
 52766                           fsr0h	equ	0xFEA
 52767                           fsr0l	equ	0xFE9
 52768                           wreg	equ	0xFE8
 52769                           indf1	equ	0xFE7
 52770                           postdec1	equ	0xFE5
 52771                           plusw1	equ	0xFE3
 52772                           fsr1h	equ	0xFE2
 52773                           fsr1l	equ	0xFE1
 52774                           bsr	equ	0xFE0
 52775                           indf2	equ	0xFDF
 52776                           postinc2	equ	0xFDE
 52777                           postdec2	equ	0xFDD
 52778                           plusw2	equ	0xFDB
 52779                           fsr2h	equ	0xFDA
 52780                           fsr2l	equ	0xFD9
 52781                           status	equ	0xFD8
 52782                           
 52783 ;; *************** function i2___fladd *****************
 52784 ;; Defined at:
 52785 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 52786 ;; Parameters:    Size  Location     Type
 52787 ;;  b               4   85[COMRAM] unsigned char 
 52788 ;;  a               4   89[COMRAM] unsigned char 
 52789 ;; Auto vars:     Size  Location     Type
 52790 ;;  __fladd         1   11[BANK0 ] unsigned char 
 52791 ;;  __fladd         1   10[BANK0 ] unsigned char 
 52792 ;;  __fladd         1    9[BANK0 ] unsigned char 
 52793 ;;  __fladd         1    8[BANK0 ] unsigned char 
 52794 ;; Return value:  Size  Location     Type
 52795 ;;                  4   85[COMRAM] unsigned char 
 52796 ;; Registers used:
 52797 ;;		wreg, status,2, status,0
 52798 ;; Tracked objects:
 52799 ;;		On entry : 0/0
 52800 ;;		On exit  : 0/0
 52801 ;;		Unchanged: 0/0
 52802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52803 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52804 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52805 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52806 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52807 ;;Total ram usage:       20 bytes
 52808 ;; Hardware stack levels used:    1
 52809 ;; This function calls:
 52810 ;;		Nothing
 52811 ;; This function is called by:
 52812 ;;		_peakToRMS
 52813 ;;		_ADCPostProcessingCallback
 52814 ;;		_acos
 52815 ;;		_asin
 52816 ;;		_atan
 52817 ;;		_eval_poly
 52818 ;;		_sin
 52819 ;;		_floor
 52820 ;;		i2__doprnt
 52821 ;;		i2___flsub
 52822 ;; This function uses a non-reentrant model
 52823 ;;
 52824                           
 52825                           	psect	text164
 52826  0161AE                     __ptext164:
 52827                           	opt stack 0
 52828  0161AE                     i2___fladd:
 52829                           	opt stack 13
 52830                           
 52831                           ;incstack = 0
 52832  0161AE  5059               	movf	i2___fladd@b+3,w,c
 52833  0161B0  0B80               	andlw	128
 52834  0161B2  0100               	movlb	0	; () banked
 52835  0161B4  6F68               	movwf	i2___fladd@signs& (0+255),b
 52836  0161B6  5059               	movf	i2___fladd@b+3,w,c
 52837  0161B8  2459               	addwf	i2___fladd@b+3,w,c
 52838  0161BA  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 52839                           
 52840                           ; BSR set to: 0
 52841  0161BC  BE58               	btfsc	i2___fladd@b+2,7,c
 52842                           
 52843                           ; BSR set to: 0
 52844  0161BE  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 52845                           
 52846                           ; BSR set to: 0
 52847                           
 52848                           ; BSR set to: 0
 52849  0161C0  516A               	movf	i2___fladd@bexp& (0+255),w,b
 52850  0161C2  B4D8               	btfsc	status,2,c
 52851  0161C4  D00D               	goto	i2l2679
 52852                           
 52853                           ; BSR set to: 0
 52854  0161C6  296A               	incf	i2___fladd@bexp& (0+255),w,b
 52855  0161C8  A4D8               	btfss	status,2,c
 52856  0161CA  D008               	goto	i2l2680
 52857                           
 52858                           ; BSR set to: 0
 52859  0161CC  0E00               	movlw	0
 52860  0161CE  6E56               	movwf	i2___fladd@b,c
 52861  0161D0  0E00               	movlw	0
 52862  0161D2  6E57               	movwf	i2___fladd@b+1,c
 52863  0161D4  0E00               	movlw	0
 52864  0161D6  6E58               	movwf	i2___fladd@b+2,c
 52865  0161D8  0E00               	movlw	0
 52866  0161DA  6E59               	movwf	i2___fladd@b+3,c
 52867  0161DC                     i2l2680:
 52868                           
 52869                           ; BSR set to: 0
 52870                           
 52871                           ; BSR set to: 0
 52872  0161DC  8E58               	bsf	i2___fladd@b+2,7,c
 52873  0161DE  D006               	goto	L25
 52874  0161E0                     i2l2679:
 52875                           
 52876                           ; BSR set to: 0
 52877                           
 52878                           ; BSR set to: 0
 52879  0161E0  0E00               	movlw	0
 52880  0161E2  6E56               	movwf	i2___fladd@b,c
 52881  0161E4  0E00               	movlw	0
 52882  0161E6  6E57               	movwf	i2___fladd@b+1,c
 52883  0161E8  0E00               	movlw	0
 52884  0161EA  6E58               	movwf	i2___fladd@b+2,c
 52885  0161EC                     L25:
 52886  0161EC  0E00               	movlw	0
 52887  0161EE  6E59               	movwf	i2___fladd@b+3,c
 52888                           
 52889                           ; BSR set to: 0
 52890                           
 52891                           ; BSR set to: 0
 52892  0161F0  505D               	movf	i2___fladd@a+3,w,c
 52893  0161F2  0B80               	andlw	128
 52894  0161F4  6F69               	movwf	i2___fladd@aexp& (0+255),b
 52895                           
 52896                           ; BSR set to: 0
 52897  0161F6  5168               	movf	i2___fladd@signs& (0+255),w,b
 52898  0161F8  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 52899  0161FA  A4D8               	btfss	status,2,c
 52900                           
 52901                           ; BSR set to: 0
 52902  0161FC  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 52903                           
 52904                           ; BSR set to: 0
 52905                           
 52906                           ; BSR set to: 0
 52907  0161FE  505D               	movf	i2___fladd@a+3,w,c
 52908  016200  245D               	addwf	i2___fladd@a+3,w,c
 52909  016202  6F69               	movwf	i2___fladd@aexp& (0+255),b
 52910                           
 52911                           ; BSR set to: 0
 52912  016204  BE5C               	btfsc	i2___fladd@a+2,7,c
 52913                           
 52914                           ; BSR set to: 0
 52915  016206  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 52916                           
 52917                           ; BSR set to: 0
 52918                           
 52919                           ; BSR set to: 0
 52920  016208  5169               	movf	i2___fladd@aexp& (0+255),w,b
 52921  01620A  B4D8               	btfsc	status,2,c
 52922  01620C  D00D               	goto	i2l2684
 52923                           
 52924                           ; BSR set to: 0
 52925  01620E  2969               	incf	i2___fladd@aexp& (0+255),w,b
 52926  016210  A4D8               	btfss	status,2,c
 52927  016212  D008               	goto	i2l2685
 52928                           
 52929                           ; BSR set to: 0
 52930  016214  0E00               	movlw	0
 52931  016216  6E5A               	movwf	i2___fladd@a,c
 52932  016218  0E00               	movlw	0
 52933  01621A  6E5B               	movwf	i2___fladd@a+1,c
 52934  01621C  0E00               	movlw	0
 52935  01621E  6E5C               	movwf	i2___fladd@a+2,c
 52936  016220  0E00               	movlw	0
 52937  016222  6E5D               	movwf	i2___fladd@a+3,c
 52938  016224                     i2l2685:
 52939                           
 52940                           ; BSR set to: 0
 52941                           
 52942                           ; BSR set to: 0
 52943  016224  8E5C               	bsf	i2___fladd@a+2,7,c
 52944  016226  D006               	goto	L26
 52945  016228                     i2l2684:
 52946                           
 52947                           ; BSR set to: 0
 52948                           
 52949                           ; BSR set to: 0
 52950  016228  0E00               	movlw	0
 52951  01622A  6E5A               	movwf	i2___fladd@a,c
 52952  01622C  0E00               	movlw	0
 52953  01622E  6E5B               	movwf	i2___fladd@a+1,c
 52954  016230  0E00               	movlw	0
 52955  016232  6E5C               	movwf	i2___fladd@a+2,c
 52956  016234                     L26:
 52957  016234  0E00               	movlw	0
 52958  016236  6E5D               	movwf	i2___fladd@a+3,c
 52959                           
 52960                           ; BSR set to: 0
 52961                           
 52962                           ; BSR set to: 0
 52963  016238  516A               	movf	i2___fladd@bexp& (0+255),w,b
 52964  01623A  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 52965  01623C  B0D8               	btfsc	status,0,c
 52966  01623E  D022               	goto	i2l2687
 52967                           
 52968                           ; BSR set to: 0
 52969  016240  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 52970  016242  D002               	goto	i2l2688
 52971                           
 52972                           ; BSR set to: 0
 52973  016244  0E80               	movlw	128
 52974  016246  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 52975  016248                     i2l2688:
 52976                           
 52977                           ; BSR set to: 0
 52978                           
 52979                           ; BSR set to: 0
 52980  016248  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 52981                           
 52982                           ; BSR set to: 0
 52983  01624C  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 52984                           
 52985                           ; BSR set to: 0
 52986  016250  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 52987                           
 52988                           ; BSR set to: 0
 52989  016254  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 52990                           
 52991                           ; BSR set to: 0
 52992  016258  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 52993                           
 52994                           ; BSR set to: 0
 52995  01625C  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 52996                           
 52997                           ; BSR set to: 0
 52998  016260  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 52999                           
 53000                           ; BSR set to: 0
 53001  016264  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 53002                           
 53003                           ; BSR set to: 0
 53004  016268  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 53005                           
 53006                           ; BSR set to: 0
 53007  01626C  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 53008                           
 53009                           ; BSR set to: 0
 53010  016270  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 53011                           
 53012                           ; BSR set to: 0
 53013  016274  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 53014                           
 53015                           ; BSR set to: 0
 53016  016278  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 53017                           
 53018                           ; BSR set to: 0
 53019  01627C  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 53020                           
 53021                           ; BSR set to: 0
 53022  016280  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 53023  016284                     i2l2687:
 53024                           
 53025                           ; BSR set to: 0
 53026                           
 53027                           ; BSR set to: 0
 53028  016284  0E00               	movlw	0
 53029  016286  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53030                           
 53031                           ; BSR set to: 0
 53032  016288  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53033  01628A  6F60               	movwf	??i2___fladd& (0+255),b
 53034  01628C  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 53035  01628E  1F60               	comf	??i2___fladd& (0+255),f,b
 53036  016290  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 53037  016292  4B60               	infsnz	??i2___fladd& (0+255),f,b
 53038  016294  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 53039  016296  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53040  016298  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 53041  01629A  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 53042  01629C  5160               	movf	??i2___fladd& (0+255),w,b
 53043  01629E  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 53044  0162A0  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 53045  0162A2  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 53046  0162A4  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 53047  0162A6  D02C               	goto	i2l2691
 53048  0162A8  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 53049  0162AA  E104               	bnz	i2u1704_40
 53050  0162AC  0E1A               	movlw	26
 53051  0162AE  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 53052  0162B0  A0D8               	btfss	status,0,c
 53053  0162B2  D026               	goto	i2l2691
 53054  0162B4                     i2u1704_40:
 53055                           
 53056                           ; BSR set to: 0
 53057  0162B4  5056               	movf	i2___fladd@b,w,c
 53058  0162B6  1057               	iorwf	i2___fladd@b+1,w,c
 53059  0162B8  1058               	iorwf	i2___fladd@b+2,w,c
 53060  0162BA  1059               	iorwf	i2___fladd@b+3,w,c
 53061  0162BC  B4D8               	btfsc	status,2,c
 53062  0162BE  D002               	goto	i2u1705_40
 53063  0162C0  0E01               	movlw	1
 53064  0162C2  D001               	goto	i2u1706_40
 53065  0162C4                     i2u1705_40:
 53066  0162C4  0E00               	movlw	0
 53067  0162C6                     i2u1706_40:
 53068  0162C6  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53069                           
 53070                           ; BSR set to: 0
 53071  0162C8  0E00               	movlw	0
 53072  0162CA  6E56               	movwf	i2___fladd@b,c
 53073  0162CC  0E00               	movlw	0
 53074  0162CE  6E57               	movwf	i2___fladd@b+1,c
 53075  0162D0  0E00               	movlw	0
 53076  0162D2  6E58               	movwf	i2___fladd@b+2,c
 53077  0162D4  0E00               	movlw	0
 53078  0162D6  6E59               	movwf	i2___fladd@b+3,c
 53079                           
 53080                           ; BSR set to: 0
 53081  0162D8  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 53082  0162DC  D015               	goto	i2u1709_40
 53083  0162DE                     i2l2692:
 53084                           
 53085                           ; BSR set to: 0
 53086  0162DE  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53087  0162E0  D005               	goto	i2l2693
 53088                           
 53089                           ; BSR set to: 0
 53090  0162E2  90D8               	bcf	status,0,c
 53091  0162E4  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 53092  0162E6  0901               	iorlw	1
 53093  0162E8  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53094  0162EA  D002               	goto	i2l2694
 53095  0162EC                     i2l2693:
 53096                           
 53097                           ; BSR set to: 0
 53098                           
 53099                           ; BSR set to: 0
 53100  0162EC  90D8               	bcf	status,0,c
 53101  0162EE  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53102  0162F0                     i2l2694:
 53103                           
 53104                           ; BSR set to: 0
 53105                           
 53106                           ; BSR set to: 0
 53107  0162F0  B056               	btfsc	i2___fladd@b,0,c
 53108                           
 53109                           ; BSR set to: 0
 53110  0162F2  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 53111                           
 53112                           ; BSR set to: 0
 53113                           
 53114                           ; BSR set to: 0
 53115  0162F4  3459               	rlcf	i2___fladd@b+3,w,c
 53116  0162F6  3259               	rrcf	i2___fladd@b+3,f,c
 53117  0162F8  3258               	rrcf	i2___fladd@b+2,f,c
 53118  0162FA  3257               	rrcf	i2___fladd@b+1,f,c
 53119  0162FC  3256               	rrcf	i2___fladd@b,f,c
 53120                           
 53121                           ; BSR set to: 0
 53122  0162FE  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 53123  016300                     i2l2691:
 53124                           
 53125                           ; BSR set to: 0
 53126  016300  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53127  016302  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 53128  016304  A0D8               	btfss	status,0,c
 53129  016306  D7EB               	goto	i2l2692
 53130  016308                     i2u1709_40:
 53131                           
 53132                           ; BSR set to: 0
 53133                           
 53134                           ; BSR set to: 0
 53135  016308  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 53136  01630A  D029               	goto	i2l2697
 53137                           
 53138                           ; BSR set to: 0
 53139  01630C  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53140  01630E  A4D8               	btfss	status,2,c
 53141  016310  D009               	goto	i2l2698
 53142                           
 53143                           ; BSR set to: 0
 53144  016312  0E00               	movlw	0
 53145  016314  6E56               	movwf	?i2___fladd,c
 53146  016316  0E00               	movlw	0
 53147  016318  6E57               	movwf	?i2___fladd+1,c
 53148  01631A  0E00               	movlw	0
 53149  01631C  6E58               	movwf	?i2___fladd+2,c
 53150  01631E  0E00               	movlw	0
 53151  016320  6E59               	movwf	?i2___fladd+3,c
 53152                           
 53153                           ; BSR set to: 0
 53154  016322  0012               	return	
 53155  016324                     i2l2698:
 53156                           
 53157                           ; BSR set to: 0
 53158                           
 53159                           ; BSR set to: 0
 53160  016324  505A               	movf	i2___fladd@a,w,c
 53161  016326  2656               	addwf	i2___fladd@b,f,c
 53162  016328  505B               	movf	i2___fladd@a+1,w,c
 53163  01632A  2257               	addwfc	i2___fladd@b+1,f,c
 53164  01632C  505C               	movf	i2___fladd@a+2,w,c
 53165  01632E  2258               	addwfc	i2___fladd@b+2,f,c
 53166  016330  505D               	movf	i2___fladd@a+3,w,c
 53167  016332  2259               	addwfc	i2___fladd@b+3,f,c
 53168                           
 53169                           ; BSR set to: 0
 53170  016334  A059               	btfss	i2___fladd@b+3,0,c
 53171  016336  D083               	goto	i2u1722_40
 53172                           
 53173                           ; BSR set to: 0
 53174  016338  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53175  01633A  D006               	goto	i2l2701
 53176                           
 53177                           ; BSR set to: 0
 53178  01633C  90D8               	bcf	status,0,c
 53179  01633E  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53180  016340  516B               	movf	i2___fladd@grs& (0+255),w,b
 53181  016342  0901               	iorlw	1
 53182  016344  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53183  016346  D002               	goto	i2l2702
 53184  016348                     i2l2701:
 53185                           
 53186                           ; BSR set to: 0
 53187                           
 53188                           ; BSR set to: 0
 53189  016348  90D8               	bcf	status,0,c
 53190  01634A  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53191  01634C                     i2l2702:
 53192                           
 53193                           ; BSR set to: 0
 53194                           
 53195                           ; BSR set to: 0
 53196  01634C  B056               	btfsc	i2___fladd@b,0,c
 53197                           
 53198                           ; BSR set to: 0
 53199  01634E  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 53200                           
 53201                           ; BSR set to: 0
 53202                           
 53203                           ; BSR set to: 0
 53204  016350  3459               	rlcf	i2___fladd@b+3,w,c
 53205  016352  3259               	rrcf	i2___fladd@b+3,f,c
 53206  016354  3258               	rrcf	i2___fladd@b+2,f,c
 53207  016356  3257               	rrcf	i2___fladd@b+1,f,c
 53208  016358  3256               	rrcf	i2___fladd@b,f,c
 53209                           
 53210                           ; BSR set to: 0
 53211  01635A  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 53212                           
 53213                           ; BSR set to: 0
 53214  01635C  D070               	goto	i2u1722_40
 53215  01635E                     i2l2697:
 53216                           
 53217                           ; BSR set to: 0
 53218                           
 53219                           ; BSR set to: 0
 53220  01635E  505A               	movf	i2___fladd@a,w,c
 53221  016360  5C56               	subwf	i2___fladd@b,w,c
 53222  016362  505B               	movf	i2___fladd@a+1,w,c
 53223  016364  5857               	subwfb	i2___fladd@b+1,w,c
 53224  016366  505C               	movf	i2___fladd@a+2,w,c
 53225  016368  5858               	subwfb	i2___fladd@b+2,w,c
 53226  01636A  5059               	movf	i2___fladd@b+3,w,c
 53227  01636C  0A80               	xorlw	128
 53228  01636E  6F60               	movwf	??i2___fladd& (0+255),b
 53229  016370  505D               	movf	i2___fladd@a+3,w,c
 53230  016372  0A80               	xorlw	128
 53231  016374  5960               	subwfb	??i2___fladd& (0+255),w,b
 53232  016376  B0D8               	btfsc	status,0,c
 53233  016378  D036               	goto	i2l2705
 53234                           
 53235                           ; BSR set to: 0
 53236  01637A  C056  F060         	movff	i2___fladd@b,??i2___fladd
 53237  01637E  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 53238  016382  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 53239  016386  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 53240  01638A  1F60               	comf	??i2___fladd& (0+255),f,b
 53241  01638C  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 53242  01638E  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 53243  016390  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 53244  016392  2B60               	incf	??i2___fladd& (0+255),f,b
 53245  016394  0E00               	movlw	0
 53246  016396  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 53247  016398  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 53248  01639A  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 53249  01639C  505A               	movf	i2___fladd@a,w,c
 53250  01639E  2560               	addwf	??i2___fladd& (0+255),w,b
 53251  0163A0  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 53252  0163A2  505B               	movf	i2___fladd@a+1,w,c
 53253  0163A4  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 53254  0163A6  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 53255  0163A8  505C               	movf	i2___fladd@a+2,w,c
 53256  0163AA  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 53257  0163AC  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 53258  0163AE  505D               	movf	i2___fladd@a+3,w,c
 53259  0163B0  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 53260  0163B2  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 53261  0163B4  0EFF               	movlw	255
 53262  0163B6  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 53263  0163B8  6E56               	movwf	i2___fladd@b,c
 53264  0163BA  0EFF               	movlw	255
 53265  0163BC  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 53266  0163BE  6E57               	movwf	i2___fladd@b+1,c
 53267  0163C0  0EFF               	movlw	255
 53268  0163C2  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 53269  0163C4  6E58               	movwf	i2___fladd@b+2,c
 53270  0163C6  0EFF               	movlw	255
 53271  0163C8  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 53272  0163CA  6E59               	movwf	i2___fladd@b+3,c
 53273  0163CC  0E80               	movlw	128
 53274  0163CE  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 53275                           
 53276                           ; BSR set to: 0
 53277  0163D0  6D6B               	negf	i2___fladd@grs& (0+255),b
 53278                           
 53279                           ; BSR set to: 0
 53280  0163D2  516B               	movf	i2___fladd@grs& (0+255),w,b
 53281  0163D4  A4D8               	btfss	status,2,c
 53282  0163D6  D00F               	goto	i2l2707
 53283                           
 53284                           ; BSR set to: 0
 53285  0163D8  0E01               	movlw	1
 53286  0163DA  2656               	addwf	i2___fladd@b,f,c
 53287  0163DC  0E00               	movlw	0
 53288  0163DE  2257               	addwfc	i2___fladd@b+1,f,c
 53289  0163E0  2258               	addwfc	i2___fladd@b+2,f,c
 53290  0163E2  2259               	addwfc	i2___fladd@b+3,f,c
 53291                           
 53292                           ; BSR set to: 0
 53293  0163E4  D008               	goto	i2l2707
 53294  0163E6                     i2l2705:
 53295                           
 53296                           ; BSR set to: 0
 53297                           
 53298                           ; BSR set to: 0
 53299  0163E6  505A               	movf	i2___fladd@a,w,c
 53300  0163E8  5E56               	subwf	i2___fladd@b,f,c
 53301  0163EA  505B               	movf	i2___fladd@a+1,w,c
 53302  0163EC  5A57               	subwfb	i2___fladd@b+1,f,c
 53303  0163EE  505C               	movf	i2___fladd@a+2,w,c
 53304  0163F0  5A58               	subwfb	i2___fladd@b+2,f,c
 53305  0163F2  505D               	movf	i2___fladd@a+3,w,c
 53306  0163F4  5A59               	subwfb	i2___fladd@b+3,f,c
 53307  0163F6                     i2l2707:
 53308                           
 53309                           ; BSR set to: 0
 53310  0163F6  5056               	movf	i2___fladd@b,w,c
 53311  0163F8  1057               	iorwf	i2___fladd@b+1,w,c
 53312  0163FA  1058               	iorwf	i2___fladd@b+2,w,c
 53313  0163FC  1059               	iorwf	i2___fladd@b+3,w,c
 53314  0163FE  A4D8               	btfss	status,2,c
 53315  016400  D01C               	goto	i2l2714
 53316                           
 53317                           ; BSR set to: 0
 53318  016402  516B               	movf	i2___fladd@grs& (0+255),w,b
 53319  016404  A4D8               	btfss	status,2,c
 53320  016406  D019               	goto	i2l2714
 53321                           
 53322                           ; BSR set to: 0
 53323  016408  0E00               	movlw	0
 53324  01640A  6E56               	movwf	?i2___fladd,c
 53325  01640C  0E00               	movlw	0
 53326  01640E  6E57               	movwf	?i2___fladd+1,c
 53327  016410  0E00               	movlw	0
 53328  016412  6E58               	movwf	?i2___fladd+2,c
 53329  016414  0E00               	movlw	0
 53330  016416  6E59               	movwf	?i2___fladd+3,c
 53331                           
 53332                           ; BSR set to: 0
 53333  016418  0012               	return	
 53334  01641A                     
 53335                           ; BSR set to: 0
 53336                           
 53337                           ; BSR set to: 0
 53338  01641A  90D8               	bcf	status,0,c
 53339  01641C  3656               	rlcf	i2___fladd@b,f,c
 53340  01641E  3657               	rlcf	i2___fladd@b+1,f,c
 53341  016420  3658               	rlcf	i2___fladd@b+2,f,c
 53342  016422  3659               	rlcf	i2___fladd@b+3,f,c
 53343                           
 53344                           ; BSR set to: 0
 53345  016424  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 53346                           
 53347                           ; BSR set to: 0
 53348  016426  8056               	bsf	i2___fladd@b,0,c
 53349                           
 53350                           ; BSR set to: 0
 53351                           
 53352                           ; BSR set to: 0
 53353  016428  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53354  01642A  D002               	goto	i2l2712
 53355                           
 53356                           ; BSR set to: 0
 53357  01642C  80D8               	bsf	status,0,c
 53358  01642E  D001               	goto	L27
 53359  016430                     i2l2712:
 53360                           
 53361                           ; BSR set to: 0
 53362                           
 53363                           ; BSR set to: 0
 53364  016430  90D8               	bcf	status,0,c
 53365  016432                     L27:
 53366  016432  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 53367                           
 53368                           ; BSR set to: 0
 53369                           
 53370                           ; BSR set to: 0
 53371  016434  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53372  016436  A4D8               	btfss	status,2,c
 53373                           
 53374                           ; BSR set to: 0
 53375  016438  076A               	decf	i2___fladd@bexp& (0+255),f,b
 53376  01643A                     i2l2714:
 53377                           
 53378                           ; BSR set to: 0
 53379                           
 53380                           ; BSR set to: 0
 53381                           
 53382                           ; BSR set to: 0
 53383  01643A  AE58               	btfss	i2___fladd@b+2,7,c
 53384  01643C  D7EE               	goto	i2l2710
 53385  01643E                     i2u1722_40:
 53386                           
 53387                           ; BSR set to: 0
 53388                           
 53389                           ; BSR set to: 0
 53390                           
 53391                           ; BSR set to: 0
 53392  01643E  0E00               	movlw	0
 53393  016440  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53394                           
 53395                           ; BSR set to: 0
 53396  016442  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 53397  016444  D00A               	goto	i2l2719
 53398                           
 53399                           ; BSR set to: 0
 53400  016446  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 53401  01644A  0E7F               	movlw	127
 53402  01644C  1760               	andwf	??i2___fladd& (0+255),f,b
 53403  01644E  A4D8               	btfss	status,2,c
 53404  016450  D002               	goto	i2u1725_40
 53405                           
 53406                           ; BSR set to: 0
 53407                           
 53408                           ; BSR set to: 0
 53409  016452  A056               	btfss	i2___fladd@b,0,c
 53410  016454  D002               	goto	i2l2719
 53411  016456                     i2u1725_40:
 53412                           
 53413                           ; BSR set to: 0
 53414  016456  0E01               	movlw	1
 53415  016458  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53416  01645A                     i2l2719:
 53417                           
 53418                           ; BSR set to: 0
 53419                           
 53420                           ; BSR set to: 0
 53421                           
 53422                           ; BSR set to: 0
 53423  01645A  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53424  01645C  B4D8               	btfsc	status,2,c
 53425  01645E  D020               	goto	i2l2722
 53426                           
 53427                           ; BSR set to: 0
 53428  016460  0E01               	movlw	1
 53429  016462  2656               	addwf	i2___fladd@b,f,c
 53430  016464  0E00               	movlw	0
 53431  016466  2257               	addwfc	i2___fladd@b+1,f,c
 53432  016468  2258               	addwfc	i2___fladd@b+2,f,c
 53433  01646A  2259               	addwfc	i2___fladd@b+3,f,c
 53434                           
 53435                           ; BSR set to: 0
 53436  01646C  A059               	btfss	i2___fladd@b+3,0,c
 53437  01646E  D018               	goto	i2l2722
 53438                           
 53439                           ; BSR set to: 0
 53440  016470  C056  F060         	movff	i2___fladd@b,??i2___fladd
 53441  016474  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 53442  016478  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 53443  01647C  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 53444  016480  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 53445  016482  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 53446  016484  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 53447  016486  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 53448  016488  3360               	rrcf	??i2___fladd& (0+255),f,b
 53449  01648A  C060  F056         	movff	??i2___fladd,i2___fladd@b
 53450  01648E  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 53451  016492  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 53452  016496  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 53453  01649A  296A               	incf	i2___fladd@bexp& (0+255),w,b
 53454  01649C  A4D8               	btfss	status,2,c
 53455                           
 53456                           ; BSR set to: 0
 53457  01649E  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 53458  0164A0                     i2l2722:
 53459                           
 53460                           ; BSR set to: 0
 53461                           
 53462                           ; BSR set to: 0
 53463                           
 53464                           ; BSR set to: 0
 53465                           
 53466                           ; BSR set to: 0
 53467  0164A0  296A               	incf	i2___fladd@bexp& (0+255),w,b
 53468  0164A2  B4D8               	btfsc	status,2,c
 53469  0164A4  D003               	goto	i2u1730_40
 53470                           
 53471                           ; BSR set to: 0
 53472  0164A6  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53473  0164A8  A4D8               	btfss	status,2,c
 53474  0164AA  D00D               	goto	i2l2726
 53475  0164AC                     i2u1730_40:
 53476                           
 53477                           ; BSR set to: 0
 53478                           
 53479                           ; BSR set to: 0
 53480  0164AC  0E00               	movlw	0
 53481  0164AE  6E56               	movwf	i2___fladd@b,c
 53482  0164B0  0E00               	movlw	0
 53483  0164B2  6E57               	movwf	i2___fladd@b+1,c
 53484  0164B4  0E00               	movlw	0
 53485  0164B6  6E58               	movwf	i2___fladd@b+2,c
 53486  0164B8  0E00               	movlw	0
 53487  0164BA  6E59               	movwf	i2___fladd@b+3,c
 53488  0164BC  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53489  0164BE  A4D8               	btfss	status,2,c
 53490  0164C0  D002               	goto	i2l2726
 53491                           
 53492                           ; BSR set to: 0
 53493  0164C2  0E00               	movlw	0
 53494  0164C4  6F68               	movwf	i2___fladd@signs& (0+255),b
 53495  0164C6                     i2l2726:
 53496                           
 53497                           ; BSR set to: 0
 53498                           
 53499                           ; BSR set to: 0
 53500                           
 53501                           ; BSR set to: 0
 53502  0164C6  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 53503  0164C8  D002               	goto	i2l2727
 53504                           
 53505                           ; BSR set to: 0
 53506  0164CA  8E58               	bsf	i2___fladd@b+2,7,c
 53507  0164CC  D001               	goto	i2l2728
 53508  0164CE                     i2l2727:
 53509                           
 53510                           ; BSR set to: 0
 53511                           
 53512                           ; BSR set to: 0
 53513  0164CE  9E58               	bcf	i2___fladd@b+2,7,c
 53514  0164D0                     i2l2728:
 53515                           
 53516                           ; BSR set to: 0
 53517                           
 53518                           ; BSR set to: 0
 53519  0164D0  90D8               	bcf	status,0,c
 53520  0164D2  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 53521  0164D4  6E59               	movwf	i2___fladd@b+3,c
 53522                           
 53523                           ; BSR set to: 0
 53524  0164D6  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 53525                           
 53526                           ; BSR set to: 0
 53527  0164D8  8E59               	bsf	i2___fladd@b+3,7,c
 53528                           
 53529                           ; BSR set to: 0
 53530                           
 53531                           ; BSR set to: 0
 53532  0164DA  C056  F056         	movff	i2___fladd@b,?i2___fladd
 53533  0164DE  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 53534  0164E2  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 53535  0164E6  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 53536  0164EA  0012               	return	
 53537  0164EC                     __end_ofi2___fladd:
 53538                           	opt stack 0
 53539                           tosu	equ	0xFFF
 53540                           tosh	equ	0xFFE
 53541                           tosl	equ	0xFFD
 53542                           pclatu	equ	0xFFB
 53543                           pclath	equ	0xFFA
 53544                           tblptru	equ	0xFF8
 53545                           tblptrh	equ	0xFF7
 53546                           tblptrl	equ	0xFF6
 53547                           tablat	equ	0xFF5
 53548                           prodh	equ	0xFF4
 53549                           prodl	equ	0xFF3
 53550                           intcon	equ	0xFF2
 53551                           indf0	equ	0xFEF
 53552                           postinc0	equ	0xFEE
 53553                           fsr0h	equ	0xFEA
 53554                           fsr0l	equ	0xFE9
 53555                           wreg	equ	0xFE8
 53556                           indf1	equ	0xFE7
 53557                           postdec1	equ	0xFE5
 53558                           plusw1	equ	0xFE3
 53559                           fsr1h	equ	0xFE2
 53560                           fsr1l	equ	0xFE1
 53561                           bsr	equ	0xFE0
 53562                           indf2	equ	0xFDF
 53563                           postinc2	equ	0xFDE
 53564                           postdec2	equ	0xFDD
 53565                           plusw2	equ	0xFDB
 53566                           fsr2h	equ	0xFDA
 53567                           fsr2l	equ	0xFD9
 53568                           status	equ	0xFD8
 53569                           
 53570 ;; *************** function _abs *****************
 53571 ;; Defined at:
 53572 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 53573 ;; Parameters:    Size  Location     Type
 53574 ;;  a               2   22[BANK0 ] int 
 53575 ;; Auto vars:     Size  Location     Type
 53576 ;;		None
 53577 ;; Return value:  Size  Location     Type
 53578 ;;                  2   22[BANK0 ] int 
 53579 ;; Registers used:
 53580 ;;		wreg, status,2, status,0
 53581 ;; Tracked objects:
 53582 ;;		On entry : 0/0
 53583 ;;		On exit  : 0/0
 53584 ;;		Unchanged: 0/0
 53585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53588 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53590 ;;Total ram usage:        4 bytes
 53591 ;; Hardware stack levels used:    1
 53592 ;; This function calls:
 53593 ;;		Nothing
 53594 ;; This function is called by:
 53595 ;;		_ADCPostProcessingCallback
 53596 ;; This function uses a non-reentrant model
 53597 ;;
 53598                           
 53599                           	psect	text165
 53600  01AD40                     __ptext165:
 53601                           	opt stack 0
 53602  01AD40                     _abs:
 53603                           	opt stack 15
 53604                           
 53605                           ; BSR set to: 0
 53606                           ;incstack = 0
 53607  01AD40  0100               	movlb	0	; () banked
 53608  01AD42  AF77               	btfss	(abs@a+1)& (0+255),7,b
 53609  01AD44  D00D               	goto	i2l2133
 53610                           
 53611                           ; BSR set to: 0
 53612  01AD46  C076  F078         	movff	abs@a,??_abs
 53613  01AD4A  C077  F079         	movff	abs@a+1,??_abs+1
 53614  01AD4E  1F78               	comf	??_abs& (0+255),f,b
 53615  01AD50  1F79               	comf	(??_abs+1)& (0+255),f,b
 53616  01AD52  4B78               	infsnz	??_abs& (0+255),f,b
 53617  01AD54  2B79               	incf	(??_abs+1)& (0+255),f,b
 53618  01AD56  C078  F076         	movff	??_abs,?_abs
 53619  01AD5A  C079  F077         	movff	??_abs+1,?_abs+1
 53620  01AD5E  0012               	return	
 53621  01AD60                     i2l2133:
 53622                           
 53623                           ; BSR set to: 0
 53624  01AD60  C076  F076         	movff	abs@a,?_abs
 53625  01AD64  C077  F077         	movff	abs@a+1,?_abs+1
 53626                           
 53627                           ; BSR set to: 0
 53628  01AD68  0012               	return		;funcret
 53629  01AD6A                     __end_of_abs:
 53630                           	opt stack 0
 53631                           tosu	equ	0xFFF
 53632                           tosh	equ	0xFFE
 53633                           tosl	equ	0xFFD
 53634                           pclatu	equ	0xFFB
 53635                           pclath	equ	0xFFA
 53636                           tblptru	equ	0xFF8
 53637                           tblptrh	equ	0xFF7
 53638                           tblptrl	equ	0xFF6
 53639                           tablat	equ	0xFF5
 53640                           prodh	equ	0xFF4
 53641                           prodl	equ	0xFF3
 53642                           intcon	equ	0xFF2
 53643                           indf0	equ	0xFEF
 53644                           postinc0	equ	0xFEE
 53645                           fsr0h	equ	0xFEA
 53646                           fsr0l	equ	0xFE9
 53647                           wreg	equ	0xFE8
 53648                           indf1	equ	0xFE7
 53649                           postdec1	equ	0xFE5
 53650                           plusw1	equ	0xFE3
 53651                           fsr1h	equ	0xFE2
 53652                           fsr1l	equ	0xFE1
 53653                           bsr	equ	0xFE0
 53654                           indf2	equ	0xFDF
 53655                           postinc2	equ	0xFDE
 53656                           postdec2	equ	0xFDD
 53657                           plusw2	equ	0xFDB
 53658                           fsr2h	equ	0xFDA
 53659                           fsr2l	equ	0xFD9
 53660                           status	equ	0xFD8
 53661                           
 53662 ;; *************** function _ADCC_StopConversion *****************
 53663 ;; Defined at:
 53664 ;;		line 162 in file "mcc_generated_files/adcc.c"
 53665 ;; Parameters:    Size  Location     Type
 53666 ;;		None
 53667 ;; Auto vars:     Size  Location     Type
 53668 ;;		None
 53669 ;; Return value:  Size  Location     Type
 53670 ;;                  1    wreg      void 
 53671 ;; Registers used:
 53672 ;;		None
 53673 ;; Tracked objects:
 53674 ;;		On entry : 0/0
 53675 ;;		On exit  : 0/0
 53676 ;;		Unchanged: 0/0
 53677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53682 ;;Total ram usage:        0 bytes
 53683 ;; Hardware stack levels used:    1
 53684 ;; This function calls:
 53685 ;;		Nothing
 53686 ;; This function is called by:
 53687 ;;		_ADCPostProcessingCallback
 53688 ;; This function uses a non-reentrant model
 53689 ;;
 53690                           
 53691                           	psect	text166
 53692  01B1E0                     __ptext166:
 53693                           	opt stack 0
 53694  01B1E0                     _ADCC_StopConversion:
 53695                           	opt stack 15
 53696                           
 53697                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 53698                           
 53699                           ; BSR set to: 0
 53700                           ;incstack = 0
 53701  01B1E0  9060               	bcf	3936,0,c	;volatile
 53702  01B1E2  0012               	return		;funcret
 53703  01B1E4                     __end_of_ADCC_StopConversion:
 53704                           	opt stack 0
 53705                           tosu	equ	0xFFF
 53706                           tosh	equ	0xFFE
 53707                           tosl	equ	0xFFD
 53708                           pclatu	equ	0xFFB
 53709                           pclath	equ	0xFFA
 53710                           tblptru	equ	0xFF8
 53711                           tblptrh	equ	0xFF7
 53712                           tblptrl	equ	0xFF6
 53713                           tablat	equ	0xFF5
 53714                           prodh	equ	0xFF4
 53715                           prodl	equ	0xFF3
 53716                           intcon	equ	0xFF2
 53717                           indf0	equ	0xFEF
 53718                           postinc0	equ	0xFEE
 53719                           fsr0h	equ	0xFEA
 53720                           fsr0l	equ	0xFE9
 53721                           wreg	equ	0xFE8
 53722                           indf1	equ	0xFE7
 53723                           postdec1	equ	0xFE5
 53724                           plusw1	equ	0xFE3
 53725                           fsr1h	equ	0xFE2
 53726                           fsr1l	equ	0xFE1
 53727                           bsr	equ	0xFE0
 53728                           indf2	equ	0xFDF
 53729                           postinc2	equ	0xFDE
 53730                           postdec2	equ	0xFDD
 53731                           plusw2	equ	0xFDB
 53732                           fsr2h	equ	0xFDA
 53733                           fsr2l	equ	0xFD9
 53734                           status	equ	0xFD8
 53735                           
 53736 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 53737 ;; Defined at:
 53738 ;;		line 216 in file "mcc_generated_files/adcc.c"
 53739 ;; Parameters:    Size  Location     Type
 53740 ;;		None
 53741 ;; Auto vars:     Size  Location     Type
 53742 ;;		None
 53743 ;; Return value:  Size  Location     Type
 53744 ;;                  1    wreg      unsigned char 
 53745 ;; Registers used:
 53746 ;;		wreg
 53747 ;; Tracked objects:
 53748 ;;		On entry : 0/0
 53749 ;;		On exit  : 0/0
 53750 ;;		Unchanged: 0/0
 53751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53756 ;;Total ram usage:        0 bytes
 53757 ;; Hardware stack levels used:    1
 53758 ;; This function calls:
 53759 ;;		Nothing
 53760 ;; This function is called by:
 53761 ;;		_ADCPostProcessingCallback
 53762 ;; This function uses a non-reentrant model
 53763 ;;
 53764                           
 53765                           	psect	text167
 53766  01B17E                     __ptext167:
 53767                           	opt stack 0
 53768  01B17E                     _ADCC_HasAccumulatorOverflowed:
 53769                           	opt stack 15
 53770                           
 53771                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 53772                           
 53773                           ;incstack = 0
 53774  01B17E  AE65               	btfss	3941,7,c	;volatile
 53775  01B180  D002               	goto	i2u1267_40
 53776  01B182  0E01               	movlw	1
 53777  01B184  0012               	return	
 53778  01B186                     i2u1267_40:
 53779  01B186  0E00               	movlw	0
 53780  01B188  0012               	return	
 53781  01B18A                     __end_of_ADCC_HasAccumulatorOverflowed:
 53782                           	opt stack 0
 53783                           tosu	equ	0xFFF
 53784                           tosh	equ	0xFFE
 53785                           tosl	equ	0xFFD
 53786                           pclatu	equ	0xFFB
 53787                           pclath	equ	0xFFA
 53788                           tblptru	equ	0xFF8
 53789                           tblptrh	equ	0xFF7
 53790                           tblptrl	equ	0xFF6
 53791                           tablat	equ	0xFF5
 53792                           prodh	equ	0xFF4
 53793                           prodl	equ	0xFF3
 53794                           intcon	equ	0xFF2
 53795                           indf0	equ	0xFEF
 53796                           postinc0	equ	0xFEE
 53797                           fsr0h	equ	0xFEA
 53798                           fsr0l	equ	0xFE9
 53799                           wreg	equ	0xFE8
 53800                           indf1	equ	0xFE7
 53801                           postdec1	equ	0xFE5
 53802                           plusw1	equ	0xFE3
 53803                           fsr1h	equ	0xFE2
 53804                           fsr1l	equ	0xFE1
 53805                           bsr	equ	0xFE0
 53806                           indf2	equ	0xFDF
 53807                           postinc2	equ	0xFDE
 53808                           postdec2	equ	0xFDD
 53809                           plusw2	equ	0xFDB
 53810                           fsr2h	equ	0xFDA
 53811                           fsr2l	equ	0xFD9
 53812                           status	equ	0xFD8
 53813                           
 53814 ;; *************** function _ADCC_GetFilterValue *****************
 53815 ;; Defined at:
 53816 ;;		line 222 in file "mcc_generated_files/adcc.c"
 53817 ;; Parameters:    Size  Location     Type
 53818 ;;		None
 53819 ;; Auto vars:     Size  Location     Type
 53820 ;;		None
 53821 ;; Return value:  Size  Location     Type
 53822 ;;                  2    0[COMRAM] unsigned int 
 53823 ;; Registers used:
 53824 ;;		wreg, status,2, status,0
 53825 ;; Tracked objects:
 53826 ;;		On entry : 0/0
 53827 ;;		On exit  : 0/0
 53828 ;;		Unchanged: 0/0
 53829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53834 ;;Total ram usage:        4 bytes
 53835 ;; Hardware stack levels used:    1
 53836 ;; This function calls:
 53837 ;;		Nothing
 53838 ;; This function is called by:
 53839 ;;		_ADCPostProcessingCallback
 53840 ;; This function uses a non-reentrant model
 53841 ;;
 53842                           
 53843                           	psect	text168
 53844  01B068                     __ptext168:
 53845                           	opt stack 0
 53846  01B068                     _ADCC_GetFilterValue:
 53847                           	opt stack 15
 53848                           
 53849                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 53850                           
 53851                           ;incstack = 0
 53852  01B068  5073               	movf	3955,w,c	;volatile
 53853  01B06A  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 53854  01B06C  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 53855  01B06E  5072               	movf	3954,w,c	;volatile
 53856  01B070  2403               	addwf	??_ADCC_GetFilterValue,w,c
 53857  01B072  6E01               	movwf	?_ADCC_GetFilterValue,c
 53858  01B074  0E00               	movlw	0
 53859  01B076  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 53860  01B078  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 53861  01B07A  0012               	return	
 53862  01B07C                     __end_of_ADCC_GetFilterValue:
 53863                           	opt stack 0
 53864                           tosu	equ	0xFFF
 53865                           tosh	equ	0xFFE
 53866                           tosl	equ	0xFFD
 53867                           pclatu	equ	0xFFB
 53868                           pclath	equ	0xFFA
 53869                           tblptru	equ	0xFF8
 53870                           tblptrh	equ	0xFF7
 53871                           tblptrl	equ	0xFF6
 53872                           tablat	equ	0xFF5
 53873                           prodh	equ	0xFF4
 53874                           prodl	equ	0xFF3
 53875                           intcon	equ	0xFF2
 53876                           indf0	equ	0xFEF
 53877                           postinc0	equ	0xFEE
 53878                           fsr0h	equ	0xFEA
 53879                           fsr0l	equ	0xFE9
 53880                           wreg	equ	0xFE8
 53881                           indf1	equ	0xFE7
 53882                           postdec1	equ	0xFE5
 53883                           plusw1	equ	0xFE3
 53884                           fsr1h	equ	0xFE2
 53885                           fsr1l	equ	0xFE1
 53886                           bsr	equ	0xFE0
 53887                           indf2	equ	0xFDF
 53888                           postinc2	equ	0xFDE
 53889                           postdec2	equ	0xFDD
 53890                           plusw2	equ	0xFDB
 53891                           fsr2h	equ	0xFDA
 53892                           fsr2l	equ	0xFD9
 53893                           status	equ	0xFD8
 53894                           
 53895 ;; *************** function _ADCC_GetConversionResult *****************
 53896 ;; Defined at:
 53897 ;;		line 130 in file "mcc_generated_files/adcc.c"
 53898 ;; Parameters:    Size  Location     Type
 53899 ;;		None
 53900 ;; Auto vars:     Size  Location     Type
 53901 ;;		None
 53902 ;; Return value:  Size  Location     Type
 53903 ;;                  2    0[COMRAM] unsigned int 
 53904 ;; Registers used:
 53905 ;;		wreg, status,2, status,0
 53906 ;; Tracked objects:
 53907 ;;		On entry : 0/0
 53908 ;;		On exit  : 0/0
 53909 ;;		Unchanged: 0/0
 53910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53915 ;;Total ram usage:        4 bytes
 53916 ;; Hardware stack levels used:    1
 53917 ;; This function calls:
 53918 ;;		Nothing
 53919 ;; This function is called by:
 53920 ;;		_ADCPostProcessingCallback
 53921 ;; This function uses a non-reentrant model
 53922 ;;
 53923                           
 53924                           	psect	text169
 53925  01B07C                     __ptext169:
 53926                           	opt stack 0
 53927  01B07C                     _ADCC_GetConversionResult:
 53928                           	opt stack 15
 53929                           
 53930                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 53931                           
 53932                           ;incstack = 0
 53933  01B07C  5064               	movf	3940,w,c	;volatile
 53934  01B07E  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 53935  01B080  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 53936  01B082  5063               	movf	3939,w,c	;volatile
 53937  01B084  2403               	addwf	??_ADCC_GetConversionResult,w,c
 53938  01B086  6E01               	movwf	?_ADCC_GetConversionResult,c
 53939  01B088  0E00               	movlw	0
 53940  01B08A  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 53941  01B08C  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 53942  01B08E  0012               	return	
 53943  01B090                     __end_of_ADCC_GetConversionResult:
 53944                           	opt stack 0
 53945                           tosu	equ	0xFFF
 53946                           tosh	equ	0xFFE
 53947                           tosl	equ	0xFFD
 53948                           pclatu	equ	0xFFB
 53949                           pclath	equ	0xFFA
 53950                           tblptru	equ	0xFF8
 53951                           tblptrh	equ	0xFF7
 53952                           tblptrl	equ	0xFF6
 53953                           tablat	equ	0xFF5
 53954                           prodh	equ	0xFF4
 53955                           prodl	equ	0xFF3
 53956                           intcon	equ	0xFF2
 53957                           indf0	equ	0xFEF
 53958                           postinc0	equ	0xFEE
 53959                           fsr0h	equ	0xFEA
 53960                           fsr0l	equ	0xFE9
 53961                           wreg	equ	0xFE8
 53962                           indf1	equ	0xFE7
 53963                           postdec1	equ	0xFE5
 53964                           plusw1	equ	0xFE3
 53965                           fsr1h	equ	0xFE2
 53966                           fsr1l	equ	0xFE1
 53967                           bsr	equ	0xFE0
 53968                           indf2	equ	0xFDF
 53969                           postinc2	equ	0xFDE
 53970                           postdec2	equ	0xFDD
 53971                           plusw2	equ	0xFDB
 53972                           fsr2h	equ	0xFDA
 53973                           fsr2l	equ	0xFD9
 53974                           status	equ	0xFD8
 53975                           tosu	equ	0xFFF
 53976                           tosh	equ	0xFFE
 53977                           tosl	equ	0xFFD
 53978                           pclatu	equ	0xFFB
 53979                           pclath	equ	0xFFA
 53980                           tblptru	equ	0xFF8
 53981                           tblptrh	equ	0xFF7
 53982                           tblptrl	equ	0xFF6
 53983                           tablat	equ	0xFF5
 53984                           prodh	equ	0xFF4
 53985                           prodl	equ	0xFF3
 53986                           intcon	equ	0xFF2
 53987                           indf0	equ	0xFEF
 53988                           postinc0	equ	0xFEE
 53989                           fsr0h	equ	0xFEA
 53990                           fsr0l	equ	0xFE9
 53991                           wreg	equ	0xFE8
 53992                           indf1	equ	0xFE7
 53993                           postdec1	equ	0xFE5
 53994                           plusw1	equ	0xFE3
 53995                           fsr1h	equ	0xFE2
 53996                           fsr1l	equ	0xFE1
 53997                           bsr	equ	0xFE0
 53998                           indf2	equ	0xFDF
 53999                           postinc2	equ	0xFDE
 54000                           postdec2	equ	0xFDD
 54001                           plusw2	equ	0xFDB
 54002                           fsr2h	equ	0xFDA
 54003                           fsr2l	equ	0xFD9
 54004                           status	equ	0xFD8
 54005                           
 54006                           	psect	text170
 54007  000000                     __ptext170:
 54008                           	opt stack 0
 54009                           tosu	equ	0xFFF
 54010                           tosh	equ	0xFFE
 54011                           tosl	equ	0xFFD
 54012                           pclatu	equ	0xFFB
 54013                           pclath	equ	0xFFA
 54014                           tblptru	equ	0xFF8
 54015                           tblptrh	equ	0xFF7
 54016                           tblptrl	equ	0xFF6
 54017                           tablat	equ	0xFF5
 54018                           prodh	equ	0xFF4
 54019                           prodl	equ	0xFF3
 54020                           intcon	equ	0xFF2
 54021                           indf0	equ	0xFEF
 54022                           postinc0	equ	0xFEE
 54023                           fsr0h	equ	0xFEA
 54024                           fsr0l	equ	0xFE9
 54025                           wreg	equ	0xFE8
 54026                           indf1	equ	0xFE7
 54027                           postdec1	equ	0xFE5
 54028                           plusw1	equ	0xFE3
 54029                           fsr1h	equ	0xFE2
 54030                           fsr1l	equ	0xFE1
 54031                           bsr	equ	0xFE0
 54032                           indf2	equ	0xFDF
 54033                           postinc2	equ	0xFDE
 54034                           postdec2	equ	0xFDD
 54035                           plusw2	equ	0xFDB
 54036                           fsr2h	equ	0xFDA
 54037                           fsr2l	equ	0xFD9
 54038                           status	equ	0xFD8
 54039                           
 54040                           	psect	rparam
 54041  0000                     tosu	equ	0xFFF
 54042                           tosh	equ	0xFFE
 54043                           tosl	equ	0xFFD
 54044                           pclatu	equ	0xFFB
 54045                           pclath	equ	0xFFA
 54046                           tblptru	equ	0xFF8
 54047                           tblptrh	equ	0xFF7
 54048                           tblptrl	equ	0xFF6
 54049                           tablat	equ	0xFF5
 54050                           prodh	equ	0xFF4
 54051                           prodl	equ	0xFF3
 54052                           intcon	equ	0xFF2
 54053                           indf0	equ	0xFEF
 54054                           postinc0	equ	0xFEE
 54055                           fsr0h	equ	0xFEA
 54056                           fsr0l	equ	0xFE9
 54057                           wreg	equ	0xFE8
 54058                           indf1	equ	0xFE7
 54059                           postdec1	equ	0xFE5
 54060                           plusw1	equ	0xFE3
 54061                           fsr1h	equ	0xFE2
 54062                           fsr1l	equ	0xFE1
 54063                           bsr	equ	0xFE0
 54064                           indf2	equ	0xFDF
 54065                           postinc2	equ	0xFDE
 54066                           postdec2	equ	0xFDD
 54067                           plusw2	equ	0xFDB
 54068                           fsr2h	equ	0xFDA
 54069                           fsr2l	equ	0xFD9
 54070                           status	equ	0xFD8
 54071                           
 54072                           	psect	temp
 54073  00005F                     btemp:
 54074                           	opt stack 0
 54075  00005F                     	ds	1
 54076  0000                     int$flags	set	btemp
 54077  0000                     wtemp6	set	btemp+1
 54078                           tosu	equ	0xFFF
 54079                           tosh	equ	0xFFE
 54080                           tosl	equ	0xFFD
 54081                           pclatu	equ	0xFFB
 54082                           pclath	equ	0xFFA
 54083                           tblptru	equ	0xFF8
 54084                           tblptrh	equ	0xFF7
 54085                           tblptrl	equ	0xFF6
 54086                           tablat	equ	0xFF5
 54087                           prodh	equ	0xFF4
 54088                           prodl	equ	0xFF3
 54089                           intcon	equ	0xFF2
 54090                           indf0	equ	0xFEF
 54091                           postinc0	equ	0xFEE
 54092                           fsr0h	equ	0xFEA
 54093                           fsr0l	equ	0xFE9
 54094                           wreg	equ	0xFE8
 54095                           indf1	equ	0xFE7
 54096                           postdec1	equ	0xFE5
 54097                           plusw1	equ	0xFE3
 54098                           fsr1h	equ	0xFE2
 54099                           fsr1l	equ	0xFE1
 54100                           bsr	equ	0xFE0
 54101                           indf2	equ	0xFDF
 54102                           postinc2	equ	0xFDE
 54103                           postdec2	equ	0xFDD
 54104                           plusw2	equ	0xFDB
 54105                           fsr2h	equ	0xFDA
 54106                           fsr2l	equ	0xFD9
 54107                           status	equ	0xFD8


Data Sizes:
    Strings     11427
    Constant    1038
    Data        43
    BSS         434
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    198     233
    BANK2           256     77     253
    BANK3           256      0     256
    BANK4           256      6       6
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E17311 size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_125(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), NULL(NULL[0]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), NULL(NULL[0]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_125(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), NULL(NULL[0]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_125(CODE[25]), line(BANK3[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_125(CODE[25]), line(BANK3[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_72(CODE[10]), STR_71(CODE[22]), STR_70(CODE[14]), STR_69(CODE[14]), 
		 -> STR_68(CODE[14]), STR_67(CODE[7]), STR_66(CODE[6]), STR_65(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_167(CODE[11]), STR_160(CODE[5]), STR_158(CODE[9]), STR_156(CODE[29]), 
		 -> STR_154(CODE[34]), STR_152(CODE[33]), STR_150(CODE[29]), STR_148(CODE[17]), 
		 -> STR_146(CODE[17]), STR_144(CODE[14]), STR_142(CODE[19]), STR_140(CODE[20]), 
		 -> STR_138(CODE[11]), STR_136(CODE[17]), STR_134(CODE[14]), STR_132(CODE[16]), 
		 -> STR_123(CODE[13]), STR_119(CODE[17]), STR_116(CODE[14]), STR_114(CODE[12]), 
		 -> STR_112(CODE[16]), STR_110(CODE[17]), STR_105(CODE[15]), STR_103(CODE[13]), 
		 -> STR_101(CODE[16]), STR_99(CODE[15]), STR_97(CODE[21]), STR_95(CODE[21]), 
		 -> STR_93(CODE[26]), STR_91(CODE[14]), STR_89(CODE[13]), STR_87(CODE[18]), 
		 -> STR_85(CODE[15]), STR_83(CODE[16]), STR_81(CODE[17]), STR_77(CODE[12]), 
		 -> STR_75(CODE[16]), STR_64(CODE[11]), STR_61(CODE[10]), STR_59(CODE[13]), 
		 -> STR_57(CODE[11]), STR_54(CODE[4]), STR_53(CODE[6]), STR_51(CODE[16]), 
		 -> STR_48(CODE[6]), STR_45(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[2]), STR_42(CODE[3]), STR_41(CODE[3]), STR_40(CODE[3]), 
		 -> STR_39(CODE[3]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[2]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 3082
		 -> STR_172(CODE[13]), STR_171(CODE[31]), STR_170(CODE[26]), STR_169(CODE[28]), 
		 -> STR_168(CODE[426]), STR_166(CODE[30]), STR_165(CODE[46]), STR_164(CODE[39]), 
		 -> STR_163(CODE[62]), STR_162(CODE[55]), STR_161(CODE[470]), STR_159(CODE[3082]), 
		 -> STR_157(CODE[492]), STR_155(CODE[748]), STR_153(CODE[720]), STR_151(CODE[970]), 
		 -> STR_149(CODE[54]), STR_147(CODE[54]), STR_145(CODE[45]), STR_143(CODE[51]), 
		 -> STR_141(CODE[52]), STR_139(CODE[46]), STR_137(CODE[51]), STR_135(CODE[53]), 
		 -> STR_133(CODE[58]), STR_131(CODE[71]), STR_130(CODE[63]), STR_129(CODE[37]), 
		 -> STR_128(CODE[46]), STR_127(CODE[102]), STR_126(CODE[86]), STR_124(CODE[25]), 
		 -> STR_122(CODE[42]), STR_121(CODE[53]), STR_120(CODE[31]), STR_118(CODE[29]), 
		 -> STR_117(CODE[28]), STR_115(CODE[42]), STR_113(CODE[41]), STR_111(CODE[34]), 
		 -> STR_109(CODE[53]), STR_108(CODE[52]), STR_107(CODE[105]), STR_106(CODE[105]), 
		 -> STR_104(CODE[59]), STR_102(CODE[73]), STR_100(CODE[56]), STR_98(CODE[34]), 
		 -> STR_96(CODE[34]), STR_94(CODE[32]), STR_92(CODE[37]), STR_90(CODE[58]), 
		 -> STR_88(CODE[36]), STR_86(CODE[36]), STR_84(CODE[37]), STR_82(CODE[31]), 
		 -> STR_80(CODE[35]), STR_79(CODE[87]), STR_78(CODE[33]), STR_76(CODE[21]), 
		 -> STR_74(CODE[24]), STR_73(CODE[48]), STR_63(CODE[54]), STR_62(CODE[64]), 
		 -> STR_60(CODE[59]), STR_58(CODE[85]), STR_56(CODE[47]), STR_55(CODE[17]), 
		 -> STR_52(CODE[52]), STR_50(CODE[4]), STR_49(CODE[5]), STR_47(CODE[4]), 
		 -> STR_46(CODE[5]), STR_44(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[3]), STR_8(CODE[372]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_sprintf(COMRAM[2]), ?_printf(BANK1[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(COMRAM[20]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), printf@ap(BANK1[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK1[2]), ftoa@buf(BANK2[17]), STR_188(CODE[7]), 
		 -> _doprnt@c(BANK1[1]), STR_185(CODE[16]), STR_184(CODE[22]), STR_183(CODE[21]), 
		 -> STR_182(CODE[27]), STR_181(CODE[41]), STR_180(CODE[32]), STR_179(CODE[19]), 
		 -> STR_178(CODE[16]), STR_177(CODE[15]), STR_176(CODE[16]), STR_175(CODE[10]), 
		 -> STR_174(CODE[13]), STR_173(CODE[12]), ringBufferLUT@channel_name(BANK2[22]), TRIAC_Firing_Angle(BANK0[4]), 
		 -> NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 3082
		 -> STR_190(CODE[11]), STR_172(CODE[13]), STR_171(CODE[31]), STR_170(CODE[26]), 
		 -> STR_169(CODE[28]), STR_168(CODE[426]), STR_166(CODE[30]), STR_165(CODE[46]), 
		 -> STR_164(CODE[39]), STR_163(CODE[62]), STR_162(CODE[55]), STR_161(CODE[470]), 
		 -> STR_159(CODE[3082]), STR_157(CODE[492]), STR_155(CODE[748]), STR_153(CODE[720]), 
		 -> STR_151(CODE[970]), STR_149(CODE[54]), STR_147(CODE[54]), STR_145(CODE[45]), 
		 -> STR_143(CODE[51]), STR_141(CODE[52]), STR_139(CODE[46]), STR_137(CODE[51]), 
		 -> STR_135(CODE[53]), STR_133(CODE[58]), STR_131(CODE[71]), STR_130(CODE[63]), 
		 -> STR_129(CODE[37]), STR_128(CODE[46]), STR_127(CODE[102]), STR_126(CODE[86]), 
		 -> STR_124(CODE[25]), STR_122(CODE[42]), STR_121(CODE[53]), STR_120(CODE[31]), 
		 -> STR_118(CODE[29]), STR_117(CODE[28]), STR_115(CODE[42]), STR_113(CODE[41]), 
		 -> STR_111(CODE[34]), STR_109(CODE[53]), STR_108(CODE[52]), STR_107(CODE[105]), 
		 -> STR_106(CODE[105]), STR_104(CODE[59]), STR_102(CODE[73]), STR_100(CODE[56]), 
		 -> STR_98(CODE[34]), STR_96(CODE[34]), STR_94(CODE[32]), STR_92(CODE[37]), 
		 -> STR_90(CODE[58]), STR_88(CODE[36]), STR_86(CODE[36]), STR_84(CODE[37]), 
		 -> STR_82(CODE[31]), STR_80(CODE[35]), STR_79(CODE[87]), STR_78(CODE[33]), 
		 -> STR_76(CODE[21]), STR_74(CODE[24]), STR_73(CODE[48]), STR_63(CODE[54]), 
		 -> STR_62(CODE[64]), STR_60(CODE[59]), STR_58(CODE[85]), STR_56(CODE[47]), 
		 -> STR_55(CODE[17]), STR_52(CODE[52]), STR_50(CODE[4]), STR_49(CODE[5]), 
		 -> STR_47(CODE[4]), STR_46(CODE[5]), STR_44(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), 
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[3]), STR_8(CODE[372]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_1(CODE[4]), 

    S3895__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S3895__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(BANK1[5]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(COMRAM[20]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 20
		 -> ftoa@buf(BANK2[17]), STR_187(CODE[1]), STR_186(CODE[1]), OLED_Write_Integer@s(COMRAM[20]), 
		 -> STR_5(CODE[12]), STR_4(CODE[13]), STR_3(CODE[10]), STR_2(CODE[15]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    OLED_PutChar@input_base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_184(CODE[22]), STR_183(CODE[21]), STR_182(CODE[27]), STR_181(CODE[41]), 
		 -> STR_180(CODE[32]), STR_179(CODE[19]), STR_178(CODE[16]), STR_177(CODE[15]), 
		 -> STR_176(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_175(CODE[10]), STR_174(CODE[13]), STR_173(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_175(CODE[10]), STR_174(CODE[13]), STR_173(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_175(CODE[10]), STR_174(CODE[13]), STR_173(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_185(CODE[16]), STR_184(CODE[22]), STR_183(CODE[21]), STR_182(CODE[27]), 
		 -> STR_181(CODE[41]), STR_180(CODE[32]), STR_179(CODE[19]), STR_178(CODE[16]), 
		 -> STR_177(CODE[15]), STR_176(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E17311 size(2) Largest target is 1
		 -> OLED_I2C_Status(BANK1[1]), 

    F17426.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWrite@pflag	PTR enum E17311 size(2) Largest target is 1
		 -> OLED_I2C_Status(BANK1[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK1[2]), 

    F17421.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 
		 -> NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    S2525$pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    S2537$pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_current.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    S2537$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    p_i2c1_current	PTR volatile struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), NULL(NULL[0]), 

    S2548$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    S2548$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR4_CallBack->_writeEnergyToEEPROMCallback
    _writeEnergyToEEPROMCallback->i2___flge
    i2_readDoubleFromEEPROM->i2_DATAEE_ReadByte
    _dimmingOffTimeCallback->_TMR5_WriteTimer
    _I2C1_ISR->_I2C1_Stop
    _HLVD_ISR->i2_writeDoubleToEEPROM
    i2_writeDoubleToEEPROM->i2_DATAEE_WriteByte
    i2__doprnt->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2__doprnt
    i2__doprnt->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->__doprnt
    __doprnt->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _saveSRAMMaxToEEPROM->_writeDoubleToEEPROM
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _recoverSRAMMaxFromEEPROM->_readDoubleFromEEPROM
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _OLED_YX->_OLED_Command
    _OLED_Write_String->_OLED_PutChar
    _OLED_Init->_OLED_Command
    _OLED_Command->_I2C1_MasterWrite
    _OLED_Clear->_OLED_PutChar
    _OLED_PutChar->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_ringBufferPull

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  807730
                                             75 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT0_SetInterruptHandler
                         _OLED_Clear
                          _OLED_Init
                  _OLED_Write_String
                            _OLED_YX
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
           _TMR5_SetInterruptHandler
                     _TMR5_StopTimer
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
           _recoverSRAMMaxFromEEPROM
                _saveSRAMMaxToEEPROM
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   93541
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  476794
                                            195 BANK1      3     3      0
                                              0 BANK4      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       63    61      2  475772
                                            191 BANK1      4     2      2
                                             16 BANK2     59    59      0
                     _TMR5_StopTimer
                     _TMR7_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  119458
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  119458
                                            189 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   93541
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    1549
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    8413
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     223
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1881
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3755
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   93541
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              17     7     10   93541
                                            172 BANK1     17     7     10
                            __doprnt
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
 ---------------------------------------------------------------------------------
 (4) __doprnt                                             43    37      6   78035
                                            130 BANK1     42    36      6
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (5) _scale                                                9     5      4   13229
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _fround                                              13     9      4   12950
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8302
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (5) __div_to_l_                                          14     6      8     634
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1206
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1358
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     901
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6535
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5930
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1070
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _saveSRAMMaxToEEPROM                                  0     0      0    6705
                             ___flge
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeDoubleToEEPROM                                 12     6      6    3279
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     307
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3426
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _recoverSRAMMaxFromEEPROM                             0     0      0    1612
               _readDoubleFromEEPROM
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    1612
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     152
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1508
                    _ADCC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OLED_YX                                              3     2      1    2974
                                             45 BANK1      3     2      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_String                                    2     0      2    4202
                                             58 BANK1      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0    2521
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _OLED_Command                                         6     6      0    2521
                                             39 BANK1      6     6      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           4     4      0    3553
                                             58 BANK1      4     4      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (2) _OLED_PutChar                                        19    19      0    3417
                                             39 BANK1     19    19      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     791
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     7     0      7    2327
                                             32 BANK1      7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWriteTRBBuild                             9     2      7     546
                                             23 BANK1      9     2      7
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterTRBInsert                                 6     2      4     546
                                             23 BANK1      6     2      4
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (5) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  210680
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _HLVD_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _INT0_ISR
                           _TMR4_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     316
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
              _dimmingOnTimeCallback *
 ---------------------------------------------------------------------------------
 (15) _dimmingOnTimeCallback                               0     0      0       0
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_ISR                                            0     0      0    2144
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR4_CallBack                                       0     0      0    2144
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
        _writeEnergyToEEPROMCallback *
 ---------------------------------------------------------------------------------
 (16) _writeEnergyToEEPROMCallback                         4     4      0    2144
                                             63 COMRAM     4     4      0
                           i2___flge
             i2_readDoubleFromEEPROM
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (17) i2_readDoubleFromEEPROM                             10     6      4     252
                                              2 COMRAM    10     6      4
                  i2_DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (18) i2_DATAEE_ReadByte                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            0     0      0     316
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0     316
                   Absolute function *
       _INT0_DefaultInterruptHandler *
             _dimmingOffTimeCallback *
 ---------------------------------------------------------------------------------
 (16) _dimmingOffTimeCallback                              0     0      0     316
                    _TMR5_StartTimer
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _TMR5_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_ISR                                            2     2      0      22
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (15) _I2C1_Stop                                           3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _I2C1_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _HLVD_ISR                                            0     0      0     402
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (17) i2_writeDoubleToEEPROM                              12     6      6     402
                                              4 COMRAM    12     6      6
                 i2_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (18) i2_DATAEE_WriteByte                                  4     1      3     141
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   53853
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                            9     7      2   53853
                                             82 BANK0      9     7      2
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (16) i2__doprnt                                          43    37      6   53469
                                             40 BANK0     42    36      6
                   Absolute function *
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (17) i2_scale                                             9     5      4    7749
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (18) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (17) i2_fround                                           13     9      4    7470
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (18) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (18) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (17) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ThresholdISR                                   0     0      0  153627
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADCPostProcessingCallback                          21    21      0  153627
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (16) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          24    16      8   98612
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                8     4      4   46781
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               24    20      4   41537
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               29    25      4    1033
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (19) _atan                                               21    17      4   25621
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                              12     4      8   39684
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                17    13      4   37484
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (17) i2___flsub                                           8     0      8    4649
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fldiv                                          25    17      8    1887
                                             18 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                              10     6      4    8091
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (17) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___flge                                           12     4      8    1456
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               8     2      6     360
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          16     8      8   10620
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (18) i2___flmul                                          25    17      8    4912
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___fladd                                          20    12      8    4374
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) _abs                                                 4     2      2     294
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT0_SetInterruptHandler
   _OLED_Clear
     _OLED_PutChar
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
       _memmove
   _OLED_Init
     _OLED_Command
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
   _OLED_Write_String
     _OLED_PutChar
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
       _memmove
   _OLED_YX
     _OLED_Command
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR5_StopTimer
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _recoverSRAMMaxFromEEPROM
     _readDoubleFromEEPROM
       _DATAEE_ReadByte
   _saveSRAMMaxToEEPROM
     ___flge
     _writeDoubleToEEPROM
       _DATAEE_WriteByte
   _terminal_clearTerminal
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg *
           ___xxtofl (ARG)
         ___flsub *
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR5_StopTimer
       _TMR7_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg *
             ___xxtofl (ARG)
           ___flsub *
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg *
               ___xxtofl (ARG)
             ___flsub *
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
       _terminal_textAttributes
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg *
               ___xxtofl (ARG)
             ___flsub *
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg *
                 ___xxtofl (ARG)
               ___flsub *
                 ___fladd
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___flneg (ARG)
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg *
           ___xxtofl (ARG)
         ___flsub *
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg *
             ___xxtofl (ARG)
           ___flsub *
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___fladd *
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flge *
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg *
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flsub *
           _floor (ARG)
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fltol *
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___wmul *
         i2___xxtofl *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART2_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
   _HLVD_ISR *
     i2_writeDoubleToEEPROM
       i2_DATAEE_WriteByte
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _dimmingOffTimeCallback *
         _TMR5_StartTimer
         _TMR5_WriteTimer
   _TMR4_ISR *
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _writeEnergyToEEPROMCallback *
         i2___flge
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2_readDoubleFromEEPROM
           i2_DATAEE_ReadByte
         i2_writeDoubleToEEPROM
           i2_DATAEE_WriteByte
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _dimmingOnTimeCallback *
       i2_TMR5_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      6       6      14        2.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     4D      FD      10       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C6      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3E6       8        0.0%
DATA                 0      0     3E6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Nov 12 21:35:50 2018

                           ??i2_TMR7_StopTimer 0001                 ringBufferLUT@max_voltage_print 02BF  
                     getDeviceIDString@strings 0128                                   ___fldiv@aexp 0155  
                                 ___fldiv@bexp 0154                   __end_of_readDoubleFromEEPROM A38A  
             __end_of_TMR5_SetInterruptHandler B11E                  ??_writeEnergyToEEPROMCallback 0040  
                                 ___fldiv@sign 0149                    __size_ofi2_DATAEE_WriteByte 003A  
                                  __CFG_CP$OFF 000000                                             l63 AF98  
                                 ___awdiv@sign 0122                         __end_of_FVR_Initialize B1B0  
                                           bsr 000FE0                            ___wmul@multiplicand 0119  
                       ?_terminal_printNewline 0001                              ??_TMR5_WriteTimer 0003  
               __end_of_heartbeatTimerCallback A8B8                                    __CFG_LVP$ON 000000  
                           OLED_Write_String@s 013A                            _saveSRAMMaxToEEPROM 7890  
                                          l420 A654                                            l430 A646  
                                          l422 A682                                            l431 A644  
                                          l426 A60C                                            l427 A608  
                                          l419 A658                                            l429 A620  
                                          l827 A922                                            _PR4 000FB6  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                  i2___fladd@a 005A                                    i2___fladd@b 0056  
                   ??_INT0_SetInterruptHandler 011A                                            _Ipk 01CE  
                                          _Vpk 022F                                            _abs AD40  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString A1D4                                            _sin 67F0  
                   currentMeasuredToPeak@Angle 009D                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                   __CFG_IDLOC0$ 000000  
                                   i2___xxtofl 8322                                   __CFG_IDLOC1$ 000001  
                                 __CFG_IDLOC2$ 000002                                   __CFG_IDLOC3$ 000003  
                                 __CFG_IDLOC4$ 000004                                   __CFG_IDLOC5$ 000005  
                                 __CFG_IDLOC6$ 000006                                   __CFG_IDLOC7$ 000007  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                        ?i2_readDoubleFromEEPROM 0003  
                                  i2___flmul@a 0034                                    i2___flmul@b 0030  
                                _INT0_CallBack AEC4                                    i2___flsub@a 0084  
                                  i2___flsub@b 0080                               ??_TMR7_StopTimer 0117  
                                 ___flmul@aexp 0163                                   ___flmul@bexp 0168  
                             OLED_Command@temp 0127                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_ZCD$OFF 000000                               __end_of_I2C1_ISR 7D4E  
                                 ___fltol@exp1 0181                                           l1101 A50E  
                                         l1120 9806                                           l1122 9826  
                                         l2002 2102                                           l2011 2298  
                                         l2003 21CC                                           ?_abs 0076  
                                         l2012 229C                                           l2004 21FA  
                                         l2021 253C                                           l2022 24CE  
                                         l2014 22EA                                           l2006 2274  
                                         l1119 981A                                           l2031 2612  
                                         l2023 250A                                           l2015 2314  
                                         l2007 2206                                           l2040 26FA  
                                         l2032 2646                                           l2024 2534  
                                         l2016 24C2                                           l2008 2242  
                                         l2041 26A2                                           l2017 2376  
                                         l2009 226C                                           l1314 78F6  
                                         l2050 277A                                           l2034 26E4  
                                         l2026 25DC                                           l2018 2440  
                                         l1315 795C                                           l2051 2782  
                                         l2035 2660                                           l2027 2590  
                                         l2019 246E                                           l1316 79C2  
                                         l2060 2872                                           l2052 27A6  
                                         l2028 25C2                                           l1420 8BBE  
                                         l1317 7A28                                           l2061 289C  
                                         l2053 27AE                                           l2045 2716  
                                         l1318 7A8E                                           l2310 9ADA  
                                         l2070 2974                                           l2054 28A6  
                                         l1422 8BFC                                           l2311 9AD2  
                                         l2047 2736                                           l1423 8BDE  
                                         l2400 92AA                                           l2320 9E34  
                                         l2080 2B0C                                           l2056 2802  
                                         l2048 2758                                           l2401 929A  
                                         l2321 9E40                                           l2057 282C  
                                         l1425 8C4A                                           l2314 9AFA  
                                         l2074 2A8E                                           l2066 28EA  
                                         l1450 548A                                           l1426 8C1C  
                                         l2315 9B04                                           l2307 9AAC  
                                         l2323 9E56                                           l2075 2992  
                                         l2067 2914                                           l1451 555C  
                                         l1603 006C                                           l2316 9B12  
                                         l2308 9ABC                                           l2324 9E4E  
                                         l1460 5682                                           l1452 54A2  
                                         l2077 2AA6                                           l1461 558C  
                                         l1453 54BA                                           l1701 105C  
                                         l1621 0436                                           l1613 01CE  
                                         l1605 00A8                                           l1381 85A2  
                                         l2406 92CE                                           l2078 2A16  
                                         l1470 569A                                           l1462 55A4  
                                         l1454 54D2                                           l1622 0412  
                                         l1630 037E                                           l2407 92C2  
                                         l2351 896C                                           l2327 9E6E  
                                         l2079 2AE2                                           l1471 57A8  
                                         l1463 55BC                                           l1455 54EA  
                                         l1711 13D6                                           l1703 10DC  
                                         l1623 03C6                                           l1631 0396  
                                         l1615 0232                                           l1607 00FA  
                                         l2328 9E78                                           l1472 56B2  
                                         l1464 55D4                                           l1456 5502  
                                         l1632 03AE                                           l1624 0306  
                                         l2409 92EA                                           l2353 898A  
                                         l2329 9E86                                           l1473 56CA  
                                         l1465 55EC                                           l1449 5532  
                                         l1457 551A                                           l1721 159E  
                                         l1713 1418                                           l1705 115C  
                                         l1641 0542                                           l1625 03F6  
                                         l1617 02CE                                           l1609 0168  
                                         l2370 8D6A                                           l2354 89CC  
                                         l1474 56E2                                           l1458 564C  
                                         l1466 5604                                           l1626 031E  
                                         l1618 0288                                           l2371 8DA8  
                                         l2363 8A5E                                           l2355 89FC  
                                         l2523 AF02                                           l2291 9424  
                                         l1475 56FA                                           l1467 561C  
                                         l1459 5574                                           l1715 145A  
                                         l1707 11DC                                           l1651 06DC  
                                         l1643 0594                                           l1635 0486  
                                         l1627 0336                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l1812 A0C2                                           l2364 8A52  
                                         l1740 A1A6                                           l1476 5712  
                                         l1468 5634                                           l1628 034E  
                                         l2701 600A                                           l2357 8A3A  
                                         l2461 87DE                                           l1901 4D68  
                                         l1741 A188                                           l1469 5772  
                                         l1477 572A                                           l1717 149C  
                                         l1709 1394                                           l1661 0876  
                                         l1653 072E                                           l1645 05E6  
                                         l1637 04FE                                           l1629 0366  
                                         l1814 A0E2                                           l2710 60DC  
                                         l2702 600E                                           l2358 8A2A  
                                         l2462 87CE                                           l1902 4EEE  
                                         l1910 16A2                                           l2294 9474  
                                         l1478 5742                                           l1638 04DA  
                                         l2375 ACD0                                           l2455 8714  
                                         l2295 9436                                           l1479 575A  
                                         l1719 14DE                                           l1671 0A86  
                                         l1663 08FA                                           l1655 0780  
                                         l1647 0638                                           l2640 96C0  
                                         l1816 A0F8                                           l2368 8CF8  
                                         l2712 60F2                                           l1904 4FB4  
                                         l2288 93E2                                           l1744 A192  
                                         l1680 0B5E                                           l2641 968A  
                                         l1841 9594                                           l1761 A3B2  
                                         l1753 A392                                           l2369 8D2C  
                                         l2705 60A8                                           l2457 8740  
                                         l1921 1890                                           l1913 16EC  
                                         l2297 94A8                                           l2289 93DC  
                                         l1745 A19C                                           l1673 0AF0  
                                         l1665 09A6                                           l1657 07D2  
                                         l1649 068A                                           l2722 6162  
                                         l2714 60FC                                           l2458 877A  
                                         l1930 189E                                           l1922 1864  
                                         l1914 16E4                                           l1674 0ACC  
                                         l1819 A106                                           l1763 A3BA  
                                         l1755 A39A                                           l2707 60B8  
                                         l2563 9B4C                                           l2467 8802  
                                         l2459 87A2                                           l1931 18A2  
                                         l1923 1810                                           l1683 0BCA  
                                         l1667 09F0                                           l1659 0824  
                                         l1852 963C                                           l1860 A876  
                                         l2564 9B40                                           l2468 87F6  
                                         l1932 1B58                                           l1940 18EC  
                                         l1908 165A                                           l2740 70EA  
                                         l1772 ACA8                                           l1845 95F8  
                                         l1765 A3C2                                           l1757 A3A2  
                                         l2573 9FF6                                           l1909 16D0  
                                         l2741 70E6                                           l1693 0E8A  
                                         l1685 0E38                                           l1677 0B82  
                                         l1669 0A3E                                           l2726 6188  
                                         l2398 923E                                           l2574 9FEA  
                                         l2750 7204                                           l1686 0C04  
                                         l1678 0B38                           _ADCC_StartConversion B164  
                                         l1847 9618                                           l1863 A2BA  
                                         l1759 A3AA                                           l1783 A47A  
                                         l2727 6190                                           l2719 611C  
                                         l2567 9B80                                           l1927 1AE2  
                                         l1943 1944                                           l1935 18A6  
                                         l1919 1748                                           l2743 7130  
                                         l1695 0EDC                                           l1864 A28E  
                                         l2728 6192                                           l2680 5E9E  
                                         l2568 9B8E                                           l1960 1B6E  
                                         l1952 19DE                                           l1944 195A  
                                         l2760 7272                                           l2736 70AA  
                                         l1688 0CC0                                           l1849 962E  
                                         l2577 A01E                                           l1961 1BCC  
                                         l1953 1A42                                           l1937 18AA  
                                         l2753 723A                                           l2745 7158  
                                         l2737 70A6                                           l2825 A57A  
                                         l1697 0F5C                                           l1786 A348  
                                         l2578 A02C                                           l2770 5800  
                                         l1954 1A92                                           l1938 18E2  
                                         l2762 72B6                                           l2754 721C  
                                         l2746 7206                                           l2834 A3E8  
                                         l2842 AB5A                                           l2930 997C  
                                         l2826 A574                                           l1787 A378  
                                         l2691 5FC2                                           l2771 57FC  
                                         l1891 6F32                                           l1971 1DAE  
                                         l1963 1C3A                                           l1947 1964  
                                         l1939 18F2                                           l2763 72DA  
                                         l2747 71B6                                           l2835 A3DE  
                                         l2843 AB50                                           l2931 99E6  
                                         l1699 0FDC                                           l2692 5FA0  
                                         l2684 5EEA                                           l2772 5810  
                                         l1964 1CBA                                           l1956 1AA6  
                                         l1948 19A0                                           l2764 7304  
                                         l2748 71DE                                           l2924 AAF2  
                                         l2828 A594                                           l2693 5FAE  
                                         l2685 5EE6                                           l2781 5A2E  
                                         l1981 1EFE                                           l1957 1ACA  
                                         l1949 19CA                                           l2765 7310  
                                         l2829 A58A                                           l2694 5FB2  
                                         l2790 5AAA                                           l2782 5A10  
                                         l2774 5840                                           l1894 7022  
                                         l1990 2000                                           l1982 1F18  
                                         l1966 1CE8                                           l1958 1ADC  
                                         l2766 7312                                           l2870 9A74  
                                         l2687 5F46                                           l2679 5EA2  
                                         l2791 5AC8                                           l2775 583C  
                                         l1959 2546                                           l1967 1D32  
                                         l2871 9A0C                                           l2855 9F78  
                                         l2688 5F0A                                           l2880 8220  
                                         l2776 5850                                           l1968 1E14  
                                         l2848 A244                                           l2872 9A48  
                                         l2856 9FA8                                           l2697 6020  
                                         l2881 823E                                           l2793 5AEC  
                                         l2777 586E                                           l1897 4D9A  
                                         l1993 2088                                           l1985 1F6C  
                                         l1977 1E8C                                           l2849 A23E  
                                         l2929 99EE                                           l2698 5FE6  
                                         l2890 82B4                                           l2794 5B0A  
                                         l1898 4CA2                                           l1994 201A  
                                         l2858 9FC4                                           l2883 8250  
                                         l1995 2056                                           l1987 2008  
                                         l2859 9FB4                                           l2884 8244  
                                         l2788 5A66                                           l1996 2080  
                                         l1988 1F98                                           l1989 1FD6  
                                         l2894 82DE                                           l2886 828E  
                                         l2895 8310                                           l2887 8276  
                                         l2879 8210                                           l1999 20E6  
                                         l2889 82C0                                           ?_sin 0088  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC7  
                                         STR_2 FE2E                                           STR_3 FF75  
                                         STR_4 FEED                                           STR_5 FF1E  
                                         STR_6 FFB2                                           STR_7 FFBB  
                                         STR_8 EE57                                __end_of_OLED_YX A9EA  
                                  ?_OLED_Clear 0001                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                           _T4PR 000FB6  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           _PLLR 007230  
                                         _TMR4 000FB5                                           _TMR6 000FAF  
                          _writeDoubleToEEPROM A42C                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                                 __CFG_WRT0$ON 000000                                   __CFG_WRT1$ON 000000  
                                 i2___flge@ff1 0034                                   i2___flge@ff2 0038  
                                 __CFG_WRT2$ON 000000                                   __CFG_WRT3$ON 000000  
                                 __CFG_WRT4$ON 000000                                   __CFG_WRT5$ON 000000  
                                         _Irms 01CA                                   __CFG_WRT6$ON 000000  
                                 __CFG_WRT7$ON 000000                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write A602                ??_ADCC_HasAccumulatorOverflowed 0001  
                                 __CFG_WRTB$ON 000000                                           _Vrms 0227  
                                 __CFG_WRTC$ON 000000                                           abs@a 0076  
                                         _acos 9F00                                           _fabs AA26  
               ringBufferLUT@max_current_print 02B7                                           _atan 7F98  
                                         _asin 64EC                                           _atoi 93DA  
                                         _main 8472                           ?_saveSRAMMaxToEEPROM 0001  
                                  i2__doprnt@c 00B1                                           _line 03C0  
                                  i2__doprnt@f 008A                         OLED_Command@data_array 012B  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                       ??_I2C1_MasterTRBInsert 011B                                           btemp 005F  
               __size_of_ADCC_ClearAccumulator 0006                                           _sqrt 6AEA  
                                 i2___flneg@f1 002C                  __end_of_ADCC_ClearAccumulator B1C4  
                                __CFG_BOREN$ON 000000                                           sin@f 0088  
                                         sin@y 008C                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00FE  
                              _timer5ReloadVal 025D                                   i2___fltol@f1 006C  
                              ___fldiv@new_exp 014E                                __end_ofi2_scale 5466  
                 __end_of_EUSART2_Transmit_ISR ABE8                                __end_ofi2_putch B1A8  
                   ??_TMR4_SetInterruptHandler 011A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                          _dimmingOnTimeCallback B172  
               I2C1_MasterWriteTRBBuild@length 011B              i2readDoubleFromEEPROM@output_data 0007  
              readDoubleFromEEPROM@output_data 011D                       __size_ofi2_EUSART2_Write 0048  
                                        ??_abs 0078                             __size_of_OLED_Init 009A  
                    __size_of_DATAEE_WriteByte 003E                                _timer7ReloadVal 025F  
                                        ??_sin 005E                           ?_writeDoubleToEEPROM 011B  
                                   _i2c1_state 0268                               __end_of_INT0_ISR B19E  
                              ?_FVR_Initialize 0001                           getUserID@inputUserID 0128  
                             __end_of_HLVD_ISR AB46                 __size_of_OSCILLATOR_Initialize 001C  
                    I2C1_MasterTRBInsert@count 011C                  __end_of_OSCILLATOR_Initialize AF9E  
                     ?_terminal_textAttributes 01BD                              ??_TMR7_WriteTimer 0102  
                    I2C1_MasterTRBInsert@pflag 0119                                          l22041 2A8E  
                                        l13511 8DE0                                          l22049 2AFE  
                                        l15305 9FB4                                          l23145 8BAE  
                                        l21811 201A                                          l23155 8BD4  
                                        l23335 A1C0                                          l21657 1964  
                                        l16321 7304                                          l23337 A1CA  
                                        l21747 1D80                                          l21739 1D32  
                                        l21667 19DE                                          l21845 2206  
                                        l16173 9470                                          l22709 02C8  
                                        l21943 26A6                                          l21767 1E90  
                                        l21929 2664                                          l15555 9826  
                                        l15549 9806                                          l21799 1F98  
                                        l22699 0278                                          ?_acos 00A9  
                                        l22895 0C70                                          l22879 0BF4  
                                        l15689 997C                                          l22897 0CC0  
                                        l22889 0C3A                                          ?_fabs 0030  
                                        l15975 A446                                          l17763 A856  
                                        l17773 A870                                          l17757 A842  
                                ___fltol@sign1 0180                                          ?_atan 007C  
                                        ?_asin 0091                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 011D                                __end_of___fladd 61AE  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                              __end_of___fldiv 732E                                          _ADREF 000F58  
                              __end_of___awdiv 9B1C                              __end_of_I2C1_Stop A8F8  
                              __end_of___flneg ACE2                                          _ADPRE 000F5E  
                                        STR_10 FFB2                                          STR_11 FFBB  
                                        STR_20 FFF0                                          STR_21 FFF8  
                                        STR_13 FFBF                                          STR_22 FFCC  
                                        STR_30 FFE9                                          STR_14 FFC3  
                                        STR_23 FFFA                                          STR_15 FFF5  
                                        STR_31 FFEF                                          STR_16 FFCC  
                                        STR_32 FFEF                                          STR_40 FFEC  
                                        STR_24 FFCB                                          STR_17 FC48  
                                        STR_33 FFFA                                          STR_41 FFF2  
                                        STR_25 FFCE                                          STR_34 FF03  
                                        STR_18 FFE1                                          STR_42 FFF2  
                                        STR_50 FFBB                                          STR_26 FFD4  
                                        STR_19 FF7D                                          STR_43 FFFC  
                                        STR_27 FFDA                                          STR_35 FFD1  
                                        STR_51 FDB2                                          STR_44 E8E8  
                                        STR_28 FFE0                                          STR_36 FFD7  
                                        STR_52 F620                                          STR_60 F352  
                              __end_of___awmod 9E90                                          STR_29 FF7C  
                                        STR_45 FD7C                                          STR_37 FFDD  
                                        STR_53 FF9C                                          STR_61 FF61  
                                        STR_46 FFB2                                          STR_38 FFE3  
                                        STR_54 FFB7                                          STR_70 FE3D  
                                        STR_62 F295                                          STR_47 FFBB  
                                        STR_39 FFE6                                          STR_55 FCFB  
                                        STR_71 FC34                                          STR_63 F4E1  
                                        STR_48 FFA2                                          STR_72 FF6B  
                                        STR_64 FF4B                                          STR_80 F988  
                                        STR_56 F71E                                          _ADRPT 000F66  
                                        STR_49 FFB2                                          STR_65 FFA8  
                                        STR_57 FF35                                          STR_81 FD50  
                                        STR_73 F6EE                                          STR_66 FF96  
                                        STR_74 FC06                                          STR_82 FAB4  
                                        STR_90 F402                                          STR_58 F1B0  
                                        STR_67 FF8F                                          STR_59 FEB9  
                                        STR_91 FE4B                                          STR_75 FDE2  
                                        STR_83 FD92                                          STR_68 FE83  
                                        STR_76 FC5F                                          STR_84 F8F6  
                                        STR_92 F8D1                                          STR_77 FF06  
                                        STR_69 FE91                                          STR_85 FE01  
                                        STR_93 FBBA                                          STR_94 FA75  
                                        STR_78 FA33                                          STR_86 F964  
                                        STR_87 FCD8                                          STR_95 FC89  
                                        STR_79 F103                                          STR_96 F9CD  
                                        STR_88 F940                                __end_of___flmul 5B20  
                                        STR_89 FEC6                                          STR_97 FC74  
                                        STR_98 F9EF                                          STR_99 FE10  
                              __end_of___flsub A6DC                                __end_of___fltol 92FC  
                              __end_of___lldiv 9BA0                                          ?_sqrt 006C  
                              ___awdiv@divisor 011F                                __end_of___llmod A03E  
                                        u20340 A378                                          u20405 A962  
                                        u20440 9A8C                                          u20370 A420  
                                        u31030 2282                                          u20391 A17E  
                                        u31040 2292                                          u23210 A2B0  
                                        u30410 170E                                          u20730 726E  
                                        u23220 A2DC                                          u31028 222C  
                                        u30500 1886                                          u30420 1736  
                                        u23205 A9D4                                          _T5CLK 000FC6  
                                        u31128 24F4                                          u30440 1792  
                                        u30408 168C                                          u20760 72C4  
                                        _T4CON 000FB7                                          u23217 A2A6  
                                        u30417 1704                                          u31410 28AE  
                                        u30530 1920                                          u30450 17CE  
                                        u20770 72E8                                          u23227 A2D2  
                                        u30507 187C                                          u30427 172C  
                                        u23180 A870                                          u31500 2B1E  
                                        u30540 1926                                          u30460 17D6  
                                        u31510 2B4E                                          u31078 22D4  
                                        u30630 1A38                                          u30470 17F8  
                                        u30447 1788                                          u31520 2B5A  
                                        u31440 2924                                          u30640 1A7C  
                                        u33120 0C3A                                          _T5CON 000FC3  
                                        u30537 1916                                          u30457 17C4  
                                        u22810 9590                                          u16330 5F76  
                                        u31098 2428                                          u30490 1848  
                                        u33130 0C62                                          u16340 5F86  
                                        u30820 1ECE                                          u30740 1CF8  
                                        u30660 1B12                                          u30628 1A04  
                                        u33140 0C70                                          u31517 2B44  
                                        u30637 1A2E                                          u30629 1A3A  
                                        u30477 17EE                                          u16510 6100  
                                        u16350 5F88                                          u31438 28D4  
                                        u30750 1D44                                          u30647 1A72  
                                        _T7CLK 000F33                                          u31368 27EC  
                                        _T6CON 000FB1                                          u30497 183E  
                                        u18050 82CA                                          u30667 1B08  
                                        u16540 6118                                          u16380 5FCA  
                                        u16700 585C                                          u30940 2096  
                                        u30908 1FC0                                          u30780 1D80  
                                        _T4HLT 000FB8                                          u16710 59D2  
                                        u31478 295E                                          u31398 285C  
                                        u30598 198A                                 __CFG_DEBUG$OFF 000000  
                                        u16800 5AD6                                          _T7CON 000F30  
                                        u31498 2ACC                                          u30938 2040  
                                        u32810 02C8                                          u16715 59C8  
                                        u17700 8808                                          u17621 86F8  
                                        u16590 616E                                          u16910 9E5A  
                                        u33470 8BD4                                          u16760 5A62  
                                        u30888 1F56                                          u32760 0138  
                                        u17641 8724                                          u16850 9ADE  
                                        u30978 20D0                                          _T6HLT 000FB2  
                                        u17910 92D4                                          u16790 5AB8  
                                        u30998 21B4                     _ADCC_ADTI_InterruptHandler 0247  
                                        u17770 8A64                 __end_ofi2_readDoubleFromEEPROM A56A  
                                        u17940 9B50                                          u17870 925C  
                                        u33767 8486                                          u17970 9FFA  
                                        u17875 9252                                          u19815 A932  
                                        u19816 A934                                          u19920 A266  
                                        u19950 99AE                                          i1l263 007C  
                                        u19927 A25C                                          i1l441 ABE2  
                                        i1l265 009C                                          i1l442 ABDE  
                                        i1l267 00A6                                          _T4TMR 000FB5  
                                        i2l250 909C                                          i2l242 906C  
                                        _T4RST 000FBA                                          i2l252 90BC  
                                        i2l244 9078                                          i2l430 A71E  
                                        i2l254 90C8                                          i2l246 9084  
                                        i2l431 A71C                                          i2l256 90D2  
                                        i2l248 9090                                          i2l426 A6E4  
                                        i2l427 A6E0                                          i2l452 9746  
                                        _T6TMR 000FAF                                          i2l429 A6F8  
                                        i2l454 9796                                          i1l678 AE20  
                                        i2l447 96FE                                          i2l448 9720  
                                        i2l449 9742                                          _T6RST 000FB4  
                                        i2l752 AFCC                                          i2l827 AAC4  
                              ___awdiv@counter 0121                                          _OSCEN 000E47  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 8A76                                __end_of__doprnt 2B64  
                                        _TRISA 000F81                                          _TRISB 000F82  
                               ?_INT0_CallBack 0001                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a D337  
                           __end_ofsin@coeff_b D35B                   __end_of_I2C1_BusCollisionISR B1CA  
                              _TMR4_Initialize ACE2                                          _Imeas 022B  
                                __CFG_PWRTE$ON 000000                                  i2___fladd@grs 006B  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                              ??_I2C1_Initialize 0117  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                               __end_of_TMR4_ISR AE54  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR AC50  
                             __end_of_TMR6_ISR ADBA                               __end_of_TMR7_ISR AC1C  
                              _DATAEE_ReadByte AFF0                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 01C3  
                              __end_of_dpowers CFDD                                          acos@x 00A9  
                                        fabs@d 0030                                     i2scale@scl 0051  
                                        _floor 8F04          i2writeDoubleToEEPROM@starting_address 0009  
          writeDoubleToEEPROM@starting_address 011F                                          _frexp 9DA4  
                                        _errno 0253                                   i2__doprnt@ap 008C  
                                 i2__doprnt@cp 0099                          ?_ADCC_StartConversion 0001  
                                 i2__doprnt@pb 0088                                          _scale 4B42  
                              __end_of_isdigit AF0A                                          atan@f 007C  
                              __end_of_memmove 96F2                                          atan@x 0084  
                                        atan@y 0080                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 0122                                          atoi@s 011D  
                                        _putch B054                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 8F04                                          sin@x2 0094  
                                        tablat 000FF5          __end_of_max_POS3P3_ADC_Result_address D005  
                _max_POS3P3_ADC_Result_address D003                               __end_ofi2___wmul AE7A  
                        ??_saveSRAMMaxToEEPROM 0127                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                 __size_of_ADCC_GetFilterValue 0014                                          sqrt@a 006C  
                                        sqrt@i 0075                                          sqrt@p 007A  
                                        status 000FD8                                          wtemp6 0060  
                                i2___flmul@grs 003E                                __end_of_strncmp 9A0A  
                              __end_of_strncpy 9FD6                               __end_ofi2_fround 7890  
               ?_INTERRUPT_InterruptManagerLow 0001                    ringBufferLUT@max_temp_print 02C7  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___flmul 0350                             __size_ofi2___flsub 0048  
                           __size_ofi2___fltol 00DE                             __size_ofi2___lldiv 0082  
                  ??_ADCPostProcessingCallback 005E                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf AA26                I2C1_MasterWriteTRBBuild@address 011C  
                     __size_of_HLVD_Initialize 0010                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler B148         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler B13A                                _TMR5_Initialize A47C  
                               __CFG_CSWEN$OFF 000000                             __size_ofi2__doprnt 1504  
                              __initialization 9840                             OLED_Command@length 0128  
                        I2C1_MasterWrite@pdata 0120                              i2___lldiv@divisor 0005  
                        I2C1_MasterWrite@pflag 0125                                   __end_of_acos 9F6E  
                                 __end_of_fabs AA62                                   __end_of_atan 81CE  
                                 __end_of_asin 67F0                                   __end_of_atoi 94B2  
                                 __end_of_main 85B0                              i2___lldiv@counter 000D  
                             _max_Irms_address D007                                   __end_of_sqrt 6DB2  
                                   i2printf@ap 00B4                                     i2printf@pb 00B6  
                        ??_writeDoubleToEEPROM 0121                          __end_of_ringBufferLUT 1656  
                               __CFG_SCANE$OFF 000000                          _max_POS3P3_ADC_Result 0213  
                      FLASH_ReadByte@flashAddr 0117                             __size_ofi2_isdigit 001E  
                         __size_of_getDeviceID 0020                               __end_of_OledFont D30B  
                          __size_of_OLED_Clear 0040                                         ??_acos 005E  
                                       ??_fabs 0034                                    _i2c1_object 0200  
                                       ??_atan 005E                                         ??_asin 005E  
                                       ??_atoi 011F                                         ??_main 02D5  
             __end_of_recoverSRAMMaxFromEEPROM 86E6                       _TMR5_SetInterruptHandler B110  
                                       ??_sqrt 0070                                  __activetblptr 000003  
                      __size_of_FLASH_ReadByte 001A                        __size_of_FLASH_ReadWord 0042  
                   __size_of_getDeviceIDString 0060                           __size_of__tdiv_to_l_ 0134  
                                  ?i2___xxtofl 0005                         getUserID@initialOffset 0124  
                                    ??_OLED_YX 012E                                _TMR6_Initialize AC50  
                           _TRIAC_Firing_Angle 00F7                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize A0A6  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01DF                                         ?_floor 0076  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 016F  
                                       STR_100 F43C                                         _ADLTHL 000F6A  
                                       STR_101 FDC2                                         STR_110 FD3F  
                                       STR_102 F205                                         STR_103 FEE0  
                                       STR_111 F9AB                                         STR_112 FDD2  
                                       STR_120 FA95                                         STR_104 F38D  
                                       STR_105 FE1F                                         STR_113 F881  
                                       STR_121 F582                                         STR_114 FF12  
                                       STR_122 F82E                                         STR_130 F2D5  
                                       STR_106 EFCB                                         _ADRESH 000F64  
                                       STR_123 FED3                                         STR_115 F804  
                                       STR_131 F24E                                         STR_107 F034  
                                       STR_116 FE59                                         STR_132 FDA2  
                                       STR_140 FC9E                                         STR_124 FBD4  
                                       STR_108 F5EC                                         STR_125 FBED  
                                       STR_117 FB83                                         STR_141 F654  
                                       STR_109 F54D                                         STR_133 F3C8  
                                       STR_134 FE67                                         STR_142 FCC5  
                                       STR_150 FB2D                                         STR_118 FB10  
                                       STR_126 F15A                                         _ADRESL 000F63  
                                       STR_119 FD0C                                         STR_143 F6BB  
                                       STR_135 F5B7                                         STR_127 F09D  
                                       STR_151 DF65                                         STR_160 FFAD  
                                       STR_144 FE75                                         STR_136 FD2E  
                                       STR_152 FA54                                         STR_128 F77B  
                                       STR_129 F91B                                         STR_145 F7D7  
                                       STR_137 F688                                         STR_161 EAD7  
                                       STR_153 E61B                                         STR_170 F733  
                                       STR_138 FF40                                         STR_146 FD1D  
                                       STR_154 FA11                                         STR_162 F474  
                                       STR_171 FAD3                                         STR_139 F7A9  
                                       STR_147 F517                                         STR_163 F314  
                                       STR_155 E32F                                         STR_172 FEAC  
                                       STR_148 FD61                                         STR_156 FB4A  
                                       STR_164 F8AA                                         STR_180 F861  
                                       STR_165 F74D                                         STR_149 F4AB  
                                       STR_157 E8EB                                         STR_173 FEFA  
                                       STR_181 F858                                         STR_158 FF7F  
                                       STR_190 FF2A                                         STR_166 FAF2  
                                       STR_174 FE9F                                         STR_182 FB9F  
                                       STR_167 FF56                                         STR_159 D35B  
                                       STR_175 FF6B                                         STR_183 FC4A  
                                       STR_168 ECAD                                         STR_184 FC1E  
                                       STR_176 FD72                                         STR_185 FD72  
                                       STR_169 FB67                                         STR_177 FDF2  
                                       STR_178 FD82                                         STR_179 FCB2  
                                       STR_188 FF88                                         STR_189 FCEA  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                 __end_of_Total_Energy_address D00B                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                         _readDoubleFromEEPROM A338                              __end_of_OLED_Init 997A  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                                         _RC2STA 000EF5  
                                       i1l1326 A8B4                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _RC6PPS 000E68                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       _RC7PPS 000E69                                         i2l2002 360C  
                                       i2l2011 37A0                                         i2l2003 36D4  
                                       i2l1051 7B7A                                         i2l2012 37A4  
                                       i2l2004 3702                                         i2l1060 7BCC  
                                       i2l1052 7B8A                                         i2l2021 3A42  
                                       i2l1061 7BDA                                         i2l2022 39D4  
                                       i2l2014 37F2                                         i2l2006 377C  
                                       i2l1054 7B92                                         i2l2031 3B18  
                                       i2l2023 3A10                                         i2l2015 381C  
                                       i2l2007 370E                                         i2l1071 7C60  
                                       i2l1063 7C0C                                         i2l1055 7B9A  
                                       i2l2040 3C00                                         i2l2032 3B4C  
                                       i2l2024 3A3A                                         i2l2016 39C8  
                                       i2l2008 374A                                         i2l1048 7D06  
                                       i2l1072 7C70                                         i2l1056 7BA8  
                                       i2l2041 3BA8                                         i2l2017 387E  
                                       i2l2009 3774                                         i2l1081 7CC0  
                                       i2l1065 7C46                                         i2l1049 7B30  
                                       i2l1330 4B10                                         i2l2050 3C80  
                                       i2l2034 3BEA                                         i2l2026 3AE2  
                                       i2l2018 3946                                         i2l1090 B01E  
                                       i2l1082 7CC8                                         i2l1074 7C96  
                                       i2l1058 7BC4                                         i2l1331 4074  
                                       i2l2051 3C88                                         i2l2035 3B66  
                                       i2l2027 3A96                                         i2l2019 3974  
                                       i2l1083 7CE8                                         i2l1075 7C8E  
                                       i2l1332 40FE                                         i2l2060 3D78  
                                       i2l2052 3CAC                                         i2l2028 3AC8  
                                       i2l1084 7CEE                                         i2l2133 AD60  
                                       i2l1341 4218                                         i2l2061 3DA2  
                                       i2l2053 3CB4                                         i2l2045 3C1C  
                                       i2l1085 7CF2                                         i2l1069 7C58  
                                       i2l1350 457A                                         i2l1342 42D6  
                                       i2l2310 9BE2                                         i2l2070 3E7A  
                                       i2l2054 3DAC                                         i2l1078 7CA8  
                                       i2l2231 6546                                         i2l2311 9BDA  
                                       i2l2047 3C3C                                         i2l1095 A8F2  
                                       i2l1087 7CFA                                         i2l1079 7CB8  
                                       i2l2400 9388                                         i2l1360 4AFA  
                                       i2l1352 482A                                         i2l2320 9EA4  
                                       i2l2080 4010                                         i2l2056 3D08  
                                       i2l2048 3C5E                                         i2l2401 9378  
                                       i2l2233 666E                                         i2l1345 42DE  
                                       i2l1337 4106                                         i2l2321 9EB0  
                                       i2l2057 3D32                                         i2l2250 7FDC  
                                       i2l2234 674E                                         i2l1346 4650  
                                       i2l1338 4210                                         i2l2314 9C02  
                                       i2l2074 3F92                                         i2l2066 3DF0  
                                       i2l1363 4B02                                         i2l1355 4832  
                                       i2l1347 4522                                         i2l2315 9C0C  
                                       i2l2307 9BB4                                         i2l2323 9EC6  
                                       i2l2075 3E98                                         i2l2067 3E1A  
                                       i2l2252 8048                                         i2l1356 4914  
                                       i2l1348 443A                                         i2l2316 9C1A  
                                       i2l2308 9BC4                                         i2l2324 9EBE  
                                       i2l2341 9202                                         i2l2253 8190  
                                       i2l2077 3FAA                                         i2l2342 916A  
                                       i2l2406 93AC                                         i2l2078 3F1A  
                                       i2l2407 93A0                                         i2l2255 81A8  
                                       i2l1359 491C                                         i2l2351 8A94  
                                       i2l2327 9EDE                                         i2l2079 3FE6  
                                       i2l2328 9EE8                                         i2l2409 93C8  
                                       i2l2353 8AB2                                         i2l2329 9EF6  
                                       i2l2370 8E8A                                         i2l2354 8AF4  
                                       i2l2371 8EC8                                         i2l2347 AA50  
                                       i2l2363 8B86                                         i2l2355 8B24  
                                       i2l2523 AF5E                                         i2l2364 8B7A  
                                       i2l2701 6348                                         i2l2357 8B62  
                                       i2l2461 8910                                         i2l1901 51FA  
                                       i2l2710 641A                                         i2l2702 634C  
                                       i2l2358 8B52                                         i2l2462 8900  
                                       i2l1902 5376                                         i2l1910 2BB0  
                                       i2l2375 AD2E                                         i2l2455 8846  
                                       i2l2712 6430                                         i2l2368 8E18  
                                       i2l1904 5436                                         i2l2705 63E6  
                                       i2l2369 8E4C                                         i2l2801 6B2C  
                                       i2l2457 8872                                         i2l1921 2D9A  
                                       i2l1913 2BFA                                         i2l2722 64A0  
                                       i2l2714 643A                                         i2l2810 6C20  
                                       i2l2458 88AC                                         i2l1930 2DA8  
                                       i2l1922 2D6E                                         i2l1914 2BF2  
                                       i2l2707 63F6                                         i2l2811 6C66  
                                       i2l2803 6B3C                                         i2l2563 9CD4  
                                       i2l2467 8934                                         i2l2459 88D4  
                                       i2l1931 2DAC                                         i2l1923 2D1C  
                                       i2l2900 8F4E                                         i2l2740 739E  
                                       i2l2812 6C8E                                         i2l2804 6B56  
                                       i2l2564 9CC8                                         i2l2468 8928  
                                       i2l1932 3062                                         i2l1940 2DF6  
                                       i2l1908 2B68                                         i2l2901 8F3C  
                                       i2l2741 739A                                         i2l2573 A12C  
                                       i2l1909 2BDE                                         i2l2726 64C6  
                                       i2l2398 931C                                         i2l2750 74B8  
                                       i2l2814 6D78                                         i2l2806 6B90  
                                       i2l2574 A120                                         i2l2727 64CE  
                                       i2l2719 645A                                         i2l2903 8F6C  
                                       i2l2743 73E4                                         i2l2671 6824  
                                       i2l2807 6BBC                                         i2l2567 9D08  
                                       i2l1927 2FEC                                         i2l1943 2E4E  
                                       i2l1935 2DB0                                         i2l1919 2C56  
                                       i2l1783 A600                                         i2l2728 64D0  
                                       i2l2680 61DC                                         i2l2904 9004  
                                       i2l2760 7526                                         i2l2736 735E  
                                       i2l2672 6942                                         i2l2808 6C1A  
                                       i2l2568 9D16                                         i2l1960 3078  
                                       i2l1952 2EE8                                         i2l1944 2E64  
                                       i2l2753 74EE                                         i2l2745 740C  
                                       i2l2737 735A                                         i2l2673 69B2  
                                       i2l2809 6CC4                                         i2l2577 A154  
                                       i2l1961 30D6                                         i2l1953 2F4C  
                                       i2l1937 2DB4                                         i2l2770 5B50  
                                       i2l2762 756A                                         i2l2754 74D0  
                                       i2l2746 74BA                                         i2l2674 6AD8  
                                       i2l2578 A162                                         i2l1954 2F9C  
                                       i2l1938 2DEC                                         i2l1786 A52A  
                                       i2l2691 6300                                         i2l2771 5B4C  
                                       i2l2763 758E                                         i2l2747 746A  
                                       i2l1891 7754                                         i2l1971 32B6  
                                       i2l1963 3142                                         i2l1947 2E6E  
                                       i2l1939 2DFC                                         i2l1787 A558  
                                       i2l2692 62DE                                         i2l2684 6228  
                                       i2l2772 5B60                                         i2l2764 75B8  
                                       i2l2748 7492                                         i2l1964 31C0  
                                       i2l1956 2FB0                                         i2l1948 2EAA  
                                       i2l2693 62EC                                         i2l2685 6224  
                                       i2l2781 5D7E                                         i2l2909 9DC2  
                                       i2l2765 75C4                                         i2l1981 3408  
                                       i2l1957 2FD4                                         i2l1949 2ED4  
                                       i2l2694 62F0                                         i2l2790 5DFA  
                                       i2l2782 5D60                                         i2l2774 5B90  
                                       i2l2766 75C6                                         i2l1894 783C  
                                       i2l1990 350A                                         i2l1982 3422  
                                       i2l1966 31EE                                         i2l1958 2FE6  
                                       i2l2687 6284                                         i2l2679 61E0  
                                       i2l2791 5E18                                         i2l2775 5B8C  
                                       i2l1959 3A4C                                         i2l1967 323A  
                                       i2l2688 6248                                         i2l2776 5BA0  
                                       i2l2880 8370                                         i2l1968 331E  
                                       i2l2697 635E                                         i2l2793 5E3C  
                                       i2l2777 5BBE                                         i2l2881 838E  
                                       i2l1897 522A                                         i2l1993 3592  
                                       i2l1985 3476                                         i2l1977 3396  
                                       i2l2698 6324                                         i2l2794 5E5A  
                                       i2l2890 8404                                         i2l1898 513A  
                                       i2l1994 3524                                         i2l2883 83A0  
                                       i2l1995 3560                                         i2l1987 3512  
                                       i2l2788 5DB6                                         i2l2884 8394  
                                       i2l1996 358A                                         i2l1988 34A2  
                                       i2l1989 34E0                                         i2l2894 842E  
                                       i2l2886 83DE                                         i2l2895 8460  
                                       i2l2887 83C6                                         i2l2879 8360  
                                       i2l1999 35F0                                         i2l2889 8410  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                       i2l9671 75B8                                      ??i2_scale 004D  
                      TMR7_WriteTimer@timerVal 0100                                         _SBOREN 00725F  
                                       _OSCFRQ 000E49                                  ?_OLED_Command 0001  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                               __end_of___xxtofl 8322  
        __end_of_ADCC_DischargeSampleCapacitor B1B8         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor B1B0                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                              ?_I2C1_MasterWrite 0120  
                               i2___fladd@aexp 0069                                 i2___fladd@bexp 006A  
                                ?_OLED_PutChar 0001                         ?_dimmingOnTimeCallback 0001  
        __end_of_ADCC_HasAccumulatorOverflowed B18A         __size_of_ADCC_HasAccumulatorOverflowed 000C  
                _ADCC_HasAccumulatorOverflowed B17E                                   __doprnt$5109 018E  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize A2E4  
                           ??_I2C1_MasterWrite 0127                                   i2_scale$5356 004D  
                             __end_of__powers_ CF81                                 _p_i2c1_current 0257  
              __end_of_terminal_ringBufferPull 8CC2                                         ___flge 8CC2  
                            _ADCC_ThresholdISR ADBA                                      ??___fladd 0131  
                                       ___wmul AD6A                                      ??___fldiv 0145  
                                    ??___awdiv 0121                                      ??___flneg 0129  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___flmul 015E                                      ??___flsub 0145  
                                    ??___fltol 017C                                      ??___lldiv 011F  
                                    ??___llmod 012C                     ??_I2C1_MasterWriteTRBBuild 011E  
                                    ??__doprnt 0188                             ?_ADCC_ThresholdISR 0001  
     writeEnergyToEEPROMCallback@current_value 0040                        __end_of_TMR4_Initialize AD12  
                     ??_terminal_setCursorHome 01BD                                  i2__doprnt@idx 0098  
                                       _fround 6DB2                                  i2__doprnt@len 009B  
                                    ?_I2C1_ISR 0001                                  i2__doprnt@exp 009D  
                                i2__doprnt@val 00A7                                         clear_0 98A0  
                                       clear_1 98B2                                         clear_2 98BE  
                                       clear_3 98CE                           _eusart2RxStringReady 07D8  
                             ___awdiv@quotient 0123                                 i2___fldiv@aexp 002B  
                               i2___fldiv@bexp 002A                                ___awmod@divisor 0119  
                               i2___fldiv@sign 001F                                   __doprnt@flag 01A7  
                              ___awmod@counter 011B                                         _printf A972  
                                 __doprnt@fval 019D                                ??_INT0_CallBack 0003  
                                 __doprnt@prec 01A9                                         _strcat A56A  
                                       _strchr AAD6                        __end_of_DATAEE_ReadByte B00A  
                                       _strcmp A3DC                                         _strcpy AB46  
                                       _strlen A234                                 i2___awdiv@sign 000C  
                                       _strstr 9A0A                                         floor@i 007A  
                                       floor@x 0076                   getCauseOfResetString@strings 02D7  
                             _background_color 0262                                _TMR5_StartTimer B1DC  
                              _ADCC_Initialize A1D4                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 4068           __end_of_TMR4_DefaultInterruptHandler B1EE  
        __size_of_TMR4_DefaultInterruptHandler 0002                   _TMR4_DefaultInterruptHandler B1EC  
                               _PMD_Initialize AF66                        FLASH_ReadWord@flashAddr 011B  
                            __end_ofi2___fladd 64EC                                      ??_isdigit 0117  
                                    ??_memmove 011D                              __end_ofi2___fldiv 75E2  
                            __end_ofi2___awdiv 9C24                              __end_ofi2___flneg AD40  
                            __end_ofi2___awmod 9F00                              __end_ofi2___flmul 5E70  
                            __end_ofi2___flsub A76C                              __end_ofi2___fltol 93DA  
                      ??i2_writeDoubleToEEPROM 000B                              __end_ofi2___lldiv 9D28  
                                       sin@sgn 0098                            ??_ADCC_ThresholdISR 005E  
                            __end_ofi2___llmod A174                                   __mediumconst CF4C  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                            _ADCC_StopConversion B1E0  
                         _EUSART2_Transmit_ISR ABB2                              __end_ofi2__doprnt 4068  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                              ??_EUSART2_Write 0117       TMR4_SetInterruptHandler@InterruptHandler 0117  
     INT0_SetInterruptHandler@InterruptHandler 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117   ADCC_SetADTIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 00B5  
                I2C1_MasterWriteTRBBuild@pdata 0119                          ?_readDoubleFromEEPROM 0119  
                               i2___flmul@aexp 003D                                 i2___flmul@bexp 0042  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 01BD                                 i2___flmul@sign 003C  
                               i2___flmul@temp 0047                                 i2___flmul@prod 0043  
                __size_of_INTERRUPT_Initialize 001C                                _eusart2RxBuffer 0380  
                                   ___flge@ff1 0117                                     ___flge@ff2 011B  
                               ??_OLED_Command 0127                        __end_of_TMR5_Initialize A4CC  
                                 ___xxtofl@arg 0121                              __end_ofi2_isdigit AF66  
                                 ___xxtofl@exp 0120                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00DE                              _SYSTEM_Initialize AA62  
                                 ___xxtofl@val 0117           __end_of_TMR7_DefaultInterruptHandler B1E8  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler B1E6  
                              _eusart2TxBuffer 0300                                     __accesstop 0060  
                      __end_of__initialization 98D6                                 i2___fltol@exp1 0075  
                                    ?_INT0_ISR 0001                                     ___flneg@f1 0125  
                                    ?_HLVD_ISR 0001                             ?_SYSTEM_Initialize 0001  
                    __size_ofi2_TMR5_StopTimer 0004                                   eval_poly@res 0078  
                                ___rparam_used 000001                                     ___fltol@f1 0178  
                              _TMR5_WriteTimer AFBA                                 ??_OLED_PutChar 0127  
                               _i2c1_trb_count 0267                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                    __end_of_ADCC_ThresholdISR ADE2                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 0400                            __size_ofi2___xxtofl 0150  
                        _I2C1_FunctionComplete B00A                           _I2C1_BusCollisionISR B1C4  
                   __end_of_getMajorRevisionID A972                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 01BD  
                        __end_of_TMR4_CallBack AEC4                         I2C1_MasterWrite@length 0122  
                                 __pidataBANK0 B1D0                                   __pidataBANK1 B1E4  
                                 __pidataBANK2 AE7A                            ??_SYSTEM_Initialize 011C  
                                    ?_TMR4_ISR 0001                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                             _DATAEE_WriteByte A8F8                                  __end_of_floor 9016  
                                __end_of_frexp 9E1E                                  __end_of_scale 4FE6  
               ?_EUSART2_SetTxInterruptHandler 0117                            OLED_Command@timeout 0129  
                                __end_of_putch B068                              ??_HLVD_Initialize 0117  
                                   ??_I2C1_ISR 0004                       ??_terminal_clearTerminal 01BD  
                      __end_of_TMR6_Initialize AC82                       __size_of_getCauseOfReset 0052  
                       __end_of_PMD_Initialize AF82                          _getCauseOfResetString AC82  
                                    ?i2___flge 0034                           __end_of_EUSART2_Read A694  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 881A  
                  __size_of_EXT_INT_Initialize 001E                                     __div_to_l_ 894C  
                    __size_ofi2_TMR7_StopTimer 0006                             __size_of_getUserID 0044  
                                    ?i2_fround 0049                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026                  ?_TMR4_DefaultInterruptHandler 0001  
                                    ?i2_printf 00B2                    ADCC_StartConversion@channel 0100  
                                   __doprnt@ap 0186                                     __doprnt@cp 0193  
                                   __doprnt@pb 0182                                __div_to_l_@exp1 0124  
                                      ??_floor 005E                                __div_to_l_@cntr 0123  
                                      ??_frexp 0007                                        ??_scale 0173  
                    __end_of_SYSTEM_Initialize AA9C                                __div_to_l_@quot 011F  
                                      ??_putch 0118                                   peakToRMS@RMS 00C5  
                           i2___lldiv@quotient 0009                                   ??_OLED_Clear 013A  
                                _eusart2RxHead 00F4                                  _eusart2TxHead 01E1  
                                   __pbssBANK0 00F0                                     __pbssBANK1 01C6  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01DE                                  _eusart2TxTail 01E0  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize A338  
                           __size_of_peakToRMS 024A                          _INT0_InterruptHandler 023E  
                                   ??_INT0_ISR 0003                                     ??_HLVD_ISR 0011  
            __size_of_recoverSRAMMaxFromEEPROM 0136                      ?_recoverSRAMMaxFromEEPROM 0001  
                ?_TMR7_DefaultInterruptHandler 0001                          _TMR4_InterruptHandler 023B  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011B  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer AE08  
                        ??_ADCC_StopConversion 0001                          ?_I2C1_BusCollisionISR 0001  
                             ??_FVR_Initialize 0117                     __end_ofi2_DATAEE_WriteByte AAD6  
                               _peakToRMS$5341 00C1                                 _peakToRMS$5342 00B9  
                               _peakToRMS$5343 00BD                          ringBufferLUT@arg_buff 02B0  
                                  _Irms_offset 02EF                                        ?___flge 0117  
               ?_ADCC_DischargeSampleCapacitor 0001              terminal_ringBufferPull@index_3260 0402  
                                      ?___wmul 0117                          _currentMeasuredToPeak 9D28  
                      __end_of_TMR5_StartTimer B1E0                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler B110                                     ??_TMR4_ISR 0044  
                      __end_of_ADCC_Initialize A234                                     ??_TMR5_ISR 0003  
                                   ??_TMR6_ISR 0101                                     ??_TMR7_ISR 0102  
                              _I2C1_Initialize AB7C                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                 ringBufferLUT@max_Power_print 02BB                           _Total_Energy_address D009  
                                      ?_fround 016F                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61           __end_of_ADCC_SetADTIInterruptHandler B164  
        __size_of_ADCC_SetADTIInterruptHandler 000E                   _ADCC_SetADTIInterruptHandler B156  
                             ?_TMR4_Initialize 0001                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 01AC                                ?_PMD_Initialize 0001  
                          _ADCC_GetFilterValue B068                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___flge 003C                             __end_of_OLED_Clear A878  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strcpy 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte AFD6  
          ringBufferLUT@max_voltage_print_3622 02CB            ringBufferLUT@max_voltage_print_3616 02C3  
                                      ?_strstr 0126                               ?_DATAEE_ReadByte 0117  
                                   ??i2___wmul 0005                                        u2013_41 882A  
                                      u2015_41 8856                                 _FLASH_ReadWord A7F6  
                                      _INT0PPS 000DF0                                        i2l22301 323A  
                                      i2l13515 8F00                                        i2l22219 2E6E  
                                      i2l22309 3288                                        i2l22229 2EE8  
                                      i2l22407 370E                                        i2l22505 3BAC  
                                      i2l22361 34A2                                        i2l22329 339A  
                                      i2l10897 A5CE                                        i2l22611 4002  
                                      i2l22603 3F92                                        i2l22373 3524  
                                      i2l22491 3B6A                                        i2l12899 7B7A  
            i2writeDoubleToEEPROM@input_double 0005                writeDoubleToEEPROM@input_double 011B  
                                    ?___xxtofl 0117                                        _SP2BRGH 000EF4  
                                   ??i2_fround 004D                                        _SP2BRGL 000EF3  
                                      _OLED_YX A9AE                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 979E  
                                    _I2C1_Stop A8B8                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 005E                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                         ??_readDoubleFromEEPROM 011D  
                                      _SSP1ADD 000F92                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                                        _SSP1BUF 000F91  
          __end_of_max_Temp_ADC_Result_address D001                    _max_Temp_ADC_Result_address CFFF  
                     _acquisitionTimerCallback B0A2                       __end_of_max_Irms_address D009  
                      __end_of_TMR5_WriteTimer AFD6               __size_of_terminal_textAttributes 0368  
                                      i2_scale 4FE6                               ?_TMR5_Initialize 0001  
                I2C1_MasterTRBInsert@ptrb_list 0117                           DATAEE_WriteByte@bAdd 0117  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch B19E  
            __size_of_INT0_SetInterruptHandler 000E                          i2DATAEE_ReadByte@bAdd 0001  
                    ?_INT0_SetInterruptHandler 0117                                i2___fladd@signs 0068  
         __end_of_terminal_textAttributesReset B0A2          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset B090                         ?_I2C1_FunctionComplete 0001  
                            __end_of__npowers_ CFB5                                        __Hparam 0000  
                __size_of_I2C1_MasterTRBInsert 00A2            __end_of_writeEnergyToEEPROMCallback 9CA6  
                  _writeEnergyToEEPROMCallback 9C24                     __size_of_ADCC_ThresholdISR 0028  
                                   _scale$5108 0173             __end_of_max_FVR_ADC_Result_address CFFF  
                   _max_FVR_ADC_Result_address CFFD                                        __Lparam 0000  
                            __end_of_getUserID A7F6                          _ADCC_ClearAccumulator B1BE  
                   ??_TMR5_SetInterruptHandler 011A                             _p_i2c1_trb_current 0259  
                     ??_dimmingOffTimeCallback 0003                                 _adc_error_flag 02F0  
                              __size_of___flge 0122                                        ___fladd 5E70  
                                      ___fldiv 7078                                        ___awdiv 9A96  
                                      ___flneg ACB2                                        ___awmod 9E1E  
                               i2__doprnt$5357 0094                                        ___flmul 57CE  
                                      ___flsub A694                                        ___fltol 921E  
                                      ___lldiv 9B1C                                __size_of___wmul 0028  
                                      ___llmod 9FD6                         __end_of_FLASH_ReadByte AFF0  
                                      __doprnt 1656                         ?_getCauseOfResetString 0117  
                       __end_of_FLASH_ReadWord A838                                        __pcinit 9840  
                            __end_of_eval_poly 921E                                __size_of_fround 02C6  
                             ?_TMR6_Initialize 0001                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                           __end_of_OLED_Command A10E  
                                      __ptext0 8472               i2readDoubleFromEEPROM@byte_index 000B  
               readDoubleFromEEPROM@byte_index 0121                                        __ptext1 B0B4  
                                      __ptext2 8B9E                                        __ptext3 0000  
                                      __ptext4 B090                                        __ptext5 5466  
                                      __ptext6 9F6E                                        __ptext7 A56A  
                                      __ptext8 B0C4                                        __ptext9 9A0A  
                            __end_of_peakToRMS 7F98                                __size_of_printf 003C  
                currentMeasuredToPeak@Measured 0099                     ringBufferLUT@angle_degrees 02B3  
                ?_ADCC_SetADTIInterruptHandler 0117                        __size_of_TMR5_StopTimer 0004  
                              __size_of_strcat 004C                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                  i2_fround$5354 0051  
                                i2_fround$5355 004D                                __size_of_strcpy 0036  
                              __size_of_strlen 0058                              __end_of_hexpowers CFFD  
                       getCauseOfResetString@r 0119                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers CFB5  
                        _OSCILLATOR_Initialize AF82                         ??_EUSART2_Transmit_ISR 0100  
                                 __size_of_abs 002A                                   i2fround@prec 0055  
                                      _isdigit AEE8                                atan@val_squared 0089  
                               i2__doprnt@flag 00AD                                   __size_of_sin 02FA  
                                 ??i2___xxtofl 0009                                        _memmove 9644  
                                   ??___xxtofl 011B                                 i2__doprnt@fval 00A3  
                             ___awmod@dividend 0117                                 i2__doprnt@prec 00AF  
                                    _T4CONbits 000FB7                           __end_of_OLED_PutChar 9644  
                     ??_PIN_MANAGER_Initialize 0117              __size_of_TMR4_SetInterruptHandler 000E  
                                      atan@val 008D                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0117              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR4_SetInterruptHandler 0117                                     ?_I2C1_Stop 0001  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 0095                                      _T4HLTbits 000FB8  
                  __end_of_saveSRAMMaxToEEPROM 7AF6                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 02D1                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 003A                           I2C1_ISR@pi2c_buf_ptr 0255  
                                __doprnt@width 01A5                          i2EUSART2_Write@txData 0001  
                                      _strncmp 997A                                 __pintcode_body 9016  
                                      _strncpy 9F6E                           end_of_initialization 98D6  
                      __end_of_TMR7_WriteTimer AE2E                                        ftoa@buf 026A  
               ??_TMR4_DefaultInterruptHandler 0001                        getDeviceIDString@F17550 02E9  
                       _terminal_setCursorHome B0B4                          ??_ADCC_GetFilterValue 0003  
                                    _PCON0bits 000FD7                                      _T4RSTbits 000FBA  
                             ?_TMR7_Initialize 0001                           _max_POS12_ADC_Result 020F  
                      ??_dimmingOnTimeCallback 0001                                        int_func 9016  
                          i2___wmul@multiplier 0001                                      i1u1442_20 A884  
                                    _T6RSTbits 000FB4                                      i1u1443_28 A888  
                                    i2u1025_40 7522                                      i1u3337_28 ADA6  
                                    i1u3339_28 AC08                                      i2u1028_40 7578  
                                    i2u2012_40 8B8C                                      i1u3372_28 0086  
                                    i2u1029_40 759C                                      i2u2021_40 893A  
                      __size_of_TMR7_StopTimer 0006                                      i2u2025_40 9CD8  
                                    i2u2202_40 40F0                                      i2u1235_40 A558  
                               i2___xxtofl@arg 000F                                      i2u1164_40 9DEA  
                                    i2u2212_40 481C                                      i2u2028_40 A130  
                                    _OLED_Init 98E0                               i2_TMR5_StopTimer B1D8  
                                    i2u1164_48 9DEC                                      i2u2205_40 4202  
                                    i2u2214_40 4906                                      i2u2207_40 42C8  
                               i2___xxtofl@exp 000E                                      i2u2216_40 4AEC  
                               i2___xxtofl@val 0005                                      i2u1267_40 B186  
                                    i2u3203_48 3460                                      i2u3212_48 35DA  
                                    i2u3205_48 34CA                                      i2u3222_48 37DC  
                                    i2u3214_48 36BC                                      i2u1199_45 AAD2  
                                    i2u1199_46 AAD4                                      i2u1704_40 62B4  
                                    i2u3160_40 2CDA                                      i2u3160_47 2CD0  
                                    i2u1705_40 62C4                                      i2u3224_48 392E  
                                    i2u3209_40 35A0                                      i2u3208_48 354A  
                                    i2u3161_40 2CE2                         ??_I2C1_BusCollisionISR 0001  
                                    i2u1730_40 64AC                                      i2u1722_40 643E  
                                    i2u1706_40 62C6                                      i2u3218_40 378A  
                                    i2u3217_48 3734                                      i2u3162_40 2D04  
                                    i2u3162_47 2CFA                                      i2u3219_40 379A  
                                    i2u3331_40 AE44                                      i2u3251_48 3CF2  
                                    i2u3227_48 39FA                                      i2u3164_40 2D52  
                                    i2u3156_40 2C1C                                      i2u3155_48 2B9A  
                                    i2u3164_47 2D48                                      i2u3156_47 2C12  
                                    i2u1725_40 6456                                      i2u1709_40 6308  
                                    i2u1741_40 5BAC                                      i2u3181_40 301C  
                                    i2u3165_40 2D90                                      i2u3157_40 2C44  
                                    i2u3181_47 3012                                      i2u3165_47 2D86  
                                    i2u3157_47 2C3A                                      i2u1750_40 5E08  
                                    i2u1742_40 5D22                                      i2u3190_40 324C  
                                    i2u3333_48 AC3C                                      i2u1742_45 5D18  
                                    i2u1751_40 5E26                                      i2u3262_48 3E64  
                                    i2u3254_48 3D62                                      i2u3174_48 2E94  
                                    i2u3159_40 2C9E                                      i2u3343_40 9736  
                                    i2u3159_47 2C94                                      i2u3335_48 ADCE  
                                    i2u3256_40 3DB4                                      i2u3168_40 2E2A  
                                    i2u3271_48 AEB0                                      i2u3168_47 2E20  
                                    i2u3265_40 4022                                      i2u3264_48 3FD0  
                                    i2u3193_40 3288                                      i2u3169_40 2E30  
                                    i2u1930_40 8008                                      i2u3266_40 4052  
                                    i2u3178_40 2F42                                      i2u3177_48 2F0E  
                                    i2u3177_49 2F44                                      i2u3266_47 4048  
                                    i2u3178_47 2F38                                      i2u1747_40 5DB2  
                                    i2u1931_40 800A                                      i2u3267_40 405E  
                                    i2u3259_40 3E2A                                      i2u3258_48 3DDA  
                                    i2u3179_40 2F86                                      i2u3179_47 2F7C  
                                    i2u1940_40 93B2                                      i2u3363_48 90A6  
                                    i2u3197_40 33D8                                      i2u3189_40 3200  
                                    i2u3269_48 AED4                                      i2u1936_40 933A  
                                    i2u1936_45 9330                        __end_of_I2C1_Initialize ABB2  
                              ___lldiv@divisor 011B                                      i2u1963_40 8F5A  
                                    i2u1971_40 9BE6                                      i2u1948_40 841A  
                  __end_of_writeDoubleToEEPROM A47C                                      i2u1977_40 9ECA  
                                    i2u1988_40 693E                                      i2u1989_40 6940  
                              ___lldiv@counter 0123                             _EUSART2_Initialize A03E  
                ?_terminal_textAttributesReset 0001                         ?_currentMeasuredToPeak 0099  
                  getDeviceIDString@inputDevID 0124                                i2_EUSART2_Write A6DC  
                                ??_getDeviceID 0124                                        printf@f 01AC  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 8472  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
                             ?_TMR5_StartTimer 0001                               ?_ADCC_Initialize 0001  
               _ADCPostProcessingCallback$5344 00D6                 _ADCPostProcessingCallback$5345 00DA  
               _ADCPostProcessingCallback$5346 00C9                 _ADCPostProcessingCallback$5347 00CD  
               _ADCPostProcessingCallback$5348 00D1                                        sqrt@grs 007B  
                                      sqrt@exp 007F                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                ??i2__tdiv_to_l_ 0007  
                                 _HLVDCON0bits 000EC2                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                                ?_FLASH_ReadByte 0117  
                          ?_EUSART2_Initialize 0001                                        strlen@s 0117  
                 terminal_ringBufferPull@index 0404                                  ??__tdiv_to_l_ 011D  
                              ?_FLASH_ReadWord 011B                       _TMR6_SetInterruptHandler B102  
                    __size_of_I2C1_MasterWrite 0050                              __size_of_I2C1_ISR 0258  
                        _TMR5_InterruptHandler 0241                               i2_TMR7_StopTimer B1CA  
                     ?_terminal_ringBufferPull 0001                                    ___fladd@grs 013C  
                         __CFG_WDTCCS$LFINTOSC 000000                                  ___xxtofl@sign 011F  
               __size_ofi2_writeDoubleToEEPROM 004C                  __end_ofi2_writeDoubleToEEPROM A602  
                                  ___fldiv@grs 0150                                    ___fldiv@rem 014A  
                              i2___fltol@sign1 0074                                      i2___fladd 61AE  
                                    i2___fldiv 732E                                      i2___awdiv 9BA0  
                                    i2___flneg AD12                                      i2___awmod 9E90  
                             __CFG_FEXTOSC$ECH 000000                                      i2___flmul 5B20  
                                    i2___flsub A724                                      i2___fltol 92FC  
                                    i2___lldiv 9CA6                                      i2___llmod A10E  
                     __end_of_DATAEE_WriteByte A936              I2C1_ISR@i2c_10bit_address_restart 0265  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                                    i2__doprnt 2B64                         _terminal_clearTerminal B0D4  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 1656  
                                  ___flmul@grs 0164                                   _EUSART2_Read A64C  
                           i2___llmod@dividend 000E                                     ?_OLED_Init 0001  
                              _HLVD_Initialize B0E4                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit AF48  
                      I2C1_MasterWrite@address 0123                              __size_of_INT0_ISR 000A  
                          __size_of__div_to_l_ 012A                              __size_of_HLVD_ISR 0038  
                           _max_FVR_ADC_Result 0207                __size_of_dimmingOffTimeCallback 0018  
                                    _Avg_Power 01C6                   __end_of_INTERRUPT_Initialize AFBA  
                     ??i2_readDoubleFromEEPROM 0007                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                                 __end_of___flge 8DE4  
         __end_of_INT0_DefaultInterruptHandler B1F0          __size_of_INT0_DefaultInterruptHandler 0002  
                 _INT0_DefaultInterruptHandler B1EE                  __end_of_terminal_printNewline B0D4  
                               __end_of___wmul AD92                        I2C1_MasterWrite@trBlock 0280  
                     I2C1_Stop@completion_code 0003                              __size_of_TMR4_ISR 0026  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07D8                            __end_of_getDeviceID AF2A  
                               __end_of_fround 7078              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 007E  
                             i2___wmul@product 0005                                 __end_of_printf A9AE  
                        __end_of_INT0_CallBack AEE8                             _getMajorRevisionID A936  
                               __end_of_strcat A5B6                                 __end_of_strchr AB0E  
                               __end_of_strcmp A42C                                 __end_of_strcpy AB7C  
                               __end_of_strlen A28C                                 __end_of_strstr 9A96  
                            __size_ofi2___flge 0120                            start_initialization 9840  
                                   eval_poly@d 0070                                     eval_poly@n 0072  
                                   eval_poly@x 006C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026                                    ??_I2C1_Stop 0001  
         __end_of_TMR5_DefaultInterruptHandler B1EC          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler B1EA                __size_of_PIN_MANAGER_Initialize 00CC  
                          __end_of__tdiv_to_l_ 881A                                    __end_of_abs AD6A  
                                  __end_of_sin 6AEA                                      i2printf@f 00B2  
                      _terminal_textAttributes 5466                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0080                                     ?i2___fltol 006C  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E              __size_of_I2C1_MasterWriteTRBBuild 0046  
                          ?_getMajorRevisionID 0001                                    putch@txData 0118  
                    ?_I2C1_MasterWriteTRBBuild 0117                              __size_ofi2_printf 003C  
                        __end_of_EUSART2_Write A64C                               ?_TMR7_WriteTimer 0100  
                                   ?i2__doprnt 0088                                     frexp@value 0001  
           terminal_textAttributes@output_buff 028B                        __end_ofi2_EUSART2_Write A724  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                          DATAEE_ReadByte@bAdd 0117                                     ?i2_isdigit 0001  
                            _OLED_Write_String A28C                               ?_I2C1_Initialize 0001  
                               _FVR_ADC_Result 01E2                               __CFG_LPBOREN$OFF 000000  
                           ?_OLED_Write_String 013A                                       ??___flge 011F  
                        __size_of_OLED_Command 0068                               ??_PMD_Initialize 0117  
                                     ??___wmul 011B                __size_of_heartbeatTimerCallback 0040  
                         ??_getMajorRevisionID 0122                                     OLED_YX@Row 012F  
                                  __doprnt@idx 0192                                    __doprnt@len 0195  
                                  __doprnt@exp 0197                                    __doprnt@val 01A1  
                                  __pdataBANK0 00F7                                    __pdataBANK1 01E7  
                                  __pdataBANK2 02D7                                       ??_fround 0173  
                                _ringBufferLUT 0000                     __end_of_EXT_INT_Initialize AF48  
               ??_terminal_textAttributesReset 01BF                          __size_of_OLED_PutChar 00C6  
                ?_INT0_DefaultInterruptHandler 0001                                       ??_printf 01B6  
                          ??_OLED_Write_String 013C              getCauseOfReset@return_reset_cause 0117  
       i2readDoubleFromEEPROM@starting_address 0003           readDoubleFromEEPROM@starting_address 0119  
                            _POS3P3_ADC_Result 01DA                                 _TMR5_StopTimer B1D4  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strcpy 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 00B1                   I2C1_MasterWriteTRBBuild@ptrb 0117  
                   __end_of_getMinorRevisionID AE08                                       ??_strstr 012A  
                                    ___fladd@a 012D                                      ___fladd@b 0129  
                                    _Vpk_const 02F3                                     fround@prec 017B  
                               _eusart2RxCount 0269                                  ?i2__div_to_l_ 0001  
                           i2_DATAEE_WriteByte AA9C                                      ___fldiv@a 0141  
                                    ___fldiv@b 013D                                      _acos$5349 00AD  
                        TMR4_ISR@CountCallBack 025B                                      ___flmul@a 015A  
                                    ___flmul@b 0156                                      ___flsub@a 0141  
                                    ___flsub@b 013D               __end_of_INT0_SetInterruptHandler B13A  
                                     ?_OLED_YX 012D                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 028A  
                                __pcstackBANK4 0400                         _dimmingOffTimeCallback B03C  
                                _i2c1_tr_queue 0285                              __size_of___xxtofl 0154  
                                 _isdigit$4252 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize B0F4                            ?i2_DATAEE_WriteByte 0001  
                          EUSART2_Write@txData 0117                         __size_of_TMR4_CallBack 0024  
                                 _load_on_time 021F                    __end_of_ADCC_StopConversion B1E4  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                      ??_I2C1_FunctionComplete 0001                                      _asin$5350 00A5  
                                    _asin$5351 009D                                      _asin$5352 0099  
                                     ?i2_putch 0001                                      __doprnt@c 01AB  
                                    __doprnt@f 0184                                   _OLED_Command A0A6  
                                   sin@coeff_a D323                                     sin@coeff_b D34B  
                    __end_of_OLED_Write_String A2E4                                 _TMR7_StopTimer B1B8  
                                  ??_OLED_Init 012D                          _TMR6_InterruptHandler 024A  
                                    __pnvBANK2 02FC                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 94B2                                   _OLED_PutChar 957E  
                      ??_getCauseOfResetString 0119                                      __pintcode 0008  
                                  _getDeviceID AF0A                                  __pmediumconst CF4C  
                                     ?___fladd 0129               __end_of_TMR4_SetInterruptHandler B12C  
                                     ?___fldiv 013D                                       ?___awdiv 011D  
                         ??i2_DATAEE_WriteByte 0004                                      __ptext100 B1E8  
                                    __ptext101 A878                                      __ptext110 B1EC  
                                    __ptext102 ABB2                                       ?___flneg 0125  
                                    __ptext111 9C24                                      __ptext120 7AF6  
                                    __ptext112 A51C                                      __ptext104 AC1C  
                                    __ptext121 A8B8                                      __ptext113 B024  
                                    __ptext105 B1EA                                      __ptext130 4FE6  
                                    __ptext122 B00A                                      __ptext114 B194  
                                    __ptext106 B172                                      __ptext131 B19E  
                                    __ptext123 B1C4                                      __ptext115 AEC4  
                                    __ptext107 B1D8                                      __ptext140 A10E  
                                    __ptext132 A6DC                                      __ptext124 AB0E  
                                    __ptext116 B1EE                                      __ptext108 AE2E  
                                    __ptext141 9CA6                                      __ptext133 AF48  
                                    __ptext125 A5B6                                      __ptext117 B03C  
                                    __ptext109 AEA0                                      __ptext150 7F98  
                                    __ptext142 ADBA                                      __ptext134 75E2  
                                    __ptext126 AA9C                                      __ptext118 AFBA  
                                    __ptext151 AA26                                      __ptext143 B1F0  
                                    __ptext135 9E90                                      __ptext127 96F2  
                                    __ptext119 B1DC                                      __ptext160 8DE4  
                                    __ptext152 9D28                                      __ptext144 4068  
                                    __ptext136 9BA0                                      __ptext128 A9EA  
                                    __ptext161 9DA4                                      __ptext153 67F0  
                                    __ptext145 B1CA                                      __ptext137 881A  
                                    __ptext129 2B64                                      __ptext170 0000  
                                    __ptext162 911E                                      __ptext154 A724  
                                    __ptext146 7D4E                                      __ptext138 8A76  
                                    __ptext163 5B20                                      __ptext155 AD12  
                                    __ptext147 9F00                                      __ptext139 AE54  
                                    __ptext164 61AE                                      __ptext156 732E  
                                    __ptext148 64EC                                      __ptext165 AD40  
                                    __ptext157 8F04                                      __ptext149 6AEA  
                                    __ptext166 B1E0                                      __ptext158 8322  
                                    __ptext167 B17E                                      __ptext159 92FC  
                                    __ptext168 B068                                      __ptext169 B07C  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 0178  
             __end_of_TMR7_SetInterruptHandler B102                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ CF81  
                              _getCauseOfReset A38A                                 ?_ringBufferLUT 01BF  
              __size_ofi2_readDoubleFromEEPROM 004E                                      _getUserID A7B2  
                       __end_of_TMR5_StopTimer B1D8              _EUSART2_TxDefaultInterruptHandler 0250  
                                     ?__doprnt 0182                         OLED_PutChar@data_array 012B  
                                  __pintcodelo 0018                                       _I2C1_ISR 7AF6  
                                  __tdiv_to_l_ 86E6                               _I2C1_MasterWrite A4CC  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 011F  
                             _POS12_ADC_Result 01D6                                       _BAUD2CON 000EF7  
                     __end_ofi2_TMR5_StopTimer B1DC           __size_of_writeEnergyToEEPROMCallback 0082  
                 __end_of_I2C1_MasterTRBInsert 9840                                       ?_isdigit 0001  
                                     ?_memmove 0117                                    _dev_on_time 0223  
                                    _eval_poly 911E                      ??_terminal_textAttributes 01BF  
                i2DATAEE_WriteByte@GIEBitValue 0004                                      _max_Power 0217  
                                    _attribute 0264                                      _peakToRMS 7D4E  
                             __CFG_WDTE$NSLEEP 000000                       __size_of_TMR4_Initialize 0030  
                      ?_terminal_setCursorHome 0001                                      _hexpowers CFDD  
                       _heartbeatTimerCallback A878                                 _dimming_period 01E7  
                                  ??i2___fladd 0060                                    ??i2___fldiv 001B  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0030  
                                  ??i2___awmod 0005                                    ??i2___flmul 0038  
                               __size_of_floor 0112                                    ??i2___flsub 005E  
                                  ??i2___fltol 0070                                 __size_of_frexp 007A  
                                  ??i2___lldiv 0009                                 __size_of_scale 04A4  
                                  ??i2___llmod 0016                       __size_of_DATAEE_ReadByte 001A  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                                     _T4CLKCON 000FB9                  __size_of_readDoubleFromEEPROM 0052  
                     _recoverSRAMMaxFromEEPROM 85B0                                 __size_of_putch 0014  
                         _INTERRUPT_Initialize AF9E                         __end_of_TMR7_StopTimer B1BE  
                                     _T6CLKCON 000FB3                                    ??i2__doprnt 008E  
       terminal_textAttributes@input_attribute 01BE       __end_of_I2C1_WaitForLastPacketToComplete B194  
    __size_of_I2C1_WaitForLastPacketToComplete 000A              ?_I2C1_WaitForLastPacketToComplete 0001  
           ??_I2C1_WaitForLastPacketToComplete 0117               _I2C1_WaitForLastPacketToComplete B18A  
                       I2C1_MasterRead@trBlock 027B                                       _HLVDCON0 000EC2  
                                     _HLVDCON1 000EC3                   __size_of_EUSART2_Receive_ISR 00AC  
                                     _INT0_ISR B194                                 ___wmul@product 011B  
                    currentMeasuredToPeak@Peak 00A1                               i2__doprnt@tmpval 009F  
                             ?i2_EUSART2_Write 0001                                       _HLVD_ISR AB0E  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0088                                       _IPR0bits 000E1F  
                                     _IPR1bits 000E20                                       _IPR2bits 000E21  
                                     _PIE0bits 000E29                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                       __end_ofi2_TMR7_StopTimer B1D0  
                                     _PIE2bits 000E2B                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
               __size_of_dimmingOnTimeCallback 000C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                  __end_of_dimmingOnTimeCallback B17E  
                          _max_Temp_ADC_Result 020B                            OLED_PutChar@timeout 0137  
                                     _PIR0bits 000E33                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 8A76                               ??_FLASH_ReadByte 011B  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 0050                              i2___fldiv@new_exp 0024  
                                     _SSP1CON1 000F95                                       _SSP1CON3 000F97  
                                     _TMR4_ISR AE2E                                  _TMR4_CallBack AEA0  
                                     _TMR5_ISR AC1C                                       _TMR6_ISR AD92  
                                     _TMR7_ISR ABE8                                       _SSP1STAT 000F94  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 0122                                ?_TMR5_StopTimer 0001  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 8DE4  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0117  
                                     i2___wmul AE54                        __size_of_FVR_Initialize 0008  
                                   ?_eval_poly 006C                 __end_of_terminal_setCursorHome B0C4  
                            i2___awdiv@divisor 0009                                       i2_fround 75E2  
               ??_INT0_DefaultInterruptHandler 0001              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 00B1                i2writeDoubleToEEPROM@byte_index 000F  
                writeDoubleToEEPROM@byte_index 0125                              i2___awdiv@counter 000B  
                  __end_of_ADCC_GetFilterValue B07C                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                          DATAEE_WriteByte@bData 0119  
                                     i2_printf A9EA                            __end_ofatan@coeff_a D323  
                          __end_ofatan@coeff_b D34B                               __size_of_OLED_YX 003C  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                            _max_Power_address D005                         i2_readDoubleFromEEPROM A51C  
                                    copy_data0 9854                                      copy_data1 988C  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 0261                       _INT0_SetInterruptHandler B12C  
                            i2_DATAEE_ReadByte B024                             i2___awmod@dividend 0001  
                              ?_TMR7_StopTimer 0001                              ?_DATAEE_WriteByte 0117  
                      ??_ADCC_ClearAccumulator 0100                     __size_of_OLED_Write_String 0058  
                           ?i2_DATAEE_ReadByte 0001               __size_of_terminal_ringBufferPull 0124  
                             __size_ofi2_scale 0480                                       _OledFont D00B  
               ??_TMR5_DefaultInterruptHandler 0001                   __size_of_saveSRAMMaxToEEPROM 0266  
                           ??_DATAEE_WriteByte 011A                                   _next_channel 02FB  
                             __size_ofi2_putch 000A                                      frexp@eptr 0005  
                      __end_of_getCauseOfReset A3DC                __end_of_terminal_textAttributes 57CE  
              i2writeDoubleToEEPROM@input_data 000B                  writeDoubleToEEPROM@input_data 0121  
                                   _ADSTATbits 000F65   ADCPostProcessingCallback@current_adc_channel 00D5  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult B090  
         __end_of_max_POS12_ADC_Result_address D003                   _max_POS12_ADC_Result_address D001  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler B156  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler B148  
                       OLED_PutChar@input_base 0134                  __size_of_I2C1_BusCollisionISR 0006  
                                     __Lrparam 0000                            ??i2_DATAEE_ReadByte 0003  
                              ??_ringBufferLUT 01C1                       __size_of_TMR7_Initialize 0054  
                               ?_TMR4_CallBack 0001                         I2C1_ISR@i2c_bytes_left 0266  
                             _foreground_color 0263                        ??_OSCILLATOR_Initialize 0117  
                                    memmove@d1 0117                                      memmove@s1 0119  
                             __size_of___fladd 033E                               __size_of___fldiv 02B6  
                             __size_of___awdiv 0086                               __size_of___flneg 0030  
                             __size_of___awmod 0072                               __size_of___flmul 0352  
                             __size_of___flsub 0048                               __size_of___fltol 00DE  
                        i2___wmul@multiplicand 0003                               __size_of___lldiv 0084  
                             __size_of___llmod 0068                   __size_of_writeDoubleToEEPROM 0050  
                                  _load_enable 02F1               __end_of_acquisitionTimerCallback B0B4  
             __end_of_I2C1_MasterWriteTRBBuild A7B2                               __size_of__doprnt 150E  
                                  _fround$5106 0177                                    _fround$5107 0173  
                        __end_ofi2__tdiv_to_l_ 894C                       _TMR4_SetInterruptHandler B11E  
                              _putch$intlevel0 B05A                       _TMR7_SetInterruptHandler B0F4  
                        _TMR7_InterruptHandler 0244                             _ADC_Result_Scaling 0233  
      terminal_textAttributes@foreground_color 028A                                       ___xxtofl 81CE  
                     __size_of_TMR5_StartTimer 0004                       __size_of_ADCC_Initialize 0060  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal B0E4                               __size_of_isdigit 0022  
                    __end_of_max_Power_address D007                               __size_of_memmove 00AE  
                          I2C1_ISR@i2c_address 00F5                      __end_ofi2_DATAEE_ReadByte B03C  
                                     __ptext10 997A                                       __ptext11 A234  
                                     __ptext20 A7F6                                       __ptext12 AAD6  
                                     __ptext21 AFD6                                       __ptext13 AB46  
                                     __ptext30 1656                                       __ptext22 AC82  
                                     __ptext14 A3DC                                       __ptext31 4B42  
                                     __ptext23 93DA                                       __ptext15 A7B2  
                                     __ptext40 894C                                       __ptext32 B054  
                                     __ptext24 7078                                       __ptext16 ADE2  
                                     __ptext41 81CE                                       __ptext33 A602  
                                     __ptext25 B1B8                                       __ptext17 A936  
                                     __ptext50 A42C                                       __ptext42 AD6A  
                                     __ptext34 AEE8                                       __ptext26 B1D4  
                                     __ptext18 A174                                       __ptext51 A8F8  
                                     __ptext43 9FD6                                       __ptext35 6DB2  
                                     __ptext27 A64C                                       __ptext19 AF0A  
                                     __ptext60 AC50                                       __ptext52 8CC2  
                                     __ptext44 9B1C                                       __ptext36 57CE  
                                     __ptext28 B0D4                                       __ptext61 B102  
                                     __ptext53 85B0                                       __ptext45 921E  
                                     __ptext37 9E1E                                       __ptext29 A972  
                                     __ptext70 AB7C                                       __ptext62 A47C  
                                     __ptext54 A338                                       __ptext46 A694  
                                     __ptext38 9A96                                       __ptext71 B0E4  
                                     __ptext63 B110                                       __ptext55 AFF0  
                                     __ptext47 5E70                                       __ptext39 86E6  
                                     __ptext80 A9AE                                       __ptext72 B1A8  
                                     __ptext64 ACE2                                       __ptext56 A38A  
                                     __ptext48 ACB2                                       __ptext81 A28C  
                                     __ptext73 AF2A                                       __ptext65 B11E  
                                     __ptext57 AA62                                       __ptext49 7890  
                                     __ptext90 B18A                                       __ptext82 98E0  
                                     __ptext74 B12C                                       __ptext66 AF66  
                                     __ptext58 A2E4                                       __ptext83 A0A6  
                                     __ptext75 A03E                                       __ptext67 94B2  
                                     __ptext59 B0F4                                       __ptext92 ABE8  
                                     __ptext84 A838                                       __ptext76 B13A  
                                     __ptext68 AF82                                       __ptext93 B1E6  
                                     __ptext85 957E                                       __ptext77 B148  
                                     __ptext69 AF9E                                       __ptext94 B0A2  
                                     __ptext86 9644                                       __ptext78 A1D4  
                                     __ptext95 B164                                       __ptext87 A4CC  
                                     __ptext79 B156                                       __ptext96 B1B0  
                                     __ptext88 A76C                                       __ptext97 B1BE  
                                     __ptext89 979E                                       __ptext98 AE08  
                                     __ptext99 AD92                                   _SSP1CON1bits 000F95  
                                     _sin$5353 0090                                   _SSP1CON2bits 000F96  
                                     __powers_ CF4D                            ringBufferLUT@userID 02D3  
                              _Temp_ADC_Offset 02F7                          i2_writeDoubleToEEPROM A5B6  
                  DATAEE_WriteByte@GIEBitValue 011A                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 0068  
                                   strcpy@from 0119                                       _max_Irms 021B  
                               i2_isdigit$4252 0002                                _Temp_ADC_Result 01D2  
                                __size_of_acos 006E                                  __size_of_fabs 003C  
                            ??_TMR4_Initialize 011A                                  __size_of_atan 0236  
                                __size_of_asin 0304                                  __size_of_atoi 00D8  
                                __size_of_main 013E                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 02C8             __size_of_ADCPostProcessingCallback 0ADA  
                                OLED_Clear@col 013C                           __end_ofi2__div_to_l_ 8B9E  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                                OLED_Clear@row 013A                                i2__doprnt@width 00AB  
                            ??_DATAEE_ReadByte 0119                                  OLED_YX@Column 012D  
                         __CFG_WDTCWS$WDTCWS_7 000000                             OLED_PutChar@length 0136  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                         _I2C1_MasterTRBInsert 979E                       __size_of_TMR5_WriteTimer 001C  
                               OLED_PutChar@ch 0139                      ringBufferLUT@channel_name 029A  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion B172  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                 __doprnt@tmpval 0199  
                                  atan@coeff_a D30B                                    atan@coeff_b D337  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline B0C4  
                            i2___awmod@divisor 0003                        ?_dimmingOffTimeCallback 0001  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0074                                    _NVMCON1bits 000F77  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                              _OLED_I2C_Status 01E6                                       memmove@d 011F  
                                     memmove@n 011B                                       memmove@s 0121  
                                     scale@scl 0177                                      sqrt@tfrac 0076  
                           _EXT_INT_Initialize AF2A           __end_of_TMR6_DefaultInterruptHandler B1EA  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler B1E8  
         __end_of_ADCC_DefaultInterruptHandler B1F2          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler B1F0                                       intlevel1 0000  
                                     intlevel2 0000                                     _OLED_Clear A838  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                           _getMinorRevisionID ADE2                               __tdiv_to_l_@quot 0120  
                              i2___xxtofl@sign 000D                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 02CF  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                       __end_of_I2C1_MasterWrite A51C  
                            __CFG_CLKOUTEN$OFF 000000                 __size_of_I2C1_FunctionComplete 001A  
                          ?_EXT_INT_Initialize 0001                  __end_of_I2C1_FunctionComplete B024  
                        ?_I2C1_MasterTRBInsert 0117                                    _reset_cause 02FC  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 0237  
            __end_of_ADCPostProcessingCallback 4B42                                ??_TMR4_CallBack 0044  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 011D  
                                    strncpy@to 0117                         __size_of_INT0_CallBack 0024  
                     __size_of_TMR7_WriteTimer 0026                   ?_writeEnergyToEEPROMCallback 0001  
                                 ?_getDeviceID 0122                                       printf@ap 01B6  
                                     printf@pb 01B8                 __size_of_getCauseOfResetString 0030  
                __end_of_getCauseOfResetString ACB2                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult B07C                 ?_EUSART2_SetRxInterruptHandler 0117  
                     __size_of_I2C1_Initialize 0036                                   ?__tdiv_to_l_ 0117  
               __end_of_dimmingOffTimeCallback B054                         __size_of_EUSART2_Write 004A  
                          _EUSART2_Receive_ISR 96F2                                       sqrt@frac 0085  
       __end_of_INTERRUPT_InterruptManagerHigh 911E        __size_of_INTERRUPT_InterruptManagerHigh 9116  
               _INTERRUPT_InterruptManagerHigh 0008                                       sqrt@sign 0074  
                  getMajorRevisionID@REVID_RAW 0125                                       sqrt@root 0081  
                            ??_TMR7_Initialize 011A                                 _FVR_Initialize B1A8  
                         ??_EXT_INT_Initialize 011A                     ??_recoverSRAMMaxFromEEPROM 0123  
                                     strcat@cp 011B                                       strcat@to 0117  
                                   _SSP1DATPPS 000E1A                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 0117                                       strcmp@s2 0119  
                                   _SSP1CLKPPS 000E19                              ringBufferLUT@line 01BF  
                             ___lldiv@quotient 011F                        i2DATAEE_WriteByte@bData 0003  
                            ?i2_TMR5_StopTimer 0001                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                       _I2C1_MasterWriteTRBBuild A76C  
                            _getDeviceIDString A174                             ??i2_TMR5_StopTimer 0001  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                 _Total_Energy 00F0                     __size_ofi2_DATAEE_ReadByte 0018  
                       ?i2_writeDoubleToEEPROM 0005                                     _TX2STAbits 000EF6  
                                ___fladd@signs 0139                             ?_getDeviceIDString 0124  
        __end_of_INTERRUPT_InterruptManagerLow 00FE         __size_of_INTERRUPT_InterruptManagerLow 00E6  
                _INTERRUPT_InterruptManagerLow 0018                              ??_TMR5_StartTimer 0001  
               ??_ADCC_SetADTIInterruptHandler 011A                 __end_of_PIN_MANAGER_Initialize 957E  
                            ??_ADCC_Initialize 011A                         i2DATAEE_WriteByte@bAdd 0001  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 8B9E                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0012  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                           __size_of_I2C1_Stop 0040                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                            ??_getDeviceIDString 0126  
                            ?i2_TMR7_StopTimer 0001              _EUSART2_RxDefaultInterruptHandler 024D  
               __size_of_currentMeasuredToPeak 007C                               ??_TMR5_StopTimer 0117  
                __end_of_currentMeasuredToPeak 9DA4                   __size_of_ADCC_StopConversion 0004  
